"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const grpc_web_1 = require("@injectivelabs/grpc-web");
const exceptions_1 = require("@injectivelabs/exceptions");
const helpers_1 = require("../utils/helpers");
const grpc_1 = require("../utils/grpc");
if (!(0, helpers_1.isBrowser)()) {
    grpc_web_1.grpc.setDefaultTransport((0, grpc_1.getGrpcTransport)());
}
/**
 * @hidden
 */
class BaseGrpcConsumer {
    constructor(endpoint) {
        this.module = '';
        this.endpoint = endpoint;
    }
    request(request, service) {
        return new Promise((resolve, reject) => {
            grpc_web_1.grpc.unary(service, {
                request,
                host: this.endpoint,
                onEnd: (res) => {
                    const { statusMessage, status, message } = res;
                    if (status === grpc_web_1.grpc.Code.OK && message) {
                        return resolve(message);
                    }
                    return reject(new exceptions_1.GrpcUnaryRequestException(new Error(statusMessage || 'The request failed.'), {
                        code: status,
                        context: this.endpoint,
                        contextModule: this.module,
                    }));
                },
            });
        });
    }
}
exports.default = BaseGrpcConsumer;
//# sourceMappingURL=BaseGrpcConsumer.js.map