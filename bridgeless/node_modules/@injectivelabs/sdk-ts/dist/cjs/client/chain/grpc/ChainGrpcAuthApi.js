"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChainGrpcAuthApi = void 0;
const core_proto_ts_1 = require("@injectivelabs/core-proto-ts");
const pagination_1 = require("../../../utils/pagination");
const ChainGrpcAuthTransformer_1 = require("../transformers/ChainGrpcAuthTransformer");
const types_1 = require("../types");
const exceptions_1 = require("@injectivelabs/exceptions");
const BaseGrpcWebConsumer_1 = require("../../BaseGrpcWebConsumer");
/**
 * @category Chain Grpc API
 */
class ChainGrpcAuthApi {
    constructor(endpoint) {
        this.module = types_1.ChainModule.Auth;
        this.client = new core_proto_ts_1.CosmosAuthV1Beta1Query.QueryClientImpl((0, BaseGrpcWebConsumer_1.getGrpcWebImpl)(endpoint));
    }
    fetchModuleParams() {
        return __awaiter(this, void 0, void 0, function* () {
            const request = core_proto_ts_1.CosmosAuthV1Beta1Query.QueryParamsRequest.create();
            try {
                const response = yield this.client.Params(request);
                return ChainGrpcAuthTransformer_1.ChainGrpcAuthTransformer.moduleParamsResponseToModuleParams(response);
            }
            catch (e) {
                if (e instanceof core_proto_ts_1.CosmosAuthV1Beta1Query.GrpcWebError) {
                    throw new exceptions_1.GrpcUnaryRequestException(new Error(e.toString()), {
                        code: e.code,
                        contextModule: this.module,
                    });
                }
                throw new exceptions_1.GrpcUnaryRequestException(e);
            }
        });
    }
    fetchAccount(address) {
        return __awaiter(this, void 0, void 0, function* () {
            const request = core_proto_ts_1.CosmosAuthV1Beta1Query.QueryAccountRequest.create();
            request.address = address;
            try {
                const response = yield this.client.Account(request);
                return ChainGrpcAuthTransformer_1.ChainGrpcAuthTransformer.accountResponseToAccount(response);
            }
            catch (e) {
                if (e instanceof core_proto_ts_1.CosmosAuthV1Beta1Query.GrpcWebError) {
                    throw new exceptions_1.GrpcUnaryRequestException(new Error(e.toString()), {
                        code: e.code,
                        contextModule: this.module,
                    });
                }
                throw new exceptions_1.GrpcUnaryRequestException(e);
            }
        });
    }
    fetchAccounts(pagination) {
        return __awaiter(this, void 0, void 0, function* () {
            const request = core_proto_ts_1.CosmosAuthV1Beta1Query.QueryAccountsRequest.create();
            const paginationForRequest = (0, pagination_1.paginationRequestFromPagination)(pagination);
            if (paginationForRequest) {
                request.pagination = paginationForRequest;
            }
            try {
                const response = yield this.client.Accounts(request);
                return ChainGrpcAuthTransformer_1.ChainGrpcAuthTransformer.accountsResponseToAccounts(response);
            }
            catch (e) {
                if (e instanceof core_proto_ts_1.CosmosAuthV1Beta1Query.GrpcWebError) {
                    throw new exceptions_1.GrpcUnaryRequestException(new Error(e.toString()), {
                        code: e.code,
                        contextModule: this.module,
                    });
                }
                throw new exceptions_1.GrpcUnaryRequestException(e);
            }
        });
    }
}
exports.ChainGrpcAuthApi = ChainGrpcAuthApi;
//# sourceMappingURL=ChainGrpcAuthApi.js.map