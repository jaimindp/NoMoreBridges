export const getMappedTokensBySymbol = (tokens) => Object.keys(tokens).reduce((result, token) => {
    const tokenMeta = tokens[token];
    const symbolKey = token.toUpperCase();
    const symbol = tokenMeta.symbol?.toUpperCase();
    const symbolDiffs = symbol !== symbolKey;
    const existingKeys = Object.keys(result);
    let ibcResults = {};
    let cw20Results = {};
    let splResults = {};
    let evmResults = {};
    let erc20Results = {};
    let cw20sResults = {};
    if (tokenMeta.ibcs) {
        tokenMeta.ibcs.forEach(ibc => {
            if (ibc.baseDenom && !existingKeys.includes(ibc.baseDenom.toUpperCase())) {
                ibcResults[ibc.baseDenom.toUpperCase()] = tokenMeta;
            }
            if (ibc.symbol && !existingKeys.includes(ibc.symbol.toUpperCase())) {
                ibcResults[ibc.symbol.toUpperCase()] = tokenMeta;
            }
        });
    }
    if (tokenMeta.cw20s) {
        const cw20Maps = tokenMeta.cw20s.reduce((result, cw20) => {
            if (existingKeys.includes(cw20.symbol.toUpperCase())) {
                return result;
            }
            return {
                ...result,
                [cw20.symbol.toUpperCase()]: tokenMeta,
            };
        }, {});
        cw20sResults = {
            ...cw20Maps,
        };
    }
    if (tokenMeta.evm &&
        tokenMeta.evm.symbol &&
        !existingKeys.includes(tokenMeta.evm.symbol.toUpperCase())) {
        evmResults = {
            [tokenMeta.evm.symbol.toUpperCase()]: tokenMeta,
        };
    }
    if (tokenMeta.erc20 &&
        tokenMeta.erc20.symbol &&
        !existingKeys.includes(tokenMeta.erc20.symbol.toUpperCase())) {
        erc20Results = {
            [tokenMeta.erc20.symbol.toUpperCase()]: tokenMeta,
        };
    }
    return {
        ...result,
        ...splResults,
        ...evmResults,
        ...ibcResults,
        ...cw20Results,
        ...cw20sResults,
        ...erc20Results,
        ...(symbol && {
            [symbol.toUpperCase()]: tokenMeta,
        }),
        ...(symbolDiffs && {
            [symbolKey.toUpperCase()]: tokenMeta,
        }),
    };
}, {});
//# sourceMappingURL=mapBySymbol.js.map