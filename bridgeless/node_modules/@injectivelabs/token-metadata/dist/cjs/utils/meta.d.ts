import { Token, IbcToken, TokenBase, TokenType, Cw20TokenMetaWithSource } from '../types';
/** @deprecated - use getTokenInfo */
export declare const getTokenTypeFromDenom: (denom: string) => TokenType.Ibc | TokenType.Cw20 | TokenType.Erc20 | TokenType.Native | TokenType.TokenFactory | TokenType.InsuranceFund;
/** @deprecated - use getTokenInfo */
export declare const getTokenSymbol: (token: Token) => string;
/** @deprecated - use getTokenInfo */
export declare const getTokenLogo: (token: Token) => string;
/** @deprecated - use getTokenInfo */
export declare const getTokenName: (token: Token) => string;
/** @deprecated - use getTokenInfo */
export declare const getTokenDecimals: (token: Token) => number;
/** @deprecated - use getTokenInfo */
export declare const getTokenAddress: (token: Token) => string | undefined;
export declare const getTokenInfo: (token: TokenBase) => {
    symbol: string | undefined;
    name: string | undefined;
    logo: string | undefined;
    decimals: number | undefined;
    coinGeckoId: string | undefined;
    cw20: Cw20TokenMetaWithSource;
    tokenType: TokenType;
    tokenFactory?: undefined;
} | {
    symbol: string;
    name: string;
    logo: string;
    decimals: number;
    coinGeckoId: string | undefined;
    tokenFactory: import("../types").NativeTokenFactoryMeta | undefined;
    tokenType: TokenType;
    cw20?: undefined;
} | {
    symbol: string;
    name: string;
    logo: string;
    decimals: string | number;
    coinGeckoId: string | undefined;
    tokenType: TokenType;
    cw20?: undefined;
    tokenFactory?: undefined;
} | {
    symbol: string | undefined;
    name: string | undefined;
    logo: string | undefined;
    decimals: number;
    coinGeckoId: string | number;
    tokenType: TokenType;
    cw20?: undefined;
    tokenFactory?: undefined;
};
export declare const getIbcTokenFromDenomTrace: ({ denomTrace, token, }: {
    token: Token;
    denomTrace: {
        path: string;
        baseDenom: string;
    };
}) => IbcToken;
//# sourceMappingURL=meta.d.ts.map