"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTokenFromMeta = exports.getTokenFromMetaIncludingIbcBaseDenoms = void 0;
const tokens_1 = require("../tokens/tokens");
const types_1 = require("../types");
const helpers_1 = require("./helpers");
const meta_1 = require("./meta");
/**
 * We only need to perform the base denom check
 * when we are getting token metadata
 * from symbol
 **/
const getTokenFromMetaIncludingIbcBaseDenoms = (meta, denom) => {
    var _a;
    const isBaseIbcDenom = tokens_1.ibcBaseDenoms.includes(denom || '') || ((_a = meta.ibcs) === null || _a === void 0 ? void 0 : _a.find(ibc => ibc.baseDenom.includes(denom || '')));
    const tokenMeta = (0, exports.getTokenFromMeta)(meta, denom);
    const token = Object.assign(Object.assign({}, meta), { denom: denom || '' });
    return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, token), (0, meta_1.getTokenInfo)(token)), { tokenType: isBaseIbcDenom ? types_1.TokenType.Ibc : tokenMeta.tokenType, denom: denom || '' }), (token.cw20s && { cw20: (0, helpers_1.getCw20Meta)(token) })), (token.ibcs && { ibc: (0, helpers_1.getIbcMeta)(token) }));
};
exports.getTokenFromMetaIncludingIbcBaseDenoms = getTokenFromMetaIncludingIbcBaseDenoms;
const getTokenFromMeta = (meta, denom) => {
    const token = Object.assign(Object.assign({}, meta), { denom: denom || '' });
    const tokenInfo = (0, meta_1.getTokenInfo)(token);
    return Object.assign(Object.assign(Object.assign(Object.assign({}, token), tokenInfo), (token.cw20s && { cw20: (0, helpers_1.getCw20Meta)(token) })), (token.ibcs && { ibc: (0, helpers_1.getIbcMeta)(token) }));
};
exports.getTokenFromMeta = getTokenFromMeta;
//# sourceMappingURL=token.js.map