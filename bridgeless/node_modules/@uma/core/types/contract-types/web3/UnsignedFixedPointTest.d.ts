/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract,
} from "./types";

interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export interface UnsignedFixedPointTest extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): UnsignedFixedPointTest;
  clone(): UnsignedFixedPointTest;
  methods: {
    wrapAdd(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<string>;

    wrapDiv(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<string>;

    wrapDivCeil(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<string>;

    wrapFromUnscaledUint(
      a: number | string | BN
    ): NonPayableTransactionObject<string>;

    wrapIsEqual(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<boolean>;

    wrapIsGreaterThan(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<boolean>;

    wrapIsGreaterThanOrEqual(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<boolean>;

    wrapIsLessThan(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<boolean>;

    wrapIsLessThanOrEqual(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<boolean>;

    wrapMax(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<string>;

    wrapMin(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<string>;

    wrapMixedAdd(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<string>;

    wrapMixedDiv(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<string>;

    wrapMixedDivCeil(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<string>;

    wrapMixedDivOpposite(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<string>;

    wrapMixedIsEqual(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<boolean>;

    wrapMixedIsGreaterThan(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<boolean>;

    wrapMixedIsGreaterThanOpposite(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<boolean>;

    wrapMixedIsGreaterThanOrEqual(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<boolean>;

    wrapMixedIsGreaterThanOrEqualOpposite(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<boolean>;

    wrapMixedIsLessThan(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<boolean>;

    wrapMixedIsLessThanOpposite(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<boolean>;

    wrapMixedIsLessThanOrEqual(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<boolean>;

    wrapMixedIsLessThanOrEqualOpposite(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<boolean>;

    wrapMixedMul(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<string>;

    wrapMixedMulCeil(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<string>;

    wrapMixedSub(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<string>;

    wrapMixedSubOpposite(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<string>;

    wrapMul(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<string>;

    wrapMulCeil(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<string>;

    wrapPow(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<string>;

    wrapSub(
      a: number | string | BN,
      b: number | string | BN
    ): NonPayableTransactionObject<string>;
  };
  events: {
    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };
}
