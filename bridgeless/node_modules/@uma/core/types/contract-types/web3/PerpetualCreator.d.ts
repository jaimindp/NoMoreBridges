/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract,
} from "./types";

interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export type CreatedConfigStore = ContractEventLog<{
  configStoreAddress: string;
  ownerAddress: string;
  0: string;
  1: string;
}>;
export type CreatedPerpetual = ContractEventLog<{
  perpetualAddress: string;
  deployerAddress: string;
  0: string;
  1: string;
}>;

export interface PerpetualCreator extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): PerpetualCreator;
  clone(): PerpetualCreator;
  methods: {
    _getSyntheticDecimals(
      _collateralAddress: string
    ): NonPayableTransactionObject<string>;

    createPerpetual(
      params: [
        string,
        string | number[],
        string | number[],
        string,
        string,
        [number | string | BN],
        [number | string | BN],
        [number | string | BN],
        [number | string | BN],
        [number | string | BN],
        [number | string | BN],
        number | string | BN,
        number | string | BN
      ],
      configSettings: [
        number | string | BN,
        [number | string | BN],
        [number | string | BN],
        [number | string | BN],
        [number | string | BN],
        number | string | BN
      ]
    ): NonPayableTransactionObject<string>;

    getCurrentTime(): NonPayableTransactionObject<string>;

    setCurrentTime(
      time: number | string | BN
    ): NonPayableTransactionObject<void>;

    timerAddress(): NonPayableTransactionObject<string>;

    tokenFactoryAddress(): NonPayableTransactionObject<string>;
  };
  events: {
    CreatedConfigStore(cb?: Callback<CreatedConfigStore>): EventEmitter;
    CreatedConfigStore(
      options?: EventOptions,
      cb?: Callback<CreatedConfigStore>
    ): EventEmitter;

    CreatedPerpetual(cb?: Callback<CreatedPerpetual>): EventEmitter;
    CreatedPerpetual(
      options?: EventOptions,
      cb?: Callback<CreatedPerpetual>
    ): EventEmitter;

    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };

  once(event: "CreatedConfigStore", cb: Callback<CreatedConfigStore>): void;
  once(
    event: "CreatedConfigStore",
    options: EventOptions,
    cb: Callback<CreatedConfigStore>
  ): void;

  once(event: "CreatedPerpetual", cb: Callback<CreatedPerpetual>): void;
  once(
    event: "CreatedPerpetual",
    options: EventOptions,
    cb: Callback<CreatedPerpetual>
  ): void;
}
