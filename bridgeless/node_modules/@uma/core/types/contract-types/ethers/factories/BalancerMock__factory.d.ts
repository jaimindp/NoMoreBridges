import { Signer, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BalancerMock, BalancerMockInterface } from "../BalancerMock";
export declare class BalancerMock__factory extends ContractFactory {
    constructor(...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<BalancerMock>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): BalancerMock;
    connect(signer: Signer): BalancerMock__factory;
    static readonly bytecode = "0x60806040526000805534801561001457600080fd5b50610112806100246000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80631446a7ff14603757806391b7f5ed14605c575b600080fd5b604a60423660046096565b505060005490565b60405190815260200160405180910390f35b606c606736600460c4565b600055565b005b803573ffffffffffffffffffffffffffffffffffffffff81168114609157600080fd5b919050565b6000806040838503121560a857600080fd5b60af83606e565b915060bb60208401606e565b90509250929050565b60006020828403121560d557600080fd5b503591905056fea2646970667358221220150a859ee3278d792d6ee432a30cca0783b4a5916747a98b2e2015864816229b64736f6c63430008100033";
    static readonly abi: {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    }[];
    static createInterface(): BalancerMockInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): BalancerMock;
}
