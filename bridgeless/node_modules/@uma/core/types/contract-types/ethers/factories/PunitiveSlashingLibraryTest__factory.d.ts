import { Signer, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PunitiveSlashingLibraryTest, PunitiveSlashingLibraryTestInterface } from "../PunitiveSlashingLibraryTest";
export declare class PunitiveSlashingLibraryTest__factory extends ContractFactory {
    constructor(...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<PunitiveSlashingLibraryTest>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): PunitiveSlashingLibraryTest;
    connect(signer: Signer): PunitiveSlashingLibraryTest__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b5061019a806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063273d1fd61461005157806348b440f31461007e57806358162b1a1461007e578063f63f43f61461007e575b600080fd5b61006461005f3660046100e0565b6100ab565b604080519283526020830191909152015b60405180910390f35b61009d61008c366004610132565b670dbd2fc137a30000949350505050565b604051908152602001610075565b600080826100c157670dbd2fc137a300006100cb565b670dbd2fc137a300005b97670dbd2fc137a30000975095505050505050565b600080600080600060a086880312156100f857600080fd5b853594506020860135935060408601359250606086013591506080860135801515811461012457600080fd5b809150509295509295909350565b6000806000806080858703121561014857600080fd5b505082359460208401359450604084013593606001359250905056fea26469706673582212203be0e26151cb84763f02addb13c4d6e3e3434f3230ce32e82c640ec816d4940664736f6c63430008100033";
    static readonly abi: {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    }[];
    static createInterface(): PunitiveSlashingLibraryTestInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): PunitiveSlashingLibraryTest;
}
