import { Signer, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DSAuth, DSAuthInterface } from "../DSAuth";
export declare class DSAuth__factory extends ContractFactory {
    constructor(...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<DSAuth>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): DSAuth;
    connect(signer: Signer): DSAuth__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b50600180546001600160a01b031916339081179091556040517fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9490600090a261040f8061005e6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806313af4035146100515780637a9e5e4b146100665780638da5cb5b14610079578063bf7e214f146100c2575b600080fd5b61006461005f366004610393565b6100e2565b005b610064610074366004610393565b610188565b6001546100999073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6000546100999073ffffffffffffffffffffffffffffffffffffffff1681565b610110336000357fffffffff000000000000000000000000000000000000000000000000000000001661022c565b61011957600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9490600090a250565b6101b6336000357fffffffff000000000000000000000000000000000000000000000000000000001661022c565b6101bf57600080fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316908117825560405190917f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada491a250565b60003073ffffffffffffffffffffffffffffffffffffffff84160361025357506001610368565b60015473ffffffffffffffffffffffffffffffffffffffff9081169084160361027e57506001610368565b60005473ffffffffffffffffffffffffffffffffffffffff166102a357506000610368565b6000546040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff00000000000000000000000000000000000000000000000000000000851660448301529091169063b700961390606401602060405180830381865afa158015610341573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036591906103b7565b90505b92915050565b73ffffffffffffffffffffffffffffffffffffffff8116811461039057600080fd5b50565b6000602082840312156103a557600080fd5b81356103b08161036e565b9392505050565b6000602082840312156103c957600080fd5b815180151581146103b057600080fdfea2646970667358221220d645174561797c5fed21c95805ce1064e8b436939ef60b6acadce3670bccc86e64736f6c63430008100033";
    static readonly abi: ({
        inputs: never[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
        name?: undefined;
        outputs?: undefined;
    } | {
        anonymous: boolean;
        inputs: {
            indexed: boolean;
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        stateMutability?: undefined;
        outputs?: undefined;
    } | {
        inputs: never[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: never[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
    })[];
    static createInterface(): DSAuthInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): DSAuth;
}
