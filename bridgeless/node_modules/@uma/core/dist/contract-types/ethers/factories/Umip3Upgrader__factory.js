"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Umip3Upgrader__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_existingGovernor",
                type: "address",
            },
            {
                internalType: "address",
                name: "_existingVoting",
                type: "address",
            },
            {
                internalType: "address",
                name: "_finder",
                type: "address",
            },
            {
                internalType: "address",
                name: "_voting",
                type: "address",
            },
            {
                internalType: "address",
                name: "_identifierWhitelist",
                type: "address",
            },
            {
                internalType: "address",
                name: "_store",
                type: "address",
            },
            {
                internalType: "address",
                name: "_financialContractsAdmin",
                type: "address",
            },
            {
                internalType: "address",
                name: "_registry",
                type: "address",
            },
            {
                internalType: "address",
                name: "_newGovernor",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "existingGovernor",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "existingVoting",
        outputs: [
            {
                internalType: "contract Voting",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "financialContractsAdmin",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "finder",
        outputs: [
            {
                internalType: "contract Finder",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "identifierWhitelist",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "newGovernor",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "registry",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "store",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "upgrade",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "voting",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5060405161099938038061099983398101604081905261002f916100eb565b600080546001600160a01b03199081166001600160a01b039b8c1617909155600180548216998b1699909917909855600380548916978a16979097179096556004805488169589169590951790945560058054871693881693909317909255600680548616918716919091179055600780548516918616919091179055600880548416918516919091179055600280549092169216919091179055610193565b80516001600160a01b03811681146100e657600080fd5b919050565b60008060008060008060008060006101208a8c03121561010a57600080fd5b6101138a6100cf565b985061012160208b016100cf565b975061012f60408b016100cf565b965061013d60608b016100cf565b955061014b60808b016100cf565b945061015960a08b016100cf565b935061016760c08b016100cf565b925061017560e08b016100cf565b91506101846101008b016100cf565b90509295985092959850929598565b6107f7806101a26000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063b9a3c84c11610076578063e84bf00c1161005b578063e84bf00c146101b6578063ebb4bfb0146101d6578063fce1ccca146101f657600080fd5b8063b9a3c84c1461018c578063d55ec697146101ac57600080fd5b80637b103999116100a75780637b1039991461012c5780638fd205771461014c578063975057e71461016c57600080fd5b8063679b721c146100c35780636a06d4691461010c575b600080fd5b6001546100e39073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6005546100e39073ffffffffffffffffffffffffffffffffffffffff1681565b6008546100e39073ffffffffffffffffffffffffffffffffffffffff1681565b6002546100e39073ffffffffffffffffffffffffffffffffffffffff1681565b6006546100e39073ffffffffffffffffffffffffffffffffffffffff1681565b6003546100e39073ffffffffffffffffffffffffffffffffffffffff1681565b6101b4610216565b005b6007546100e39073ffffffffffffffffffffffffffffffffffffffff1681565b6000546100e39073ffffffffffffffffffffffffffffffffffffffff1681565b6004546100e39073ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f557067726164652063616e206f6e6c7920626520696e6974696174656420627960448201527f20746865206578697374696e6720676f7665726e6f722e000000000000000000606482015260840160405180910390fd5b600354600480546040517f31f9665e0000000000000000000000000000000000000000000000000000000081527f4f7261636c6500000000000000000000000000000000000000000000000000009281019290925273ffffffffffffffffffffffffffffffffffffffff9081166024830152909116906331f9665e90604401600060405180830381600087803b15801561035a57600080fd5b505af115801561036e573d6000803e3d6000fd5b50506003546005546040517f31f9665e0000000000000000000000000000000000000000000000000000000081527f4964656e74696669657257686974656c69737400000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff9182166024820152911692506331f9665e9150604401600060405180830381600087803b15801561040757600080fd5b505af115801561041b573d6000803e3d6000fd5b50506003546006546040517f31f9665e0000000000000000000000000000000000000000000000000000000081527f53746f7265000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff9182166024820152911692506331f9665e9150604401600060405180830381600087803b1580156104b457600080fd5b505af11580156104c8573d6000803e3d6000fd5b50506003546007546040517f31f9665e0000000000000000000000000000000000000000000000000000000081527f46696e616e6369616c436f6e74726163747341646d696e000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff9182166024820152911692506331f9665e9150604401600060405180830381600087803b15801561056157600080fd5b505af1158015610575573d6000803e3d6000fd5b50506003546008546040517f31f9665e0000000000000000000000000000000000000000000000000000000081527f5265676973747279000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff9182166024820152911692506331f9665e9150604401600060405180830381600087803b15801561060e57600080fd5b505af1158015610622573d6000803e3d6000fd5b50506003546002546040517ff2fde38b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201529116925063f2fde38b9150602401600060405180830381600087803b15801561069557600080fd5b505af11580156106a9573d6000803e3d6000fd5b5050600154600480546040517f2960b5af00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff918216928101929092529091169250632960b5af9150602401600060405180830381600087803b15801561072057600080fd5b505af1158015610734573d6000803e3d6000fd5b50506001546002546040517ff2fde38b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201529116925063f2fde38b9150602401600060405180830381600087803b1580156107a757600080fd5b505af11580156107bb573d6000803e3d6000fd5b5050505056fea264697066735822122050b5059a2505ffeb6f7e7b32c5d2e331abe764631ab5f6b205f0da45f08df19c64736f6c63430008100033";
class Umip3Upgrader__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(_existingGovernor, _existingVoting, _finder, _voting, _identifierWhitelist, _store, _financialContractsAdmin, _registry, _newGovernor, overrides) {
        return super.deploy(_existingGovernor, _existingVoting, _finder, _voting, _identifierWhitelist, _store, _financialContractsAdmin, _registry, _newGovernor, overrides || {});
    }
    getDeployTransaction(_existingGovernor, _existingVoting, _finder, _voting, _identifierWhitelist, _store, _financialContractsAdmin, _registry, _newGovernor, overrides) {
        return super.getDeployTransaction(_existingGovernor, _existingVoting, _finder, _voting, _identifierWhitelist, _store, _financialContractsAdmin, _registry, _newGovernor, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Umip3Upgrader__factory = Umip3Upgrader__factory;
Umip3Upgrader__factory.bytecode = _bytecode;
Umip3Upgrader__factory.abi = _abi;
