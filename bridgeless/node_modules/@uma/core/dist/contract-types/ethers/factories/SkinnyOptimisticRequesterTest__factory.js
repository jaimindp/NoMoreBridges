"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SkinnyOptimisticRequesterTest__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "contract SkinnyOptimisticOracle",
                name: "_optimisticOracle",
                type: "address",
            },
            {
                internalType: "contract FinderInterface",
                name: "_finderAddress",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "ancillaryData",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "expirationTimestamp",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "finder",
        outputs: [
            {
                internalType: "contract FinderInterface",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "identifier",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_identifier",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "_timestamp",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "_ancillaryData",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "proposer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "disputer",
                        type: "address",
                    },
                    {
                        internalType: "contract IERC20",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "settled",
                        type: "bool",
                    },
                    {
                        internalType: "int256",
                        name: "proposedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "int256",
                        name: "resolvedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "uint256",
                        name: "expirationTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "reward",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "finalFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "bond",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "customLiveness",
                        type: "uint256",
                    },
                ],
                internalType: "struct SkinnyOptimisticOracleInterface.Request",
                name: "_request",
                type: "tuple",
            },
        ],
        name: "priceDisputed",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_identifier",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "_timestamp",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "_ancillaryData",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "proposer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "disputer",
                        type: "address",
                    },
                    {
                        internalType: "contract IERC20",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "settled",
                        type: "bool",
                    },
                    {
                        internalType: "int256",
                        name: "proposedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "int256",
                        name: "resolvedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "uint256",
                        name: "expirationTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "reward",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "finalFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "bond",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "customLiveness",
                        type: "uint256",
                    },
                ],
                internalType: "struct SkinnyOptimisticOracleInterface.Request",
                name: "_request",
                type: "tuple",
            },
        ],
        name: "priceProposed",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_identifier",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "_timestamp",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "_ancillaryData",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "proposer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "disputer",
                        type: "address",
                    },
                    {
                        internalType: "contract IERC20",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "settled",
                        type: "bool",
                    },
                    {
                        internalType: "int256",
                        name: "proposedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "int256",
                        name: "resolvedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "uint256",
                        name: "expirationTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "reward",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "finalFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "bond",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "customLiveness",
                        type: "uint256",
                    },
                ],
                internalType: "struct SkinnyOptimisticOracleInterface.Request",
                name: "_request",
                type: "tuple",
            },
        ],
        name: "priceSettled",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "request",
        outputs: [
            {
                internalType: "address",
                name: "proposer",
                type: "address",
            },
            {
                internalType: "address",
                name: "disputer",
                type: "address",
            },
            {
                internalType: "contract IERC20",
                name: "currency",
                type: "address",
            },
            {
                internalType: "bool",
                name: "settled",
                type: "bool",
            },
            {
                internalType: "int256",
                name: "proposedPrice",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "resolvedPrice",
                type: "int256",
            },
            {
                internalType: "uint256",
                name: "expirationTime",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "reward",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "finalFee",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "bond",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "customLiveness",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_identifier",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "_timestamp",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "_ancillaryData",
                type: "bytes",
            },
            {
                internalType: "contract IERC20",
                name: "currency",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "reward",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "bond",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "customLiveness",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "proposer",
                type: "address",
            },
            {
                internalType: "int256",
                name: "proposedPrice",
                type: "int256",
            },
        ],
        name: "requestAndProposePriceFor",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_identifier",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "_timestamp",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "_ancillaryData",
                type: "bytes",
            },
            {
                internalType: "contract IERC20",
                name: "currency",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "reward",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "bond",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "customLiveness",
                type: "uint256",
            },
        ],
        name: "requestPrice",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_expirationTimestamp",
                type: "uint256",
            },
        ],
        name: "setExpirationTimestamp",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bool",
                name: "_shouldRevert",
                type: "bool",
            },
        ],
        name: "setRevert",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "shouldRevert",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "timestamp",
        outputs: [
            {
                internalType: "uint32",
                name: "",
                type: "uint32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60806040526000805460ff60a01b1916905534801561001d57600080fd5b5060405161124438038061124483398101604081905261003c91610085565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100bf565b6001600160a01b038116811461008257600080fd5b50565b6000806040838503121561009857600080fd5b82516100a38161006d565b60208401519092506100b48161006d565b809150509250929050565b611176806100ce6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638fb5f1711161008c578063b80777ea11610066578063b80777ea14610299578063b9a3c84c146102be578063d3072d8214610303578063d62284071461033857600080fd5b80638fb5f171146102255780639f43ddd21461027d578063af355d1e1461028657600080fd5b806365599057116100c857806365599057146101f9578063724f1814146101045780637998a1c41461020e578063827e7f3e1461010457600080fd5b806304f44181146100ef57806311bad40a14610104578063338cdca114610117575b600080fd5b6101026100fd366004610970565b600f55565b005b610102610112366004610aef565b61034b565b600554600654600754600854600954600a54600b54600c54600d54600e546101839973ffffffffffffffffffffffffffffffffffffffff90811699811698908116977401000000000000000000000000000000000000000090910460ff1696909590949093909290918b565b6040805173ffffffffffffffffffffffffffffffffffffffff9c8d1681529a8c1660208c015298909a16978901979097529415156060880152608087019390935260a086019190915260c085015260e0840152610100830152610120820152610140810191909152610160015b60405180910390f35b6102016104a6565b6040516101f09190610c7e565b61021760025481565b6040519081526020016101f0565b610102610233366004610c91565b6000805491151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff909216919091179055565b610217600f5481565b610102610294366004610cb5565b610534565b6003546102a99063ffffffff1681565b60405163ffffffff90911681526020016101f0565b6001546102de9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101f0565b6000546103289074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020016101f0565b610102610346366004610d5b565b610756565b60005474010000000000000000000000000000000000000000900460ff161561037357600080fd5b6002849055600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff851617905560046103b48382610e82565b5080516005805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617909155602083015160068054918416919092161790556040820151600780546060850151151574010000000000000000000000000000000000000000027fffffffffffffffffffffff0000000000000000000000000000000000000000009091169290931691909117919091179055608081015160085560a081015160095560c0810151600a5560e0810151600b55610100810151600c55610120810151600d556101400151600e55505050565b600480546104b390610de0565b80601f01602080910402602001604051908101604052809291908181526020018280546104df90610de0565b801561052c5780601f106105015761010080835404028352916020019161052c565b820191906000526020600020905b81548152906001019060200180831161050f57829003601f168201915b505050505081565b600061053e6108a3565b6040517f5b97aadd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff89811660048301529190911690635b97aadd90602401602060405180830381865afa1580156105ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d09190610f9c565b5160005490915073ffffffffffffffffffffffffffffffffffffffff8089169163095ea7b3911661060b846106058b8b61095b565b9061095b565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015260248201526044016020604051808303816000875af115801561067b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069f9190610fde565b506000546040517faf355d1e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063af355d1e90610706908d908d908d908d908d908d908d908d908d90600401610ffb565b6020604051808303816000875af1158015610725573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610749919061106f565b5050505050505050505050565b6000546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182166004820152602481018590529085169063095ea7b3906044016020604051808303816000875af11580156107cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f39190610fde565b506000546040517fd622840700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063d622840790610856908a908a908a908a908a908a908a90600401611088565b6020604051808303816000875af1158015610875573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610899919061106f565b5050505050505050565b6001546040517faafd5e400000000000000000000000000000000000000000000000000000000081527f53746f7265000000000000000000000000000000000000000000000000000000600482015260009173ffffffffffffffffffffffffffffffffffffffff169063aafd5e4090602401602060405180830381865afa158015610932573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095691906110e9565b905090565b60006109678284611106565b90505b92915050565b60006020828403121561098257600080fd5b5035919050565b803563ffffffff8116811461099d57600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610160810167ffffffffffffffff811182821017156109f5576109f56109a2565b60405290565b600082601f830112610a0c57600080fd5b813567ffffffffffffffff80821115610a2757610a276109a2565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715610a6d57610a6d6109a2565b81604052838152866020858801011115610a8657600080fd5b836020870160208301376000602085830101528094505050505092915050565b73ffffffffffffffffffffffffffffffffffffffff81168114610ac857600080fd5b50565b803561099d81610aa6565b8015158114610ac857600080fd5b803561099d81610ad6565b6000806000808486036101c0811215610b0757600080fd5b85359450610b1760208701610989565b9350604086013567ffffffffffffffff811115610b3357600080fd5b610b3f888289016109fb565b935050610160807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa083011215610b7457600080fd5b610b7c6109d1565b9150610b8a60608801610acb565b8252610b9860808801610acb565b6020830152610ba960a08801610acb565b6040830152610bba60c08801610ae4565b606083015260e087013560808301526101008088013560a08401526101208089013560c0850152610140808a013560e0860152838a0135838601526101808a0135828601526101a08a013581860152505050508091505092959194509250565b6000815180845260005b81811015610c4057602081850181015186830182015201610c24565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6020815260006109676020830184610c1a565b600060208284031215610ca357600080fd5b8135610cae81610ad6565b9392505050565b60008060008060008060008060006101208a8c031215610cd457600080fd5b89359850610ce460208b01610989565b975060408a013567ffffffffffffffff811115610d0057600080fd5b610d0c8c828d016109fb565b97505060608a0135610d1d81610aa6565b955060808a0135945060a08a0135935060c08a0135925060e08a0135610d4281610aa6565b809250506101008a013590509295985092959850929598565b600080600080600080600060e0888a031215610d7657600080fd5b87359650610d8660208901610989565b9550604088013567ffffffffffffffff811115610da257600080fd5b610dae8a828b016109fb565b9550506060880135610dbf81610aa6565b9699959850939660808101359560a0820135955060c0909101359350915050565b600181811c90821680610df457607f821691505b602082108103610e2d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f821115610e7d57600081815260208120601f850160051c81016020861015610e5a5750805b601f850160051c820191505b81811015610e7957828155600101610e66565b5050505b505050565b815167ffffffffffffffff811115610e9c57610e9c6109a2565b610eb081610eaa8454610de0565b84610e33565b602080601f831160018114610f035760008415610ecd5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555610e79565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015610f5057888601518255948401946001909101908401610f31565b5085821015610f8c57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215610fae57600080fd5b6040516020810181811067ffffffffffffffff82111715610fd157610fd16109a2565b6040529151825250919050565b600060208284031215610ff057600080fd5b8151610cae81610ad6565b60006101208b835263ffffffff8b1660208401528060408401526110218184018b610c1a565b73ffffffffffffffffffffffffffffffffffffffff998a1660608501526080840198909852505060a081019490945260c084019290925290931660e082015261010001919091529392505050565b60006020828403121561108157600080fd5b5051919050565b87815263ffffffff8716602082015260e0604082015260006110ad60e0830188610c1a565b905073ffffffffffffffffffffffffffffffffffffffff861660608301528460808301528360a08301528260c083015298975050505050505050565b6000602082840312156110fb57600080fd5b8151610cae81610aa6565b8082018082111561096a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220a4cebda5a142202c1797015b43be304136efaf49c7d7e61a81be58f3c1e6989564736f6c63430008100033";
class SkinnyOptimisticRequesterTest__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(_optimisticOracle, _finderAddress, overrides) {
        return super.deploy(_optimisticOracle, _finderAddress, overrides || {});
    }
    getDeployTransaction(_optimisticOracle, _finderAddress, overrides) {
        return super.getDeployTransaction(_optimisticOracle, _finderAddress, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.SkinnyOptimisticRequesterTest__factory = SkinnyOptimisticRequesterTest__factory;
SkinnyOptimisticRequesterTest__factory.bytecode = _bytecode;
SkinnyOptimisticRequesterTest__factory.abi = _abi;
