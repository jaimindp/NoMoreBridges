"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OptimisticStaker__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "contract OptimisticRewarderBase",
                name: "_optimisticRewarder",
                type: "address",
            },
            {
                internalType: "contract IERC20",
                name: "_stakedToken",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "Deposit",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "Withdraw",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "balances",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "deposit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "depositFor",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "depositNew",
        outputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
            },
        ],
        name: "multicall",
        outputs: [
            {
                internalType: "bytes[]",
                name: "results",
                type: "bytes[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "optimisticRewarder",
        outputs: [
            {
                internalType: "contract OptimisticRewarderBase",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "stakedToken",
        outputs: [
            {
                internalType: "contract IERC20",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "withdraw",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b506040516114b13803806114b183398101604081905261002f91610086565b6000805460016001600160a81b03199091166101006001600160a01b039586160217811790915580546001600160a01b031916919092161790556100c0565b6001600160a01b038116811461008357600080fd5b50565b6000806040838503121561009957600080fd5b82516100a48161006e565b60208401519092506100b58161006e565b809150509250929050565b6113e2806100cf6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063ac9650d81161005b578063ac9650d814610132578063cc7a262e14610152578063e2bbb15814610172578063f02844eb1461018557600080fd5b80630ec84dda1461008d578063441a3e70146100a25780634903b0d1146100b55780637700d460146100e8575b600080fd5b6100a061009b366004610e9e565b610198565b005b6100a06100b0366004610e9e565b61020b565b6100d56100c3366004610ec0565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b60005461010d90610100900473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100df565b610145610140366004610ed9565b6104a6565b6040516100df9190610fbc565b60015461010d9073ffffffffffffffffffffffffffffffffffffffff1681565b6100a0610180366004610e9e565b610618565b6100d5610193366004610ec0565b6107a8565b6101a06108c0565b6101cd600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b6101d7828261092e565b610207600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b5050565b6102136108c0565b610240600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b6000546040517f6352211e0000000000000000000000000000000000000000000000000000000081528391339161010090910473ffffffffffffffffffffffffffffffffffffffff1690636352211e906102a290859060040190815260200190565b602060405180830381865afa1580156102bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e3919061103c565b73ffffffffffffffffffffffffffffffffffffffff1614610365576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f63616c6c657220213d20746f6b656e206f776e6572000000000000000000000060448201526064015b60405180910390fd5b600083815260026020526040812080548492906103839084906110a8565b90915550506001546103ac9073ffffffffffffffffffffffffffffffffffffffff163384610a43565b600080546040517f814252ee00000000000000000000000000000000000000000000000000000000815261010090910473ffffffffffffffffffffffffffffffffffffffff169163814252ee91610409918791369060040161110a565b600060405180830381600087803b15801561042357600080fd5b505af1158015610437573d6000803e3d6000fd5b50505050827f56ca301a9219608c91e7bcee90e083c19671d2cdcc96752c7af291cee5f9c8c88360405161046d91815260200190565b60405180910390a250610207600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60608167ffffffffffffffff8111156104c1576104c161112d565b6040519080825280602002602001820160405280156104f457816020015b60608152602001906001900390816104df5790505b50905060005b8281101561061157600080308686858181106105185761051861115c565b905060200281019061052a919061118b565b6040516105389291906111f7565b600060405180830381855af49150503d8060008114610573576040519150601f19603f3d011682016040523d82523d6000602084013e610578565b606091505b5091509150816105de5760448151101561059157600080fd5b600481019050808060200190518101906105ab9190611207565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035c91906112c7565b808484815181106105f1576105f161115c565b602002602001018190525050508080610609906112da565b9150506104fa565b5092915050565b6106206108c0565b61064d600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b6000546040517f6352211e0000000000000000000000000000000000000000000000000000000081528391339161010090910473ffffffffffffffffffffffffffffffffffffffff1690636352211e906106af90859060040190815260200190565b602060405180830381865afa1580156106cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f0919061103c565b73ffffffffffffffffffffffffffffffffffffffff161461076d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f63616c6c657220213d20746f6b656e206f776e65720000000000000000000000604482015260640161035c565b610777838361092e565b50610207600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60006107b26108c0565b6107df600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b600080546040517fb510391f00000000000000000000000000000000000000000000000000000000815261010090910473ffffffffffffffffffffffffffffffffffffffff169163b510391f9161083c9133913690600401611312565b6020604051808303816000875af115801561085b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087f9190611342565b905061088b818361092e565b6108bb600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b919050565b60005460ff1661092c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161035c565b565b6000828152600260205260408120805483929061094c90849061135b565b90915550506001546109769073ffffffffffffffffffffffffffffffffffffffff16333084610b1c565b600080546040517f814252ee00000000000000000000000000000000000000000000000000000000815261010090910473ffffffffffffffffffffffffffffffffffffffff169163814252ee916109d3918691369060040161110a565b600060405180830381600087803b1580156109ed57600080fd5b505af1158015610a01573d6000803e3d6000fd5b50505050817fa3af609bf46297028ce551832669030f9effef2b02606d02cbbcc40fe6b47c5582604051610a3791815260200190565b60405180910390a25050565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610b179084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610b80565b505050565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610b7a9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401610a95565b50505050565b6000610be2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610c8f9092919063ffffffff16565b9050805160001480610c03575080806020019051810190610c03919061136e565b610b17576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161035c565b6060610c9e8484600085610ca6565b949350505050565b606082471015610d38576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161035c565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610d619190611390565b60006040518083038185875af1925050503d8060008114610d9e576040519150601f19603f3d011682016040523d82523d6000602084013e610da3565b606091505b5091509150610db487838387610dbf565b979650505050505050565b60608315610e55578251600003610e4e5773ffffffffffffffffffffffffffffffffffffffff85163b610e4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161035c565b5081610c9e565b610c9e8383815115610e6a5781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035c91906112c7565b60008060408385031215610eb157600080fd5b50508035926020909101359150565b600060208284031215610ed257600080fd5b5035919050565b60008060208385031215610eec57600080fd5b823567ffffffffffffffff80821115610f0457600080fd5b818501915085601f830112610f1857600080fd5b813581811115610f2757600080fd5b8660208260051b8501011115610f3c57600080fd5b60209290920196919550909350505050565b60005b83811015610f69578181015183820152602001610f51565b50506000910152565b60008151808452610f8a816020860160208601610f4e565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561102f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088860301845261101d858351610f72565b94509285019290850190600101610fe3565b5092979650505050505050565b60006020828403121561104e57600080fd5b815173ffffffffffffffffffffffffffffffffffffffff8116811461107257600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156110bb576110bb611079565b92915050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b8381526040602082015260006111246040830184866110c1565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126111c057600080fd5b83018035915067ffffffffffffffff8211156111db57600080fd5b6020019150368190038213156111f057600080fd5b9250929050565b8183823760009101908152919050565b60006020828403121561121957600080fd5b815167ffffffffffffffff8082111561123157600080fd5b818401915084601f83011261124557600080fd5b8151818111156112575761125761112d565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561129d5761129d61112d565b816040528281528760208487010111156112b657600080fd5b610db4836020830160208801610f4e565b6020815260006110726020830184610f72565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361130b5761130b611079565b5060010190565b73ffffffffffffffffffffffffffffffffffffffff841681526040602082015260006111246040830184866110c1565b60006020828403121561135457600080fd5b5051919050565b808201808211156110bb576110bb611079565b60006020828403121561138057600080fd5b8151801515811461107257600080fd5b600082516113a2818460208701610f4e565b919091019291505056fea2646970667358221220d82875e73ec0f85443cad128efd03f1a29c219e98fcd61764d6d697edc7ee65e64736f6c63430008100033";
class OptimisticStaker__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(_optimisticRewarder, _stakedToken, overrides) {
        return super.deploy(_optimisticRewarder, _stakedToken, overrides || {});
    }
    getDeployTransaction(_optimisticRewarder, _stakedToken, overrides) {
        return super.getDeployTransaction(_optimisticRewarder, _stakedToken, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.OptimisticStaker__factory = OptimisticStaker__factory;
OptimisticStaker__factory.bytecode = _bytecode;
OptimisticStaker__factory.abi = _abi;
