"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SkinnyOptimisticOracle__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_liveness",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_finderAddress",
                type: "address",
            },
            {
                internalType: "address",
                name: "_timerAddress",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "requester",
                type: "address",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "proposer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "disputer",
                        type: "address",
                    },
                    {
                        internalType: "contract IERC20",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "settled",
                        type: "bool",
                    },
                    {
                        internalType: "int256",
                        name: "proposedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "int256",
                        name: "resolvedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "uint256",
                        name: "expirationTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "reward",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "finalFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "bond",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "customLiveness",
                        type: "uint256",
                    },
                ],
                indexed: false,
                internalType: "struct SkinnyOptimisticOracleInterface.Request",
                name: "request",
                type: "tuple",
            },
        ],
        name: "DisputePrice",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "requester",
                type: "address",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "proposer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "disputer",
                        type: "address",
                    },
                    {
                        internalType: "contract IERC20",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "settled",
                        type: "bool",
                    },
                    {
                        internalType: "int256",
                        name: "proposedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "int256",
                        name: "resolvedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "uint256",
                        name: "expirationTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "reward",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "finalFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "bond",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "customLiveness",
                        type: "uint256",
                    },
                ],
                indexed: false,
                internalType: "struct SkinnyOptimisticOracleInterface.Request",
                name: "request",
                type: "tuple",
            },
        ],
        name: "ProposePrice",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "requester",
                type: "address",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "proposer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "disputer",
                        type: "address",
                    },
                    {
                        internalType: "contract IERC20",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "settled",
                        type: "bool",
                    },
                    {
                        internalType: "int256",
                        name: "proposedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "int256",
                        name: "resolvedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "uint256",
                        name: "expirationTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "reward",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "finalFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "bond",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "customLiveness",
                        type: "uint256",
                    },
                ],
                indexed: false,
                internalType: "struct SkinnyOptimisticOracleInterface.Request",
                name: "request",
                type: "tuple",
            },
        ],
        name: "RequestPrice",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "requester",
                type: "address",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "proposer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "disputer",
                        type: "address",
                    },
                    {
                        internalType: "contract IERC20",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "settled",
                        type: "bool",
                    },
                    {
                        internalType: "int256",
                        name: "proposedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "int256",
                        name: "resolvedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "uint256",
                        name: "expirationTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "reward",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "finalFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "bond",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "customLiveness",
                        type: "uint256",
                    },
                ],
                indexed: false,
                internalType: "struct SkinnyOptimisticOracleInterface.Request",
                name: "request",
                type: "tuple",
            },
        ],
        name: "Settle",
        type: "event",
    },
    {
        inputs: [],
        name: "ancillaryBytesLimit",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "defaultLiveness",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "requester",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "proposer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "disputer",
                        type: "address",
                    },
                    {
                        internalType: "contract IERC20",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "settled",
                        type: "bool",
                    },
                    {
                        internalType: "int256",
                        name: "proposedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "int256",
                        name: "resolvedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "uint256",
                        name: "expirationTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "reward",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "finalFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "bond",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "customLiveness",
                        type: "uint256",
                    },
                ],
                internalType: "struct SkinnyOptimisticOracleInterface.Request",
                name: "request",
                type: "tuple",
            },
        ],
        name: "disputePrice",
        outputs: [
            {
                internalType: "uint256",
                name: "totalBond",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "proposer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "disputer",
                        type: "address",
                    },
                    {
                        internalType: "contract IERC20",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "settled",
                        type: "bool",
                    },
                    {
                        internalType: "int256",
                        name: "proposedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "int256",
                        name: "resolvedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "uint256",
                        name: "expirationTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "reward",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "finalFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "bond",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "customLiveness",
                        type: "uint256",
                    },
                ],
                internalType: "struct SkinnyOptimisticOracleInterface.Request",
                name: "request",
                type: "tuple",
            },
            {
                internalType: "address",
                name: "disputer",
                type: "address",
            },
            {
                internalType: "address",
                name: "requester",
                type: "address",
            },
        ],
        name: "disputePriceFor",
        outputs: [
            {
                internalType: "uint256",
                name: "totalBond",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "finder",
        outputs: [
            {
                internalType: "contract FinderInterface",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getCurrentTime",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "requester",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "proposer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "disputer",
                        type: "address",
                    },
                    {
                        internalType: "contract IERC20",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "settled",
                        type: "bool",
                    },
                    {
                        internalType: "int256",
                        name: "proposedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "int256",
                        name: "resolvedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "uint256",
                        name: "expirationTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "reward",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "finalFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "bond",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "customLiveness",
                        type: "uint256",
                    },
                ],
                internalType: "struct SkinnyOptimisticOracleInterface.Request",
                name: "request",
                type: "tuple",
            },
        ],
        name: "getState",
        outputs: [
            {
                internalType: "enum OptimisticOracleInterface.State",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "requester",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "proposer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "disputer",
                        type: "address",
                    },
                    {
                        internalType: "contract IERC20",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "settled",
                        type: "bool",
                    },
                    {
                        internalType: "int256",
                        name: "proposedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "int256",
                        name: "resolvedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "uint256",
                        name: "expirationTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "reward",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "finalFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "bond",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "customLiveness",
                        type: "uint256",
                    },
                ],
                internalType: "struct SkinnyOptimisticOracleInterface.Request",
                name: "request",
                type: "tuple",
            },
        ],
        name: "hasPrice",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "requester",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "proposer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "disputer",
                        type: "address",
                    },
                    {
                        internalType: "contract IERC20",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "settled",
                        type: "bool",
                    },
                    {
                        internalType: "int256",
                        name: "proposedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "int256",
                        name: "resolvedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "uint256",
                        name: "expirationTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "reward",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "finalFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "bond",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "customLiveness",
                        type: "uint256",
                    },
                ],
                internalType: "struct SkinnyOptimisticOracleInterface.Request",
                name: "request",
                type: "tuple",
            },
            {
                internalType: "int256",
                name: "proposedPrice",
                type: "int256",
            },
        ],
        name: "proposePrice",
        outputs: [
            {
                internalType: "uint256",
                name: "totalBond",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "requester",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "proposer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "disputer",
                        type: "address",
                    },
                    {
                        internalType: "contract IERC20",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "settled",
                        type: "bool",
                    },
                    {
                        internalType: "int256",
                        name: "proposedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "int256",
                        name: "resolvedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "uint256",
                        name: "expirationTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "reward",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "finalFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "bond",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "customLiveness",
                        type: "uint256",
                    },
                ],
                internalType: "struct SkinnyOptimisticOracleInterface.Request",
                name: "request",
                type: "tuple",
            },
            {
                internalType: "address",
                name: "proposer",
                type: "address",
            },
            {
                internalType: "int256",
                name: "proposedPrice",
                type: "int256",
            },
        ],
        name: "proposePriceFor",
        outputs: [
            {
                internalType: "uint256",
                name: "totalBond",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                internalType: "contract IERC20",
                name: "currency",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "reward",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "bond",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "customLiveness",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "proposer",
                type: "address",
            },
            {
                internalType: "int256",
                name: "proposedPrice",
                type: "int256",
            },
        ],
        name: "requestAndProposePriceFor",
        outputs: [
            {
                internalType: "uint256",
                name: "totalBond",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                internalType: "contract IERC20",
                name: "currency",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "reward",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "bond",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "customLiveness",
                type: "uint256",
            },
        ],
        name: "requestPrice",
        outputs: [
            {
                internalType: "uint256",
                name: "totalBond",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        name: "requests",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "time",
                type: "uint256",
            },
        ],
        name: "setCurrentTime",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "requester",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "proposer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "disputer",
                        type: "address",
                    },
                    {
                        internalType: "contract IERC20",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "settled",
                        type: "bool",
                    },
                    {
                        internalType: "int256",
                        name: "proposedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "int256",
                        name: "resolvedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "uint256",
                        name: "expirationTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "reward",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "finalFee",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "bond",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "customLiveness",
                        type: "uint256",
                    },
                ],
                internalType: "struct SkinnyOptimisticOracleInterface.Request",
                name: "request",
                type: "tuple",
            },
        ],
        name: "settle",
        outputs: [
            {
                internalType: "uint256",
                name: "payout",
                type: "uint256",
            },
            {
                internalType: "int256",
                name: "resolvedPrice",
                type: "int256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                internalType: "address",
                name: "requester",
                type: "address",
            },
        ],
        name: "stampAncillaryData",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "timerAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60806040523480156200001157600080fd5b5060405162003bba38038062003bba833981016040819052620000349162000149565b60008054600160a01b6001600160a01b038481166001600160a81b03199093169290921717909155600280546001600160a01b0319169184169190911790556200007e8362000089565b50506003556200018a565b63bb7448008110620000d75760405162461bcd60e51b81526020600482015260126024820152714c6976656e65737320746f6f206c6172676560701b60448201526064015b60405180910390fd5b60008111620001295760405162461bcd60e51b815260206004820152601460248201527f4c6976656e6573732063616e6e6f7420626520300000000000000000000000006044820152606401620000ce565b50565b80516001600160a01b03811681146200014457600080fd5b919050565b6000806000606084860312156200015f57600080fd5b8351925062000171602085016200012c565b915062000181604085016200012c565b90509250925092565b613a20806200019a6000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c8063a337e1ad116100b2578063b730539f11610081578063c371dda711610066578063c371dda7146102bf578063d6228407146102c8578063fe4e1983146102db57600080fd5b8063b730539f14610277578063b9a3c84c1461029f57600080fd5b8063a337e1ad1461020e578063af355d1e14610231578063af5d2f3914610244578063b1a166b21461026457600080fd5b806351205554116100ee57806351205554146101a857806393c44ef7146101c85780639ce320c8146101db5780639d866985146101ee57600080fd5b80631c39c38d1461012057806322f8e5661461016a57806329cb924d1461017f5780633a31577e14610195575b600080fd5b6000546101409073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61017d610178366004612f14565b6102e4565b005b61018761038d565b604051908152602001610161565b6101876101a3366004613140565b610445565b6101bb6101b6366004613140565b610461565b60405161016191906131ec565b6101876101d636600461322d565b6104eb565b6101876101e93660046132b3565b610509565b6101876101fc366004612f14565b60016020526000908152604090205481565b61022161021c366004613140565b610a31565b6040519015158152602001610161565b61018761023f366004613345565b610b28565b6102576102523660046133eb565b6112ed565b60405161016191906134ab565b6101876102723660046134be565b611302565b61028a610285366004613140565b6116c7565b60408051928352602083019190915201610161565b6002546101409073ffffffffffffffffffffffffffffffffffffffff1681565b61018761200081565b6101876102d636600461355b565b61175e565b61018760035481565b60005473ffffffffffffffffffffffffffffffffffffffff1661030657600080fd5b6000546040517f22f8e5660000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff909116906322f8e56690602401600060405180830381600087803b15801561037257600080fd5b505af1158015610386573d6000803e3d6000fd5b5050505050565b6000805473ffffffffffffffffffffffffffffffffffffffff16156104405760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166329cb924d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610417573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043b91906135e0565b905090565b504290565b600061045585858585338b610509565b90505b95945050505050565b600061046b611d5d565b610498600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b6104a58686868686611de3565b9050610458600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b60006104fc87878787873388611302565b90505b9695505050505050565b6000610513611d5d565b610540600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b73ffffffffffffffffffffffffffffffffffffffff83166105c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f64697370757465722061646472657373206d757374206265206e6f6e2030000060448201526064015b60405180910390fd5b60026105d18389898989611de3565b60068111156105e2576105e26131bd565b14610649576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f4d7573742062652070726f706f7365640000000000000000000000000000000060448201526064016105b9565b600061065783898989611f2b565b90506106638186611f65565b6000604051806101600160405280876000015173ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff168152602001876040015173ffffffffffffffffffffffffffffffffffffffff168152602001876060015115158152602001876080015181526020018760a0015181526020018760c0015181526020018760e00151815260200187610100015181526020018761012001518152602001876101400151815250905061072c828261200e565b6101008601516101208701516107419161202d565b925082156107705760408601516107709073ffffffffffffffffffffffffffffffffffffffff16333086612039565b600061077a61211b565b90506000610787836121cf565b905060006107a3828a610100015161202d90919063ffffffff16565b905080156108745760408901516107d19073ffffffffffffffffffffffffffffffffffffffff1684836121e3565b6107d961211b565b60408a810151815160208101835284815291517f8659d23200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182166004820152915160248301529190911690638659d23290604401600060405180830381600087803b15801561085b57600080fd5b505af115801561086f573d6000803e3d6000fd5b505050505b505061087e6122dc565b73ffffffffffffffffffffffffffffffffffffffff1663216666a48b8b6108a58c8a612353565b6040518463ffffffff1660e01b81526004016108c3939291906135f9565b600060405180830381600087803b1580156108dd57600080fd5b505af11580156108f1573d6000803e3d6000fd5b50505050898573ffffffffffffffffffffffffffffffffffffffff167f2d2ed23d7d2e875b405c36213cc1668e3adf8b4d845653bd9f977c313d599ffe8b8b86604051610940939291906136e6565b60405180910390a373ffffffffffffffffffffffffffffffffffffffff85163b156109ea576040517f11bad40a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8616906311bad40a906109bd908d908d908d908890600401613716565b600060405180830381600087803b1580156109d757600080fd5b505af19250505080156109e8575060015b505b5050506104ff600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b6000610a3b611d5d565b610a68600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b6000610a7687878787611f2b565b9050610a828184611f65565b6000610a918888888888611de3565b90506006816006811115610aa757610aa76131bd565b1480610ac457506005816006811115610ac257610ac26131bd565b145b80610ae057506003816006811115610ade57610ade6131bd565b145b92505050610458600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b6000610b32611d5d565b610b5f600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b6000610b6d338c8c8c611f2b565b60008181526001602052604090205490915015610be6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f5265717565737420616c726561647920696e697469616c697a6564000000000060448201526064016105b9565b73ffffffffffffffffffffffffffffffffffffffff8416610c63576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f70726f706f7365722061646472657373206d757374206265206e6f6e2030000060448201526064016105b9565b610c6b612395565b73ffffffffffffffffffffffffffffffffffffffff166390978d1b8c6040518263ffffffff1660e01b8152600401610ca591815260200190565b602060405180830381865afa158015610cc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce6919061374c565b610d4c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f556e737570706f72746564206964656e7469666965720000000000000000000060448201526064016105b9565b610d5461240c565b6040517f3a3ab67200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a811660048301529190911690633a3ab67290602401602060405180830381865afa158015610dc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de6919061374c565b610e4c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f556e737570706f727465642063757272656e637900000000000000000000000060448201526064016105b9565b610e5461038d565b8a63ffffffff161115610ec3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f54696d657374616d7020696e206675747572650000000000000000000000000060448201526064016105b9565b612000610ed08a33612353565b511115610f39576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f416e63696c6c617279204461746120746f6f206c6f6e6700000000000000000060448201526064016105b9565b6000610f4361211b565b6040517f5b97aadd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8b811660048301529190911690635b97aadd90602401602060405180830381865afa158015610fb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd59190613770565b60000151905061107c604051806101600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b73ffffffffffffffffffffffffffffffffffffffff8a16604082015260e08101899052610100810182905260008890036110b657816110b8565b875b610120820152610140810187905273ffffffffffffffffffffffffffffffffffffffff861681526080810185905261110a60008890036110fa576003546110fc565b875b61110461038d565b9061202d565b60c0820152611119838261200e565b88156111415761114173ffffffffffffffffffffffffffffffffffffffff8b1633308c612039565b6101008101516101208201516111569161202d565b935083156111805761118073ffffffffffffffffffffffffffffffffffffffff8b16333087612039565b8c3373ffffffffffffffffffffffffffffffffffffffff167f6f8b57987b901f40681c863d8aed32c2cc6150062aa4ddb828c89aaa896c16688e8e856040516111cb939291906136e6565b60405180910390a38c3373ffffffffffffffffffffffffffffffffffffffff167fdb27b6b59f934dc351fe9188a12f94a06c3c867c683c6e65c7e2b4c8aa6e9a048e8e8560405161121e939291906136e6565b60405180910390a3333b15611299573373ffffffffffffffffffffffffffffffffffffffff1663724f18148e8e8e856040518563ffffffff1660e01b815260040161126c9493929190613716565b600060405180830381600087803b15801561128657600080fd5b505af1925050508015611297575060015b505b5050506112e0600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b9998505050505050505050565b60606112f98383612353565b90505b92915050565b600061130c611d5d565b611339600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b73ffffffffffffffffffffffffffffffffffffffff83166113b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f50726f706f7365722061646472657373206d757374206265206e6f6e2030000060448201526064016105b9565b60016113c58989898989611de3565b60068111156113d6576113d66131bd565b1461143d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4d7573742062652072657175657374656400000000000000000000000000000060448201526064016105b9565b600061144b89898989611f2b565b90506114578186611f65565b60006040518061016001604052808673ffffffffffffffffffffffffffffffffffffffff168152602001876020015173ffffffffffffffffffffffffffffffffffffffff168152602001876040015173ffffffffffffffffffffffffffffffffffffffff1681526020018760600151151581526020018581526020018760a0015181526020016115038861014001516000036114f5576003546110fc565b88610140015161110461038d565b81526020018760e00151815260200187610100015181526020018761012001518152602001876101400151815250905061153d828261200e565b6101008601516101208701516115529161202d565b925082156115815760408601516115819073ffffffffffffffffffffffffffffffffffffffff16333086612039565b888a73ffffffffffffffffffffffffffffffffffffffff167fdb27b6b59f934dc351fe9188a12f94a06c3c867c683c6e65c7e2b4c8aa6e9a048a8a856040516115cc939291906136e6565b60405180910390a373ffffffffffffffffffffffffffffffffffffffff8a163b15611676576040517f724f181400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8b169063724f181490611649908c908c908c908790600401613716565b600060405180830381600087803b15801561166357600080fd5b505af1925050508015611674575060015b505b50506116bc600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b979650505050505050565b6000806116d2611d5d565b6116ff600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b61170c8787878787612483565b91509150611754600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b9550959350505050565b6000611768611d5d565b611795600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b60006117a3338a8a8a611f2b565b6000818152600160205260409020549091501561181c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f5265717565737420616c726561647920696e697469616c697a6564000000000060448201526064016105b9565b611824612395565b73ffffffffffffffffffffffffffffffffffffffff166390978d1b8a6040518263ffffffff1660e01b815260040161185e91815260200190565b602060405180830381865afa15801561187b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189f919061374c565b611905576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f556e737570706f72746564206964656e7469666965720000000000000000000060448201526064016105b9565b61190d61240c565b6040517f3a3ab67200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88811660048301529190911690633a3ab67290602401602060405180830381865afa15801561197b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061199f919061374c565b611a05576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f556e737570706f727465642063757272656e637900000000000000000000000060448201526064016105b9565b611a0d61038d565b8863ffffffff161115611a7c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f54696d657374616d7020696e206675747572650000000000000000000000000060448201526064016105b9565b612000611a898833612353565b511115611af2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f416e63696c6c617279204461746120746f6f206c6f6e6700000000000000000060448201526064016105b9565b6000611afc61211b565b6040517f5b97aadd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff89811660048301529190911690635b97aadd90602401602060405180830381865afa158015611b6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b8e9190613770565b600001519050611c35604051806101600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b73ffffffffffffffffffffffffffffffffffffffff8816604082015260e0810187905261010081018290526000869003611c6f5781611c71565b855b6101208201526101408101859052611c89838261200e565b8615611cb157611cb173ffffffffffffffffffffffffffffffffffffffff891633308a612039565b8a3373ffffffffffffffffffffffffffffffffffffffff167f6f8b57987b901f40681c863d8aed32c2cc6150062aa4ddb828c89aaa896c16688c8c85604051611cfc939291906136e6565b60405180910390a3610120810151611d14908361202d565b93505050506116bc600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b60005474010000000000000000000000000000000000000000900460ff16611de1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105b9565b565b604081015160009073ffffffffffffffffffffffffffffffffffffffff16611e0d57506000610458565b815173ffffffffffffffffffffffffffffffffffffffff16611e3157506001610458565b816060015115611e4357506006610458565b602082015173ffffffffffffffffffffffffffffffffffffffff16611e8657611e6a61038d565b8260c001511115611e7c576002611e7f565b60035b9050610458565b611e8e6122dc565b73ffffffffffffffffffffffffffffffffffffffff1663b551cd508686611eb5878b612353565b6040518463ffffffff1660e01b8152600401611ed3939291906135f9565b602060405180830381865afa158015611ef0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f14919061374c565b611f1f576004610455565b50600595945050505050565b600084848484604051602001611f4494939291906137b2565b6040516020818303038152906040528051906020012090505b949350505050565b611f6e816128ae565b6000838152600160205260409020541461200a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f486173686564207265717565737420706172616d7320646f206e6f74206d617460448201527f6368206578697374696e6720726571756573742068617368000000000000000060648201526084016105b9565b5050565b612017816128ae565b6000928352600160205260409092209190915550565b60006112f98284613822565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526121159085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526128de565b50505050565b6002546040517faafd5e400000000000000000000000000000000000000000000000000000000081527f53746f7265000000000000000000000000000000000000000000000000000000600482015260009173ffffffffffffffffffffffffffffffffffffffff169063aafd5e40906024015b602060405180830381865afa1580156121ab573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043b9190613835565b6101208101516000906112fc9060026129f2565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa158015612259573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061227d91906135e0565b9050612115847f095ea7b300000000000000000000000000000000000000000000000000000000856122af8686613822565b60405173ffffffffffffffffffffffffffffffffffffffff90921660248301526044820152606401612093565b6002546040517faafd5e400000000000000000000000000000000000000000000000000000000081527f4f7261636c650000000000000000000000000000000000000000000000000000600482015260009173ffffffffffffffffffffffffffffffffffffffff169063aafd5e409060240161218e565b60606112f9836040518060400160405280600b81526020017f6f6f526571756573746572000000000000000000000000000000000000000000815250846129fe565b6002546040517faafd5e400000000000000000000000000000000000000000000000000000000081527f4964656e74696669657257686974656c69737400000000000000000000000000600482015260009173ffffffffffffffffffffffffffffffffffffffff169063aafd5e409060240161218e565b6002546040517faafd5e400000000000000000000000000000000000000000000000000000000081527f436f6c6c61746572616c57686974656c69737400000000000000000000000000600482015260009173ffffffffffffffffffffffffffffffffffffffff169063aafd5e409060240161218e565b600080600061249488888888611f2b565b90506124a08185611f65565b6000604051806101600160405280866000015173ffffffffffffffffffffffffffffffffffffffff168152602001866020015173ffffffffffffffffffffffffffffffffffffffff168152602001866040015173ffffffffffffffffffffffffffffffffffffffff168152602001600115158152602001866080015181526020018660a0015181526020018660c0015181526020018660e001518152602001866101000151815260200186610120015181526020018661014001518152509050600061256f8a8a8a8a8a611de3565b90506003816006811115612585576125856131bd565b036125e757608086015160a0830181905260e08701516101008801516101208901519296506125b7926111049161202d565b865160408801519196506125e29173ffffffffffffffffffffffffffffffffffffffff169087612a44565b6127a2565b60058160068111156125fb576125fb6131bd565b0361271a576126086122dc565b73ffffffffffffffffffffffffffffffffffffffff1663719c6d568a8a61262f8b8f612353565b6040518463ffffffff1660e01b815260040161264d939291906135f9565b602060405180830381865afa15801561266a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061268e91906135e0565b60a08301819052608087015160e088015161010089015192965090861415916126db919061110490816126cf6126c3896121cf565b6101208e015190612a9a565b6101208d01519061202d565b9550612714816126ec5787516126f2565b87602001515b604089015173ffffffffffffffffffffffffffffffffffffffff169088612a44565b506127a2565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f416c726561647920736574746c6564206f72206e6f7420736574746c6561626c60448201527f650000000000000000000000000000000000000000000000000000000000000060648201526084016105b9565b6127ac838361200e565b888a73ffffffffffffffffffffffffffffffffffffffff167f0a9a88a76857159cb49d0944fe45537825a67ea75e0df805097782be5bdcd0af8a8a866040516127f7939291906136e6565b60405180910390a373ffffffffffffffffffffffffffffffffffffffff8a163b156128a1576040517f827e7f3e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8b169063827e7f3e90612874908c908c908c908890600401613716565b600060405180830381600087803b15801561288e57600080fd5b505af192505050801561289f575060015b505b5050509550959350505050565b6000816040516020016128c19190613852565b604051602081830303815290604052805190602001209050919050565b6000612940826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16612aa69092919063ffffffff16565b9050805160001480612961575080806020019051810190612961919061374c565b6129ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016105b9565b505050565b60006112f98284613890565b60606000612a0c8585612ab5565b90508481612a1985612af7565b604051602001612a2b939291906138cb565b6040516020818303038152906040529150509392505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526129ed9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401612093565b60006112f9828461390e565b6060611f5d8484600085612b85565b815160609015612ae65781604051602001612ad09190613921565b60405160208183030381529060405290506112fc565b81604051602001612ad0919061398d565b6060612b186fffffffffffffffffffffffffffffffff602084901c16612c93565b612b338360601b6bffffffffffffffffffffffff1916612c93565b604051602001612b6f9291909182527fffffffffffffffff00000000000000000000000000000000000000000000000016602082015260280190565b6040516020818303038152906040529050919050565b606082471015612c17576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016105b9565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051612c4091906139ce565b60006040518083038185875af1925050503d8060008114612c7d576040519150601f19603f3d011682016040523d82523d6000602084013e612c82565b606091505b50915091506116bc87838387612e35565b6000808260001c9050806fffffffffffffffffffffffffffffffff169050806801000000000000000002811777ffffffffffffffff0000000000000000ffffffffffffffff169050806401000000000281177bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16905080620100000281177dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff169050806101000281177eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff1690508060100281177f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f16905060006008827f08080808080808080808080808080808080808080808080808080808080808081681612db757612db7613861565b0460047f040404040404040404040404040404040404040404040404040404040404040484160460027f020202020202020202020202020202020202020202020202020202020202020285160417166027029091017f3030303030303030303030303030303030303030303030303030303030303030019392505050565b60608315612ecb578251600003612ec45773ffffffffffffffffffffffffffffffffffffffff85163b612ec4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105b9565b5081611f5d565b611f5d8383815115612ee05781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b991906134ab565b600060208284031215612f2657600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff81168114612f4f57600080fd5b50565b8035612f5d81612f2d565b919050565b803563ffffffff81168114612f5d57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610160810167ffffffffffffffff81118282101715612fc957612fc9612f76565b60405290565b600082601f830112612fe057600080fd5b813567ffffffffffffffff80821115612ffb57612ffb612f76565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561304157613041612f76565b8160405283815286602085880101111561305a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b8015158114612f4f57600080fd5b8035612f5d8161307a565b600061016082840312156130a657600080fd5b6130ae612fa5565b90506130b982612f52565b81526130c760208301612f52565b60208201526130d860408301612f52565b60408201526130e960608301613088565b60608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e082015261010080830135818301525061012080830135818301525061014080830135818301525092915050565b60008060008060006101e0868803121561315957600080fd5b853561316481612f2d565b94506020860135935061317960408701612f62565b9250606086013567ffffffffffffffff81111561319557600080fd5b6131a188828901612fcf565b9250506131b18760808801613093565b90509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6020810160078310613227577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b600080600080600080610200878903121561324757600080fd5b863561325281612f2d565b95506020870135945061326760408801612f62565b9350606087013567ffffffffffffffff81111561328357600080fd5b61328f89828a01612fcf565b93505061329f8860808901613093565b91506101e087013590509295509295509295565b60008060008060008061020087890312156132cd57600080fd5b863595506132dd60208801612f62565b9450604087013567ffffffffffffffff8111156132f957600080fd5b61330589828a01612fcf565b9450506133158860608901613093565b92506101c087013561332681612f2d565b91506101e087013561333781612f2d565b809150509295509295509295565b60008060008060008060008060006101208a8c03121561336457600080fd5b8935985061337460208b01612f62565b975060408a013567ffffffffffffffff81111561339057600080fd5b61339c8c828d01612fcf565b97505060608a01356133ad81612f2d565b955060808a0135945060a08a0135935060c08a0135925060e08a01356133d281612f2d565b809250506101008a013590509295985092959850929598565b600080604083850312156133fe57600080fd5b823567ffffffffffffffff81111561341557600080fd5b61342185828601612fcf565b925050602083013561343281612f2d565b809150509250929050565b60005b83811015613458578181015183820152602001613440565b50506000910152565b6000815180845261347981602086016020860161343d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006112f96020830184613461565b6000806000806000806000610220888a0312156134da57600080fd5b87356134e581612f2d565b9650602088013595506134fa60408901612f62565b9450606088013567ffffffffffffffff81111561351657600080fd5b6135228a828b01612fcf565b9450506135328960808a01613093565b92506101e088013561354381612f2d565b80925050610200880135905092959891949750929550565b600080600080600080600060e0888a03121561357657600080fd5b8735965061358660208901612f62565b9550604088013567ffffffffffffffff8111156135a257600080fd5b6135ae8a828b01612fcf565b95505060608801356135bf81612f2d565b9699959850939660808101359560a0820135955060c0909101359350915050565b6000602082840312156135f257600080fd5b5051919050565b83815263ffffffff831660208201526060604082015260006104586060830184613461565b805173ffffffffffffffffffffffffffffffffffffffff168252602081015161365f602084018273ffffffffffffffffffffffffffffffffffffffff169052565b506040810151613687604084018273ffffffffffffffffffffffffffffffffffffffff169052565b50606081015161369b606084018215159052565b506080818101519083015260a0808201519083015260c0808201519083015260e080820151908301526101008082015190830152610120808201519083015261014090810151910152565b60006101a063ffffffff8616835280602084015261370681840186613461565b915050611f5d604083018461361e565b60006101c086835263ffffffff8616602084015280604084015261373c81840186613461565b915050610458606083018461361e565b60006020828403121561375e57600080fd5b81516137698161307a565b9392505050565b60006020828403121561378257600080fd5b6040516020810181811067ffffffffffffffff821117156137a5576137a5612f76565b6040529151825250919050565b73ffffffffffffffffffffffffffffffffffffffff8516815283602082015263ffffffff831660408201526080606082015260006104556080830184613461565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156112fc576112fc6137f3565b60006020828403121561384757600080fd5b815161376981612f2d565b61016081016112fc828461361e565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826138c6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600084516138dd81846020890161343d565b8451908301906138f181836020890161343d565b845191019061390481836020880161343d565b0195945050505050565b818103818111156112fc576112fc6137f3565b7f2c0000000000000000000000000000000000000000000000000000000000000081526000825161395981600185016020870161343d565b7f3a000000000000000000000000000000000000000000000000000000000000006001939091019283015250600201919050565b6000825161399f81846020870161343d565b7f3a00000000000000000000000000000000000000000000000000000000000000920191825250600101919050565b600082516139e081846020870161343d565b919091019291505056fea2646970667358221220823e86c514cffbde2bb625930afa0677dc66b736d1f5937236d81177feee051164736f6c63430008100033";
class SkinnyOptimisticOracle__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(_liveness, _finderAddress, _timerAddress, overrides) {
        return super.deploy(_liveness, _finderAddress, _timerAddress, overrides || {});
    }
    getDeployTransaction(_liveness, _finderAddress, _timerAddress, overrides) {
        return super.getDeployTransaction(_liveness, _finderAddress, _timerAddress, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.SkinnyOptimisticOracle__factory = SkinnyOptimisticOracle__factory;
SkinnyOptimisticOracle__factory.bytecode = _bytecode;
SkinnyOptimisticOracle__factory.abi = _abi;
