"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SkinnyOptimisticOracleV2Prod__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_liveness",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_finderAddress",
                type: "address",
            },
            {
                internalType: "address",
                name: "_timerAddress",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "requester",
                type: "address",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "proposer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "disputer",
                        type: "address",
                    },
                    {
                        internalType: "contract IERC20",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "settled",
                        type: "bool",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "callbackOnPriceProposed",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "callbackOnPriceDisputed",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "callbackOnPriceSettled",
                                type: "bool",
                            },
                            {
                                internalType: "uint256",
                                name: "bond",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "customLiveness",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct SkinnyOptimisticOracleV2Interface.RequestSettings",
                        name: "requestSettings",
                        type: "tuple",
                    },
                    {
                        internalType: "int256",
                        name: "proposedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "int256",
                        name: "resolvedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "uint256",
                        name: "expirationTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "reward",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "finalFee",
                        type: "uint256",
                    },
                ],
                indexed: false,
                internalType: "struct SkinnyOptimisticOracleV2Interface.Request",
                name: "request",
                type: "tuple",
            },
        ],
        name: "DisputePrice",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "requester",
                type: "address",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "proposer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "disputer",
                        type: "address",
                    },
                    {
                        internalType: "contract IERC20",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "settled",
                        type: "bool",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "callbackOnPriceProposed",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "callbackOnPriceDisputed",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "callbackOnPriceSettled",
                                type: "bool",
                            },
                            {
                                internalType: "uint256",
                                name: "bond",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "customLiveness",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct SkinnyOptimisticOracleV2Interface.RequestSettings",
                        name: "requestSettings",
                        type: "tuple",
                    },
                    {
                        internalType: "int256",
                        name: "proposedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "int256",
                        name: "resolvedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "uint256",
                        name: "expirationTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "reward",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "finalFee",
                        type: "uint256",
                    },
                ],
                indexed: false,
                internalType: "struct SkinnyOptimisticOracleV2Interface.Request",
                name: "request",
                type: "tuple",
            },
        ],
        name: "ProposePrice",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "requester",
                type: "address",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "proposer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "disputer",
                        type: "address",
                    },
                    {
                        internalType: "contract IERC20",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "settled",
                        type: "bool",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "callbackOnPriceProposed",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "callbackOnPriceDisputed",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "callbackOnPriceSettled",
                                type: "bool",
                            },
                            {
                                internalType: "uint256",
                                name: "bond",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "customLiveness",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct SkinnyOptimisticOracleV2Interface.RequestSettings",
                        name: "requestSettings",
                        type: "tuple",
                    },
                    {
                        internalType: "int256",
                        name: "proposedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "int256",
                        name: "resolvedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "uint256",
                        name: "expirationTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "reward",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "finalFee",
                        type: "uint256",
                    },
                ],
                indexed: false,
                internalType: "struct SkinnyOptimisticOracleV2Interface.Request",
                name: "request",
                type: "tuple",
            },
        ],
        name: "RequestPrice",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "requester",
                type: "address",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "proposer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "disputer",
                        type: "address",
                    },
                    {
                        internalType: "contract IERC20",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "settled",
                        type: "bool",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "callbackOnPriceProposed",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "callbackOnPriceDisputed",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "callbackOnPriceSettled",
                                type: "bool",
                            },
                            {
                                internalType: "uint256",
                                name: "bond",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "customLiveness",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct SkinnyOptimisticOracleV2Interface.RequestSettings",
                        name: "requestSettings",
                        type: "tuple",
                    },
                    {
                        internalType: "int256",
                        name: "proposedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "int256",
                        name: "resolvedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "uint256",
                        name: "expirationTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "reward",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "finalFee",
                        type: "uint256",
                    },
                ],
                indexed: false,
                internalType: "struct SkinnyOptimisticOracleV2Interface.Request",
                name: "request",
                type: "tuple",
            },
        ],
        name: "Settle",
        type: "event",
    },
    {
        inputs: [],
        name: "ancillaryBytesLimit",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "defaultLiveness",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "requester",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "proposer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "disputer",
                        type: "address",
                    },
                    {
                        internalType: "contract IERC20",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "settled",
                        type: "bool",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "callbackOnPriceProposed",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "callbackOnPriceDisputed",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "callbackOnPriceSettled",
                                type: "bool",
                            },
                            {
                                internalType: "uint256",
                                name: "bond",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "customLiveness",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct SkinnyOptimisticOracleV2Interface.RequestSettings",
                        name: "requestSettings",
                        type: "tuple",
                    },
                    {
                        internalType: "int256",
                        name: "proposedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "int256",
                        name: "resolvedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "uint256",
                        name: "expirationTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "reward",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "finalFee",
                        type: "uint256",
                    },
                ],
                internalType: "struct SkinnyOptimisticOracleV2Interface.Request",
                name: "request",
                type: "tuple",
            },
        ],
        name: "disputePrice",
        outputs: [
            {
                internalType: "uint256",
                name: "totalBond",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "proposer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "disputer",
                        type: "address",
                    },
                    {
                        internalType: "contract IERC20",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "settled",
                        type: "bool",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "callbackOnPriceProposed",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "callbackOnPriceDisputed",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "callbackOnPriceSettled",
                                type: "bool",
                            },
                            {
                                internalType: "uint256",
                                name: "bond",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "customLiveness",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct SkinnyOptimisticOracleV2Interface.RequestSettings",
                        name: "requestSettings",
                        type: "tuple",
                    },
                    {
                        internalType: "int256",
                        name: "proposedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "int256",
                        name: "resolvedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "uint256",
                        name: "expirationTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "reward",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "finalFee",
                        type: "uint256",
                    },
                ],
                internalType: "struct SkinnyOptimisticOracleV2Interface.Request",
                name: "request",
                type: "tuple",
            },
            {
                internalType: "address",
                name: "disputer",
                type: "address",
            },
            {
                internalType: "address",
                name: "requester",
                type: "address",
            },
        ],
        name: "disputePriceFor",
        outputs: [
            {
                internalType: "uint256",
                name: "totalBond",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "finder",
        outputs: [
            {
                internalType: "contract FinderInterface",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getCurrentTime",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "requester",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "proposer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "disputer",
                        type: "address",
                    },
                    {
                        internalType: "contract IERC20",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "settled",
                        type: "bool",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "callbackOnPriceProposed",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "callbackOnPriceDisputed",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "callbackOnPriceSettled",
                                type: "bool",
                            },
                            {
                                internalType: "uint256",
                                name: "bond",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "customLiveness",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct SkinnyOptimisticOracleV2Interface.RequestSettings",
                        name: "requestSettings",
                        type: "tuple",
                    },
                    {
                        internalType: "int256",
                        name: "proposedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "int256",
                        name: "resolvedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "uint256",
                        name: "expirationTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "reward",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "finalFee",
                        type: "uint256",
                    },
                ],
                internalType: "struct SkinnyOptimisticOracleV2Interface.Request",
                name: "request",
                type: "tuple",
            },
        ],
        name: "getState",
        outputs: [
            {
                internalType: "enum OptimisticOracleInterface.State",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "requester",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "proposer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "disputer",
                        type: "address",
                    },
                    {
                        internalType: "contract IERC20",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "settled",
                        type: "bool",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "callbackOnPriceProposed",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "callbackOnPriceDisputed",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "callbackOnPriceSettled",
                                type: "bool",
                            },
                            {
                                internalType: "uint256",
                                name: "bond",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "customLiveness",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct SkinnyOptimisticOracleV2Interface.RequestSettings",
                        name: "requestSettings",
                        type: "tuple",
                    },
                    {
                        internalType: "int256",
                        name: "proposedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "int256",
                        name: "resolvedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "uint256",
                        name: "expirationTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "reward",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "finalFee",
                        type: "uint256",
                    },
                ],
                internalType: "struct SkinnyOptimisticOracleV2Interface.Request",
                name: "request",
                type: "tuple",
            },
        ],
        name: "hasPrice",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "requester",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "proposer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "disputer",
                        type: "address",
                    },
                    {
                        internalType: "contract IERC20",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "settled",
                        type: "bool",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "callbackOnPriceProposed",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "callbackOnPriceDisputed",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "callbackOnPriceSettled",
                                type: "bool",
                            },
                            {
                                internalType: "uint256",
                                name: "bond",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "customLiveness",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct SkinnyOptimisticOracleV2Interface.RequestSettings",
                        name: "requestSettings",
                        type: "tuple",
                    },
                    {
                        internalType: "int256",
                        name: "proposedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "int256",
                        name: "resolvedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "uint256",
                        name: "expirationTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "reward",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "finalFee",
                        type: "uint256",
                    },
                ],
                internalType: "struct SkinnyOptimisticOracleV2Interface.Request",
                name: "request",
                type: "tuple",
            },
            {
                internalType: "int256",
                name: "proposedPrice",
                type: "int256",
            },
        ],
        name: "proposePrice",
        outputs: [
            {
                internalType: "uint256",
                name: "totalBond",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "requester",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "proposer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "disputer",
                        type: "address",
                    },
                    {
                        internalType: "contract IERC20",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "settled",
                        type: "bool",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "callbackOnPriceProposed",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "callbackOnPriceDisputed",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "callbackOnPriceSettled",
                                type: "bool",
                            },
                            {
                                internalType: "uint256",
                                name: "bond",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "customLiveness",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct SkinnyOptimisticOracleV2Interface.RequestSettings",
                        name: "requestSettings",
                        type: "tuple",
                    },
                    {
                        internalType: "int256",
                        name: "proposedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "int256",
                        name: "resolvedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "uint256",
                        name: "expirationTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "reward",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "finalFee",
                        type: "uint256",
                    },
                ],
                internalType: "struct SkinnyOptimisticOracleV2Interface.Request",
                name: "request",
                type: "tuple",
            },
            {
                internalType: "address",
                name: "proposer",
                type: "address",
            },
            {
                internalType: "int256",
                name: "proposedPrice",
                type: "int256",
            },
        ],
        name: "proposePriceFor",
        outputs: [
            {
                internalType: "uint256",
                name: "totalBond",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                internalType: "contract IERC20",
                name: "currency",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "reward",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "bool",
                        name: "callbackOnPriceProposed",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "callbackOnPriceDisputed",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "callbackOnPriceSettled",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "bond",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "customLiveness",
                        type: "uint256",
                    },
                ],
                internalType: "struct SkinnyOptimisticOracleV2Interface.RequestSettings",
                name: "requestSettings",
                type: "tuple",
            },
            {
                internalType: "address",
                name: "proposer",
                type: "address",
            },
            {
                internalType: "int256",
                name: "proposedPrice",
                type: "int256",
            },
        ],
        name: "requestAndProposePriceFor",
        outputs: [
            {
                internalType: "uint256",
                name: "totalBond",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                internalType: "contract IERC20",
                name: "currency",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "reward",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "bool",
                        name: "callbackOnPriceProposed",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "callbackOnPriceDisputed",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "callbackOnPriceSettled",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "bond",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "customLiveness",
                        type: "uint256",
                    },
                ],
                internalType: "struct SkinnyOptimisticOracleV2Interface.RequestSettings",
                name: "requestSettings",
                type: "tuple",
            },
        ],
        name: "requestPrice",
        outputs: [
            {
                internalType: "uint256",
                name: "totalBond",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        name: "requests",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "time",
                type: "uint256",
            },
        ],
        name: "setCurrentTime",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "requester",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "proposer",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "disputer",
                        type: "address",
                    },
                    {
                        internalType: "contract IERC20",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "settled",
                        type: "bool",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "callbackOnPriceProposed",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "callbackOnPriceDisputed",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "callbackOnPriceSettled",
                                type: "bool",
                            },
                            {
                                internalType: "uint256",
                                name: "bond",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "customLiveness",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct SkinnyOptimisticOracleV2Interface.RequestSettings",
                        name: "requestSettings",
                        type: "tuple",
                    },
                    {
                        internalType: "int256",
                        name: "proposedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "int256",
                        name: "resolvedPrice",
                        type: "int256",
                    },
                    {
                        internalType: "uint256",
                        name: "expirationTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "reward",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "finalFee",
                        type: "uint256",
                    },
                ],
                internalType: "struct SkinnyOptimisticOracleV2Interface.Request",
                name: "request",
                type: "tuple",
            },
        ],
        name: "settle",
        outputs: [
            {
                internalType: "uint256",
                name: "payout",
                type: "uint256",
            },
            {
                internalType: "int256",
                name: "resolvedPrice",
                type: "int256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                internalType: "address",
                name: "requester",
                type: "address",
            },
        ],
        name: "stampAncillaryData",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "timerAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60806040523480156200001157600080fd5b5060405162003bca38038062003bca833981016040819052620000349162000150565b60008054600160a01b6001600160a01b038481166001600160a81b03199093169290921717909155600280546001600160a01b031916918416919091179055828282620000818362000090565b50506003555062000191915050565b63bb7448008110620000de5760405162461bcd60e51b81526020600482015260126024820152714c6976656e65737320746f6f206c6172676560701b60448201526064015b60405180910390fd5b60008111620001305760405162461bcd60e51b815260206004820152601460248201527f4c6976656e6573732063616e6e6f7420626520300000000000000000000000006044820152606401620000d5565b50565b80516001600160a01b03811681146200014b57600080fd5b919050565b6000806000606084860312156200016657600080fd5b83519250620001786020850162000133565b9150620001886040850162000133565b90509250925092565b613a2980620001a16000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c80637c4b089e116100b2578063b9a3c84c11610081578063c371dda711610066578063c371dda7146102bd578063dc5e0225146102c6578063fe4e1983146102d957600080fd5b8063b9a3c84c1461028a578063bc5013bb146102aa57600080fd5b80637c4b089e146102145780639d86698514610227578063af5d2f3914610247578063af8475d31461026757600080fd5b8063432bcbb9116100ee578063432bcbb9146101a6578063640f9d94146101ce57806367831110146101e15780636c534fbb146101f457600080fd5b8063137cee76146101205780631c39c38d1461014657806322f8e5661461018b57806329cb924d146101a0575b600080fd5b61013361012e366004613057565b6102e2565b6040519081526020015b60405180910390f35b6000546101669073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161013d565b61019e6101993660046130fd565b610aa4565b005b42610133565b6101b96101b43660046131c2565b610b4d565b6040805192835260208301919091520161013d565b6101336101dc36600461323f565b610be4565b6101336101ef3660046131c2565b6111cd565b6102076102023660046131c2565b6111e9565b60405161013d91906132f3565b610133610222366004613334565b611273565b6101336102353660046130fd565b60016020526000908152604090205481565b61025a6102553660046133d1565b611649565b60405161013d9190613491565b61027a6102753660046131c2565b61165e565b604051901515815260200161013d565b6002546101669073ffffffffffffffffffffffffffffffffffffffff1681565b6101336102b83660046134a4565b611755565b61013361200081565b6101336102d436600461352a565b611766565b61013360035481565b60006102ec611c9a565b610319600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b6000610327338b8b8b611d20565b600081815260016020526040902054909150156103a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f5265717565737420616c726561647920696e697469616c697a6564000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8416610422576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f70726f706f7365722061646472657373206d757374206265206e6f6e20300000604482015260640161039c565b61042a611d5a565b73ffffffffffffffffffffffffffffffffffffffff166390978d1b8b6040518263ffffffff1660e01b815260040161046491815260200190565b602060405180830381865afa158015610481573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a591906135bc565b61050b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f556e737570706f72746564206964656e74696669657200000000000000000000604482015260640161039c565b610513611e13565b6040517f3a3ab67200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff89811660048301529190911690633a3ab67290602401602060405180830381865afa158015610581573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a591906135bc565b61060b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f556e737570706f727465642063757272656e6379000000000000000000000000604482015260640161039c565b428963ffffffff16111561067b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f54696d657374616d7020696e2066757475726500000000000000000000000000604482015260640161039c565b6120006106888933611e8a565b5111156106f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f416e63696c6c617279204461746120746f6f206c6f6e67000000000000000000604482015260640161039c565b60006106fb611ecc565b6040517f5b97aadd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a811660048301529190911690635b97aadd90602401602060405180830381865afa158015610769573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078d91906135e0565b51905061080e6040805161014081018252600080825260208083018290528284018290526060808401839052845160a081018652838152918201839052938101829052928301819052608083810191909152909190820190815260200160008152602001600081526020016000815260200160008152602001600081525090565b73ffffffffffffffffffffffffffffffffffffffff89166040820152610100810188905261012081018290526080810187905260608701516000036108535781610859565b86606001515b6080808301516060019190915273ffffffffffffffffffffffffffffffffffffffff8716825260a082018690528701516108aa9060000361089c576003546108a2565b87608001515b425b90611f43565b60e08201526108b98382611f4f565b87156108e1576108e173ffffffffffffffffffffffffffffffffffffffff8a1633308b611f6e565b6101208101516080820151606001516108f991611f43565b935083156109235761092373ffffffffffffffffffffffffffffffffffffffff8a16333087611f6e565b8b3373ffffffffffffffffffffffffffffffffffffffff167f192e8f0cfffe62f0d9a7860dd72713d2e571aac42d020883efbb1248e9f02afe8d8d8560405161096e93929190613717565b60405180910390a38b3373ffffffffffffffffffffffffffffffffffffffff167f6b4607a9e123267af7874ba0937d994b2a8c72b78028529d7cf15c08889c63968d8d856040516109c193929190613717565b60405180910390a3333b151580156109d7575086515b15610a51576040517fc8d89858000000000000000000000000000000000000000000000000000000008152339063c8d8985890610a1e908f908f908f908790600401613747565b600060405180830381600087803b158015610a3857600080fd5b505af1158015610a4c573d6000803e3d6000fd5b505050505b505050610a98600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b98975050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16610ac657600080fd5b6000546040517f22f8e5660000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff909116906322f8e56690602401600060405180830381600087803b158015610b3257600080fd5b505af1158015610b46573d6000803e3d6000fd5b5050505050565b600080610b58611c9a565b610b85600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b610b928787878787612050565b91509150610bda600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b9550959350505050565b6000610bee611c9a565b610c1b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b6000610c2933898989611d20565b60008181526001602052604090205490915015610ca2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f5265717565737420616c726561647920696e697469616c697a65640000000000604482015260640161039c565b610caa611d5a565b73ffffffffffffffffffffffffffffffffffffffff166390978d1b896040518263ffffffff1660e01b8152600401610ce491815260200190565b602060405180830381865afa158015610d01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2591906135bc565b610d8b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f556e737570706f72746564206964656e74696669657200000000000000000000604482015260640161039c565b610d93611e13565b6040517f3a3ab67200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301529190911690633a3ab67290602401602060405180830381865afa158015610e01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2591906135bc565b610e8b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f556e737570706f727465642063757272656e6379000000000000000000000000604482015260640161039c565b428763ffffffff161115610efb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f54696d657374616d7020696e2066757475726500000000000000000000000000604482015260640161039c565b612000610f088733611e8a565b511115610f71576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f416e63696c6c617279204461746120746f6f206c6f6e67000000000000000000604482015260640161039c565b6000610f7b611ecc565b6040517f5b97aadd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88811660048301529190911690635b97aadd90602401602060405180830381865afa158015610fe9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100d91906135e0565b51905061108e6040805161014081018252600080825260208083018290528284018290526060808401839052845160a081018652838152918201839052938101829052928301819052608083810191909152909190820190815260200160008152602001600081526020016000815260200160008152602001600081525090565b73ffffffffffffffffffffffffffffffffffffffff87166040820152610100810186905261012081018290526080810185905260608501516000036110d357816110d9565b84606001515b6080820151606001526110ec8382611f4f565b85156111145761111473ffffffffffffffffffffffffffffffffffffffff8816333089611f6e565b893373ffffffffffffffffffffffffffffffffffffffff167f192e8f0cfffe62f0d9a7860dd72713d2e571aac42d020883efbb1248e9f02afe8b8b8560405161115f93929190613717565b60405180910390a360808101516060015161117a9083611f43565b93505050506111c3600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b9695505050505050565b60006111dd85858585338b611766565b90505b95945050505050565b60006111f3611c9a565b611220600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b61122d8686868686612494565b90506111e0600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b600061127d611c9a565b6112aa600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b73ffffffffffffffffffffffffffffffffffffffff8316611327576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f50726f706f7365722061646472657373206d757374206265206e6f6e20300000604482015260640161039c565b60016113368989898989612494565b6006811115611347576113476132c4565b146113ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4d75737420626520726571756573746564000000000000000000000000000000604482015260640161039c565b60006113bc89898989611d20565b90506113c881866125d5565b60006040518061014001604052808673ffffffffffffffffffffffffffffffffffffffff168152602001876020015173ffffffffffffffffffffffffffffffffffffffff168152602001876040015173ffffffffffffffffffffffffffffffffffffffff168152602001876060015115158152602001876080015181526020018581526020018760c001518152602001611481886080015160800151600003611473576003546108a2565b6080808a01510151426108a4565b8152602001876101000151815260200187610120015181525090506114a68282611f4f565b6101208601516080870151606001516114be91611f43565b925082156114ed5760408601516114ed9073ffffffffffffffffffffffffffffffffffffffff16333086611f6e565b888a73ffffffffffffffffffffffffffffffffffffffff167f6b4607a9e123267af7874ba0937d994b2a8c72b78028529d7cf15c08889c63968a8a8560405161153893929190613717565b60405180910390a373ffffffffffffffffffffffffffffffffffffffff8a163b1515801561156857506080860151515b156115f8576040517fc8d8985800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8b169063c8d89858906115c5908c908c908c908790600401613747565b600060405180830381600087803b1580156115df57600080fd5b505af11580156115f3573d6000803e3d6000fd5b505050505b505061163e600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b979650505050505050565b60606116558383611e8a565b90505b92915050565b6000611668611c9a565b611695600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b60006116a387878787611d20565b90506116af81846125d5565b60006116be8888888888612494565b905060068160068111156116d4576116d46132c4565b14806116f1575060058160068111156116ef576116ef6132c4565b145b8061170d5750600381600681111561170b5761170b6132c4565b145b925050506111e0600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b600061163e87878787873388611273565b6000611770611c9a565b61179d600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b73ffffffffffffffffffffffffffffffffffffffff831661181a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f64697370757465722061646472657373206d757374206265206e6f6e20300000604482015260640161039c565b60026118298389898989612494565b600681111561183a5761183a6132c4565b146118a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f4d7573742062652070726f706f73656400000000000000000000000000000000604482015260640161039c565b60006118af83898989611d20565b90506118bb81866125d5565b6000604051806101400160405280876000015173ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff168152602001876040015173ffffffffffffffffffffffffffffffffffffffff168152602001876060015115158152602001876080015181526020018760a0015181526020018760c0015181526020018760e001518152602001876101000151815260200187610120015181525090506119798282611f4f565b61012086015160808701516060015161199191611f43565b925082156119c05760408601516119c09073ffffffffffffffffffffffffffffffffffffffff16333086611f6e565b60006119ca611ecc565b905060006119d78361267e565b905060006119f3828a6101200151611f4390919063ffffffff16565b90508015611ac4576040890151611a219073ffffffffffffffffffffffffffffffffffffffff168483612695565b611a29611ecc565b60408a810151815160208101835284815291517f8659d23200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182166004820152915160248301529190911690638659d23290604401600060405180830381600087803b158015611aab57600080fd5b505af1158015611abf573d6000803e3d6000fd5b505050505b5050611ace61278e565b73ffffffffffffffffffffffffffffffffffffffff1663216666a48b8b611af58c8a611e8a565b6040518463ffffffff1660e01b8152600401611b139392919061377d565b600060405180830381600087803b158015611b2d57600080fd5b505af1158015611b41573d6000803e3d6000fd5b50505050898573ffffffffffffffffffffffffffffffffffffffff167fda5b062985693ef810f4e00ffa659095b4d7d5c9b3c5b6dd33a3979e12deffaa8b8b86604051611b9093929190613717565b60405180910390a373ffffffffffffffffffffffffffffffffffffffff85163b15158015611bc357508660800151602001515b15611c53576040517fc27ee07200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86169063c27ee07290611c20908d908d908d908890600401613747565b600060405180830381600087803b158015611c3a57600080fd5b505af1158015611c4e573d6000803e3d6000fd5b505050505b5050506111c3600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b60005474010000000000000000000000000000000000000000900460ff16611d1e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161039c565b565b600084848484604051602001611d3994939291906137a2565b6040516020818303038152906040528051906020012090505b949350505050565b6002546040517faafd5e400000000000000000000000000000000000000000000000000000000081527f4964656e74696669657257686974656c69737400000000000000000000000000600482015260009173ffffffffffffffffffffffffffffffffffffffff169063aafd5e40906024015b602060405180830381865afa158015611dea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e0e91906137e3565b905090565b6002546040517faafd5e400000000000000000000000000000000000000000000000000000000081527f436f6c6c61746572616c57686974656c69737400000000000000000000000000600482015260009173ffffffffffffffffffffffffffffffffffffffff169063aafd5e4090602401611dcd565b6060611655836040518060400160405280600b81526020017f6f6f52657175657374657200000000000000000000000000000000000000000081525084612805565b6002546040517faafd5e400000000000000000000000000000000000000000000000000000000081527f53746f7265000000000000000000000000000000000000000000000000000000600482015260009173ffffffffffffffffffffffffffffffffffffffff169063aafd5e4090602401611dcd565b6000611655828461382f565b611f588161284b565b6000928352600160205260409092209190915550565b60405173ffffffffffffffffffffffffffffffffffffffff8085166024830152831660448201526064810182905261204a9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261287b565b50505050565b600080600061206188888888611d20565b905061206d81856125d5565b6000604051806101400160405280866000015173ffffffffffffffffffffffffffffffffffffffff168152602001866020015173ffffffffffffffffffffffffffffffffffffffff168152602001866040015173ffffffffffffffffffffffffffffffffffffffff168152602001600115158152602001866080015181526020018660a0015181526020018660c0015181526020018660e0015181526020018661010001518152602001866101200151815250905060006121318a8a8a8a8a612494565b90506003816006811115612147576121476132c4565b036121ad5760a086015160c0830181905261010087015161012088015160808901516060015192965061217d926108a491611f43565b865160408801519196506121a89173ffffffffffffffffffffffffffffffffffffffff16908761298f565b61236f565b60058160068111156121c1576121c16132c4565b036122e7576121ce61278e565b73ffffffffffffffffffffffffffffffffffffffff1663719c6d568a8a6121f58b8f611e8a565b6040518463ffffffff1660e01b81526004016122139392919061377d565b602060405180830381865afa158015612230573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122549190613842565b60c0830181905260a087015161010088015161012089015192965090861415916122a891906108a4908161229961228a8961267e565b60808e015160600151906129e5565b60808d01516060015190611f43565b95506122e1816122b95787516122bf565b87602001515b604089015173ffffffffffffffffffffffffffffffffffffffff16908861298f565b5061236f565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f416c726561647920736574746c6564206f72206e6f7420736574746c6561626c60448201527f6500000000000000000000000000000000000000000000000000000000000000606482015260840161039c565b6123798383611f4f565b888a73ffffffffffffffffffffffffffffffffffffffff167f43f50314b00d371b4350379432da938cbb5263cfc9e1c48131e2811a6ca7c6578a8a866040516123c493929190613717565b60405180910390a373ffffffffffffffffffffffffffffffffffffffff8a163b151580156123f757508560800151604001515b15612487576040517fe4c311f100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8b169063e4c311f190612454908c908c908c908890600401613747565b600060405180830381600087803b15801561246e57600080fd5b505af1158015612482573d6000803e3d6000fd5b505050505b5050509550959350505050565b604081015160009073ffffffffffffffffffffffffffffffffffffffff166124be575060006111e0565b815173ffffffffffffffffffffffffffffffffffffffff166124e2575060016111e0565b8160600151156124f4575060066111e0565b602082015173ffffffffffffffffffffffffffffffffffffffff1661253057428260e001511115612526576002612529565b60035b90506111e0565b61253861278e565b73ffffffffffffffffffffffffffffffffffffffff1663b551cd50868661255f878b611e8a565b6040518463ffffffff1660e01b815260040161257d9392919061377d565b602060405180830381865afa15801561259a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125be91906135bc565b6125c95760046111dd565b50600595945050505050565b6125de8161284b565b6000838152600160205260409020541461267a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f486173686564207265717565737420706172616d7320646f206e6f74206d617460448201527f6368206578697374696e67207265717565737420686173680000000000000000606482015260840161039c565b5050565b6080810151606001516000906116589060026129f1565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83811660248301526000919085169063dd62ed3e90604401602060405180830381865afa15801561270b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061272f9190613842565b905061204a847f095ea7b30000000000000000000000000000000000000000000000000000000085612761868661382f565b60405173ffffffffffffffffffffffffffffffffffffffff90921660248301526044820152606401611fc8565b6002546040517faafd5e400000000000000000000000000000000000000000000000000000000081527f4f7261636c650000000000000000000000000000000000000000000000000000600482015260009173ffffffffffffffffffffffffffffffffffffffff169063aafd5e4090602401611dcd565b6060600061281385856129fd565b9050848161282085612a3f565b6040516020016128329392919061385b565b6040516020818303038152906040529150509392505050565b60008160405160200161285e919061389e565b604051602081830303815290604052805190602001209050919050565b60006128dd826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16612acd9092919063ffffffff16565b90508051600014806128fe5750808060200190518101906128fe91906135bc565b61298a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161039c565b505050565b60405173ffffffffffffffffffffffffffffffffffffffff831660248201526044810182905261298a9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611fc8565b600061165582846138ad565b600061165582846138ef565b815160609015612a2e5781604051602001612a18919061392a565b6040516020818303038152906040529050611658565b81604051602001612a189190613996565b6060612a606fffffffffffffffffffffffffffffffff602084901c16612adc565b612a7b8360601b6bffffffffffffffffffffffff1916612adc565b604051602001612ab79291909182527fffffffffffffffff00000000000000000000000000000000000000000000000016602082015260280190565b6040516020818303038152906040529050919050565b6060611d528484600085612c7e565b6000808260001c9050806fffffffffffffffffffffffffffffffff169050806801000000000000000002811777ffffffffffffffff0000000000000000ffffffffffffffff169050806401000000000281177bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16905080620100000281177dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff169050806101000281177eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff1690508060100281177f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f16905060006008827f08080808080808080808080808080808080808080808080808080808080808081681612c0057612c006138c0565b0460047f040404040404040404040404040404040404040404040404040404040404040484160460027f020202020202020202020202020202020202020202020202020202020202020285160417166027029091017f3030303030303030303030303030303030303030303030303030303030303030019392505050565b606082471015612d10576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161039c565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051612d3991906139d7565b60006040518083038185875af1925050503d8060008114612d76576040519150601f19603f3d011682016040523d82523d6000602084013e612d7b565b606091505b509150915061163e8783838760608315612e1d578251600003612e165773ffffffffffffffffffffffffffffffffffffffff85163b612e16576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161039c565b5081611d52565b611d528383815115612e325781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039c9190613491565b803563ffffffff81168114612e7a57600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715612ed257612ed2612e7f565b60405290565b600082601f830112612ee957600080fd5b813567ffffffffffffffff80821115612f0457612f04612e7f565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715612f4a57612f4a612e7f565b81604052838152866020858801011115612f6357600080fd5b836020870160208301376000602085830101528094505050505092915050565b73ffffffffffffffffffffffffffffffffffffffff81168114612fa557600080fd5b50565b8035612e7a81612f83565b8015158114612fa557600080fd5b8035612e7a81612fb3565b600060a08284031215612fde57600080fd5b60405160a0810181811067ffffffffffffffff8211171561300157613001612e7f565b604052905080823561301281612fb3565b8152602083013561302281612fb3565b6020820152604083013561303581612fb3565b8060408301525060608301356060820152608083013560808201525092915050565b600080600080600080600080610180898b03121561307457600080fd5b8835975061308460208a01612e66565b9650604089013567ffffffffffffffff8111156130a057600080fd5b6130ac8b828c01612ed8565b96505060608901356130bd81612f83565b9450608089013593506130d38a60a08b01612fcc565b92506101408901356130e481612f83565b8092505061016089013590509295985092959890939650565b60006020828403121561310f57600080fd5b5035919050565b60006101c0828403121561312957600080fd5b613131612eae565b905061313c82612fa8565b815261314a60208301612fa8565b602082015261315b60408301612fa8565b604082015261316c60608301612fc1565b606082015261317e8360808401612fcc565b60808201526101208083013560a083015261014083013560c083015261016083013560e08301526101808301356101008301526101a0830135818301525092915050565b600080600080600061024086880312156131db57600080fd5b85356131e681612f83565b9450602086013593506131fb60408701612e66565b9250606086013567ffffffffffffffff81111561321757600080fd5b61322388828901612ed8565b9250506132338760808801613116565b90509295509295909350565b600080600080600080610140878903121561325957600080fd5b8635955061326960208801612e66565b9450604087013567ffffffffffffffff81111561328557600080fd5b61329189828a01612ed8565b94505060608701356132a281612f83565b9250608087013591506132b88860a08901612fcc565b90509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b602081016007831061332e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b6000806000806000806000610280888a03121561335057600080fd5b873561335b81612f83565b96506020880135955061337060408901612e66565b9450606088013567ffffffffffffffff81111561338c57600080fd5b6133988a828b01612ed8565b9450506133a88960808a01613116565b92506102408801356133b981612f83565b80925050610260880135905092959891949750929550565b600080604083850312156133e457600080fd5b823567ffffffffffffffff8111156133fb57600080fd5b61340785828601612ed8565b925050602083013561341881612f83565b809150509250929050565b60005b8381101561343e578181015183820152602001613426565b50506000910152565b6000815180845261345f816020860160208601613423565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006116556020830184613447565b60008060008060008061026087890312156134be57600080fd5b86356134c981612f83565b9550602087013594506134de60408801612e66565b9350606087013567ffffffffffffffff8111156134fa57600080fd5b61350689828a01612ed8565b9350506135168860808901613116565b915061024087013590509295509295509295565b600080600080600080610260878903121561354457600080fd5b8635955061355460208801612e66565b9450604087013567ffffffffffffffff81111561357057600080fd5b61357c89828a01612ed8565b94505061358c8860608901613116565b925061022087013561359d81612f83565b91506102408701356135ae81612f83565b809150509295509295509295565b6000602082840312156135ce57600080fd5b81516135d981612fb3565b9392505050565b6000602082840312156135f257600080fd5b6040516020810181811067ffffffffffffffff8211171561361557613615612e7f565b6040529151825250919050565b805173ffffffffffffffffffffffffffffffffffffffff1682526020810151613663602084018273ffffffffffffffffffffffffffffffffffffffff169052565b50604081015161368b604084018273ffffffffffffffffffffffffffffffffffffffff169052565b50606081015161369f606084018215159052565b5060808181015180511515848301526020810151151560a08501526040810151151560c0850152606081015160e0850152908101516101008401525060a08101516101208381019190915260c082015161014084015260e082015161016084015261010082015161018084015201516101a090910152565b600061020063ffffffff8616835280602084015261373781840186613447565b915050611d526040830184613622565b600061022086835263ffffffff8616602084015280604084015261376d81840186613447565b9150506111e06060830184613622565b83815263ffffffff831660208201526060604082015260006111e06060830184613447565b73ffffffffffffffffffffffffffffffffffffffff8516815283602082015263ffffffff831660408201526080606082015260006111dd6080830184613447565b6000602082840312156137f557600080fd5b81516135d981612f83565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561165857611658613800565b60006020828403121561385457600080fd5b5051919050565b6000845161386d818460208901613423565b845190830190613881818360208901613423565b8451910190613894818360208801613423565b0195945050505050565b6101c081016116588284613622565b8181038181111561165857611658613800565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082613925577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7f2c00000000000000000000000000000000000000000000000000000000000000815260008251613962816001850160208701613423565b7f3a000000000000000000000000000000000000000000000000000000000000006001939091019283015250600201919050565b600082516139a8818460208701613423565b7f3a00000000000000000000000000000000000000000000000000000000000000920191825250600101919050565b600082516139e9818460208701613423565b919091019291505056fea2646970667358221220c09760b44635b98f2ba71ca1e7ce2ae73d9d72efbdaef3f48c09e84de99f7a4a64736f6c63430008100033";
class SkinnyOptimisticOracleV2Prod__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(_liveness, _finderAddress, _timerAddress, overrides) {
        return super.deploy(_liveness, _finderAddress, _timerAddress, overrides || {});
    }
    getDeployTransaction(_liveness, _finderAddress, _timerAddress, overrides) {
        return super.getDeployTransaction(_liveness, _finderAddress, _timerAddress, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.SkinnyOptimisticOracleV2Prod__factory = SkinnyOptimisticOracleV2Prod__factory;
SkinnyOptimisticOracleV2Prod__factory.bytecode = _bytecode;
SkinnyOptimisticOracleV2Prod__factory.abi = _abi;
