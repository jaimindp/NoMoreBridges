"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FullPolicyEscalationManager__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_optimisticOracleV3",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "time",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "resolution",
                type: "bool",
            },
        ],
        name: "ArbitrationResolutionSet",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "asserter",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "whitelisted",
                type: "bool",
            },
        ],
        name: "AsserterWhitelistSet",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "assertingCaller",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "whitelisted",
                type: "bool",
            },
        ],
        name: "AssertingCallerWhitelistSet",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "disputeCaller",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "whitelisted",
                type: "bool",
            },
        ],
        name: "DisputeCallerWhitelistSet",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bool",
                name: "blockByAssertingCaller",
                type: "bool",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "blockByAsserter",
                type: "bool",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "validateDisputers",
                type: "bool",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "arbitrateViaEscalationManager",
                type: "bool",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "discardOracle",
                type: "bool",
            },
        ],
        name: "EscalationManagerConfigured",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "time",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
        ],
        name: "PriceRequestAdded",
        type: "event",
    },
    {
        inputs: [],
        name: "arbitrateViaEscalationManager",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        name: "arbitrationResolutions",
        outputs: [
            {
                internalType: "bool",
                name: "valueSet",
                type: "bool",
            },
            {
                internalType: "bool",
                name: "resolution",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "assertionId",
                type: "bytes32",
            },
        ],
        name: "assertionDisputedCallback",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "assertionId",
                type: "bytes32",
            },
            {
                internalType: "bool",
                name: "assertedTruthfully",
                type: "bool",
            },
        ],
        name: "assertionResolvedCallback",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "blockByAsserter",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "blockByAssertingCaller",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bool",
                name: "_blockByAssertingCaller",
                type: "bool",
            },
            {
                internalType: "bool",
                name: "_blockByAsserter",
                type: "bool",
            },
            {
                internalType: "bool",
                name: "_validateDisputers",
                type: "bool",
            },
            {
                internalType: "bool",
                name: "_arbitrateViaEscalationManager",
                type: "bool",
            },
            {
                internalType: "bool",
                name: "_discardOracle",
                type: "bool",
            },
        ],
        name: "configureEscalationManager",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "discardOracle",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "assertionId",
                type: "bytes32",
            },
        ],
        name: "getAssertionPolicy",
        outputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "blockAssertion",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "arbitrateViaEscalationManager",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "discardOracle",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "validateDisputers",
                        type: "bool",
                    },
                ],
                internalType: "struct EscalationManagerInterface.AssertionPolicy",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "time",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
        ],
        name: "getPrice",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "time",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
        ],
        name: "getRequestId",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "assertionId",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "disputeCaller",
                type: "address",
            },
        ],
        name: "isDisputeAllowed",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "numericalTrue",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "optimisticOracleV3",
        outputs: [
            {
                internalType: "contract OptimisticOracleV3Interface",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "time",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
        ],
        name: "requestPrice",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "time",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                internalType: "bool",
                name: "arbitrationResolution",
                type: "bool",
            },
        ],
        name: "setArbitrationResolution",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "disputeCaller",
                type: "address",
            },
            {
                internalType: "bool",
                name: "value",
                type: "bool",
            },
        ],
        name: "setDisputeCallerInWhitelist",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "asserter",
                type: "address",
            },
            {
                internalType: "bool",
                name: "value",
                type: "bool",
            },
        ],
        name: "setWhitelistedAsserters",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "assertingCaller",
                type: "address",
            },
            {
                internalType: "bool",
                name: "value",
                type: "bool",
            },
        ],
        name: "setWhitelistedAssertingCallers",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "validateDisputers",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "whitelistedAsserters",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "whitelistedAssertingCallers",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "whitelistedDisputeCallers",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "";
class FullPolicyEscalationManager__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(_optimisticOracleV3, overrides) {
        return super.deploy(_optimisticOracleV3, overrides || {});
    }
    getDeployTransaction(_optimisticOracleV3, overrides) {
        return super.getDeployTransaction(_optimisticOracleV3, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.FullPolicyEscalationManager__factory = FullPolicyEscalationManager__factory;
FullPolicyEscalationManager__factory.bytecode = _bytecode;
FullPolicyEscalationManager__factory.abi = _abi;
