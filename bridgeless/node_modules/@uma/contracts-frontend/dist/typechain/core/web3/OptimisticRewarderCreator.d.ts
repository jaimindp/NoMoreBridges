/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract,
} from "./types";

interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export type CreatedOptimisticRewarder = ContractEventLog<{
  optimisticRewarder: string;
  includesToken: boolean;
  0: string;
  1: boolean;
}>;

export interface OptimisticRewarderCreator extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): OptimisticRewarderCreator;
  clone(): OptimisticRewarderCreator;
  methods: {
    createOptimisticRewarder(
      _name: string,
      _symbol: string,
      _baseUri: string,
      _liveness: number | string | BN,
      _bondToken: string,
      _bond: number | string | BN,
      _identifier: string | number[],
      _customAncillaryData: string | number[]
    ): NonPayableTransactionObject<string>;

    createOptimisticRewarderNoToken(
      _token: string,
      _liveness: number | string | BN,
      _bondToken: string,
      _bond: number | string | BN,
      _identifier: string | number[],
      _customAncillaryData: string | number[]
    ): NonPayableTransactionObject<string>;

    finder(): NonPayableTransactionObject<string>;
  };
  events: {
    CreatedOptimisticRewarder(
      cb?: Callback<CreatedOptimisticRewarder>
    ): EventEmitter;
    CreatedOptimisticRewarder(
      options?: EventOptions,
      cb?: Callback<CreatedOptimisticRewarder>
    ): EventEmitter;

    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };

  once(
    event: "CreatedOptimisticRewarder",
    cb: Callback<CreatedOptimisticRewarder>
  ): void;
  once(
    event: "CreatedOptimisticRewarder",
    options: EventOptions,
    cb: Callback<CreatedOptimisticRewarder>
  ): void;
}
