/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "src",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "dst",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "sig",
                type: "bytes32",
            },
        ],
        name: "LogForbid",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "src",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "dst",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "sig",
                type: "bytes32",
            },
        ],
        name: "LogPermit",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "authority",
                type: "address",
            },
        ],
        name: "LogSetAuthority",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
        ],
        name: "LogSetOwner",
        type: "event",
    },
    {
        inputs: [],
        name: "ANY",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "authority",
        outputs: [
            {
                internalType: "contract DSAuthority",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "src_",
                type: "address",
            },
            {
                internalType: "address",
                name: "dst_",
                type: "address",
            },
            {
                internalType: "bytes4",
                name: "sig",
                type: "bytes4",
            },
        ],
        name: "canCall",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "src",
                type: "address",
            },
            {
                internalType: "address",
                name: "dst",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "sig",
                type: "bytes32",
            },
        ],
        name: "forbid",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "src",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "dst",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "sig",
                type: "bytes32",
            },
        ],
        name: "forbid",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "src",
                type: "address",
            },
            {
                internalType: "address",
                name: "dst",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "sig",
                type: "bytes32",
            },
        ],
        name: "permit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "src",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "dst",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "sig",
                type: "bytes32",
            },
        ],
        name: "permit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract DSAuthority",
                name: "authority_",
                type: "address",
            },
        ],
        name: "setAuthority",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner_",
                type: "address",
            },
        ],
        name: "setOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50600180546001600160a01b031916339081179091556040517fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9490600090a2610adf8061005e6000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063a8542f6611610076578063bf7e214f1161005b578063bf7e214f146101b3578063cbeea68c146101d3578063f0217ce5146101e657600080fd5b8063a8542f661461015b578063b70096131461019057600080fd5b806379d88d87116100a757806379d88d87146100eb5780637a9e5e4b146100fe5780638da5cb5b1461011157600080fd5b806313af4035146100c35780632bc3217d146100d8575b600080fd5b6100d66100d1366004610986565b6101f9565b005b6100d66100e63660046109aa565b61029f565b6100d66100f93660046109eb565b6102d3565b6100d661010c366004610986565b610381565b6001546101319073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6101827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81565b604051908152602001610152565b6101a361019e366004610a17565b610425565b6040519015158152602001610152565b6000546101319073ffffffffffffffffffffffffffffffffffffffff1681565b6100d66101e13660046109aa565b610743565b6100d66101f43660046109eb565b61076e565b610227336000357fffffffff000000000000000000000000000000000000000000000000000000001661081f565b61023057600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9490600090a250565b6102ce8360601b6bffffffffffffffffffffffff19168360601b6bffffffffffffffffffffffff1916836102d3565b505050565b610301336000357fffffffff000000000000000000000000000000000000000000000000000000001661081f565b61030a57600080fd5b6000838152600260209081526040808320858452825280832084845290915280822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055518291849186917f95ba64c95d85e67ac83a0476c4a62ac2cf8ab2d0407545b8c9d79c3eefa6282991a4505050565b6103af336000357fffffffff000000000000000000000000000000000000000000000000000000001661081f565b6103b857600080fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316908117825560405190917f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada491a250565b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606084811b821660008181526002602090815260408083209488901b9095168083529381528482207fffffffff000000000000000000000000000000000000000000000000000000008716835290529283205490919060ff16806104eb5750600082815260026020908152604080832084845282528083207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff845290915290205460ff165b80610559575060008281526002602090815260408083207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff845282528083207fffffffff000000000000000000000000000000000000000000000000000000008816845290915290205460ff165b806105a2575060008281526002602090815260408083207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8452825280832090915290205460ff165b80610607575060008181527f38b5b2ceac7637132d27514ffcf440b705287635075af7b8bd5adcaa6a4cc5bb602090815260408083207fffffffff000000000000000000000000000000000000000000000000000000008816845290915290205460ff165b8061066a575060008181527f38b5b2ceac7637132d27514ffcf440b705287635075af7b8bd5adcaa6a4cc5bb602090815260408083207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff845290915290205460ff165b806106c557507fffffffff00000000000000000000000000000000000000000000000000000000841660009081527f47fa60fbc027ac3984ea309688a33182f4193c478b40ba8d294eb2cd3ddc4d97602052604090205460ff165b8061073957507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6000527f47fa60fbc027ac3984ea309688a33182f4193c478b40ba8d294eb2cd3ddc4d976020527ff423d1317b37667cd26005728bffa7c8b0499e133951fcf8e814d4fc5f4c98f65460ff165b9695505050505050565b6102ce8360601b6bffffffffffffffffffffffff19168360601b6bffffffffffffffffffffffff1916835b61079c336000357fffffffff000000000000000000000000000000000000000000000000000000001661081f565b6107a557600080fd5b6000838152600260209081526040808320858452825280832084845290915280822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055518291849186917f6f50375045128971c5469d343039ba7b8e30a5b190453737b28bda6f7a30677191a4505050565b60003073ffffffffffffffffffffffffffffffffffffffff8416036108465750600161095b565b60015473ffffffffffffffffffffffffffffffffffffffff908116908416036108715750600161095b565b60005473ffffffffffffffffffffffffffffffffffffffff166108965750600061095b565b6000546040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff00000000000000000000000000000000000000000000000000000000851660448301529091169063b700961390606401602060405180830381865afa158015610934573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109589190610a87565b90505b92915050565b73ffffffffffffffffffffffffffffffffffffffff8116811461098357600080fd5b50565b60006020828403121561099857600080fd5b81356109a381610961565b9392505050565b6000806000606084860312156109bf57600080fd5b83356109ca81610961565b925060208401356109da81610961565b929592945050506040919091013590565b600080600060608486031215610a0057600080fd5b505081359360208301359350604090920135919050565b600080600060608486031215610a2c57600080fd5b8335610a3781610961565b92506020840135610a4781610961565b915060408401357fffffffff0000000000000000000000000000000000000000000000000000000081168114610a7c57600080fd5b809150509250925092565b600060208284031215610a9957600080fd5b815180151581146109a357600080fdfea264697066735822122072462c491a70de6618364e64a340cd18dbdac1f101009534517081ba17e3068064736f6c63430008100033";
export class DSGuard__factory extends ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
DSGuard__factory.bytecode = _bytecode;
DSGuard__factory.abi = _abi;
