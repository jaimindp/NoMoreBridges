/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "add",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bool",
                name: "shouldFail",
                type: "bool",
            },
        ],
        name: "call",
        outputs: [],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
            },
        ],
        name: "multicall",
        outputs: [
            {
                internalType: "bytes[]",
                name: "results",
                type: "bytes[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "value",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b506106c6806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631003e2d2146100515780633fa4f24514610066578063ac9650d814610082578063b463fbfc146100a2575b600080fd5b61006461005f3660046102b3565b6100b5565b005b61006f60005481565b6040519081526020015b60405180910390f35b6100956100903660046102cc565b6100ce565b60405161007991906103af565b6100646100b036600461042f565b610249565b806000808282546100c69190610487565b909155505050565b60608167ffffffffffffffff8111156100e9576100e96104a0565b60405190808252806020026020018201604052801561011c57816020015b60608152602001906001900390816101075790505b50905060005b828110156102425760008030868685818110610140576101406104cf565b905060200281019061015291906104fe565b60405161016092919061056a565b600060405180830381855af49150503d806000811461019b576040519150601f19603f3d011682016040523d82523d6000602084013e6101a0565b606091505b50915091508161020f576044815110156101b957600080fd5b600481019050808060200190518101906101d3919061057a565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102069190610645565b60405180910390fd5b80848481518110610222576102226104cf565b60200260200101819052505050808061023a90610658565b915050610122565b5092915050565b806102b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f73686f756c644661696c2073657420746f2074727565000000000000000000006044820152606401610206565b50565b6000602082840312156102c557600080fd5b5035919050565b600080602083850312156102df57600080fd5b823567ffffffffffffffff808211156102f757600080fd5b818501915085601f83011261030b57600080fd5b81358181111561031a57600080fd5b8660208260051b850101111561032f57600080fd5b60209290920196919550909350505050565b60005b8381101561035c578181015183820152602001610344565b50506000910152565b6000815180845261037d816020860160208601610341565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610422577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452610410858351610365565b945092850192908501906001016103d6565b5092979650505050505050565b60006020828403121561044157600080fd5b8135801515811461045157600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561049a5761049a610458565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261053357600080fd5b83018035915067ffffffffffffffff82111561054e57600080fd5b60200191503681900382131561056357600080fd5b9250929050565b8183823760009101908152919050565b60006020828403121561058c57600080fd5b815167ffffffffffffffff808211156105a457600080fd5b818401915084601f8301126105b857600080fd5b8151818111156105ca576105ca6104a0565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610610576106106104a0565b8160405282815287602084870101111561062957600080fd5b61063a836020830160208801610341565b979650505050505050565b6020815260006104516020830184610365565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361068957610689610458565b506001019056fea2646970667358221220d0d0976574634aed13ddde1d2549a16aaf3e25358636dee63314dfd717c4c47164736f6c63430008100033";
export class MultiCallerTest__factory extends ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
MultiCallerTest__factory.bytecode = _bytecode;
MultiCallerTest__factory.abi = _abi;
