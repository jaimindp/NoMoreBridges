/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory, } from "ethers";
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_expirationTimestamp",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_collateralPerPair",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "collateralPerPair",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "expirationTimestamp",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b506040516100fe3803806100fe83398101604081905261002f9161003d565b600091909155600155610061565b6000806040838503121561005057600080fd5b505080516020909101519092909150565b608f8061006f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80639f43ddd2146037578063e964ae02146051575b600080fd5b603f60005481565b60405190815260200160405180910390f35b603f6001548156fea2646970667358221220897db154742c24335d9f88df188b9f9d7586e2383bf7ce4f91979c261e28b3c264736f6c63430008100033";
export class LongShortPairMock__factory extends ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(_expirationTimestamp, _collateralPerPair, overrides) {
        return super.deploy(_expirationTimestamp, _collateralPerPair, overrides || {});
    }
    getDeployTransaction(_expirationTimestamp, _collateralPerPair, overrides) {
        return super.getDeployTransaction(_expirationTimestamp, _collateralPerPair, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
LongShortPairMock__factory.bytecode = _bytecode;
LongShortPairMock__factory.abi = _abi;
