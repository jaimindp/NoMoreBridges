/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        inputs: [],
        name: "bridge",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "destAddr",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "l2CallValue",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "maxSubmissionCost",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "excessFeeRefundAddress",
                type: "address",
            },
            {
                internalType: "address",
                name: "callValueRefundAddress",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "maxGas",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "gasPriceBid",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "createRetryableTicketNoRefundAliasRewrite",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b506101a3806100206000396000f3fe6080604052600436106100295760003560e01c80631b871c8d1461002e578063e78cea921461005e575b600080fd5b61004b61003c3660046100a2565b60009998505050505050505050565b6040519081526020015b60405180910390f35b34801561006a57600080fd5b50604051308152602001610055565b803573ffffffffffffffffffffffffffffffffffffffff8116811461009d57600080fd5b919050565b60008060008060008060008060006101008a8c0312156100c157600080fd5b6100ca8a610079565b985060208a0135975060408a013596506100e660608b01610079565b95506100f460808b01610079565b945060a08a0135935060c08a0135925060e08a013567ffffffffffffffff8082111561011f57600080fd5b818c0191508c601f83011261013357600080fd5b81358181111561014257600080fd5b8d602082850101111561015457600080fd5b602083019450809350505050929598509295985092959856fea26469706673582212209ab58a665b37d03a8e697d5178d74530f2f3d229dba50e47ae16f9fc3b4c38a364736f6c63430008100033";
export class ArbitrumInboxMock__factory extends ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
ArbitrumInboxMock__factory.bytecode = _bytecode;
ArbitrumInboxMock__factory.abi = _abi;
