/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_cacheAddr",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: true,
        inputs: [
            {
                indexed: true,
                internalType: "bytes4",
                name: "sig",
                type: "bytes4",
            },
            {
                indexed: true,
                internalType: "address",
                name: "guy",
                type: "address",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "foo",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "bar",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "fax",
                type: "bytes",
            },
        ],
        name: "LogNote",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "authority",
                type: "address",
            },
        ],
        name: "LogSetAuthority",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
        ],
        name: "LogSetOwner",
        type: "event",
    },
    {
        stateMutability: "payable",
        type: "fallback",
    },
    {
        inputs: [],
        name: "authority",
        outputs: [
            {
                internalType: "contract DSAuthority",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "cache",
        outputs: [
            {
                internalType: "contract DSProxyCache",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_target",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "_data",
                type: "bytes",
            },
        ],
        name: "execute",
        outputs: [
            {
                internalType: "bytes32",
                name: "response",
                type: "bytes32",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "_code",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "_data",
                type: "bytes",
            },
        ],
        name: "execute",
        outputs: [
            {
                internalType: "address",
                name: "target",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "response",
                type: "bytes32",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract DSAuthority",
                name: "authority_",
                type: "address",
            },
        ],
        name: "setAuthority",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_cacheAddr",
                type: "address",
            },
        ],
        name: "setCache",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner_",
                type: "address",
            },
        ],
        name: "setOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60806040523480156200001157600080fd5b5060405162000da238038062000da2833981016040819052620000349162000209565b600180546001600160a01b031916339081179091556040517fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9490600090a26200007d816200008e565b6200008757600080fd5b506200028e565b6000620000a7336001600160e01b031983351662000123565b620000b157600080fd5b6040516004359060243590819083903390600080356001600160e01b03191691620000df919036906200023b565b60405180910390a46001600160a01b038416620000fb57600080fd5b600280546001600160a01b0386166001600160a01b0319909116179055600192505050919050565b6000306001600160a01b038416036200013f5750600162000203565b6001546001600160a01b03908116908416036200015f5750600162000203565b6000546001600160a01b0316620001795750600062000203565b60005460405163b700961360e01b81526001600160a01b0385811660048301523060248301526001600160e01b0319851660448301529091169063b700961390606401602060405180830381865afa158015620001da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200020091906200026a565b90505b92915050565b6000602082840312156200021c57600080fd5b81516001600160a01b03811681146200023457600080fd5b9392505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b6000602082840312156200027d57600080fd5b815180151581146200023457600080fd5b610b04806200029e6000396000f3fe6080604052600436106100785760003560e01c80637a9e5e4b1161004b5780637a9e5e4b146101515780638da5cb5b14610171578063948f50761461019e578063bf7e214f146101c157005b806313af40351461007a5780631cff79cd1461009a5780631f6a1eb9146100c057806360c7d295146100ff575b005b34801561008657600080fd5b5061007861009536600461082e565b6101ee565b6100ad6100a836600461092c565b610294565b6040519081526020015b60405180910390f35b6100d36100ce36600461097c565b6103c9565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683526020830191909152016100b7565b34801561010b57600080fd5b5060025461012c9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100b7565b34801561015d57600080fd5b5061007861016c36600461082e565b610531565b34801561017d57600080fd5b5060015461012c9073ffffffffffffffffffffffffffffffffffffffff1681565b6101b16101ac36600461082e565b6105d5565b60405190151581526020016100b7565b3480156101cd57600080fd5b5060005461012c9073ffffffffffffffffffffffffffffffffffffffff1681565b61021c336000357fffffffff00000000000000000000000000000000000000000000000000000000166106c7565b61022557600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9490600090a250565b60006102c4336000357fffffffff00000000000000000000000000000000000000000000000000000000166106c7565b6102cd57600080fd5b6040516004359060243590819083903390600080357fffffffff000000000000000000000000000000000000000000000000000000001691610311919036906109d6565b60405180910390a473ffffffffffffffffffffffffffffffffffffffff851661039a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f5461726765742063616e74206265203078206164647265737300000000000000604482015260640160405180910390fd5b60206000855160208701886113885a03f460005193508015600181036103bf57600080fd5b5050505092915050565b6002546040517f8bf4515c000000000000000000000000000000000000000000000000000000008152600091829173ffffffffffffffffffffffffffffffffffffffff90911690638bf4515c90610424908790600401610a23565b602060405180830381865afa158015610441573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104659190610a8f565b915073ffffffffffffffffffffffffffffffffffffffff821661051e576002546040517f7ed0c3b200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690637ed0c3b2906104d8908790600401610a23565b6020604051808303816000875af11580156104f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051b9190610a8f565b91505b6105288284610294565b90509250929050565b61055f336000357fffffffff00000000000000000000000000000000000000000000000000000000166106c7565b61056857600080fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316908117825560405190917f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada491a250565b6000610605336000357fffffffff00000000000000000000000000000000000000000000000000000000166106c7565b61060e57600080fd5b6040516004359060243590819083903390600080357fffffffff000000000000000000000000000000000000000000000000000000001691610652919036906109d6565b60405180910390a473ffffffffffffffffffffffffffffffffffffffff841661067a57600080fd5b6002805473ffffffffffffffffffffffffffffffffffffffff86167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116179055600192505050919050565b60003073ffffffffffffffffffffffffffffffffffffffff8416036106ee57506001610803565b60015473ffffffffffffffffffffffffffffffffffffffff9081169084160361071957506001610803565b60005473ffffffffffffffffffffffffffffffffffffffff1661073e57506000610803565b6000546040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff00000000000000000000000000000000000000000000000000000000851660448301529091169063b700961390606401602060405180830381865afa1580156107dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108009190610aac565b90505b92915050565b73ffffffffffffffffffffffffffffffffffffffff8116811461082b57600080fd5b50565b60006020828403121561084057600080fd5b813561084b81610809565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261089257600080fd5b813567ffffffffffffffff808211156108ad576108ad610852565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156108f3576108f3610852565b8160405283815286602085880101111561090c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561093f57600080fd5b823561094a81610809565b9150602083013567ffffffffffffffff81111561096657600080fd5b61097285828601610881565b9150509250929050565b6000806040838503121561098f57600080fd5b823567ffffffffffffffff808211156109a757600080fd5b6109b386838701610881565b935060208501359150808211156109c957600080fd5b5061097285828601610881565b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101919050565b600060208083528351808285015260005b81811015610a5057858101830151858201604001528201610a34565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b600060208284031215610aa157600080fd5b815161084b81610809565b600060208284031215610abe57600080fd5b8151801515811461084b57600080fdfea26469706673582212205ace1e0b28bda1352a540ed1f8394e4da9b15f006084988f21151f8856449fc864736f6c63430008100033";
export class DSProxy__factory extends ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(_cacheAddr, overrides) {
        return super.deploy(_cacheAddr, overrides || {});
    }
    getDeployTransaction(_cacheAddr, overrides) {
        return super.getDeployTransaction(_cacheAddr, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
DSProxy__factory.bytecode = _bytecode;
DSProxy__factory.abi = _abi;
