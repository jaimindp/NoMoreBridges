/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        inputs: [
            {
                internalType: "contract OptimisticOracleV2",
                name: "_optimisticOracle",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "ancillaryData",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "clearState",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "collateralCurrency",
        outputs: [
            {
                internalType: "contract IERC20",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "expirationTimestamp",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "identifier",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "price",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_identifier",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_timestamp",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "_ancillaryData",
                type: "bytes",
            },
            {
                internalType: "uint256",
                name: "_refund",
                type: "uint256",
            },
        ],
        name: "priceDisputed",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_identifier",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_timestamp",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "_ancillaryData",
                type: "bytes",
            },
        ],
        name: "priceProposed",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_identifier",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_timestamp",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "_ancillaryData",
                type: "bytes",
            },
            {
                internalType: "int256",
                name: "_price",
                type: "int256",
            },
        ],
        name: "priceSettled",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "refund",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_identifier",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_timestamp",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "_ancillaryData",
                type: "bytes",
            },
            {
                internalType: "contract IERC20",
                name: "currency",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "reward",
                type: "uint256",
            },
        ],
        name: "requestPrice",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_identifier",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_timestamp",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "_ancillaryData",
                type: "bytes",
            },
            {
                internalType: "uint256",
                name: "bond",
                type: "uint256",
            },
        ],
        name: "setBond",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_identifier",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_timestamp",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "_ancillaryData",
                type: "bytes",
            },
            {
                internalType: "bool",
                name: "_callbackOnPriceProposed",
                type: "bool",
            },
            {
                internalType: "bool",
                name: "_callbackOnPriceDisputed",
                type: "bool",
            },
            {
                internalType: "bool",
                name: "_callbackOnPriceSettled",
                type: "bool",
            },
        ],
        name: "setCallbacks",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_identifier",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_timestamp",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "_ancillaryData",
                type: "bytes",
            },
            {
                internalType: "uint256",
                name: "customLiveness",
                type: "uint256",
            },
        ],
        name: "setCustomLiveness",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_identifier",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_timestamp",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "_ancillaryData",
                type: "bytes",
            },
        ],
        name: "setEventBased",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_expirationTimestamp",
                type: "uint256",
            },
        ],
        name: "setExpirationTimestamp",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_identifier",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_timestamp",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "_ancillaryData",
                type: "bytes",
            },
        ],
        name: "setRefundOnDispute",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bool",
                name: "_shouldRevert",
                type: "bool",
            },
        ],
        name: "setRevert",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_identifier",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_timestamp",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "_ancillaryData",
                type: "bytes",
            },
        ],
        name: "settleAndGetPrice",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "shouldRevert",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "timestamp",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60806040526000805460ff60a01b1916905534801561001d57600080fd5b506040516110be3803806110be83398101604081905261003c91610061565b600080546001600160a01b0319166001600160a01b0392909216919091179055610091565b60006020828403121561007357600080fd5b81516001600160a01b038116811461008a57600080fd5b9392505050565b61101e806100a06000396000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c80637998a1c4116100d8578063a035b1fe1161008c578063d3072d8211610066578063d3072d821461032e578063f0136a6314610363578063f327b0751461037c57600080fd5b8063a035b1fe14610309578063ad5a755a14610312578063b80777ea1461032557600080fd5b806391f58dcb116100bd57806391f58dcb146102da5780639c2fd1df146102ed5780639f43ddd21461030057600080fd5b80637998a1c4146102795780638fb5f1711461028257600080fd5b8063120698af1161012f57806353b592391161011457806353b592391461023a578063590e1ae31461025b578063655990571461026457600080fd5b8063120698af14610214578063473c45fe1461022757600080fd5b80630d8f2372116101605780630d8f2372146101a45780630de15fd9146101b757806311df92f11461020157600080fd5b806304cc1fd51461017c57806304f4418114610191575b600080fd5b61018f61018a366004610aa0565b61038f565b005b61018f61019f366004610af8565b600755565b61018f6101b2366004610aa0565b6103d6565b6006546101d79073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61018f61020f366004610b11565b61041d565b61018f610222366004610b95565b61058f565b61018f610235366004610aa0565b610620565b61024d610248366004610b95565b6106b4565b6040519081526020016101f8565b61024d60045481565b61026c61075a565b6040516101f89190610c49565b61024d60015481565b61018f610290366004610c74565b6000805491151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff909216919091179055565b61018f6102e8366004610b95565b6107e8565b61018f6102fb366004610b95565b610842565b61024d60075481565b61024d60055481565b61018f610320366004610aa0565b610886565b61024d60025481565b6000546103539074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020016101f8565b61018f6000600181905560028190556004819055600555565b61018f61038a366004610c91565b61092c565b60005474010000000000000000000000000000000000000000900460ff16156103b757600080fd5b6001849055600283905560036103cd8382610db8565b50600555505050565b60005474010000000000000000000000000000000000000000900460ff16156103fe57600080fd5b6001849055600283905560036104148382610db8565b50600455505050565b600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8481169182179092556000546040517f095ea7b300000000000000000000000000000000000000000000000000000000815292166004830152602482018390529063095ea7b3906044016020604051808303816000875af11580156104c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e59190610ed2565b506000546040517f11df92f100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906311df92f1906105449088908890889088908890600401610eef565b6020604051808303816000875af1158015610563573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105879190610f38565b505050505050565b6000546040517f120698af00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063120698af906105e990869086908690600401610f51565b600060405180830381600087803b15801561060357600080fd5b505af1158015610617573d6000803e3d6000fd5b50505050505050565b6000546040517f473c45fe00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063473c45fe9061067c908790879087908790600401610f79565b600060405180830381600087803b15801561069657600080fd5b505af11580156106aa573d6000803e3d6000fd5b5050505050505050565b600080546040517f53b5923900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906353b592399061070f90879087908790600401610f51565b6020604051808303816000875af115801561072e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107529190610f38565b949350505050565b6003805461076790610d1a565b80601f016020809104026020016040519081016040528092919081815260200182805461079390610d1a565b80156107e05780601f106107b5576101008083540402835291602001916107e0565b820191906000526020600020905b8154815290600101906020018083116107c357829003601f168201915b505050505081565b6000546040517f91f58dcb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906391f58dcb906105e990869086908690600401610f51565b60005474010000000000000000000000000000000000000000900460ff161561086a57600080fd5b6001839055600282905560036108808282610db8565b50505050565b6000546040517fad5a755a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063ad5a755a906108e2908790879087908790600401610f79565b6020604051808303816000875af1158015610901573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109259190610f38565b5050505050565b6000546040517ff327b07500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063f327b0759061098c90899089908990899089908990600401610fa9565b600060405180830381600087803b1580156109a657600080fd5b505af11580156109ba573d6000803e3d6000fd5b50505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f830112610a0657600080fd5b813567ffffffffffffffff80821115610a2157610a216109c6565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715610a6757610a676109c6565b81604052838152866020858801011115610a8057600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215610ab657600080fd5b8435935060208501359250604085013567ffffffffffffffff811115610adb57600080fd5b610ae7878288016109f5565b949793965093946060013593505050565b600060208284031215610b0a57600080fd5b5035919050565b600080600080600060a08688031215610b2957600080fd5b8535945060208601359350604086013567ffffffffffffffff811115610b4e57600080fd5b610b5a888289016109f5565b935050606086013573ffffffffffffffffffffffffffffffffffffffff81168114610b8457600080fd5b949793965091946080013592915050565b600080600060608486031215610baa57600080fd5b8335925060208401359150604084013567ffffffffffffffff811115610bcf57600080fd5b610bdb868287016109f5565b9150509250925092565b6000815180845260005b81811015610c0b57602081850181015186830182015201610bef565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081526000610c5c6020830184610be5565b9392505050565b8015158114610c7157600080fd5b50565b600060208284031215610c8657600080fd5b8135610c5c81610c63565b60008060008060008060c08789031215610caa57600080fd5b8635955060208701359450604087013567ffffffffffffffff811115610ccf57600080fd5b610cdb89828a016109f5565b9450506060870135610cec81610c63565b92506080870135610cfc81610c63565b915060a0870135610d0c81610c63565b809150509295509295509295565b600181811c90821680610d2e57607f821691505b602082108103610d67577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f821115610db357600081815260208120601f850160051c81016020861015610d945750805b601f850160051c820191505b8181101561058757828155600101610da0565b505050565b815167ffffffffffffffff811115610dd257610dd26109c6565b610de681610de08454610d1a565b84610d6d565b602080601f831160018114610e395760008415610e035750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555610587565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015610e8657888601518255948401946001909101908401610e67565b5085821015610ec257878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215610ee457600080fd5b8151610c5c81610c63565b85815284602082015260a060408201526000610f0e60a0830186610be5565b73ffffffffffffffffffffffffffffffffffffffff94909416606083015250608001529392505050565b600060208284031215610f4a57600080fd5b5051919050565b838152826020820152606060408201526000610f706060830184610be5565b95945050505050565b848152836020820152608060408201526000610f986080830185610be5565b905082606083015295945050505050565b86815285602082015260c060408201526000610fc860c0830187610be5565b9415156060830152509115156080830152151560a090910152939250505056fea264697066735822122073318ebc4bbc313def48f32aad7eb2b61b20b260f5daa29296d5c979fbcd8c9764736f6c63430008100033";
export class OptimisticRequesterTest__factory extends ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(_optimisticOracle, overrides) {
        return super.deploy(_optimisticOracle, overrides || {});
    }
    getDeployTransaction(_optimisticOracle, overrides) {
        return super.getDeployTransaction(_optimisticOracle, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
OptimisticRequesterTest__factory.bytecode = _bytecode;
OptimisticRequesterTest__factory.abi = _abi;
