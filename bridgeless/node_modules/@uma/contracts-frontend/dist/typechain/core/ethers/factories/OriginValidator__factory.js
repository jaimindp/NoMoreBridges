/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "upgrader",
                type: "address",
            },
        ],
        name: "validate",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5060d38061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063207c64fb14602d575b600080fd5b603c60383660046062565b603e565b005b3273ffffffffffffffffffffffffffffffffffffffff821614605f57600080fd5b50565b600060208284031215607357600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114609657600080fd5b939250505056fea26469706673582212209a2a99b22a4a9d213ffcd88f176e6c1b7a93fbc5214a6dbfcc404d79774b1be564736f6c63430008100033";
export class OriginValidator__factory extends ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
OriginValidator__factory.bytecode = _bytecode;
OriginValidator__factory.abi = _abi;
