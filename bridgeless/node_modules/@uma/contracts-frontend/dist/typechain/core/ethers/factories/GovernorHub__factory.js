/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "address",
                name: "messenger",
                type: "address",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "to",
                        type: "address",
                    },
                    {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes",
                    },
                ],
                indexed: false,
                internalType: "struct GovernorSpoke.Call[]",
                name: "calls",
                type: "tuple[]",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "dataSentToChild",
                type: "bytes",
            },
        ],
        name: "RelayedGovernanceRequest",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "address",
                name: "parentMessenger",
                type: "address",
            },
        ],
        name: "SetParentMessenger",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "messengers",
        outputs: [
            {
                internalType: "contract ParentMessengerInterface",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
            },
        ],
        name: "multicall",
        outputs: [
            {
                internalType: "bytes[]",
                name: "results",
                type: "bytes[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "to",
                        type: "address",
                    },
                    {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes",
                    },
                ],
                internalType: "struct GovernorSpoke.Call[]",
                name: "calls",
                type: "tuple[]",
            },
        ],
        name: "relayGovernance",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
            },
            {
                internalType: "contract ParentMessengerInterface",
                name: "messenger",
                type: "address",
            },
        ],
        name: "setMessenger",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5061001a33610032565b6000805460ff60a01b1916600160a01b179055610082565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610eb3806100916000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a61461010a5780638da5cb5b14610112578063ac9650d814610130578063f2fde38b1461015057600080fd5b8063109ea4bf1461008257806324ec66b31461009757806335821038146100f7575b600080fd5b6100956100903660046107fe565b610163565b005b6100cd6100a536600461082e565b60016020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b610095610105366004610934565b610262565b61009561041c565b60005473ffffffffffffffffffffffffffffffffffffffff166100cd565b61014361013e366004610aab565b610430565b6040516100ee9190610b8e565b61009561015e366004610c0e565b6105ab565b61016b610662565b610198600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b6101a06106e6565b60008281526001602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85169081179091559051909184917fcf56c779a9eca65535bf3ac68fb105d582ccb9c630e86864b96a2994afec6f939190a361025e600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b5050565b61026a610662565b610297600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b61029f6106e6565b6000816040516020016102b29190610cb1565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282526000868152600160205291909120547f4c09e6e800000000000000000000000000000000000000000000000000000000835290925073ffffffffffffffffffffffffffffffffffffffff1690634c09e6e890610340908490600401610cc4565b600060405180830381600087803b15801561035a57600080fd5b505af115801561036e573d6000803e3d6000fd5b5050506000848152600160205260409081902054905173ffffffffffffffffffffffffffffffffffffffff909116915084907fe16a826432ccf4c9f0f27428e93786d4a6926fa64c4d7c8e12ef9408a7750ca8906103cf9086908690610cd7565b60405180910390a35061025e600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b6104246106e6565b61042e6000610767565b565b60608167ffffffffffffffff81111561044b5761044b610847565b60405190808252806020026020018201604052801561047e57816020015b60608152602001906001900390816104695790505b50905060005b828110156105a457600080308686858181106104a2576104a2610d05565b90506020028101906104b49190610d34565b6040516104c2929190610da0565b600060405180830381855af49150503d80600081146104fd576040519150601f19603f3d011682016040523d82523d6000602084013e610502565b606091505b5091509150816105715760448151101561051b57600080fd5b600481019050808060200190518101906105359190610db0565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105689190610cc4565b60405180910390fd5b8084848151811061058457610584610d05565b60200260200101819052505050808061059c90610e1e565b915050610484565b5092915050565b6105b36106e6565b73ffffffffffffffffffffffffffffffffffffffff8116610656576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610568565b61065f81610767565b50565b60005474010000000000000000000000000000000000000000900460ff1661042e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610568565b60005473ffffffffffffffffffffffffffffffffffffffff16331461042e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610568565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b73ffffffffffffffffffffffffffffffffffffffff8116811461065f57600080fd5b6000806040838503121561081157600080fd5b823591506020830135610823816107dc565b809150509250929050565b60006020828403121561084057600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561089957610899610847565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156108e6576108e6610847565b604052919050565b600067ffffffffffffffff82111561090857610908610847565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600080604080848603121561094857600080fd5b8335925060208085013567ffffffffffffffff8082111561096857600080fd5b818701915087601f83011261097c57600080fd5b81358181111561098e5761098e610847565b8060051b61099d85820161089f565b918252838101850191858101908b8411156109b757600080fd5b86860192505b83831015610a99578235858111156109d55760008081fd5b8601808d037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001891315610a095760008081fd5b610a11610876565b88820135610a1e816107dc565b8152818a013587811115610a325760008081fd5b8083019250508d603f830112610a485760008081fd5b88820135610a5d610a58826108ee565b61089f565b8181528f8c838601011115610a725760008081fd5b818c85018c83013760009181018b0191909152818a015283525091860191908601906109bd565b80985050505050505050509250929050565b60008060208385031215610abe57600080fd5b823567ffffffffffffffff80821115610ad657600080fd5b818501915085601f830112610aea57600080fd5b813581811115610af957600080fd5b8660208260051b8501011115610b0e57600080fd5b60209290920196919550909350505050565b60005b83811015610b3b578181015183820152602001610b23565b50506000910152565b60008151808452610b5c816020860160208601610b20565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610c01577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452610bef858351610b44565b94509285019290850190600101610bb5565b5092979650505050505050565b600060208284031215610c2057600080fd5b8135610c2b816107dc565b9392505050565b600081518084526020808501808196508360051b8101915082860160005b85811015610ca45782840389528151805173ffffffffffffffffffffffffffffffffffffffff1685528501516040868601819052610c9081870183610b44565b9a87019a9550505090840190600101610c50565b5091979650505050505050565b602081526000610c2b6020830184610c32565b602081526000610c2b6020830184610b44565b604081526000610cea6040830185610c32565b8281036020840152610cfc8185610b44565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610d6957600080fd5b83018035915067ffffffffffffffff821115610d8457600080fd5b602001915036819003821315610d9957600080fd5b9250929050565b8183823760009101908152919050565b600060208284031215610dc257600080fd5b815167ffffffffffffffff811115610dd957600080fd5b8201601f81018413610dea57600080fd5b8051610df8610a58826108ee565b818152856020838501011115610e0d57600080fd5b610cfc826020830160208601610b20565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610e76577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220583c09911b08a6525e30c0e4deb86779781bb5f93d79937385a262b28359225664736f6c63430008100033";
export class GovernorHub__factory extends ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
GovernorHub__factory.bytecode = _bytecode;
GovernorHub__factory.abi = _abi;
