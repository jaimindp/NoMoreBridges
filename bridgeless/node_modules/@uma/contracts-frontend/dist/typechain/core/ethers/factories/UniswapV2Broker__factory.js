/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "truePriceTokenA",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "truePriceTokenB",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "reserveA",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "reserveB",
                type: "uint256",
            },
        ],
        name: "computeTradeToMoveMarket",
        outputs: [
            {
                internalType: "bool",
                name: "aToB",
                type: "bool",
            },
            {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "factory",
                type: "address",
            },
            {
                internalType: "address",
                name: "tokenA",
                type: "address",
            },
            {
                internalType: "address",
                name: "tokenB",
                type: "address",
            },
        ],
        name: "getReserves",
        outputs: [
            {
                internalType: "uint256",
                name: "reserveA",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "reserveB",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bool",
                name: "tradingAsEOA",
                type: "bool",
            },
            {
                internalType: "address",
                name: "uniswapRouter",
                type: "address",
            },
            {
                internalType: "address",
                name: "uniswapFactory",
                type: "address",
            },
            {
                internalType: "address[2]",
                name: "swappedTokens",
                type: "address[2]",
            },
            {
                internalType: "uint256[2]",
                name: "truePriceTokens",
                type: "uint256[2]",
            },
            {
                internalType: "uint256[2]",
                name: "maxSpendTokens",
                type: "uint256[2]",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
            },
        ],
        name: "swapToPrice",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5061147d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632e3ed3f9146100465780633274946114610075578063d046961a1461009d575b600080fd5b610059610054366004610ee0565b6100b2565b6040805192151583526020830191909152015b60405180910390f35b610088610083366004610f3b565b610141565b6040805192835260208301919091520161006c565b6100b06100ab366004611086565b610240565b005b600080856100c18587866105aa565b10915060006100d08585610743565b905060006100fe6100f983866100e657896100e8565b8a5b876100f3578b6105aa565b8a6105aa565b610758565b905060008461010d578561010f565b865b9050808210156101285760008094509450505050610138565b61013282826108e6565b93505050505b94509492505050565b600080600061015085856108f2565b509050600080610161888888610a76565b73ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156101ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cf919061117e565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff1691508273ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461022e578082610231565b81815b90999098509650505050505050565b83518790158015906102555750602085015115155b6102c0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f53776170546f50726963653a205a45524f5f505249434500000000000000000060448201526064015b60405180910390fd5b83511515806102d25750602084015115155b610338576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f53776170546f50726963653a205a45524f5f5350454e4400000000000000000060448201526064016102b7565b60008080806103558b8b8360200201518c60016020020151610141565b8a5160208c015192945090925061036d9184846100b2565b90945092505050806103db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f53776170546f50726963653a205a45524f5f414d4f554e545f494e000000000060448201526064016102b7565b6000826103ec5760208701516103ef565b86515b9050808211156103fd578091505b60008361040e5760208a0151610411565b89515b9050600084610421578a51610427565b60208b01515b9050610434828786610bab565b8d156104465761044682333087610d41565b604080516002808252606082018352600092602083019080368337019050509050828160008151811061047b5761047b6111ce565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505081816001815181106104c9576104c96111ce565b73ffffffffffffffffffffffffffffffffffffffff92831660209182029290920101526040517f38ed1739000000000000000000000000000000000000000000000000000000008152908816906338ed17399061053390889060009086908f908f906004016111fd565b6000604051808303816000875af1158015610552573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526105989190810190611288565b50505050505050505050505050505050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8587098587029250828110838203039150508060000361060157600084116105f657600080fd5b50829004905061073c565b80841161060d57600080fd5b600084868809808403938111909203919050600061062d8619600161135d565b861695869004959384900493600081900304600101905061064e8184611370565b90931792600061065f876003611370565b600218905061066e8188611370565b6106799060026113ad565b6106839082611370565b905061068f8188611370565b61069a9060026113ad565b6106a49082611370565b90506106b08188611370565b6106bb9060026113ad565b6106c59082611370565b90506106d18188611370565b6106dc9060026113ad565b6106e69082611370565b90506106f28188611370565b6106fd9060026113ad565b6107079082611370565b90506107138188611370565b61071e9060026113ad565b6107289082611370565b90506107348186611370565b955050505050505b9392505050565b600061074f8284611370565b90505b92915050565b60008160000361076a57506000919050565b81600170010000000000000000000000000000000082106107905760809190911c9060401b5b6801000000000000000082106107ab5760409190911c9060201b5b64010000000082106107c25760209190911c9060101b5b6201000082106107d75760109190911c9060081b5b61010082106107eb5760089190911c9060041b5b601082106107fe5760049190911c9060021b5b6008821061080a5760011b5b600161081682866113c0565b610820908361135d565b901c9050600161083082866113c0565b61083a908361135d565b901c9050600161084a82866113c0565b610854908361135d565b901c9050600161086482866113c0565b61086e908361135d565b901c9050600161087e82866113c0565b610888908361135d565b901c9050600161089882866113c0565b6108a2908361135d565b901c905060016108b282866113c0565b6108bc908361135d565b901c905060006108cc82866113c0565b90508082106108db57806108dd565b815b95945050505050565b600061074f82846113ad565b6000808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f556e697377617056324c6962726172793a204944454e544943414c5f4144445260448201527f455353455300000000000000000000000000000000000000000000000000000060648201526084016102b7565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16106109ea5782846109ed565b83835b909250905073ffffffffffffffffffffffffffffffffffffffff8216610a6f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f556e697377617056324c6962726172793a205a45524f5f41444452455353000060448201526064016102b7565b9250929050565b6000806000610a8585856108f2565b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606084811b8216602084015283901b1660348201529193509150869060480160405160208183030381529060405280519060200120604051602001610b6b9291907fff00000000000000000000000000000000000000000000000000000000000000815260609290921b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016600183015260158201527f96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f603582015260550190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101209695505050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001790529151600092839290871691610c4291906113fb565b6000604051808303816000865af19150503d8060008114610c7f576040519150601f19603f3d011682016040523d82523d6000602084013e610c84565b606091505b5091509150818015610cae575080511580610cae575080806020019051810190610cae919061142a565b610d3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f5472616e7366657248656c7065723a3a73616665417070726f76653a2061707060448201527f726f7665206661696c656400000000000000000000000000000000000000000060648201526084016102b7565b5050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790529151600092839290881691610de091906113fb565b6000604051808303816000865af19150503d8060008114610e1d576040519150601f19603f3d011682016040523d82523d6000602084013e610e22565b606091505b5091509150818015610e4c575080511580610e4c575080806020019051810190610e4c919061142a565b610ed8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260448201527f616e7366657246726f6d206661696c656400000000000000000000000000000060648201526084016102b7565b505050505050565b60008060008060808587031215610ef657600080fd5b5050823594602084013594506040840135936060013592509050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610f3657600080fd5b919050565b600080600060608486031215610f5057600080fd5b610f5984610f12565b9250610f6760208501610f12565b9150610f7560408501610f12565b90509250925092565b8015158114610f8c57600080fd5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610fe157610fe1610f8f565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561102e5761102e610f8f565b604052919050565b600082601f83011261104757600080fd5b61104f610fbe565b80604084018581111561106157600080fd5b845b8181101561107b578035845260209384019301611063565b509095945050505050565b600080600080600080600080610160898b0312156110a357600080fd5b88356110ae81610f7e565b975060206110bd8a8201610f12565b97506110cb60408b01610f12565b96508a607f8b01126110dc57600080fd5b6110e4610fbe565b8060a08c018d8111156110f657600080fd5b60608d015b818110156111195761110c81610f12565b84529284019284016110fb565b508198506111278e82611036565b97505050505061113a8a60e08b01611036565b92506111496101208a01610f12565b915061014089013590509295985092959890939650565b80516dffffffffffffffffffffffffffff81168114610f3657600080fd5b60008060006060848603121561119357600080fd5b61119c84611160565b92506111aa60208501611160565b9150604084015163ffffffff811681146111c357600080fd5b809150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b8181101561125a57845173ffffffffffffffffffffffffffffffffffffffff1683529383019391830191600101611228565b505073ffffffffffffffffffffffffffffffffffffffff969096166060850152505050608001529392505050565b6000602080838503121561129b57600080fd5b825167ffffffffffffffff808211156112b357600080fd5b818501915085601f8301126112c757600080fd5b8151818111156112d9576112d9610f8f565b8060051b91506112ea848301610fe7565b818152918301840191848101908884111561130457600080fd5b938501935b8385101561132257845182529385019390850190611309565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156107525761075261132e565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113a8576113a861132e565b500290565b818103818111156107525761075261132e565b6000826113f6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000825160005b8181101561141c5760208186018101518583015201611402565b506000920191825250919050565b60006020828403121561143c57600080fd5b815161073c81610f7e56fea2646970667358221220b8634373517658709d6c735fef5a8ab018fc51180e07a36ff5008bff0753205564736f6c63430008100033";
export class UniswapV2Broker__factory extends ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
UniswapV2Broker__factory.bytecode = _bytecode;
UniswapV2Broker__factory.abi = _abi;
