import Web3 from "web3";
import { BN } from "./types";
import bn from "bignumber.js";
export declare function encodePriceSqrt<T extends {
    toString: () => string;
}, U extends {
    toString: () => string;
}>(reserve1: T, reserve0: U): bn;
export declare function decodePriceSqrt(priseSqrt: string): bn;
export declare function getCurrentPrice(poolAddress: string, web3: Web3): Promise<bn>;
export declare function encodePath(path: string[], fees: BN[] | string[] | number[]): string;
export declare function toBNWei(input: BN | string | number): BN;
export type FeeAmount = keyof typeof TICK_SPACINGS;
export declare function getTickFromPrice(price: BN | string | number, poolFee: FeeAmount): string;
export declare function getMinTick(tickSpacing: number): number;
export declare function getMaxTick(tickSpacing: number): number;
export declare function getTickBitmapIndex(tick: number | BN | string, tickSpacing: number): BN;
export declare function computePoolAddress(factoryAddress: string, tokenA: string, tokenB: string, fee: FeeAmount): string;
export declare const FeeAmount: {
    LOW: number;
    MEDIUM: number;
    HIGH: number;
};
export declare const TICK_SPACINGS: {
    [x: number]: number;
};
