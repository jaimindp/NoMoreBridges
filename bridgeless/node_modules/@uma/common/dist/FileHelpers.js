"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.findArtifactFromPath = exports.getAllFilesInPath = void 0;
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
function getAllFilesInPath(dirPath, arrayOfFiles = []) {
    const files = fs_1.default.readdirSync(dirPath);
    files.forEach((file) => {
        if (fs_1.default.statSync(dirPath + "/" + file).isDirectory())
            arrayOfFiles = getAllFilesInPath(dirPath + "/" + file, arrayOfFiles);
        else
            arrayOfFiles.push(path_1.default.join(dirPath, "/", file));
    });
    return arrayOfFiles;
}
exports.getAllFilesInPath = getAllFilesInPath;
function findArtifactFromPath(contractName, artifactsPath) {
    const allArtifactsPaths = getAllFilesInPath(artifactsPath);
    const desiredArtifactPaths = allArtifactsPaths.filter((a) => a.endsWith(`/${contractName}.json`));
    if (desiredArtifactPaths.length !== 1)
        throw new Error(`Couldn't find desired artifact or found too many for ${contractName}`);
    return JSON.parse(fs_1.default.readFileSync(desiredArtifactPaths[0], "utf-8"));
}
exports.findArtifactFromPath = findArtifactFromPath;
