"use strict";
// This file is mostly taken from the modified `compile` task file written by Synthetix: https://github.com/Synthetixio/synthetix
Object.defineProperty(exports, "__esModule", { value: true });
const config_1 = require("hardhat/config");
const task_names_1 = require("hardhat/builtin-tasks/task-names");
// This overrides a hardhat internal task, which is part of its compile task's lifecycle.
// This allows us to filter on whitelisted contracts from the compilation list,
// which are entries in a hardhat network's `compileWhitelist` configuration. For example:
// defaultConfig = {
//     networks: {
//         optimism: { ..., compileWhitelist: ["contracts_to_whitelist"] }
//     }
// }
(0, config_1.internalTask)(task_names_1.TASK_COMPILE_SOLIDITY_GET_SOURCE_PATHS, async (_, { config, network }, runSuper) => {
    let filePaths = await runSuper();
    // Build absolute path for all directories on user-specified whitelist.
    const whitelist = config.networks[network.name].compileWhitelist;
    if (whitelist && Array.isArray(whitelist)) {
        filePaths = filePaths.filter((filePath) => {
            for (const whitelistedDir of whitelist) {
                if (filePath.includes(whitelistedDir))
                    return true;
                else
                    continue;
            }
            return false;
        });
    }
    return filePaths;
});
