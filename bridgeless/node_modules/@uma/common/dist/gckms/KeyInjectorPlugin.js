"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("./utils");
const config_1 = require("hardhat/config");
const plugins_1 = require("hardhat/plugins");
const GckmsConfig_1 = require("./GckmsConfig");
// This plugin just injects GCKMS keys into the config.
// Because it does so asynchonously, it creates a race condition. This means it may not work in all circumstances.
// It has been experimentally proven to work with hardhat console. Use with caution.
(0, config_1.extendConfig)((config) => {
    const { GCKMS_KEYS, MNEMONIC } = process.env;
    // If a mnemonic is provided as well, throw an error.
    if (GCKMS_KEYS && MNEMONIC)
        throw new plugins_1.HardhatPluginError("gckms::KeyInjectorPlugin", "Cannot provide both GCKMS_KEYS and MNEMONIC");
    // If GCKMS_KEYS is not found, do nothing.
    if (GCKMS_KEYS) {
        const keyNameArray = GCKMS_KEYS.split(",");
        const gckmsConfigs = (0, GckmsConfig_1.getGckmsConfig)(keyNameArray);
        (0, utils_1.retrieveGckmsKeys)(gckmsConfigs).then((keys) => {
            Object.values(config.networks).forEach((network) => {
                network.accounts = keys;
            });
        });
    }
});
