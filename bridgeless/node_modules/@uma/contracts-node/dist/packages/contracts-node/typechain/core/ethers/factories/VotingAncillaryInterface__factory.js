"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.VotingAncillaryInterface__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "identifier",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint256",
                        name: "time",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "ancillaryData",
                        type: "bytes",
                    },
                    {
                        internalType: "bytes32",
                        name: "hash",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes",
                        name: "encryptedVote",
                        type: "bytes",
                    },
                ],
                internalType: "struct VotingAncillaryInterface.CommitmentAncillary[]",
                name: "commits",
                type: "tuple[]",
            },
        ],
        name: "batchCommit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "identifier",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint256",
                        name: "time",
                        type: "uint256",
                    },
                    {
                        internalType: "int256",
                        name: "price",
                        type: "int256",
                    },
                    {
                        internalType: "bytes",
                        name: "ancillaryData",
                        type: "bytes",
                    },
                    {
                        internalType: "int256",
                        name: "salt",
                        type: "int256",
                    },
                ],
                internalType: "struct VotingAncillaryInterface.RevealAncillary[]",
                name: "reveals",
                type: "tuple[]",
            },
        ],
        name: "batchReveal",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "time",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                internalType: "bytes32",
                name: "hash",
                type: "bytes32",
            },
            {
                internalType: "bytes",
                name: "encryptedVote",
                type: "bytes",
            },
        ],
        name: "commitAndEmitEncryptedVote",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "time",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                internalType: "bytes32",
                name: "hash",
                type: "bytes32",
            },
        ],
        name: "commitVote",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "getCurrentRoundId",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getPendingRequests",
        outputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "identifier",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint256",
                        name: "time",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "ancillaryData",
                        type: "bytes",
                    },
                ],
                internalType: "struct VotingAncillaryInterface.PendingRequestAncillary[]",
                name: "",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getVotePhase",
        outputs: [
            {
                internalType: "enum VotingAncillaryInterface.Phase",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "voterAddress",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "roundId",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "identifier",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint256",
                        name: "time",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "ancillaryData",
                        type: "bytes",
                    },
                ],
                internalType: "struct VotingAncillaryInterface.PendingRequestAncillary[]",
                name: "toRetrieve",
                type: "tuple[]",
            },
        ],
        name: "retrieveRewards",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "rawValue",
                        type: "uint256",
                    },
                ],
                internalType: "struct FixedPoint.Unsigned",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "time",
                type: "uint256",
            },
            {
                internalType: "int256",
                name: "price",
                type: "int256",
            },
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                internalType: "int256",
                name: "salt",
                type: "int256",
            },
        ],
        name: "revealVote",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "rawValue",
                        type: "uint256",
                    },
                ],
                internalType: "struct FixedPoint.Unsigned",
                name: "newGatPercentage",
                type: "tuple",
            },
        ],
        name: "setGatPercentage",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "rawValue",
                        type: "uint256",
                    },
                ],
                internalType: "struct FixedPoint.Unsigned",
                name: "newInflationRate",
                type: "tuple",
            },
        ],
        name: "setInflationRate",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newVotingAddress",
                type: "address",
            },
        ],
        name: "setMigrated",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "NewRewardsExpirationTimeout",
                type: "uint256",
            },
        ],
        name: "setRewardsExpirationTimeout",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
            },
        ],
        name: "snapshotCurrentRound",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class VotingAncillaryInterface__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.VotingAncillaryInterface__factory = VotingAncillaryInterface__factory;
VotingAncillaryInterface__factory.abi = _abi;
