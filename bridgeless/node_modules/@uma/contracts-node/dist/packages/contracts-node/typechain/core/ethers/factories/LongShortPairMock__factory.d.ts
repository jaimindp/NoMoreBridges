import { Signer, BigNumberish, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LongShortPairMock, LongShortPairMockInterface } from "../LongShortPairMock";
export declare class LongShortPairMock__factory extends ContractFactory {
    constructor(...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>);
    deploy(_expirationTimestamp: BigNumberish, _collateralPerPair: BigNumberish, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<LongShortPairMock>;
    getDeployTransaction(_expirationTimestamp: BigNumberish, _collateralPerPair: BigNumberish, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): LongShortPairMock;
    connect(signer: Signer): LongShortPairMock__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b506040516100fe3803806100fe83398101604081905261002f9161003d565b600091909155600155610061565b6000806040838503121561005057600080fd5b505080516020909101519092909150565b608f8061006f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80639f43ddd2146037578063e964ae02146051575b600080fd5b603f60005481565b60405190815260200160405180910390f35b603f6001548156fea2646970667358221220897db154742c24335d9f88df188b9f9d7586e2383bf7ce4f91979c261e28b3c264736f6c63430008100033";
    static readonly abi: ({
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        name?: undefined;
        outputs?: undefined;
    } | {
        inputs: never[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    })[];
    static createInterface(): LongShortPairMockInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): LongShortPairMock;
}
