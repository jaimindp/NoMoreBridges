"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FxChildMock__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_systemCaller",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "rootMessageSender",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "NewFxMessage",
        type: "event",
    },
    {
        inputs: [],
        name: "fxRoot",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "stateId",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "_data",
                type: "bytes",
            },
        ],
        name: "onStateReceive",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_fxRoot",
                type: "address",
            },
        ],
        name: "setFxRoot",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "systemCaller",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5060405161066b38038061066b83398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6105d8806100936000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806326c53bea146100515780634c8ff99e146100665780638b9805d414610079578063de9b771f146100c2575b600080fd5b61006461005f3660046102d8565b6100e2565b005b610064610074366004610379565b61026e565b6001546100999073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6000546100999073ffffffffffffffffffffffffffffffffffffffff1681565b60015473ffffffffffffffffffffffffffffffffffffffff16331461018d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f496e76616c69642073656e6465723a206d7573742062652073797374656d207360448201527f7570657220757365720000000000000000000000000000000000000000000000606482015260840160405180910390fd5b6000808061019d848601866103cc565b9250925092507ff091cd9cbbaff01426d8183042dff452ef18e6690f19816d5dd114e00761e0e88383836040516101d69392919061052b565b60405180910390a16040517f9a7c4b7100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831690639a7c4b71906102349089908790869060040161056d565b600060405180830381600087803b15801561024e57600080fd5b505af1158015610262573d6000803e3d6000fd5b50505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff161561029157600080fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000806000604084860312156102ed57600080fd5b83359250602084013567ffffffffffffffff8082111561030c57600080fd5b818601915086601f83011261032057600080fd5b81358181111561032f57600080fd5b87602082850101111561034157600080fd5b6020830194508093505050509250925092565b73ffffffffffffffffffffffffffffffffffffffff8116811461037657600080fd5b50565b60006020828403121561038b57600080fd5b813561039681610354565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000606084860312156103e157600080fd5b83356103ec81610354565b925060208401356103fc81610354565b9150604084013567ffffffffffffffff8082111561041957600080fd5b818601915086601f83011261042d57600080fd5b81358181111561043f5761043f61039d565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156104855761048561039d565b8160405282815289602084870101111561049e57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000815180845260005b818110156104e6576020818501810151868301820152016104ca565b818111156104f8576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600073ffffffffffffffffffffffffffffffffffffffff80861683528085166020840152506060604083015261056460608301846104c0565b95945050505050565b83815273ffffffffffffffffffffffffffffffffffffffff8316602082015260606040820152600061056460608301846104c056fea2646970667358221220439951ff240e70fb150c660d83ac7811e66e4be12ba3d8753278f521e72bc10b64736f6c63430008090033";
class FxChildMock__factory extends ethers_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(_systemCaller, overrides) {
        return super.deploy(_systemCaller, overrides || {});
    }
    getDeployTransaction(_systemCaller, overrides) {
        return super.getDeployTransaction(_systemCaller, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.FxChildMock__factory = FxChildMock__factory;
FxChildMock__factory.bytecode = _bytecode;
FxChildMock__factory.abi = _abi;
