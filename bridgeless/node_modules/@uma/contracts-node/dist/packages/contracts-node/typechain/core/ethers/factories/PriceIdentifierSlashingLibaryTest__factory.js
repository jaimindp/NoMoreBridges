"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PriceIdentifierSlashingLibaryTest__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_votingV2Address",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "totalStaked",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "totalVotes",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "totalCorrectVotes",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "priceRequestIndex",
                type: "uint256",
            },
        ],
        name: "calcNoVoteSlashPerToken",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "totalStaked",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "totalVotes",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "totalCorrectVotes",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "priceRequestIndex",
                type: "uint256",
            },
            {
                internalType: "bool",
                name: "isGovernance",
                type: "bool",
            },
        ],
        name: "calcSlashing",
        outputs: [
            {
                internalType: "uint256",
                name: "wrongVoteSlashPerToken",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "noVoteSlashPerToken",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "totalStaked",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "totalVotes",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "totalCorrectVotes",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "priceRequestIndex",
                type: "uint256",
            },
        ],
        name: "calcWrongVoteSlashPerToken",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "totalStaked",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "totalVotes",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "totalCorrectVotes",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "priceRequestIndex",
                type: "uint256",
            },
        ],
        name: "calcWrongVoteSlashPerTokenGovernance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "slashPerToken",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "voting",
        outputs: [
            {
                internalType: "contract VotingV2",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "whiteListedIdentifier",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5060405161061c38038061061c83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610589806100936000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063985236b91161005b578063985236b9146100d5578063dd3fe468146100e3578063f63f43f6146100af578063fce1ccca1461010a57600080fd5b8063273d1fd61461008257806348b440f3146100af57806358162b1a146100af575b600080fd5b610095610090366004610334565b61014f565b604080519283526020830191909152015b60405180910390f35b6100c76100bd366004610381565b6000949350505050565b6040519081526020016100a6565b6100c76605af3107a4000081565b6100c77f534146455f4e4f5f564f5445000000000000000000000000000000000000000081565b60005461012a9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100a6565b600080546040517fbf81936f000000000000000000000000000000000000000000000000000000008152600481018590528291829173ffffffffffffffffffffffffffffffffffffffff9091169063bf81936f90602401602060405180830381865afa1580156101c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e791906103b3565b600080546040517fbed40f6f00000000000000000000000000000000000000000000000000000000815260048101849052929350909173ffffffffffffffffffffffffffffffffffffffff9091169063bed40f6f90602401600060405180830381865afa15801561025c573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526102a29190810190610414565b5094505050505060007f534146455f4e4f5f564f5445000000000000000000000000000000000000000082146102df576605af3107a400006102e2565b60005b90506000866102f8576605af3107a400006102fb565b60005b90508661030f576605af3107a40000610312565b60005b9b919a509098505050505050505050565b801515811461033157600080fd5b50565b600080600080600060a0868803121561034c57600080fd5b85359450602086013593506040860135925060608601359150608086013561037381610323565b809150509295509295909350565b6000806000806080858703121561039757600080fd5b5050823594602084013594506040840135936060013592509050565b6000602082840312156103c557600080fd5b5051919050565b805163ffffffff811681146103e057600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060008060008060c0878903121561042d57600080fd5b610436876103cc565b955060208088015161044781610323565b604089015190965067ffffffffffffffff808216821461046657600080fd5b81965061047560608b016103cc565b955060808a0151945060a08a015191508082111561049257600080fd5b818a0191508a601f8301126104a657600080fd5b8151818111156104b8576104b86103e5565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156104fe576104fe6103e5565b816040528281528d8684870101111561051657600080fd5b600093505b82841015610538578484018601518185018701529285019261051b565b6000868483010152809650505050505050929550929550929556fea26469706673582212200ef213dbe1dd692b1673d6dc8ae912a1422df16913dcb027ab4e302e26a4eaaf64736f6c63430008100033";
class PriceIdentifierSlashingLibaryTest__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(_votingV2Address, overrides) {
        return super.deploy(_votingV2Address, overrides || {});
    }
    getDeployTransaction(_votingV2Address, overrides) {
        return super.getDeployTransaction(_votingV2Address, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.PriceIdentifierSlashingLibaryTest__factory = PriceIdentifierSlashingLibaryTest__factory;
PriceIdentifierSlashingLibaryTest__factory.bytecode = _bytecode;
PriceIdentifierSlashingLibaryTest__factory.abi = _abi;
