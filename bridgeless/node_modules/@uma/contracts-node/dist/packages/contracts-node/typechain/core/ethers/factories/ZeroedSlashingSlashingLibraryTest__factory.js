"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ZeroedSlashingSlashingLibraryTest__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "totalStaked",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "totalVotes",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "totalCorrectVotes",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "priceRequestIndex",
                type: "uint256",
            },
        ],
        name: "calcNoVoteSlashPerToken",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "totalStaked",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "totalVotes",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "totalCorrectVotes",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "priceRequestIndex",
                type: "uint256",
            },
            {
                internalType: "bool",
                name: "isGovernance",
                type: "bool",
            },
        ],
        name: "calcSlashing",
        outputs: [
            {
                internalType: "uint256",
                name: "wrongVoteSlashPerToken",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "noVoteSlashPerToken",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "totalStaked",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "totalVotes",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "totalCorrectVotes",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "priceRequestIndex",
                type: "uint256",
            },
        ],
        name: "calcWrongVoteSlashPerToken",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "totalStaked",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "totalVotes",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "totalCorrectVotes",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "priceRequestIndex",
                type: "uint256",
            },
        ],
        name: "calcWrongVoteSlashPerTokenGovernance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5061017e806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063273d1fd61461005157806348b440f31461007e57806358162b1a1461007e578063f63f43f61461007e575b600080fd5b61006461005f3660046100c4565b6100a4565b604080519283526020830191909152015b60405180910390f35b61009661008c366004610116565b6000949350505050565b604051908152602001610075565b600080826100b35760006100b6565b60005b976000975095505050505050565b600080600080600060a086880312156100dc57600080fd5b853594506020860135935060408601359250606086013591506080860135801515811461010857600080fd5b809150509295509295909350565b6000806000806080858703121561012c57600080fd5b505082359460208401359450604084013593606001359250905056fea264697066735822122004b735f8e1ac0cb32313c2a867793284a23f3ef83e8cdbb637dd117103a6d9c064736f6c63430008100033";
class ZeroedSlashingSlashingLibraryTest__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.ZeroedSlashingSlashingLibraryTest__factory = ZeroedSlashingSlashingLibraryTest__factory;
ZeroedSlashingSlashingLibraryTest__factory.bytecode = _bytecode;
ZeroedSlashingSlashingLibraryTest__factory.abi = _abi;
