"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OVML1CrossDomainMessengerMock__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "msgHash",
                type: "bytes32",
            },
        ],
        name: "FailedRelayedMessage",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "msgHash",
                type: "bytes32",
            },
        ],
        name: "RelayedMessage",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "target",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "message",
                type: "bytes",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "messageNonce",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "gasLimit",
                type: "uint256",
            },
        ],
        name: "SentMessage",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_target",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "_message",
                type: "bytes",
            },
            {
                internalType: "uint32",
                name: "_gasLimit",
                type: "uint32",
            },
        ],
        name: "sendMessage",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "xDomainMessageSender",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610154806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633dbb202b1461003b5780636e296e4514610051575b600080fd5b61004f610049366004610064565b50505050565b005b6040805130815290519081900360200190f35b6000806000806060858703121561007a57600080fd5b843573ffffffffffffffffffffffffffffffffffffffff8116811461009e57600080fd5b9350602085013567ffffffffffffffff808211156100bb57600080fd5b818701915087601f8301126100cf57600080fd5b8135818111156100de57600080fd5b8860208285010111156100f057600080fd5b602083019550809450505050604085013563ffffffff8116811461011357600080fd5b93969295509093505056fea26469706673582212202d38c5a9082146304b90018111be3f9d57571671ea4d473f6b411187255ce27964736f6c63430008100033";
class OVML1CrossDomainMessengerMock__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.OVML1CrossDomainMessengerMock__factory = OVML1CrossDomainMessengerMock__factory;
OVML1CrossDomainMessengerMock__factory.bytecode = _bytecode;
OVML1CrossDomainMessengerMock__factory.abi = _abi;
