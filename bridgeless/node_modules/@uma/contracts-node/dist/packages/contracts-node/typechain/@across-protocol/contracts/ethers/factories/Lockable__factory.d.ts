import { Signer, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Lockable, LockableInterface } from "../Lockable";
export declare class Lockable__factory extends ContractFactory {
    constructor(signer?: Signer);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<Lockable>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): Lockable;
    connect(signer: Signer): Lockable__factory;
    static readonly bytecode = "0x6080604052348015600f57600080fd5b506000805460ff19166001179055603f80602a6000396000f3fe6080604052600080fdfea26469706673582212209d0bbd8fbc4f79f9a639cfae4bfc97ca4a149a6e2ad51491d623bdf784e2e66364736f6c63430008090033";
    static readonly abi: {
        inputs: never[];
        stateMutability: string;
        type: string;
    }[];
    static createInterface(): LockableInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): Lockable;
}
