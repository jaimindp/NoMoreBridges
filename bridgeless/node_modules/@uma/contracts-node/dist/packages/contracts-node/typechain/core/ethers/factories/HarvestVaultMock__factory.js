"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.HarvestVaultMock__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "contract IERC20",
                name: "_underlying",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "getPricePerFullShare",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_pricePerFullShare",
                type: "uint256",
            },
        ],
        name: "setPricePerFullShare",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "underlying",
        outputs: [
            {
                internalType: "contract IERC20",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x6080604052600060015534801561001557600080fd5b5060405161019138038061019183398101604081905261003491610059565b600080546001600160a01b0319166001600160a01b0392909216919091179055610089565b60006020828403121561006b57600080fd5b81516001600160a01b038116811461008257600080fd5b9392505050565b60fa806100976000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c80636f307dc314604157806377c7b8fc14608a578063c3819fb614609a575b600080fd5b60005460609073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6001546040519081526020016081565b60aa60a536600460ac565b600155565b005b60006020828403121560bd57600080fd5b503591905056fea2646970667358221220087cb38a08ffbab9e0f1863076cfb84c8845557708902f9f919e5def3d8d26c564736f6c63430008100033";
class HarvestVaultMock__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(_underlying, overrides) {
        return super.deploy(_underlying, overrides || {});
    }
    getDeployTransaction(_underlying, overrides) {
        return super.getDeployTransaction(_underlying, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.HarvestVaultMock__factory = HarvestVaultMock__factory;
HarvestVaultMock__factory.bytecode = _bytecode;
HarvestVaultMock__factory.abi = _abi;
