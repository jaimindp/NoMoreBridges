import { RegistryEthers, getRegistryAddress as getAbi, getRegistryAddress as getAddress } from "@uma/contracts-frontend";
import type { SignerOrProvider, GetEventType } from "../..";
import { Event } from "ethers";
export declare type Instance = RegistryEthers;
export declare type Network = string | number;
export { getAddress, getAbi };
export declare function connect(address: string, provider: SignerOrProvider): Instance;
export interface EventState {
    contracts?: {
        [key: string]: NewContractRegistered;
    };
}
export declare type NewContractRegistered = GetEventType<Instance, "NewContractRegistered">;
export declare function reduceEvents(state: EventState | undefined, event: Event): EventState;
export declare function getEventState(events: Event[]): EventState;
