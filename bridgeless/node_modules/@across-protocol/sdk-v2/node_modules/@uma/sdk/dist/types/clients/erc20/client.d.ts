import { ERC20Ethers } from "@uma/contracts-frontend";
import type { SignerOrProvider, GetEventType } from "../..";
import { Event } from "ethers";
import { Balances } from "../../utils";
export declare type Instance = ERC20Ethers;
export declare function connect(address: string, provider: SignerOrProvider): Instance;
export interface EventState {
    balances?: Balances;
    approvalsByOwner?: {
        [owner: string]: {
            [spender: string]: {
                amount: string;
            };
        };
    };
    approvalsBySpender?: {
        [spender: string]: {
            [owner: string]: {
                amount: string;
            };
        };
    };
}
export declare type Transfer = GetEventType<Instance, "Transfer">;
export declare type Approval = GetEventType<Instance, "Approval">;
export declare function reduceEvents(state: EventState | undefined, event: Event): EventState;
export declare function getEventState(events: Event[], initialState?: EventState): EventState;
