import { BridgePoolEthers, BridgePoolEthers__factory, BridgePoolInterfaceEthers } from "@uma/contracts-frontend";
import type { SignerOrProvider, GetEventType, SerializableEvent } from "../..";
import { BigNumber } from "ethers";
import { Balances } from "../../utils";
export declare type Instance = BridgePoolEthers;
export declare const Factory: typeof BridgePoolEthers__factory;
export declare type Interface = BridgePoolInterfaceEthers;
export declare function connect(address: string, provider: SignerOrProvider): Instance;
export declare function attach(address: string): Instance;
export declare type LiquidityAdded = GetEventType<Instance, "LiquidityAdded">;
export declare type LiquidityRemoved = GetEventType<Instance, "LiquidityRemoved">;
export declare type DepositRelayed = GetEventType<Instance, "DepositRelayed">;
export declare type RelaySpedUp = GetEventType<Instance, "RelaySpedUp">;
export declare type RelayDisputed = GetEventType<Instance, "RelayDisputed">;
export declare type RelayCanceled = GetEventType<Instance, "RelayCanceled">;
export declare type RelaySettled = GetEventType<Instance, "RelaySettled">;
export declare type BridgePoolAdminTransferred = GetEventType<Instance, "BridgePoolAdminTransferred">;
export declare type DepositData = {
    chainId: BigNumber;
    depositId: BigNumber;
    l1Recipient: string;
    l2Sender: string;
    amount: BigNumber;
    slowRelayFeePct: BigNumber;
    instantRelayFeePct: BigNumber;
    quoteTimestamp: number;
};
export declare type RelayData = {
    relayState: number;
    slowRelayer: string;
    relayId: number;
    realizedLpFeePct: BigNumber;
    priceRequestTime: number;
    proposerBond: BigNumber;
    finalFee: BigNumber;
};
export interface EventState {
    oldAdmin?: string;
    newAdmin?: string;
    tokens: Balances;
    lpTokens: Balances;
    deposits: Record<string, DepositData>;
    relays: Record<string, RelayData>;
    instantRelays: Record<string, string>;
}
export declare function eventStateDefaults(): {
    tokens: {};
    lpTokens: {};
    deposits: {};
    relays: {};
    instantRelays: {};
};
export declare function reduceEvents(state: EventState, event: SerializableEvent): EventState;
export declare function getEventState(events: SerializableEvent[], eventState?: EventState): EventState;
