import { LongShortPairEthers } from "@uma/contracts-frontend";
import type { SignerOrProvider, GetEventType } from "../..";
import { Event } from "ethers";
import { Balances } from "../../utils";
export declare type Instance = LongShortPairEthers;
export declare function connect(address: string, provider: SignerOrProvider): Instance;
export declare type TokensCreated = GetEventType<Instance, "TokensCreated">;
export declare type TokensRedeemed = GetEventType<Instance, "TokensRedeemed">;
export declare type ContractExpired = GetEventType<Instance, "ContractExpired">;
export declare type PositionSettled = GetEventType<Instance, "PositionSettled">;
export interface EventState {
    sponsors?: string[];
    longs?: Balances;
    shorts?: Balances;
    collateral?: Balances;
    expired?: boolean;
    expiredBy?: string;
}
export declare function reduceEvents(state: EventState, event: Event): EventState;
export declare function getEventState(events: Event[], eventState?: EventState): EventState;
