import type { State, Chain, InputRequest, Erc20Props, ChainConfig, Context, Memory, User, OracleType } from "../types/state";
import type { JsonRpcSigner, BigNumber, Provider } from "../types/ethers";
import { TransactionConfirmer } from "../utils";
import { OracleInterface, Request, Requests } from "../types/interfaces";
import { Erc20 } from "../services/erc20";
import { SortedRequests } from "../services/sortedRequests";
export default class Read {
    private state;
    constructor(state: State);
    chainConfig: (optionalChainId?: number | undefined) => ChainConfig;
    oracleType: () => OracleType;
    requestChainId: () => number;
    user: () => Partial<User>;
    userChainId: () => number;
    requestChain: (optionalChainId?: number | undefined) => Partial<Chain>;
    userAddress: () => string;
    oracleAddress: (optionalChainId?: number | undefined) => string;
    signer: () => JsonRpcSigner;
    inputRequest: () => InputRequest;
    defaultLiveness: () => BigNumber;
    request: () => Request;
    collateralProps: () => Partial<Erc20Props>;
    userCollateralBalance: () => BigNumber;
    userCollateralAllowance: () => BigNumber;
    oracleService: (optionalChainId?: number | undefined) => OracleInterface;
    collateralService: () => Erc20;
    command: (id: string) => Context<unknown, unknown & Memory>;
    tokenService: (chainId: number, address: string) => Erc20;
    provider: (chainId: number) => Provider;
    transactionService: (chainId: number) => TransactionConfirmer;
    listCommands: () => Context<unknown, unknown & Memory>[];
    filterCommands: (search: {
        user?: string;
        done?: boolean;
    }) => Context<unknown, unknown & Memory>[];
    chain: (optionalChainId?: number | undefined) => Partial<Chain>;
    currentTime: (optionalChainId?: number | undefined) => BigNumber;
    sortedRequestsService: () => SortedRequests;
    listChains: () => number[];
    descendingRequests: () => Requests;
    filterRequests: (query: Partial<Request>) => Requests;
}
