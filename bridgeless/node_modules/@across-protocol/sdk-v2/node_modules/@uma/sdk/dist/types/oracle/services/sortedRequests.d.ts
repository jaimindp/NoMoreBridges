import { InputRequestWithOracleType, RequestWithOracleType, RequestsWithOracleType } from "../types/state";
export declare class SortedStore<Id, Data> {
    private ids;
    private map;
    private getStart;
    private getEnd;
    private del;
    private getSafe;
    has: (id: Id) => boolean;
    set: (id: Id, data: Data) => void;
    get: (id: Id) => Data | undefined;
    values: () => Data[];
    entries: () => [Id, Data][];
    keys: () => Id[];
    clear: () => void;
    size: () => number;
    delete: (id: Id) => void;
    between: (a: Id, b: Id) => Data[];
    slice: (id: Id, length: number) => Data[];
}
export declare class SortedRequests extends SortedStore<string, RequestWithOracleType> {
    setByRequest(value: InputRequestWithOracleType): void;
    descending(): RequestsWithOracleType;
    ascending(): RequestsWithOracleType;
    getByRequest(request: InputRequestWithOracleType): RequestWithOracleType;
    id(request: InputRequestWithOracleType): string;
}
