import { PriceFeedAdapter, TokenPrice } from "../priceClient";
import { BaseHTTPAdapter, BaseHTTPAdapterArgs } from "./baseAdapter";
type DefiLlamaArgs = BaseHTTPAdapterArgs & {
    name?: string;
    host?: string;
    minConfidence?: number;
};
export declare class PriceFeed extends BaseHTTPAdapter implements PriceFeedAdapter {
    private _minConfidence;
    constructor({ name, host, timeout, retries, minConfidence, }?: DefiLlamaArgs);
    get minConfidence(): number;
    set minConfidence(minConfidence: number);
    getPriceByAddress(address: string, currency?: string): Promise<TokenPrice>;
    getPricesByAddress(addresses: string[], currency?: string): Promise<TokenPrice[]>;
    private validateResponse;
}
export {};
//# sourceMappingURL=defiLlama.d.ts.map