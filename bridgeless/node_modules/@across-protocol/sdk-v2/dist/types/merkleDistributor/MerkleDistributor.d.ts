import { DistributionRecipientsWithProofs, DistributionRecipient } from "./model";
export declare class MerkleDistributor {
    /**
     * Generate the Merkle root and the proofs for a collection of recipients.
     *
     * @param recipients An object which describes the recipients
     * @param windowIndex Parameter to specify an window index. This allows using the same smart contract for multiple token distributions.
     */
    static createMerkleDistributionProofs(recipients: DistributionRecipient[], windowIndex: number): {
        recipientsWithProofs: DistributionRecipientsWithProofs;
        merkleRoot: string;
    };
    /**
     * Encode the account address, the amount and the account index into a Merkle Tree leaf.
     * It is equivalent to Solidity's keccak256(abi.encode(account, amount))
     * @param recipient The recipient of the token distribution
     * @returns The Merkle Tree leaf
     */
    static createLeaf(recipient: DistributionRecipient): string;
}
//# sourceMappingURL=MerkleDistributor.d.ts.map