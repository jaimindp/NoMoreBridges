import { ethers } from "ethers";
import { BN } from "./BigNumberUtils";
export declare const formatWithMaxDecimals: (num: number | string, decimalPlaces: number, minPrecision: number, roundUp: boolean, showSign: boolean) => string;
export declare const createFormatFunction: (numDisplayedDecimals: number, minDisplayedPrecision: number, showSign?: boolean, decimals?: number) => (valInWei: string | BN) => string;
export declare const formatFeePct: (relayerFeePct: BN) => string;
export declare function createShortHexString(hex: string, maxLength?: number, delimiter?: string): string;
export declare function utf8ToHex(input: string): string;
export declare function hexToUtf8(input: string): string;
export declare function bnToHex(input: BN): string;
export declare function convertFromWei(weiVal: string, decimals: number): string;
export declare function shortenHexStrings(addresses: string[]): string[];
export declare const formatWei: (num: string | BN) => string;
export declare const ConvertDecimals: (fromDecimals: number, toDecimals: number) => (amountIn: string | number | BN) => BN;
export declare function parseWinston(numericString: string): ethers.BigNumber;
export declare function formatWinston(winstonValue: ethers.BigNumber): string;
