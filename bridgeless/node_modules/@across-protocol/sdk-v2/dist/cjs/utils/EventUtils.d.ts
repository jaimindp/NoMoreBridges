import { Result } from "@ethersproject/abi";
import { SortableEvent } from "../interfaces";
import { Contract, Event, EventFilter } from "ethers";
export declare function spreadEvent(args?: Result): any;
export interface EventSearchConfig {
    fromBlock: number;
    toBlock: number;
    maxBlockLookBack?: number;
}
export declare function paginatedEventQuery(contract: Contract, filter: EventFilter, searchConfig: EventSearchConfig, retryCount?: number): Promise<Event[]>;
export declare function getPaginatedBlockRanges({ fromBlock, toBlock, maxBlockLookBack, }: EventSearchConfig): [number, number][];
export declare function spreadEventWithBlockNumber(event: Event): SortableEvent;
export declare function sortEventsAscending<T extends SortableEvent>(events: T[]): T[];
export declare function sortEventsAscendingInPlace<T extends SortableEvent>(events: T[]): T[];
export declare function sortEventsDescending<T extends SortableEvent>(events: T[]): T[];
export declare function sortEventsDescendingInPlace<T extends SortableEvent>(events: T[]): T[];
export declare function isEventOlder<T extends SortableEvent>(ex: T, ey: T): boolean;
export declare function getTransactionHashes(events: SortableEvent[]): string[];
