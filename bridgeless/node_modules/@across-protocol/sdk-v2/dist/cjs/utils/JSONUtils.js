"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.jsonReviverWithBigNumbers = exports.jsonReplacerWithBigNumbers = exports.stringifyJSONWithNumericString = exports.parseJSONWithNumericString = void 0;
var ethers_1 = require("ethers");
var TypeGuards_1 = require("./TypeGuards");
function parseJSONWithNumericString(jsonString) {
    try {
        return JSON.parse(jsonString, function (_key, value) {
            if (typeof value === "number") {
                return String(Math.floor(value));
            }
            return value;
        });
    }
    catch (e) {
        return undefined;
    }
}
exports.parseJSONWithNumericString = parseJSONWithNumericString;
function stringifyJSONWithNumericString(obj) {
    return JSON.stringify(obj, function (_key, value) {
        if (typeof value === "object" && value !== null && value.type === "BigNumber") {
            return ethers_1.BigNumber.from(value).toString();
        }
        return value;
    });
}
exports.stringifyJSONWithNumericString = stringifyJSONWithNumericString;
function jsonReplacerWithBigNumbers(_key, value) {
    if (ethers_1.BigNumber.isBigNumber(value)) {
        return value.toString();
    }
    var recordValue = value;
    if (recordValue.type === "BigNumber" && (0, TypeGuards_1.isDefined)(recordValue.hex)) {
        return ethers_1.BigNumber.from(recordValue.hex).toString();
    }
    return value;
}
exports.jsonReplacerWithBigNumbers = jsonReplacerWithBigNumbers;
function jsonReviverWithBigNumbers(_key, value) {
    if (typeof value === "string" && /^-?\d+$/.test(value)) {
        var bigNumber = ethers_1.BigNumber.from(value);
        if (bigNumber.toString() === value) {
            return bigNumber;
        }
    }
    return value;
}
exports.jsonReviverWithBigNumbers = jsonReviverWithBigNumbers;
//# sourceMappingURL=JSONUtils.js.map