"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.legacy = exports.eip1559 = void 0;
var tslib_1 = require("tslib");
var ethers_1 = require("ethers");
var util_1 = require("../util");
function eip1559(provider, chainId) {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var feeData, maxPriorityFeePerGas, maxFeePerGas;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4, provider.getFeeData()];
                case 1:
                    feeData = _a.sent();
                    [feeData.lastBaseFeePerGas, feeData.maxPriorityFeePerGas].forEach(function (field) {
                        if (!ethers_1.BigNumber.isBigNumber(field) || field.lt(0))
                            (0, util_1.gasPriceError)("getFeeData()", chainId, feeData);
                    });
                    maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;
                    maxFeePerGas = maxPriorityFeePerGas.add(feeData.lastBaseFeePerGas);
                    return [2, { maxPriorityFeePerGas: maxPriorityFeePerGas, maxFeePerGas: maxFeePerGas }];
            }
        });
    });
}
exports.eip1559 = eip1559;
function legacy(provider, chainId) {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var gasPrice;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4, provider.getGasPrice()];
                case 1:
                    gasPrice = _a.sent();
                    if (!ethers_1.BigNumber.isBigNumber(gasPrice) || gasPrice.lt(0))
                        (0, util_1.gasPriceError)("getGasPrice()", chainId, gasPrice);
                    return [2, {
                            maxFeePerGas: gasPrice,
                            maxPriorityFeePerGas: ethers_1.ethers.constants.Zero,
                        }];
            }
        });
    });
}
exports.legacy = legacy;
//# sourceMappingURL=ethereum.js.map