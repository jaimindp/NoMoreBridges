"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.eip1559_arbitrum = void 0;
var tslib_1 = require("tslib");
var ethers_1 = require("ethers");
var ethereum_1 = require("./ethereum");
function eip1559_arbitrum(provider, chainId) {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var _a, _maxFeePerGas, maxPriorityFeePerGas, maxFeePerGas;
        return tslib_1.__generator(this, function (_b) {
            switch (_b.label) {
                case 0: return [4, (0, ethereum_1.eip1559)(provider, chainId)];
                case 1:
                    _a = _b.sent(), _maxFeePerGas = _a.maxFeePerGas, maxPriorityFeePerGas = _a.maxPriorityFeePerGas;
                    if (!maxPriorityFeePerGas.eq(ethers_1.utils.parseUnits("1.5", 9))) {
                        throw new Error("Expected hardcoded 1.5 Gwei priority fee on Arbitrum, got ".concat(maxPriorityFeePerGas));
                    }
                    maxFeePerGas = _maxFeePerGas.sub(maxPriorityFeePerGas).add(1);
                    return [2, { maxPriorityFeePerGas: ethers_1.ethers.constants.One, maxFeePerGas: maxFeePerGas }];
            }
        });
    });
}
exports.eip1559_arbitrum = eip1559_arbitrum;
//# sourceMappingURL=arbitrum.js.map