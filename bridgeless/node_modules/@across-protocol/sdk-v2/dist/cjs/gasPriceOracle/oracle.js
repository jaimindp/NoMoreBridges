"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getGasPriceEstimate = void 0;
var tslib_1 = require("tslib");
var adapters_1 = require("./adapters");
function getGasPriceEstimate(provider, chainId, legacyFallback) {
    if (legacyFallback === void 0) { legacyFallback = true; }
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var network, gasPriceFeeds, gasPriceFeed, gasPriceEstimate;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!!chainId) return [3, 2];
                    return [4, provider.getNetwork()];
                case 1:
                    network = _a.sent();
                    chainId = network.chainId;
                    _a.label = 2;
                case 2:
                    gasPriceFeeds = {
                        1: adapters_1.eip1559,
                        10: adapters_1.eip1559,
                        137: adapters_1.polygonGasStation,
                        288: adapters_1.legacy,
                        324: adapters_1.legacy,
                        8453: adapters_1.eip1559,
                        42161: adapters_1.eip1559_arbitrum,
                    };
                    gasPriceFeed = gasPriceFeeds[chainId];
                    if (gasPriceFeed === undefined) {
                        if (!legacyFallback) {
                            throw new Error("No suitable gas price oracle for Chain ID ".concat(chainId));
                        }
                        gasPriceFeed = adapters_1.legacy;
                    }
                    return [4, gasPriceFeed(provider, chainId)];
                case 3:
                    gasPriceEstimate = _a.sent();
                    return [2, gasPriceEstimate];
            }
        });
    });
}
exports.getGasPriceEstimate = getGasPriceEstimate;
//# sourceMappingURL=oracle.js.map