import { ethers } from "ethers";
import { CoingeckoDataReturnType, SuggestedFeeReturnType, BridgeLimitsReturnType, AcrossBridgeStatisticsType } from "./types";
export default abstract class AbstractApiClient {
    private readonly serverlessApiUrl;
    private readonly scraperApiUrl;
    protected constructor(serverlessApiUrl: string, scraperApiUrl: string);
    protected getServerlessApiUrl(): string;
    protected getScraperApiUrl(): string;
    abstract getCoinGeckoData(l1Token: string, baseCurrency: string): Promise<CoingeckoDataReturnType>;
    abstract getSuggestedFees(amount: ethers.BigNumber, originToken: string, toChainid: number, fromChainid: number): Promise<SuggestedFeeReturnType>;
    abstract getBridgeLimits(token: string, fromnumber: string | number, tonumber: string | number): Promise<BridgeLimitsReturnType>;
    abstract getAcrossStats(): Promise<AcrossBridgeStatisticsType>;
}
