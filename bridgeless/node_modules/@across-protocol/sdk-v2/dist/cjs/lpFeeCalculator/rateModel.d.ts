type RateModelEventsDictionary = {
    [l1TokenAddress: string]: {
        blockNumber: number;
        rateModel: string;
    }[];
};
export type RateModelEvent = {
    blockNumber: number;
    transactionIndex: number;
    logIndex: number;
    rateModel: string;
    l1Token: string;
};
interface RateModel {
    UBar: string;
    R0: string;
    R1: string;
    R2: string;
}
export declare class RateModelDictionary {
    rateModelDictionary: RateModelEventsDictionary;
    private _throwIfNotInitialized;
    updateWithEvents(rateModelEvents: RateModelEvent[]): void;
    getRateModelForBlockNumber(l1Token: string, blockNumber?: number): RateModel;
    getL1TokensFromRateModel(blockNumber?: number | undefined): string[];
}
export declare const parseAndReturnRateModelFromString: (rateModelString: string) => RateModel;
export {};
