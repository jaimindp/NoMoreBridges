import { __extends } from "tslib";
import { DEFAULT_LOGGER } from "../relayFeeCalculator";
import { utils } from "ethers";
import QueryBase from "./baseQuery";
import { CHAIN_IDs, DEFAULT_SIMULATED_RELAYER_ADDRESS, TOKEN_SYMBOLS_MAP } from "../../constants";
import { getDeployedAddress } from "../../utils/DeploymentUtils";
var BobaQueries = /** @class */ (function (_super) {
    __extends(BobaQueries, _super);
    function BobaQueries(provider, symbolMapping, spokePoolAddress, simulatedRelayerAddress, coingeckoProApiKey, logger, gasMarkup) {
        if (symbolMapping === void 0) { symbolMapping = TOKEN_SYMBOLS_MAP; }
        if (spokePoolAddress === void 0) { spokePoolAddress = getDeployedAddress("SpokePool", CHAIN_IDs.BOBA); }
        if (simulatedRelayerAddress === void 0) { simulatedRelayerAddress = DEFAULT_SIMULATED_RELAYER_ADDRESS; }
        if (logger === void 0) { logger = DEFAULT_LOGGER; }
        if (gasMarkup === void 0) { gasMarkup = 0; }
        return _super.call(this, provider, symbolMapping, spokePoolAddress, simulatedRelayerAddress, gasMarkup, logger, coingeckoProApiKey, utils.parseUnits("1", 9)) || this;
    }
    return BobaQueries;
}(QueryBase));
export { BobaQueries };
//# sourceMappingURL=boba.js.map