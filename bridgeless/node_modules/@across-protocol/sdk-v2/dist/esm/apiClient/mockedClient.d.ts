import { ethers } from "ethers";
import AbstractApiClient from "./abstractClient";
import { AcrossBridgeStatisticsType, BridgeLimitsReturnType, CoingeckoDataReturnType, EndpointResultMappingType, SuggestedFeeReturnType } from "./types";
/**
 * MockedApiClient is a mocked implementation of the AbstractApiClient.
 * @class
 * @extends AbstractApiClient
 * @note This implementation does not make API calls to RESTful services. Instead, it returns mocked data.
 */
export default class MockedApiClient extends AbstractApiClient {
    /**
     * Mocked data to return in lieu of the default return values.
     */
    private readonly mockedData;
    /**
     * Creates a constructor for the MockedApiClient.
     * @param mockedData The mocked data to return in lieu of the default return values
     */
    constructor(mockedData?: Partial<EndpointResultMappingType>);
    getCoinGeckoData(_l1Token: string, _baseCurrency: string): Promise<CoingeckoDataReturnType>;
    getSuggestedFees(_amount: ethers.BigNumber, _originToken: string, _toChainid: number, _fromChainid: number): Promise<SuggestedFeeReturnType>;
    getBridgeLimits(_token: string, _fromChainId: string | number, _toChainId: string | number): Promise<BridgeLimitsReturnType>;
    getAcrossStats(): Promise<AcrossBridgeStatisticsType>;
}
