import { isDefined } from "../utils";
/**
 * Base class for all clients to extend.
 */
var BaseAbstractClient = /** @class */ (function () {
    /**
     * Creates a new client.
     * @param cachingMechanism The caching mechanism to use for this client. If not provided, the client will not rely on an external cache.
     */
    function BaseAbstractClient(cachingMechanism) {
        this.cachingMechanism = cachingMechanism;
        this.firstBlockToSearch = 0;
        this.latestBlockSearched = 0;
        this._isUpdated = false;
    }
    Object.defineProperty(BaseAbstractClient.prototype, "isUpdated", {
        /**
         * Indicates whether the client has been updated since it was created.
         * @returns Whether the client has been updated since it was created.
         */
        get: function () {
            return this._isUpdated;
        },
        /**
         * Sets whether the client has been updated since it was created.
         * @param value Whether the client has been updated since it was created.
         * @throws Error if the client has already been updated and the value is false.
         */
        set: function (value) {
            if (this._isUpdated === true && !value) {
                throw new Error("Cannot set isUpdated to false once it is true");
            }
            this._isUpdated = value;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Asserts that the client has been updated.
     */
    BaseAbstractClient.prototype.assertUpdated = function () {
        if (!this.isUpdated) {
            throw new Error("Client not updated");
        }
    };
    /**
     * Determines if the client has an external cache.
     * @returns Whether the client has an external cache.
     */
    BaseAbstractClient.prototype.hasCachingMechanism = function () {
        return isDefined(this.cachingMechanism);
    };
    return BaseAbstractClient;
}());
export { BaseAbstractClient };
//# sourceMappingURL=BaseAbstractClient.js.map