/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BridgePool, BridgePoolInterface } from "../BridgePool";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_lpTokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_lpTokenSymbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_bridgeAdmin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_lpFeeRatePerSecond",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "_isWethPool",
        type: "bool",
      },
      {
        internalType: "address",
        name: "_timer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "BridgePoolAdminTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "depositHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "depositId",
            type: "uint64",
          },
          {
            internalType: "address payable",
            name: "l1Recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "l2Sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "slowRelayFeePct",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "instantRelayFeePct",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "quoteTimestamp",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct BridgePool.DepositData",
        name: "depositData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum BridgePool.RelayState",
            name: "relayState",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "slowRelayer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "relayId",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "realizedLpFeePct",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "priceRequestTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "proposerBond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalFee",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct BridgePool.RelayData",
        name: "relay",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "relayAncillaryDataHash",
        type: "bytes32",
      },
    ],
    name: "DepositRelayed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lpTokensMinted",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "liquidityProvider",
        type: "address",
      },
    ],
    name: "LiquidityAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lpTokensBurnt",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "liquidityProvider",
        type: "address",
      },
    ],
    name: "LiquidityRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "newLpFeeRatePerSecond",
        type: "uint64",
      },
    ],
    name: "LpFeeRateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "depositHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "relayHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "disputer",
        type: "address",
      },
    ],
    name: "RelayCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "depositHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "relayHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "disputer",
        type: "address",
      },
    ],
    name: "RelayDisputed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "depositHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum BridgePool.RelayState",
            name: "relayState",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "slowRelayer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "relayId",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "realizedLpFeePct",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "priceRequestTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "proposerBond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalFee",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct BridgePool.RelayData",
        name: "relay",
        type: "tuple",
      },
    ],
    name: "RelaySettled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "depositHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "instantRelayer",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum BridgePool.RelayState",
            name: "relayState",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "slowRelayer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "relayId",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "realizedLpFeePct",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "priceRequestTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "proposerBond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalFee",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct BridgePool.RelayData",
        name: "relay",
        type: "tuple",
      },
    ],
    name: "RelaySpedUp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "newRelaysEnabled",
        type: "bool",
      },
    ],
    name: "RelaysEnabledSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "l1TokenAmount",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bonds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridgeAdmin",
    outputs: [
      {
        internalType: "contract BridgeAdminInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newAdmin",
        type: "address",
      },
    ],
    name: "changeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "depositId",
            type: "uint64",
          },
          {
            internalType: "address payable",
            name: "l1Recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "l2Sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "slowRelayFeePct",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "instantRelayFeePct",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "quoteTimestamp",
            type: "uint32",
          },
        ],
        internalType: "struct BridgePool.DepositData",
        name: "depositData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum BridgePool.RelayState",
            name: "relayState",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "slowRelayer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "relayId",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "realizedLpFeePct",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "priceRequestTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "proposerBond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalFee",
            type: "uint256",
          },
        ],
        internalType: "struct BridgePool.RelayData",
        name: "relayData",
        type: "tuple",
      },
    ],
    name: "disputeRelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "exchangeRateCurrent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAccumulatedFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "relayedAmount",
        type: "uint256",
      },
    ],
    name: "getLiquidityUtilization",
    outputs: [
      {
        internalType: "uint256",
        name: "utilizationCurrent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "utilizationPostRelay",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "depositId",
            type: "uint64",
          },
          {
            internalType: "address payable",
            name: "l1Recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "l2Sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "slowRelayFeePct",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "instantRelayFeePct",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "quoteTimestamp",
            type: "uint32",
          },
        ],
        internalType: "struct BridgePool.DepositData",
        name: "depositData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum BridgePool.RelayState",
            name: "relayState",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "slowRelayer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "relayId",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "realizedLpFeePct",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "priceRequestTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "proposerBond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalFee",
            type: "uint256",
          },
        ],
        internalType: "struct BridgePool.RelayData",
        name: "relayData",
        type: "tuple",
      },
    ],
    name: "getRelayAncillaryData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "identifier",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "instantRelays",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isWethPool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l1Token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastLpFeeUpdate",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityUtilizationCurrent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "relayedAmount",
        type: "uint256",
      },
    ],
    name: "liquidityUtilizationPostRelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lpFeeRatePerSecond",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numberOfRelays",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optimisticOracle",
    outputs: [
      {
        internalType: "contract SkinnyOptimisticOracleInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optimisticOracleLiveness",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposerBondPct",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "depositId",
            type: "uint64",
          },
          {
            internalType: "address payable",
            name: "l1Recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "l2Sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "slowRelayFeePct",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "instantRelayFeePct",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "quoteTimestamp",
            type: "uint32",
          },
        ],
        internalType: "struct BridgePool.DepositData",
        name: "depositData",
        type: "tuple",
      },
      {
        internalType: "uint64",
        name: "realizedLpFeePct",
        type: "uint64",
      },
    ],
    name: "relayAndSpeedUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "depositId",
            type: "uint64",
          },
          {
            internalType: "address payable",
            name: "l1Recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "l2Sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "slowRelayFeePct",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "instantRelayFeePct",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "quoteTimestamp",
            type: "uint32",
          },
        ],
        internalType: "struct BridgePool.DepositData",
        name: "depositData",
        type: "tuple",
      },
      {
        internalType: "uint64",
        name: "realizedLpFeePct",
        type: "uint64",
      },
    ],
    name: "relayDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "relays",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relaysEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lpTokenAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "sendEth",
        type: "bool",
      },
    ],
    name: "removeLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "setCurrentTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_newLpFeeRatePerSecond",
        type: "uint64",
      },
    ],
    name: "setLpFeeRatePerSecond",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_relaysEnabled",
        type: "bool",
      },
    ],
    name: "setRelaysEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "depositId",
            type: "uint64",
          },
          {
            internalType: "address payable",
            name: "l1Recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "l2Sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "slowRelayFeePct",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "instantRelayFeePct",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "quoteTimestamp",
            type: "uint32",
          },
        ],
        internalType: "struct BridgePool.DepositData",
        name: "depositData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum BridgePool.RelayState",
            name: "relayState",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "slowRelayer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "relayId",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "realizedLpFeePct",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "priceRequestTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "proposerBond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalFee",
            type: "uint256",
          },
        ],
        internalType: "struct BridgePool.RelayData",
        name: "relayData",
        type: "tuple",
      },
    ],
    name: "settleRelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "depositId",
            type: "uint64",
          },
          {
            internalType: "address payable",
            name: "l1Recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "l2Sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "slowRelayFeePct",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "instantRelayFeePct",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "quoteTimestamp",
            type: "uint32",
          },
        ],
        internalType: "struct BridgePool.DepositData",
        name: "depositData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum BridgePool.RelayState",
            name: "relayState",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "slowRelayer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "relayId",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "realizedLpFeePct",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "priceRequestTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "proposerBond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalFee",
            type: "uint256",
          },
        ],
        internalType: "struct BridgePool.RelayData",
        name: "relayData",
        type: "tuple",
      },
    ],
    name: "speedUpRelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "store",
    outputs: [
      {
        internalType: "contract StoreInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sync",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "syncUmaEcosystemParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "syncWithBridgeAdminParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "undistributedLpFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "utilizedReserves",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "";

export class BridgePool__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _lpTokenName: string,
    _lpTokenSymbol: string,
    _bridgeAdmin: string,
    _l1Token: string,
    _lpFeeRatePerSecond: BigNumberish,
    _isWethPool: boolean,
    _timer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BridgePool> {
    return super.deploy(
      _lpTokenName,
      _lpTokenSymbol,
      _bridgeAdmin,
      _l1Token,
      _lpFeeRatePerSecond,
      _isWethPool,
      _timer,
      overrides || {}
    ) as Promise<BridgePool>;
  }
  getDeployTransaction(
    _lpTokenName: string,
    _lpTokenSymbol: string,
    _bridgeAdmin: string,
    _l1Token: string,
    _lpFeeRatePerSecond: BigNumberish,
    _isWethPool: boolean,
    _timer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _lpTokenName,
      _lpTokenSymbol,
      _bridgeAdmin,
      _l1Token,
      _lpFeeRatePerSecond,
      _isWethPool,
      _timer,
      overrides || {}
    );
  }
  attach(address: string): BridgePool {
    return super.attach(address) as BridgePool;
  }
  connect(signer: Signer): BridgePool__factory {
    return super.connect(signer) as BridgePool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgePoolInterface {
    return new utils.Interface(_abi) as BridgePoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgePool {
    return new Contract(address, _abi, signerOrProvider) as BridgePool;
  }
}
