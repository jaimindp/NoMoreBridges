/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OracleInterfaces,
  OracleInterfacesInterface,
} from "../OracleInterfaces";

const _abi = [
  {
    inputs: [],
    name: "Bridge",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CollateralWhitelist",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FinancialContractsAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GenericHandler",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "IdentifierWhitelist",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OptimisticOracle",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Oracle",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Registry",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SkinnyOptimisticOracle",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Store",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61029b61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100c85760003560e01c80634f4a180b116100805780635fa2ef10116100655780635fa2ef10146101f05780637db9743b14610217578063f24a534e1461023e57600080fd5b80634f4a180b146101a2578063598dd097146101c957600080fd5b80632a71e5b3116100b15780632a71e5b31461012d57806342e90c33146101545780634596ac9b1461017b57600080fd5b8063079b6c63146100cd5780631a4dbd1c14610106575b600080fd5b6100f47f47656e6572696348616e646c657200000000000000000000000000000000000081565b60405190815260200160405180910390f35b6100f47f4f7074696d69737469634f7261636c650000000000000000000000000000000081565b6100f47f46696e616e6369616c436f6e74726163747341646d696e00000000000000000081565b6100f47f53746f726500000000000000000000000000000000000000000000000000000081565b6100f47f536b696e6e794f7074696d69737469634f7261636c650000000000000000000081565b6100f47f4964656e74696669657257686974656c6973740000000000000000000000000081565b6100f47f436f6c6c61746572616c57686974656c6973740000000000000000000000000081565b6100f47f427269646765000000000000000000000000000000000000000000000000000081565b6100f47f526567697374727900000000000000000000000000000000000000000000000081565b6100f47f4f7261636c6500000000000000000000000000000000000000000000000000008156fea2646970667358221220c3cfc726a51bc62c54948f58b94524d75a8f8dfc09bba5c7622b86582d1b063b64736f6c63430008090033";

export class OracleInterfaces__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OracleInterfaces> {
    return super.deploy(overrides || {}) as Promise<OracleInterfaces>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OracleInterfaces {
    return super.attach(address) as OracleInterfaces;
  }
  connect(signer: Signer): OracleInterfaces__factory {
    return super.connect(signer) as OracleInterfaces__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleInterfacesInterface {
    return new utils.Interface(_abi) as OracleInterfacesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OracleInterfaces {
    return new Contract(address, _abi, signerOrProvider) as OracleInterfaces;
  }
}
