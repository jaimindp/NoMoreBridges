[
  {
    "contractName": "IL2ERC20Bridge",
    "relativePath": "./artifacts/@eth-optimism/contracts/L2/messaging/IL2ERC20Bridge.sol/IL2ERC20Bridge.json"
  },
  {
    "contractName": "CrossDomainEnabled",
    "relativePath": "./artifacts/@eth-optimism/contracts/libraries/bridge/CrossDomainEnabled.sol/CrossDomainEnabled.json"
  },
  {
    "contractName": "ICrossDomainMessenger",
    "relativePath": "./artifacts/@eth-optimism/contracts/libraries/bridge/ICrossDomainMessenger.sol/ICrossDomainMessenger.json"
  },
  {
    "contractName": "Lib_PredeployAddresses",
    "relativePath": "./artifacts/@eth-optimism/contracts/libraries/constants/Lib_PredeployAddresses.sol/Lib_PredeployAddresses.json"
  },
  {
    "contractName": "AccessControl",
    "relativePath": "./artifacts/@openzeppelin/contracts/access/AccessControl.sol/AccessControl.json"
  },
  {
    "contractName": "IAccessControl",
    "relativePath": "./artifacts/@openzeppelin/contracts/access/AccessControl.sol/IAccessControl.json"
  },
  {
    "contractName": "Ownable",
    "relativePath": "./artifacts/@openzeppelin/contracts/access/Ownable.sol/Ownable.json"
  },
  {
    "contractName": "Pausable",
    "relativePath": "./artifacts/@openzeppelin/contracts/security/Pausable.sol/Pausable.json"
  },
  {
    "contractName": "ERC20",
    "relativePath": "./artifacts/@openzeppelin/contracts/token/ERC20/ERC20.sol/ERC20.json"
  },
  {
    "contractName": "IERC20",
    "relativePath": "./artifacts/@openzeppelin/contracts/token/ERC20/IERC20.sol/IERC20.json"
  },
  {
    "contractName": "IERC20Metadata",
    "relativePath": "./artifacts/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol/IERC20Metadata.json"
  },
  {
    "contractName": "SafeERC20",
    "relativePath": "./artifacts/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol/SafeERC20.json"
  },
  {
    "contractName": "Address",
    "relativePath": "./artifacts/@openzeppelin/contracts/utils/Address.sol/Address.json"
  },
  {
    "contractName": "Context",
    "relativePath": "./artifacts/@openzeppelin/contracts/utils/Context.sol/Context.json"
  },
  {
    "contractName": "Strings",
    "relativePath": "./artifacts/@openzeppelin/contracts/utils/Strings.sol/Strings.json"
  },
  {
    "contractName": "ERC165",
    "relativePath": "./artifacts/@openzeppelin/contracts/utils/introspection/ERC165.sol/ERC165.json"
  },
  {
    "contractName": "IERC165",
    "relativePath": "./artifacts/@openzeppelin/contracts/utils/introspection/IERC165.sol/IERC165.json"
  },
  {
    "contractName": "SafeMath",
    "relativePath": "./artifacts/@openzeppelin/contracts/utils/math/SafeMath.sol/SafeMath.json"
  },
  {
    "contractName": "SignedSafeMath",
    "relativePath": "./artifacts/@openzeppelin/contracts/utils/math/SignedSafeMath.sol/SignedSafeMath.json"
  },
  {
    "contractName": "Lockable",
    "relativePath": "./artifacts/@uma/core/contracts/common/implementation/Lockable.sol/Lockable.json"
  },
  {
    "contractName": "Arbitrum_ParentMessenger",
    "relativePath": "./artifacts/@uma/core/contracts/cross-chain-oracle/chain-adapters/Arbitrum_ParentMessenger.sol/Arbitrum_ParentMessenger.json"
  },
  {
    "contractName": "ParentMessengerBase",
    "relativePath": "./artifacts/@uma/core/contracts/cross-chain-oracle/chain-adapters/ParentMessengerBase.sol/ParentMessengerBase.json"
  },
  {
    "contractName": "ParentMessengerConsumerInterface",
    "relativePath": "./artifacts/@uma/core/contracts/cross-chain-oracle/interfaces/ParentMessengerConsumerInterface.sol/ParentMessengerConsumerInterface.json"
  },
  {
    "contractName": "ParentMessengerInterface",
    "relativePath": "./artifacts/@uma/core/contracts/cross-chain-oracle/interfaces/ParentMessengerInterface.sol/ParentMessengerInterface.json"
  },
  {
    "contractName": "IBridge",
    "relativePath": "./artifacts/@uma/core/contracts/external/avm/interfaces/iArbitrum_Inbox.sol/IBridge.json"
  },
  {
    "contractName": "iArbitrum_Inbox",
    "relativePath": "./artifacts/@uma/core/contracts/external/avm/interfaces/iArbitrum_Inbox.sol/iArbitrum_Inbox.json"
  },
  {
    "contractName": "iArbitrum_Outbox",
    "relativePath": "./artifacts/@uma/core/contracts/external/avm/interfaces/iArbitrum_Outbox.sol/iArbitrum_Outbox.json"
  },
  {
    "contractName": "Arbitrum_CrossDomainEnabled",
    "relativePath": "./artifacts/@uma/core/contracts/insured-bridge/avm/Arbitrum_CrossDomainEnabled.sol/Arbitrum_CrossDomainEnabled.json"
  },
  {
    "contractName": "AncillaryData",
    "relativePath": "./artifacts/contracts/common/implementation/AncillaryData.sol/AncillaryData.json"
  },
  {
    "contractName": "FixedPoint",
    "relativePath": "./artifacts/contracts/common/implementation/FixedPoint.sol/FixedPoint.json"
  },
  {
    "contractName": "MultiCaller",
    "relativePath": "./artifacts/contracts/common/implementation/MultiCaller.sol/MultiCaller.json"
  },
  {
    "contractName": "Testable",
    "relativePath": "./artifacts/contracts/common/implementation/Testable.sol/Testable.json"
  },
  {
    "contractName": "Timer",
    "relativePath": "./artifacts/contracts/common/implementation/Timer.sol/Timer.json"
  },
  {
    "contractName": "AddressWhitelistInterface",
    "relativePath": "./artifacts/contracts/common/interfaces/AddressWhitelistInterface.sol/AddressWhitelistInterface.json"
  },
  {
    "contractName": "AVM_CrossDomainEnabled",
    "relativePath": "./artifacts/contracts/external/avm/AVM_CrossDomainEnabled.sol/AVM_CrossDomainEnabled.json"
  },
  {
    "contractName": "ArbSys",
    "relativePath": "./artifacts/contracts/external/avm/interfaces/ArbSys.sol/ArbSys.json"
  },
  {
    "contractName": "Bridge",
    "relativePath": "./artifacts/contracts/external/chainbridge/Bridge.sol/Bridge.json"
  },
  {
    "contractName": "GenericHandler",
    "relativePath": "./artifacts/contracts/external/chainbridge/handlers/GenericHandler.sol/GenericHandler.json"
  },
  {
    "contractName": "IDepositExecute",
    "relativePath": "./artifacts/contracts/external/chainbridge/interfaces/IDepositExecute.sol/IDepositExecute.json"
  },
  {
    "contractName": "IERCHandler",
    "relativePath": "./artifacts/contracts/external/chainbridge/interfaces/IERCHandler.sol/IERCHandler.json"
  },
  {
    "contractName": "IGenericHandler",
    "relativePath": "./artifacts/contracts/external/chainbridge/interfaces/IGenericHandler.sol/IGenericHandler.json"
  },
  {
    "contractName": "OVM_CrossDomainEnabled",
    "relativePath": "./artifacts/contracts/external/ovm/OVM_CrossDomainEnabled.sol/OVM_CrossDomainEnabled.json"
  },
  {
    "contractName": "iOVM_CrossDomainMessenger",
    "relativePath": "./artifacts/contracts/external/ovm/OVM_CrossDomainEnabled.sol/iOVM_CrossDomainMessenger.json"
  },
  {
    "contractName": "Merkle",
    "relativePath": "./artifacts/contracts/external/polygon/lib/Merkle.sol/Merkle.json"
  },
  {
    "contractName": "MerklePatriciaProof",
    "relativePath": "./artifacts/contracts/external/polygon/lib/MerklePatriciaProof.sol/MerklePatriciaProof.json"
  },
  {
    "contractName": "RLPReader",
    "relativePath": "./artifacts/contracts/external/polygon/lib/RLPReader.sol/RLPReader.json"
  },
  {
    "contractName": "FxChildMock",
    "relativePath": "./artifacts/contracts/external/polygon/test/FxChildMock.sol/FxChildMock.json"
  },
  {
    "contractName": "IFxMessageProcessor",
    "relativePath": "./artifacts/contracts/external/polygon/test/FxChildMock.sol/IFxMessageProcessor.json"
  },
  {
    "contractName": "IStateReceiver",
    "relativePath": "./artifacts/contracts/external/polygon/test/FxChildMock.sol/IStateReceiver.json"
  },
  {
    "contractName": "FxRootMock",
    "relativePath": "./artifacts/contracts/external/polygon/test/FxRootMock.sol/FxRootMock.json"
  },
  {
    "contractName": "IFxStateSender",
    "relativePath": "./artifacts/contracts/external/polygon/test/FxRootMock.sol/IFxStateSender.json"
  },
  {
    "contractName": "IStateSender",
    "relativePath": "./artifacts/contracts/external/polygon/test/FxRootMock.sol/IStateSender.json"
  },
  {
    "contractName": "StateSyncMock",
    "relativePath": "./artifacts/contracts/external/polygon/test/StateSyncMock.sol/StateSyncMock.json"
  },
  {
    "contractName": "FxBaseChildTunnel",
    "relativePath": "./artifacts/contracts/external/polygon/tunnel/FxBaseChildTunnel.sol/FxBaseChildTunnel.json"
  },
  {
    "contractName": "FxBaseRootTunnel",
    "relativePath": "./artifacts/contracts/external/polygon/tunnel/FxBaseRootTunnel.sol/FxBaseRootTunnel.json"
  },
  {
    "contractName": "ICheckpointManager",
    "relativePath": "./artifacts/contracts/external/polygon/tunnel/FxBaseRootTunnel.sol/ICheckpointManager.json"
  },
  {
    "contractName": "BridgeAdmin",
    "relativePath": "./artifacts/contracts/insured-bridge/BridgeAdmin.sol/BridgeAdmin.json"
  },
  {
    "contractName": "BridgeDepositBox",
    "relativePath": "./artifacts/contracts/insured-bridge/BridgeDepositBox.sol/BridgeDepositBox.json"
  },
  {
    "contractName": "TokenLike",
    "relativePath": "./artifacts/contracts/insured-bridge/BridgeDepositBox.sol/TokenLike.json"
  },
  {
    "contractName": "WETH9Like",
    "relativePath": "./artifacts/contracts/insured-bridge/BridgeDepositBox.sol/WETH9Like.json"
  },
  {
    "contractName": "BridgePool",
    "relativePath": "./artifacts/contracts/insured-bridge/BridgePool.sol/BridgePool.json"
  },
  {
    "contractName": "BridgePoolProd",
    "relativePath": "./artifacts/contracts/insured-bridge/BridgePool.sol/BridgePoolProd.json"
  },
  {
    "contractName": "RateModelStore",
    "relativePath": "./artifacts/contracts/insured-bridge/RateModelStore.sol/RateModelStore.json"
  },
  {
    "contractName": "AVM_BridgeDepositBox",
    "relativePath": "./artifacts/contracts/insured-bridge/avm/AVM_BridgeDepositBox.sol/AVM_BridgeDepositBox.json"
  },
  {
    "contractName": "StandardBridgeLike",
    "relativePath": "./artifacts/contracts/insured-bridge/avm/AVM_BridgeDepositBox.sol/StandardBridgeLike.json"
  },
  {
    "contractName": "Arbitrum_Messenger",
    "relativePath": "./artifacts/contracts/insured-bridge/avm/Arbitrum_Messenger.sol/Arbitrum_Messenger.json"
  },
  {
    "contractName": "BridgeAdminInterface",
    "relativePath": "./artifacts/contracts/insured-bridge/interfaces/BridgeAdminInterface.sol/BridgeAdminInterface.json"
  },
  {
    "contractName": "BridgePoolInterface",
    "relativePath": "./artifacts/contracts/insured-bridge/interfaces/BridgePoolInterface.sol/BridgePoolInterface.json"
  },
  {
    "contractName": "MessengerInterface",
    "relativePath": "./artifacts/contracts/insured-bridge/interfaces/MessengerInterface.sol/MessengerInterface.json"
  },
  {
    "contractName": "OVM_BridgeDepositBox",
    "relativePath": "./artifacts/contracts/insured-bridge/ovm/OVM_BridgeDepositBox.sol/OVM_BridgeDepositBox.json"
  },
  {
    "contractName": "OVM_OETH_BridgeDepositBox",
    "relativePath": "./artifacts/contracts/insured-bridge/ovm/OVM_OETH_BridgeDepositBox.sol/OVM_OETH_BridgeDepositBox.json"
  },
  {
    "contractName": "Optimism_Messenger",
    "relativePath": "./artifacts/contracts/insured-bridge/ovm/Optimism_Messenger.sol/Optimism_Messenger.json"
  },
  {
    "contractName": "Optimism_Wrapper",
    "relativePath": "./artifacts/contracts/insured-bridge/ovm/Optimism_Wrapper.sol/Optimism_Wrapper.json"
  },
  {
    "contractName": "Arbitrum_BridgeMock",
    "relativePath": "./artifacts/contracts/insured-bridge/test/Arbitrum_InboxMock.sol/Arbitrum_BridgeMock.json"
  },
  {
    "contractName": "Arbitrum_InboxMock",
    "relativePath": "./artifacts/contracts/insured-bridge/test/Arbitrum_InboxMock.sol/Arbitrum_InboxMock.json"
  },
  {
    "contractName": "Arbitrum_OutboxMock",
    "relativePath": "./artifacts/contracts/insured-bridge/test/Arbitrum_InboxMock.sol/Arbitrum_OutboxMock.json"
  },
  {
    "contractName": "BridgeDepositBoxMock",
    "relativePath": "./artifacts/contracts/insured-bridge/test/BridgeDepositBoxMock.sol/BridgeDepositBoxMock.json"
  },
  {
    "contractName": "MessengerMock",
    "relativePath": "./artifacts/contracts/insured-bridge/test/MessengerMock.sol/MessengerMock.json"
  },
  {
    "contractName": "OVM_L1CrossDomainMessengerMock",
    "relativePath": "./artifacts/contracts/insured-bridge/test/OVM_L1CrossDomainMessengerMock.sol/OVM_L1CrossDomainMessengerMock.json"
  },
  {
    "contractName": "OptimisticOracleConstraints",
    "relativePath": "./artifacts/contracts/oracle/implementation/Constants.sol/OptimisticOracleConstraints.json"
  },
  {
    "contractName": "OracleInterfaces",
    "relativePath": "./artifacts/contracts/oracle/implementation/Constants.sol/OracleInterfaces.json"
  },
  {
    "contractName": "FinderInterface",
    "relativePath": "./artifacts/contracts/oracle/interfaces/FinderInterface.sol/FinderInterface.json"
  },
  {
    "contractName": "IdentifierWhitelistInterface",
    "relativePath": "./artifacts/contracts/oracle/interfaces/IdentifierWhitelistInterface.sol/IdentifierWhitelistInterface.json"
  },
  {
    "contractName": "OptimisticOracleInterface",
    "relativePath": "./artifacts/contracts/oracle/interfaces/OptimisticOracleInterface.sol/OptimisticOracleInterface.json"
  },
  {
    "contractName": "SkinnyOptimisticOracleInterface",
    "relativePath": "./artifacts/contracts/oracle/interfaces/SkinnyOptimisticOracleInterface.sol/SkinnyOptimisticOracleInterface.json"
  },
  {
    "contractName": "StoreInterface",
    "relativePath": "./artifacts/contracts/oracle/interfaces/StoreInterface.sol/StoreInterface.json"
  }
]