{
  "id": "1f738b56edd7602183f2f8d2f23f6e90",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.9",
  "solcLongVersion": "0.8.9+commit.e5eed63a",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/external/polygon/test/StateSyncMock.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * @notice Dummy State Sender contract to simulate plasma state sender while testing\n */\ncontract StateSyncMock {\n    /**\n     * @notice Event emitted when when syncState is called\n     * @dev Heimdall bridge listens to this event and sends the data to receiver contract on child chain\n     * @param id Id of the sync, increamented for each event in case of actual state sender contract\n     * @param contractAddress the contract receiving data on child chain\n     * @param data bytes data to be sent\n     */\n    event StateSynced(uint256 indexed id, address indexed contractAddress, bytes data);\n\n    /**\n     * @notice called to send data to child chain\n     * @dev sender and receiver contracts need to be registered in case of actual state sender contract\n     * @param receiver the contract receiving data on child chain\n     * @param data bytes data to be sent\n     */\n    function syncState(address receiver, bytes calldata data) external {\n        emit StateSynced(1, receiver, data);\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/external/polygon/test/StateSyncMock.sol": {
        "StateSyncMock": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "contractAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "StateSynced",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "syncState",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "events": {
              "StateSynced(uint256,address,bytes)": {
                "details": "Heimdall bridge listens to this event and sends the data to receiver contract on child chain",
                "params": {
                  "contractAddress": "the contract receiving data on child chain",
                  "data": "bytes data to be sent",
                  "id": "Id of the sync, increamented for each event in case of actual state sender contract"
                }
              }
            },
            "kind": "dev",
            "methods": {
              "syncState(address,bytes)": {
                "details": "sender and receiver contracts need to be registered in case of actual state sender contract",
                "params": {
                  "data": "bytes data to be sent",
                  "receiver": "the contract receiving data on child chain"
                }
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506101bd806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806316f1983114610030575b600080fd5b61004361003e36600461009c565b610045565b005b8273ffffffffffffffffffffffffffffffffffffffff1660017f103fed9db65eac19c4d870f49ab7520fe03b99f1838e5996caf47e9e43308392848460405161008f92919061013a565b60405180910390a3505050565b6000806000604084860312156100b157600080fd5b833573ffffffffffffffffffffffffffffffffffffffff811681146100d557600080fd5b9250602084013567ffffffffffffffff808211156100f257600080fd5b818601915086601f83011261010657600080fd5b81358181111561011557600080fd5b87602082850101111561012757600080fd5b6020830194508093505050509250925092565b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016010191905056fea2646970667358221220d3368aaf2c1cff1dce136e444cf85683aa8fb8b219c6f2e5f87a3e3bab05a33564736f6c63430008090033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16F19831 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x9C JUMP JUMPDEST PUSH2 0x45 JUMP JUMPDEST STOP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH32 0x103FED9DB65EAC19C4D870F49AB7520FE03B99F1838E5996CAF47E9E43308392 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x8F SWAP3 SWAP2 SWAP1 PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE DUP2 DUP4 PUSH1 0x40 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP2 DUP4 ADD PUSH1 0x40 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND ADD ADD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 CALLDATASIZE DUP11 0xAF 0x2C SHR SELFDESTRUCT SAR 0xCE SGT PUSH15 0x444CF85683AA8FB8B219C6F2E5F87A RETURNDATACOPY EXTCODESIZE 0xAB SDIV LOG3 CALLDATALOAD PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
              "sourceMap": "150:911:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@syncState_26": {
                  "entryPoint": 69,
                  "id": 26,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_addresst_bytes_calldata_ptr": {
                  "entryPoint": 156,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
                  "entryPoint": 314,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1256:1",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:1",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "120:682:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "166:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "175:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "178:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "168:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "168:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "168:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "141:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "150:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "137:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "137:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "162:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "133:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "133:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "130:52:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "191:36:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "217:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "204:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "204:23:1"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "195:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "313:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "322:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "325:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "315:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "315:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "315:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "249:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "260:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "267:42:1",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "256:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "256:54:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "246:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "246:65:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "239:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "239:73:1"
                              },
                              "nodeType": "YulIf",
                              "src": "236:93:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "338:15:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "348:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "338:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "362:46:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "393:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "404:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "389:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "389:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "376:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "376:32:1"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "366:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "417:28:1",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "427:18:1",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "421:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "472:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "481:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "484:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "474:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "474:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "474:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "460:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "468:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "457:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "457:14:1"
                              },
                              "nodeType": "YulIf",
                              "src": "454:34:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "497:32:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "511:9:1"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "522:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "507:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "507:22:1"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "501:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "577:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "586:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "589:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "579:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "579:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "579:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "556:2:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "560:4:1",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "552:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "552:13:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "567:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "548:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "548:27:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "541:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "541:35:1"
                              },
                              "nodeType": "YulIf",
                              "src": "538:55:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "602:30:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "629:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "616:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "616:16:1"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "606:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "659:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "668:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "671:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "661:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "661:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "661:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "647:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "655:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "644:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "644:14:1"
                              },
                              "nodeType": "YulIf",
                              "src": "641:34:1"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "725:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "734:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "737:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "727:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "727:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "727:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "698:2:1"
                                          },
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "702:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "694:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "694:15:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "711:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "690:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "690:24:1"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "716:7:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "687:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "687:37:1"
                              },
                              "nodeType": "YulIf",
                              "src": "684:57:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "750:21:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "764:2:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "768:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "760:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "760:11:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "750:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "780:16:1",
                              "value": {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "790:6:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "780:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_bytes_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "70:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "81:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "93:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "101:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "109:6:1",
                            "type": ""
                          }
                        ],
                        "src": "14:788:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "936:318:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "953:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "964:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "946:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "946:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "946:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "987:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "998:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "983:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "983:18:1"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1003:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "976:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "976:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "976:34:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1036:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1047:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1032:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1032:18:1"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1052:6:1"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1060:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "1019:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1019:48:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1019:48:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1091:9:1"
                                          },
                                          {
                                            "name": "value1",
                                            "nodeType": "YulIdentifier",
                                            "src": "1102:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1087:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1087:22:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1111:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1083:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1083:31:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1116:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1076:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1076:42:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1076:42:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1127:121:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1143:9:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value1",
                                                "nodeType": "YulIdentifier",
                                                "src": "1162:6:1"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1170:2:1",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "1158:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1158:15:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1175:66:1",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "1154:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1154:88:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1139:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1139:104:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1245:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1135:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1135:113:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1127:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "897:9:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "908:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "916:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "927:4:1",
                            "type": ""
                          }
                        ],
                        "src": "807:447:1"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), value1)\n        calldatacopy(add(headStart, 64), value0, value1)\n        mstore(add(add(headStart, value1), 64), 0)\n        tail := add(add(headStart, and(add(value1, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n}",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c806316f1983114610030575b600080fd5b61004361003e36600461009c565b610045565b005b8273ffffffffffffffffffffffffffffffffffffffff1660017f103fed9db65eac19c4d870f49ab7520fe03b99f1838e5996caf47e9e43308392848460405161008f92919061013a565b60405180910390a3505050565b6000806000604084860312156100b157600080fd5b833573ffffffffffffffffffffffffffffffffffffffff811681146100d557600080fd5b9250602084013567ffffffffffffffff808211156100f257600080fd5b818601915086601f83011261010657600080fd5b81358181111561011557600080fd5b87602082850101111561012757600080fd5b6020830194508093505050509250925092565b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016010191905056fea2646970667358221220d3368aaf2c1cff1dce136e444cf85683aa8fb8b219c6f2e5f87a3e3bab05a33564736f6c63430008090033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16F19831 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x9C JUMP JUMPDEST PUSH2 0x45 JUMP JUMPDEST STOP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH32 0x103FED9DB65EAC19C4D870F49AB7520FE03B99F1838E5996CAF47E9E43308392 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x8F SWAP3 SWAP2 SWAP1 PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE DUP2 DUP4 PUSH1 0x40 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP2 DUP4 ADD PUSH1 0x40 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND ADD ADD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 CALLDATASIZE DUP11 0xAF 0x2C SHR SELFDESTRUCT SAR 0xCE SGT PUSH15 0x444CF85683AA8FB8B219C6F2E5F87A RETURNDATACOPY EXTCODESIZE 0xAB SDIV LOG3 CALLDATALOAD PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
              "sourceMap": "150:911:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;940:119;;;;;;:::i;:::-;;:::i;:::-;;;1037:8;1022:30;;1034:1;1022:30;1047:4;;1022:30;;;;;;;:::i;:::-;;;;;;;;940:119;;;:::o;14:788:1:-;93:6;101;109;162:2;150:9;141:7;137:23;133:32;130:52;;;178:1;175;168:12;130:52;217:9;204:23;267:42;260:5;256:54;249:5;246:65;236:93;;325:1;322;315:12;236:93;348:5;-1:-1:-1;404:2:1;389:18;;376:32;427:18;457:14;;;454:34;;;484:1;481;474:12;454:34;522:6;511:9;507:22;497:32;;567:7;560:4;556:2;552:13;548:27;538:55;;589:1;586;579:12;538:55;629:2;616:16;655:2;647:6;644:14;641:34;;;671:1;668;661:12;641:34;716:7;711:2;702:6;698:2;694:15;690:24;687:37;684:57;;;737:1;734;727:12;684:57;768:2;764;760:11;750:21;;790:6;780:16;;;;;14:788;;;;;:::o;807:447::-;964:2;953:9;946:21;1003:6;998:2;987:9;983:18;976:34;1060:6;1052;1047:2;1036:9;1032:18;1019:48;1116:1;1087:22;;;1111:2;1083:31;;;1076:42;;;;1170:2;1158:15;;;1175:66;1154:88;1139:104;1135:113;;807:447;-1:-1:-1;807:447:1:o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "89000",
                "executionCost": "135",
                "totalCost": "89135"
              },
              "external": {
                "syncState(address,bytes)": "infinite"
              }
            },
            "methodIdentifiers": {
              "syncState(address,bytes)": "16f19831"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"StateSynced\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"syncState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"StateSynced(uint256,address,bytes)\":{\"details\":\"Heimdall bridge listens to this event and sends the data to receiver contract on child chain\",\"params\":{\"contractAddress\":\"the contract receiving data on child chain\",\"data\":\"bytes data to be sent\",\"id\":\"Id of the sync, increamented for each event in case of actual state sender contract\"}}},\"kind\":\"dev\",\"methods\":{\"syncState(address,bytes)\":{\"details\":\"sender and receiver contracts need to be registered in case of actual state sender contract\",\"params\":{\"data\":\"bytes data to be sent\",\"receiver\":\"the contract receiving data on child chain\"}}},\"version\":1},\"userdoc\":{\"events\":{\"StateSynced(uint256,address,bytes)\":{\"notice\":\"Event emitted when when syncState is called\"}},\"kind\":\"user\",\"methods\":{\"syncState(address,bytes)\":{\"notice\":\"called to send data to child chain\"}},\"notice\":\"Dummy State Sender contract to simulate plasma state sender while testing\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/external/polygon/test/StateSyncMock.sol\":\"StateSyncMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/external/polygon/test/StateSyncMock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @notice Dummy State Sender contract to simulate plasma state sender while testing\\n */\\ncontract StateSyncMock {\\n    /**\\n     * @notice Event emitted when when syncState is called\\n     * @dev Heimdall bridge listens to this event and sends the data to receiver contract on child chain\\n     * @param id Id of the sync, increamented for each event in case of actual state sender contract\\n     * @param contractAddress the contract receiving data on child chain\\n     * @param data bytes data to be sent\\n     */\\n    event StateSynced(uint256 indexed id, address indexed contractAddress, bytes data);\\n\\n    /**\\n     * @notice called to send data to child chain\\n     * @dev sender and receiver contracts need to be registered in case of actual state sender contract\\n     * @param receiver the contract receiving data on child chain\\n     * @param data bytes data to be sent\\n     */\\n    function syncState(address receiver, bytes calldata data) external {\\n        emit StateSynced(1, receiver, data);\\n    }\\n}\\n\",\"keccak256\":\"0x05023f6f00304ad3172ae502811d24217da4368050957f314441615a35bb6912\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "events": {
              "StateSynced(uint256,address,bytes)": {
                "notice": "Event emitted when when syncState is called"
              }
            },
            "kind": "user",
            "methods": {
              "syncState(address,bytes)": {
                "notice": "called to send data to child chain"
              }
            },
            "notice": "Dummy State Sender contract to simulate plasma state sender while testing",
            "version": 1
          }
        }
      }
    },
    "sources": {
      "contracts/external/polygon/test/StateSyncMock.sol": {
        "ast": {
          "absolutePath": "contracts/external/polygon/test/StateSyncMock.sol",
          "exportedSymbols": {
            "StateSyncMock": [
              27
            ]
          },
          "id": 28,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "StateSyncMock",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "57:92:0",
                "text": " @notice Dummy State Sender contract to simulate plasma state sender while testing"
              },
              "fullyImplemented": true,
              "id": 27,
              "linearizedBaseContracts": [
                27
              ],
              "name": "StateSyncMock",
              "nameLocation": "159:13:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 3,
                    "nodeType": "StructuredDocumentation",
                    "src": "179:390:0",
                    "text": " @notice Event emitted when when syncState is called\n @dev Heimdall bridge listens to this event and sends the data to receiver contract on child chain\n @param id Id of the sync, increamented for each event in case of actual state sender contract\n @param contractAddress the contract receiving data on child chain\n @param data bytes data to be sent"
                  },
                  "id": 11,
                  "name": "StateSynced",
                  "nameLocation": "580:11:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 10,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "608:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "592:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "592:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 7,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "contractAddress",
                        "nameLocation": "628:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "612:31:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 6,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "612:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 9,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "651:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "645:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "645:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "591:65:0"
                  },
                  "src": "574:83:0"
                },
                {
                  "body": {
                    "id": 25,
                    "nodeType": "Block",
                    "src": "1007:52:0",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 20,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1034:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "id": 21,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14,
                              "src": "1037:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 22,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "1047:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 19,
                            "name": "StateSynced",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "1022:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,address,bytes memory)"
                            }
                          },
                          "id": 23,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1022:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24,
                        "nodeType": "EmitStatement",
                        "src": "1017:35:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 12,
                    "nodeType": "StructuredDocumentation",
                    "src": "663:272:0",
                    "text": " @notice called to send data to child chain\n @dev sender and receiver contracts need to be registered in case of actual state sender contract\n @param receiver the contract receiving data on child chain\n @param data bytes data to be sent"
                  },
                  "functionSelector": "16f19831",
                  "id": 26,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "syncState",
                  "nameLocation": "949:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 14,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "967:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 26,
                        "src": "959:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 13,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "959:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "992:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 26,
                        "src": "977:19:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "977:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "958:39:0"
                  },
                  "returnParameters": {
                    "id": 18,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1007:0:0"
                  },
                  "scope": 27,
                  "src": "940:119:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 28,
              "src": "150:911:0",
              "usedErrors": []
            }
          ],
          "src": "32:1030:0"
        },
        "id": 0
      }
    }
  }
}
