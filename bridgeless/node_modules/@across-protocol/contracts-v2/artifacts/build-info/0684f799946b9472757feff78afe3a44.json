{"id":"0684f799946b9472757feff78afe3a44","_format":"hh-sol-build-info-1","solcVersion":"0.8.23","solcLongVersion":"0.8.23+commit.f704f362","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822ProxiableUpgradeable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967Upgradeable {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeaconUpgradeable {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeaconUpgradeable.sol\";\nimport \"../../interfaces/IERC1967Upgradeable.sol\";\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/StorageSlotUpgradeable.sol\";\nimport \"../utils/Initializable.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\n    function __ERC1967Upgrade_init() internal onlyInitializing {\n    }\n\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\n    }\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(AddressUpgradeable.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../ERC1967/ERC1967UpgradeUpgradeable.sol\";\nimport \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20PermitUpgradeable {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\nimport \"../extensions/IERC20PermitUpgradeable.sol\";\nimport \"../../../utils/AddressUpgradeable.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20Upgradeable {\n    using AddressUpgradeable for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20Upgradeable token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20Upgradeable token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20Upgradeable token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20Upgradeable token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20PermitUpgradeable token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20Upgradeable token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && AddressUpgradeable.isContract(address(token));\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../StringsUpgradeable.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSAUpgradeable {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", StringsUpgradeable.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary MathUpgradeable {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMathUpgradeable {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlotUpgradeable {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/MathUpgradeable.sol\";\nimport \"./math/SignedMathUpgradeable.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary StringsUpgradeable {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = MathUpgradeable.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMathUpgradeable.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts/interfaces/IERC1271.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC1271.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC1271 standard signature validation method for\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n *\n * _Available since v4.1._\n */\ninterface IERC1271 {\n    /**\n     * @dev Should return whether the signature provided is valid for the provided data\n     * @param hash      Hash of the data to be signed\n     * @param signature Signature byte array associated with _data\n     */\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.2) (utils/cryptography/MerkleProof.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates merkle trees that are safe\n * against this attack out of the box.\n */\nlibrary MerkleProof {\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Calldata version of {verify}\n     *\n     * _Available since v4.7._\n     */\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leafs & pre-images are assumed to be sorted.\n     *\n     * _Available since v4.4._\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Calldata version of {processProof}\n     *\n     * _Available since v4.7._\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Calldata version of {multiProofVerify}\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofLen = proof.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proofLen - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            require(proofPos == proofLen, \"MerkleProof: invalid multiproof\");\n            unchecked {\n                return hashes[totalHashes - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Calldata version of {processMultiProof}.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofLen = proof.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proofLen - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            require(proofPos == proofLen, \"MerkleProof: invalid multiproof\");\n            unchecked {\n                return hashes[totalHashes - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\n    }\n\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/SignatureChecker.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ECDSA.sol\";\nimport \"../../interfaces/IERC1271.sol\";\n\n/**\n * @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\n * signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like\n * Argent and Gnosis Safe.\n *\n * _Available since v4.1._\n */\nlibrary SignatureChecker {\n    /**\n     * @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\n     * signature is validated against that smart contract using ERC1271, otherwise it's validated using `ECDSA.recover`.\n     *\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\n     */\n    function isValidSignatureNow(address signer, bytes32 hash, bytes memory signature) internal view returns (bool) {\n        (address recovered, ECDSA.RecoverError error) = ECDSA.tryRecover(hash, signature);\n        return\n            (error == ECDSA.RecoverError.NoError && recovered == signer) ||\n            isValidERC1271SignatureNow(signer, hash, signature);\n    }\n\n    /**\n     * @dev Checks if a signature is valid for a given signer and data hash. The signature is validated\n     * against the signer smart contract using ERC1271.\n     *\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\n     */\n    function isValidERC1271SignatureNow(\n        address signer,\n        bytes32 hash,\n        bytes memory signature\n    ) internal view returns (bool) {\n        (bool success, bytes memory result) = signer.staticcall(\n            abi.encodeWithSelector(IERC1271.isValidSignature.selector, hash, signature)\n        );\n        return (success &&\n            result.length >= 32 &&\n            abi.decode(result, (bytes32)) == bytes32(IERC1271.isValidSignature.selector));\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/external/interfaces/WETH9Interface.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\n/**\n * @notice Interface for the WETH9 contract.\n */\ninterface WETH9Interface {\n    /**\n     * @notice Burn Wrapped Ether and receive native Ether.\n     * @param wad Amount of WETH to unwrap and send to caller.\n     */\n    function withdraw(uint256 wad) external;\n\n    /**\n     * @notice Lock native Ether and mint Wrapped Ether ERC20\n     * @dev msg.value is amount of Wrapped Ether to mint/Ether to lock.\n     */\n    function deposit() external payable;\n\n    /**\n     * @notice Get balance of WETH held by `guy`.\n     * @param guy Address to get balance of.\n     * @return wad Amount of WETH held by `guy`.\n     */\n    function balanceOf(address guy) external view returns (uint256 wad);\n\n    /**\n     * @notice Transfer `wad` of WETH from caller to `guy`.\n     * @param guy Address to send WETH to.\n     * @param wad Amount of WETH to send.\n     * @return ok True if transfer succeeded.\n     */\n    function transfer(address guy, uint256 wad) external returns (bool);\n}\n"},"contracts/interfaces/HubPoolInterface.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @notice Concise list of functions in HubPool implementation.\n */\ninterface HubPoolInterface {\n    // This leaf is meant to be decoded in the HubPool to rebalance tokens between HubPool and SpokePool.\n    struct PoolRebalanceLeaf {\n        // This is used to know which chain to send cross-chain transactions to (and which SpokePool to send to).\n        uint256 chainId;\n        // Total LP fee amount per token in this bundle, encompassing all associated bundled relays.\n        uint256[] bundleLpFees;\n        // Represents the amount to push to or pull from the SpokePool. If +, the pool pays the SpokePool. If negative\n        // the SpokePool pays the HubPool. There can be arbitrarily complex rebalancing rules defined offchain. This\n        // number is only nonzero when the rules indicate that a rebalancing action should occur. When a rebalance does\n        // occur, runningBalances must be set to zero for this token and netSendAmounts should be set to the previous\n        // runningBalances + relays - deposits in this bundle. If non-zero then it must be set on the SpokePool's\n        // RelayerRefundLeaf amountToReturn as -1 * this value to show if funds are being sent from or to the SpokePool.\n        int256[] netSendAmounts;\n        // This is only here to be emitted in an event to track a running unpaid balance between the L2 pool and the L1\n        // pool. A positive number indicates that the HubPool owes the SpokePool funds. A negative number indicates that\n        // the SpokePool owes the HubPool funds. See the comment above for the dynamics of this and netSendAmounts.\n        int256[] runningBalances;\n        // Used by data worker to mark which leaves should relay roots to SpokePools, and to otherwise organize leaves.\n        // For example, each leaf should contain all the rebalance information for a single chain, but in the case where\n        // the list of l1Tokens is very large such that they all can't fit into a single leaf that can be executed under\n        // the block gas limit, then the data worker can use this groupIndex to organize them. Any leaves with\n        // a groupIndex equal to 0 will relay roots to the SpokePool, so the data worker should ensure that only one\n        // leaf for a specific chainId should have a groupIndex equal to 0.\n        uint256 groupIndex;\n        // Used as the index in the bitmap to track whether this leaf has been executed or not.\n        uint8 leafId;\n        // The bundleLpFees, netSendAmounts, and runningBalances are required to be the same length. They are parallel\n        // arrays for the given chainId and should be ordered by the l1Tokens field. All whitelisted tokens with nonzero\n        // relays on this chain in this bundle in the order of whitelisting.\n        address[] l1Tokens;\n    }\n\n    // A data worker can optimistically store several merkle roots on this contract by staking a bond and calling\n    // proposeRootBundle. By staking a bond, the data worker is alleging that the merkle roots all contain valid leaves\n    // that can be executed later to:\n    // - Send funds from this contract to a SpokePool or vice versa\n    // - Send funds from a SpokePool to Relayer as a refund for a relayed deposit\n    // - Send funds from a SpokePool to a deposit recipient to fulfill a \"slow\" relay\n    // Anyone can dispute this struct if the merkle roots contain invalid leaves before the\n    // challengePeriodEndTimestamp. Once the expiration timestamp is passed, executeRootBundle to execute a leaf\n    // from the poolRebalanceRoot on this contract and it will simultaneously publish the relayerRefundRoot and\n    // slowRelayRoot to a SpokePool. The latter two roots, once published to the SpokePool, contain\n    // leaves that can be executed on the SpokePool to pay relayers or recipients.\n    struct RootBundle {\n        // Contains leaves instructing this contract to send funds to SpokePools.\n        bytes32 poolRebalanceRoot;\n        // Relayer refund merkle root to be published to a SpokePool.\n        bytes32 relayerRefundRoot;\n        // Slow relay merkle root to be published to a SpokePool.\n        bytes32 slowRelayRoot;\n        // This is a 1D bitmap, with max size of 256 elements, limiting us to 256 chainsIds.\n        uint256 claimedBitMap;\n        // Proposer of this root bundle.\n        address proposer;\n        // Number of pool rebalance leaves to execute in the poolRebalanceRoot. After this number\n        // of leaves are executed, a new root bundle can be proposed\n        uint8 unclaimedPoolRebalanceLeafCount;\n        // When root bundle challenge period passes and this root bundle becomes executable.\n        uint32 challengePeriodEndTimestamp;\n    }\n\n    // Each whitelisted L1 token has an associated pooledToken struct that contains all information used to track the\n    // cumulative LP positions and if this token is enabled for deposits.\n    struct PooledToken {\n        // LP token given to LPs of a specific L1 token.\n        address lpToken;\n        // True if accepting new LP's.\n        bool isEnabled;\n        // Timestamp of last LP fee update.\n        uint32 lastLpFeeUpdate;\n        // Number of LP funds sent via pool rebalances to SpokePools and are expected to be sent\n        // back later.\n        int256 utilizedReserves;\n        // Number of LP funds held in contract less utilized reserves.\n        uint256 liquidReserves;\n        // Number of LP funds reserved to pay out to LPs as fees.\n        uint256 undistributedLpFees;\n    }\n\n    // Helper contracts to facilitate cross chain actions between HubPool and SpokePool for a specific network.\n    struct CrossChainContract {\n        address adapter;\n        address spokePool;\n    }\n\n    function setPaused(bool pause) external;\n\n    function emergencyDeleteProposal() external;\n\n    function relaySpokePoolAdminFunction(uint256 chainId, bytes memory functionData) external;\n\n    function setProtocolFeeCapture(address newProtocolFeeCaptureAddress, uint256 newProtocolFeeCapturePct) external;\n\n    function setBond(IERC20 newBondToken, uint256 newBondAmount) external;\n\n    function setLiveness(uint32 newLiveness) external;\n\n    function setIdentifier(bytes32 newIdentifier) external;\n\n    function setCrossChainContracts(\n        uint256 l2ChainId,\n        address adapter,\n        address spokePool\n    ) external;\n\n    function enableL1TokenForLiquidityProvision(address l1Token) external;\n\n    function disableL1TokenForLiquidityProvision(address l1Token) external;\n\n    function addLiquidity(address l1Token, uint256 l1TokenAmount) external payable;\n\n    function removeLiquidity(\n        address l1Token,\n        uint256 lpTokenAmount,\n        bool sendEth\n    ) external;\n\n    function exchangeRateCurrent(address l1Token) external returns (uint256);\n\n    function liquidityUtilizationCurrent(address l1Token) external returns (uint256);\n\n    function liquidityUtilizationPostRelay(address l1Token, uint256 relayedAmount) external returns (uint256);\n\n    function sync(address l1Token) external;\n\n    function proposeRootBundle(\n        uint256[] memory bundleEvaluationBlockNumbers,\n        uint8 poolRebalanceLeafCount,\n        bytes32 poolRebalanceRoot,\n        bytes32 relayerRefundRoot,\n        bytes32 slowRelayRoot\n    ) external;\n\n    function executeRootBundle(\n        uint256 chainId,\n        uint256 groupIndex,\n        uint256[] memory bundleLpFees,\n        int256[] memory netSendAmounts,\n        int256[] memory runningBalances,\n        uint8 leafId,\n        address[] memory l1Tokens,\n        bytes32[] memory proof\n    ) external;\n\n    function disputeRootBundle() external;\n\n    function claimProtocolFeesCaptured(address l1Token) external;\n\n    function setPoolRebalanceRoute(\n        uint256 destinationChainId,\n        address l1Token,\n        address destinationToken\n    ) external;\n\n    function setDepositRoute(\n        uint256 originChainId,\n        uint256 destinationChainId,\n        address originToken,\n        bool depositsEnabled\n    ) external;\n\n    function poolRebalanceRoute(uint256 destinationChainId, address l1Token)\n        external\n        view\n        returns (address destinationToken);\n\n    function loadEthForL2Calls() external payable;\n}\n"},"contracts/interfaces/SpokePoolInterface.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\n/**\n * @notice Contains common data structures and functions used by all SpokePool implementations.\n */\ninterface SpokePoolInterface {\n    // This leaf is meant to be decoded in the SpokePool to pay out successful relayers.\n    struct RelayerRefundLeaf {\n        // This is the amount to return to the HubPool. This occurs when there is a PoolRebalanceLeaf netSendAmount that\n        // is negative. This is just the negative of this value.\n        uint256 amountToReturn;\n        // Used to verify that this is being executed on the correct destination chainId.\n        uint256 chainId;\n        // This array designates how much each of those addresses should be refunded.\n        uint256[] refundAmounts;\n        // Used as the index in the bitmap to track whether this leaf has been executed or not.\n        uint32 leafId;\n        // The associated L2TokenAddress that these claims apply to.\n        address l2TokenAddress;\n        // Must be same length as refundAmounts and designates each address that must be refunded.\n        address[] refundAddresses;\n    }\n\n    // This struct represents the data to fully specify a relay. If any portion of this data differs, the relay is\n    // considered to be completely distinct. Only one relay for a particular depositId, chainId pair should be\n    // considered valid and repaid. This data is hashed and inserted into the slow relay merkle root so that an off\n    // chain validator can choose when to refund slow relayers.\n    /// @custom:audit FOLLOWING STRUCT TO BE DEPRECATED\n    struct RelayData {\n        // The address that made the deposit on the origin chain.\n        address depositor;\n        // The recipient address on the destination chain.\n        address recipient;\n        // The corresponding token address on the destination chain.\n        address destinationToken;\n        // The total relay amount before fees are taken out.\n        uint256 amount;\n        // Origin chain id.\n        uint256 originChainId;\n        // Destination chain id.\n        uint256 destinationChainId;\n        // The LP Fee percentage computed by the relayer based on the deposit's quote timestamp\n        // and the HubPool's utilization.\n        int64 realizedLpFeePct;\n        // The relayer fee percentage specified in the deposit.\n        int64 relayerFeePct;\n        // The id uniquely identifying this deposit on the origin chain.\n        uint32 depositId;\n        // Data that is forwarded to the recipient.\n        bytes message;\n    }\n\n    /// @custom:audit FOLLOWING STRUCT TO BE DEPRECATED\n    struct SlowFill {\n        RelayData relayData;\n        int256 payoutAdjustmentPct;\n    }\n\n    // Stores collection of merkle roots that can be published to this contract from the HubPool, which are referenced\n    // by \"data workers\" via inclusion proofs to execute leaves in the roots.\n    struct RootBundle {\n        // Merkle root of slow relays that were not fully filled and whose recipient is still owed funds from the LP pool.\n        bytes32 slowRelayRoot;\n        // Merkle root of relayer refunds for successful relays.\n        bytes32 relayerRefundRoot;\n        // This is a 2D bitmap tracking which leaves in the relayer refund root have been claimed, with max size of\n        // 256x(2^248) leaves per root.\n        mapping(uint256 => uint256) claimedBitmap;\n    }\n\n    function setCrossDomainAdmin(address newCrossDomainAdmin) external;\n\n    function setHubPool(address newHubPool) external;\n\n    function setEnableRoute(\n        address originToken,\n        uint256 destinationChainId,\n        bool enable\n    ) external;\n\n    function pauseDeposits(bool pause) external;\n\n    function pauseFills(bool pause) external;\n\n    function relayRootBundle(bytes32 relayerRefundRoot, bytes32 slowRelayRoot) external;\n\n    function emergencyDeleteRootBundle(uint256 rootBundleId) external;\n\n    function deposit(\n        address recipient,\n        address originToken,\n        uint256 amount,\n        uint256 destinationChainId,\n        int64 relayerFeePct,\n        uint32 quoteTimestamp,\n        bytes memory message,\n        uint256 maxCount\n    ) external payable;\n\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function depositFor(\n        address depositor,\n        address recipient,\n        address originToken,\n        uint256 amount,\n        uint256 destinationChainId,\n        int64 relayerFeePct,\n        uint32 quoteTimestamp,\n        bytes memory message,\n        uint256 maxCount\n    ) external payable;\n\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function depositNow(\n        address recipient,\n        address originToken,\n        uint256 amount,\n        uint256 destinationChainId,\n        int64 relayerFeePct,\n        bytes memory message,\n        uint256 maxCount\n    ) external payable;\n\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function speedUpDeposit(\n        address depositor,\n        int64 updatedRelayerFeePct,\n        uint32 depositId,\n        address updatedRecipient,\n        bytes memory updatedMessage,\n        bytes memory depositorSignature\n    ) external;\n\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function fillRelay(\n        address depositor,\n        address recipient,\n        address destinationToken,\n        uint256 amount,\n        uint256 maxTokensToSend,\n        uint256 repaymentChainId,\n        uint256 originChainId,\n        int64 realizedLpFeePct,\n        int64 relayerFeePct,\n        uint32 depositId,\n        bytes memory message,\n        uint256 maxCount\n    ) external;\n\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function fillRelayWithUpdatedDeposit(\n        address depositor,\n        address recipient,\n        address updatedRecipient,\n        address destinationToken,\n        uint256 amount,\n        uint256 maxTokensToSend,\n        uint256 repaymentChainId,\n        uint256 originChainId,\n        int64 realizedLpFeePct,\n        int64 relayerFeePct,\n        int64 updatedRelayerFeePct,\n        uint32 depositId,\n        bytes memory message,\n        bytes memory updatedMessage,\n        bytes memory depositorSignature,\n        uint256 maxCount\n    ) external;\n\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function executeSlowRelayLeaf(\n        address depositor,\n        address recipient,\n        address destinationToken,\n        uint256 amount,\n        uint256 originChainId,\n        int64 realizedLpFeePct,\n        int64 relayerFeePct,\n        uint32 depositId,\n        uint32 rootBundleId,\n        bytes memory message,\n        int256 payoutAdjustment,\n        bytes32[] memory proof\n    ) external;\n\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function executeRelayerRefundLeaf(\n        uint32 rootBundleId,\n        SpokePoolInterface.RelayerRefundLeaf memory relayerRefundLeaf,\n        bytes32[] memory proof\n    ) external payable;\n\n    function chainId() external view returns (uint256);\n\n    error NotEOA();\n}\n"},"contracts/interfaces/V3SpokePoolInterface.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\n// Contains structs and functions used by SpokePool contracts to facilitate universal settlement.\ninterface V3SpokePoolInterface {\n    /**************************************\n     *              ENUMS                 *\n     **************************************/\n\n    // Fill status tracks on-chain state of deposit, uniquely identified by relayHash.\n    enum FillStatus {\n        Unfilled,\n        RequestedSlowFill,\n        Filled\n    }\n    // Fill type is emitted in the FilledRelay event to assist Dataworker with determining which types of\n    // fills to refund (e.g. only fast fills) and whether a fast fill created a sow fill excess.\n    enum FillType {\n        FastFill,\n        // Fast fills are normal fills that do not replace a slow fill request.\n        ReplacedSlowFill,\n        // Replaced slow fills are fast fills that replace a slow fill request. This type is used by the Dataworker\n        // to know when to send excess funds from the SpokePool to the HubPool because they can no longer be used\n        // for a slow fill execution.\n        SlowFill\n        // Slow fills are requested via requestSlowFill and executed by executeSlowRelayLeaf after a bundle containing\n        // the slow fill is validated.\n    }\n\n    /**************************************\n     *              STRUCTS               *\n     **************************************/\n\n    // This struct represents the data to fully specify a **unique** relay submitted on this chain.\n    // This data is hashed with the chainId() and saved by the SpokePool to prevent collisions and protect against\n    // replay attacks on other chains. If any portion of this data differs, the relay is considered to be\n    // completely distinct.\n    struct V3RelayData {\n        // The address that made the deposit on the origin chain.\n        address depositor;\n        // The recipient address on the destination chain.\n        address recipient;\n        // This is the exclusive relayer who can fill the deposit before the exclusivity deadline.\n        address exclusiveRelayer;\n        // Token that is deposited on origin chain by depositor.\n        address inputToken;\n        // Token that is received on destination chain by recipient.\n        address outputToken;\n        // The amount of input token deposited by depositor.\n        uint256 inputAmount;\n        // The amount of output token to be received by recipient.\n        uint256 outputAmount;\n        // Origin chain id.\n        uint256 originChainId;\n        // The id uniquely identifying this deposit on the origin chain.\n        uint32 depositId;\n        // The timestamp on the destination chain after which this deposit can no longer be filled.\n        uint32 fillDeadline;\n        // The timestamp on the destination chain after which any relayer can fill the deposit.\n        uint32 exclusivityDeadline;\n        // Data that is forwarded to the recipient.\n        bytes message;\n    }\n\n    // Contains parameters passed in by someone who wants to execute a slow relay leaf.\n    struct V3SlowFill {\n        V3RelayData relayData;\n        uint256 chainId;\n        uint256 updatedOutputAmount;\n    }\n\n    // Contains information about a relay to be sent along with additional information that is not unique to the\n    // relay itself but is required to know how to process the relay. For example, \"updatedX\" fields can be used\n    // by the relayer to modify fields of the relay with the depositor's permission, and \"repaymentChainId\" is specified\n    // by the relayer to determine where to take a relayer refund, but doesn't affect the uniqueness of the relay.\n    struct V3RelayExecutionParams {\n        V3RelayData relay;\n        bytes32 relayHash;\n        uint256 updatedOutputAmount;\n        address updatedRecipient;\n        bytes updatedMessage;\n        uint256 repaymentChainId;\n    }\n\n    // Packs together parameters emitted in FilledV3Relay because there are too many emitted otherwise.\n    // Similar to V3RelayExecutionParams, these parameters are not used to uniquely identify the deposit being\n    // filled so they don't have to be unpacked by all clients.\n    struct V3RelayExecutionEventInfo {\n        address updatedRecipient;\n        bytes updatedMessage;\n        uint256 updatedOutputAmount;\n        FillType fillType;\n    }\n\n    /**************************************\n     *              EVENTS                *\n     **************************************/\n\n    event V3FundsDeposited(\n        address inputToken,\n        address outputToken,\n        uint256 inputAmount,\n        uint256 outputAmount,\n        uint256 indexed destinationChainId,\n        uint32 indexed depositId,\n        uint32 quoteTimestamp,\n        uint32 fillDeadline,\n        uint32 exclusivityDeadline,\n        address indexed depositor,\n        address recipient,\n        address exclusiveRelayer,\n        bytes message\n    );\n\n    event RequestedSpeedUpV3Deposit(\n        uint256 updatedOutputAmount,\n        uint32 indexed depositId,\n        address indexed depositor,\n        address updatedRecipient,\n        bytes updatedMessage,\n        bytes depositorSignature\n    );\n\n    event FilledV3Relay(\n        address inputToken,\n        address outputToken,\n        uint256 inputAmount,\n        uint256 outputAmount,\n        uint256 repaymentChainId,\n        uint256 indexed originChainId,\n        uint32 indexed depositId,\n        uint32 fillDeadline,\n        uint32 exclusivityDeadline,\n        address exclusiveRelayer,\n        address indexed relayer,\n        address depositor,\n        address recipient,\n        bytes message,\n        V3RelayExecutionEventInfo relayExecutionInfo\n    );\n\n    event RequestedV3SlowFill(\n        address inputToken,\n        address outputToken,\n        uint256 inputAmount,\n        uint256 outputAmount,\n        uint256 indexed originChainId,\n        uint32 indexed depositId,\n        uint32 fillDeadline,\n        uint32 exclusivityDeadline,\n        address exclusiveRelayer,\n        address depositor,\n        address recipient,\n        bytes message\n    );\n\n    /**************************************\n     *              FUNCTIONS             *\n     **************************************/\n\n    function depositV3(\n        address depositor,\n        address recipient,\n        address inputToken,\n        address outputToken,\n        uint256 inputAmount,\n        uint256 outputAmount,\n        uint256 destinationChainId,\n        address exclusiveRelayer,\n        uint32 quoteTimestamp,\n        uint32 fillDeadline,\n        uint32 exclusivityDeadline,\n        bytes calldata message\n    ) external payable;\n\n    function speedUpV3Deposit(\n        address depositor,\n        uint32 depositId,\n        uint256 updatedOutputAmount,\n        address updatedRecipient,\n        bytes calldata updatedMessage,\n        bytes calldata depositorSignature\n    ) external;\n\n    function fillV3Relay(V3RelayData calldata relayData, uint256 repaymentChainId) external;\n\n    function fillV3RelayWithUpdatedDeposit(\n        V3RelayData calldata relayData,\n        uint256 repaymentChainId,\n        uint256 updatedOutputAmount,\n        address updatedRecipient,\n        bytes calldata updatedMessage,\n        bytes calldata depositorSignature\n    ) external;\n\n    function requestV3SlowFill(V3RelayData calldata relayData) external;\n\n    function executeV3SlowRelayLeaf(\n        V3SlowFill calldata slowFillLeaf,\n        uint32 rootBundleId,\n        bytes32[] calldata proof\n    ) external;\n\n    /**************************************\n     *              ERRORS                *\n     **************************************/\n\n    error DisabledRoute();\n    error InvalidQuoteTimestamp();\n    error InvalidFillDeadline();\n    error InvalidExclusiveRelayer();\n    error InvalidExclusivityDeadline();\n    error MsgValueDoesNotMatchInputAmount();\n    error NotExclusiveRelayer();\n    error NoSlowFillsInExclusivityWindow();\n    error RelayFilled();\n    error InvalidSlowFillRequest();\n    error ExpiredFillDeadline();\n    error InvalidMerkleProof();\n    error InvalidChainId();\n    error InvalidMerkleLeaf();\n    error ClaimedMerkleLeaf();\n    error InvalidPayoutAdjustmentPct();\n}\n"},"contracts/MerkleLib.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\nimport \"./interfaces/SpokePoolInterface.sol\";\nimport \"./interfaces/V3SpokePoolInterface.sol\";\nimport \"./interfaces/HubPoolInterface.sol\";\n\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\n\n/**\n * @notice Library to help with merkle roots, proofs, and claims.\n */\nlibrary MerkleLib {\n    /**\n     * @notice Verifies that a repayment is contained within a merkle root.\n     * @param root the merkle root.\n     * @param rebalance the rebalance struct.\n     * @param proof the merkle proof.\n     * @return bool to signal if the pool rebalance proof correctly shows inclusion of the rebalance within the tree.\n     */\n    function verifyPoolRebalance(\n        bytes32 root,\n        HubPoolInterface.PoolRebalanceLeaf memory rebalance,\n        bytes32[] memory proof\n    ) internal pure returns (bool) {\n        return MerkleProof.verify(proof, root, keccak256(abi.encode(rebalance)));\n    }\n\n    /**\n     * @notice Verifies that a relayer refund is contained within a merkle root.\n     * @param root the merkle root.\n     * @param refund the refund struct.\n     * @param proof the merkle proof.\n     * @return bool to signal if the relayer refund proof correctly shows inclusion of the refund within the tree.\n     */\n    function verifyRelayerRefund(\n        bytes32 root,\n        SpokePoolInterface.RelayerRefundLeaf memory refund,\n        bytes32[] memory proof\n    ) internal pure returns (bool) {\n        return MerkleProof.verify(proof, root, keccak256(abi.encode(refund)));\n    }\n\n    /**\n     * @notice Verifies that a distribution is contained within a merkle root.\n     * @param root the merkle root.\n     * @param slowRelayFulfillment the relayData fulfillment struct.\n     * @param proof the merkle proof.\n     * @return bool to signal if the slow relay's proof correctly shows inclusion of the slow relay within the tree.\n     */\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function verifySlowRelayFulfillment(\n        bytes32 root,\n        SpokePoolInterface.SlowFill memory slowRelayFulfillment,\n        bytes32[] memory proof\n    ) internal pure returns (bool) {\n        return MerkleProof.verify(proof, root, keccak256(abi.encode(slowRelayFulfillment)));\n    }\n\n    function verifyV3SlowRelayFulfillment(\n        bytes32 root,\n        V3SpokePoolInterface.V3SlowFill memory slowRelayFulfillment,\n        bytes32[] memory proof\n    ) internal pure returns (bool) {\n        return MerkleProof.verify(proof, root, keccak256(abi.encode(slowRelayFulfillment)));\n    }\n\n    // The following functions are primarily copied from\n    // https://github.com/Uniswap/merkle-distributor/blob/master/contracts/MerkleDistributor.sol with minor changes.\n\n    /**\n     * @notice Tests whether a claim is contained within a claimedBitMap mapping.\n     * @param claimedBitMap a simple uint256 mapping in storage used as a bitmap.\n     * @param index the index to check in the bitmap.\n     * @return bool indicating if the index within the claimedBitMap has been marked as claimed.\n     */\n    function isClaimed(mapping(uint256 => uint256) storage claimedBitMap, uint256 index) internal view returns (bool) {\n        uint256 claimedWordIndex = index / 256;\n        uint256 claimedBitIndex = index % 256;\n        uint256 claimedWord = claimedBitMap[claimedWordIndex];\n        uint256 mask = (1 << claimedBitIndex);\n        return claimedWord & mask == mask;\n    }\n\n    /**\n     * @notice Marks an index in a claimedBitMap as claimed.\n     * @param claimedBitMap a simple uint256 mapping in storage used as a bitmap.\n     * @param index the index to mark in the bitmap.\n     */\n    function setClaimed(mapping(uint256 => uint256) storage claimedBitMap, uint256 index) internal {\n        uint256 claimedWordIndex = index / 256;\n        uint256 claimedBitIndex = index % 256;\n        claimedBitMap[claimedWordIndex] = claimedBitMap[claimedWordIndex] | (1 << claimedBitIndex);\n    }\n\n    /**\n     * @notice Tests whether a claim is contained within a 1D claimedBitMap mapping.\n     * @param claimedBitMap a simple uint256 value, encoding a 1D bitmap.\n     * @param index the index to check in the bitmap. Uint8 type enforces that index can't be > 255.\n     * @return bool indicating if the index within the claimedBitMap has been marked as claimed.\n     */\n    function isClaimed1D(uint256 claimedBitMap, uint8 index) internal pure returns (bool) {\n        uint256 mask = (1 << index);\n        return claimedBitMap & mask == mask;\n    }\n\n    /**\n     * @notice Marks an index in a claimedBitMap as claimed.\n     * @param claimedBitMap a simple uint256 mapping in storage used as a bitmap. Uint8 type enforces that index\n     * can't be > 255.\n     * @param index the index to mark in the bitmap.\n     * @return uint256 representing the modified input claimedBitMap with the index set to true.\n     */\n    function setClaimed1D(uint256 claimedBitMap, uint8 index) internal pure returns (uint256) {\n        return claimedBitMap | (1 << index);\n    }\n}\n"},"contracts/SpokePool.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\nimport \"./MerkleLib.sol\";\nimport \"./external/interfaces/WETH9Interface.sol\";\nimport \"./interfaces/SpokePoolInterface.sol\";\nimport \"./interfaces/V3SpokePoolInterface.sol\";\nimport \"./upgradeable/MultiCallerUpgradeable.sol\";\nimport \"./upgradeable/EIP712CrossChainUpgradeable.sol\";\nimport \"./upgradeable/AddressLibUpgradeable.sol\";\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SignedMath.sol\";\n\n// This interface is expected to be implemented by any contract that expects to receive messages from the SpokePool.\ninterface AcrossMessageHandler {\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function handleAcrossMessage(\n        address tokenSent,\n        uint256 amount,\n        bool fillCompleted,\n        address relayer,\n        bytes memory message\n    ) external;\n\n    // New function interface to be used with V3 functions since fillCompleted no longer has any\n    // meaning now that partial fills are impossible.\n    function handleV3AcrossMessage(\n        address tokenSent,\n        uint256 amount,\n        address relayer,\n        bytes memory message\n    ) external;\n}\n\n/**\n * @title SpokePool\n * @notice Base contract deployed on source and destination chains enabling depositors to transfer assets from source to\n * destination. Deposit orders are fulfilled by off-chain relayers who also interact with this contract. Deposited\n * tokens are locked on the source chain and relayers send the recipient the desired token currency and amount\n * on the destination chain. Locked source chain tokens are later sent over the canonical token bridge to L1 HubPool.\n * Relayers are refunded with destination tokens out of this contract after another off-chain actor, a \"data worker\",\n * submits a proof that the relayer correctly submitted a relay on this SpokePool.\n * @custom:security-contact bugs@across.to\n */\nabstract contract SpokePool is\n    V3SpokePoolInterface,\n    SpokePoolInterface,\n    UUPSUpgradeable,\n    ReentrancyGuardUpgradeable,\n    MultiCallerUpgradeable,\n    EIP712CrossChainUpgradeable\n{\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n    using AddressLibUpgradeable for address;\n\n    // Address of the L1 contract that acts as the owner of this SpokePool. This should normally be set to the HubPool\n    // address. The crossDomainAdmin address is unused when the SpokePool is deployed to the same chain as the HubPool.\n    address public crossDomainAdmin;\n\n    // Address of the L1 contract that will send tokens to and receive tokens from this contract to fund relayer\n    // refunds and slow relays.\n    address public hubPool;\n\n    // Note: The following two storage variables prefixed with DEPRECATED used to be variables that could be set by\n    // the cross-domain admin. Admins ended up not changing these in production, so to reduce\n    // gas in deposit/fill functions, we are converting them to private variables to maintain the contract\n    // storage layout and replacing them with immutable or constant variables, because retrieving a constant\n    // value is cheaper than retrieving a storage variable. Please see out the immutable/constant variable section.\n    WETH9Interface private DEPRECATED_wrappedNativeToken;\n    uint32 private DEPRECATED_depositQuoteTimeBuffer;\n\n    // Count of deposits is used to construct a unique deposit identifier for this spoke pool.\n    uint32 public numberOfDeposits;\n\n    // Whether deposits and fills are disabled.\n    bool public pausedFills;\n    bool public pausedDeposits;\n\n    // This contract can store as many root bundles as the HubPool chooses to publish here.\n    RootBundle[] public rootBundles;\n\n    // Origin token to destination token routings can be turned on or off, which can enable or disable deposits.\n    mapping(address => mapping(uint256 => bool)) public enabledDepositRoutes;\n\n    // Each relay is associated with the hash of parameters that uniquely identify the original deposit and a relay\n    // attempt for that deposit. The relay itself is just represented as the amount filled so far. The total amount to\n    // relay, the fees, and the agents are all parameters included in the hash key.\n    mapping(bytes32 => uint256) private DEPRECATED_relayFills;\n\n    // Note: We will likely un-deprecate the fill and deposit counters to implement a better\n    // dynamic LP fee mechanism but for now we'll deprecate it to reduce bytecode\n    // in deposit/fill functions. These counters are designed to implement a fee mechanism that is based on a\n    // canonical history of deposit and fill events and how they update a virtual running balance of liabilities and\n    // assets, which then determines the LP fee charged to relays.\n\n    // This keeps track of the worst-case liabilities due to fills.\n    // It is never reset. Users should only rely on it to determine the worst-case increase in liabilities between\n    // two points. This is used to provide frontrunning protection to ensure the relayer's assumptions about the state\n    // upon which their expected repayments are based will not change before their transaction is mined.\n    mapping(address => uint256) private DEPRECATED_fillCounter;\n\n    // This keeps track of the total running deposits for each token. This allows depositors to protect themselves from\n    // frontrunning that might change their worst-case quote.\n    mapping(address => uint256) private DEPRECATED_depositCounter;\n\n    // This tracks the number of identical refunds that have been requested.\n    // The intention is to allow an off-chain system to know when this could be a duplicate and ensure that the other\n    // requests are known and accounted for.\n    mapping(bytes32 => uint256) private DEPRECATED_refundsRequested;\n\n    // Mapping of V3 relay hashes to fill statuses. Distinguished from relayFills\n    // to eliminate any chance of collision between pre and post V3 relay hashes.\n    mapping(bytes32 => uint256) public fillStatuses;\n\n    /**************************************************************\n     *                CONSTANT/IMMUTABLE VARIABLES                *\n     **************************************************************/\n    // Constant and immutable variables do not take up storage slots and are instead added to the contract bytecode\n    // at compile time. The difference between them is that constant variables must be declared inline, meaning\n    // that they cannot be changed in production without changing the contract code, while immutable variables\n    // can be set in the constructor. Therefore we use the immutable keyword for variables that we might want to be\n    // different for each child contract (one obvious example of this is the wrappedNativeToken) or that we might\n    // want to update in the future like depositQuoteTimeBuffer. Constants are unlikely to ever be changed.\n\n    // Address of wrappedNativeToken contract for this network. If an origin token matches this, then the caller can\n    // optionally instruct this contract to wrap native tokens when depositing (ie ETH->WETH or MATIC->WMATIC).\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    WETH9Interface public immutable wrappedNativeToken;\n\n    // Any deposit quote times greater than or less than this value to the current contract time is blocked. Forces\n    // caller to use an approximately \"current\" realized fee.\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    uint32 public immutable depositQuoteTimeBuffer;\n\n    // The fill deadline can only be set this far into the future from the timestamp of the deposit on this contract.\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    uint32 public immutable fillDeadlineBuffer;\n\n    uint256 public constant MAX_TRANSFER_SIZE = 1e36;\n\n    // Note: this needs to be larger than the max transfer size to ensure that all slow fills are fillable, even if\n    // their fees are negative.\n    // It's important that it isn't too large, however, as it should be multipliable by ~2e18 without overflowing.\n    // 1e40 * 2e18 = 2e58 << 2^255 ~= 5e76\n    /// @custom:audit FOLLOWING VARIABLE TO BE DEPRECATED\n    uint256 public constant SLOW_FILL_MAX_TOKENS_TO_SEND = 1e40;\n\n    // Set max payout adjustment to something\n    /// @custom:audit FOLLOWING VARIABLE TO BE DEPRECATED\n    bytes32 public constant UPDATE_DEPOSIT_DETAILS_HASH =\n        keccak256(\n            \"UpdateDepositDetails(uint32 depositId,uint256 originChainId,int64 updatedRelayerFeePct,address updatedRecipient,bytes updatedMessage)\"\n        );\n\n    bytes32 public constant UPDATE_V3_DEPOSIT_DETAILS_HASH =\n        keccak256(\n            \"UpdateDepositDetails(uint32 depositId,uint256 originChainId,uint256 updatedOutputAmount,address updatedRecipient,bytes updatedMessage)\"\n        );\n\n    // Default chain Id used to signify that no repayment is requested, for example when executing a slow fill.\n    uint256 public constant EMPTY_REPAYMENT_CHAIN_ID = 0;\n    // Default address used to signify that no relayer should be credited with a refund, for example\n    // when executing a slow fill.\n    address public constant EMPTY_RELAYER = address(0);\n    // This is the magic value that signals to the off-chain validator\n    // that this deposit can never expire. A deposit with this fill deadline should always be eligible for a\n    // slow fill, meaning that its output token and input token must be \"equivalent\". Therefore, this value is only\n    // used as a fillDeadline in deposit(), a soon to be deprecated function that also hardcodes outputToken to\n    // the zero address, which forces the off-chain validator to replace the output token with the equivalent\n    // token for the input token. By using this magic value, off-chain validators do not have to keep\n    // this event in their lookback window when querying for expired deposts.\n    uint32 public constant INFINITE_FILL_DEADLINE = type(uint32).max;\n    /****************************************\n     *                EVENTS                *\n     ****************************************/\n    event SetXDomainAdmin(address indexed newAdmin);\n    event SetHubPool(address indexed newHubPool);\n    event EnabledDepositRoute(address indexed originToken, uint256 indexed destinationChainId, bool enabled);\n    /// @custom:audit FOLLOWING EVENT TO BE DEPRECATED\n    event FundsDeposited(\n        uint256 amount,\n        uint256 originChainId,\n        uint256 indexed destinationChainId,\n        int64 relayerFeePct,\n        uint32 indexed depositId,\n        uint32 quoteTimestamp,\n        address originToken,\n        address recipient,\n        address indexed depositor,\n        bytes message\n    );\n    /// @custom:audit FOLLOWING EVENT TO BE DEPRECATED\n    event RequestedSpeedUpDeposit(\n        int64 newRelayerFeePct,\n        uint32 indexed depositId,\n        address indexed depositor,\n        address updatedRecipient,\n        bytes updatedMessage,\n        bytes depositorSignature\n    );\n    /// @custom:audit FOLLOWING EVENT TO BE DEPRECATED\n    event FilledRelay(\n        uint256 amount,\n        uint256 totalFilledAmount,\n        uint256 fillAmount,\n        uint256 repaymentChainId,\n        uint256 indexed originChainId,\n        uint256 destinationChainId,\n        int64 relayerFeePct,\n        int64 realizedLpFeePct,\n        uint32 indexed depositId,\n        address destinationToken,\n        address relayer,\n        address indexed depositor,\n        address recipient,\n        bytes message,\n        RelayExecutionInfo updatableRelayData\n    );\n    event RelayedRootBundle(\n        uint32 indexed rootBundleId,\n        bytes32 indexed relayerRefundRoot,\n        bytes32 indexed slowRelayRoot\n    );\n    event ExecutedRelayerRefundRoot(\n        uint256 amountToReturn,\n        uint256 indexed chainId,\n        uint256[] refundAmounts,\n        uint32 indexed rootBundleId,\n        uint32 indexed leafId,\n        address l2TokenAddress,\n        address[] refundAddresses,\n        address caller\n    );\n    event TokensBridged(\n        uint256 amountToReturn,\n        uint256 indexed chainId,\n        uint32 indexed leafId,\n        address indexed l2TokenAddress,\n        address caller\n    );\n    event EmergencyDeleteRootBundle(uint256 indexed rootBundleId);\n    event PausedDeposits(bool isPaused);\n    event PausedFills(bool isPaused);\n\n    /**\n     * @notice Represents data used to fill a deposit.\n     * @param relay Relay containing original data linked to deposit. Contains fields that can be\n     * overridden by other parameters in the RelayExecution struct.\n     * @param relayHash Hash of the relay data.\n     * @param updatedRelayerFeePct Actual relayer fee pct to use for this relay.\n     * @param updatedRecipient Actual recipient to use for this relay.\n     * @param updatedMessage Actual message to use for this relay.\n     * @param repaymentChainId Chain ID of the network that the relayer will receive refunds on.\n     * @param maxTokensToSend Max number of tokens to pull from relayer.\n     * @param maxCount Max count to protect the relayer from frontrunning.\n     * @param slowFill Whether this is a slow fill.\n     * @param payoutAdjustmentPct Adjustment to the payout amount. Can be used to increase or decrease the payout to\n     * allow for rewards or penalties. Used in slow fills.\n     */\n    /// @custom:audit FOLLOWING STRUCT TO BE DEPRECATED\n    struct RelayExecution {\n        RelayData relay;\n        bytes32 relayHash;\n        int64 updatedRelayerFeePct;\n        address updatedRecipient;\n        bytes updatedMessage;\n        uint256 repaymentChainId;\n        uint256 maxTokensToSend;\n        uint256 maxCount;\n        bool slowFill;\n        int256 payoutAdjustmentPct;\n    }\n\n    /**\n     * @notice Packs together information to include in FilledRelay event.\n     * @dev This struct is emitted as opposed to its constituent parameters due to the limit on number of\n     * parameters in an event.\n     * @param recipient Recipient of the relayed funds.\n     * @param message Message included in the relay.\n     * @param relayerFeePct Relayer fee pct used for this relay.\n     * @param isSlowRelay Whether this is a slow relay.\n     * @param payoutAdjustmentPct Adjustment to the payout amount.\n     */\n    /// @custom:audit FOLLOWING STRUCT TO BE DEPRECATED\n    struct RelayExecutionInfo {\n        address recipient;\n        bytes message;\n        int64 relayerFeePct;\n        bool isSlowRelay;\n        int256 payoutAdjustmentPct;\n    }\n\n    /**\n     * @notice Construct the SpokePool. Normally, logic contracts used in upgradeable proxies shouldn't\n     * have constructors since the following code will be executed within the logic contract's state, not the\n     * proxy contract's state. However, if we restrict the constructor to setting only immutable variables, then\n     * we are safe because immutable variables are included in the logic contract's bytecode rather than its storage.\n     * @dev Do not leave an implementation contract uninitialized. An uninitialized implementation contract can be\n     * taken over by an attacker, which may impact the proxy. To prevent the implementation contract from being\n     * used, you should invoke the _disableInitializers function in the constructor to automatically lock it when\n     * it is deployed:\n     * @param _wrappedNativeTokenAddress wrappedNativeToken address for this network to set.\n     * @param _depositQuoteTimeBuffer depositQuoteTimeBuffer to set. Quote timestamps can't be set more than this amount\n     * into the past from the block time of the deposit.\n     * @param _fillDeadlineBuffer fillDeadlineBuffer to set. Fill deadlines can't be set more than this amount\n     * into the future from the block time of the deposit.\n     */\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor(\n        address _wrappedNativeTokenAddress,\n        uint32 _depositQuoteTimeBuffer,\n        uint32 _fillDeadlineBuffer\n    ) {\n        wrappedNativeToken = WETH9Interface(_wrappedNativeTokenAddress);\n        depositQuoteTimeBuffer = _depositQuoteTimeBuffer;\n        fillDeadlineBuffer = _fillDeadlineBuffer;\n        _disableInitializers();\n    }\n\n    /**\n     * @notice Construct the base SpokePool.\n     * @param _initialDepositId Starting deposit ID. Set to 0 unless this is a re-deployment in order to mitigate\n     * relay hash collisions.\n     * @param _crossDomainAdmin Cross domain admin to set. Can be changed by admin.\n     * @param _hubPool Hub pool address to set. Can be changed by admin.\n     */\n    function __SpokePool_init(\n        uint32 _initialDepositId,\n        address _crossDomainAdmin,\n        address _hubPool\n    ) public onlyInitializing {\n        numberOfDeposits = _initialDepositId;\n        __EIP712_init(\"ACROSS-V2\", \"1.0.0\");\n        __UUPSUpgradeable_init();\n        __ReentrancyGuard_init();\n        _setCrossDomainAdmin(_crossDomainAdmin);\n        _setHubPool(_hubPool);\n    }\n\n    /****************************************\n     *               MODIFIERS              *\n     ****************************************/\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     * @dev This should be set to cross domain admin for specific SpokePool.\n     */\n    modifier onlyAdmin() {\n        _requireAdminSender();\n        _;\n    }\n\n    modifier unpausedDeposits() {\n        require(!pausedDeposits, \"Paused deposits\");\n        _;\n    }\n\n    modifier unpausedFills() {\n        require(!pausedFills, \"Paused fills\");\n        _;\n    }\n\n    /**************************************\n     *          ADMIN FUNCTIONS           *\n     **************************************/\n\n    // Allows cross domain admin to upgrade UUPS proxy implementation.\n    function _authorizeUpgrade(address newImplementation) internal override onlyAdmin {}\n\n    /**\n     * @notice Pauses deposit-related functions. This is intended to be used if this contract is deprecated or when\n     * something goes awry.\n     * @dev Affects `deposit()` but not `speedUpDeposit()`, so that existing deposits can be sped up and still\n     * relayed.\n     * @param pause true if the call is meant to pause the system, false if the call is meant to unpause it.\n     */\n    function pauseDeposits(bool pause) public override onlyAdmin nonReentrant {\n        pausedDeposits = pause;\n        emit PausedDeposits(pause);\n    }\n\n    /**\n     * @notice Pauses fill-related functions. This is intended to be used if this contract is deprecated or when\n     * something goes awry.\n     * @dev Affects fillRelayWithUpdatedDeposit() and fillRelay().\n     * @param pause true if the call is meant to pause the system, false if the call is meant to unpause it.\n     */\n    function pauseFills(bool pause) public override onlyAdmin nonReentrant {\n        pausedFills = pause;\n        emit PausedFills(pause);\n    }\n\n    /**\n     * @notice Change cross domain admin address. Callable by admin only.\n     * @param newCrossDomainAdmin New cross domain admin.\n     */\n    function setCrossDomainAdmin(address newCrossDomainAdmin) public override onlyAdmin nonReentrant {\n        _setCrossDomainAdmin(newCrossDomainAdmin);\n    }\n\n    /**\n     * @notice Change L1 hub pool address. Callable by admin only.\n     * @param newHubPool New hub pool.\n     */\n    function setHubPool(address newHubPool) public override onlyAdmin nonReentrant {\n        _setHubPool(newHubPool);\n    }\n\n    /**\n     * @notice Enable/Disable an origin token => destination chain ID route for deposits. Callable by admin only.\n     * @param originToken Token that depositor can deposit to this contract.\n     * @param destinationChainId Chain ID for where depositor wants to receive funds.\n     * @param enabled True to enable deposits, False otherwise.\n     */\n    function setEnableRoute(\n        address originToken,\n        uint256 destinationChainId,\n        bool enabled\n    ) public override onlyAdmin nonReentrant {\n        enabledDepositRoutes[originToken][destinationChainId] = enabled;\n        emit EnabledDepositRoute(originToken, destinationChainId, enabled);\n    }\n\n    /**\n     * @notice This method stores a new root bundle in this contract that can be executed to refund relayers, fulfill\n     * slow relays, and send funds back to the HubPool on L1. This method can only be called by the admin and is\n     * designed to be called as part of a cross-chain message from the HubPool's executeRootBundle method.\n     * @param relayerRefundRoot Merkle root containing relayer refund leaves that can be individually executed via\n     * executeRelayerRefundLeaf().\n     * @param slowRelayRoot Merkle root containing slow relay fulfillment leaves that can be individually executed via\n     * executeSlowRelayLeaf().\n     */\n    function relayRootBundle(bytes32 relayerRefundRoot, bytes32 slowRelayRoot) public override onlyAdmin nonReentrant {\n        uint32 rootBundleId = uint32(rootBundles.length);\n        RootBundle storage rootBundle = rootBundles.push();\n        rootBundle.relayerRefundRoot = relayerRefundRoot;\n        rootBundle.slowRelayRoot = slowRelayRoot;\n        emit RelayedRootBundle(rootBundleId, relayerRefundRoot, slowRelayRoot);\n    }\n\n    /**\n     * @notice This method is intended to only be used in emergencies where a bad root bundle has reached the\n     * SpokePool.\n     * @param rootBundleId Index of the root bundle that needs to be deleted. Note: this is intentionally a uint256\n     * to ensure that a small input range doesn't limit which indices this method is able to reach.\n     */\n    function emergencyDeleteRootBundle(uint256 rootBundleId) public override onlyAdmin nonReentrant {\n        // Deleting a struct containing a mapping does not delete the mapping in Solidity, therefore the bitmap's\n        // data will still remain potentially leading to vulnerabilities down the line. The way around this would\n        // be to iterate through every key in the mapping and resetting the value to 0, but this seems expensive and\n        // would require a new list in storage to keep track of keys.\n        //slither-disable-next-line mapping-deletion\n        delete rootBundles[rootBundleId];\n        emit EmergencyDeleteRootBundle(rootBundleId);\n    }\n\n    /**************************************\n     *         DEPOSITOR FUNCTIONS        *\n     **************************************/\n\n    /**\n     * @notice Called by user to bridge funds from origin to destination chain. Depositor will effectively lock\n     * tokens in this contract and receive a destination token on the destination chain. The origin => destination\n     * token mapping is stored on the L1 HubPool.\n     * @notice The caller must first approve this contract to spend amount of originToken.\n     * @notice The originToken => destinationChainId must be enabled.\n     * @notice This method is payable because the caller is able to deposit native token if the originToken is\n     * wrappedNativeToken and this function will handle wrapping the native token to wrappedNativeToken.\n     * @dev Produces a V3FundsDeposited event with an infinite expiry, meaning that this deposit can never expire.\n     * Moreover, the event's outputToken is set to 0x0 meaning that this deposit can always be slow filled.\n     * @param recipient Address to receive funds at on destination chain.\n     * @param originToken Token to lock into this contract to initiate deposit.\n     * @param amount Amount of tokens to deposit. Will be amount of tokens to receive less fees.\n     * @param destinationChainId Denotes network where user will receive funds from SpokePool by a relayer.\n     * @param relayerFeePct % of deposit amount taken out to incentivize a fast relayer.\n     * @param quoteTimestamp Timestamp used by relayers to compute this deposit's realizedLPFeePct which is paid\n     * to LP pool on HubPool.\n     * @param message Arbitrary data that can be used to pass additional information to the recipient along with the tokens.\n     * Note: this is intended to be used to pass along instructions for how a contract should use or allocate the tokens.\n     */\n    function deposit(\n        address recipient,\n        address originToken,\n        uint256 amount,\n        uint256 destinationChainId,\n        int64 relayerFeePct,\n        uint32 quoteTimestamp,\n        bytes memory message,\n        uint256 // maxCount. Deprecated.\n    ) public payable override nonReentrant unpausedDeposits {\n        _deposit(\n            msg.sender,\n            recipient,\n            originToken,\n            amount,\n            destinationChainId,\n            relayerFeePct,\n            quoteTimestamp,\n            message\n        );\n    }\n\n    /**\n     * @notice The only difference between depositFor and deposit is that the depositor address stored\n     * in the relay hash can be overridden by the caller. This means that the passed in depositor\n     * can speed up the deposit, which is useful if the deposit is taken from the end user to a middle layer\n     * contract, like an aggregator or the SpokePoolVerifier, before calling deposit on this contract.\n     * @notice The caller must first approve this contract to spend amount of originToken.\n     * @notice The originToken => destinationChainId must be enabled.\n     * @notice This method is payable because the caller is able to deposit native token if the originToken is\n     * wrappedNativeToken and this function will handle wrapping the native token to wrappedNativeToken.\n     * @param depositor Address who is credited for depositing funds on origin chain and can speed up the deposit.\n     * @param recipient Address to receive funds at on destination chain.\n     * @param originToken Token to lock into this contract to initiate deposit.\n     * @param amount Amount of tokens to deposit. Will be amount of tokens to receive less fees.\n     * @param destinationChainId Denotes network where user will receive funds from SpokePool by a relayer.\n     * @param relayerFeePct % of deposit amount taken out to incentivize a fast relayer.\n     * @param quoteTimestamp Timestamp used by relayers to compute this deposit's realizedLPFeePct which is paid\n     * to LP pool on HubPool.\n     * @param message Arbitrary data that can be used to pass additional information to the recipient along with the tokens.\n     * Note: this is intended to be used to pass along instructions for how a contract should use or allocate the tokens.\n     */\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function depositFor(\n        address depositor,\n        address recipient,\n        address originToken,\n        uint256 amount,\n        uint256 destinationChainId,\n        int64 relayerFeePct,\n        uint32 quoteTimestamp,\n        bytes memory message,\n        uint256 // maxCount. Deprecated.\n    ) public payable nonReentrant unpausedDeposits {\n        _deposit(depositor, recipient, originToken, amount, destinationChainId, relayerFeePct, quoteTimestamp, message);\n    }\n\n    /**\n     * @notice This is a simple wrapper for deposit() that sets the quoteTimestamp to the current SpokePool timestamp.\n     * @notice This function is intended for multisig depositors who can accept some LP fee uncertainty in order to lift\n     * the quoteTimestamp buffer constraint.\n     * @dev Re-orgs may produce invalid fills if the quoteTimestamp moves across a change in HubPool utilisation.\n     * @dev The existing function modifiers are already enforced by deposit(), so no additional modifiers are imposed.\n     * @param recipient Address to receive funds at on destination chain.\n     * @param originToken Token to lock into this contract to initiate deposit.\n     * @param amount Amount of tokens to deposit. Will be amount of tokens to receive less fees.\n     * @param destinationChainId Denotes network where user will receive funds from SpokePool by a relayer.\n     * @param relayerFeePct % of deposit amount taken out to incentivize a fast relayer.\n     * @param message Arbitrary data that can be used to pass additional information to the recipient along with the tokens.\n     * Note: this is intended to be used to pass along instructions for how a contract should use or allocate the tokens.\n     * @param maxCount used to protect the depositor from frontrunning to guarantee their quote remains valid.\n     */\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function depositNow(\n        address recipient,\n        address originToken,\n        uint256 amount,\n        uint256 destinationChainId,\n        int64 relayerFeePct,\n        bytes memory message,\n        uint256 maxCount\n    ) public payable {\n        deposit(\n            recipient,\n            originToken,\n            amount,\n            destinationChainId,\n            relayerFeePct,\n            uint32(getCurrentTime()),\n            message,\n            maxCount\n        );\n    }\n\n    /**\n     * @notice This is a simple wrapper for depositFor() that sets the quoteTimestamp to the current SpokePool timestamp.\n     * @notice This function is intended for multisig depositors who can accept some LP fee uncertainty in order to lift\n     * the quoteTimestamp buffer constraint.\n     * @dev Re-orgs may produce invalid fills if the quoteTimestamp moves across a change in HubPool utilisation.\n     * @dev The existing function modifiers are already enforced by depositFor(), so no additional modifiers are imposed.\n     * @param depositor Address who is credited for depositing funds on origin chain and can speed up the deposit.\n     * @param recipient Address to receive funds at on destination chain.\n     * @param originToken Token to lock into this contract to initiate deposit.\n     * @param amount Amount of tokens to deposit. Will be amount of tokens to receive less fees.\n     * @param destinationChainId Denotes network where user will receive funds from SpokePool by a relayer.\n     * @param relayerFeePct % of deposit amount taken out to incentivize a fast relayer.\n     * @param message Arbitrary data that can be used to pass additional information to the recipient along with the tokens.\n     * Note: this is intended to be used to pass along instructions for how a contract should use or allocate the tokens.\n     * @param maxCount used to protect the depositor from frontrunning to guarantee their quote remains valid.\n     */\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function depositForNow(\n        address depositor,\n        address recipient,\n        address originToken,\n        uint256 amount,\n        uint256 destinationChainId,\n        int64 relayerFeePct,\n        bytes memory message,\n        uint256 maxCount\n    ) public payable {\n        depositFor(\n            depositor,\n            recipient,\n            originToken,\n            amount,\n            destinationChainId,\n            relayerFeePct,\n            uint32(getCurrentTime()),\n            message,\n            maxCount\n        );\n    }\n\n    /**\n     * @notice Convenience method that depositor can use to signal to relayer to use updated fee.\n     * @notice Relayer should only use events emitted by this function to submit fills with updated fees, otherwise they\n     * risk their fills getting disputed for being invalid, for example if the depositor never actually signed the\n     * update fee message.\n     * @notice This function will revert if the depositor did not sign a message containing the updated fee for the\n     * deposit ID stored in this contract. If the deposit ID is for another contract, or the depositor address is\n     * incorrect, or the updated fee is incorrect, then the signature will not match and this function will revert.\n     * @notice This function is not subject to a deposit pause on the off chance that deposits sent before all deposits\n     * are paused have very low fees and the user wants to entice a relayer to fill them with a higher fee.\n     * @param depositor Signer of the update fee message who originally submitted the deposit. If the deposit doesn't\n     * exist, then the relayer will not be able to fill any relay, so the caller should validate that the depositor\n     * did in fact submit a relay.\n     * @param updatedRelayerFeePct New relayer fee that relayers can use.\n     * @param depositId Deposit to update fee for that originated in this contract.\n     * @param updatedRecipient New recipient address that should receive the tokens.\n     * @param updatedMessage New message that should be provided to the recipient.\n     * @param depositorSignature Signed message containing the depositor address, this contract chain ID, the updated\n     * relayer fee %, and the deposit ID. This signature is produced by signing a hash of data according to the\n     * EIP-712 standard. See more in the _verifyUpdateRelayerFeeMessage() comments.\n     */\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function speedUpDeposit(\n        address depositor,\n        int64 updatedRelayerFeePct,\n        uint32 depositId,\n        address updatedRecipient,\n        bytes memory updatedMessage,\n        bytes memory depositorSignature\n    ) public override nonReentrant {\n        require(SignedMath.abs(updatedRelayerFeePct) < 0.5e18, \"Invalid relayer fee\");\n\n        _verifyUpdateDepositMessage(\n            depositor,\n            depositId,\n            chainId(),\n            updatedRelayerFeePct,\n            updatedRecipient,\n            updatedMessage,\n            depositorSignature\n        );\n\n        // Assuming the above checks passed, a relayer can take the signature and the updated relayer fee information\n        // from the following event to submit a fill with an updated fee %.\n        emit RequestedSpeedUpDeposit(\n            updatedRelayerFeePct,\n            depositId,\n            depositor,\n            updatedRecipient,\n            updatedMessage,\n            depositorSignature\n        );\n    }\n\n    /********************************************\n     *         V3 DEPOSITOR FUNCTIONS          *\n     ********************************************/\n\n    /**\n     * @notice Request to bridge input token cross chain to a destination chain and receive a specified amount\n     * of output tokens. The fee paid to relayers and the system should be captured in the spread between output\n     * amount and input amount when adjusted to be denominated in the input token. A relayer on the destination\n     * chain will send outputAmount of outputTokens to the recipient and receive inputTokens on a repayment\n     * chain of their choice. Therefore, the fee should account for destination fee transaction costs,\n     * the relayer's opportunity cost of capital while they wait to be refunded following an optimistic challenge\n     * window in the HubPool, and the system fee that they'll be charged.\n     * @dev On the destination chain, the hash of the deposit data will be used to uniquely identify this deposit, so\n     * modifying any params in it will result in a different hash and a different deposit. The hash will comprise\n     * all parameters to this function along with this chain's chainId(). Relayers are only refunded for filling\n     * deposits with deposit hashes that map exactly to the one emitted by this contract.\n     * @param depositor The account credited with the deposit who can request to \"speed up\" this deposit by modifying\n     * the output amount, recipient, and message.\n     * @param recipient The account receiving funds on the destination chain. Can be an EOA or a contract. If\n     * the output token is the wrapped native token for the chain, then the recipient will receive native token if\n     * an EOA or wrapped native token if a contract.\n     * @param inputToken The token pulled from the caller's account and locked into this contract to\n     * initiate the deposit. The equivalent of this token on the relayer's repayment chain of choice will be sent\n     * as a refund. If this is equal to the wrapped native token then the caller can optionally pass in native token as\n     * msg.value, as long as msg.value = inputTokenAmount.\n     * @param outputToken The token that the relayer will send to the recipient on the destination chain. Must be an\n     * ERC20.\n     * @param inputAmount The amount of input tokens to pull from the caller's account and lock into this contract.\n     * This amount will be sent to the relayer on their repayment chain of choice as a refund following an optimistic\n     * challenge window in the HubPool, less a system fee.\n     * @param outputAmount The amount of output tokens that the relayer will send to the recipient on the destination.\n     * @param destinationChainId The destination chain identifier. Must be enabled along with the input token\n     * as a valid deposit route from this spoke pool or this transaction will revert.\n     * @param exclusiveRelayer The relayer that will be exclusively allowed to fill this deposit before the\n     * exclusivity deadline timestamp. This must be a valid, non-zero address if the exclusivity deadline is\n     * greater than the current block.timestamp. If the exclusivity deadline is < currentTime, then this must be\n     * address(0), and vice versa if this is address(0).\n     * @param quoteTimestamp The HubPool timestamp that is used to determine the system fee paid by the depositor.\n     *  This must be set to some time between [currentTime - depositQuoteTimeBuffer, currentTime]\n     * where currentTime is block.timestamp on this chain or this transaction will revert.\n     * @param fillDeadline The deadline for the relayer to fill the deposit. After this destination chain timestamp,\n     * the fill will revert on the destination chain. Must be set between [currentTime, currentTime + fillDeadlineBuffer]\n     * where currentTime is block.timestamp on this chain or this transaction will revert.\n     * @param exclusivityDeadline The deadline for the exclusive relayer to fill the deposit. After this\n     * destination chain timestamp, anyone can fill this deposit on the destination chain. If exclusiveRelayer is set\n     * to address(0), then this also must be set to 0, (and vice versa), otherwise this must be set >= current time.\n     * @param message The message to send to the recipient on the destination chain if the recipient is a contract.\n     * If the message is not empty, the recipient contract must implement handleV3AcrossMessage() or the fill will revert.\n     */\n    function depositV3(\n        address depositor,\n        address recipient,\n        address inputToken,\n        address outputToken,\n        uint256 inputAmount,\n        uint256 outputAmount,\n        uint256 destinationChainId,\n        address exclusiveRelayer,\n        uint32 quoteTimestamp,\n        uint32 fillDeadline,\n        uint32 exclusivityDeadline,\n        bytes calldata message\n    ) public payable override nonReentrant unpausedDeposits {\n        // Check that deposit route is enabled for the input token. There are no checks required for the output token\n        // which is pulled from the relayer at fill time and passed through this contract atomically to the recipient.\n        if (!enabledDepositRoutes[inputToken][destinationChainId]) revert DisabledRoute();\n\n        // Require that quoteTimestamp has a maximum age so that depositors pay an LP fee based on recent HubPool usage.\n        // It is assumed that cross-chain timestamps are normally loosely in-sync, but clock drift can occur. If the\n        // SpokePool time stalls or lags significantly, it is still possible to make deposits by setting quoteTimestamp\n        // within the configured buffer. The owner should pause deposits/fills if this is undesirable.\n        // This will underflow if quoteTimestamp is more than depositQuoteTimeBuffer;\n        // this is safe but will throw an unintuitive error.\n\n        // slither-disable-next-line timestamp\n        uint256 currentTime = getCurrentTime();\n        if (currentTime - quoteTimestamp > depositQuoteTimeBuffer) revert InvalidQuoteTimestamp();\n\n        // fillDeadline is relative to the destination chain.\n        // Don’t allow fillDeadline to be more than several bundles into the future.\n        // This limits the maximum required lookback for dataworker and relayer instances.\n        // Also, don't allow fillDeadline to be in the past. This poses a potential UX issue if the destination\n        // chain time keeping and this chain's time keeping are out of sync but is not really a practical hurdle\n        // unless they are significantly out of sync or the depositor is setting very short fill deadlines. This latter\n        // situation won't be a problem for honest users.\n        if (fillDeadline < currentTime || fillDeadline > currentTime + fillDeadlineBuffer) revert InvalidFillDeadline();\n\n        // As a safety measure, prevent caller from inadvertently locking funds during exclusivity period\n        //  by forcing them to specify an exclusive relayer if the exclusivity period\n        // is in the future. If this deadline is 0, then the exclusive relayer must also be address(0).\n        // @dev Checks if either are > 0 by bitwise or-ing.\n        if (uint256(uint160(exclusiveRelayer)) | exclusivityDeadline != 0) {\n            // Now that we know one is nonzero, we need to perform checks on each.\n            // Check that exclusive relayer is nonzero.\n            if (exclusiveRelayer == address(0)) revert InvalidExclusiveRelayer();\n\n            // Check that deadline is in the future.\n            if (exclusivityDeadline < currentTime) revert InvalidExclusivityDeadline();\n        }\n\n        // No need to sanity check exclusivityDeadline because if its bigger than fillDeadline, then\n        // there the full deadline is exclusive, and if its too small, then there is no exclusivity period.\n\n        // If the address of the origin token is a wrappedNativeToken contract and there is a msg.value with the\n        // transaction then the user is sending the native token. In this case, the native token should be\n        // wrapped.\n        if (inputToken == address(wrappedNativeToken) && msg.value > 0) {\n            if (msg.value != inputAmount) revert MsgValueDoesNotMatchInputAmount();\n            wrappedNativeToken.deposit{ value: msg.value }();\n            // Else, it is a normal ERC20. In this case pull the token from the caller as per normal.\n            // Note: this includes the case where the L2 caller has WETH (already wrapped ETH) and wants to bridge them.\n            // In this case the msg.value will be set to 0, indicating a \"normal\" ERC20 bridging action.\n        } else {\n            // msg.value should be 0 if input token isn't the wrapped native token.\n            if (msg.value != 0) revert MsgValueDoesNotMatchInputAmount();\n            IERC20Upgradeable(inputToken).safeTransferFrom(msg.sender, address(this), inputAmount);\n        }\n\n        emit V3FundsDeposited(\n            inputToken,\n            outputToken,\n            inputAmount,\n            outputAmount,\n            destinationChainId,\n            // Increment count of deposits so that deposit ID for this spoke pool is unique.\n            numberOfDeposits++,\n            quoteTimestamp,\n            fillDeadline,\n            exclusivityDeadline,\n            depositor,\n            recipient,\n            exclusiveRelayer,\n            message\n        );\n    }\n\n    /**\n     * @notice Depositor can use this function to signal to relayer to use updated output amount, recipient,\n     * and/or message.\n     * @dev the depositor and depositId must match the params in a V3FundsDeposited event that the depositor\n     * wants to speed up. The relayer has the option but not the obligation to use this updated information\n     * when filling the deposit via fillV3RelayWithUpdatedDeposit().\n     * @param depositor Depositor that must sign the depositorSignature and was the original depositor.\n     * @param depositId Deposit ID to speed up.\n     * @param updatedOutputAmount New output amount to use for this deposit. Should be lower than previous value\n     * otherwise relayer has no incentive to use this updated value.\n     * @param updatedRecipient New recipient to use for this deposit. Can be modified if the recipient is a contract\n     * that expects to receive a message from the relay and for some reason needs to be modified.\n     * @param updatedMessage New message to use for this deposit. Can be modified if the recipient is a contract\n     * that expects to receive a message from the relay and for some reason needs to be modified.\n     * @param depositorSignature Signed EIP712 hashstruct containing the deposit ID. Should be signed by the depositor\n     * account. If depositor is a contract, then should implement EIP1271 to sign as a contract. See\n     * _verifyUpdateV3DepositMessage() for more details about how this signature should be constructed.\n     */\n    function speedUpV3Deposit(\n        address depositor,\n        uint32 depositId,\n        uint256 updatedOutputAmount,\n        address updatedRecipient,\n        bytes calldata updatedMessage,\n        bytes calldata depositorSignature\n    ) public override nonReentrant {\n        _verifyUpdateV3DepositMessage(\n            depositor,\n            depositId,\n            chainId(),\n            updatedOutputAmount,\n            updatedRecipient,\n            updatedMessage,\n            depositorSignature\n        );\n\n        // Assuming the above checks passed, a relayer can take the signature and the updated deposit information\n        // from the following event to submit a fill with updated relay data.\n        emit RequestedSpeedUpV3Deposit(\n            updatedOutputAmount,\n            depositId,\n            depositor,\n            updatedRecipient,\n            updatedMessage,\n            depositorSignature\n        );\n    }\n\n    /**************************************\n     *         RELAYER FUNCTIONS          *\n     **************************************/\n\n    /**\n    /**\n     * @notice Called by relayer to fulfill part of a deposit by sending destination tokens to the recipient.\n     * Relayer is expected to pass in unique identifying information for deposit that they want to fulfill, and this\n     * relay submission will be validated by off-chain data workers who can dispute this relay if any part is invalid.\n     * If the relay is valid, then the relayer will be refunded on their desired repayment chain. If relay is invalid,\n     * then relayer will not receive any refund.\n     * @notice All of the deposit data can be found via on-chain events from the origin SpokePool, except for the\n     * realizedLpFeePct which is a function of the HubPool's utilization at the deposit quote time. This fee %\n     * is deterministic based on the quote time, so the relayer should just compute it using the canonical algorithm\n     * as described in a UMIP linked to the HubPool's identifier.\n     * @param depositor Depositor on origin chain who set this chain as the destination chain.\n     * @param recipient Specified recipient on this chain.\n     * @param destinationToken Token to send to recipient. Should be mapped to the origin token, origin chain ID\n     * and this chain ID via a mapping on the HubPool.\n     * @param amount Full size of the deposit.\n     * @param maxTokensToSend Max amount of tokens to send recipient. If higher than amount, then caller will\n     * send recipient the full relay amount.\n     * @param repaymentChainId Chain of SpokePool where relayer wants to be refunded after the challenge window has\n     * passed.\n     * @param originChainId Chain of SpokePool where deposit originated.\n     * @param realizedLpFeePct Fee % based on L1 HubPool utilization at deposit quote time. Deterministic based on\n     * quote time.\n     * @param relayerFeePct Fee % to keep as relayer, specified by depositor.\n     * @param depositId Unique deposit ID on origin spoke pool.\n     * @param message Message to send to recipient along with tokens.\n     * @param maxCount Max count to protect the relayer from frontrunning.\n     */\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function fillRelay(\n        address depositor,\n        address recipient,\n        address destinationToken,\n        uint256 amount,\n        uint256 maxTokensToSend,\n        uint256 repaymentChainId,\n        uint256 originChainId,\n        int64 realizedLpFeePct,\n        int64 relayerFeePct,\n        uint32 depositId,\n        bytes memory message,\n        uint256 maxCount\n    ) public nonReentrant unpausedFills {\n        // Each relay attempt is mapped to the hash of data uniquely identifying it, which includes the deposit data\n        // such as the origin chain ID and the deposit ID, and the data in a relay attempt such as who the recipient\n        // is, which chain and currency the recipient wants to receive funds on, and the relay fees.\n        RelayExecution memory relayExecution = RelayExecution({\n            relay: SpokePoolInterface.RelayData({\n                depositor: depositor,\n                recipient: recipient,\n                destinationToken: destinationToken,\n                amount: amount,\n                realizedLpFeePct: realizedLpFeePct,\n                relayerFeePct: relayerFeePct,\n                depositId: depositId,\n                originChainId: originChainId,\n                destinationChainId: chainId(),\n                message: message\n            }),\n            relayHash: bytes32(0),\n            updatedRelayerFeePct: relayerFeePct,\n            updatedRecipient: recipient,\n            updatedMessage: message,\n            repaymentChainId: repaymentChainId,\n            maxTokensToSend: maxTokensToSend,\n            slowFill: false,\n            payoutAdjustmentPct: 0,\n            maxCount: maxCount\n        });\n        relayExecution.relayHash = _getRelayHash(relayExecution.relay);\n\n        uint256 fillAmountPreFees = _fillRelay(relayExecution);\n        _emitFillRelay(relayExecution, fillAmountPreFees);\n    }\n\n    /**\n     * @notice Called by relayer to execute same logic as calling fillRelay except that relayer is using an updated\n     * relayer fee %. The fee % must have been emitted in a message cryptographically signed by the depositor.\n     * @notice By design, the depositor probably emitted the message with the updated fee by calling speedUpDeposit().\n     * @param depositor Depositor on origin chain who set this chain as the destination chain.\n     * @param recipient Specified recipient on this chain.\n     * @param destinationToken Token to send to recipient. Should be mapped to the origin token, origin chain ID\n     * and this chain ID via a mapping on the HubPool.\n     * @param amount Full size of the deposit.\n     * @param maxTokensToSend Max amount of tokens to send recipient. If higher than amount, then caller will\n     * send recipient the full relay amount.\n     * @param repaymentChainId Chain of SpokePool where relayer wants to be refunded after the challenge window has\n     * passed.\n     * @param originChainId Chain of SpokePool where deposit originated.\n     * @param realizedLpFeePct Fee % based on L1 HubPool utilization at deposit quote time. Deterministic based on\n     * quote time.\n     * @param relayerFeePct Original fee % to keep as relayer set by depositor.\n     * @param updatedRelayerFeePct New fee % to keep as relayer also specified by depositor.\n     * @param depositId Unique deposit ID on origin spoke pool.\n     * @param message Original message that was sent along with this deposit.\n     * @param updatedMessage Modified message that the depositor signed when updating parameters.\n     * @param depositorSignature Signed message containing the depositor address, this contract chain ID, the updated\n     * relayer fee %, and the deposit ID. This signature is produced by signing a hash of data according to the\n     * EIP-712 standard. See more in the _verifyUpdateRelayerFeeMessage() comments.\n     * @param maxCount Max fill count to protect the relayer from frontrunning.\n     */\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function fillRelayWithUpdatedDeposit(\n        address depositor,\n        address recipient,\n        address updatedRecipient,\n        address destinationToken,\n        uint256 amount,\n        uint256 maxTokensToSend,\n        uint256 repaymentChainId,\n        uint256 originChainId,\n        int64 realizedLpFeePct,\n        int64 relayerFeePct,\n        int64 updatedRelayerFeePct,\n        uint32 depositId,\n        bytes memory message,\n        bytes memory updatedMessage,\n        bytes memory depositorSignature,\n        uint256 maxCount\n    ) public override nonReentrant unpausedFills {\n        RelayExecution memory relayExecution = RelayExecution({\n            relay: SpokePoolInterface.RelayData({\n                depositor: depositor,\n                recipient: recipient,\n                destinationToken: destinationToken,\n                amount: amount,\n                realizedLpFeePct: realizedLpFeePct,\n                relayerFeePct: relayerFeePct,\n                depositId: depositId,\n                originChainId: originChainId,\n                destinationChainId: chainId(),\n                message: message\n            }),\n            relayHash: bytes32(0),\n            updatedRelayerFeePct: updatedRelayerFeePct,\n            updatedRecipient: updatedRecipient,\n            updatedMessage: updatedMessage,\n            repaymentChainId: repaymentChainId,\n            maxTokensToSend: maxTokensToSend,\n            slowFill: false,\n            payoutAdjustmentPct: 0,\n            maxCount: maxCount\n        });\n        relayExecution.relayHash = _getRelayHash(relayExecution.relay);\n\n        _verifyUpdateDepositMessage(\n            depositor,\n            depositId,\n            originChainId,\n            updatedRelayerFeePct,\n            updatedRecipient,\n            updatedMessage,\n            depositorSignature\n        );\n        uint256 fillAmountPreFees = _fillRelay(relayExecution);\n        _emitFillRelay(relayExecution, fillAmountPreFees);\n    }\n\n    /******************************************\n     *         V3 RELAYER FUNCTIONS          *\n     ******************************************/\n\n    /**\n     * @notice Fulfill request to bridge cross chain by sending specified output tokens to the recipient.\n     * @dev The fee paid to relayers and the system should be captured in the spread between output\n     * amount and input amount when adjusted to be denominated in the input token. A relayer on the destination\n     * chain will send outputAmount of outputTokens to the recipient and receive inputTokens on a repayment\n     * chain of their choice. Therefore, the fee should account for destination fee transaction costs, the\n     * relayer's opportunity cost of capital while they wait to be refunded following an optimistic challenge\n     * window in the HubPool, and a system fee charged to relayers.\n     * @dev The hash of the relayData will be used to uniquely identify the deposit to fill, so\n     * modifying any params in it will result in a different hash and a different deposit. The hash will comprise\n     * all parameters passed to depositV3() on the origin chain along with that chain's chainId(). This chain's\n     * chainId() must therefore match the destinationChainId passed into depositV3.\n     * Relayers are only refunded for filling deposits with deposit hashes that map exactly to the one emitted by the\n     * origin SpokePool therefore the relayer should not modify any params in relayData.\n     * @dev Cannot fill more than once. Partial fills are not supported.\n     * @param relayData struct containing all the data needed to identify the deposit to be filled. Should match\n     * all the same-named parameters emitted in the origin chain V3FundsDeposited event.\n     * - depositor: The account credited with the deposit who can request to \"speed up\" this deposit by modifying\n     * the output amount, recipient, and message.\n     * - recipient The account receiving funds on this chain. Can be an EOA or a contract. If\n     * the output token is the wrapped native token for the chain, then the recipient will receive native token if\n     * an EOA or wrapped native token if a contract.\n     * - inputToken: The token pulled from the caller's account to initiate the deposit. The equivalent of this\n     * token on the repayment chain will be sent as a refund to the caller.\n     * - outputToken The token that the caller will send to the recipient on the destination chain. Must be an\n     * ERC20.\n     * - inputAmount: This amount, less a system fee, will be sent to the caller on their repayment chain of choice as a refund\n     * following an optimistic challenge window in the HubPool.\n     * - outputAmount: The amount of output tokens that the caller will send to the recipient.\n     * - originChainId: The origin chain identifier.\n     * - exclusiveRelayer The relayer that will be exclusively allowed to fill this deposit before the\n     * exclusivity deadline timestamp.\n     * - fillDeadline The deadline for the caller to fill the deposit. After this timestamp,\n     * the fill will revert on the destination chain.\n     * - exclusivityDeadline: The deadline for the exclusive relayer to fill the deposit. After this\n     * timestamp, anyone can fill this deposit.\n     * - message The message to send to the recipient if the recipient is a contract that implements a\n     * handleV3AcrossMessage() public function\n     * @param repaymentChainId Chain of SpokePool where relayer wants to be refunded after the challenge window has\n     * passed. Will receive inputAmount of the equivalent token to inputToken on the repayment chain.\n     */\n    function fillV3Relay(V3RelayData calldata relayData, uint256 repaymentChainId)\n        public\n        override\n        nonReentrant\n        unpausedFills\n    {\n        // Exclusivity deadline is inclusive and is the latest timestamp that the exclusive relayer has sole right\n        // to fill the relay.\n        if (relayData.exclusivityDeadline >= getCurrentTime() && relayData.exclusiveRelayer != msg.sender) {\n            revert NotExclusiveRelayer();\n        }\n\n        V3RelayExecutionParams memory relayExecution = V3RelayExecutionParams({\n            relay: relayData,\n            relayHash: _getV3RelayHash(relayData),\n            updatedOutputAmount: relayData.outputAmount,\n            updatedRecipient: relayData.recipient,\n            updatedMessage: relayData.message,\n            repaymentChainId: repaymentChainId\n        });\n\n        _fillRelayV3(relayExecution, msg.sender, false);\n    }\n\n    /**\n     * @notice Identical to fillV3Relay except that the relayer wants to use a depositor's updated output amount,\n     * recipient, and/or message. The relayer should only use this function if they can supply a message signed\n     * by the depositor that contains the fill's matching deposit ID along with updated relay parameters.\n     * If the signature can be verified, then this function will emit a FilledV3Event that will be used by\n     * the system for refund verification purposes. In otherwords, this function is an alternative way to fill a\n     * a deposit than fillV3Relay.\n     * @dev Subject to same exclusivity deadline rules as fillV3Relay().\n     * @param relayData struct containing all the data needed to identify the deposit to be filled. See fillV3Relay().\n     * @param repaymentChainId Chain of SpokePool where relayer wants to be refunded after the challenge window has\n     * passed. See fillV3Relay().\n     * @param updatedOutputAmount New output amount to use for this deposit.\n     * @param updatedRecipient New recipient to use for this deposit.\n     * @param updatedMessage New message to use for this deposit.\n     * @param depositorSignature Signed EIP712 hashstruct containing the deposit ID. Should be signed by the depositor\n     * account.\n     */\n    function fillV3RelayWithUpdatedDeposit(\n        V3RelayData calldata relayData,\n        uint256 repaymentChainId,\n        uint256 updatedOutputAmount,\n        address updatedRecipient,\n        bytes calldata updatedMessage,\n        bytes calldata depositorSignature\n    ) public override nonReentrant unpausedFills {\n        // Exclusivity deadline is inclusive and is the latest timestamp that the exclusive relayer has sole right\n        // to fill the relay.\n        if (relayData.exclusivityDeadline >= getCurrentTime() && relayData.exclusiveRelayer != msg.sender) {\n            revert NotExclusiveRelayer();\n        }\n\n        V3RelayExecutionParams memory relayExecution = V3RelayExecutionParams({\n            relay: relayData,\n            relayHash: _getV3RelayHash(relayData),\n            updatedOutputAmount: updatedOutputAmount,\n            updatedRecipient: updatedRecipient,\n            updatedMessage: updatedMessage,\n            repaymentChainId: repaymentChainId\n        });\n\n        _verifyUpdateV3DepositMessage(\n            relayData.depositor,\n            relayData.depositId,\n            relayData.originChainId,\n            updatedOutputAmount,\n            updatedRecipient,\n            updatedMessage,\n            depositorSignature\n        );\n\n        _fillRelayV3(relayExecution, msg.sender, false);\n    }\n\n    /**\n     * @notice Request Across to send LP funds to this contract to fulfill a slow fill relay\n     * for a deposit in the next bundle.\n     * @dev Slow fills are not possible unless the input and output tokens are \"equivalent\", i.e.\n     * they route to the same L1 token via PoolRebalanceRoutes.\n     * @dev Slow fills are created by inserting slow fill objects into a merkle tree that is included\n     * in the next HubPool \"root bundle\". Once the optimistic challenge window has passed, the HubPool\n     * will relay the slow root to this chain via relayRootBundle(). Once the slow root is relayed,\n     * the slow fill can be executed by anyone who calls executeV3SlowRelayLeaf().\n     * @dev Cannot request a slow fill if the fill deadline has passed.\n     * @dev Cannot request a slow fill if the relay has already been filled or a slow fill has already been requested.\n     * @param relayData struct containing all the data needed to identify the deposit that should be\n     * slow filled. If any of the params are missing or different from the origin chain deposit,\n     * then Across will not include a slow fill for the intended deposit.\n     */\n    function requestV3SlowFill(V3RelayData calldata relayData) public override nonReentrant unpausedFills {\n        // If a depositor has set an exclusivity deadline, then only the exclusive relayer should be able to\n        // fast fill within this deadline. Moreover, the depositor should expect to get *fast* filled within\n        // this deadline, not slow filled. As a simplifying assumption, we will not allow slow fills to be requested\n        // this exclusivity period.\n        if (relayData.exclusivityDeadline >= getCurrentTime()) {\n            revert NoSlowFillsInExclusivityWindow();\n        }\n        if (relayData.fillDeadline < getCurrentTime()) revert ExpiredFillDeadline();\n\n        bytes32 relayHash = _getV3RelayHash(relayData);\n        if (fillStatuses[relayHash] != uint256(FillStatus.Unfilled)) revert InvalidSlowFillRequest();\n        fillStatuses[relayHash] = uint256(FillStatus.RequestedSlowFill);\n\n        emit RequestedV3SlowFill(\n            relayData.inputToken,\n            relayData.outputToken,\n            relayData.inputAmount,\n            relayData.outputAmount,\n            relayData.originChainId,\n            relayData.depositId,\n            relayData.fillDeadline,\n            relayData.exclusivityDeadline,\n            relayData.exclusiveRelayer,\n            relayData.depositor,\n            relayData.recipient,\n            relayData.message\n        );\n    }\n\n    /**************************************\n     *         DATA WORKER FUNCTIONS      *\n     **************************************/\n\n    /**\n     * @notice Executes a slow relay leaf stored as part of a root bundle. Will send the full amount remaining in the\n     * relay to the recipient, less fees.\n     * @dev This function assumes that the relay's destination chain ID is the current chain ID, which prevents\n     * the caller from executing a slow relay intended for another chain on this chain.\n     * @param depositor Depositor on origin chain who set this chain as the destination chain.\n     * @param recipient Specified recipient on this chain.\n     * @param destinationToken Token to send to recipient. Should be mapped to the origin token, origin chain ID\n     * and this chain ID via a mapping on the HubPool.\n     * @param amount Full size of the deposit.\n     * @param originChainId Chain of SpokePool where deposit originated.\n     * @param realizedLpFeePct Fee % based on L1 HubPool utilization at deposit quote time. Deterministic based on\n     * quote time.\n     * @param relayerFeePct Original fee % to keep as relayer set by depositor.\n     * @param depositId Unique deposit ID on origin spoke pool.\n     * @param rootBundleId Unique ID of root bundle containing slow relay root that this leaf is contained in.\n     * @param message Message to send to the recipient if the recipient is a contract.\n     * @param payoutAdjustment Adjustment to the payout amount. Can be used to increase or decrease the payout to allow\n     * for rewards or penalties.\n     * @param proof Inclusion proof for this leaf in slow relay root in root bundle.\n     */\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function executeSlowRelayLeaf(\n        address depositor,\n        address recipient,\n        address destinationToken,\n        uint256 amount,\n        uint256 originChainId,\n        int64 realizedLpFeePct,\n        int64 relayerFeePct,\n        uint32 depositId,\n        uint32 rootBundleId,\n        bytes memory message,\n        int256 payoutAdjustment,\n        bytes32[] memory proof\n    ) public override nonReentrant {\n        _preExecuteLeafHook(destinationToken);\n        _executeSlowRelayLeaf(\n            depositor,\n            recipient,\n            destinationToken,\n            amount,\n            originChainId,\n            chainId(),\n            realizedLpFeePct,\n            relayerFeePct,\n            depositId,\n            rootBundleId,\n            message,\n            payoutAdjustment,\n            proof\n        );\n    }\n\n    /**\n     * @notice Executes a slow relay leaf stored as part of a root bundle relayed by the HubPool.\n     * @dev Executing a slow fill leaf is equivalent to filling the relayData so this function cannot be used to\n     * double fill a recipient. The relayData that is filled is included in the slowFillLeaf and is hashed\n     * like any other fill sent through fillV3Relay().\n     * @dev There is no relayer credited with filling this relay since funds are sent directly out of this contract.\n     * @param slowFillLeaf Contains all data necessary to uniquely identify a relay for this chain. This struct is\n     * hashed and included in a merkle root that is relayed to all spoke pools.\n     * - relayData: struct containing all the data needed to identify the original deposit to be slow filled.\n     * - chainId: chain identifier where slow fill leaf should be executed. If this doesn't match this chain's\n     * chainId, then this function will revert.\n     * - updatedOutputAmount: Amount to be sent to recipient out of this contract's balance. Can be set differently\n     * from relayData.outputAmount to charge a different fee because this deposit was \"slow\" filled. Usually,\n     * this will be set higher to reimburse the recipient for waiting for the slow fill.\n     * @param rootBundleId Unique ID of root bundle containing slow relay root that this leaf is contained in.\n     * @param proof Inclusion proof for this leaf in slow relay root in root bundle.\n     */\n    function executeV3SlowRelayLeaf(\n        V3SlowFill calldata slowFillLeaf,\n        uint32 rootBundleId,\n        bytes32[] calldata proof\n    ) public override nonReentrant {\n        V3RelayData memory relayData = slowFillLeaf.relayData;\n\n        _preExecuteLeafHook(relayData.outputToken);\n\n        // @TODO In the future consider allowing way for slow fill leaf to be created with updated\n        // deposit params like outputAmount, message and recipient.\n        V3RelayExecutionParams memory relayExecution = V3RelayExecutionParams({\n            relay: relayData,\n            relayHash: _getV3RelayHash(relayData),\n            updatedOutputAmount: slowFillLeaf.updatedOutputAmount,\n            updatedRecipient: relayData.recipient,\n            updatedMessage: relayData.message,\n            repaymentChainId: EMPTY_REPAYMENT_CHAIN_ID // Repayment not relevant for slow fills.\n        });\n\n        _verifyV3SlowFill(relayExecution, rootBundleId, proof);\n\n        // - No relayer to refund for slow fill executions.\n        _fillRelayV3(relayExecution, EMPTY_RELAYER, true);\n    }\n\n    /**\n     * @notice Executes a relayer refund leaf stored as part of a root bundle. Will send the relayer the amount they\n     * sent to the recipient plus a relayer fee.\n     * @param rootBundleId Unique ID of root bundle containing relayer refund root that this leaf is contained in.\n     * @param relayerRefundLeaf Contains all data necessary to reconstruct leaf contained in root bundle and to\n     * refund relayer. This data structure is explained in detail in the SpokePoolInterface.\n     * @param proof Inclusion proof for this leaf in relayer refund root in root bundle.\n     */\n    function executeRelayerRefundLeaf(\n        uint32 rootBundleId,\n        SpokePoolInterface.RelayerRefundLeaf memory relayerRefundLeaf,\n        bytes32[] memory proof\n    ) public payable virtual override nonReentrant {\n        _preExecuteLeafHook(relayerRefundLeaf.l2TokenAddress);\n\n        if (relayerRefundLeaf.chainId != chainId()) revert InvalidChainId();\n\n        RootBundle storage rootBundle = rootBundles[rootBundleId];\n\n        // Check that proof proves that relayerRefundLeaf is contained within the relayer refund root.\n        // Note: This should revert if the relayerRefundRoot is uninitialized.\n        if (!MerkleLib.verifyRelayerRefund(rootBundle.relayerRefundRoot, relayerRefundLeaf, proof))\n            revert InvalidMerkleProof();\n\n        _setClaimedLeaf(rootBundleId, relayerRefundLeaf.leafId);\n\n        _distributeRelayerRefunds(\n            relayerRefundLeaf.chainId,\n            relayerRefundLeaf.amountToReturn,\n            relayerRefundLeaf.refundAmounts,\n            relayerRefundLeaf.leafId,\n            relayerRefundLeaf.l2TokenAddress,\n            relayerRefundLeaf.refundAddresses\n        );\n\n        emit ExecutedRelayerRefundRoot(\n            relayerRefundLeaf.amountToReturn,\n            relayerRefundLeaf.chainId,\n            relayerRefundLeaf.refundAmounts,\n            rootBundleId,\n            relayerRefundLeaf.leafId,\n            relayerRefundLeaf.l2TokenAddress,\n            relayerRefundLeaf.refundAddresses,\n            msg.sender\n        );\n    }\n\n    /**************************************\n     *           VIEW FUNCTIONS           *\n     **************************************/\n\n    /**\n     * @notice Returns chain ID for this network.\n     * @dev Some L2s like ZKSync don't support the CHAIN_ID opcode so we allow the implementer to override this.\n     */\n    function chainId() public view virtual override returns (uint256) {\n        return block.chainid;\n    }\n\n    /**\n     * @notice Gets the current time.\n     * @return uint for the current timestamp.\n     */\n    function getCurrentTime() public view virtual returns (uint256) {\n        return block.timestamp; // solhint-disable-line not-rely-on-time\n    }\n\n    /**************************************\n     *         INTERNAL FUNCTIONS         *\n     **************************************/\n\n    function _deposit(\n        address depositor,\n        address recipient,\n        address originToken,\n        uint256 amount,\n        uint256 destinationChainId,\n        int64 relayerFeePct,\n        uint32 quoteTimestamp,\n        bytes memory message\n    ) internal {\n        // Check that deposit route is enabled.\n        require(enabledDepositRoutes[originToken][destinationChainId], \"Disabled route\");\n\n        // We limit the relay fees to prevent the user spending all their funds on fees.\n        require(SignedMath.abs(relayerFeePct) < 0.5e18, \"Invalid relayer fee\");\n        require(amount <= MAX_TRANSFER_SIZE, \"Amount too large\");\n\n        // Require that quoteTimestamp has a maximum age so that depositors pay an LP fee based on recent HubPool usage.\n        // It is assumed that cross-chain timestamps are normally loosely in-sync, but clock drift can occur. If the\n        // SpokePool time stalls or lags significantly, it is still possible to make deposits by setting quoteTimestamp\n        // within the configured buffer. The owner should pause deposits if this is undesirable. This will underflow if\n        // quoteTimestamp is more than depositQuoteTimeBuffer; this is safe but will throw an unintuitive error.\n\n        // slither-disable-next-line timestamp\n        require(getCurrentTime() - quoteTimestamp <= depositQuoteTimeBuffer, \"invalid quoteTimestamp\");\n\n        // Increment count of deposits so that deposit ID for this spoke pool is unique.\n        uint32 newDepositId = numberOfDeposits++;\n\n        // If the address of the origin token is a wrappedNativeToken contract and there is a msg.value with the\n        // transaction then the user is sending ETH. In this case, the ETH should be deposited to wrappedNativeToken.\n        if (originToken == address(wrappedNativeToken) && msg.value > 0) {\n            require(msg.value == amount, \"msg.value must match amount\");\n            wrappedNativeToken.deposit{ value: msg.value }();\n            // Else, it is a normal ERC20. In this case pull the token from the user's wallet as per normal.\n            // Note: this includes the case where the L2 user has WETH (already wrapped ETH) and wants to bridge them.\n            // In this case the msg.value will be set to 0, indicating a \"normal\" ERC20 bridging action.\n        } else IERC20Upgradeable(originToken).safeTransferFrom(msg.sender, address(this), amount);\n\n        emit V3FundsDeposited(\n            originToken, // inputToken\n            address(0), // outputToken. Setting this to 0x0 means that the outputToken should be assumed to be the\n            // canonical token for the destination chain matching the inputToken. Therefore, this deposit\n            // can always be slow filled.\n            // - setting token to 0x0 will signal to off-chain validator that the \"equivalent\"\n            // token as the inputToken for the destination chain should be replaced here.\n            amount, // inputAmount\n            _computeAmountPostFees(amount, relayerFeePct), // outputAmount\n            // - output amount will be the deposit amount less relayerFeePct, which should now be set\n            // equal to realizedLpFeePct + gasFeePct + capitalCostFeePct where (gasFeePct + capitalCostFeePct)\n            // is equal to the old usage of `relayerFeePct`.\n            destinationChainId,\n            newDepositId,\n            quoteTimestamp,\n            INFINITE_FILL_DEADLINE, // fillDeadline. Default to infinite expiry because\n            // expired deposits refunds could be a breaking change for existing users of this function.\n            0, // exclusivityDeadline. Setting this to 0 along with the exclusiveRelayer to 0x0 means that there\n            // is no exclusive deadline\n            depositor,\n            recipient,\n            address(0), // exclusiveRelayer. Setting this to 0x0 will signal to off-chain validator that there\n            // is no exclusive relayer.\n            message\n        );\n    }\n\n    function _distributeRelayerRefunds(\n        uint256 _chainId,\n        uint256 amountToReturn,\n        uint256[] memory refundAmounts,\n        uint32 leafId,\n        address l2TokenAddress,\n        address[] memory refundAddresses\n    ) internal {\n        if (refundAddresses.length != refundAmounts.length) revert InvalidMerkleLeaf();\n\n        // Send each relayer refund address the associated refundAmount for the L2 token address.\n        // Note: Even if the L2 token is not enabled on this spoke pool, we should still refund relayers.\n        uint256 length = refundAmounts.length;\n        for (uint256 i = 0; i < length; ++i) {\n            uint256 amount = refundAmounts[i];\n            if (amount > 0) IERC20Upgradeable(l2TokenAddress).safeTransfer(refundAddresses[i], amount);\n        }\n\n        // If leaf's amountToReturn is positive, then send L2 --> L1 message to bridge tokens back via\n        // chain-specific bridging method.\n        if (amountToReturn > 0) {\n            _bridgeTokensToHubPool(amountToReturn, l2TokenAddress);\n\n            emit TokensBridged(amountToReturn, _chainId, leafId, l2TokenAddress, msg.sender);\n        }\n    }\n\n    // Verifies inclusion proof of leaf in root and sends recipient remainder of relay. Marks relay as filled.\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function _executeSlowRelayLeaf(\n        address depositor,\n        address recipient,\n        address destinationToken,\n        uint256 amount,\n        uint256 originChainId,\n        uint256 destinationChainId,\n        int64 realizedLpFeePct,\n        int64 relayerFeePct,\n        uint32 depositId,\n        uint32 rootBundleId,\n        bytes memory message,\n        int256 payoutAdjustmentPct,\n        bytes32[] memory proof\n    ) internal {\n        RelayExecution memory relayExecution = RelayExecution({\n            relay: SpokePoolInterface.RelayData({\n                depositor: depositor,\n                recipient: recipient,\n                destinationToken: destinationToken,\n                amount: amount,\n                realizedLpFeePct: realizedLpFeePct,\n                relayerFeePct: relayerFeePct,\n                depositId: depositId,\n                originChainId: originChainId,\n                destinationChainId: destinationChainId,\n                message: message\n            }),\n            relayHash: bytes32(0),\n            updatedRelayerFeePct: 0,\n            updatedRecipient: recipient,\n            updatedMessage: message,\n            repaymentChainId: 0,\n            maxTokensToSend: SLOW_FILL_MAX_TOKENS_TO_SEND,\n            slowFill: true,\n            payoutAdjustmentPct: payoutAdjustmentPct,\n            maxCount: type(uint256).max\n        });\n        relayExecution.relayHash = _getRelayHash(relayExecution.relay);\n\n        _verifySlowFill(relayExecution, rootBundleId, proof);\n\n        // Note: use relayAmount as the max amount to send, so the relay is always completely filled by the contract's\n        // funds in all cases. As this is a slow relay we set the relayerFeePct to 0. This effectively refunds the\n        // relayer component of the relayerFee thereby only charging the depositor the LpFee.\n        uint256 fillAmountPreFees = _fillRelay(relayExecution);\n\n        // Note: Set repayment chain ID to 0 to indicate that there is no repayment to be made. The off-chain data\n        // worker can use repaymentChainId=0 as a signal to ignore such relays for refunds. Also, set the relayerFeePct\n        // to 0 as slow relays do not pay the caller of this method (depositor is refunded this fee).\n        _emitFillRelay(relayExecution, fillAmountPreFees);\n    }\n\n    function _setCrossDomainAdmin(address newCrossDomainAdmin) internal {\n        require(newCrossDomainAdmin != address(0), \"Bad bridge router address\");\n        crossDomainAdmin = newCrossDomainAdmin;\n        emit SetXDomainAdmin(newCrossDomainAdmin);\n    }\n\n    function _setHubPool(address newHubPool) internal {\n        require(newHubPool != address(0), \"Bad hub pool address\");\n        hubPool = newHubPool;\n        emit SetHubPool(newHubPool);\n    }\n\n    function _preExecuteLeafHook(address) internal virtual {\n        // This method by default is a no-op. Different child spoke pools might want to execute functionality here\n        // such as wrapping any native tokens owned by the contract into wrapped tokens before proceeding with\n        // executing the leaf.\n    }\n\n    // Should be overriden by implementing contract depending on how L2 handles sending tokens to L1.\n    function _bridgeTokensToHubPool(uint256 amountToReturn, address l2TokenAddress) internal virtual;\n\n    function _setClaimedLeaf(uint32 rootBundleId, uint32 leafId) internal {\n        RootBundle storage rootBundle = rootBundles[rootBundleId];\n\n        // Verify the leafId in the leaf has not yet been claimed.\n        if (MerkleLib.isClaimed(rootBundle.claimedBitmap, leafId)) revert ClaimedMerkleLeaf();\n\n        // Set leaf as claimed in bitmap. This is passed by reference to the storage rootBundle.\n        MerkleLib.setClaimed(rootBundle.claimedBitmap, leafId);\n    }\n\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function _verifyUpdateDepositMessage(\n        address depositor,\n        uint32 depositId,\n        uint256 originChainId,\n        int64 updatedRelayerFeePct,\n        address updatedRecipient,\n        bytes memory updatedMessage,\n        bytes memory depositorSignature\n    ) internal view {\n        // A depositor can request to modify an un-relayed deposit by signing a hash containing the updated\n        // details and information uniquely identifying the deposit to relay. This information ensures\n        // that this signature cannot be re-used for other deposits.\n        // Note: We use the EIP-712 (https://eips.ethereum.org/EIPS/eip-712) standard for hashing and signing typed data.\n        // Specifically, we use the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n        // `eth_signedTypedDataV4` in MetaMask (https://docs.metamask.io/guide/signing-data.html).\n        bytes32 expectedTypedDataV4Hash = _hashTypedDataV4(\n            // EIP-712 compliant hash struct: https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct\n            keccak256(\n                abi.encode(\n                    UPDATE_DEPOSIT_DETAILS_HASH,\n                    depositId,\n                    originChainId,\n                    updatedRelayerFeePct,\n                    updatedRecipient,\n                    keccak256(updatedMessage)\n                )\n            ),\n            // By passing in the origin chain id, we enable the verification of the signature on a different chain\n            originChainId\n        );\n        _verifyDepositorSignature(depositor, expectedTypedDataV4Hash, depositorSignature);\n    }\n\n    function _verifyUpdateV3DepositMessage(\n        address depositor,\n        uint32 depositId,\n        uint256 originChainId,\n        uint256 updatedOutputAmount,\n        address updatedRecipient,\n        bytes memory updatedMessage,\n        bytes memory depositorSignature\n    ) internal view {\n        // A depositor can request to modify an un-relayed deposit by signing a hash containing the updated\n        // details and information uniquely identifying the deposit to relay. This information ensures\n        // that this signature cannot be re-used for other deposits.\n        // Note: We use the EIP-712 (https://eips.ethereum.org/EIPS/eip-712) standard for hashing and signing typed data.\n        // Specifically, we use the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n        // `eth_signedTypedDataV4` in MetaMask (https://docs.metamask.io/guide/signing-data.html).\n        bytes32 expectedTypedDataV4Hash = _hashTypedDataV4(\n            // EIP-712 compliant hash struct: https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct\n            keccak256(\n                abi.encode(\n                    UPDATE_V3_DEPOSIT_DETAILS_HASH,\n                    depositId,\n                    originChainId,\n                    updatedOutputAmount,\n                    updatedRecipient,\n                    keccak256(updatedMessage)\n                )\n            ),\n            // By passing in the origin chain id, we enable the verification of the signature on a different chain\n            originChainId\n        );\n        _verifyDepositorSignature(depositor, expectedTypedDataV4Hash, depositorSignature);\n    }\n\n    // This function is isolated and made virtual to allow different L2's to implement chain specific recovery of\n    // signers from signatures because some L2s might not support ecrecover. To be safe, consider always reverting\n    // this function for L2s where ecrecover is different from how it works on Ethereum, otherwise there is the\n    // potential to forge a signature from the depositor using a different private key than the original depositor's.\n    function _verifyDepositorSignature(\n        address depositor,\n        bytes32 ethSignedMessageHash,\n        bytes memory depositorSignature\n    ) internal view virtual {\n        // Note:\n        // - We don't need to worry about reentrancy from a contract deployed at the depositor address since the method\n        //   `SignatureChecker.isValidSignatureNow` is a view method. Re-entrancy can happen, but it cannot affect state.\n        // - EIP-1271 signatures are supported. This means that a signature valid now, may not be valid later and vice-versa.\n        // - For an EIP-1271 signature to work, the depositor contract address must map to a deployed contract on the destination\n        //   chain that can validate the signature.\n        // - Regular signatures from an EOA are also supported.\n        bool isValid = SignatureChecker.isValidSignatureNow(depositor, ethSignedMessageHash, depositorSignature);\n        require(isValid, \"invalid signature\");\n    }\n\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function _verifySlowFill(\n        RelayExecution memory relayExecution,\n        uint32 rootBundleId,\n        bytes32[] memory proof\n    ) internal view {\n        SlowFill memory slowFill = SlowFill({\n            relayData: relayExecution.relay,\n            payoutAdjustmentPct: relayExecution.payoutAdjustmentPct\n        });\n\n        require(\n            MerkleLib.verifySlowRelayFulfillment(rootBundles[rootBundleId].slowRelayRoot, slowFill, proof),\n            \"Invalid slow relay proof\"\n        );\n    }\n\n    function _verifyV3SlowFill(\n        V3RelayExecutionParams memory relayExecution,\n        uint32 rootBundleId,\n        bytes32[] memory proof\n    ) internal view {\n        V3SlowFill memory slowFill = V3SlowFill({\n            relayData: relayExecution.relay,\n            chainId: chainId(),\n            updatedOutputAmount: relayExecution.updatedOutputAmount\n        });\n\n        if (!MerkleLib.verifyV3SlowRelayFulfillment(rootBundles[rootBundleId].slowRelayRoot, slowFill, proof))\n            revert InvalidMerkleProof();\n    }\n\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function _computeAmountPreFees(uint256 amount, int64 feesPct) private pure returns (uint256) {\n        return (1e18 * amount) / uint256((int256(1e18) - feesPct));\n    }\n\n    function _computeAmountPostFees(uint256 amount, int256 feesPct) private pure returns (uint256) {\n        return (amount * uint256(int256(1e18) - feesPct)) / 1e18;\n    }\n\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function _getRelayHash(SpokePoolInterface.RelayData memory relayData) private pure returns (bytes32) {\n        return keccak256(abi.encode(relayData));\n    }\n\n    function _getV3RelayHash(V3RelayData memory relayData) private view returns (bytes32) {\n        return keccak256(abi.encode(relayData, chainId()));\n    }\n\n    // Unwraps ETH and does a transfer to a recipient address. If the recipient is a smart contract then sends wrappedNativeToken.\n    function _unwrapwrappedNativeTokenTo(address payable to, uint256 amount) internal {\n        if (address(to).isContract()) {\n            IERC20Upgradeable(address(wrappedNativeToken)).safeTransfer(to, amount);\n        } else {\n            wrappedNativeToken.withdraw(amount);\n            AddressLibUpgradeable.sendValue(to, amount);\n        }\n    }\n\n    /**\n     * @notice Caller specifies the max amount of tokens to send to user. Based on this amount and the amount of the\n     * relay remaining (as stored in the relayFills mapping), pull the amount of tokens from the caller\n     * and send to the recipient.\n     * @dev relayFills keeps track of pre-fee fill amounts as a convenience to relayers who want to specify round\n     * numbers for the maxTokensToSend parameter or convenient numbers like 100 (i.e. relayers who will fully\n     * fill any relay up to 100 tokens, and partial fill with 100 tokens for larger relays).\n     * @dev Caller must approve this contract to transfer up to maxTokensToSend of the relayData.destinationToken.\n     * The amount to be sent might end up less if there is insufficient relay amount remaining to be sent.\n     */\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function _fillRelay(RelayExecution memory relayExecution) internal returns (uint256 fillAmountPreFees) {\n        RelayData memory relayData = relayExecution.relay;\n        // We limit the relay fees to prevent the user spending all their funds on fees. Note that 0.5e18 (i.e. 50%)\n        // fees are just magic numbers. The important point is to prevent the total fee from being 100%, otherwise\n        // computing the amount pre fees runs into divide-by-0 issues.\n        require(\n            SignedMath.abs(relayExecution.updatedRelayerFeePct) < 0.5e18 &&\n                SignedMath.abs(relayData.realizedLpFeePct) < 0.5e18,\n            \"invalid fees\"\n        );\n\n        require(relayData.amount <= MAX_TRANSFER_SIZE, \"Amount too large\");\n\n        // Check that the relay has not already been completely filled. Note that the relays mapping will point to\n        // the amount filled so far for a particular relayHash, so this will start at 0 and increment with each fill.\n        require(DEPRECATED_relayFills[relayExecution.relayHash] < relayData.amount, \"relay filled\");\n\n        // Derive the amount of the relay filled if the caller wants to send exactly maxTokensToSend tokens to\n        // the recipient. For example, if the user wants to send 10 tokens to the recipient, the full relay amount\n        // is 100, and the fee %'s total 5%, then this computation would return ~10.5, meaning that to fill 10.5/100\n        // of the full relay size, the caller would need to send 10 tokens to the user.\n        // This is equivalent to the amount to be sent by the relayer before fees have been taken out.\n        fillAmountPreFees = _computeAmountPreFees(\n            relayExecution.maxTokensToSend,\n            (relayData.realizedLpFeePct + relayExecution.updatedRelayerFeePct)\n        );\n        // If fill amount minus fees, which is possible with small fill amounts and negative fees, then\n        // revert.\n        require(fillAmountPreFees > 0, \"fill amount pre fees is 0\");\n\n        // If user's specified max amount to send is greater than the amount of the relay remaining pre-fees,\n        // we'll pull exactly enough tokens to complete the relay.\n        uint256 amountRemainingInRelay = relayData.amount - DEPRECATED_relayFills[relayExecution.relayHash];\n        if (amountRemainingInRelay < fillAmountPreFees) {\n            fillAmountPreFees = amountRemainingInRelay;\n        }\n\n        // Apply post-fees computation to amount that relayer will send to user. Rounding errors are possible\n        // when computing fillAmountPreFees and then amountToSend, and we just want to enforce that\n        // the error added to amountToSend is consistently applied to partial and full fills.\n        uint256 amountToSend = _computeAmountPostFees(\n            fillAmountPreFees,\n            relayData.realizedLpFeePct + relayExecution.updatedRelayerFeePct\n        );\n\n        // This can only happen in a slow fill, where the contract is funding the relay.\n        if (relayExecution.payoutAdjustmentPct != 0) {\n            // If payoutAdjustmentPct is positive, then the recipient will receive more than the amount they\n            // were originally expecting. If it is negative, then the recipient will receive less.\n            // -1e18 is -100%. Because we cannot pay out negative values, that is the minimum.\n            require(relayExecution.payoutAdjustmentPct >= -1e18, \"payoutAdjustmentPct too small\");\n\n            // Allow the payout adjustment to go up to 1000% (i.e. 11x).\n            // This is a sanity check to ensure the payouts do not grow too large via some sort of issue in bundle\n            // construction.\n            require(relayExecution.payoutAdjustmentPct <= 100e18, \"payoutAdjustmentPct too large\");\n\n            // Note: since _computeAmountPostFees is typically intended for fees, the signage must be reversed.\n            amountToSend = _computeAmountPostFees(amountToSend, -relayExecution.payoutAdjustmentPct);\n\n            // Note: this error should never happen, since the maxTokensToSend is expected to be set much higher than\n            // the amount, but it is here as a sanity check.\n            require(amountToSend <= relayExecution.maxTokensToSend, \"Somehow hit maxTokensToSend!\");\n        }\n\n        // Since the first partial fill is used to update the fill counter for the entire refund amount, we don't have\n        // a simple way to handle the case where follow-up partial fills take repayment on different chains. We'd\n        // need a way to decrement the fill counter in this case (or increase deposit counter) to ensure that users\n        // have adequate frontrunning protections.\n        // Instead of adding complexity, we require that all partial fills set repayment chain equal to destination chain.\n        // Note: .slowFill is checked because slow fills set repaymentChainId to 0.\n        bool localRepayment = relayExecution.repaymentChainId == relayExecution.relay.destinationChainId;\n        require(\n            localRepayment || relayExecution.relay.amount == fillAmountPreFees || relayExecution.slowFill,\n            \"invalid repayment chain\"\n        );\n\n        // relayFills keeps track of pre-fee fill amounts as a convenience to relayers who want to specify round\n        // numbers for the maxTokensToSend parameter or convenient numbers like 100 (i.e. relayers who will fully\n        // fill any relay up to 100 tokens, and partial fill with 100 tokens for larger relays).\n        DEPRECATED_relayFills[relayExecution.relayHash] += fillAmountPreFees;\n\n        // If relayer and receiver are the same address, there is no need to do any transfer, as it would result in no\n        // net movement of funds.\n        // Note: this is important because it means that relayers can intentionally self-relay in a capital efficient\n        // way (no need to have funds on the destination).\n        // If this is a slow fill, we can't exit early since we still need to send funds out of this contract\n        // since there is no \"relayer\".\n        if (msg.sender == relayExecution.updatedRecipient && !relayExecution.slowFill) return fillAmountPreFees;\n\n        // If relay token is wrappedNativeToken then unwrap and send native token.\n        if (relayData.destinationToken == address(wrappedNativeToken)) {\n            // Note: useContractFunds is True if we want to send funds to the recipient directly out of this contract,\n            // otherwise we expect the caller to send funds to the recipient. If useContractFunds is True and the\n            // recipient wants wrappedNativeToken, then we can assume that wrappedNativeToken is already in the\n            // contract, otherwise we'll need the user to send wrappedNativeToken to this contract. Regardless, we'll\n            // need to unwrap it to native token before sending to the user.\n            if (!relayExecution.slowFill)\n                IERC20Upgradeable(relayData.destinationToken).safeTransferFrom(msg.sender, address(this), amountToSend);\n            _unwrapwrappedNativeTokenTo(payable(relayExecution.updatedRecipient), amountToSend);\n            // Else, this is a normal ERC20 token. Send to recipient.\n        } else {\n            // Note: Similar to note above, send token directly from the contract to the user in the slow relay case.\n            if (!relayExecution.slowFill)\n                IERC20Upgradeable(relayData.destinationToken).safeTransferFrom(\n                    msg.sender,\n                    relayExecution.updatedRecipient,\n                    amountToSend\n                );\n            else\n                IERC20Upgradeable(relayData.destinationToken).safeTransfer(\n                    relayExecution.updatedRecipient,\n                    amountToSend\n                );\n        }\n\n        if (relayExecution.updatedRecipient.isContract() && relayExecution.updatedMessage.length > 0) {\n            AcrossMessageHandler(relayExecution.updatedRecipient).handleAcrossMessage(\n                relayData.destinationToken,\n                amountToSend,\n                DEPRECATED_relayFills[relayExecution.relayHash] >= relayData.amount,\n                msg.sender,\n                relayExecution.updatedMessage\n            );\n        }\n    }\n\n    // @param relayer: relayer who is actually credited as filling this deposit. Can be different from\n    // exclusiveRelayer if passed exclusivityDeadline or if slow fill.\n    function _fillRelayV3(\n        V3RelayExecutionParams memory relayExecution,\n        address relayer,\n        bool isSlowFill\n    ) internal {\n        V3RelayData memory relayData = relayExecution.relay;\n\n        if (relayData.fillDeadline < getCurrentTime()) revert ExpiredFillDeadline();\n\n        bytes32 relayHash = relayExecution.relayHash;\n\n        // If a slow fill for this fill was requested then the relayFills value for this hash will be\n        // FillStatus.RequestedSlowFill. Therefore, if this is the status, then this fast fill\n        // will be replacing the slow fill. If this is a slow fill execution, then the following variable\n        // is trivially true. We'll emit this value in the FilledRelay\n        // event to assist the Dataworker in knowing when to return funds back to the HubPool that can no longer\n        // be used for a slow fill execution.\n        FillType fillType = isSlowFill\n            ? FillType.SlowFill\n            : (\n                // The following is true if this is a fast fill that was sent after a slow fill request.\n                fillStatuses[relayExecution.relayHash] == uint256(FillStatus.RequestedSlowFill)\n                    ? FillType.ReplacedSlowFill\n                    : FillType.FastFill\n            );\n\n        // @dev This function doesn't support partial fills. Therefore, we associate the relay hash with\n        // an enum tracking its fill status. All filled relays, whether slow or fast fills, are set to the Filled\n        // status. However, we also use this slot to track whether this fill had a slow fill requested. Therefore\n        // we can include a bool in the FilledRelay event making it easy for the dataworker to compute if this\n        // fill was a fast fill that replaced a slow fill and therefore this SpokePool has excess funds that it\n        // needs to send back to the HubPool.\n        if (fillStatuses[relayHash] == uint256(FillStatus.Filled)) revert RelayFilled();\n        fillStatuses[relayHash] = uint256(FillStatus.Filled);\n\n        // @dev Before returning early, emit events to assist the dataworker in being able to know which fills were\n        // successful.\n        emit FilledV3Relay(\n            relayData.inputToken,\n            relayData.outputToken,\n            relayData.inputAmount,\n            relayData.outputAmount,\n            relayExecution.repaymentChainId,\n            relayData.originChainId,\n            relayData.depositId,\n            relayData.fillDeadline,\n            relayData.exclusivityDeadline,\n            relayData.exclusiveRelayer,\n            relayer,\n            relayData.depositor,\n            relayData.recipient,\n            relayData.message,\n            V3RelayExecutionEventInfo({\n                updatedRecipient: relayExecution.updatedRecipient,\n                updatedMessage: relayExecution.updatedMessage,\n                updatedOutputAmount: relayExecution.updatedOutputAmount,\n                fillType: fillType\n            })\n        );\n\n        // If relayer and receiver are the same address, there is no need to do any transfer, as it would result in no\n        // net movement of funds.\n        // Note: this is important because it means that relayers can intentionally self-relay in a capital efficient\n        // way (no need to have funds on the destination).\n        // If this is a slow fill, we can't exit early since we still need to send funds out of this contract\n        // since there is no \"relayer\".\n        address recipientToSend = relayExecution.updatedRecipient;\n\n        if (msg.sender == recipientToSend && !isSlowFill) return;\n\n        // If relay token is wrappedNativeToken then unwrap and send native token.\n        address outputToken = relayData.outputToken;\n        uint256 amountToSend = relayExecution.updatedOutputAmount;\n        if (outputToken == address(wrappedNativeToken)) {\n            // Note: useContractFunds is True if we want to send funds to the recipient directly out of this contract,\n            // otherwise we expect the caller to send funds to the recipient. If useContractFunds is True and the\n            // recipient wants wrappedNativeToken, then we can assume that wrappedNativeToken is already in the\n            // contract, otherwise we'll need the user to send wrappedNativeToken to this contract. Regardless, we'll\n            // need to unwrap it to native token before sending to the user.\n            if (!isSlowFill) IERC20Upgradeable(outputToken).safeTransferFrom(msg.sender, address(this), amountToSend);\n            _unwrapwrappedNativeTokenTo(payable(recipientToSend), amountToSend);\n            // Else, this is a normal ERC20 token. Send to recipient.\n        } else {\n            // Note: Similar to note above, send token directly from the contract to the user in the slow relay case.\n            if (!isSlowFill) IERC20Upgradeable(outputToken).safeTransferFrom(msg.sender, recipientToSend, amountToSend);\n            else IERC20Upgradeable(outputToken).safeTransfer(recipientToSend, amountToSend);\n        }\n\n        bytes memory updatedMessage = relayExecution.updatedMessage;\n        if (recipientToSend.isContract() && updatedMessage.length > 0) {\n            AcrossMessageHandler(recipientToSend).handleV3AcrossMessage(\n                outputToken,\n                amountToSend,\n                msg.sender,\n                updatedMessage\n            );\n        }\n    }\n\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function _emitFillRelay(RelayExecution memory relayExecution, uint256 fillAmountPreFees) internal {\n        RelayExecutionInfo memory relayExecutionInfo = RelayExecutionInfo({\n            relayerFeePct: relayExecution.updatedRelayerFeePct,\n            recipient: relayExecution.updatedRecipient,\n            message: relayExecution.updatedMessage,\n            isSlowRelay: relayExecution.slowFill,\n            payoutAdjustmentPct: relayExecution.payoutAdjustmentPct\n        });\n\n        emit FilledRelay(\n            relayExecution.relay.amount,\n            DEPRECATED_relayFills[relayExecution.relayHash],\n            fillAmountPreFees,\n            relayExecution.repaymentChainId,\n            relayExecution.relay.originChainId,\n            relayExecution.relay.destinationChainId,\n            relayExecution.relay.relayerFeePct,\n            relayExecution.relay.realizedLpFeePct,\n            relayExecution.relay.depositId,\n            relayExecution.relay.destinationToken,\n            msg.sender,\n            relayExecution.relay.depositor,\n            relayExecution.relay.recipient,\n            relayExecution.relay.message,\n            relayExecutionInfo\n        );\n    }\n\n    // Implementing contract needs to override this to ensure that only the appropriate cross chain admin can execute\n    // certain admin functions. For L2 contracts, the cross chain admin refers to some L1 address or contract, and for\n    // L1, this would just be the same admin of the HubPool.\n    function _requireAdminSender() internal virtual;\n\n    // Added to enable the this contract to receive native token (ETH). Used when unwrapping wrappedNativeToken.\n    receive() external payable {}\n\n    // Reserve storage slots for future versions of this base contract to add state variables without\n    // affecting the storage layout of child contracts. Decrement the size of __gap whenever state variables\n    // are added. This is at bottom of contract to make sure it's always at the end of storage.\n    uint256[999] private __gap;\n}\n"},"contracts/test/MockSpokePool.sol":{"content":"//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.0;\n\nimport \"../SpokePool.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\n\n/**\n * @title MockSpokePool\n * @notice Implements abstract contract for testing.\n */\ncontract MockSpokePool is SpokePool, OwnableUpgradeable {\n    uint256 private chainId_;\n    uint256 private currentTime;\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n\n    event BridgedToHubPool(uint256 amount, address token);\n    event PreLeafExecuteHook(address token);\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor(address _wrappedNativeTokenAddress) SpokePool(_wrappedNativeTokenAddress, 1 hours, 9 hours) {} // solhint-disable-line no-empty-blocks\n\n    function initialize(\n        uint32 _initialDepositId,\n        address _crossDomainAdmin,\n        address _hubPool\n    ) public initializer {\n        __Ownable_init();\n        __SpokePool_init(_initialDepositId, _crossDomainAdmin, _hubPool);\n        currentTime = block.timestamp; // solhint-disable-line not-rely-on-time\n    }\n\n    function setCurrentTime(uint256 time) external {\n        currentTime = time;\n    }\n\n    function distributeRelayerRefunds(\n        uint256 _chainId,\n        uint256 amountToReturn,\n        uint256[] memory refundAmounts,\n        uint32 leafId,\n        address l2TokenAddress,\n        address[] memory refundAddresses\n    ) external {\n        _distributeRelayerRefunds(_chainId, amountToReturn, refundAmounts, leafId, l2TokenAddress, refundAddresses);\n    }\n\n    function verifyUpdateV3DepositMessage(\n        address depositor,\n        uint32 depositId,\n        uint256 originChainId,\n        uint256 updatedOutputAmount,\n        address updatedRecipient,\n        bytes memory updatedMessage,\n        bytes memory depositorSignature\n    ) public view {\n        return\n            _verifyUpdateV3DepositMessage(\n                depositor,\n                depositId,\n                originChainId,\n                updatedOutputAmount,\n                updatedRecipient,\n                updatedMessage,\n                depositorSignature\n            );\n    }\n\n    function fillRelayV3Internal(\n        V3RelayExecutionParams memory relayExecution,\n        address relayer,\n        bool isSlowFill\n    ) external {\n        _fillRelayV3(relayExecution, relayer, isSlowFill);\n    }\n\n    // This function is nonReentrant in order to allow caller to test whether a different function\n    // is reentrancy protected or not.\n    function callback(bytes memory data) external payable nonReentrant {\n        (bool success, bytes memory result) = address(this).call{ value: msg.value }(data);\n        require(success, string(result));\n    }\n\n    function setFillStatus(bytes32 relayHash, FillType fillType) external {\n        fillStatuses[relayHash] = uint256(fillType);\n    }\n\n    function getCurrentTime() public view override returns (uint256) {\n        return currentTime;\n    }\n\n    function _preExecuteLeafHook(address token) internal override {\n        emit PreLeafExecuteHook(token);\n    }\n\n    function _bridgeTokensToHubPool(uint256 amount, address token) internal override {\n        emit BridgedToHubPool(amount, token);\n    }\n\n    function _requireAdminSender() internal override onlyOwner {} // solhint-disable-line no-empty-blocks\n\n    function chainId() public view override(SpokePool) returns (uint256) {\n        // If chainId_ is set then return it, else do nothing and return the parent chainId().\n        return chainId_ == 0 ? super.chainId() : chainId_;\n    }\n\n    function setChainId(uint256 _chainId) public {\n        chainId_ = _chainId;\n    }\n\n    // Use this function to unit test that relayer-v2 and sdk-v2 clients can handle FundsDeposited events while also\n    // handling the new V3 events. This function is not explicitly tested in this repository but this contract is\n    // exported and tested in relayer-v2 and sdk-v2 by clients that do contain logic to handle these deprecated\n    // V2 events. After the V3 migration has taken place and there are no more FundsDeposited events queried by\n    // the dataworker and relayer, this function can be deprecated and the V2 unit tests can be removed from\n    // relayer-v2 and sdk-v2.\n    function depositV2(\n        address recipient,\n        address originToken,\n        uint256 amount,\n        uint256 destinationChainId,\n        int64 relayerFeePct,\n        uint32 quoteTimestamp,\n        bytes memory message,\n        uint256 // maxCount\n    ) public payable virtual nonReentrant unpausedDeposits {\n        // Increment count of deposits so that deposit ID for this spoke pool is unique.\n        uint32 newDepositId = numberOfDeposits++;\n\n        // If the address of the origin token is a wrappedNativeToken contract and there is a msg.value with the\n        // transaction then the user is sending ETH. In this case, the ETH should be deposited to wrappedNativeToken.\n        if (originToken == address(wrappedNativeToken) && msg.value > 0) {\n            require(msg.value == amount);\n            wrappedNativeToken.deposit{ value: msg.value }();\n            // Else, it is a normal ERC20. In this case pull the token from the user's wallet as per normal.\n            // Note: this includes the case where the L2 user has WETH (already wrapped ETH) and wants to bridge them.\n            // In this case the msg.value will be set to 0, indicating a \"normal\" ERC20 bridging action.\n        } else IERC20Upgradeable(originToken).safeTransferFrom(msg.sender, address(this), amount);\n\n        emit FundsDeposited(\n            amount,\n            chainId(),\n            destinationChainId,\n            relayerFeePct,\n            newDepositId,\n            quoteTimestamp,\n            originToken,\n            recipient,\n            msg.sender,\n            message\n        );\n    }\n}\n"},"contracts/test/MockSpokePoolV2.sol":{"content":"//SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.0;\n\nimport \"./MockSpokePool.sol\";\n\n/**\n * @title MockSpokePoolV2\n * @notice Upgrades MockSpokePool for no practical reason other than to demonstrate\n * upgradeability options\n */\ncontract MockSpokePoolV2 is MockSpokePool {\n    event NewEvent(bool value);\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor(address _wrappedNativeTokenAddress) MockSpokePool(_wrappedNativeTokenAddress) {} // solhint-disable-line no-empty-blocks\n\n    // Demonstrative of how we could reset state variables in a V2 contract conveniently while initializing new\n    // modules. The `reinitializer` modifier is required to create new Initializable contracts.\n    function reinitialize(address _hubPool) public reinitializer(2) {\n        _setHubPool(_hubPool);\n    }\n\n    // Demonstrative new function we could add in a V2 contract.\n    function emitEvent() external {\n        emit NewEvent(true);\n    }\n}\n"},"contracts/upgradeable/AddressLibUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title AddressUpgradeable\n * @dev Collection of functions related to the address type\n * @notice Logic is 100% copied from \"@openzeppelin/contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\" but one\n * comment is added to clarify why we allow delegatecall() in this contract, which is typically unsafe for use in\n * upgradeable implementation contracts.\n * @dev See https://docs.openzeppelin.com/upgrades-plugins/1.x/faq#delegatecall-selfdestruct for more details.\n */\nlibrary AddressLibUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"contracts/upgradeable/EIP712CrossChainUpgradeable.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * This contract is based on OpenZeppelin's implementation:\n * https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/master/contracts/utils/cryptography/EIP712Upgradeable.sol\n *\n * NOTE: Modified version that allows to build a domain separator that relies on a different chain id than the chain this\n * contract is deployed to. An example use case we want to support is:\n * - User A signs a message on chain with id = 1\n * - User B executes a method by verifying user A's EIP-712 compliant signature on a chain with id != 1\n */\nabstract contract EIP712CrossChainUpgradeable is Initializable {\n    /* solhint-disable var-name-mixedcase */\n    bytes32 private _HASHED_NAME;\n    bytes32 private _HASHED_VERSION;\n    bytes32 private constant _TYPE_HASH = keccak256(\"EIP712Domain(string name,string version,uint256 chainId)\");\n\n    /* solhint-enable var-name-mixedcase */\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    function __EIP712_init(string memory name, string memory version) internal onlyInitializing {\n        __EIP712_init_unchained(name, version);\n    }\n\n    function __EIP712_init_unchained(string memory name, string memory version) internal onlyInitializing {\n        bytes32 hashedName = keccak256(bytes(name));\n        bytes32 hashedVersion = keccak256(bytes(version));\n        _HASHED_NAME = hashedName;\n        _HASHED_VERSION = hashedVersion;\n    }\n\n    /**\n     * @dev Returns the domain separator depending on the `originChainId`.\n     * @param originChainId Chain id of network where message originates from.\n     * @return bytes32 EIP-712-compliant domain separator.\n     */\n    function _domainSeparatorV4(uint256 originChainId) internal view returns (bytes32) {\n        return keccak256(abi.encode(_TYPE_HASH, _HASHED_NAME, _HASHED_VERSION, originChainId));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 structHash = keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * ));\n     * bytes32 digest = _hashTypedDataV4(structHash, originChainId);\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     * @param structHash Hashed struct as defined in https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct.\n     * @param originChainId Chain id of network where message originates from.\n     * @return bytes32 Hash digest that is recoverable via `EDCSA.recover`.\n     */\n    function _hashTypedDataV4(bytes32 structHash, uint256 originChainId) internal view virtual returns (bytes32) {\n        return ECDSAUpgradeable.toTypedDataHash(_domainSeparatorV4(originChainId), structHash);\n    }\n\n    // Reserve storage slots for future versions of this base contract to add state variables without\n    // affecting the storage layout of child contracts. Decrement the size of __gap whenever state variables\n    // are added. This is at bottom of contract to make sure it's always at the end of storage.\n    uint256[1000] private __gap;\n}\n"},"contracts/upgradeable/MultiCallerUpgradeable.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\n/**\n * @title MultiCallerUpgradeable\n * @notice Logic is 100% copied from \"@uma/core/contracts/common/implementation/MultiCaller.sol\" but one\n * comment is added to clarify why we allow delegatecall() in this contract, which is typically unsafe for use in\n * upgradeable implementation contracts.\n * @dev See https://docs.openzeppelin.com/upgrades-plugins/1.x/faq#delegatecall-selfdestruct for more details.\n */\ncontract MultiCallerUpgradeable {\n    function _validateMulticallData(bytes[] calldata data) internal virtual {\n        // no-op\n    }\n\n    function multicall(bytes[] calldata data) external returns (bytes[] memory results) {\n        _validateMulticallData(data);\n\n        results = new bytes[](data.length);\n\n        //slither-disable-start calls-loop\n        for (uint256 i = 0; i < data.length; i++) {\n            // Typically, implementation contracts used in the upgradeable proxy pattern shouldn't call `delegatecall`\n            // because it could allow a malicious actor to call this implementation contract directly (rather than\n            // through a proxy contract) and then selfdestruct() the contract, thereby freezing the upgradeable\n            // proxy. However, since we're only delegatecall-ing into this contract, then we can consider this\n            // use of delegatecall() safe.\n\n            //slither-disable-start low-level-calls\n            /// @custom:oz-upgrades-unsafe-allow delegatecall\n            (bool success, bytes memory result) = address(this).delegatecall(data[i]);\n            //slither-disable-end low-level-calls\n\n            if (!success) {\n                // Next 5 lines from https://ethereum.stackexchange.com/a/83577\n                if (result.length < 68) revert();\n                //slither-disable-next-line assembly\n                assembly {\n                    result := add(result, 0x04)\n                }\n                revert(abi.decode(result, (string)));\n            }\n\n            results[i] = result;\n        }\n        //slither-disable-end calls-loop\n    }\n\n    // Reserve storage slots for future versions of this base contract to add state variables without\n    // affecting the storage layout of child contracts. Decrement the size of __gap whenever state variables\n    // are added. This is at bottom of contract to make sure its always at the end of storage.\n    uint256[1000] private __gap;\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":1},"viaIR":true,"debug":{"revertStrings":"default"},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1705],"ContextUpgradeable":[1747],"Initializable":[665],"OwnableUpgradeable":[131]},"id":132,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":132,"sourceUnit":1748,"src":"127:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":132,"sourceUnit":666,"src":"169:42:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Initializable","nameLocations":["748:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":665,"src":"748:13:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"748:13:0"},{"baseName":{"id":7,"name":"ContextUpgradeable","nameLocations":["763:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":1747,"src":"763:18:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"763:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"213:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":131,"linearizedBaseContracts":[131,1747,665],"name":"OwnableUpgradeable","nameLocation":"726:18:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":10,"mutability":"mutable","name":"_owner","nameLocation":"804:6:0","nodeType":"VariableDeclaration","scope":131,"src":"788:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":16,"name":"OwnershipTransferred","nameLocation":"823:20:0","nodeType":"EventDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"860:13:0","nodeType":"VariableDeclaration","scope":16,"src":"844:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"891:8:0","nodeType":"VariableDeclaration","scope":16,"src":"875:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"843:57:0"},"src":"817:84:0"},{"body":{"id":25,"nodeType":"Block","src":"1055:43:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":22,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"1065:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":23,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1065:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":24,"nodeType":"ExpressionStatement","src":"1065:26:0"}]},"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"907:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":26,"implemented":true,"kind":"function","modifiers":[{"id":20,"kind":"modifierInvocation","modifierName":{"id":19,"name":"onlyInitializing","nameLocations":["1038:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"1038:16:0"},"nodeType":"ModifierInvocation","src":"1038:16:0"}],"name":"__Ownable_init","nameLocation":"1012:14:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1026:2:0"},"returnParameters":{"id":21,"nodeType":"ParameterList","parameters":[],"src":"1055:0:0"},"scope":131,"src":"1003:95:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":36,"nodeType":"Block","src":"1166:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":32,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"1195:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":33,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1195:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":31,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"1176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"1176:32:0"}]},"id":37,"implemented":true,"kind":"function","modifiers":[{"id":29,"kind":"modifierInvocation","modifierName":{"id":28,"name":"onlyInitializing","nameLocations":["1149:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"1149:16:0"},"nodeType":"ModifierInvocation","src":"1149:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1113:24:0","nodeType":"FunctionDefinition","parameters":{"id":27,"nodeType":"ParameterList","parameters":[],"src":"1137:2:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"1166:0:0"},"scope":131,"src":"1104:111:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":44,"nodeType":"Block","src":"1324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":40,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"1334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"ExpressionStatement","src":"1334:13:0"},{"id":43,"nodeType":"PlaceholderStatement","src":"1357:1:0"}]},"documentation":{"id":38,"nodeType":"StructuredDocumentation","src":"1221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":45,"name":"onlyOwner","nameLocation":"1312:9:0","nodeType":"ModifierDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[],"src":"1321:2:0"},"src":"1303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":53,"nodeType":"Block","src":"1496:30:0","statements":[{"expression":{"id":51,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1513:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":50,"id":52,"nodeType":"Return","src":"1506:13:0"}]},"documentation":{"id":46,"nodeType":"StructuredDocumentation","src":"1371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":54,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1450:5:0","nodeType":"FunctionDefinition","parameters":{"id":47,"nodeType":"ParameterList","parameters":[],"src":"1455:2:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"1487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1486:9:0"},"scope":131,"src":"1441:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":67,"nodeType":"Block","src":"1644:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":63,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":59,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1662:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1662:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":61,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"1673:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":62,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1673:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1662:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1687:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":58,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1654:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1654:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1654:68:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1532:62:0","text":" @dev Throws if the sender is not the owner."},"id":68,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1608:11:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1619:2:0"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[],"src":"1644:0:0"},"scope":131,"src":"1599:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":81,"nodeType":"Block","src":"2118:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":77,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":76,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2147:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":75,"name":"address","nodeType":"ElementaryTypeName","src":"2147:7:0","typeDescriptions":{}}},"id":78,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2147:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":74,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2128:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2128:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"ExpressionStatement","src":"2128:30:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1735:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":82,"implemented":true,"kind":"function","modifiers":[{"id":72,"kind":"modifierInvocation","modifierName":{"id":71,"name":"onlyOwner","nameLocations":["2108:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2108:9:0"},"nodeType":"ModifierInvocation","src":"2108:9:0"}],"name":"renounceOwnership","nameLocation":"2073:17:0","nodeType":"FunctionDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"2090:2:0"},"returnParameters":{"id":73,"nodeType":"ParameterList","parameters":[],"src":"2118:0:0"},"scope":131,"src":"2064:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":104,"nodeType":"Block","src":"2384:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":91,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2402:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2422:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":93,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2414:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2414:7:0","typeDescriptions":{}}},"id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2414:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2402:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":97,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2426:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":90,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2394:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":98,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2394:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":99,"nodeType":"ExpressionStatement","src":"2394:73:0"},{"expression":{"arguments":[{"id":101,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2496:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2477:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2477:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":103,"nodeType":"ExpressionStatement","src":"2477:28:0"}]},"documentation":{"id":83,"nodeType":"StructuredDocumentation","src":"2171:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":105,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2374:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2374:9:0"},"nodeType":"ModifierInvocation","src":"2374:9:0"}],"name":"transferOwnership","nameLocation":"2323:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"newOwner","nameLocation":"2349:8:0","nodeType":"VariableDeclaration","scope":105,"src":"2341:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2340:18:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2384:0:0"},"scope":131,"src":"2314:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":124,"nodeType":"Block","src":"2729:124:0","statements":[{"assignments":[112],"declarations":[{"constant":false,"id":112,"mutability":"mutable","name":"oldOwner","nameLocation":"2747:8:0","nodeType":"VariableDeclaration","scope":124,"src":"2739:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":114,"initialValue":{"id":113,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2758:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2739:25:0"},{"expression":{"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":115,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2774:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":116,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"2783:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2774:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":118,"nodeType":"ExpressionStatement","src":"2774:17:0"},{"eventCall":{"arguments":[{"id":120,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"2827:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":121,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"2837:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":119,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"2806:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2806:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":123,"nodeType":"EmitStatement","src":"2801:45:0"}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2518:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":125,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2675:18:0","nodeType":"FunctionDefinition","parameters":{"id":109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":108,"mutability":"mutable","name":"newOwner","nameLocation":"2702:8:0","nodeType":"VariableDeclaration","scope":125,"src":"2694:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2694:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2693:18:0"},"returnParameters":{"id":110,"nodeType":"ParameterList","parameters":[],"src":"2729:0:0"},"scope":131,"src":"2666:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":126,"nodeType":"StructuredDocumentation","src":"2859:254:0","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":130,"mutability":"mutable","name":"__gap","nameLocation":"3138:5:0","nodeType":"VariableDeclaration","scope":131,"src":"3118:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":127,"name":"uint256","nodeType":"ElementaryTypeName","src":"3118:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":129,"length":{"hexValue":"3439","id":128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3126:2:0","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3118:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":132,"src":"708:2438:0","usedErrors":[],"usedEvents":[16,511]}],"src":"102:3045:0"},"id":0},"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol","exportedSymbols":{"IERC1967Upgradeable":[152]},"id":153,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":133,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":134,"nodeType":"StructuredDocumentation","src":"132:133:1","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.8.3._"},"fullyImplemented":true,"id":152,"linearizedBaseContracts":[152],"name":"IERC1967Upgradeable","nameLocation":"276:19:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":135,"nodeType":"StructuredDocumentation","src":"302:68:1","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":139,"name":"Upgraded","nameLocation":"381:8:1","nodeType":"EventDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"406:14:1","nodeType":"VariableDeclaration","scope":139,"src":"390:30:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":136,"name":"address","nodeType":"ElementaryTypeName","src":"390:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"389:32:1"},"src":"375:47:1"},{"anonymous":false,"documentation":{"id":140,"nodeType":"StructuredDocumentation","src":"428:67:1","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":146,"name":"AdminChanged","nameLocation":"506:12:1","nodeType":"EventDefinition","parameters":{"id":145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"527:13:1","nodeType":"VariableDeclaration","scope":146,"src":"519:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":141,"name":"address","nodeType":"ElementaryTypeName","src":"519:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":144,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"550:8:1","nodeType":"VariableDeclaration","scope":146,"src":"542:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"542:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"518:41:1"},"src":"500:60:1"},{"anonymous":false,"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"566:59:1","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":151,"name":"BeaconUpgraded","nameLocation":"636:14:1","nodeType":"EventDefinition","parameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"667:6:1","nodeType":"VariableDeclaration","scope":151,"src":"651:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":148,"name":"address","nodeType":"ElementaryTypeName","src":"651:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"650:24:1"},"src":"630:45:1"}],"scope":153,"src":"266:411:1","usedErrors":[],"usedEvents":[139,146,151]}],"src":"107:571:1"},"id":1},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","exportedSymbols":{"IERC1822ProxiableUpgradeable":[162]},"id":163,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":154,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822ProxiableUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":155,"nodeType":"StructuredDocumentation","src":"138:203:2","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":162,"linearizedBaseContracts":[162],"name":"IERC1822ProxiableUpgradeable","nameLocation":"352:28:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"387:438:2","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":161,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"839:13:2","nodeType":"FunctionDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[],"src":"852:2:2"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":161,"src":"878:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":158,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:9:2"},"scope":162,"src":"830:57:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":163,"src":"342:547:2","usedErrors":[],"usedEvents":[]}],"src":"113:777:2"},"id":2},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1705],"ERC1967UpgradeUpgradeable":[486],"IBeaconUpgradeable":[496],"IERC1822ProxiableUpgradeable":[162],"IERC1967Upgradeable":[152],"Initializable":[665],"StorageSlotUpgradeable":[1857]},"id":487,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":164,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"116:23:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","file":"../beacon/IBeaconUpgradeable.sol","id":165,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":487,"sourceUnit":497,"src":"141:42:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol","file":"../../interfaces/IERC1967Upgradeable.sol","id":166,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":487,"sourceUnit":153,"src":"184:50:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":167,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":487,"sourceUnit":163,"src":"235:56:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":168,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":487,"sourceUnit":1706,"src":"292:44:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","file":"../../utils/StorageSlotUpgradeable.sol","id":169,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":487,"sourceUnit":1858,"src":"337:48:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../utils/Initializable.sol","id":170,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":487,"sourceUnit":666,"src":"386:36:3","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":172,"name":"Initializable","nameLocations":["656:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":665,"src":"656:13:3"},"id":173,"nodeType":"InheritanceSpecifier","src":"656:13:3"},{"baseName":{"id":174,"name":"IERC1967Upgradeable","nameLocations":["671:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":152,"src":"671:19:3"},"id":175,"nodeType":"InheritanceSpecifier","src":"671:19:3"}],"canonicalName":"ERC1967UpgradeUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":171,"nodeType":"StructuredDocumentation","src":"424:184:3","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"},"fullyImplemented":true,"id":486,"linearizedBaseContracts":[486,152,665],"name":"ERC1967UpgradeUpgradeable","nameLocation":"627:25:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":180,"nodeType":"Block","src":"756:7:3","statements":[]},"id":181,"implemented":true,"kind":"function","modifiers":[{"id":178,"kind":"modifierInvocation","modifierName":{"id":177,"name":"onlyInitializing","nameLocations":["739:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"739:16:3"},"nodeType":"ModifierInvocation","src":"739:16:3"}],"name":"__ERC1967Upgrade_init","nameLocation":"706:21:3","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[],"src":"727:2:3"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"756:0:3"},"scope":486,"src":"697:66:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":186,"nodeType":"Block","src":"838:7:3","statements":[]},"id":187,"implemented":true,"kind":"function","modifiers":[{"id":184,"kind":"modifierInvocation","modifierName":{"id":183,"name":"onlyInitializing","nameLocations":["821:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"821:16:3"},"nodeType":"ModifierInvocation","src":"821:16:3"}],"name":"__ERC1967Upgrade_init_unchained","nameLocation":"778:31:3","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[],"src":"809:2:3"},"returnParameters":{"id":185,"nodeType":"ParameterList","parameters":[],"src":"838:0:3"},"scope":486,"src":"769:76:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"id":190,"mutability":"constant","name":"_ROLLBACK_SLOT","nameLocation":"954:14:3","nodeType":"VariableDeclaration","scope":486,"src":"929:108:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"929:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433","id":189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"971:66:3","typeDescriptions":{"typeIdentifier":"t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1","typeString":"int_const 3304...(69 digits omitted)...9347"},"value":"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"},"visibility":"private"},{"constant":true,"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"1044:214:3","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."},"id":194,"mutability":"constant","name":"_IMPLEMENTATION_SLOT","nameLocation":"1289:20:3","nodeType":"VariableDeclaration","scope":486,"src":"1263:115:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1312:66:3","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"body":{"id":206,"nodeType":"Block","src":"1519:89:3","statements":[{"expression":{"expression":{"arguments":[{"id":202,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"1574:20:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":200,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"1536:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1857_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1559:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1779,"src":"1536:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1753_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1536:59:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1753_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1596:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1752,"src":"1536:65:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":199,"id":205,"nodeType":"Return","src":"1529:72:3"}]},"documentation":{"id":195,"nodeType":"StructuredDocumentation","src":"1385:67:3","text":" @dev Returns the current implementation address."},"id":207,"implemented":true,"kind":"function","modifiers":[],"name":"_getImplementation","nameLocation":"1466:18:3","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"1484:2:3"},"returnParameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":207,"src":"1510:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":197,"name":"address","nodeType":"ElementaryTypeName","src":"1510:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1509:9:3"},"scope":486,"src":"1457:151:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":230,"nodeType":"Block","src":"1762:218:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":216,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"1810:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":214,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"1780:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1705_$","typeString":"type(library AddressUpgradeable)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1799:10:3","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1393,"src":"1780:29:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1780:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1830:47:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""},"value":"ERC1967: new implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""}],"id":213,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1772:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1772:106:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":220,"nodeType":"ExpressionStatement","src":"1772:106:3"},{"expression":{"id":228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":224,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"1926:20:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":221,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"1888:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1857_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1911:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1779,"src":"1888:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1753_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:59:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1753_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1948:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1752,"src":"1888:65:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":227,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"1956:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1888:85:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":229,"nodeType":"ExpressionStatement","src":"1888:85:3"}]},"documentation":{"id":208,"nodeType":"StructuredDocumentation","src":"1614:80:3","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":231,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1708:18:3","nodeType":"FunctionDefinition","parameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"newImplementation","nameLocation":"1735:17:3","nodeType":"VariableDeclaration","scope":231,"src":"1727:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"1727:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1726:27:3"},"returnParameters":{"id":212,"nodeType":"ParameterList","parameters":[],"src":"1762:0:3"},"scope":486,"src":"1699:281:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":245,"nodeType":"Block","src":"2142:96:3","statements":[{"expression":{"arguments":[{"id":238,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"2171:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":237,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"2152:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2152:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":240,"nodeType":"ExpressionStatement","src":"2152:37:3"},{"eventCall":{"arguments":[{"id":242,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"2213:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":241,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"2204:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2204:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":244,"nodeType":"EmitStatement","src":"2199:32:3"}]},"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"1986:95:3","text":" @dev Perform implementation upgrade\n Emits an {Upgraded} event."},"id":246,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeTo","nameLocation":"2095:10:3","nodeType":"FunctionDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"newImplementation","nameLocation":"2114:17:3","nodeType":"VariableDeclaration","scope":246,"src":"2106:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"2106:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2105:27:3"},"returnParameters":{"id":236,"nodeType":"ParameterList","parameters":[],"src":"2142:0:3"},"scope":486,"src":"2086:152:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":275,"nodeType":"Block","src":"2470:178:3","statements":[{"expression":{"arguments":[{"id":257,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"2491:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":256,"name":"_upgradeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"2480:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2480:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":259,"nodeType":"ExpressionStatement","src":"2480:29:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":260,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"2523:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2528:6:3","memberName":"length","nodeType":"MemberAccess","src":"2523:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2537:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2523:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":264,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"2542:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2523:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":274,"nodeType":"IfStatement","src":"2519:123:3","trueBody":{"id":273,"nodeType":"Block","src":"2553:89:3","statements":[{"expression":{"arguments":[{"id":269,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"2607:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":270,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"2626:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":266,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"2567:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1705_$","typeString":"type(library AddressUpgradeable)"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2586:20:3","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1592,"src":"2567:39:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:64:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":272,"nodeType":"ExpressionStatement","src":"2567:64:3"}]}}]},"documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"2244:123:3","text":" @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."},"id":276,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCall","nameLocation":"2381:17:3","nodeType":"FunctionDefinition","parameters":{"id":254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":249,"mutability":"mutable","name":"newImplementation","nameLocation":"2407:17:3","nodeType":"VariableDeclaration","scope":276,"src":"2399:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":248,"name":"address","nodeType":"ElementaryTypeName","src":"2399:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":251,"mutability":"mutable","name":"data","nameLocation":"2439:4:3","nodeType":"VariableDeclaration","scope":276,"src":"2426:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":250,"name":"bytes","nodeType":"ElementaryTypeName","src":"2426:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":253,"mutability":"mutable","name":"forceCall","nameLocation":"2450:9:3","nodeType":"VariableDeclaration","scope":276,"src":"2445:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":252,"name":"bool","nodeType":"ElementaryTypeName","src":"2445:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2398:62:3"},"returnParameters":{"id":255,"nodeType":"ParameterList","parameters":[],"src":"2470:0:3"},"scope":486,"src":"2372:276:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":328,"nodeType":"Block","src":"2922:842:3","statements":[{"condition":{"expression":{"arguments":[{"id":288,"name":"_ROLLBACK_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"3274:14:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":286,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"3236:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1857_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3259:14:3","memberName":"getBooleanSlot","nodeType":"MemberAccess","referencedDeclaration":1790,"src":"3236:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$1756_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.BooleanSlot storage pointer)"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3236:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1756_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot storage pointer"}},"id":290,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3290:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1755,"src":"3236:59:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":326,"nodeType":"Block","src":"3365:393:3","statements":[{"clauses":[{"block":{"id":311,"nodeType":"Block","src":"3470:115:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":305,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"3496:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":306,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"3504:20:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3496:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944","id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3526:43:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""},"value":"ERC1967Upgrade: unsupported proxiableUUID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""}],"id":304,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3488:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3488:82:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"ExpressionStatement","src":"3488:82:3"}]},"errorName":"","id":312,"nodeType":"TryCatchClause","parameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"slot","nameLocation":"3464:4:3","nodeType":"VariableDeclaration","scope":312,"src":"3456:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3456:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3455:14:3"},"src":"3447:138:3"},{"block":{"id":317,"nodeType":"Block","src":"3592:89:3","statements":[{"expression":{"arguments":[{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053","id":314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3617:48:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""},"value":"ERC1967Upgrade: new implementation is not UUPS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""}],"id":313,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3610:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3610:56:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":316,"nodeType":"ExpressionStatement","src":"3610:56:3"}]},"errorName":"","id":318,"nodeType":"TryCatchClause","src":"3586:95:3"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":297,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"3412:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":296,"name":"IERC1822ProxiableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"3383:28:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822ProxiableUpgradeable_$162_$","typeString":"type(contract IERC1822ProxiableUpgradeable)"}},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3383:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822ProxiableUpgradeable_$162","typeString":"contract IERC1822ProxiableUpgradeable"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3431:13:3","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":161,"src":"3383:61:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3383:63:3","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":319,"nodeType":"TryStatement","src":"3379:302:3"},{"expression":{"arguments":[{"id":321,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"3712:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":322,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3731:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":323,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"3737:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":320,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"3694:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3694:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":325,"nodeType":"ExpressionStatement","src":"3694:53:3"}]},"id":327,"nodeType":"IfStatement","src":"3232:526:3","trueBody":{"id":295,"nodeType":"Block","src":"3297:62:3","statements":[{"expression":{"arguments":[{"id":292,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"3330:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":291,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"3311:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3311:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":294,"nodeType":"ExpressionStatement","src":"3311:37:3"}]}}]},"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"2654:161:3","text":" @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."},"id":329,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"2829:21:3","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"newImplementation","nameLocation":"2859:17:3","nodeType":"VariableDeclaration","scope":329,"src":"2851:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":278,"name":"address","nodeType":"ElementaryTypeName","src":"2851:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"data","nameLocation":"2891:4:3","nodeType":"VariableDeclaration","scope":329,"src":"2878:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":280,"name":"bytes","nodeType":"ElementaryTypeName","src":"2878:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"forceCall","nameLocation":"2902:9:3","nodeType":"VariableDeclaration","scope":329,"src":"2897:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":282,"name":"bool","nodeType":"ElementaryTypeName","src":"2897:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2850:62:3"},"returnParameters":{"id":285,"nodeType":"ParameterList","parameters":[],"src":"2922:0:3"},"scope":486,"src":"2820:944:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":330,"nodeType":"StructuredDocumentation","src":"3770:189:3","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."},"id":333,"mutability":"constant","name":"_ADMIN_SLOT","nameLocation":"3990:11:3","nodeType":"VariableDeclaration","scope":486,"src":"3964:106:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":331,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3964:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4004:66:3","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":345,"nodeType":"Block","src":"4185:80:3","statements":[{"expression":{"expression":{"arguments":[{"id":341,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"4240:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":339,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"4202:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1857_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4225:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1779,"src":"4202:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1753_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4202:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1753_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":343,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4253:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1752,"src":"4202:56:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":338,"id":344,"nodeType":"Return","src":"4195:63:3"}]},"documentation":{"id":334,"nodeType":"StructuredDocumentation","src":"4077:50:3","text":" @dev Returns the current admin."},"id":346,"implemented":true,"kind":"function","modifiers":[],"name":"_getAdmin","nameLocation":"4141:9:3","nodeType":"FunctionDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[],"src":"4150:2:3"},"returnParameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":346,"src":"4176:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"4176:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4175:9:3"},"scope":486,"src":"4132:133:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":371,"nodeType":"Block","src":"4392:167:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":353,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"4410:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4430:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4422:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":354,"name":"address","nodeType":"ElementaryTypeName","src":"4422:7:3","typeDescriptions":{}}},"id":357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4422:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4410:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373","id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4434:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""},"value":"ERC1967: new admin is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""}],"id":352,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4402:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4402:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":361,"nodeType":"ExpressionStatement","src":"4402:73:3"},{"expression":{"id":369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":365,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"4523:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":362,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"4485:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1857_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4508:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1779,"src":"4485:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1753_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4485:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1753_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":367,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4536:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1752,"src":"4485:56:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":368,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"4544:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4485:67:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":370,"nodeType":"ExpressionStatement","src":"4485:67:3"}]},"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"4271:71:3","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":372,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4356:9:3","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"newAdmin","nameLocation":"4374:8:3","nodeType":"VariableDeclaration","scope":372,"src":"4366:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":348,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4365:18:3"},"returnParameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"4392:0:3"},"scope":486,"src":"4347:212:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":388,"nodeType":"Block","src":"4719:86:3","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":379,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"4747:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":381,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"4760:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":378,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"4734:12:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4734:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":383,"nodeType":"EmitStatement","src":"4729:40:3"},{"expression":{"arguments":[{"id":385,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"4789:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":384,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"4779:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4779:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":387,"nodeType":"ExpressionStatement","src":"4779:19:3"}]},"documentation":{"id":373,"nodeType":"StructuredDocumentation","src":"4565:100:3","text":" @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."},"id":389,"implemented":true,"kind":"function","modifiers":[],"name":"_changeAdmin","nameLocation":"4679:12:3","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":375,"mutability":"mutable","name":"newAdmin","nameLocation":"4700:8:3","nodeType":"VariableDeclaration","scope":389,"src":"4692:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"4692:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4691:18:3"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[],"src":"4719:0:3"},"scope":486,"src":"4670:135:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":390,"nodeType":"StructuredDocumentation","src":"4811:232:3","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"id":393,"mutability":"constant","name":"_BEACON_SLOT","nameLocation":"5074:12:3","nodeType":"VariableDeclaration","scope":486,"src":"5048:107:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5048:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5089:66:3","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":405,"nodeType":"Block","src":"5272:81:3","statements":[{"expression":{"expression":{"arguments":[{"id":401,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"5327:12:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":399,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"5289:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1857_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5312:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1779,"src":"5289:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1753_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5289:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1753_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":403,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5341:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1752,"src":"5289:57:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":398,"id":404,"nodeType":"Return","src":"5282:64:3"}]},"documentation":{"id":394,"nodeType":"StructuredDocumentation","src":"5162:51:3","text":" @dev Returns the current beacon."},"id":406,"implemented":true,"kind":"function","modifiers":[],"name":"_getBeacon","nameLocation":"5227:10:3","nodeType":"FunctionDefinition","parameters":{"id":395,"nodeType":"ParameterList","parameters":[],"src":"5237:2:3"},"returnParameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":406,"src":"5263:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":396,"name":"address","nodeType":"ElementaryTypeName","src":"5263:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5262:9:3"},"scope":486,"src":"5218:135:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":441,"nodeType":"Block","src":"5482:368:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":415,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"5530:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":413,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"5500:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1705_$","typeString":"type(library AddressUpgradeable)"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5519:10:3","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1393,"src":"5500:29:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5500:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374","id":417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5542:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""},"value":"ERC1967: new beacon is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""}],"id":412,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5492:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5492:90:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":419,"nodeType":"ExpressionStatement","src":"5492:90:3"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":424,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"5662:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":423,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"5643:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$496_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$496","typeString":"contract IBeaconUpgradeable"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5673:14:3","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":495,"src":"5643:44:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":421,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"5613:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1705_$","typeString":"type(library AddressUpgradeable)"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5632:10:3","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1393,"src":"5613:29:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5613:77:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5704:50:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""},"value":"ERC1967: beacon implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""}],"id":420,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5592:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5592:172:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":431,"nodeType":"ExpressionStatement","src":"5592:172:3"},{"expression":{"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":435,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"5812:12:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":432,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"5774:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1857_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5797:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1779,"src":"5774:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1753_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5774:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1753_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":437,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5826:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1752,"src":"5774:57:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":438,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"5834:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5774:69:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":440,"nodeType":"ExpressionStatement","src":"5774:69:3"}]},"documentation":{"id":407,"nodeType":"StructuredDocumentation","src":"5359:71:3","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":442,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5444:10:3","nodeType":"FunctionDefinition","parameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"newBeacon","nameLocation":"5463:9:3","nodeType":"VariableDeclaration","scope":442,"src":"5455:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":408,"name":"address","nodeType":"ElementaryTypeName","src":"5455:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5454:19:3"},"returnParameters":{"id":411,"nodeType":"ParameterList","parameters":[],"src":"5482:0:3"},"scope":486,"src":"5435:415:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":479,"nodeType":"Block","src":"6249:239:3","statements":[{"expression":{"arguments":[{"id":453,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"6270:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":452,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"6259:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6259:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"ExpressionStatement","src":"6259:21:3"},{"eventCall":{"arguments":[{"id":457,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"6310:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":456,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"6295:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6295:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":459,"nodeType":"EmitStatement","src":"6290:30:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":460,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6334:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6339:6:3","memberName":"length","nodeType":"MemberAccess","src":"6334:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6348:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6334:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":464,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"6353:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6334:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":478,"nodeType":"IfStatement","src":"6330:152:3","trueBody":{"id":477,"nodeType":"Block","src":"6364:118:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":470,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"6437:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":469,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"6418:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$496_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6418:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$496","typeString":"contract IBeaconUpgradeable"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6448:14:3","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":495,"src":"6418:44:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6418:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":474,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6466:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":466,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"6378:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1705_$","typeString":"type(library AddressUpgradeable)"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:20:3","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1592,"src":"6378:39:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6378:93:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":476,"nodeType":"ExpressionStatement","src":"6378:93:3"}]}}]},"documentation":{"id":443,"nodeType":"StructuredDocumentation","src":"5856:292:3","text":" @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."},"id":480,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeBeaconToAndCall","nameLocation":"6162:23:3","nodeType":"FunctionDefinition","parameters":{"id":450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"mutability":"mutable","name":"newBeacon","nameLocation":"6194:9:3","nodeType":"VariableDeclaration","scope":480,"src":"6186:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":444,"name":"address","nodeType":"ElementaryTypeName","src":"6186:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":447,"mutability":"mutable","name":"data","nameLocation":"6218:4:3","nodeType":"VariableDeclaration","scope":480,"src":"6205:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":446,"name":"bytes","nodeType":"ElementaryTypeName","src":"6205:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":449,"mutability":"mutable","name":"forceCall","nameLocation":"6229:9:3","nodeType":"VariableDeclaration","scope":480,"src":"6224:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":448,"name":"bool","nodeType":"ElementaryTypeName","src":"6224:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6185:54:3"},"returnParameters":{"id":451,"nodeType":"ParameterList","parameters":[],"src":"6249:0:3"},"scope":486,"src":"6153:335:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"6494:254:3","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":485,"mutability":"mutable","name":"__gap","nameLocation":"6773:5:3","nodeType":"VariableDeclaration","scope":486,"src":"6753:25:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":482,"name":"uint256","nodeType":"ElementaryTypeName","src":"6753:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":484,"length":{"hexValue":"3530","id":483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6761:2:3","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"6753:11:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":487,"src":"609:6172:3","usedErrors":[],"usedEvents":[139,146,151,511]}],"src":"116:6666:3"},"id":3},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","exportedSymbols":{"IBeaconUpgradeable":[496]},"id":497,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":488,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"93:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeaconUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"118:79:4","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":496,"linearizedBaseContracts":[496],"name":"IBeaconUpgradeable","nameLocation":"208:18:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":490,"nodeType":"StructuredDocumentation","src":"233:162:4","text":" @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."},"functionSelector":"5c60da1b","id":495,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"409:14:4","nodeType":"FunctionDefinition","parameters":{"id":491,"nodeType":"ParameterList","parameters":[],"src":"423:2:4"},"returnParameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":495,"src":"449:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"449:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"448:9:4"},"scope":496,"src":"400:58:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":497,"src":"198:262:4","usedErrors":[],"usedEvents":[]}],"src":"93:368:4"},"id":4},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[1705],"Initializable":[665]},"id":666,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":498,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":499,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":666,"sourceUnit":1706,"src":"138:44:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":500,"nodeType":"StructuredDocumentation","src":"184:2209:5","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":665,"linearizedBaseContracts":[665],"name":"Initializable","nameLocation":"2412:13:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"2432:109:5","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":503,"mutability":"mutable","name":"_initialized","nameLocation":"2560:12:5","nodeType":"VariableDeclaration","scope":665,"src":"2546:26:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":502,"name":"uint8","nodeType":"ElementaryTypeName","src":"2546:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":504,"nodeType":"StructuredDocumentation","src":"2579:91:5","text":" @dev Indicates that the contract is in the process of being initialized."},"id":506,"mutability":"mutable","name":"_initializing","nameLocation":"2688:13:5","nodeType":"VariableDeclaration","scope":665,"src":"2675:26:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":505,"name":"bool","nodeType":"ElementaryTypeName","src":"2675:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":507,"nodeType":"StructuredDocumentation","src":"2708:90:5","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":511,"name":"Initialized","nameLocation":"2809:11:5","nodeType":"EventDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2827:7:5","nodeType":"VariableDeclaration","scope":511,"src":"2821:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":508,"name":"uint8","nodeType":"ElementaryTypeName","src":"2821:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2820:15:5"},"src":"2803:33:5"},{"body":{"id":566,"nodeType":"Block","src":"3269:483:5","statements":[{"assignments":[515],"declarations":[{"constant":false,"id":515,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3284:14:5","nodeType":"VariableDeclaration","scope":566,"src":"3279:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":514,"name":"bool","nodeType":"ElementaryTypeName","src":"3279:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":518,"initialValue":{"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3301:14:5","subExpression":{"id":516,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"3302:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3279:36:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":520,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"3347:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":521,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"3365:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3380:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3365:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3347:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":525,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3346:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3387:45:5","subExpression":{"arguments":[{"arguments":[{"id":530,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3426:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$665","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$665","typeString":"contract Initializable"}],"id":529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3418:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"3418:7:5","typeDescriptions":{}}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3418:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":526,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"3388:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1705_$","typeString":"type(library AddressUpgradeable)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3407:10:5","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1393,"src":"3388:29:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3388:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":534,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"3436:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3452:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3436:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3387:66:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":538,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3386:68:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3346:108:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3468:48:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":519,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3325:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:201:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":542,"nodeType":"ExpressionStatement","src":"3325:201:5"},{"expression":{"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":543,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"3536:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3551:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3536:16:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":546,"nodeType":"ExpressionStatement","src":"3536:16:5"},{"condition":{"id":547,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"3566:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":553,"nodeType":"IfStatement","src":"3562:65:5","trueBody":{"id":552,"nodeType":"Block","src":"3582:45:5","statements":[{"expression":{"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":548,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"3596:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3612:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3596:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":551,"nodeType":"ExpressionStatement","src":"3596:20:5"}]}},{"id":554,"nodeType":"PlaceholderStatement","src":"3636:1:5"},{"condition":{"id":555,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"3651:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":565,"nodeType":"IfStatement","src":"3647:99:5","trueBody":{"id":564,"nodeType":"Block","src":"3667:79:5","statements":[{"expression":{"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":556,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"3681:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3697:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3681:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":559,"nodeType":"ExpressionStatement","src":"3681:21:5"},{"eventCall":{"arguments":[{"hexValue":"31","id":561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3733:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":560,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"3721:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3721:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":563,"nodeType":"EmitStatement","src":"3716:19:5"}]}}]},"documentation":{"id":512,"nodeType":"StructuredDocumentation","src":"2842:399:5","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":567,"name":"initializer","nameLocation":"3255:11:5","nodeType":"ModifierDefinition","parameters":{"id":513,"nodeType":"ParameterList","parameters":[],"src":"3266:2:5"},"src":"3246:506:5","virtual":false,"visibility":"internal"},{"body":{"id":599,"nodeType":"Block","src":"4863:255:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4881:14:5","subExpression":{"id":573,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"4882:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":575,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"4899:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":576,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"4914:7:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4899:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4881:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4923:48:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":572,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4873:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:99:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":581,"nodeType":"ExpressionStatement","src":"4873:99:5"},{"expression":{"id":584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":582,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"4982:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":583,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"4997:7:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4982:22:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":585,"nodeType":"ExpressionStatement","src":"4982:22:5"},{"expression":{"id":588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":586,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"5014:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5030:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5014:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":589,"nodeType":"ExpressionStatement","src":"5014:20:5"},{"id":590,"nodeType":"PlaceholderStatement","src":"5044:1:5"},{"expression":{"id":593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":591,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"5055:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5071:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5055:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":594,"nodeType":"ExpressionStatement","src":"5055:21:5"},{"eventCall":{"arguments":[{"id":596,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"5103:7:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":595,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"5091:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":598,"nodeType":"EmitStatement","src":"5086:25:5"}]},"documentation":{"id":568,"nodeType":"StructuredDocumentation","src":"3758:1062:5","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":600,"name":"reinitializer","nameLocation":"4834:13:5","nodeType":"ModifierDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"version","nameLocation":"4854:7:5","nodeType":"VariableDeclaration","scope":600,"src":"4848:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":569,"name":"uint8","nodeType":"ElementaryTypeName","src":"4848:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4847:15:5"},"src":"4825:293:5","virtual":false,"visibility":"internal"},{"body":{"id":609,"nodeType":"Block","src":"5356:97:5","statements":[{"expression":{"arguments":[{"id":604,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"5374:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5389:45:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":603,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5366:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5366:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"ExpressionStatement","src":"5366:69:5"},{"id":608,"nodeType":"PlaceholderStatement","src":"5445:1:5"}]},"documentation":{"id":601,"nodeType":"StructuredDocumentation","src":"5124:199:5","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":610,"name":"onlyInitializing","nameLocation":"5337:16:5","nodeType":"ModifierDefinition","parameters":{"id":602,"nodeType":"ParameterList","parameters":[],"src":"5353:2:5"},"src":"5328:125:5","virtual":false,"visibility":"internal"},{"body":{"id":645,"nodeType":"Block","src":"5988:231:5","statements":[{"expression":{"arguments":[{"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6006:14:5","subExpression":{"id":615,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"6007:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6022:41:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":614,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5998:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5998:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":619,"nodeType":"ExpressionStatement","src":"5998:66:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":620,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6078:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6099:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":622,"name":"uint8","nodeType":"ElementaryTypeName","src":"6099:5:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":621,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6094:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6094:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6106:3:5","memberName":"max","nodeType":"MemberAccess","src":"6094:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6078:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":644,"nodeType":"IfStatement","src":"6074:139:5","trueBody":{"id":643,"nodeType":"Block","src":"6111:102:5","statements":[{"expression":{"id":633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":627,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6125:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6145:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":629,"name":"uint8","nodeType":"ElementaryTypeName","src":"6145:5:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":628,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6140:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6152:3:5","memberName":"max","nodeType":"MemberAccess","src":"6140:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6125:30:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":634,"nodeType":"ExpressionStatement","src":"6125:30:5"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6191:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":637,"name":"uint8","nodeType":"ElementaryTypeName","src":"6191:5:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":636,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6186:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6198:3:5","memberName":"max","nodeType":"MemberAccess","src":"6186:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":635,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"6174:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":642,"nodeType":"EmitStatement","src":"6169:33:5"}]}}]},"documentation":{"id":611,"nodeType":"StructuredDocumentation","src":"5459:475:5","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":646,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5948:20:5","nodeType":"FunctionDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[],"src":"5968:2:5"},"returnParameters":{"id":613,"nodeType":"ParameterList","parameters":[],"src":"5988:0:5"},"scope":665,"src":"5939:280:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":654,"nodeType":"Block","src":"6393:36:5","statements":[{"expression":{"id":652,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6410:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":651,"id":653,"nodeType":"Return","src":"6403:19:5"}]},"documentation":{"id":647,"nodeType":"StructuredDocumentation","src":"6225:99:5","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":655,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6338:22:5","nodeType":"FunctionDefinition","parameters":{"id":648,"nodeType":"ParameterList","parameters":[],"src":"6360:2:5"},"returnParameters":{"id":651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":655,"src":"6386:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":649,"name":"uint8","nodeType":"ElementaryTypeName","src":"6386:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6385:7:5"},"scope":665,"src":"6329:100:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":663,"nodeType":"Block","src":"6601:37:5","statements":[{"expression":{"id":661,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"6618:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":660,"id":662,"nodeType":"Return","src":"6611:20:5"}]},"documentation":{"id":656,"nodeType":"StructuredDocumentation","src":"6435:105:5","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":664,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6554:15:5","nodeType":"FunctionDefinition","parameters":{"id":657,"nodeType":"ParameterList","parameters":[],"src":"6569:2:5"},"returnParameters":{"id":660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":659,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":664,"src":"6595:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":658,"name":"bool","nodeType":"ElementaryTypeName","src":"6595:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6594:6:5"},"scope":665,"src":"6545:93:5","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":666,"src":"2394:4246:5","usedErrors":[],"usedEvents":[511]}],"src":"113:6528:5"},"id":5},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1705],"ERC1967UpgradeUpgradeable":[486],"IBeaconUpgradeable":[496],"IERC1822ProxiableUpgradeable":[162],"IERC1967Upgradeable":[152],"Initializable":[665],"StorageSlotUpgradeable":[1857],"UUPSUpgradeable":[801]},"id":802,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":667,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:6"},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":668,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":802,"sourceUnit":163,"src":"140:56:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","file":"../ERC1967/ERC1967UpgradeUpgradeable.sol","id":669,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":802,"sourceUnit":487,"src":"197:50:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":670,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":802,"sourceUnit":666,"src":"248:29:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":672,"name":"Initializable","nameLocations":["965:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":665,"src":"965:13:6"},"id":673,"nodeType":"InheritanceSpecifier","src":"965:13:6"},{"baseName":{"id":674,"name":"IERC1822ProxiableUpgradeable","nameLocations":["980:28:6"],"nodeType":"IdentifierPath","referencedDeclaration":162,"src":"980:28:6"},"id":675,"nodeType":"InheritanceSpecifier","src":"980:28:6"},{"baseName":{"id":676,"name":"ERC1967UpgradeUpgradeable","nameLocations":["1010:25:6"],"nodeType":"IdentifierPath","referencedDeclaration":486,"src":"1010:25:6"},"id":677,"nodeType":"InheritanceSpecifier","src":"1010:25:6"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"279:648:6","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"},"fullyImplemented":false,"id":801,"linearizedBaseContracts":[801,486,152,162,665],"name":"UUPSUpgradeable","nameLocation":"946:15:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":682,"nodeType":"Block","src":"1102:7:6","statements":[]},"id":683,"implemented":true,"kind":"function","modifiers":[{"id":680,"kind":"modifierInvocation","modifierName":{"id":679,"name":"onlyInitializing","nameLocations":["1085:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"1085:16:6"},"nodeType":"ModifierInvocation","src":"1085:16:6"}],"name":"__UUPSUpgradeable_init","nameLocation":"1051:22:6","nodeType":"FunctionDefinition","parameters":{"id":678,"nodeType":"ParameterList","parameters":[],"src":"1073:2:6"},"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"1102:0:6"},"scope":801,"src":"1042:67:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":688,"nodeType":"Block","src":"1185:7:6","statements":[]},"id":689,"implemented":true,"kind":"function","modifiers":[{"id":686,"kind":"modifierInvocation","modifierName":{"id":685,"name":"onlyInitializing","nameLocations":["1168:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"1168:16:6"},"nodeType":"ModifierInvocation","src":"1168:16:6"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"1124:32:6","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[],"src":"1156:2:6"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"1185:0:6"},"scope":801,"src":"1115:77:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":690,"nodeType":"StructuredDocumentation","src":"1197:87:6","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"id":696,"mutability":"immutable","name":"__self","nameLocation":"1315:6:6","nodeType":"VariableDeclaration","scope":801,"src":"1289:48:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":694,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1332:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$801","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$801","typeString":"contract UUPSUpgradeable"}],"id":693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1324:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"1324:7:6","typeDescriptions":{}}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1324:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":718,"nodeType":"Block","src":"1863:205:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":702,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1889:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$801","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$801","typeString":"contract UUPSUpgradeable"}],"id":701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1881:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:6","typeDescriptions":{}}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1881:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":704,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"1898:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1881:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1906:46:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""},"value":"Function must be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""}],"id":699,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1873:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1873:80:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":708,"nodeType":"ExpressionStatement","src":"1873:80:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":710,"name":"_getImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"1971:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1971:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":712,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"1995:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1971:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879","id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2003:46:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""},"value":"Function must be called through active proxy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""}],"id":709,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1963:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1963:87:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":716,"nodeType":"ExpressionStatement","src":"1963:87:6"},{"id":717,"nodeType":"PlaceholderStatement","src":"2060:1:6"}]},"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"1344:493:6","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":719,"name":"onlyProxy","nameLocation":"1851:9:6","nodeType":"ModifierDefinition","parameters":{"id":698,"nodeType":"ParameterList","parameters":[],"src":"1860:2:6"},"src":"1842:226:6","virtual":false,"visibility":"internal"},{"body":{"id":733,"nodeType":"Block","src":"2298:120:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":725,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2324:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$801","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$801","typeString":"contract UUPSUpgradeable"}],"id":724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2316:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:6","typeDescriptions":{}}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":727,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"2333:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2316:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2341:58:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""},"value":"UUPSUpgradeable: must not be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""}],"id":722,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2308:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2308:92:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":731,"nodeType":"ExpressionStatement","src":"2308:92:6"},{"id":732,"nodeType":"PlaceholderStatement","src":"2410:1:6"}]},"documentation":{"id":720,"nodeType":"StructuredDocumentation","src":"2074:195:6","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":734,"name":"notDelegated","nameLocation":"2283:12:6","nodeType":"ModifierDefinition","parameters":{"id":721,"nodeType":"ParameterList","parameters":[],"src":"2295:2:6"},"src":"2274:144:6","virtual":false,"visibility":"internal"},{"baseFunctions":[161],"body":{"id":745,"nodeType":"Block","src":"3093:44:6","statements":[{"expression":{"id":743,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"3110:20:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":742,"id":744,"nodeType":"Return","src":"3103:27:6"}]},"documentation":{"id":735,"nodeType":"StructuredDocumentation","src":"2424:577:6","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":746,"implemented":true,"kind":"function","modifiers":[{"id":739,"kind":"modifierInvocation","modifierName":{"id":738,"name":"notDelegated","nameLocations":["3062:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":734,"src":"3062:12:6"},"nodeType":"ModifierInvocation","src":"3062:12:6"}],"name":"proxiableUUID","nameLocation":"3015:13:6","nodeType":"FunctionDefinition","overrides":{"id":737,"nodeType":"OverrideSpecifier","overrides":[],"src":"3053:8:6"},"parameters":{"id":736,"nodeType":"ParameterList","parameters":[],"src":"3028:2:6"},"returnParameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":746,"src":"3084:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":740,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3084:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3083:9:6"},"scope":801,"src":"3006:131:6","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":767,"nodeType":"Block","src":"3458:124:6","statements":[{"expression":{"arguments":[{"id":755,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"3486:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":754,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"3468:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3468:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":757,"nodeType":"ExpressionStatement","src":"3468:36:6"},{"expression":{"arguments":[{"id":759,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"3536:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3565:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3555:9:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":760,"name":"bytes","nodeType":"ElementaryTypeName","src":"3559:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3555:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3569:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":758,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"3514:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3514:61:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":766,"nodeType":"ExpressionStatement","src":"3514:61:6"}]},"documentation":{"id":747,"nodeType":"StructuredDocumentation","src":"3143:239:6","text":" @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"3659cfe6","id":768,"implemented":true,"kind":"function","modifiers":[{"id":752,"kind":"modifierInvocation","modifierName":{"id":751,"name":"onlyProxy","nameLocations":["3448:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":719,"src":"3448:9:6"},"nodeType":"ModifierInvocation","src":"3448:9:6"}],"name":"upgradeTo","nameLocation":"3396:9:6","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":749,"mutability":"mutable","name":"newImplementation","nameLocation":"3414:17:6","nodeType":"VariableDeclaration","scope":768,"src":"3406:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":748,"name":"address","nodeType":"ElementaryTypeName","src":"3406:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3405:27:6"},"returnParameters":{"id":753,"nodeType":"ParameterList","parameters":[],"src":"3458:0:6"},"scope":801,"src":"3387:195:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":788,"nodeType":"Block","src":"4006:115:6","statements":[{"expression":{"arguments":[{"id":779,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"4034:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":778,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"4016:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4016:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":781,"nodeType":"ExpressionStatement","src":"4016:36:6"},{"expression":{"arguments":[{"id":783,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"4084:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":784,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"4103:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"74727565","id":785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4109:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":782,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"4062:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4062:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":787,"nodeType":"ExpressionStatement","src":"4062:52:6"}]},"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"3588:308:6","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":789,"implemented":true,"kind":"function","modifiers":[{"id":776,"kind":"modifierInvocation","modifierName":{"id":775,"name":"onlyProxy","nameLocations":["3996:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":719,"src":"3996:9:6"},"nodeType":"ModifierInvocation","src":"3996:9:6"}],"name":"upgradeToAndCall","nameLocation":"3910:16:6","nodeType":"FunctionDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"newImplementation","nameLocation":"3935:17:6","nodeType":"VariableDeclaration","scope":789,"src":"3927:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"3927:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":773,"mutability":"mutable","name":"data","nameLocation":"3967:4:6","nodeType":"VariableDeclaration","scope":789,"src":"3954:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":772,"name":"bytes","nodeType":"ElementaryTypeName","src":"3954:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3926:46:6"},"returnParameters":{"id":777,"nodeType":"ParameterList","parameters":[],"src":"4006:0:6"},"scope":801,"src":"3901:220:6","stateMutability":"payable","virtual":true,"visibility":"public"},{"documentation":{"id":790,"nodeType":"StructuredDocumentation","src":"4127:397:6","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"},"id":795,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"4538:17:6","nodeType":"FunctionDefinition","parameters":{"id":793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"mutability":"mutable","name":"newImplementation","nameLocation":"4564:17:6","nodeType":"VariableDeclaration","scope":795,"src":"4556:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":791,"name":"address","nodeType":"ElementaryTypeName","src":"4556:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4555:27:6"},"returnParameters":{"id":794,"nodeType":"ParameterList","parameters":[],"src":"4599:0:6"},"scope":801,"src":"4529:71:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":796,"nodeType":"StructuredDocumentation","src":"4606:254:6","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":800,"mutability":"mutable","name":"__gap","nameLocation":"4885:5:6","nodeType":"VariableDeclaration","scope":801,"src":"4865:25:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":797,"name":"uint256","nodeType":"ElementaryTypeName","src":"4865:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":799,"length":{"hexValue":"3530","id":798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4873:2:6","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"4865:11:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":802,"src":"928:3965:6","usedErrors":[],"usedEvents":[139,146,151,511]}],"src":"115:4779:6"},"id":6},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1705],"Initializable":[665],"ReentrancyGuardUpgradeable":[885]},"id":886,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":803,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:7"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":804,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":886,"sourceUnit":666,"src":"136:42:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":806,"name":"Initializable","nameLocations":["979:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":665,"src":"979:13:7"},"id":807,"nodeType":"InheritanceSpecifier","src":"979:13:7"}],"canonicalName":"ReentrancyGuardUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":805,"nodeType":"StructuredDocumentation","src":"180:750:7","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":885,"linearizedBaseContracts":[885,665],"name":"ReentrancyGuardUpgradeable","nameLocation":"949:26:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":810,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1772:12:7","nodeType":"VariableDeclaration","scope":885,"src":"1747:41:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":808,"name":"uint256","nodeType":"ElementaryTypeName","src":"1747:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1787:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":813,"mutability":"constant","name":"_ENTERED","nameLocation":"1819:8:7","nodeType":"VariableDeclaration","scope":885,"src":"1794:37:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":811,"name":"uint256","nodeType":"ElementaryTypeName","src":"1794:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1830:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":815,"mutability":"mutable","name":"_status","nameLocation":"1854:7:7","nodeType":"VariableDeclaration","scope":885,"src":"1838:23:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":814,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":823,"nodeType":"Block","src":"1928:51:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":820,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"1938:32:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1938:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":822,"nodeType":"ExpressionStatement","src":"1938:34:7"}]},"id":824,"implemented":true,"kind":"function","modifiers":[{"id":818,"kind":"modifierInvocation","modifierName":{"id":817,"name":"onlyInitializing","nameLocations":["1911:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"1911:16:7"},"nodeType":"ModifierInvocation","src":"1911:16:7"}],"name":"__ReentrancyGuard_init","nameLocation":"1877:22:7","nodeType":"FunctionDefinition","parameters":{"id":816,"nodeType":"ParameterList","parameters":[],"src":"1899:2:7"},"returnParameters":{"id":819,"nodeType":"ParameterList","parameters":[],"src":"1928:0:7"},"scope":885,"src":"1868:111:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":833,"nodeType":"Block","src":"2055:39:7","statements":[{"expression":{"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":829,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"2065:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":830,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"2075:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2065:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":832,"nodeType":"ExpressionStatement","src":"2065:22:7"}]},"id":834,"implemented":true,"kind":"function","modifiers":[{"id":827,"kind":"modifierInvocation","modifierName":{"id":826,"name":"onlyInitializing","nameLocations":["2038:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"2038:16:7"},"nodeType":"ModifierInvocation","src":"2038:16:7"}],"name":"__ReentrancyGuard_init_unchained","nameLocation":"1994:32:7","nodeType":"FunctionDefinition","parameters":{"id":825,"nodeType":"ParameterList","parameters":[],"src":"2026:2:7"},"returnParameters":{"id":828,"nodeType":"ParameterList","parameters":[],"src":"2055:0:7"},"scope":885,"src":"1985:109:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":844,"nodeType":"Block","src":"2495:79:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":837,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"2505:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2505:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":839,"nodeType":"ExpressionStatement","src":"2505:21:7"},{"id":840,"nodeType":"PlaceholderStatement","src":"2536:1:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":841,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"2547:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2547:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":843,"nodeType":"ExpressionStatement","src":"2547:20:7"}]},"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"2100:366:7","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":845,"name":"nonReentrant","nameLocation":"2480:12:7","nodeType":"ModifierDefinition","parameters":{"id":836,"nodeType":"ParameterList","parameters":[],"src":"2492:2:7"},"src":"2471:103:7","virtual":false,"visibility":"internal"},{"body":{"id":859,"nodeType":"Block","src":"2619:248:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":849,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"2712:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":850,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"2723:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2712:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2733:33:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":848,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2704:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2704:63:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":854,"nodeType":"ExpressionStatement","src":"2704:63:7"},{"expression":{"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":855,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"2842:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":856,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"2852:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":858,"nodeType":"ExpressionStatement","src":"2842:18:7"}]},"id":860,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2589:19:7","nodeType":"FunctionDefinition","parameters":{"id":846,"nodeType":"ParameterList","parameters":[],"src":"2608:2:7"},"returnParameters":{"id":847,"nodeType":"ParameterList","parameters":[],"src":"2619:0:7"},"scope":885,"src":"2580:287:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":867,"nodeType":"Block","src":"2911:171:7","statements":[{"expression":{"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":863,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"3053:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":864,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"3063:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3053:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":866,"nodeType":"ExpressionStatement","src":"3053:22:7"}]},"id":868,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2882:18:7","nodeType":"FunctionDefinition","parameters":{"id":861,"nodeType":"ParameterList","parameters":[],"src":"2900:2:7"},"returnParameters":{"id":862,"nodeType":"ParameterList","parameters":[],"src":"2911:0:7"},"scope":885,"src":"2873:209:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":878,"nodeType":"Block","src":"3325:43:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":874,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"3342:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":875,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"3353:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3342:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":873,"id":877,"nodeType":"Return","src":"3335:26:7"}]},"documentation":{"id":869,"nodeType":"StructuredDocumentation","src":"3088:168:7","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":879,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3270:23:7","nodeType":"FunctionDefinition","parameters":{"id":870,"nodeType":"ParameterList","parameters":[],"src":"3293:2:7"},"returnParameters":{"id":873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":879,"src":"3319:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":871,"name":"bool","nodeType":"ElementaryTypeName","src":"3319:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3318:6:7"},"scope":885,"src":"3261:107:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":880,"nodeType":"StructuredDocumentation","src":"3374:254:7","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":884,"mutability":"mutable","name":"__gap","nameLocation":"3653:5:7","nodeType":"VariableDeclaration","scope":885,"src":"3633:25:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":881,"name":"uint256","nodeType":"ElementaryTypeName","src":"3633:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":883,"length":{"hexValue":"3439","id":882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3641:2:7","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3633:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":886,"src":"931:2730:7","usedErrors":[],"usedEvents":[511]}],"src":"112:3550:7"},"id":7},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","exportedSymbols":{"IERC20Upgradeable":[963]},"id":964,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":887,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":888,"nodeType":"StructuredDocumentation","src":"131:70:8","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":963,"linearizedBaseContracts":[963],"name":"IERC20Upgradeable","nameLocation":"212:17:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":889,"nodeType":"StructuredDocumentation","src":"236:158:8","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":897,"name":"Transfer","nameLocation":"405:8:8","nodeType":"EventDefinition","parameters":{"id":896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"430:4:8","nodeType":"VariableDeclaration","scope":897,"src":"414:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":890,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":893,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"452:2:8","nodeType":"VariableDeclaration","scope":897,"src":"436:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":892,"name":"address","nodeType":"ElementaryTypeName","src":"436:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":895,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"464:5:8","nodeType":"VariableDeclaration","scope":897,"src":"456:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":894,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"413:57:8"},"src":"399:72:8"},{"anonymous":false,"documentation":{"id":898,"nodeType":"StructuredDocumentation","src":"477:148:8","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":906,"name":"Approval","nameLocation":"636:8:8","nodeType":"EventDefinition","parameters":{"id":905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"661:5:8","nodeType":"VariableDeclaration","scope":906,"src":"645:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":899,"name":"address","nodeType":"ElementaryTypeName","src":"645:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":902,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"684:7:8","nodeType":"VariableDeclaration","scope":906,"src":"668:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"668:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":904,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"701:5:8","nodeType":"VariableDeclaration","scope":906,"src":"693:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":903,"name":"uint256","nodeType":"ElementaryTypeName","src":"693:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"644:63:8"},"src":"630:78:8"},{"documentation":{"id":907,"nodeType":"StructuredDocumentation","src":"714:66:8","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":912,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"794:11:8","nodeType":"FunctionDefinition","parameters":{"id":908,"nodeType":"ParameterList","parameters":[],"src":"805:2:8"},"returnParameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":912,"src":"831:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":909,"name":"uint256","nodeType":"ElementaryTypeName","src":"831:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"830:9:8"},"scope":963,"src":"785:55:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":913,"nodeType":"StructuredDocumentation","src":"846:72:8","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":920,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"932:9:8","nodeType":"FunctionDefinition","parameters":{"id":916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":915,"mutability":"mutable","name":"account","nameLocation":"950:7:8","nodeType":"VariableDeclaration","scope":920,"src":"942:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":914,"name":"address","nodeType":"ElementaryTypeName","src":"942:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"941:17:8"},"returnParameters":{"id":919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":920,"src":"982:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":917,"name":"uint256","nodeType":"ElementaryTypeName","src":"982:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"981:9:8"},"scope":963,"src":"923:68:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":921,"nodeType":"StructuredDocumentation","src":"997:202:8","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":930,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:8","nodeType":"FunctionDefinition","parameters":{"id":926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":923,"mutability":"mutable","name":"to","nameLocation":"1230:2:8","nodeType":"VariableDeclaration","scope":930,"src":"1222:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":922,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":925,"mutability":"mutable","name":"amount","nameLocation":"1242:6:8","nodeType":"VariableDeclaration","scope":930,"src":"1234:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":924,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:28:8"},"returnParameters":{"id":929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":930,"src":"1268:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":927,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:8"},"scope":963,"src":"1204:70:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":931,"nodeType":"StructuredDocumentation","src":"1280:264:8","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":940,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:8","nodeType":"FunctionDefinition","parameters":{"id":936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":933,"mutability":"mutable","name":"owner","nameLocation":"1576:5:8","nodeType":"VariableDeclaration","scope":940,"src":"1568:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":932,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":935,"mutability":"mutable","name":"spender","nameLocation":"1591:7:8","nodeType":"VariableDeclaration","scope":940,"src":"1583:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:8"},"returnParameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":940,"src":"1623:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":937,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:8"},"scope":963,"src":"1549:83:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":941,"nodeType":"StructuredDocumentation","src":"1638:642:8","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":950,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2294:7:8","nodeType":"FunctionDefinition","parameters":{"id":946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"spender","nameLocation":"2310:7:8","nodeType":"VariableDeclaration","scope":950,"src":"2302:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":942,"name":"address","nodeType":"ElementaryTypeName","src":"2302:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":945,"mutability":"mutable","name":"amount","nameLocation":"2327:6:8","nodeType":"VariableDeclaration","scope":950,"src":"2319:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":944,"name":"uint256","nodeType":"ElementaryTypeName","src":"2319:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:33:8"},"returnParameters":{"id":949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":950,"src":"2353:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":947,"name":"bool","nodeType":"ElementaryTypeName","src":"2353:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2352:6:8"},"scope":963,"src":"2285:74:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":951,"nodeType":"StructuredDocumentation","src":"2365:287:8","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":962,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2666:12:8","nodeType":"FunctionDefinition","parameters":{"id":958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"from","nameLocation":"2687:4:8","nodeType":"VariableDeclaration","scope":962,"src":"2679:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":955,"mutability":"mutable","name":"to","nameLocation":"2701:2:8","nodeType":"VariableDeclaration","scope":962,"src":"2693:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":954,"name":"address","nodeType":"ElementaryTypeName","src":"2693:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":957,"mutability":"mutable","name":"amount","nameLocation":"2713:6:8","nodeType":"VariableDeclaration","scope":962,"src":"2705:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":956,"name":"uint256","nodeType":"ElementaryTypeName","src":"2705:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2678:42:8"},"returnParameters":{"id":961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":962,"src":"2739:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":959,"name":"bool","nodeType":"ElementaryTypeName","src":"2739:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2738:6:8"},"scope":963,"src":"2657:88:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":964,"src":"202:2545:8","usedErrors":[],"usedEvents":[897,906]}],"src":"106:2642:8"},"id":8},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol","exportedSymbols":{"IERC20PermitUpgradeable":[999]},"id":1000,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":965,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20PermitUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":966,"nodeType":"StructuredDocumentation","src":"148:480:9","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":999,"linearizedBaseContracts":[999],"name":"IERC20PermitUpgradeable","nameLocation":"639:23:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":967,"nodeType":"StructuredDocumentation","src":"669:792:9","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":984,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1475:6:9","nodeType":"FunctionDefinition","parameters":{"id":982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":969,"mutability":"mutable","name":"owner","nameLocation":"1499:5:9","nodeType":"VariableDeclaration","scope":984,"src":"1491:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":968,"name":"address","nodeType":"ElementaryTypeName","src":"1491:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":971,"mutability":"mutable","name":"spender","nameLocation":"1522:7:9","nodeType":"VariableDeclaration","scope":984,"src":"1514:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":970,"name":"address","nodeType":"ElementaryTypeName","src":"1514:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":973,"mutability":"mutable","name":"value","nameLocation":"1547:5:9","nodeType":"VariableDeclaration","scope":984,"src":"1539:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":972,"name":"uint256","nodeType":"ElementaryTypeName","src":"1539:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":975,"mutability":"mutable","name":"deadline","nameLocation":"1570:8:9","nodeType":"VariableDeclaration","scope":984,"src":"1562:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":974,"name":"uint256","nodeType":"ElementaryTypeName","src":"1562:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":977,"mutability":"mutable","name":"v","nameLocation":"1594:1:9","nodeType":"VariableDeclaration","scope":984,"src":"1588:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":976,"name":"uint8","nodeType":"ElementaryTypeName","src":"1588:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":979,"mutability":"mutable","name":"r","nameLocation":"1613:1:9","nodeType":"VariableDeclaration","scope":984,"src":"1605:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":978,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1605:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":981,"mutability":"mutable","name":"s","nameLocation":"1632:1:9","nodeType":"VariableDeclaration","scope":984,"src":"1624:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":980,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1624:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1481:158:9"},"returnParameters":{"id":983,"nodeType":"ParameterList","parameters":[],"src":"1648:0:9"},"scope":999,"src":"1466:183:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":985,"nodeType":"StructuredDocumentation","src":"1655:294:9","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":992,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1963:6:9","nodeType":"FunctionDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":987,"mutability":"mutable","name":"owner","nameLocation":"1978:5:9","nodeType":"VariableDeclaration","scope":992,"src":"1970:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":986,"name":"address","nodeType":"ElementaryTypeName","src":"1970:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1969:15:9"},"returnParameters":{"id":991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":992,"src":"2008:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":989,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2007:9:9"},"scope":999,"src":"1954:63:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":993,"nodeType":"StructuredDocumentation","src":"2023:128:9","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":998,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2218:16:9","nodeType":"FunctionDefinition","parameters":{"id":994,"nodeType":"ParameterList","parameters":[],"src":"2234:2:9"},"returnParameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":998,"src":"2260:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":995,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2260:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2259:9:9"},"scope":999,"src":"2209:60:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1000,"src":"629:1642:9","usedErrors":[],"usedEvents":[]}],"src":"123:2149:9"},"id":9},"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1705],"IERC20PermitUpgradeable":[999],"IERC20Upgradeable":[963],"SafeERC20Upgradeable":[1375]},"id":1376,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1001,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:10"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"../IERC20Upgradeable.sol","id":1002,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1376,"sourceUnit":964,"src":"140:34:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol","file":"../extensions/IERC20PermitUpgradeable.sol","id":1003,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1376,"sourceUnit":1000,"src":"175:51:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../../utils/AddressUpgradeable.sol","id":1004,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1376,"sourceUnit":1706,"src":"227:47:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20Upgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1005,"nodeType":"StructuredDocumentation","src":"276:457:10","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1375,"linearizedBaseContracts":[1375],"name":"SafeERC20Upgradeable","nameLocation":"742:20:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1008,"libraryName":{"id":1006,"name":"AddressUpgradeable","nameLocations":["775:18:10"],"nodeType":"IdentifierPath","referencedDeclaration":1705,"src":"775:18:10"},"nodeType":"UsingForDirective","src":"769:37:10","typeName":{"id":1007,"name":"address","nodeType":"ElementaryTypeName","src":"798:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":1031,"nodeType":"Block","src":"1079:103:10","statements":[{"expression":{"arguments":[{"id":1020,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"1109:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},{"arguments":[{"expression":{"expression":{"id":1023,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"1139:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1145:8:10","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":930,"src":"1139:14:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1154:8:10","memberName":"selector","nodeType":"MemberAccess","src":"1139:23:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1026,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"1164:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"1168:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1021,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1116:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1120:18:10","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1116:22:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1116:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1019,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"1089:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$963_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1089:86:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1030,"nodeType":"ExpressionStatement","src":"1089:86:10"}]},"documentation":{"id":1009,"nodeType":"StructuredDocumentation","src":"812:179:10","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1032,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1005:12:10","nodeType":"FunctionDefinition","parameters":{"id":1017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1012,"mutability":"mutable","name":"token","nameLocation":"1036:5:10","nodeType":"VariableDeclaration","scope":1032,"src":"1018:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"},"typeName":{"id":1011,"nodeType":"UserDefinedTypeName","pathNode":{"id":1010,"name":"IERC20Upgradeable","nameLocations":["1018:17:10"],"nodeType":"IdentifierPath","referencedDeclaration":963,"src":"1018:17:10"},"referencedDeclaration":963,"src":"1018:17:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":1014,"mutability":"mutable","name":"to","nameLocation":"1051:2:10","nodeType":"VariableDeclaration","scope":1032,"src":"1043:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1013,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1016,"mutability":"mutable","name":"value","nameLocation":"1063:5:10","nodeType":"VariableDeclaration","scope":1032,"src":"1055:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1015,"name":"uint256","nodeType":"ElementaryTypeName","src":"1055:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:52:10"},"returnParameters":{"id":1018,"nodeType":"ParameterList","parameters":[],"src":"1079:0:10"},"scope":1375,"src":"996:186:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1058,"nodeType":"Block","src":"1522:113:10","statements":[{"expression":{"arguments":[{"id":1046,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"1552:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},{"arguments":[{"expression":{"expression":{"id":1049,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"1582:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1588:12:10","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":962,"src":"1582:18:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1601:8:10","memberName":"selector","nodeType":"MemberAccess","src":"1582:27:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1052,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"1611:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1053,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"1617:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"1621:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1047,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1559:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1563:18:10","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1559:22:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1559:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1045,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"1532:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$963_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1532:96:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1057,"nodeType":"ExpressionStatement","src":"1532:96:10"}]},"documentation":{"id":1033,"nodeType":"StructuredDocumentation","src":"1188:228:10","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1059,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1430:16:10","nodeType":"FunctionDefinition","parameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1036,"mutability":"mutable","name":"token","nameLocation":"1465:5:10","nodeType":"VariableDeclaration","scope":1059,"src":"1447:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"},"typeName":{"id":1035,"nodeType":"UserDefinedTypeName","pathNode":{"id":1034,"name":"IERC20Upgradeable","nameLocations":["1447:17:10"],"nodeType":"IdentifierPath","referencedDeclaration":963,"src":"1447:17:10"},"referencedDeclaration":963,"src":"1447:17:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":1038,"mutability":"mutable","name":"from","nameLocation":"1480:4:10","nodeType":"VariableDeclaration","scope":1059,"src":"1472:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"1472:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1040,"mutability":"mutable","name":"to","nameLocation":"1494:2:10","nodeType":"VariableDeclaration","scope":1059,"src":"1486:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1039,"name":"address","nodeType":"ElementaryTypeName","src":"1486:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1042,"mutability":"mutable","name":"value","nameLocation":"1506:5:10","nodeType":"VariableDeclaration","scope":1059,"src":"1498:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1041,"name":"uint256","nodeType":"ElementaryTypeName","src":"1498:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1446:66:10"},"returnParameters":{"id":1044,"nodeType":"ParameterList","parameters":[],"src":"1522:0:10"},"scope":1375,"src":"1421:214:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1102,"nodeType":"Block","src":"1982:497:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"2231:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2240:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2231:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1074,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2230:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1079,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2271:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$1375","typeString":"library SafeERC20Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$1375","typeString":"library SafeERC20Upgradeable"}],"id":1078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2263:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1077,"name":"address","nodeType":"ElementaryTypeName","src":"2263:7:10","typeDescriptions":{}}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1081,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"2278:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1075,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"2247:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2253:9:10","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":940,"src":"2247:15:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2247:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2290:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2247:44:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1085,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2246:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2230:62:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":1087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2306:56:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":1070,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2209:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2209:163:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1089,"nodeType":"ExpressionStatement","src":"2209:163:10"},{"expression":{"arguments":[{"id":1091,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"2402:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},{"arguments":[{"expression":{"expression":{"id":1094,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"2432:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2438:7:10","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":950,"src":"2432:13:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2446:8:10","memberName":"selector","nodeType":"MemberAccess","src":"2432:22:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1097,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"2456:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"2465:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1092,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2409:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2413:18:10","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2409:22:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2409:62:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1090,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"2382:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$963_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2382:90:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1101,"nodeType":"ExpressionStatement","src":"2382:90:10"}]},"documentation":{"id":1060,"nodeType":"StructuredDocumentation","src":"1641:249:10","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":1103,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1904:11:10","nodeType":"FunctionDefinition","parameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"token","nameLocation":"1934:5:10","nodeType":"VariableDeclaration","scope":1103,"src":"1916:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"},"typeName":{"id":1062,"nodeType":"UserDefinedTypeName","pathNode":{"id":1061,"name":"IERC20Upgradeable","nameLocations":["1916:17:10"],"nodeType":"IdentifierPath","referencedDeclaration":963,"src":"1916:17:10"},"referencedDeclaration":963,"src":"1916:17:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":1065,"mutability":"mutable","name":"spender","nameLocation":"1949:7:10","nodeType":"VariableDeclaration","scope":1103,"src":"1941:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1064,"name":"address","nodeType":"ElementaryTypeName","src":"1941:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"value","nameLocation":"1966:5:10","nodeType":"VariableDeclaration","scope":1103,"src":"1958:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"1958:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1915:57:10"},"returnParameters":{"id":1069,"nodeType":"ParameterList","parameters":[],"src":"1982:0:10"},"scope":1375,"src":"1895:584:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1139,"nodeType":"Block","src":"2767:194:10","statements":[{"assignments":[1115],"declarations":[{"constant":false,"id":1115,"mutability":"mutable","name":"oldAllowance","nameLocation":"2785:12:10","nodeType":"VariableDeclaration","scope":1139,"src":"2777:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1114,"name":"uint256","nodeType":"ElementaryTypeName","src":"2777:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1124,"initialValue":{"arguments":[{"arguments":[{"id":1120,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2824:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$1375","typeString":"library SafeERC20Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$1375","typeString":"library SafeERC20Upgradeable"}],"id":1119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2816:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1118,"name":"address","nodeType":"ElementaryTypeName","src":"2816:7:10","typeDescriptions":{}}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2816:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1122,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"2831:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1116,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"2800:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2806:9:10","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":940,"src":"2800:15:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2800:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2777:62:10"},{"expression":{"arguments":[{"id":1126,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"2869:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},{"arguments":[{"expression":{"expression":{"id":1129,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"2899:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2905:7:10","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":950,"src":"2899:13:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2913:8:10","memberName":"selector","nodeType":"MemberAccess","src":"2899:22:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1132,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"2923:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1133,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"2932:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"2947:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2932:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1127,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2876:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2880:18:10","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2876:22:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2876:77:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1125,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"2849:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$963_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2849:105:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1138,"nodeType":"ExpressionStatement","src":"2849:105:10"}]},"documentation":{"id":1104,"nodeType":"StructuredDocumentation","src":"2485:180:10","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1140,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2679:21:10","nodeType":"FunctionDefinition","parameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1107,"mutability":"mutable","name":"token","nameLocation":"2719:5:10","nodeType":"VariableDeclaration","scope":1140,"src":"2701:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"},"typeName":{"id":1106,"nodeType":"UserDefinedTypeName","pathNode":{"id":1105,"name":"IERC20Upgradeable","nameLocations":["2701:17:10"],"nodeType":"IdentifierPath","referencedDeclaration":963,"src":"2701:17:10"},"referencedDeclaration":963,"src":"2701:17:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":1109,"mutability":"mutable","name":"spender","nameLocation":"2734:7:10","nodeType":"VariableDeclaration","scope":1140,"src":"2726:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1108,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1111,"mutability":"mutable","name":"value","nameLocation":"2751:5:10","nodeType":"VariableDeclaration","scope":1140,"src":"2743:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1110,"name":"uint256","nodeType":"ElementaryTypeName","src":"2743:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2700:57:10"},"returnParameters":{"id":1113,"nodeType":"ParameterList","parameters":[],"src":"2767:0:10"},"scope":1375,"src":"2670:291:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1184,"nodeType":"Block","src":"3249:321:10","statements":[{"id":1183,"nodeType":"UncheckedBlock","src":"3259:305:10","statements":[{"assignments":[1152],"declarations":[{"constant":false,"id":1152,"mutability":"mutable","name":"oldAllowance","nameLocation":"3291:12:10","nodeType":"VariableDeclaration","scope":1183,"src":"3283:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1151,"name":"uint256","nodeType":"ElementaryTypeName","src":"3283:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1161,"initialValue":{"arguments":[{"arguments":[{"id":1157,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3330:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$1375","typeString":"library SafeERC20Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$1375","typeString":"library SafeERC20Upgradeable"}],"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3322:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1155,"name":"address","nodeType":"ElementaryTypeName","src":"3322:7:10","typeDescriptions":{}}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3322:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1159,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"3337:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1153,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"3306:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3312:9:10","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":940,"src":"3306:15:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3306:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3283:62:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1163,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"3367:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"3383:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3367:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3390:43:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":1162,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3359:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:75:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1168,"nodeType":"ExpressionStatement","src":"3359:75:10"},{"expression":{"arguments":[{"id":1170,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"3468:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},{"arguments":[{"expression":{"expression":{"id":1173,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"3498:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3504:7:10","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":950,"src":"3498:13:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3512:8:10","memberName":"selector","nodeType":"MemberAccess","src":"3498:22:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1176,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"3522:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1177,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"3531:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"3546:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3531:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1171,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3475:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3479:18:10","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3475:22:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3475:77:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1169,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"3448:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$963_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3448:105:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1182,"nodeType":"ExpressionStatement","src":"3448:105:10"}]}]},"documentation":{"id":1141,"nodeType":"StructuredDocumentation","src":"2967:180:10","text":" @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1185,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3161:21:10","nodeType":"FunctionDefinition","parameters":{"id":1149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1144,"mutability":"mutable","name":"token","nameLocation":"3201:5:10","nodeType":"VariableDeclaration","scope":1185,"src":"3183:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"},"typeName":{"id":1143,"nodeType":"UserDefinedTypeName","pathNode":{"id":1142,"name":"IERC20Upgradeable","nameLocations":["3183:17:10"],"nodeType":"IdentifierPath","referencedDeclaration":963,"src":"3183:17:10"},"referencedDeclaration":963,"src":"3183:17:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":1146,"mutability":"mutable","name":"spender","nameLocation":"3216:7:10","nodeType":"VariableDeclaration","scope":1185,"src":"3208:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1145,"name":"address","nodeType":"ElementaryTypeName","src":"3208:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1148,"mutability":"mutable","name":"value","nameLocation":"3233:5:10","nodeType":"VariableDeclaration","scope":1185,"src":"3225:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1147,"name":"uint256","nodeType":"ElementaryTypeName","src":"3225:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3182:57:10"},"returnParameters":{"id":1150,"nodeType":"ParameterList","parameters":[],"src":"3249:0:10"},"scope":1375,"src":"3152:418:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1231,"nodeType":"Block","src":"3977:333:10","statements":[{"assignments":[1197],"declarations":[{"constant":false,"id":1197,"mutability":"mutable","name":"approvalCall","nameLocation":"4000:12:10","nodeType":"VariableDeclaration","scope":1231,"src":"3987:25:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1196,"name":"bytes","nodeType":"ElementaryTypeName","src":"3987:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1206,"initialValue":{"arguments":[{"expression":{"expression":{"id":1200,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"4038:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4044:7:10","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":950,"src":"4038:13:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4052:8:10","memberName":"selector","nodeType":"MemberAccess","src":"4038:22:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1203,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"4062:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"4071:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1198,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4015:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4019:18:10","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4015:22:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4015:62:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3987:90:10"},{"condition":{"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4092:45:10","subExpression":{"arguments":[{"id":1208,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"4117:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},{"id":1209,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"4124:12:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1207,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"4093:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$963_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20Upgradeable,bytes memory) returns (bool)"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4093:44:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1230,"nodeType":"IfStatement","src":"4088:216:10","trueBody":{"id":1229,"nodeType":"Block","src":"4139:165:10","statements":[{"expression":{"arguments":[{"id":1213,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"4173:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},{"arguments":[{"expression":{"expression":{"id":1216,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"4203:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4209:7:10","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":950,"src":"4203:13:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4217:8:10","memberName":"selector","nodeType":"MemberAccess","src":"4203:22:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1219,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"4227:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4236:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1214,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4180:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4184:18:10","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4180:22:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4180:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1212,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"4153:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$963_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4153:86:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1223,"nodeType":"ExpressionStatement","src":"4153:86:10"},{"expression":{"arguments":[{"id":1225,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"4273:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},{"id":1226,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"4280:12:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1224,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"4253:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$963_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1228,"nodeType":"ExpressionStatement","src":"4253:40:10"}]}}]},"documentation":{"id":1186,"nodeType":"StructuredDocumentation","src":"3576:308:10","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":1232,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3898:12:10","nodeType":"FunctionDefinition","parameters":{"id":1194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1189,"mutability":"mutable","name":"token","nameLocation":"3929:5:10","nodeType":"VariableDeclaration","scope":1232,"src":"3911:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"},"typeName":{"id":1188,"nodeType":"UserDefinedTypeName","pathNode":{"id":1187,"name":"IERC20Upgradeable","nameLocations":["3911:17:10"],"nodeType":"IdentifierPath","referencedDeclaration":963,"src":"3911:17:10"},"referencedDeclaration":963,"src":"3911:17:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":1191,"mutability":"mutable","name":"spender","nameLocation":"3944:7:10","nodeType":"VariableDeclaration","scope":1232,"src":"3936:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1190,"name":"address","nodeType":"ElementaryTypeName","src":"3936:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"value","nameLocation":"3961:5:10","nodeType":"VariableDeclaration","scope":1232,"src":"3953:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1192,"name":"uint256","nodeType":"ElementaryTypeName","src":"3953:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3910:57:10"},"returnParameters":{"id":1195,"nodeType":"ParameterList","parameters":[],"src":"3977:0:10"},"scope":1375,"src":"3889:421:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1288,"nodeType":"Block","src":"4688:257:10","statements":[{"assignments":[1254],"declarations":[{"constant":false,"id":1254,"mutability":"mutable","name":"nonceBefore","nameLocation":"4706:11:10","nodeType":"VariableDeclaration","scope":1288,"src":"4698:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1253,"name":"uint256","nodeType":"ElementaryTypeName","src":"4698:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1259,"initialValue":{"arguments":[{"id":1257,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"4733:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1255,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"4720:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20PermitUpgradeable_$999","typeString":"contract IERC20PermitUpgradeable"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4726:6:10","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":992,"src":"4720:12:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4720:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4698:41:10"},{"expression":{"arguments":[{"id":1263,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"4762:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1264,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"4769:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"4778:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1266,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"4785:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1267,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"4795:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1268,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"4798:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1269,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"4801:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1260,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"4749:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20PermitUpgradeable_$999","typeString":"contract IERC20PermitUpgradeable"}},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4755:6:10","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":984,"src":"4749:12:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4749:54:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1271,"nodeType":"ExpressionStatement","src":"4749:54:10"},{"assignments":[1273],"declarations":[{"constant":false,"id":1273,"mutability":"mutable","name":"nonceAfter","nameLocation":"4821:10:10","nodeType":"VariableDeclaration","scope":1288,"src":"4813:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1272,"name":"uint256","nodeType":"ElementaryTypeName","src":"4813:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1278,"initialValue":{"arguments":[{"id":1276,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"4847:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1274,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"4834:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20PermitUpgradeable_$999","typeString":"contract IERC20PermitUpgradeable"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4840:6:10","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":992,"src":"4834:12:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4813:40:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1280,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"4871:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1281,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"4885:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4899:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4885:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4871:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":1285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4902:35:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":1279,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4863:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4863:75:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1287,"nodeType":"ExpressionStatement","src":"4863:75:10"}]},"documentation":{"id":1233,"nodeType":"StructuredDocumentation","src":"4316:141:10","text":" @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."},"id":1289,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"4471:10:10","nodeType":"FunctionDefinition","parameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1236,"mutability":"mutable","name":"token","nameLocation":"4515:5:10","nodeType":"VariableDeclaration","scope":1289,"src":"4491:29:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20PermitUpgradeable_$999","typeString":"contract IERC20PermitUpgradeable"},"typeName":{"id":1235,"nodeType":"UserDefinedTypeName","pathNode":{"id":1234,"name":"IERC20PermitUpgradeable","nameLocations":["4491:23:10"],"nodeType":"IdentifierPath","referencedDeclaration":999,"src":"4491:23:10"},"referencedDeclaration":999,"src":"4491:23:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20PermitUpgradeable_$999","typeString":"contract IERC20PermitUpgradeable"}},"visibility":"internal"},{"constant":false,"id":1238,"mutability":"mutable","name":"owner","nameLocation":"4538:5:10","nodeType":"VariableDeclaration","scope":1289,"src":"4530:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1237,"name":"address","nodeType":"ElementaryTypeName","src":"4530:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1240,"mutability":"mutable","name":"spender","nameLocation":"4561:7:10","nodeType":"VariableDeclaration","scope":1289,"src":"4553:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1239,"name":"address","nodeType":"ElementaryTypeName","src":"4553:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"value","nameLocation":"4586:5:10","nodeType":"VariableDeclaration","scope":1289,"src":"4578:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1241,"name":"uint256","nodeType":"ElementaryTypeName","src":"4578:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1244,"mutability":"mutable","name":"deadline","nameLocation":"4609:8:10","nodeType":"VariableDeclaration","scope":1289,"src":"4601:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1243,"name":"uint256","nodeType":"ElementaryTypeName","src":"4601:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1246,"mutability":"mutable","name":"v","nameLocation":"4633:1:10","nodeType":"VariableDeclaration","scope":1289,"src":"4627:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1245,"name":"uint8","nodeType":"ElementaryTypeName","src":"4627:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1248,"mutability":"mutable","name":"r","nameLocation":"4652:1:10","nodeType":"VariableDeclaration","scope":1289,"src":"4644:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1247,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4644:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1250,"mutability":"mutable","name":"s","nameLocation":"4671:1:10","nodeType":"VariableDeclaration","scope":1289,"src":"4663:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1249,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4663:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4481:197:10"},"returnParameters":{"id":1252,"nodeType":"ParameterList","parameters":[],"src":"4688:0:10"},"scope":1375,"src":"4462:483:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1325,"nodeType":"Block","src":"5409:572:10","statements":[{"assignments":[1299],"declarations":[{"constant":false,"id":1299,"mutability":"mutable","name":"returndata","nameLocation":"5771:10:10","nodeType":"VariableDeclaration","scope":1325,"src":"5758:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1298,"name":"bytes","nodeType":"ElementaryTypeName","src":"5758:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1308,"initialValue":{"arguments":[{"id":1305,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"5812:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5818:34:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":1302,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"5792:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}],"id":1301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5784:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1300,"name":"address","nodeType":"ElementaryTypeName","src":"5784:7:10","typeDescriptions":{}}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5784:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5799:12:10","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":1465,"src":"5784:27:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5784:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5758:95:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1310,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"5871:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5882:6:10","memberName":"length","nodeType":"MemberAccess","src":"5871:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5892:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5871:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1316,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"5908:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5921:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1317,"name":"bool","nodeType":"ElementaryTypeName","src":"5921:4:10","typeDescriptions":{}}}],"id":1319,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5920:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1314,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5897:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5901:6:10","memberName":"decode","nodeType":"MemberAccess","src":"5897:10:10","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5897:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5871:56:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":1322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5929:44:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":1309,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5863:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5863:111:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1324,"nodeType":"ExpressionStatement","src":"5863:111:10"}]},"documentation":{"id":1290,"nodeType":"StructuredDocumentation","src":"4951:372:10","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1326,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"5337:19:10","nodeType":"FunctionDefinition","parameters":{"id":1296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1293,"mutability":"mutable","name":"token","nameLocation":"5375:5:10","nodeType":"VariableDeclaration","scope":1326,"src":"5357:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"},"typeName":{"id":1292,"nodeType":"UserDefinedTypeName","pathNode":{"id":1291,"name":"IERC20Upgradeable","nameLocations":["5357:17:10"],"nodeType":"IdentifierPath","referencedDeclaration":963,"src":"5357:17:10"},"referencedDeclaration":963,"src":"5357:17:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":1295,"mutability":"mutable","name":"data","nameLocation":"5395:4:10","nodeType":"VariableDeclaration","scope":1326,"src":"5382:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1294,"name":"bytes","nodeType":"ElementaryTypeName","src":"5382:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5356:44:10"},"returnParameters":{"id":1297,"nodeType":"ParameterList","parameters":[],"src":"5409:0:10"},"scope":1375,"src":"5328:653:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1373,"nodeType":"Block","src":"6582:516:10","statements":[{"assignments":[1338,1340],"declarations":[{"constant":false,"id":1338,"mutability":"mutable","name":"success","nameLocation":"6883:7:10","nodeType":"VariableDeclaration","scope":1373,"src":"6878:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1337,"name":"bool","nodeType":"ElementaryTypeName","src":"6878:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1340,"mutability":"mutable","name":"returndata","nameLocation":"6905:10:10","nodeType":"VariableDeclaration","scope":1373,"src":"6892:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1339,"name":"bytes","nodeType":"ElementaryTypeName","src":"6892:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1348,"initialValue":{"arguments":[{"id":1346,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"6939:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1343,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"6927:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}],"id":1342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6919:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1341,"name":"address","nodeType":"ElementaryTypeName","src":"6919:7:10","typeDescriptions":{}}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6919:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6934:4:10","memberName":"call","nodeType":"MemberAccess","src":"6919:19:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6919:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6877:67:10"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1349,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"6973:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1350,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"6985:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6996:6:10","memberName":"length","nodeType":"MemberAccess","src":"6985:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7006:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6985:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1356,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"7022:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7035:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1357,"name":"bool","nodeType":"ElementaryTypeName","src":"7035:4:10","typeDescriptions":{}}}],"id":1359,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7034:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1354,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7011:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7015:6:10","memberName":"decode","nodeType":"MemberAccess","src":"7011:10:10","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7011:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6985:56:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1362,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6984:58:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6973:69:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"arguments":[{"id":1368,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"7084:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}],"id":1367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7076:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1366,"name":"address","nodeType":"ElementaryTypeName","src":"7076:7:10","typeDescriptions":{}}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7076:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1364,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"7046:18:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1705_$","typeString":"type(library AddressUpgradeable)"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7065:10:10","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1393,"src":"7046:29:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7046:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6973:118:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1336,"id":1372,"nodeType":"Return","src":"6954:137:10"}]},"documentation":{"id":1327,"nodeType":"StructuredDocumentation","src":"5987:490:10","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":1374,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"6491:23:10","nodeType":"FunctionDefinition","parameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"token","nameLocation":"6533:5:10","nodeType":"VariableDeclaration","scope":1374,"src":"6515:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"},"typeName":{"id":1329,"nodeType":"UserDefinedTypeName","pathNode":{"id":1328,"name":"IERC20Upgradeable","nameLocations":["6515:17:10"],"nodeType":"IdentifierPath","referencedDeclaration":963,"src":"6515:17:10"},"referencedDeclaration":963,"src":"6515:17:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":1332,"mutability":"mutable","name":"data","nameLocation":"6553:4:10","nodeType":"VariableDeclaration","scope":1374,"src":"6540:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1331,"name":"bytes","nodeType":"ElementaryTypeName","src":"6540:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6514:44:10"},"returnParameters":{"id":1336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1374,"src":"6576:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1334,"name":"bool","nodeType":"ElementaryTypeName","src":"6576:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6575:6:10"},"scope":1375,"src":"6482:616:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1376,"src":"734:6366:10","usedErrors":[],"usedEvents":[]}],"src":"115:6986:10"},"id":10},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1705]},"id":1706,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1377,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1378,"nodeType":"StructuredDocumentation","src":"126:67:11","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1705,"linearizedBaseContracts":[1705],"name":"AddressUpgradeable","nameLocation":"202:18:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1392,"nodeType":"Block","src":"1489:254:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1386,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"1713:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:4:11","memberName":"code","nodeType":"MemberAccess","src":"1713:12:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:11","memberName":"length","nodeType":"MemberAccess","src":"1713:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1713:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1385,"id":1391,"nodeType":"Return","src":"1706:30:11"}]},"documentation":{"id":1379,"nodeType":"StructuredDocumentation","src":"227:1191:11","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1393,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1432:10:11","nodeType":"FunctionDefinition","parameters":{"id":1382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1381,"mutability":"mutable","name":"account","nameLocation":"1451:7:11","nodeType":"VariableDeclaration","scope":1393,"src":"1443:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1380,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1442:17:11"},"returnParameters":{"id":1385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1393,"src":"1483:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1383,"name":"bool","nodeType":"ElementaryTypeName","src":"1483:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1482:6:11"},"scope":1705,"src":"1423:320:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1426,"nodeType":"Block","src":"2729:241:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1404,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2755:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1705","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1705","typeString":"library AddressUpgradeable"}],"id":1403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2747:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1402,"name":"address","nodeType":"ElementaryTypeName","src":"2747:7:11","typeDescriptions":{}}},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2747:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:7:11","memberName":"balance","nodeType":"MemberAccess","src":"2747:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1407,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"2772:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2747:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2780:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1401,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2739:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:73:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1411,"nodeType":"ExpressionStatement","src":"2739:73:11"},{"assignments":[1413,null],"declarations":[{"constant":false,"id":1413,"mutability":"mutable","name":"success","nameLocation":"2829:7:11","nodeType":"VariableDeclaration","scope":1426,"src":"2824:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1412,"name":"bool","nodeType":"ElementaryTypeName","src":"2824:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1420,"initialValue":{"arguments":[{"hexValue":"","id":1418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2872:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1414,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"2842:9:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:4:11","memberName":"call","nodeType":"MemberAccess","src":"2842:14:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1416,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"2864:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2842:29:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2823:52:11"},{"expression":{"arguments":[{"id":1422,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"2893:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2902:60:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1421,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2885:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2885:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1425,"nodeType":"ExpressionStatement","src":"2885:78:11"}]},"documentation":{"id":1394,"nodeType":"StructuredDocumentation","src":"1749:904:11","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1427,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2667:9:11","nodeType":"FunctionDefinition","parameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1396,"mutability":"mutable","name":"recipient","nameLocation":"2693:9:11","nodeType":"VariableDeclaration","scope":1427,"src":"2677:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1395,"name":"address","nodeType":"ElementaryTypeName","src":"2677:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1398,"mutability":"mutable","name":"amount","nameLocation":"2712:6:11","nodeType":"VariableDeclaration","scope":1427,"src":"2704:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:11"},"returnParameters":{"id":1400,"nodeType":"ParameterList","parameters":[],"src":"2729:0:11"},"scope":1705,"src":"2658:312:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1444,"nodeType":"Block","src":"3801:96:11","statements":[{"expression":{"arguments":[{"id":1438,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"3840:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1439,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"3848:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3854:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3857:32:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1437,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1485,1529],"referencedDeclaration":1529,"src":"3818:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:72:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1436,"id":1443,"nodeType":"Return","src":"3811:79:11"}]},"documentation":{"id":1428,"nodeType":"StructuredDocumentation","src":"2976:731:11","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1445,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3721:12:11","nodeType":"FunctionDefinition","parameters":{"id":1433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1430,"mutability":"mutable","name":"target","nameLocation":"3742:6:11","nodeType":"VariableDeclaration","scope":1445,"src":"3734:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1429,"name":"address","nodeType":"ElementaryTypeName","src":"3734:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1432,"mutability":"mutable","name":"data","nameLocation":"3763:4:11","nodeType":"VariableDeclaration","scope":1445,"src":"3750:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1431,"name":"bytes","nodeType":"ElementaryTypeName","src":"3750:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3733:35:11"},"returnParameters":{"id":1436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1445,"src":"3787:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1434,"name":"bytes","nodeType":"ElementaryTypeName","src":"3787:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3786:14:11"},"scope":1705,"src":"3712:185:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1464,"nodeType":"Block","src":"4266:76:11","statements":[{"expression":{"arguments":[{"id":1458,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"4305:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1459,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"4313:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4319:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1461,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"4322:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1457,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1485,1529],"referencedDeclaration":1529,"src":"4283:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1456,"id":1463,"nodeType":"Return","src":"4276:59:11"}]},"documentation":{"id":1446,"nodeType":"StructuredDocumentation","src":"3903:211:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1465,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4128:12:11","nodeType":"FunctionDefinition","parameters":{"id":1453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1448,"mutability":"mutable","name":"target","nameLocation":"4158:6:11","nodeType":"VariableDeclaration","scope":1465,"src":"4150:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1447,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1450,"mutability":"mutable","name":"data","nameLocation":"4187:4:11","nodeType":"VariableDeclaration","scope":1465,"src":"4174:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1449,"name":"bytes","nodeType":"ElementaryTypeName","src":"4174:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1452,"mutability":"mutable","name":"errorMessage","nameLocation":"4215:12:11","nodeType":"VariableDeclaration","scope":1465,"src":"4201:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1451,"name":"string","nodeType":"ElementaryTypeName","src":"4201:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4140:93:11"},"returnParameters":{"id":1456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1465,"src":"4252:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1454,"name":"bytes","nodeType":"ElementaryTypeName","src":"4252:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4251:14:11"},"scope":1705,"src":"4119:223:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1484,"nodeType":"Block","src":"4817:111:11","statements":[{"expression":{"arguments":[{"id":1478,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"4856:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1479,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"4864:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"4870:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4877:43:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1477,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1485,1529],"referencedDeclaration":1529,"src":"4834:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:87:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1476,"id":1483,"nodeType":"Return","src":"4827:94:11"}]},"documentation":{"id":1466,"nodeType":"StructuredDocumentation","src":"4348:351:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1485,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4713:21:11","nodeType":"FunctionDefinition","parameters":{"id":1473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1468,"mutability":"mutable","name":"target","nameLocation":"4743:6:11","nodeType":"VariableDeclaration","scope":1485,"src":"4735:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"4735:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1470,"mutability":"mutable","name":"data","nameLocation":"4764:4:11","nodeType":"VariableDeclaration","scope":1485,"src":"4751:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1469,"name":"bytes","nodeType":"ElementaryTypeName","src":"4751:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1472,"mutability":"mutable","name":"value","nameLocation":"4778:5:11","nodeType":"VariableDeclaration","scope":1485,"src":"4770:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1471,"name":"uint256","nodeType":"ElementaryTypeName","src":"4770:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4734:50:11"},"returnParameters":{"id":1476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1485,"src":"4803:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1474,"name":"bytes","nodeType":"ElementaryTypeName","src":"4803:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4802:14:11"},"scope":1705,"src":"4704:224:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1528,"nodeType":"Block","src":"5355:267:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1502,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5381:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1705","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1705","typeString":"library AddressUpgradeable"}],"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5373:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1500,"name":"address","nodeType":"ElementaryTypeName","src":"5373:7:11","typeDescriptions":{}}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5387:7:11","memberName":"balance","nodeType":"MemberAccess","src":"5373:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"5398:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5373:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5405:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1499,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5365:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:81:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1509,"nodeType":"ExpressionStatement","src":"5365:81:11"},{"assignments":[1511,1513],"declarations":[{"constant":false,"id":1511,"mutability":"mutable","name":"success","nameLocation":"5462:7:11","nodeType":"VariableDeclaration","scope":1528,"src":"5457:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1510,"name":"bool","nodeType":"ElementaryTypeName","src":"5457:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1513,"mutability":"mutable","name":"returndata","nameLocation":"5484:10:11","nodeType":"VariableDeclaration","scope":1528,"src":"5471:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1512,"name":"bytes","nodeType":"ElementaryTypeName","src":"5471:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1520,"initialValue":{"arguments":[{"id":1518,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"5524:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1514,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"5498:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5505:4:11","memberName":"call","nodeType":"MemberAccess","src":"5498:11:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"5517:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5498:25:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5456:73:11"},{"expression":{"arguments":[{"id":1522,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"5573:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1523,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"5581:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1524,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"5590:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1525,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"5602:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1521,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"5546:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1498,"id":1527,"nodeType":"Return","src":"5539:76:11"}]},"documentation":{"id":1486,"nodeType":"StructuredDocumentation","src":"4934:237:11","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1529,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5185:21:11","nodeType":"FunctionDefinition","parameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1488,"mutability":"mutable","name":"target","nameLocation":"5224:6:11","nodeType":"VariableDeclaration","scope":1529,"src":"5216:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1487,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1490,"mutability":"mutable","name":"data","nameLocation":"5253:4:11","nodeType":"VariableDeclaration","scope":1529,"src":"5240:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1489,"name":"bytes","nodeType":"ElementaryTypeName","src":"5240:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"value","nameLocation":"5275:5:11","nodeType":"VariableDeclaration","scope":1529,"src":"5267:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1491,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1494,"mutability":"mutable","name":"errorMessage","nameLocation":"5304:12:11","nodeType":"VariableDeclaration","scope":1529,"src":"5290:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1493,"name":"string","nodeType":"ElementaryTypeName","src":"5290:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5206:116:11"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1529,"src":"5341:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1496,"name":"bytes","nodeType":"ElementaryTypeName","src":"5341:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5340:14:11"},"scope":1705,"src":"5176:446:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1545,"nodeType":"Block","src":"5899:97:11","statements":[{"expression":{"arguments":[{"id":1540,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"5935:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1541,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"5943:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5949:39:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1539,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1546,1575],"referencedDeclaration":1575,"src":"5916:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5916:73:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1538,"id":1544,"nodeType":"Return","src":"5909:80:11"}]},"documentation":{"id":1530,"nodeType":"StructuredDocumentation","src":"5628:166:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1546,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5808:18:11","nodeType":"FunctionDefinition","parameters":{"id":1535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1532,"mutability":"mutable","name":"target","nameLocation":"5835:6:11","nodeType":"VariableDeclaration","scope":1546,"src":"5827:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1531,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1534,"mutability":"mutable","name":"data","nameLocation":"5856:4:11","nodeType":"VariableDeclaration","scope":1546,"src":"5843:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1533,"name":"bytes","nodeType":"ElementaryTypeName","src":"5843:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5826:35:11"},"returnParameters":{"id":1538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1546,"src":"5885:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1536,"name":"bytes","nodeType":"ElementaryTypeName","src":"5885:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5884:14:11"},"scope":1705,"src":"5799:197:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1574,"nodeType":"Block","src":"6338:168:11","statements":[{"assignments":[1559,1561],"declarations":[{"constant":false,"id":1559,"mutability":"mutable","name":"success","nameLocation":"6354:7:11","nodeType":"VariableDeclaration","scope":1574,"src":"6349:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1558,"name":"bool","nodeType":"ElementaryTypeName","src":"6349:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1561,"mutability":"mutable","name":"returndata","nameLocation":"6376:10:11","nodeType":"VariableDeclaration","scope":1574,"src":"6363:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1560,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1566,"initialValue":{"arguments":[{"id":1564,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"6408:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1562,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"6390:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:10:11","memberName":"staticcall","nodeType":"MemberAccess","src":"6390:17:11","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6348:65:11"},{"expression":{"arguments":[{"id":1568,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"6457:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1569,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"6465:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1570,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"6474:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1571,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"6486:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1567,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"6430:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6430:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1557,"id":1573,"nodeType":"Return","src":"6423:76:11"}]},"documentation":{"id":1547,"nodeType":"StructuredDocumentation","src":"6002:173:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1575,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6189:18:11","nodeType":"FunctionDefinition","parameters":{"id":1554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1549,"mutability":"mutable","name":"target","nameLocation":"6225:6:11","nodeType":"VariableDeclaration","scope":1575,"src":"6217:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1548,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1551,"mutability":"mutable","name":"data","nameLocation":"6254:4:11","nodeType":"VariableDeclaration","scope":1575,"src":"6241:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1550,"name":"bytes","nodeType":"ElementaryTypeName","src":"6241:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1553,"mutability":"mutable","name":"errorMessage","nameLocation":"6282:12:11","nodeType":"VariableDeclaration","scope":1575,"src":"6268:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1552,"name":"string","nodeType":"ElementaryTypeName","src":"6268:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6207:93:11"},"returnParameters":{"id":1557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1575,"src":"6324:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1555,"name":"bytes","nodeType":"ElementaryTypeName","src":"6324:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6323:14:11"},"scope":1705,"src":"6180:326:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1591,"nodeType":"Block","src":"6782:101:11","statements":[{"expression":{"arguments":[{"id":1586,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"6820:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1587,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"6828:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6834:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1585,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1592,1621],"referencedDeclaration":1621,"src":"6799:20:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6799:77:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1584,"id":1590,"nodeType":"Return","src":"6792:84:11"}]},"documentation":{"id":1576,"nodeType":"StructuredDocumentation","src":"6512:168:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1592,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6694:20:11","nodeType":"FunctionDefinition","parameters":{"id":1581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"target","nameLocation":"6723:6:11","nodeType":"VariableDeclaration","scope":1592,"src":"6715:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1577,"name":"address","nodeType":"ElementaryTypeName","src":"6715:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1580,"mutability":"mutable","name":"data","nameLocation":"6744:4:11","nodeType":"VariableDeclaration","scope":1592,"src":"6731:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1579,"name":"bytes","nodeType":"ElementaryTypeName","src":"6731:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6714:35:11"},"returnParameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1592,"src":"6768:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1582,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:11"},"scope":1705,"src":"6685:198:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1620,"nodeType":"Block","src":"7224:170:11","statements":[{"assignments":[1605,1607],"declarations":[{"constant":false,"id":1605,"mutability":"mutable","name":"success","nameLocation":"7240:7:11","nodeType":"VariableDeclaration","scope":1620,"src":"7235:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1604,"name":"bool","nodeType":"ElementaryTypeName","src":"7235:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1607,"mutability":"mutable","name":"returndata","nameLocation":"7262:10:11","nodeType":"VariableDeclaration","scope":1620,"src":"7249:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1606,"name":"bytes","nodeType":"ElementaryTypeName","src":"7249:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1612,"initialValue":{"arguments":[{"id":1610,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"7296:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1608,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"7276:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7283:12:11","memberName":"delegatecall","nodeType":"MemberAccess","src":"7276:19:11","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7276:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7234:67:11"},{"expression":{"arguments":[{"id":1614,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"7345:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1615,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"7353:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1616,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"7362:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1617,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"7374:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1613,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"7318:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7318:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1603,"id":1619,"nodeType":"Return","src":"7311:76:11"}]},"documentation":{"id":1593,"nodeType":"StructuredDocumentation","src":"6889:175:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1621,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7078:20:11","nodeType":"FunctionDefinition","parameters":{"id":1600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1595,"mutability":"mutable","name":"target","nameLocation":"7116:6:11","nodeType":"VariableDeclaration","scope":1621,"src":"7108:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1594,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1597,"mutability":"mutable","name":"data","nameLocation":"7145:4:11","nodeType":"VariableDeclaration","scope":1621,"src":"7132:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1596,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1599,"mutability":"mutable","name":"errorMessage","nameLocation":"7173:12:11","nodeType":"VariableDeclaration","scope":1621,"src":"7159:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1598,"name":"string","nodeType":"ElementaryTypeName","src":"7159:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7098:93:11"},"returnParameters":{"id":1603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1621,"src":"7210:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1601,"name":"bytes","nodeType":"ElementaryTypeName","src":"7210:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7209:14:11"},"scope":1705,"src":"7069:325:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1659,"nodeType":"Block","src":"7876:434:11","statements":[{"condition":{"id":1635,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"7890:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1657,"nodeType":"Block","src":"8246:58:11","statements":[{"expression":{"arguments":[{"id":1653,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"8268:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1654,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"8280:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1652,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"8260:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8260:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1656,"nodeType":"ExpressionStatement","src":"8260:33:11"}]},"id":1658,"nodeType":"IfStatement","src":"7886:418:11","trueBody":{"id":1651,"nodeType":"Block","src":"7899:341:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1636,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"7917:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7928:6:11","memberName":"length","nodeType":"MemberAccess","src":"7917:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7938:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7917:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1648,"nodeType":"IfStatement","src":"7913:286:11","trueBody":{"id":1647,"nodeType":"Block","src":"7941:258:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":1642,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"8143:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1641,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"8132:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8152:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1640,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8124:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8124:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1646,"nodeType":"ExpressionStatement","src":"8124:60:11"}]}},{"expression":{"id":1649,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"8219:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1634,"id":1650,"nodeType":"Return","src":"8212:17:11"}]}}]},"documentation":{"id":1622,"nodeType":"StructuredDocumentation","src":"7400:277:11","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1660,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7691:26:11","nodeType":"FunctionDefinition","parameters":{"id":1631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1624,"mutability":"mutable","name":"target","nameLocation":"7735:6:11","nodeType":"VariableDeclaration","scope":1660,"src":"7727:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1623,"name":"address","nodeType":"ElementaryTypeName","src":"7727:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1626,"mutability":"mutable","name":"success","nameLocation":"7756:7:11","nodeType":"VariableDeclaration","scope":1660,"src":"7751:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1625,"name":"bool","nodeType":"ElementaryTypeName","src":"7751:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1628,"mutability":"mutable","name":"returndata","nameLocation":"7786:10:11","nodeType":"VariableDeclaration","scope":1660,"src":"7773:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1627,"name":"bytes","nodeType":"ElementaryTypeName","src":"7773:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1630,"mutability":"mutable","name":"errorMessage","nameLocation":"7820:12:11","nodeType":"VariableDeclaration","scope":1660,"src":"7806:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1629,"name":"string","nodeType":"ElementaryTypeName","src":"7806:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7717:121:11"},"returnParameters":{"id":1634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1660,"src":"7862:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1632,"name":"bytes","nodeType":"ElementaryTypeName","src":"7862:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7861:14:11"},"scope":1705,"src":"7682:628:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1683,"nodeType":"Block","src":"8691:135:11","statements":[{"condition":{"id":1672,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"8705:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1681,"nodeType":"Block","src":"8762:58:11","statements":[{"expression":{"arguments":[{"id":1677,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"8784:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1678,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"8796:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1676,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"8776:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8776:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1680,"nodeType":"ExpressionStatement","src":"8776:33:11"}]},"id":1682,"nodeType":"IfStatement","src":"8701:119:11","trueBody":{"id":1675,"nodeType":"Block","src":"8714:42:11","statements":[{"expression":{"id":1673,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"8735:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1671,"id":1674,"nodeType":"Return","src":"8728:17:11"}]}}]},"documentation":{"id":1661,"nodeType":"StructuredDocumentation","src":"8316:210:11","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1684,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8540:16:11","nodeType":"FunctionDefinition","parameters":{"id":1668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1663,"mutability":"mutable","name":"success","nameLocation":"8571:7:11","nodeType":"VariableDeclaration","scope":1684,"src":"8566:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1662,"name":"bool","nodeType":"ElementaryTypeName","src":"8566:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1665,"mutability":"mutable","name":"returndata","nameLocation":"8601:10:11","nodeType":"VariableDeclaration","scope":1684,"src":"8588:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1664,"name":"bytes","nodeType":"ElementaryTypeName","src":"8588:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1667,"mutability":"mutable","name":"errorMessage","nameLocation":"8635:12:11","nodeType":"VariableDeclaration","scope":1684,"src":"8621:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1666,"name":"string","nodeType":"ElementaryTypeName","src":"8621:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8556:97:11"},"returnParameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1684,"src":"8677:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1669,"name":"bytes","nodeType":"ElementaryTypeName","src":"8677:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8676:14:11"},"scope":1705,"src":"8531:295:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1703,"nodeType":"Block","src":"8915:457:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1691,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"8991:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9002:6:11","memberName":"length","nodeType":"MemberAccess","src":"8991:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9011:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8991:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1701,"nodeType":"Block","src":"9321:45:11","statements":[{"expression":{"arguments":[{"id":1698,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"9342:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1697,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9335:6:11","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9335:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1700,"nodeType":"ExpressionStatement","src":"9335:20:11"}]},"id":1702,"nodeType":"IfStatement","src":"8987:379:11","trueBody":{"id":1696,"nodeType":"Block","src":"9014:301:11","statements":[{"AST":{"nativeSrc":"9172:133:11","nodeType":"YulBlock","src":"9172:133:11","statements":[{"nativeSrc":"9190:40:11","nodeType":"YulVariableDeclaration","src":"9190:40:11","value":{"arguments":[{"name":"returndata","nativeSrc":"9219:10:11","nodeType":"YulIdentifier","src":"9219:10:11"}],"functionName":{"name":"mload","nativeSrc":"9213:5:11","nodeType":"YulIdentifier","src":"9213:5:11"},"nativeSrc":"9213:17:11","nodeType":"YulFunctionCall","src":"9213:17:11"},"variables":[{"name":"returndata_size","nativeSrc":"9194:15:11","nodeType":"YulTypedName","src":"9194:15:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9258:2:11","nodeType":"YulLiteral","src":"9258:2:11","type":"","value":"32"},{"name":"returndata","nativeSrc":"9262:10:11","nodeType":"YulIdentifier","src":"9262:10:11"}],"functionName":{"name":"add","nativeSrc":"9254:3:11","nodeType":"YulIdentifier","src":"9254:3:11"},"nativeSrc":"9254:19:11","nodeType":"YulFunctionCall","src":"9254:19:11"},{"name":"returndata_size","nativeSrc":"9275:15:11","nodeType":"YulIdentifier","src":"9275:15:11"}],"functionName":{"name":"revert","nativeSrc":"9247:6:11","nodeType":"YulIdentifier","src":"9247:6:11"},"nativeSrc":"9247:44:11","nodeType":"YulFunctionCall","src":"9247:44:11"},"nativeSrc":"9247:44:11","nodeType":"YulExpressionStatement","src":"9247:44:11"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":1686,"isOffset":false,"isSlot":false,"src":"9219:10:11","valueSize":1},{"declaration":1686,"isOffset":false,"isSlot":false,"src":"9262:10:11","valueSize":1}],"id":1695,"nodeType":"InlineAssembly","src":"9163:142:11"}]}}]},"id":1704,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8841:7:11","nodeType":"FunctionDefinition","parameters":{"id":1689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1686,"mutability":"mutable","name":"returndata","nameLocation":"8862:10:11","nodeType":"VariableDeclaration","scope":1704,"src":"8849:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1685,"name":"bytes","nodeType":"ElementaryTypeName","src":"8849:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1688,"mutability":"mutable","name":"errorMessage","nameLocation":"8888:12:11","nodeType":"VariableDeclaration","scope":1704,"src":"8874:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1687,"name":"string","nodeType":"ElementaryTypeName","src":"8874:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8848:53:11"},"returnParameters":{"id":1690,"nodeType":"ParameterList","parameters":[],"src":"8915:0:11"},"scope":1705,"src":"8832:540:11","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1706,"src":"194:9180:11","usedErrors":[],"usedEvents":[]}],"src":"101:9274:11"},"id":11},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1705],"ContextUpgradeable":[1747],"Initializable":[665]},"id":1748,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1707,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:12"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1708,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1748,"sourceUnit":666,"src":"110:42:12","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1710,"name":"Initializable","nameLocations":["691:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":665,"src":"691:13:12"},"id":1711,"nodeType":"InheritanceSpecifier","src":"691:13:12"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1709,"nodeType":"StructuredDocumentation","src":"154:496:12","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1747,"linearizedBaseContracts":[1747,665],"name":"ContextUpgradeable","nameLocation":"669:18:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":1716,"nodeType":"Block","src":"763:7:12","statements":[]},"id":1717,"implemented":true,"kind":"function","modifiers":[{"id":1714,"kind":"modifierInvocation","modifierName":{"id":1713,"name":"onlyInitializing","nameLocations":["746:16:12"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"746:16:12"},"nodeType":"ModifierInvocation","src":"746:16:12"}],"name":"__Context_init","nameLocation":"720:14:12","nodeType":"FunctionDefinition","parameters":{"id":1712,"nodeType":"ParameterList","parameters":[],"src":"734:2:12"},"returnParameters":{"id":1715,"nodeType":"ParameterList","parameters":[],"src":"763:0:12"},"scope":1747,"src":"711:59:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1722,"nodeType":"Block","src":"838:7:12","statements":[]},"id":1723,"implemented":true,"kind":"function","modifiers":[{"id":1720,"kind":"modifierInvocation","modifierName":{"id":1719,"name":"onlyInitializing","nameLocations":["821:16:12"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"821:16:12"},"nodeType":"ModifierInvocation","src":"821:16:12"}],"name":"__Context_init_unchained","nameLocation":"785:24:12","nodeType":"FunctionDefinition","parameters":{"id":1718,"nodeType":"ParameterList","parameters":[],"src":"809:2:12"},"returnParameters":{"id":1721,"nodeType":"ParameterList","parameters":[],"src":"838:0:12"},"scope":1747,"src":"776:69:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1731,"nodeType":"Block","src":"912:34:12","statements":[{"expression":{"expression":{"id":1728,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"933:6:12","memberName":"sender","nodeType":"MemberAccess","src":"929:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1727,"id":1730,"nodeType":"Return","src":"922:17:12"}]},"id":1732,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:12","nodeType":"FunctionDefinition","parameters":{"id":1724,"nodeType":"ParameterList","parameters":[],"src":"869:2:12"},"returnParameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1732,"src":"903:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1725,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:12"},"scope":1747,"src":"850:96:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1740,"nodeType":"Block","src":"1019:32:12","statements":[{"expression":{"expression":{"id":1737,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1040:4:12","memberName":"data","nodeType":"MemberAccess","src":"1036:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1736,"id":1739,"nodeType":"Return","src":"1029:15:12"}]},"id":1741,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:12","nodeType":"FunctionDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[],"src":"969:2:12"},"returnParameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1741,"src":"1003:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1734,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:12"},"scope":1747,"src":"952:99:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1742,"nodeType":"StructuredDocumentation","src":"1057:254:12","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1746,"mutability":"mutable","name":"__gap","nameLocation":"1336:5:12","nodeType":"VariableDeclaration","scope":1747,"src":"1316:25:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1743,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1745,"length":{"hexValue":"3530","id":1744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:12","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1748,"src":"651:693:12","usedErrors":[],"usedEvents":[511]}],"src":"86:1259:12"},"id":12},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","exportedSymbols":{"StorageSlotUpgradeable":[1857]},"id":1858,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1749,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlotUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1750,"nodeType":"StructuredDocumentation","src":"218:1201:13","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":1857,"linearizedBaseContracts":[1857],"name":"StorageSlotUpgradeable","nameLocation":"1428:22:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlotUpgradeable.AddressSlot","id":1753,"members":[{"constant":false,"id":1752,"mutability":"mutable","name":"value","nameLocation":"1494:5:13","nodeType":"VariableDeclaration","scope":1753,"src":"1486:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1751,"name":"address","nodeType":"ElementaryTypeName","src":"1486:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1464:11:13","nodeType":"StructDefinition","scope":1857,"src":"1457:49:13","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.BooleanSlot","id":1756,"members":[{"constant":false,"id":1755,"mutability":"mutable","name":"value","nameLocation":"1546:5:13","nodeType":"VariableDeclaration","scope":1756,"src":"1541:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1754,"name":"bool","nodeType":"ElementaryTypeName","src":"1541:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1519:11:13","nodeType":"StructDefinition","scope":1857,"src":"1512:46:13","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Bytes32Slot","id":1759,"members":[{"constant":false,"id":1758,"mutability":"mutable","name":"value","nameLocation":"1601:5:13","nodeType":"VariableDeclaration","scope":1759,"src":"1593:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1757,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1593:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1571:11:13","nodeType":"StructDefinition","scope":1857,"src":"1564:49:13","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Uint256Slot","id":1762,"members":[{"constant":false,"id":1761,"mutability":"mutable","name":"value","nameLocation":"1656:5:13","nodeType":"VariableDeclaration","scope":1762,"src":"1648:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1760,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1626:11:13","nodeType":"StructDefinition","scope":1857,"src":"1619:49:13","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.StringSlot","id":1765,"members":[{"constant":false,"id":1764,"mutability":"mutable","name":"value","nameLocation":"1709:5:13","nodeType":"VariableDeclaration","scope":1765,"src":"1702:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1763,"name":"string","nodeType":"ElementaryTypeName","src":"1702:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1681:10:13","nodeType":"StructDefinition","scope":1857,"src":"1674:47:13","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.BytesSlot","id":1768,"members":[{"constant":false,"id":1767,"mutability":"mutable","name":"value","nameLocation":"1760:5:13","nodeType":"VariableDeclaration","scope":1768,"src":"1754:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1766,"name":"bytes","nodeType":"ElementaryTypeName","src":"1754:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1734:9:13","nodeType":"StructDefinition","scope":1857,"src":"1727:45:13","visibility":"public"},{"body":{"id":1778,"nodeType":"Block","src":"1954:106:13","statements":[{"AST":{"nativeSrc":"2016:38:13","nodeType":"YulBlock","src":"2016:38:13","statements":[{"nativeSrc":"2030:14:13","nodeType":"YulAssignment","src":"2030:14:13","value":{"name":"slot","nativeSrc":"2040:4:13","nodeType":"YulIdentifier","src":"2040:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2030:6:13","nodeType":"YulIdentifier","src":"2030:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":1775,"isOffset":false,"isSlot":true,"src":"2030:6:13","suffix":"slot","valueSize":1},{"declaration":1771,"isOffset":false,"isSlot":false,"src":"2040:4:13","valueSize":1}],"id":1777,"nodeType":"InlineAssembly","src":"2007:47:13"}]},"documentation":{"id":1769,"nodeType":"StructuredDocumentation","src":"1778:87:13","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1779,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1879:14:13","nodeType":"FunctionDefinition","parameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1771,"mutability":"mutable","name":"slot","nameLocation":"1902:4:13","nodeType":"VariableDeclaration","scope":1779,"src":"1894:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1770,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1894:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1893:14:13"},"returnParameters":{"id":1776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1775,"mutability":"mutable","name":"r","nameLocation":"1951:1:13","nodeType":"VariableDeclaration","scope":1779,"src":"1931:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1753_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"},"typeName":{"id":1774,"nodeType":"UserDefinedTypeName","pathNode":{"id":1773,"name":"AddressSlot","nameLocations":["1931:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1753,"src":"1931:11:13"},"referencedDeclaration":1753,"src":"1931:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1753_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"}},"visibility":"internal"}],"src":"1930:23:13"},"scope":1857,"src":"1870:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1789,"nodeType":"Block","src":"2242:106:13","statements":[{"AST":{"nativeSrc":"2304:38:13","nodeType":"YulBlock","src":"2304:38:13","statements":[{"nativeSrc":"2318:14:13","nodeType":"YulAssignment","src":"2318:14:13","value":{"name":"slot","nativeSrc":"2328:4:13","nodeType":"YulIdentifier","src":"2328:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2318:6:13","nodeType":"YulIdentifier","src":"2318:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":1786,"isOffset":false,"isSlot":true,"src":"2318:6:13","suffix":"slot","valueSize":1},{"declaration":1782,"isOffset":false,"isSlot":false,"src":"2328:4:13","valueSize":1}],"id":1788,"nodeType":"InlineAssembly","src":"2295:47:13"}]},"documentation":{"id":1780,"nodeType":"StructuredDocumentation","src":"2066:87:13","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1790,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2167:14:13","nodeType":"FunctionDefinition","parameters":{"id":1783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"mutability":"mutable","name":"slot","nameLocation":"2190:4:13","nodeType":"VariableDeclaration","scope":1790,"src":"2182:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1781,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2182:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2181:14:13"},"returnParameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"mutability":"mutable","name":"r","nameLocation":"2239:1:13","nodeType":"VariableDeclaration","scope":1790,"src":"2219:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1756_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"},"typeName":{"id":1785,"nodeType":"UserDefinedTypeName","pathNode":{"id":1784,"name":"BooleanSlot","nameLocations":["2219:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1756,"src":"2219:11:13"},"referencedDeclaration":1756,"src":"2219:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1756_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"}},"visibility":"internal"}],"src":"2218:23:13"},"scope":1857,"src":"2158:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1800,"nodeType":"Block","src":"2530:106:13","statements":[{"AST":{"nativeSrc":"2592:38:13","nodeType":"YulBlock","src":"2592:38:13","statements":[{"nativeSrc":"2606:14:13","nodeType":"YulAssignment","src":"2606:14:13","value":{"name":"slot","nativeSrc":"2616:4:13","nodeType":"YulIdentifier","src":"2616:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2606:6:13","nodeType":"YulIdentifier","src":"2606:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":1797,"isOffset":false,"isSlot":true,"src":"2606:6:13","suffix":"slot","valueSize":1},{"declaration":1793,"isOffset":false,"isSlot":false,"src":"2616:4:13","valueSize":1}],"id":1799,"nodeType":"InlineAssembly","src":"2583:47:13"}]},"documentation":{"id":1791,"nodeType":"StructuredDocumentation","src":"2354:87:13","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1801,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2455:14:13","nodeType":"FunctionDefinition","parameters":{"id":1794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1793,"mutability":"mutable","name":"slot","nameLocation":"2478:4:13","nodeType":"VariableDeclaration","scope":1801,"src":"2470:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1792,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2470:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2469:14:13"},"returnParameters":{"id":1798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1797,"mutability":"mutable","name":"r","nameLocation":"2527:1:13","nodeType":"VariableDeclaration","scope":1801,"src":"2507:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1759_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"},"typeName":{"id":1796,"nodeType":"UserDefinedTypeName","pathNode":{"id":1795,"name":"Bytes32Slot","nameLocations":["2507:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1759,"src":"2507:11:13"},"referencedDeclaration":1759,"src":"2507:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1759_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"}},"visibility":"internal"}],"src":"2506:23:13"},"scope":1857,"src":"2446:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1811,"nodeType":"Block","src":"2818:106:13","statements":[{"AST":{"nativeSrc":"2880:38:13","nodeType":"YulBlock","src":"2880:38:13","statements":[{"nativeSrc":"2894:14:13","nodeType":"YulAssignment","src":"2894:14:13","value":{"name":"slot","nativeSrc":"2904:4:13","nodeType":"YulIdentifier","src":"2904:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2894:6:13","nodeType":"YulIdentifier","src":"2894:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":1808,"isOffset":false,"isSlot":true,"src":"2894:6:13","suffix":"slot","valueSize":1},{"declaration":1804,"isOffset":false,"isSlot":false,"src":"2904:4:13","valueSize":1}],"id":1810,"nodeType":"InlineAssembly","src":"2871:47:13"}]},"documentation":{"id":1802,"nodeType":"StructuredDocumentation","src":"2642:87:13","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1812,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2743:14:13","nodeType":"FunctionDefinition","parameters":{"id":1805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"mutability":"mutable","name":"slot","nameLocation":"2766:4:13","nodeType":"VariableDeclaration","scope":1812,"src":"2758:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1803,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2758:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2757:14:13"},"returnParameters":{"id":1809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1808,"mutability":"mutable","name":"r","nameLocation":"2815:1:13","nodeType":"VariableDeclaration","scope":1812,"src":"2795:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1762_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"},"typeName":{"id":1807,"nodeType":"UserDefinedTypeName","pathNode":{"id":1806,"name":"Uint256Slot","nameLocations":["2795:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1762,"src":"2795:11:13"},"referencedDeclaration":1762,"src":"2795:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1762_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"}},"visibility":"internal"}],"src":"2794:23:13"},"scope":1857,"src":"2734:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1822,"nodeType":"Block","src":"3103:106:13","statements":[{"AST":{"nativeSrc":"3165:38:13","nodeType":"YulBlock","src":"3165:38:13","statements":[{"nativeSrc":"3179:14:13","nodeType":"YulAssignment","src":"3179:14:13","value":{"name":"slot","nativeSrc":"3189:4:13","nodeType":"YulIdentifier","src":"3189:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"3179:6:13","nodeType":"YulIdentifier","src":"3179:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":1819,"isOffset":false,"isSlot":true,"src":"3179:6:13","suffix":"slot","valueSize":1},{"declaration":1815,"isOffset":false,"isSlot":false,"src":"3189:4:13","valueSize":1}],"id":1821,"nodeType":"InlineAssembly","src":"3156:47:13"}]},"documentation":{"id":1813,"nodeType":"StructuredDocumentation","src":"2930:86:13","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":1823,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3030:13:13","nodeType":"FunctionDefinition","parameters":{"id":1816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"slot","nameLocation":"3052:4:13","nodeType":"VariableDeclaration","scope":1823,"src":"3044:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1814,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3044:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3043:14:13"},"returnParameters":{"id":1820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1819,"mutability":"mutable","name":"r","nameLocation":"3100:1:13","nodeType":"VariableDeclaration","scope":1823,"src":"3081:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1765_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"},"typeName":{"id":1818,"nodeType":"UserDefinedTypeName","pathNode":{"id":1817,"name":"StringSlot","nameLocations":["3081:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1765,"src":"3081:10:13"},"referencedDeclaration":1765,"src":"3081:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1765_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"}},"visibility":"internal"}],"src":"3080:22:13"},"scope":1857,"src":"3021:188:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1833,"nodeType":"Block","src":"3411:112:13","statements":[{"AST":{"nativeSrc":"3473:44:13","nodeType":"YulBlock","src":"3473:44:13","statements":[{"nativeSrc":"3487:20:13","nodeType":"YulAssignment","src":"3487:20:13","value":{"name":"store.slot","nativeSrc":"3497:10:13","nodeType":"YulIdentifier","src":"3497:10:13"},"variableNames":[{"name":"r.slot","nativeSrc":"3487:6:13","nodeType":"YulIdentifier","src":"3487:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":1830,"isOffset":false,"isSlot":true,"src":"3487:6:13","suffix":"slot","valueSize":1},{"declaration":1826,"isOffset":false,"isSlot":true,"src":"3497:10:13","suffix":"slot","valueSize":1}],"id":1832,"nodeType":"InlineAssembly","src":"3464:53:13"}]},"documentation":{"id":1824,"nodeType":"StructuredDocumentation","src":"3215:101:13","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1834,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3330:13:13","nodeType":"FunctionDefinition","parameters":{"id":1827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1826,"mutability":"mutable","name":"store","nameLocation":"3359:5:13","nodeType":"VariableDeclaration","scope":1834,"src":"3344:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1825,"name":"string","nodeType":"ElementaryTypeName","src":"3344:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3343:22:13"},"returnParameters":{"id":1831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1830,"mutability":"mutable","name":"r","nameLocation":"3408:1:13","nodeType":"VariableDeclaration","scope":1834,"src":"3389:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1765_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"},"typeName":{"id":1829,"nodeType":"UserDefinedTypeName","pathNode":{"id":1828,"name":"StringSlot","nameLocations":["3389:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1765,"src":"3389:10:13"},"referencedDeclaration":1765,"src":"3389:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1765_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"}},"visibility":"internal"}],"src":"3388:22:13"},"scope":1857,"src":"3321:202:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1844,"nodeType":"Block","src":"3699:106:13","statements":[{"AST":{"nativeSrc":"3761:38:13","nodeType":"YulBlock","src":"3761:38:13","statements":[{"nativeSrc":"3775:14:13","nodeType":"YulAssignment","src":"3775:14:13","value":{"name":"slot","nativeSrc":"3785:4:13","nodeType":"YulIdentifier","src":"3785:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"3775:6:13","nodeType":"YulIdentifier","src":"3775:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":1841,"isOffset":false,"isSlot":true,"src":"3775:6:13","suffix":"slot","valueSize":1},{"declaration":1837,"isOffset":false,"isSlot":false,"src":"3785:4:13","valueSize":1}],"id":1843,"nodeType":"InlineAssembly","src":"3752:47:13"}]},"documentation":{"id":1835,"nodeType":"StructuredDocumentation","src":"3529:85:13","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":1845,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3628:12:13","nodeType":"FunctionDefinition","parameters":{"id":1838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1837,"mutability":"mutable","name":"slot","nameLocation":"3649:4:13","nodeType":"VariableDeclaration","scope":1845,"src":"3641:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1836,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3641:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3640:14:13"},"returnParameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"r","nameLocation":"3696:1:13","nodeType":"VariableDeclaration","scope":1845,"src":"3678:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1768_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"},"typeName":{"id":1840,"nodeType":"UserDefinedTypeName","pathNode":{"id":1839,"name":"BytesSlot","nameLocations":["3678:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":1768,"src":"3678:9:13"},"referencedDeclaration":1768,"src":"3678:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1768_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"}},"visibility":"internal"}],"src":"3677:21:13"},"scope":1857,"src":"3619:186:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1855,"nodeType":"Block","src":"4002:112:13","statements":[{"AST":{"nativeSrc":"4064:44:13","nodeType":"YulBlock","src":"4064:44:13","statements":[{"nativeSrc":"4078:20:13","nodeType":"YulAssignment","src":"4078:20:13","value":{"name":"store.slot","nativeSrc":"4088:10:13","nodeType":"YulIdentifier","src":"4088:10:13"},"variableNames":[{"name":"r.slot","nativeSrc":"4078:6:13","nodeType":"YulIdentifier","src":"4078:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":1852,"isOffset":false,"isSlot":true,"src":"4078:6:13","suffix":"slot","valueSize":1},{"declaration":1848,"isOffset":false,"isSlot":true,"src":"4088:10:13","suffix":"slot","valueSize":1}],"id":1854,"nodeType":"InlineAssembly","src":"4055:53:13"}]},"documentation":{"id":1846,"nodeType":"StructuredDocumentation","src":"3811:99:13","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1856,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3924:12:13","nodeType":"FunctionDefinition","parameters":{"id":1849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1848,"mutability":"mutable","name":"store","nameLocation":"3951:5:13","nodeType":"VariableDeclaration","scope":1856,"src":"3937:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1847,"name":"bytes","nodeType":"ElementaryTypeName","src":"3937:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3936:21:13"},"returnParameters":{"id":1853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1852,"mutability":"mutable","name":"r","nameLocation":"3999:1:13","nodeType":"VariableDeclaration","scope":1856,"src":"3981:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1768_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"},"typeName":{"id":1851,"nodeType":"UserDefinedTypeName","pathNode":{"id":1850,"name":"BytesSlot","nameLocations":["3981:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":1768,"src":"3981:9:13"},"referencedDeclaration":1768,"src":"3981:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1768_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"}},"visibility":"internal"}],"src":"3980:21:13"},"scope":1857,"src":"3915:199:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1858,"src":"1420:2696:13","usedErrors":[],"usedEvents":[]}],"src":"193:3924:13"},"id":13},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","exportedSymbols":{"MathUpgradeable":[3318],"SignedMathUpgradeable":[3423],"StringsUpgradeable":[2086]},"id":2087,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1859,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:14"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","file":"./math/MathUpgradeable.sol","id":1860,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2087,"sourceUnit":3319,"src":"126:36:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol","file":"./math/SignedMathUpgradeable.sol","id":1861,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2087,"sourceUnit":3424,"src":"163:42:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"StringsUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1862,"nodeType":"StructuredDocumentation","src":"207:34:14","text":" @dev String operations."},"fullyImplemented":true,"id":2086,"linearizedBaseContracts":[2086],"name":"StringsUpgradeable","nameLocation":"250:18:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1865,"mutability":"constant","name":"_SYMBOLS","nameLocation":"300:8:14","nodeType":"VariableDeclaration","scope":2086,"src":"275:54:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1863,"name":"bytes16","nodeType":"ElementaryTypeName","src":"275:7:14","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1868,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"358:15:14","nodeType":"VariableDeclaration","scope":2086,"src":"335:43:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1866,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"376:2:14","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1915,"nodeType":"Block","src":"551:636:14","statements":[{"id":1914,"nodeType":"UncheckedBlock","src":"561:620:14","statements":[{"assignments":[1877],"declarations":[{"constant":false,"id":1877,"mutability":"mutable","name":"length","nameLocation":"593:6:14","nodeType":"VariableDeclaration","scope":1914,"src":"585:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1876,"name":"uint256","nodeType":"ElementaryTypeName","src":"585:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1884,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"624:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1878,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"602:15:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$3318_$","typeString":"type(library MathUpgradeable)"}},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"618:5:14","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3155,"src":"602:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"602:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"633:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"602:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"585:49:14"},{"assignments":[1886],"declarations":[{"constant":false,"id":1886,"mutability":"mutable","name":"buffer","nameLocation":"662:6:14","nodeType":"VariableDeclaration","scope":1914,"src":"648:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1885,"name":"string","nodeType":"ElementaryTypeName","src":"648:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1891,"initialValue":{"arguments":[{"id":1889,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"682:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"671:10:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1887,"name":"string","nodeType":"ElementaryTypeName","src":"675:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"671:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"648:41:14"},{"assignments":[1893],"declarations":[{"constant":false,"id":1893,"mutability":"mutable","name":"ptr","nameLocation":"711:3:14","nodeType":"VariableDeclaration","scope":1914,"src":"703:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1892,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1894,"nodeType":"VariableDeclarationStatement","src":"703:11:14"},{"AST":{"nativeSrc":"784:67:14","nodeType":"YulBlock","src":"784:67:14","statements":[{"nativeSrc":"802:35:14","nodeType":"YulAssignment","src":"802:35:14","value":{"arguments":[{"name":"buffer","nativeSrc":"813:6:14","nodeType":"YulIdentifier","src":"813:6:14"},{"arguments":[{"kind":"number","nativeSrc":"825:2:14","nodeType":"YulLiteral","src":"825:2:14","type":"","value":"32"},{"name":"length","nativeSrc":"829:6:14","nodeType":"YulIdentifier","src":"829:6:14"}],"functionName":{"name":"add","nativeSrc":"821:3:14","nodeType":"YulIdentifier","src":"821:3:14"},"nativeSrc":"821:15:14","nodeType":"YulFunctionCall","src":"821:15:14"}],"functionName":{"name":"add","nativeSrc":"809:3:14","nodeType":"YulIdentifier","src":"809:3:14"},"nativeSrc":"809:28:14","nodeType":"YulFunctionCall","src":"809:28:14"},"variableNames":[{"name":"ptr","nativeSrc":"802:3:14","nodeType":"YulIdentifier","src":"802:3:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":1886,"isOffset":false,"isSlot":false,"src":"813:6:14","valueSize":1},{"declaration":1877,"isOffset":false,"isSlot":false,"src":"829:6:14","valueSize":1},{"declaration":1893,"isOffset":false,"isSlot":false,"src":"802:3:14","valueSize":1}],"id":1895,"nodeType":"InlineAssembly","src":"775:76:14"},{"body":{"id":1910,"nodeType":"Block","src":"877:267:14","statements":[{"expression":{"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"895:5:14","subExpression":{"id":1897,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"895:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1899,"nodeType":"ExpressionStatement","src":"895:5:14"},{"AST":{"nativeSrc":"978:84:14","nodeType":"YulBlock","src":"978:84:14","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1008:3:14","nodeType":"YulIdentifier","src":"1008:3:14"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1022:5:14","nodeType":"YulIdentifier","src":"1022:5:14"},{"kind":"number","nativeSrc":"1029:2:14","nodeType":"YulLiteral","src":"1029:2:14","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1018:3:14","nodeType":"YulIdentifier","src":"1018:3:14"},"nativeSrc":"1018:14:14","nodeType":"YulFunctionCall","src":"1018:14:14"},{"name":"_SYMBOLS","nativeSrc":"1034:8:14","nodeType":"YulIdentifier","src":"1034:8:14"}],"functionName":{"name":"byte","nativeSrc":"1013:4:14","nodeType":"YulIdentifier","src":"1013:4:14"},"nativeSrc":"1013:30:14","nodeType":"YulFunctionCall","src":"1013:30:14"}],"functionName":{"name":"mstore8","nativeSrc":"1000:7:14","nodeType":"YulIdentifier","src":"1000:7:14"},"nativeSrc":"1000:44:14","nodeType":"YulFunctionCall","src":"1000:44:14"},"nativeSrc":"1000:44:14","nodeType":"YulExpressionStatement","src":"1000:44:14"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":1865,"isOffset":false,"isSlot":false,"src":"1034:8:14","valueSize":1},{"declaration":1893,"isOffset":false,"isSlot":false,"src":"1008:3:14","valueSize":1},{"declaration":1871,"isOffset":false,"isSlot":false,"src":"1022:5:14","valueSize":1}],"id":1900,"nodeType":"InlineAssembly","src":"969:93:14"},{"expression":{"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"1079:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1079:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1904,"nodeType":"ExpressionStatement","src":"1079:11:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"1112:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1121:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1112:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1909,"nodeType":"IfStatement","src":"1108:21:14","trueBody":{"id":1908,"nodeType":"Break","src":"1124:5:14"}}]},"condition":{"hexValue":"74727565","id":1896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"871:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1911,"nodeType":"WhileStatement","src":"864:280:14"},{"expression":{"id":1912,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"1164:6:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1875,"id":1913,"nodeType":"Return","src":"1157:13:14"}]}]},"documentation":{"id":1869,"nodeType":"StructuredDocumentation","src":"385:90:14","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1916,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"489:8:14","nodeType":"FunctionDefinition","parameters":{"id":1872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1871,"mutability":"mutable","name":"value","nameLocation":"506:5:14","nodeType":"VariableDeclaration","scope":1916,"src":"498:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1870,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"497:15:14"},"returnParameters":{"id":1875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1916,"src":"536:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1873,"name":"string","nodeType":"ElementaryTypeName","src":"536:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"535:15:14"},"scope":2086,"src":"480:707:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1943,"nodeType":"Block","src":"1357:114:14","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"1398:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1406:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1398:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1416:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1398:20:14","trueExpression":{"hexValue":"2d","id":1931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1410:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"1455:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1935,"name":"SignedMathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"1429:21:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMathUpgradeable_$3423_$","typeString":"type(library SignedMathUpgradeable)"}},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1451:3:14","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3422,"src":"1429:25:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1429:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1934,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[1916,1944],"referencedDeclaration":1916,"src":"1420:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1420:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1926,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1381:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1385:12:14","memberName":"encodePacked","nodeType":"MemberAccess","src":"1381:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1381:82:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1374:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1924,"name":"string","nodeType":"ElementaryTypeName","src":"1374:6:14","typeDescriptions":{}}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1374:90:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1923,"id":1942,"nodeType":"Return","src":"1367:97:14"}]},"documentation":{"id":1917,"nodeType":"StructuredDocumentation","src":"1193:89:14","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1944,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1296:8:14","nodeType":"FunctionDefinition","parameters":{"id":1920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1919,"mutability":"mutable","name":"value","nameLocation":"1312:5:14","nodeType":"VariableDeclaration","scope":1944,"src":"1305:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1918,"name":"int256","nodeType":"ElementaryTypeName","src":"1305:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1304:14:14"},"returnParameters":{"id":1923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1944,"src":"1342:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1921,"name":"string","nodeType":"ElementaryTypeName","src":"1342:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1341:15:14"},"scope":2086,"src":"1287:184:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1963,"nodeType":"Block","src":"1650:111:14","statements":[{"id":1962,"nodeType":"UncheckedBlock","src":"1660:95:14","statements":[{"expression":{"arguments":[{"id":1953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"1703:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"1733:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1954,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"1710:15:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$3318_$","typeString":"type(library MathUpgradeable)"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:14","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3278,"src":"1710:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1710:29:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1742:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1710:33:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1952,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1964,2040,2060],"referencedDeclaration":2040,"src":"1691:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1691:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1951,"id":1961,"nodeType":"Return","src":"1684:60:14"}]}]},"documentation":{"id":1945,"nodeType":"StructuredDocumentation","src":"1477:94:14","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1964,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1585:11:14","nodeType":"FunctionDefinition","parameters":{"id":1948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"value","nameLocation":"1605:5:14","nodeType":"VariableDeclaration","scope":1964,"src":"1597:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1946,"name":"uint256","nodeType":"ElementaryTypeName","src":"1597:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1596:15:14"},"returnParameters":{"id":1951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1964,"src":"1635:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1949,"name":"string","nodeType":"ElementaryTypeName","src":"1635:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1634:15:14"},"scope":2086,"src":"1576:185:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2039,"nodeType":"Block","src":"1974:347:14","statements":[{"assignments":[1975],"declarations":[{"constant":false,"id":1975,"mutability":"mutable","name":"buffer","nameLocation":"1997:6:14","nodeType":"VariableDeclaration","scope":2039,"src":"1984:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1974,"name":"bytes","nodeType":"ElementaryTypeName","src":"1984:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1984,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2016:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1979,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"2020:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2016:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2029:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2016:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2006:9:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1976,"name":"bytes","nodeType":"ElementaryTypeName","src":"2010:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2006:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1984:47:14"},{"expression":{"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1985,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"2041:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1987,"indexExpression":{"hexValue":"30","id":1986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2041:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2053:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2041:15:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1990,"nodeType":"ExpressionStatement","src":"2041:15:14"},{"expression":{"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1991,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"2066:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1993,"indexExpression":{"hexValue":"31","id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2073:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2066:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2078:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2066:15:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1996,"nodeType":"ExpressionStatement","src":"2066:15:14"},{"body":{"id":2025,"nodeType":"Block","src":"2136:83:14","statements":[{"expression":{"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2011,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"2150:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2013,"indexExpression":{"id":2012,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"2157:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2150:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2014,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"2162:8:14","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2018,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"2171:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:3:14","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2171:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2162:21:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2150:33:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2020,"nodeType":"ExpressionStatement","src":"2150:33:14"},{"expression":{"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"2197:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2207:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2197:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2024,"nodeType":"ExpressionStatement","src":"2197:11:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2005,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"2124:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2128:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2124:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2026,"initializationExpression":{"assignments":[1998],"declarations":[{"constant":false,"id":1998,"mutability":"mutable","name":"i","nameLocation":"2104:1:14","nodeType":"VariableDeclaration","scope":2026,"src":"2096:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1997,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2004,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2108:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2000,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"2112:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2108:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2121:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2108:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2096:26:14"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2131:3:14","subExpression":{"id":2008,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"2133:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2010,"nodeType":"ExpressionStatement","src":"2131:3:14"},"nodeType":"ForStatement","src":"2091:128:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"2236:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2245:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2248:34:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2027,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2228:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2228:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2033,"nodeType":"ExpressionStatement","src":"2228:55:14"},{"expression":{"arguments":[{"id":2036,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"2307:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2300:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2034,"name":"string","nodeType":"ElementaryTypeName","src":"2300:6:14","typeDescriptions":{}}},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1973,"id":2038,"nodeType":"Return","src":"2293:21:14"}]},"documentation":{"id":1965,"nodeType":"StructuredDocumentation","src":"1767:112:14","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2040,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1893:11:14","nodeType":"FunctionDefinition","parameters":{"id":1970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1967,"mutability":"mutable","name":"value","nameLocation":"1913:5:14","nodeType":"VariableDeclaration","scope":2040,"src":"1905:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1966,"name":"uint256","nodeType":"ElementaryTypeName","src":"1905:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1969,"mutability":"mutable","name":"length","nameLocation":"1928:6:14","nodeType":"VariableDeclaration","scope":2040,"src":"1920:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1968,"name":"uint256","nodeType":"ElementaryTypeName","src":"1920:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1904:31:14"},"returnParameters":{"id":1973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2040,"src":"1959:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1971,"name":"string","nodeType":"ElementaryTypeName","src":"1959:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1958:15:14"},"scope":2086,"src":"1884:437:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2059,"nodeType":"Block","src":"2546:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2053,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"2591:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2583:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2051,"name":"uint160","nodeType":"ElementaryTypeName","src":"2583:7:14","typeDescriptions":{}}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2583:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2575:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2049,"name":"uint256","nodeType":"ElementaryTypeName","src":"2575:7:14","typeDescriptions":{}}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2575:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2056,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"2599:15:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2048,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1964,2040,2060],"referencedDeclaration":2040,"src":"2563:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2563:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2047,"id":2058,"nodeType":"Return","src":"2556:59:14"}]},"documentation":{"id":2041,"nodeType":"StructuredDocumentation","src":"2327:141:14","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2060,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2482:11:14","nodeType":"FunctionDefinition","parameters":{"id":2044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2043,"mutability":"mutable","name":"addr","nameLocation":"2502:4:14","nodeType":"VariableDeclaration","scope":2060,"src":"2494:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2042,"name":"address","nodeType":"ElementaryTypeName","src":"2494:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2493:14:14"},"returnParameters":{"id":2047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2060,"src":"2531:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2045,"name":"string","nodeType":"ElementaryTypeName","src":"2531:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2530:15:14"},"scope":2086,"src":"2473:149:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2084,"nodeType":"Block","src":"2777:66:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2073,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"2810:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2804:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2071,"name":"bytes","nodeType":"ElementaryTypeName","src":"2804:5:14","typeDescriptions":{}}},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2804:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2070,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2794:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2794:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2079,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"2833:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2827:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2077,"name":"bytes","nodeType":"ElementaryTypeName","src":"2827:5:14","typeDescriptions":{}}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2827:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2076,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2817:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2817:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2794:42:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2069,"id":2083,"nodeType":"Return","src":"2787:49:14"}]},"documentation":{"id":2061,"nodeType":"StructuredDocumentation","src":"2628:66:14","text":" @dev Returns true if the two strings are equal."},"id":2085,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2708:5:14","nodeType":"FunctionDefinition","parameters":{"id":2066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2063,"mutability":"mutable","name":"a","nameLocation":"2728:1:14","nodeType":"VariableDeclaration","scope":2085,"src":"2714:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2062,"name":"string","nodeType":"ElementaryTypeName","src":"2714:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2065,"mutability":"mutable","name":"b","nameLocation":"2745:1:14","nodeType":"VariableDeclaration","scope":2085,"src":"2731:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2064,"name":"string","nodeType":"ElementaryTypeName","src":"2731:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2713:34:14"},"returnParameters":{"id":2069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2085,"src":"2771:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2067,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:14"},"scope":2086,"src":"2699:144:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2087,"src":"242:2603:14","usedErrors":[],"usedEvents":[]}],"src":"101:2745:14"},"id":14},"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol","exportedSymbols":{"ECDSAUpgradeable":[2452],"MathUpgradeable":[3318],"SignedMathUpgradeable":[3423],"StringsUpgradeable":[2086]},"id":2453,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2088,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:15"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","file":"../StringsUpgradeable.sol","id":2089,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2453,"sourceUnit":2087,"src":"137:35:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSAUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2090,"nodeType":"StructuredDocumentation","src":"174:205:15","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2452,"linearizedBaseContracts":[2452],"name":"ECDSAUpgradeable","nameLocation":"388:16:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSAUpgradeable.RecoverError","id":2096,"members":[{"id":2091,"name":"NoError","nameLocation":"439:7:15","nodeType":"EnumValue","src":"439:7:15"},{"id":2092,"name":"InvalidSignature","nameLocation":"456:16:15","nodeType":"EnumValue","src":"456:16:15"},{"id":2093,"name":"InvalidSignatureLength","nameLocation":"482:22:15","nodeType":"EnumValue","src":"482:22:15"},{"id":2094,"name":"InvalidSignatureS","nameLocation":"514:17:15","nodeType":"EnumValue","src":"514:17:15"},{"id":2095,"name":"InvalidSignatureV","nameLocation":"541:17:15","nodeType":"EnumValue","src":"541:17:15"}],"name":"RecoverError","nameLocation":"416:12:15","nodeType":"EnumDefinition","src":"411:175:15"},{"body":{"id":2139,"nodeType":"Block","src":"646:457:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2102,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"660:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2103,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"669:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2096_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"682:7:15","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2091,"src":"669:20:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"}},"src":"660:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2108,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"756:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2109,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"765:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2096_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":2110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"778:16:15","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2092,"src":"765:29:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"}},"src":"756:38:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2117,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"865:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2118,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"874:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2096_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":2119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"887:22:15","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2093,"src":"874:35:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"}},"src":"865:44:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2126,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"987:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2127,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"996:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2096_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1009:17:15","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2094,"src":"996:30:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"}},"src":"987:39:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2135,"nodeType":"IfStatement","src":"983:114:15","trueBody":{"id":2134,"nodeType":"Block","src":"1028:69:15","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":2131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1049:36:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":2130,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1042:6:15","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1042:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2133,"nodeType":"ExpressionStatement","src":"1042:44:15"}]}},"id":2136,"nodeType":"IfStatement","src":"861:236:15","trueBody":{"id":2125,"nodeType":"Block","src":"911:66:15","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":2122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"932:33:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":2121,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"925:6:15","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"925:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2124,"nodeType":"ExpressionStatement","src":"925:41:15"}]}},"id":2137,"nodeType":"IfStatement","src":"752:345:15","trueBody":{"id":2116,"nodeType":"Block","src":"796:59:15","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":2113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"817:26:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":2112,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"810:6:15","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"810:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2115,"nodeType":"ExpressionStatement","src":"810:34:15"}]}},"id":2138,"nodeType":"IfStatement","src":"656:441:15","trueBody":{"id":2107,"nodeType":"Block","src":"691:55:15","statements":[{"functionReturnParameters":2101,"id":2106,"nodeType":"Return","src":"705:7:15"}]}}]},"id":2140,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"601:11:15","nodeType":"FunctionDefinition","parameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"mutability":"mutable","name":"error","nameLocation":"626:5:15","nodeType":"VariableDeclaration","scope":2140,"src":"613:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":2098,"nodeType":"UserDefinedTypeName","pathNode":{"id":2097,"name":"RecoverError","nameLocations":["613:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2096,"src":"613:12:15"},"referencedDeclaration":2096,"src":"613:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"src":"612:20:15"},"returnParameters":{"id":2101,"nodeType":"ParameterList","parameters":[],"src":"646:0:15"},"scope":2452,"src":"592:511:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2185,"nodeType":"Block","src":"2271:626:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2153,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"2285:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2295:6:15","memberName":"length","nodeType":"MemberAccess","src":"2285:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2305:2:15","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2285:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2183,"nodeType":"Block","src":"2810:81:15","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2840:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2832:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2175,"name":"address","nodeType":"ElementaryTypeName","src":"2832:7:15","typeDescriptions":{}}},"id":2178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2832:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2179,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"2844:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2096_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2857:22:15","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2093,"src":"2844:35:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"id":2181,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2831:49:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2096_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":2152,"id":2182,"nodeType":"Return","src":"2824:56:15"}]},"id":2184,"nodeType":"IfStatement","src":"2281:610:15","trueBody":{"id":2174,"nodeType":"Block","src":"2309:495:15","statements":[{"assignments":[2158],"declarations":[{"constant":false,"id":2158,"mutability":"mutable","name":"r","nameLocation":"2331:1:15","nodeType":"VariableDeclaration","scope":2174,"src":"2323:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2157,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2323:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2159,"nodeType":"VariableDeclarationStatement","src":"2323:9:15"},{"assignments":[2161],"declarations":[{"constant":false,"id":2161,"mutability":"mutable","name":"s","nameLocation":"2354:1:15","nodeType":"VariableDeclaration","scope":2174,"src":"2346:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2346:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2162,"nodeType":"VariableDeclarationStatement","src":"2346:9:15"},{"assignments":[2164],"declarations":[{"constant":false,"id":2164,"mutability":"mutable","name":"v","nameLocation":"2375:1:15","nodeType":"VariableDeclaration","scope":2174,"src":"2369:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2163,"name":"uint8","nodeType":"ElementaryTypeName","src":"2369:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2165,"nodeType":"VariableDeclarationStatement","src":"2369:7:15"},{"AST":{"nativeSrc":"2577:171:15","nodeType":"YulBlock","src":"2577:171:15","statements":[{"nativeSrc":"2595:32:15","nodeType":"YulAssignment","src":"2595:32:15","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2610:9:15","nodeType":"YulIdentifier","src":"2610:9:15"},{"kind":"number","nativeSrc":"2621:4:15","nodeType":"YulLiteral","src":"2621:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2606:3:15","nodeType":"YulIdentifier","src":"2606:3:15"},"nativeSrc":"2606:20:15","nodeType":"YulFunctionCall","src":"2606:20:15"}],"functionName":{"name":"mload","nativeSrc":"2600:5:15","nodeType":"YulIdentifier","src":"2600:5:15"},"nativeSrc":"2600:27:15","nodeType":"YulFunctionCall","src":"2600:27:15"},"variableNames":[{"name":"r","nativeSrc":"2595:1:15","nodeType":"YulIdentifier","src":"2595:1:15"}]},{"nativeSrc":"2644:32:15","nodeType":"YulAssignment","src":"2644:32:15","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2659:9:15","nodeType":"YulIdentifier","src":"2659:9:15"},{"kind":"number","nativeSrc":"2670:4:15","nodeType":"YulLiteral","src":"2670:4:15","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2655:3:15","nodeType":"YulIdentifier","src":"2655:3:15"},"nativeSrc":"2655:20:15","nodeType":"YulFunctionCall","src":"2655:20:15"}],"functionName":{"name":"mload","nativeSrc":"2649:5:15","nodeType":"YulIdentifier","src":"2649:5:15"},"nativeSrc":"2649:27:15","nodeType":"YulFunctionCall","src":"2649:27:15"},"variableNames":[{"name":"s","nativeSrc":"2644:1:15","nodeType":"YulIdentifier","src":"2644:1:15"}]},{"nativeSrc":"2693:41:15","nodeType":"YulAssignment","src":"2693:41:15","value":{"arguments":[{"kind":"number","nativeSrc":"2703:1:15","nodeType":"YulLiteral","src":"2703:1:15","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2716:9:15","nodeType":"YulIdentifier","src":"2716:9:15"},{"kind":"number","nativeSrc":"2727:4:15","nodeType":"YulLiteral","src":"2727:4:15","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2712:3:15","nodeType":"YulIdentifier","src":"2712:3:15"},"nativeSrc":"2712:20:15","nodeType":"YulFunctionCall","src":"2712:20:15"}],"functionName":{"name":"mload","nativeSrc":"2706:5:15","nodeType":"YulIdentifier","src":"2706:5:15"},"nativeSrc":"2706:27:15","nodeType":"YulFunctionCall","src":"2706:27:15"}],"functionName":{"name":"byte","nativeSrc":"2698:4:15","nodeType":"YulIdentifier","src":"2698:4:15"},"nativeSrc":"2698:36:15","nodeType":"YulFunctionCall","src":"2698:36:15"},"variableNames":[{"name":"v","nativeSrc":"2693:1:15","nodeType":"YulIdentifier","src":"2693:1:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2158,"isOffset":false,"isSlot":false,"src":"2595:1:15","valueSize":1},{"declaration":2161,"isOffset":false,"isSlot":false,"src":"2644:1:15","valueSize":1},{"declaration":2145,"isOffset":false,"isSlot":false,"src":"2610:9:15","valueSize":1},{"declaration":2145,"isOffset":false,"isSlot":false,"src":"2659:9:15","valueSize":1},{"declaration":2145,"isOffset":false,"isSlot":false,"src":"2716:9:15","valueSize":1},{"declaration":2164,"isOffset":false,"isSlot":false,"src":"2693:1:15","valueSize":1}],"id":2166,"nodeType":"InlineAssembly","src":"2568:180:15"},{"expression":{"arguments":[{"id":2168,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"2779:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2169,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"2785:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2170,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"2788:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2171,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"2791:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2167,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2186,2260,2354],"referencedDeclaration":2354,"src":"2768:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2096_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2096_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":2152,"id":2173,"nodeType":"Return","src":"2761:32:15"}]}}]},"documentation":{"id":2141,"nodeType":"StructuredDocumentation","src":"1109:1053:15","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":2186,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2176:10:15","nodeType":"FunctionDefinition","parameters":{"id":2146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2143,"mutability":"mutable","name":"hash","nameLocation":"2195:4:15","nodeType":"VariableDeclaration","scope":2186,"src":"2187:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2142,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2145,"mutability":"mutable","name":"signature","nameLocation":"2214:9:15","nodeType":"VariableDeclaration","scope":2186,"src":"2201:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2144,"name":"bytes","nodeType":"ElementaryTypeName","src":"2201:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2186:38:15"},"returnParameters":{"id":2152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2186,"src":"2248:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2147,"name":"address","nodeType":"ElementaryTypeName","src":"2248:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2186,"src":"2257:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":2150,"nodeType":"UserDefinedTypeName","pathNode":{"id":2149,"name":"RecoverError","nameLocations":["2257:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2096,"src":"2257:12:15"},"referencedDeclaration":2096,"src":"2257:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"src":"2247:23:15"},"scope":2452,"src":"2167:730:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2212,"nodeType":"Block","src":"3770:140:15","statements":[{"assignments":[2197,2200],"declarations":[{"constant":false,"id":2197,"mutability":"mutable","name":"recovered","nameLocation":"3789:9:15","nodeType":"VariableDeclaration","scope":2212,"src":"3781:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2196,"name":"address","nodeType":"ElementaryTypeName","src":"3781:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2200,"mutability":"mutable","name":"error","nameLocation":"3813:5:15","nodeType":"VariableDeclaration","scope":2212,"src":"3800:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":2199,"nodeType":"UserDefinedTypeName","pathNode":{"id":2198,"name":"RecoverError","nameLocations":["3800:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2096,"src":"3800:12:15"},"referencedDeclaration":2096,"src":"3800:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"id":2205,"initialValue":{"arguments":[{"id":2202,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"3833:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2203,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"3839:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2201,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2186,2260,2354],"referencedDeclaration":2186,"src":"3822:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2096_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3822:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2096_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3780:69:15"},{"expression":{"arguments":[{"id":2207,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"3871:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"}],"id":2206,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"3859:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2096_$returns$__$","typeString":"function (enum ECDSAUpgradeable.RecoverError) pure"}},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2209,"nodeType":"ExpressionStatement","src":"3859:18:15"},{"expression":{"id":2210,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"3894:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2195,"id":2211,"nodeType":"Return","src":"3887:16:15"}]},"documentation":{"id":2187,"nodeType":"StructuredDocumentation","src":"2903:775:15","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":2213,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3692:7:15","nodeType":"FunctionDefinition","parameters":{"id":2192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2189,"mutability":"mutable","name":"hash","nameLocation":"3708:4:15","nodeType":"VariableDeclaration","scope":2213,"src":"3700:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3700:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2191,"mutability":"mutable","name":"signature","nameLocation":"3727:9:15","nodeType":"VariableDeclaration","scope":2213,"src":"3714:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2190,"name":"bytes","nodeType":"ElementaryTypeName","src":"3714:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3699:38:15"},"returnParameters":{"id":2195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2213,"src":"3761:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2193,"name":"address","nodeType":"ElementaryTypeName","src":"3761:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3760:9:15"},"scope":2452,"src":"3683:227:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2259,"nodeType":"Block","src":"4267:203:15","statements":[{"assignments":[2229],"declarations":[{"constant":false,"id":2229,"mutability":"mutable","name":"s","nameLocation":"4285:1:15","nodeType":"VariableDeclaration","scope":2259,"src":"4277:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2228,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4277:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2236,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2230,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"4289:2:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4302:66:15","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4294:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4294:7:15","typeDescriptions":{}}},"id":2234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4294:75:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4289:80:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4277:92:15"},{"assignments":[2238],"declarations":[{"constant":false,"id":2238,"mutability":"mutable","name":"v","nameLocation":"4385:1:15","nodeType":"VariableDeclaration","scope":2259,"src":"4379:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2237,"name":"uint8","nodeType":"ElementaryTypeName","src":"4379:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2251,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2243,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"4404:2:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4396:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2241,"name":"uint256","nodeType":"ElementaryTypeName","src":"4396:7:15","typeDescriptions":{}}},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4396:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4411:3:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4396:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2247,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4395:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4418:2:15","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4395:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4389:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2239,"name":"uint8","nodeType":"ElementaryTypeName","src":"4389:5:15","typeDescriptions":{}}},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4389:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4379:42:15"},{"expression":{"arguments":[{"id":2253,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"4449:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2254,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"4455:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2255,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"4458:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2256,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"4461:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2252,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2186,2260,2354],"referencedDeclaration":2354,"src":"4438:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2096_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4438:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2096_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":2227,"id":2258,"nodeType":"Return","src":"4431:32:15"}]},"documentation":{"id":2214,"nodeType":"StructuredDocumentation","src":"3916:243:15","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":2260,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4173:10:15","nodeType":"FunctionDefinition","parameters":{"id":2221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2216,"mutability":"mutable","name":"hash","nameLocation":"4192:4:15","nodeType":"VariableDeclaration","scope":2260,"src":"4184:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4184:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2218,"mutability":"mutable","name":"r","nameLocation":"4206:1:15","nodeType":"VariableDeclaration","scope":2260,"src":"4198:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2217,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4198:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2220,"mutability":"mutable","name":"vs","nameLocation":"4217:2:15","nodeType":"VariableDeclaration","scope":2260,"src":"4209:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4209:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4183:37:15"},"returnParameters":{"id":2227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2260,"src":"4244:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2222,"name":"address","nodeType":"ElementaryTypeName","src":"4244:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2260,"src":"4253:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":2225,"nodeType":"UserDefinedTypeName","pathNode":{"id":2224,"name":"RecoverError","nameLocations":["4253:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2096,"src":"4253:12:15"},"referencedDeclaration":2096,"src":"4253:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"src":"4243:23:15"},"scope":2452,"src":"4164:306:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2289,"nodeType":"Block","src":"4721:136:15","statements":[{"assignments":[2273,2276],"declarations":[{"constant":false,"id":2273,"mutability":"mutable","name":"recovered","nameLocation":"4740:9:15","nodeType":"VariableDeclaration","scope":2289,"src":"4732:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2272,"name":"address","nodeType":"ElementaryTypeName","src":"4732:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2276,"mutability":"mutable","name":"error","nameLocation":"4764:5:15","nodeType":"VariableDeclaration","scope":2289,"src":"4751:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":2275,"nodeType":"UserDefinedTypeName","pathNode":{"id":2274,"name":"RecoverError","nameLocations":["4751:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2096,"src":"4751:12:15"},"referencedDeclaration":2096,"src":"4751:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"id":2282,"initialValue":{"arguments":[{"id":2278,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"4784:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2279,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"4790:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2280,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"4793:2:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2277,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2186,2260,2354],"referencedDeclaration":2260,"src":"4773:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2096_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4773:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2096_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4731:65:15"},{"expression":{"arguments":[{"id":2284,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"4818:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"}],"id":2283,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"4806:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2096_$returns$__$","typeString":"function (enum ECDSAUpgradeable.RecoverError) pure"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4806:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2286,"nodeType":"ExpressionStatement","src":"4806:18:15"},{"expression":{"id":2287,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"4841:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2271,"id":2288,"nodeType":"Return","src":"4834:16:15"}]},"documentation":{"id":2261,"nodeType":"StructuredDocumentation","src":"4476:154:15","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":2290,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4644:7:15","nodeType":"FunctionDefinition","parameters":{"id":2268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2263,"mutability":"mutable","name":"hash","nameLocation":"4660:4:15","nodeType":"VariableDeclaration","scope":2290,"src":"4652:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4652:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2265,"mutability":"mutable","name":"r","nameLocation":"4674:1:15","nodeType":"VariableDeclaration","scope":2290,"src":"4666:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4666:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2267,"mutability":"mutable","name":"vs","nameLocation":"4685:2:15","nodeType":"VariableDeclaration","scope":2290,"src":"4677:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2266,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4677:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4651:37:15"},"returnParameters":{"id":2271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2290,"src":"4712:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2269,"name":"address","nodeType":"ElementaryTypeName","src":"4712:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4711:9:15"},"scope":2452,"src":"4635:222:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2353,"nodeType":"Block","src":"5142:1345:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2309,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"6038:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6030:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2307,"name":"uint256","nodeType":"ElementaryTypeName","src":"6030:7:15","typeDescriptions":{}}},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6030:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6043:66:15","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6030:79:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2322,"nodeType":"IfStatement","src":"6026:161:15","trueBody":{"id":2321,"nodeType":"Block","src":"6111:76:15","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6141:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6133:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2313,"name":"address","nodeType":"ElementaryTypeName","src":"6133:7:15","typeDescriptions":{}}},"id":2316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6133:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2317,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"6145:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2096_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6158:17:15","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2094,"src":"6145:30:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"id":2319,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6132:44:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2096_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":2306,"id":2320,"nodeType":"Return","src":"6125:51:15"}]}},{"assignments":[2324],"declarations":[{"constant":false,"id":2324,"mutability":"mutable","name":"signer","nameLocation":"6289:6:15","nodeType":"VariableDeclaration","scope":2353,"src":"6281:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2323,"name":"address","nodeType":"ElementaryTypeName","src":"6281:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2331,"initialValue":{"arguments":[{"id":2326,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"6308:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2327,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"6314:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2328,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"6317:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2329,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"6320:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2325,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6298:9:15","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6281:41:15"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2332,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"6336:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6354:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6346:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2333,"name":"address","nodeType":"ElementaryTypeName","src":"6346:7:15","typeDescriptions":{}}},"id":2336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6346:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6336:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2347,"nodeType":"IfStatement","src":"6332:101:15","trueBody":{"id":2346,"nodeType":"Block","src":"6358:75:15","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6388:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6380:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2338,"name":"address","nodeType":"ElementaryTypeName","src":"6380:7:15","typeDescriptions":{}}},"id":2341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6380:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2342,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"6392:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2096_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":2343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6405:16:15","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2092,"src":"6392:29:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"id":2344,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6379:43:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2096_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":2306,"id":2345,"nodeType":"Return","src":"6372:50:15"}]}},{"expression":{"components":[{"id":2348,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"6451:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2349,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"6459:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2096_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":2350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6472:7:15","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2091,"src":"6459:20:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"id":2351,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6450:30:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2096_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":2306,"id":2352,"nodeType":"Return","src":"6443:37:15"}]},"documentation":{"id":2291,"nodeType":"StructuredDocumentation","src":"4863:163:15","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":2354,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5040:10:15","nodeType":"FunctionDefinition","parameters":{"id":2300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2293,"mutability":"mutable","name":"hash","nameLocation":"5059:4:15","nodeType":"VariableDeclaration","scope":2354,"src":"5051:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2292,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5051:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2295,"mutability":"mutable","name":"v","nameLocation":"5071:1:15","nodeType":"VariableDeclaration","scope":2354,"src":"5065:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2294,"name":"uint8","nodeType":"ElementaryTypeName","src":"5065:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2297,"mutability":"mutable","name":"r","nameLocation":"5082:1:15","nodeType":"VariableDeclaration","scope":2354,"src":"5074:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2296,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5074:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2299,"mutability":"mutable","name":"s","nameLocation":"5093:1:15","nodeType":"VariableDeclaration","scope":2354,"src":"5085:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5085:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5050:45:15"},"returnParameters":{"id":2306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2354,"src":"5119:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2301,"name":"address","nodeType":"ElementaryTypeName","src":"5119:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2354,"src":"5128:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":2304,"nodeType":"UserDefinedTypeName","pathNode":{"id":2303,"name":"RecoverError","nameLocations":["5128:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2096,"src":"5128:12:15"},"referencedDeclaration":2096,"src":"5128:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"src":"5118:23:15"},"scope":2452,"src":"5031:1456:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2386,"nodeType":"Block","src":"6714:138:15","statements":[{"assignments":[2369,2372],"declarations":[{"constant":false,"id":2369,"mutability":"mutable","name":"recovered","nameLocation":"6733:9:15","nodeType":"VariableDeclaration","scope":2386,"src":"6725:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2368,"name":"address","nodeType":"ElementaryTypeName","src":"6725:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2372,"mutability":"mutable","name":"error","nameLocation":"6757:5:15","nodeType":"VariableDeclaration","scope":2386,"src":"6744:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":2371,"nodeType":"UserDefinedTypeName","pathNode":{"id":2370,"name":"RecoverError","nameLocations":["6744:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2096,"src":"6744:12:15"},"referencedDeclaration":2096,"src":"6744:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"id":2379,"initialValue":{"arguments":[{"id":2374,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"6777:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2375,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"6783:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2376,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"6786:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2377,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"6789:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2373,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2186,2260,2354],"referencedDeclaration":2354,"src":"6766:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2096_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6766:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2096_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6724:67:15"},{"expression":{"arguments":[{"id":2381,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"6813:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2096","typeString":"enum ECDSAUpgradeable.RecoverError"}],"id":2380,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"6801:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2096_$returns$__$","typeString":"function (enum ECDSAUpgradeable.RecoverError) pure"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6801:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2383,"nodeType":"ExpressionStatement","src":"6801:18:15"},{"expression":{"id":2384,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"6836:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2367,"id":2385,"nodeType":"Return","src":"6829:16:15"}]},"documentation":{"id":2355,"nodeType":"StructuredDocumentation","src":"6493:122:15","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2387,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6629:7:15","nodeType":"FunctionDefinition","parameters":{"id":2364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2357,"mutability":"mutable","name":"hash","nameLocation":"6645:4:15","nodeType":"VariableDeclaration","scope":2387,"src":"6637:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6637:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2359,"mutability":"mutable","name":"v","nameLocation":"6657:1:15","nodeType":"VariableDeclaration","scope":2387,"src":"6651:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2358,"name":"uint8","nodeType":"ElementaryTypeName","src":"6651:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2361,"mutability":"mutable","name":"r","nameLocation":"6668:1:15","nodeType":"VariableDeclaration","scope":2387,"src":"6660:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6660:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2363,"mutability":"mutable","name":"s","nameLocation":"6679:1:15","nodeType":"VariableDeclaration","scope":2387,"src":"6671:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2362,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6671:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6636:45:15"},"returnParameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2387,"src":"6705:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2365,"name":"address","nodeType":"ElementaryTypeName","src":"6705:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6704:9:15"},"scope":2452,"src":"6620:232:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2396,"nodeType":"Block","src":"7228:310:15","statements":[{"AST":{"nativeSrc":"7384:148:15","nodeType":"YulBlock","src":"7384:148:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7405:4:15","nodeType":"YulLiteral","src":"7405:4:15","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"7411:34:15","nodeType":"YulLiteral","src":"7411:34:15","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"7398:6:15","nodeType":"YulIdentifier","src":"7398:6:15"},"nativeSrc":"7398:48:15","nodeType":"YulFunctionCall","src":"7398:48:15"},"nativeSrc":"7398:48:15","nodeType":"YulExpressionStatement","src":"7398:48:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7466:4:15","nodeType":"YulLiteral","src":"7466:4:15","type":"","value":"0x1c"},{"name":"hash","nativeSrc":"7472:4:15","nodeType":"YulIdentifier","src":"7472:4:15"}],"functionName":{"name":"mstore","nativeSrc":"7459:6:15","nodeType":"YulIdentifier","src":"7459:6:15"},"nativeSrc":"7459:18:15","nodeType":"YulFunctionCall","src":"7459:18:15"},"nativeSrc":"7459:18:15","nodeType":"YulExpressionStatement","src":"7459:18:15"},{"nativeSrc":"7490:32:15","nodeType":"YulAssignment","src":"7490:32:15","value":{"arguments":[{"kind":"number","nativeSrc":"7511:4:15","nodeType":"YulLiteral","src":"7511:4:15","type":"","value":"0x00"},{"kind":"number","nativeSrc":"7517:4:15","nodeType":"YulLiteral","src":"7517:4:15","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"7501:9:15","nodeType":"YulIdentifier","src":"7501:9:15"},"nativeSrc":"7501:21:15","nodeType":"YulFunctionCall","src":"7501:21:15"},"variableNames":[{"name":"message","nativeSrc":"7490:7:15","nodeType":"YulIdentifier","src":"7490:7:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2390,"isOffset":false,"isSlot":false,"src":"7472:4:15","valueSize":1},{"declaration":2393,"isOffset":false,"isSlot":false,"src":"7490:7:15","valueSize":1}],"id":2395,"nodeType":"InlineAssembly","src":"7375:157:15"}]},"documentation":{"id":2388,"nodeType":"StructuredDocumentation","src":"6858:279:15","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":2397,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7151:22:15","nodeType":"FunctionDefinition","parameters":{"id":2391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2390,"mutability":"mutable","name":"hash","nameLocation":"7182:4:15","nodeType":"VariableDeclaration","scope":2397,"src":"7174:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2389,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7174:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7173:14:15"},"returnParameters":{"id":2394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2393,"mutability":"mutable","name":"message","nameLocation":"7219:7:15","nodeType":"VariableDeclaration","scope":2397,"src":"7211:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2392,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7211:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7210:17:15"},"scope":2452,"src":"7142:396:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2418,"nodeType":"Block","src":"7903:127:15","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7947:32:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":2411,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"8009:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8011:6:15","memberName":"length","nodeType":"MemberAccess","src":"8009:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2409,"name":"StringsUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"7981:18:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StringsUpgradeable_$2086_$","typeString":"type(library StringsUpgradeable)"}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8000:8:15","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1916,"src":"7981:27:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7981:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2414,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"8020:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2406,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7930:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7934:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"7930:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7930:92:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2405,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7920:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7920:103:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2404,"id":2417,"nodeType":"Return","src":"7913:110:15"}]},"documentation":{"id":2398,"nodeType":"StructuredDocumentation","src":"7544:274:15","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":2419,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7832:22:15","nodeType":"FunctionDefinition","parameters":{"id":2401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2400,"mutability":"mutable","name":"s","nameLocation":"7868:1:15","nodeType":"VariableDeclaration","scope":2419,"src":"7855:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2399,"name":"bytes","nodeType":"ElementaryTypeName","src":"7855:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7854:16:15"},"returnParameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2419,"src":"7894:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7894:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7893:9:15"},"scope":2452,"src":"7823:207:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2430,"nodeType":"Block","src":"8476:290:15","statements":[{"AST":{"nativeSrc":"8538:222:15","nodeType":"YulBlock","src":"8538:222:15","statements":[{"nativeSrc":"8552:22:15","nodeType":"YulVariableDeclaration","src":"8552:22:15","value":{"arguments":[{"kind":"number","nativeSrc":"8569:4:15","nodeType":"YulLiteral","src":"8569:4:15","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"8563:5:15","nodeType":"YulIdentifier","src":"8563:5:15"},"nativeSrc":"8563:11:15","nodeType":"YulFunctionCall","src":"8563:11:15"},"variables":[{"name":"ptr","nativeSrc":"8556:3:15","nodeType":"YulTypedName","src":"8556:3:15","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8594:3:15","nodeType":"YulIdentifier","src":"8594:3:15"},{"hexValue":"1901","kind":"string","nativeSrc":"8599:10:15","nodeType":"YulLiteral","src":"8599:10:15","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"8587:6:15","nodeType":"YulIdentifier","src":"8587:6:15"},"nativeSrc":"8587:23:15","nodeType":"YulFunctionCall","src":"8587:23:15"},"nativeSrc":"8587:23:15","nodeType":"YulExpressionStatement","src":"8587:23:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"8634:3:15","nodeType":"YulIdentifier","src":"8634:3:15"},{"kind":"number","nativeSrc":"8639:4:15","nodeType":"YulLiteral","src":"8639:4:15","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"8630:3:15","nodeType":"YulIdentifier","src":"8630:3:15"},"nativeSrc":"8630:14:15","nodeType":"YulFunctionCall","src":"8630:14:15"},{"name":"domainSeparator","nativeSrc":"8646:15:15","nodeType":"YulIdentifier","src":"8646:15:15"}],"functionName":{"name":"mstore","nativeSrc":"8623:6:15","nodeType":"YulIdentifier","src":"8623:6:15"},"nativeSrc":"8623:39:15","nodeType":"YulFunctionCall","src":"8623:39:15"},"nativeSrc":"8623:39:15","nodeType":"YulExpressionStatement","src":"8623:39:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"8686:3:15","nodeType":"YulIdentifier","src":"8686:3:15"},{"kind":"number","nativeSrc":"8691:4:15","nodeType":"YulLiteral","src":"8691:4:15","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"8682:3:15","nodeType":"YulIdentifier","src":"8682:3:15"},"nativeSrc":"8682:14:15","nodeType":"YulFunctionCall","src":"8682:14:15"},{"name":"structHash","nativeSrc":"8698:10:15","nodeType":"YulIdentifier","src":"8698:10:15"}],"functionName":{"name":"mstore","nativeSrc":"8675:6:15","nodeType":"YulIdentifier","src":"8675:6:15"},"nativeSrc":"8675:34:15","nodeType":"YulFunctionCall","src":"8675:34:15"},"nativeSrc":"8675:34:15","nodeType":"YulExpressionStatement","src":"8675:34:15"},{"nativeSrc":"8722:28:15","nodeType":"YulAssignment","src":"8722:28:15","value":{"arguments":[{"name":"ptr","nativeSrc":"8740:3:15","nodeType":"YulIdentifier","src":"8740:3:15"},{"kind":"number","nativeSrc":"8745:4:15","nodeType":"YulLiteral","src":"8745:4:15","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"8730:9:15","nodeType":"YulIdentifier","src":"8730:9:15"},"nativeSrc":"8730:20:15","nodeType":"YulFunctionCall","src":"8730:20:15"},"variableNames":[{"name":"data","nativeSrc":"8722:4:15","nodeType":"YulIdentifier","src":"8722:4:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2427,"isOffset":false,"isSlot":false,"src":"8722:4:15","valueSize":1},{"declaration":2422,"isOffset":false,"isSlot":false,"src":"8646:15:15","valueSize":1},{"declaration":2424,"isOffset":false,"isSlot":false,"src":"8698:10:15","valueSize":1}],"id":2429,"nodeType":"InlineAssembly","src":"8529:231:15"}]},"documentation":{"id":2420,"nodeType":"StructuredDocumentation","src":"8036:328:15","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":2431,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8378:15:15","nodeType":"FunctionDefinition","parameters":{"id":2425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2422,"mutability":"mutable","name":"domainSeparator","nameLocation":"8402:15:15","nodeType":"VariableDeclaration","scope":2431,"src":"8394:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2421,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8394:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2424,"mutability":"mutable","name":"structHash","nameLocation":"8427:10:15","nodeType":"VariableDeclaration","scope":2431,"src":"8419:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2423,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8419:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8393:45:15"},"returnParameters":{"id":2428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2427,"mutability":"mutable","name":"data","nameLocation":"8470:4:15","nodeType":"VariableDeclaration","scope":2431,"src":"8462:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8462:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8461:14:15"},"scope":2452,"src":"8369:397:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2450,"nodeType":"Block","src":"9081:80:15","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":2444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9125:10:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":2445,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"9137:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2446,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"9148:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2442,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9108:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9112:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"9108:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9108:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2441,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9098:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9098:56:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2440,"id":2449,"nodeType":"Return","src":"9091:63:15"}]},"documentation":{"id":2432,"nodeType":"StructuredDocumentation","src":"8772:193:15","text":" @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."},"id":2451,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"8979:31:15","nodeType":"FunctionDefinition","parameters":{"id":2437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2434,"mutability":"mutable","name":"validator","nameLocation":"9019:9:15","nodeType":"VariableDeclaration","scope":2451,"src":"9011:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2433,"name":"address","nodeType":"ElementaryTypeName","src":"9011:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2436,"mutability":"mutable","name":"data","nameLocation":"9043:4:15","nodeType":"VariableDeclaration","scope":2451,"src":"9030:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2435,"name":"bytes","nodeType":"ElementaryTypeName","src":"9030:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9010:38:15"},"returnParameters":{"id":2440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2451,"src":"9072:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9072:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9071:9:15"},"scope":2452,"src":"8970:191:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2453,"src":"380:8783:15","usedErrors":[],"usedEvents":[]}],"src":"112:9052:15"},"id":15},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","exportedSymbols":{"MathUpgradeable":[3318]},"id":3319,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2454,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"MathUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2455,"nodeType":"StructuredDocumentation","src":"128:73:16","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3318,"linearizedBaseContracts":[3318],"name":"MathUpgradeable","nameLocation":"210:15:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"MathUpgradeable.Rounding","id":2459,"members":[{"id":2456,"name":"Down","nameLocation":"256:4:16","nodeType":"EnumValue","src":"256:4:16"},{"id":2457,"name":"Up","nameLocation":"298:2:16","nodeType":"EnumValue","src":"298:2:16"},{"id":2458,"name":"Zero","nameLocation":"329:4:16","nodeType":"EnumValue","src":"329:4:16"}],"name":"Rounding","nameLocation":"237:8:16","nodeType":"EnumDefinition","src":"232:122:16"},{"body":{"id":2476,"nodeType":"Block","src":"491:37:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2469,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"508:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2470,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"512:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"508:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2473,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"520:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"508:13:16","trueExpression":{"id":2472,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"516:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2468,"id":2475,"nodeType":"Return","src":"501:20:16"}]},"documentation":{"id":2460,"nodeType":"StructuredDocumentation","src":"360:59:16","text":" @dev Returns the largest of two numbers."},"id":2477,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"433:3:16","nodeType":"FunctionDefinition","parameters":{"id":2465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2462,"mutability":"mutable","name":"a","nameLocation":"445:1:16","nodeType":"VariableDeclaration","scope":2477,"src":"437:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2461,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2464,"mutability":"mutable","name":"b","nameLocation":"456:1:16","nodeType":"VariableDeclaration","scope":2477,"src":"448:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2463,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"436:22:16"},"returnParameters":{"id":2468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2477,"src":"482:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2466,"name":"uint256","nodeType":"ElementaryTypeName","src":"482:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"481:9:16"},"scope":3318,"src":"424:104:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2494,"nodeType":"Block","src":"666:37:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2487,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"683:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2488,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"687:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"683:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2491,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"695:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"683:13:16","trueExpression":{"id":2490,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"691:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2486,"id":2493,"nodeType":"Return","src":"676:20:16"}]},"documentation":{"id":2478,"nodeType":"StructuredDocumentation","src":"534:60:16","text":" @dev Returns the smallest of two numbers."},"id":2495,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"608:3:16","nodeType":"FunctionDefinition","parameters":{"id":2483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2480,"mutability":"mutable","name":"a","nameLocation":"620:1:16","nodeType":"VariableDeclaration","scope":2495,"src":"612:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2479,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2482,"mutability":"mutable","name":"b","nameLocation":"631:1:16","nodeType":"VariableDeclaration","scope":2495,"src":"623:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2481,"name":"uint256","nodeType":"ElementaryTypeName","src":"623:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"611:22:16"},"returnParameters":{"id":2486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2495,"src":"657:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2484,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:9:16"},"scope":3318,"src":"599:104:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2517,"nodeType":"Block","src":"887:82:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2505,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"942:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2506,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"946:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"942:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2508,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"941:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2509,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"952:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2510,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"956:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"952:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2512,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"951:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"961:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"951:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2504,"id":2516,"nodeType":"Return","src":"934:28:16"}]},"documentation":{"id":2496,"nodeType":"StructuredDocumentation","src":"709:102:16","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2518,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"825:7:16","nodeType":"FunctionDefinition","parameters":{"id":2501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"a","nameLocation":"841:1:16","nodeType":"VariableDeclaration","scope":2518,"src":"833:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2497,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2500,"mutability":"mutable","name":"b","nameLocation":"852:1:16","nodeType":"VariableDeclaration","scope":2518,"src":"844:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2499,"name":"uint256","nodeType":"ElementaryTypeName","src":"844:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"832:22:16"},"returnParameters":{"id":2504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2518,"src":"878:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2502,"name":"uint256","nodeType":"ElementaryTypeName","src":"878:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"877:9:16"},"scope":3318,"src":"816:153:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2542,"nodeType":"Block","src":"1239:123:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2528,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"1327:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1332:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1327:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2532,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"1341:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1345:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1341:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1340:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2536,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"1350:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1340:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1354:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1340:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1327:28:16","trueExpression":{"hexValue":"30","id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1336:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2527,"id":2541,"nodeType":"Return","src":"1320:35:16"}]},"documentation":{"id":2519,"nodeType":"StructuredDocumentation","src":"975:188:16","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":2543,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1177:7:16","nodeType":"FunctionDefinition","parameters":{"id":2524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2521,"mutability":"mutable","name":"a","nameLocation":"1193:1:16","nodeType":"VariableDeclaration","scope":2543,"src":"1185:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2520,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2523,"mutability":"mutable","name":"b","nameLocation":"1204:1:16","nodeType":"VariableDeclaration","scope":2543,"src":"1196:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2522,"name":"uint256","nodeType":"ElementaryTypeName","src":"1196:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1184:22:16"},"returnParameters":{"id":2527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2543,"src":"1230:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2525,"name":"uint256","nodeType":"ElementaryTypeName","src":"1230:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1229:9:16"},"scope":3318,"src":"1168:194:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2665,"nodeType":"Block","src":"1776:4115:16","statements":[{"id":2664,"nodeType":"UncheckedBlock","src":"1786:4099:16","statements":[{"assignments":[2556],"declarations":[{"constant":false,"id":2556,"mutability":"mutable","name":"prod0","nameLocation":"2115:5:16","nodeType":"VariableDeclaration","scope":2664,"src":"2107:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2555,"name":"uint256","nodeType":"ElementaryTypeName","src":"2107:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2557,"nodeType":"VariableDeclarationStatement","src":"2107:13:16"},{"assignments":[2559],"declarations":[{"constant":false,"id":2559,"mutability":"mutable","name":"prod1","nameLocation":"2187:5:16","nodeType":"VariableDeclaration","scope":2664,"src":"2179:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2558,"name":"uint256","nodeType":"ElementaryTypeName","src":"2179:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2560,"nodeType":"VariableDeclarationStatement","src":"2179:13:16"},{"AST":{"nativeSrc":"2259:157:16","nodeType":"YulBlock","src":"2259:157:16","statements":[{"nativeSrc":"2277:30:16","nodeType":"YulVariableDeclaration","src":"2277:30:16","value":{"arguments":[{"name":"x","nativeSrc":"2294:1:16","nodeType":"YulIdentifier","src":"2294:1:16"},{"name":"y","nativeSrc":"2297:1:16","nodeType":"YulIdentifier","src":"2297:1:16"},{"arguments":[{"kind":"number","nativeSrc":"2304:1:16","nodeType":"YulLiteral","src":"2304:1:16","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2300:3:16","nodeType":"YulIdentifier","src":"2300:3:16"},"nativeSrc":"2300:6:16","nodeType":"YulFunctionCall","src":"2300:6:16"}],"functionName":{"name":"mulmod","nativeSrc":"2287:6:16","nodeType":"YulIdentifier","src":"2287:6:16"},"nativeSrc":"2287:20:16","nodeType":"YulFunctionCall","src":"2287:20:16"},"variables":[{"name":"mm","nativeSrc":"2281:2:16","nodeType":"YulTypedName","src":"2281:2:16","type":""}]},{"nativeSrc":"2324:18:16","nodeType":"YulAssignment","src":"2324:18:16","value":{"arguments":[{"name":"x","nativeSrc":"2337:1:16","nodeType":"YulIdentifier","src":"2337:1:16"},{"name":"y","nativeSrc":"2340:1:16","nodeType":"YulIdentifier","src":"2340:1:16"}],"functionName":{"name":"mul","nativeSrc":"2333:3:16","nodeType":"YulIdentifier","src":"2333:3:16"},"nativeSrc":"2333:9:16","nodeType":"YulFunctionCall","src":"2333:9:16"},"variableNames":[{"name":"prod0","nativeSrc":"2324:5:16","nodeType":"YulIdentifier","src":"2324:5:16"}]},{"nativeSrc":"2359:43:16","nodeType":"YulAssignment","src":"2359:43:16","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"2376:2:16","nodeType":"YulIdentifier","src":"2376:2:16"},{"name":"prod0","nativeSrc":"2380:5:16","nodeType":"YulIdentifier","src":"2380:5:16"}],"functionName":{"name":"sub","nativeSrc":"2372:3:16","nodeType":"YulIdentifier","src":"2372:3:16"},"nativeSrc":"2372:14:16","nodeType":"YulFunctionCall","src":"2372:14:16"},{"arguments":[{"name":"mm","nativeSrc":"2391:2:16","nodeType":"YulIdentifier","src":"2391:2:16"},{"name":"prod0","nativeSrc":"2395:5:16","nodeType":"YulIdentifier","src":"2395:5:16"}],"functionName":{"name":"lt","nativeSrc":"2388:2:16","nodeType":"YulIdentifier","src":"2388:2:16"},"nativeSrc":"2388:13:16","nodeType":"YulFunctionCall","src":"2388:13:16"}],"functionName":{"name":"sub","nativeSrc":"2368:3:16","nodeType":"YulIdentifier","src":"2368:3:16"},"nativeSrc":"2368:34:16","nodeType":"YulFunctionCall","src":"2368:34:16"},"variableNames":[{"name":"prod1","nativeSrc":"2359:5:16","nodeType":"YulIdentifier","src":"2359:5:16"}]}]},"evmVersion":"shanghai","externalReferences":[{"declaration":2556,"isOffset":false,"isSlot":false,"src":"2324:5:16","valueSize":1},{"declaration":2556,"isOffset":false,"isSlot":false,"src":"2380:5:16","valueSize":1},{"declaration":2556,"isOffset":false,"isSlot":false,"src":"2395:5:16","valueSize":1},{"declaration":2559,"isOffset":false,"isSlot":false,"src":"2359:5:16","valueSize":1},{"declaration":2546,"isOffset":false,"isSlot":false,"src":"2294:1:16","valueSize":1},{"declaration":2546,"isOffset":false,"isSlot":false,"src":"2337:1:16","valueSize":1},{"declaration":2548,"isOffset":false,"isSlot":false,"src":"2297:1:16","valueSize":1},{"declaration":2548,"isOffset":false,"isSlot":false,"src":"2340:1:16","valueSize":1}],"id":2561,"nodeType":"InlineAssembly","src":"2250:166:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2562,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"2497:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2506:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2497:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2570,"nodeType":"IfStatement","src":"2493:368:16","trueBody":{"id":2569,"nodeType":"Block","src":"2509:352:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2565,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"2827:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2566,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"2835:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2827:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2554,"id":2568,"nodeType":"Return","src":"2820:26:16"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2572,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"2971:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2573,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"2985:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2971:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":2575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2992:23:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":2571,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2963:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2963:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2577,"nodeType":"ExpressionStatement","src":"2963:53:16"},{"assignments":[2579],"declarations":[{"constant":false,"id":2579,"mutability":"mutable","name":"remainder","nameLocation":"3280:9:16","nodeType":"VariableDeclaration","scope":2664,"src":"3272:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2578,"name":"uint256","nodeType":"ElementaryTypeName","src":"3272:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2580,"nodeType":"VariableDeclarationStatement","src":"3272:17:16"},{"AST":{"nativeSrc":"3312:291:16","nodeType":"YulBlock","src":"3312:291:16","statements":[{"nativeSrc":"3381:38:16","nodeType":"YulAssignment","src":"3381:38:16","value":{"arguments":[{"name":"x","nativeSrc":"3401:1:16","nodeType":"YulIdentifier","src":"3401:1:16"},{"name":"y","nativeSrc":"3404:1:16","nodeType":"YulIdentifier","src":"3404:1:16"},{"name":"denominator","nativeSrc":"3407:11:16","nodeType":"YulIdentifier","src":"3407:11:16"}],"functionName":{"name":"mulmod","nativeSrc":"3394:6:16","nodeType":"YulIdentifier","src":"3394:6:16"},"nativeSrc":"3394:25:16","nodeType":"YulFunctionCall","src":"3394:25:16"},"variableNames":[{"name":"remainder","nativeSrc":"3381:9:16","nodeType":"YulIdentifier","src":"3381:9:16"}]},{"nativeSrc":"3501:41:16","nodeType":"YulAssignment","src":"3501:41:16","value":{"arguments":[{"name":"prod1","nativeSrc":"3514:5:16","nodeType":"YulIdentifier","src":"3514:5:16"},{"arguments":[{"name":"remainder","nativeSrc":"3524:9:16","nodeType":"YulIdentifier","src":"3524:9:16"},{"name":"prod0","nativeSrc":"3535:5:16","nodeType":"YulIdentifier","src":"3535:5:16"}],"functionName":{"name":"gt","nativeSrc":"3521:2:16","nodeType":"YulIdentifier","src":"3521:2:16"},"nativeSrc":"3521:20:16","nodeType":"YulFunctionCall","src":"3521:20:16"}],"functionName":{"name":"sub","nativeSrc":"3510:3:16","nodeType":"YulIdentifier","src":"3510:3:16"},"nativeSrc":"3510:32:16","nodeType":"YulFunctionCall","src":"3510:32:16"},"variableNames":[{"name":"prod1","nativeSrc":"3501:5:16","nodeType":"YulIdentifier","src":"3501:5:16"}]},{"nativeSrc":"3559:30:16","nodeType":"YulAssignment","src":"3559:30:16","value":{"arguments":[{"name":"prod0","nativeSrc":"3572:5:16","nodeType":"YulIdentifier","src":"3572:5:16"},{"name":"remainder","nativeSrc":"3579:9:16","nodeType":"YulIdentifier","src":"3579:9:16"}],"functionName":{"name":"sub","nativeSrc":"3568:3:16","nodeType":"YulIdentifier","src":"3568:3:16"},"nativeSrc":"3568:21:16","nodeType":"YulFunctionCall","src":"3568:21:16"},"variableNames":[{"name":"prod0","nativeSrc":"3559:5:16","nodeType":"YulIdentifier","src":"3559:5:16"}]}]},"evmVersion":"shanghai","externalReferences":[{"declaration":2550,"isOffset":false,"isSlot":false,"src":"3407:11:16","valueSize":1},{"declaration":2556,"isOffset":false,"isSlot":false,"src":"3535:5:16","valueSize":1},{"declaration":2556,"isOffset":false,"isSlot":false,"src":"3559:5:16","valueSize":1},{"declaration":2556,"isOffset":false,"isSlot":false,"src":"3572:5:16","valueSize":1},{"declaration":2559,"isOffset":false,"isSlot":false,"src":"3501:5:16","valueSize":1},{"declaration":2559,"isOffset":false,"isSlot":false,"src":"3514:5:16","valueSize":1},{"declaration":2579,"isOffset":false,"isSlot":false,"src":"3381:9:16","valueSize":1},{"declaration":2579,"isOffset":false,"isSlot":false,"src":"3524:9:16","valueSize":1},{"declaration":2579,"isOffset":false,"isSlot":false,"src":"3579:9:16","valueSize":1},{"declaration":2546,"isOffset":false,"isSlot":false,"src":"3401:1:16","valueSize":1},{"declaration":2548,"isOffset":false,"isSlot":false,"src":"3404:1:16","valueSize":1}],"id":2581,"nodeType":"InlineAssembly","src":"3303:300:16"},{"assignments":[2583],"declarations":[{"constant":false,"id":2583,"mutability":"mutable","name":"twos","nameLocation":"3918:4:16","nodeType":"VariableDeclaration","scope":2664,"src":"3910:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2582,"name":"uint256","nodeType":"ElementaryTypeName","src":"3910:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2591,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2584,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"3925:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3940:12:16","subExpression":{"id":2585,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"3941:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3955:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3940:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2589,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3939:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3925:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3910:47:16"},{"AST":{"nativeSrc":"3980:362:16","nodeType":"YulBlock","src":"3980:362:16","statements":[{"nativeSrc":"4045:37:16","nodeType":"YulAssignment","src":"4045:37:16","value":{"arguments":[{"name":"denominator","nativeSrc":"4064:11:16","nodeType":"YulIdentifier","src":"4064:11:16"},{"name":"twos","nativeSrc":"4077:4:16","nodeType":"YulIdentifier","src":"4077:4:16"}],"functionName":{"name":"div","nativeSrc":"4060:3:16","nodeType":"YulIdentifier","src":"4060:3:16"},"nativeSrc":"4060:22:16","nodeType":"YulFunctionCall","src":"4060:22:16"},"variableNames":[{"name":"denominator","nativeSrc":"4045:11:16","nodeType":"YulIdentifier","src":"4045:11:16"}]},{"nativeSrc":"4149:25:16","nodeType":"YulAssignment","src":"4149:25:16","value":{"arguments":[{"name":"prod0","nativeSrc":"4162:5:16","nodeType":"YulIdentifier","src":"4162:5:16"},{"name":"twos","nativeSrc":"4169:4:16","nodeType":"YulIdentifier","src":"4169:4:16"}],"functionName":{"name":"div","nativeSrc":"4158:3:16","nodeType":"YulIdentifier","src":"4158:3:16"},"nativeSrc":"4158:16:16","nodeType":"YulFunctionCall","src":"4158:16:16"},"variableNames":[{"name":"prod0","nativeSrc":"4149:5:16","nodeType":"YulIdentifier","src":"4149:5:16"}]},{"nativeSrc":"4289:39:16","nodeType":"YulAssignment","src":"4289:39:16","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4309:1:16","nodeType":"YulLiteral","src":"4309:1:16","type":"","value":"0"},{"name":"twos","nativeSrc":"4312:4:16","nodeType":"YulIdentifier","src":"4312:4:16"}],"functionName":{"name":"sub","nativeSrc":"4305:3:16","nodeType":"YulIdentifier","src":"4305:3:16"},"nativeSrc":"4305:12:16","nodeType":"YulFunctionCall","src":"4305:12:16"},{"name":"twos","nativeSrc":"4319:4:16","nodeType":"YulIdentifier","src":"4319:4:16"}],"functionName":{"name":"div","nativeSrc":"4301:3:16","nodeType":"YulIdentifier","src":"4301:3:16"},"nativeSrc":"4301:23:16","nodeType":"YulFunctionCall","src":"4301:23:16"},{"kind":"number","nativeSrc":"4326:1:16","nodeType":"YulLiteral","src":"4326:1:16","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4297:3:16","nodeType":"YulIdentifier","src":"4297:3:16"},"nativeSrc":"4297:31:16","nodeType":"YulFunctionCall","src":"4297:31:16"},"variableNames":[{"name":"twos","nativeSrc":"4289:4:16","nodeType":"YulIdentifier","src":"4289:4:16"}]}]},"evmVersion":"shanghai","externalReferences":[{"declaration":2550,"isOffset":false,"isSlot":false,"src":"4045:11:16","valueSize":1},{"declaration":2550,"isOffset":false,"isSlot":false,"src":"4064:11:16","valueSize":1},{"declaration":2556,"isOffset":false,"isSlot":false,"src":"4149:5:16","valueSize":1},{"declaration":2556,"isOffset":false,"isSlot":false,"src":"4162:5:16","valueSize":1},{"declaration":2583,"isOffset":false,"isSlot":false,"src":"4077:4:16","valueSize":1},{"declaration":2583,"isOffset":false,"isSlot":false,"src":"4169:4:16","valueSize":1},{"declaration":2583,"isOffset":false,"isSlot":false,"src":"4289:4:16","valueSize":1},{"declaration":2583,"isOffset":false,"isSlot":false,"src":"4312:4:16","valueSize":1},{"declaration":2583,"isOffset":false,"isSlot":false,"src":"4319:4:16","valueSize":1}],"id":2592,"nodeType":"InlineAssembly","src":"3971:371:16"},{"expression":{"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2593,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"4408:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2594,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"4417:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2595,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"4425:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4417:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4408:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2598,"nodeType":"ExpressionStatement","src":"4408:21:16"},{"assignments":[2600],"declarations":[{"constant":false,"id":2600,"mutability":"mutable","name":"inverse","nameLocation":"4755:7:16","nodeType":"VariableDeclaration","scope":2664,"src":"4747:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2599,"name":"uint256","nodeType":"ElementaryTypeName","src":"4747:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2607,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4766:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2602,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"4770:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4766:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2604,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4765:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4785:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4765:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4747:39:16"},{"expression":{"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2608,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5003:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5014:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2610,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"5018:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2611,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5032:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5018:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5014:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2615,"nodeType":"ExpressionStatement","src":"5003:36:16"},{"expression":{"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2616,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5072:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5083:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2618,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"5087:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2619,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5101:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5087:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5083:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2623,"nodeType":"ExpressionStatement","src":"5072:36:16"},{"expression":{"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2624,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5142:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5153:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2626,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"5157:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2627,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5171:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5153:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2631,"nodeType":"ExpressionStatement","src":"5142:36:16"},{"expression":{"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2632,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5212:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5223:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2634,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"5227:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2635,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5241:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5227:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5223:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2639,"nodeType":"ExpressionStatement","src":"5212:36:16"},{"expression":{"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2640,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5282:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5293:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2642,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"5297:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2643,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5311:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5297:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5293:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2647,"nodeType":"ExpressionStatement","src":"5282:36:16"},{"expression":{"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2648,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5353:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5364:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2650,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"5368:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2651,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5382:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5368:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5364:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2655,"nodeType":"ExpressionStatement","src":"5353:36:16"},{"expression":{"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2656,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"5823:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2657,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"5832:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2658,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5840:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5832:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5823:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2661,"nodeType":"ExpressionStatement","src":"5823:24:16"},{"expression":{"id":2662,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"5868:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2554,"id":2663,"nodeType":"Return","src":"5861:13:16"}]}]},"documentation":{"id":2544,"nodeType":"StructuredDocumentation","src":"1368:305:16","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":2666,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1687:6:16","nodeType":"FunctionDefinition","parameters":{"id":2551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2546,"mutability":"mutable","name":"x","nameLocation":"1702:1:16","nodeType":"VariableDeclaration","scope":2666,"src":"1694:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2545,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2548,"mutability":"mutable","name":"y","nameLocation":"1713:1:16","nodeType":"VariableDeclaration","scope":2666,"src":"1705:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2547,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2550,"mutability":"mutable","name":"denominator","nameLocation":"1724:11:16","nodeType":"VariableDeclaration","scope":2666,"src":"1716:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2549,"name":"uint256","nodeType":"ElementaryTypeName","src":"1716:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1693:43:16"},"returnParameters":{"id":2554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2553,"mutability":"mutable","name":"result","nameLocation":"1768:6:16","nodeType":"VariableDeclaration","scope":2666,"src":"1760:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2552,"name":"uint256","nodeType":"ElementaryTypeName","src":"1760:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1759:16:16"},"scope":3318,"src":"1678:4213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2709,"nodeType":"Block","src":"6133:189:16","statements":[{"assignments":[2682],"declarations":[{"constant":false,"id":2682,"mutability":"mutable","name":"result","nameLocation":"6151:6:16","nodeType":"VariableDeclaration","scope":2709,"src":"6143:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2681,"name":"uint256","nodeType":"ElementaryTypeName","src":"6143:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2688,"initialValue":{"arguments":[{"id":2684,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"6167:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2685,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"6170:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2686,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"6173:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2683,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2666,2710],"referencedDeclaration":2666,"src":"6160:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6160:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6143:42:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum MathUpgradeable.Rounding"},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2689,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"6199:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2690,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"6211:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2459_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":2691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6220:2:16","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2457,"src":"6211:11:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum MathUpgradeable.Rounding"}},"src":"6199:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2694,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"6233:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2695,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"6236:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2696,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"6239:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2693,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6226:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6226:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6254:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6226:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6199:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2706,"nodeType":"IfStatement","src":"6195:98:16","trueBody":{"id":2705,"nodeType":"Block","src":"6257:36:16","statements":[{"expression":{"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2701,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"6271:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6281:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6271:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2704,"nodeType":"ExpressionStatement","src":"6271:11:16"}]}},{"expression":{"id":2707,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"6309:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2680,"id":2708,"nodeType":"Return","src":"6302:13:16"}]},"documentation":{"id":2667,"nodeType":"StructuredDocumentation","src":"5897:121:16","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2710,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6032:6:16","nodeType":"FunctionDefinition","parameters":{"id":2677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2669,"mutability":"mutable","name":"x","nameLocation":"6047:1:16","nodeType":"VariableDeclaration","scope":2710,"src":"6039:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2668,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2671,"mutability":"mutable","name":"y","nameLocation":"6058:1:16","nodeType":"VariableDeclaration","scope":2710,"src":"6050:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2670,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2673,"mutability":"mutable","name":"denominator","nameLocation":"6069:11:16","nodeType":"VariableDeclaration","scope":2710,"src":"6061:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2672,"name":"uint256","nodeType":"ElementaryTypeName","src":"6061:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2676,"mutability":"mutable","name":"rounding","nameLocation":"6091:8:16","nodeType":"VariableDeclaration","scope":2710,"src":"6082:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":2675,"nodeType":"UserDefinedTypeName","pathNode":{"id":2674,"name":"Rounding","nameLocations":["6082:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":2459,"src":"6082:8:16"},"referencedDeclaration":2459,"src":"6082:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"6038:62:16"},"returnParameters":{"id":2680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2710,"src":"6124:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2678,"name":"uint256","nodeType":"ElementaryTypeName","src":"6124:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6123:9:16"},"scope":3318,"src":"6023:299:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2821,"nodeType":"Block","src":"6598:1585:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2718,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"6612:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6617:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6612:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2724,"nodeType":"IfStatement","src":"6608:45:16","trueBody":{"id":2723,"nodeType":"Block","src":"6620:33:16","statements":[{"expression":{"hexValue":"30","id":2721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6641:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2717,"id":2722,"nodeType":"Return","src":"6634:8:16"}]}},{"assignments":[2726],"declarations":[{"constant":false,"id":2726,"mutability":"mutable","name":"result","nameLocation":"7340:6:16","nodeType":"VariableDeclaration","scope":2821,"src":"7332:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2725,"name":"uint256","nodeType":"ElementaryTypeName","src":"7332:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2735,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7349:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2729,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"7360:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2728,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2990,3026],"referencedDeclaration":2990,"src":"7355:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7355:7:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7366:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7355:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2733,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7354:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7349:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7332:36:16"},{"id":2820,"nodeType":"UncheckedBlock","src":"7769:408:16","statements":[{"expression":{"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2736,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7793:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2737,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7803:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2738,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"7812:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2739,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7816:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7812:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7803:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2742,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7802:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7827:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7802:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7793:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2746,"nodeType":"ExpressionStatement","src":"7793:35:16"},{"expression":{"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2747,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7842:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2748,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7852:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2749,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"7861:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2750,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7865:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7861:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7852:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2753,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7851:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7876:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7851:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7842:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2757,"nodeType":"ExpressionStatement","src":"7842:35:16"},{"expression":{"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2758,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7891:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2759,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7901:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2760,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"7910:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2761,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7914:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7910:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7901:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2764,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7900:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7925:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7900:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7891:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2768,"nodeType":"ExpressionStatement","src":"7891:35:16"},{"expression":{"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2769,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7940:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2770,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7950:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2771,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"7959:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2772,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7963:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7959:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7950:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2775,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7949:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7974:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7949:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7940:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2779,"nodeType":"ExpressionStatement","src":"7940:35:16"},{"expression":{"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2780,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7989:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2781,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"7999:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2782,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"8008:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2783,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"8012:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8008:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7999:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2786,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7998:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8023:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7998:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7989:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2790,"nodeType":"ExpressionStatement","src":"7989:35:16"},{"expression":{"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2791,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"8038:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2792,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"8048:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2793,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"8057:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2794,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"8061:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8057:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8048:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2797,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8047:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8072:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8047:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8038:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2801,"nodeType":"ExpressionStatement","src":"8038:35:16"},{"expression":{"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2802,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"8087:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2803,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"8097:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2804,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"8106:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2805,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"8110:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8106:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8097:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8096:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8121:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8096:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8087:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2812,"nodeType":"ExpressionStatement","src":"8087:35:16"},{"expression":{"arguments":[{"id":2814,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"8147:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2815,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"8155:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2816,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"8159:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8155:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2813,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"8143:3:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8143:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2717,"id":2819,"nodeType":"Return","src":"8136:30:16"}]}]},"documentation":{"id":2711,"nodeType":"StructuredDocumentation","src":"6328:208:16","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2822,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6550:4:16","nodeType":"FunctionDefinition","parameters":{"id":2714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2713,"mutability":"mutable","name":"a","nameLocation":"6563:1:16","nodeType":"VariableDeclaration","scope":2822,"src":"6555:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2712,"name":"uint256","nodeType":"ElementaryTypeName","src":"6555:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6554:11:16"},"returnParameters":{"id":2717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2822,"src":"6589:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2715,"name":"uint256","nodeType":"ElementaryTypeName","src":"6589:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6588:9:16"},"scope":3318,"src":"6541:1642:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2857,"nodeType":"Block","src":"8359:161:16","statements":[{"id":2856,"nodeType":"UncheckedBlock","src":"8369:145:16","statements":[{"assignments":[2834],"declarations":[{"constant":false,"id":2834,"mutability":"mutable","name":"result","nameLocation":"8401:6:16","nodeType":"VariableDeclaration","scope":2856,"src":"8393:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2833,"name":"uint256","nodeType":"ElementaryTypeName","src":"8393:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2838,"initialValue":{"arguments":[{"id":2836,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"8415:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2835,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2822,2858],"referencedDeclaration":2822,"src":"8410:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8410:7:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8393:24:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2839,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"8438:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum MathUpgradeable.Rounding"},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2840,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"8448:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2841,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"8460:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2459_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":2842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8469:2:16","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2457,"src":"8460:11:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum MathUpgradeable.Rounding"}},"src":"8448:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2844,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"8475:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2845,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"8484:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8475:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2847,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"8493:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8475:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8448:46:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8501:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8448:54:16","trueExpression":{"hexValue":"31","id":2850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8497:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8447:56:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8438:65:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2832,"id":2855,"nodeType":"Return","src":"8431:72:16"}]}]},"documentation":{"id":2823,"nodeType":"StructuredDocumentation","src":"8189:89:16","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2858,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8292:4:16","nodeType":"FunctionDefinition","parameters":{"id":2829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2825,"mutability":"mutable","name":"a","nameLocation":"8305:1:16","nodeType":"VariableDeclaration","scope":2858,"src":"8297:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2824,"name":"uint256","nodeType":"ElementaryTypeName","src":"8297:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2828,"mutability":"mutable","name":"rounding","nameLocation":"8317:8:16","nodeType":"VariableDeclaration","scope":2858,"src":"8308:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":2827,"nodeType":"UserDefinedTypeName","pathNode":{"id":2826,"name":"Rounding","nameLocations":["8308:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":2459,"src":"8308:8:16"},"referencedDeclaration":2459,"src":"8308:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"8296:30:16"},"returnParameters":{"id":2832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2858,"src":"8350:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2830,"name":"uint256","nodeType":"ElementaryTypeName","src":"8350:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8349:9:16"},"scope":3318,"src":"8283:237:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2989,"nodeType":"Block","src":"8705:922:16","statements":[{"assignments":[2867],"declarations":[{"constant":false,"id":2867,"mutability":"mutable","name":"result","nameLocation":"8723:6:16","nodeType":"VariableDeclaration","scope":2989,"src":"8715:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2866,"name":"uint256","nodeType":"ElementaryTypeName","src":"8715:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2869,"initialValue":{"hexValue":"30","id":2868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8732:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8715:18:16"},{"id":2986,"nodeType":"UncheckedBlock","src":"8743:855:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"8771:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8780:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8771:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8786:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8771:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2884,"nodeType":"IfStatement","src":"8767:99:16","trueBody":{"id":2883,"nodeType":"Block","src":"8789:77:16","statements":[{"expression":{"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"8807:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8817:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8807:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2878,"nodeType":"ExpressionStatement","src":"8807:13:16"},{"expression":{"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2879,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"8838:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8848:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8838:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2882,"nodeType":"ExpressionStatement","src":"8838:13:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"8883:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8892:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8883:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8897:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8883:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2899,"nodeType":"IfStatement","src":"8879:96:16","trueBody":{"id":2898,"nodeType":"Block","src":"8900:75:16","statements":[{"expression":{"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"8918:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8928:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8918:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2893,"nodeType":"ExpressionStatement","src":"8918:12:16"},{"expression":{"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2894,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"8948:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8948:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2897,"nodeType":"ExpressionStatement","src":"8948:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"8992:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9001:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8992:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9006:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8992:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2914,"nodeType":"IfStatement","src":"8988:96:16","trueBody":{"id":2913,"nodeType":"Block","src":"9009:75:16","statements":[{"expression":{"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"9027:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9037:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9027:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2908,"nodeType":"ExpressionStatement","src":"9027:12:16"},{"expression":{"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2909,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"9057:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9067:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9057:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2912,"nodeType":"ExpressionStatement","src":"9057:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"9101:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9101:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9115:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9101:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2929,"nodeType":"IfStatement","src":"9097:96:16","trueBody":{"id":2928,"nodeType":"Block","src":"9118:75:16","statements":[{"expression":{"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"9136:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9146:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9136:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2923,"nodeType":"ExpressionStatement","src":"9136:12:16"},{"expression":{"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2924,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"9166:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9176:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9166:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2927,"nodeType":"ExpressionStatement","src":"9166:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"9210:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9219:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9210:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9223:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9210:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2944,"nodeType":"IfStatement","src":"9206:93:16","trueBody":{"id":2943,"nodeType":"Block","src":"9226:73:16","statements":[{"expression":{"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"9244:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9254:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9244:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2938,"nodeType":"ExpressionStatement","src":"9244:11:16"},{"expression":{"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2939,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"9273:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9283:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9273:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2942,"nodeType":"ExpressionStatement","src":"9273:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"9316:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9325:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9316:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9329:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9316:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2959,"nodeType":"IfStatement","src":"9312:93:16","trueBody":{"id":2958,"nodeType":"Block","src":"9332:73:16","statements":[{"expression":{"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"9350:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9360:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9350:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2953,"nodeType":"ExpressionStatement","src":"9350:11:16"},{"expression":{"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2954,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"9379:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9389:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9379:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2957,"nodeType":"ExpressionStatement","src":"9379:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"9422:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9431:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9422:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9435:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9422:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2974,"nodeType":"IfStatement","src":"9418:93:16","trueBody":{"id":2973,"nodeType":"Block","src":"9438:73:16","statements":[{"expression":{"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"9456:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9466:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9456:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2968,"nodeType":"ExpressionStatement","src":"9456:11:16"},{"expression":{"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2969,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"9485:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9495:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9485:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2972,"nodeType":"ExpressionStatement","src":"9485:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"9528:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9537:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9528:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9541:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9528:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2985,"nodeType":"IfStatement","src":"9524:64:16","trueBody":{"id":2984,"nodeType":"Block","src":"9544:44:16","statements":[{"expression":{"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2980,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"9562:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9572:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9562:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2983,"nodeType":"ExpressionStatement","src":"9562:11:16"}]}}]},{"expression":{"id":2987,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"9614:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2865,"id":2988,"nodeType":"Return","src":"9607:13:16"}]},"documentation":{"id":2859,"nodeType":"StructuredDocumentation","src":"8526:113:16","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2990,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8653:4:16","nodeType":"FunctionDefinition","parameters":{"id":2862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2861,"mutability":"mutable","name":"value","nameLocation":"8666:5:16","nodeType":"VariableDeclaration","scope":2990,"src":"8658:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2860,"name":"uint256","nodeType":"ElementaryTypeName","src":"8658:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8657:15:16"},"returnParameters":{"id":2865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2990,"src":"8696:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2863,"name":"uint256","nodeType":"ElementaryTypeName","src":"8696:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8695:9:16"},"scope":3318,"src":"8644:983:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3025,"nodeType":"Block","src":"9860:165:16","statements":[{"id":3024,"nodeType":"UncheckedBlock","src":"9870:149:16","statements":[{"assignments":[3002],"declarations":[{"constant":false,"id":3002,"mutability":"mutable","name":"result","nameLocation":"9902:6:16","nodeType":"VariableDeclaration","scope":3024,"src":"9894:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3001,"name":"uint256","nodeType":"ElementaryTypeName","src":"9894:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3006,"initialValue":{"arguments":[{"id":3004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"9916:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3003,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2990,3026],"referencedDeclaration":2990,"src":"9911:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9911:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9894:28:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3007,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"9943:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum MathUpgradeable.Rounding"},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3008,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"9953:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3009,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"9965:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2459_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":3010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9974:2:16","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2457,"src":"9965:11:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum MathUpgradeable.Rounding"}},"src":"9953:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9980:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3013,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"9985:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9980:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"9994:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9980:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9953:46:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10006:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9953:54:16","trueExpression":{"hexValue":"31","id":3018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10002:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3021,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9952:56:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9943:65:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3000,"id":3023,"nodeType":"Return","src":"9936:72:16"}]}]},"documentation":{"id":2991,"nodeType":"StructuredDocumentation","src":"9633:142:16","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3026,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9789:4:16","nodeType":"FunctionDefinition","parameters":{"id":2997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2993,"mutability":"mutable","name":"value","nameLocation":"9802:5:16","nodeType":"VariableDeclaration","scope":3026,"src":"9794:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2992,"name":"uint256","nodeType":"ElementaryTypeName","src":"9794:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2996,"mutability":"mutable","name":"rounding","nameLocation":"9818:8:16","nodeType":"VariableDeclaration","scope":3026,"src":"9809:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":2995,"nodeType":"UserDefinedTypeName","pathNode":{"id":2994,"name":"Rounding","nameLocations":["9809:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":2459,"src":"9809:8:16"},"referencedDeclaration":2459,"src":"9809:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"9793:34:16"},"returnParameters":{"id":3000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3026,"src":"9851:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2998,"name":"uint256","nodeType":"ElementaryTypeName","src":"9851:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9850:9:16"},"scope":3318,"src":"9780:245:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3154,"nodeType":"Block","src":"10212:854:16","statements":[{"assignments":[3035],"declarations":[{"constant":false,"id":3035,"mutability":"mutable","name":"result","nameLocation":"10230:6:16","nodeType":"VariableDeclaration","scope":3154,"src":"10222:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3034,"name":"uint256","nodeType":"ElementaryTypeName","src":"10222:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3037,"initialValue":{"hexValue":"30","id":3036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10239:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10222:18:16"},{"id":3151,"nodeType":"UncheckedBlock","src":"10250:787:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"10278:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10287:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10293:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10287:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10278:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3054,"nodeType":"IfStatement","src":"10274:103:16","trueBody":{"id":3053,"nodeType":"Block","src":"10297:80:16","statements":[{"expression":{"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"10315:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10324:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10330:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10324:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10315:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3048,"nodeType":"ExpressionStatement","src":"10315:17:16"},{"expression":{"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3049,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"10350:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10360:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10350:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3052,"nodeType":"ExpressionStatement","src":"10350:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"10394:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10403:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10409:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10403:8:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10394:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3071,"nodeType":"IfStatement","src":"10390:103:16","trueBody":{"id":3070,"nodeType":"Block","src":"10413:80:16","statements":[{"expression":{"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"10431:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10440:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10446:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10440:8:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10431:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3065,"nodeType":"ExpressionStatement","src":"10431:17:16"},{"expression":{"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3066,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"10466:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10466:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3069,"nodeType":"ExpressionStatement","src":"10466:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"10510:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10519:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10525:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10519:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10510:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3088,"nodeType":"IfStatement","src":"10506:103:16","trueBody":{"id":3087,"nodeType":"Block","src":"10529:80:16","statements":[{"expression":{"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"10547:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10556:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10562:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10556:8:16","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10547:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3082,"nodeType":"ExpressionStatement","src":"10547:17:16"},{"expression":{"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3083,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"10582:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10592:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10582:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3086,"nodeType":"ExpressionStatement","src":"10582:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"10626:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10635:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10641:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10635:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10626:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3105,"nodeType":"IfStatement","src":"10622:100:16","trueBody":{"id":3104,"nodeType":"Block","src":"10644:78:16","statements":[{"expression":{"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"10662:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10671:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10677:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10671:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10662:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3099,"nodeType":"ExpressionStatement","src":"10662:16:16"},{"expression":{"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3100,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"10696:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10706:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10696:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3103,"nodeType":"ExpressionStatement","src":"10696:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"10739:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10748:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10754:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10748:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10739:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3122,"nodeType":"IfStatement","src":"10735:100:16","trueBody":{"id":3121,"nodeType":"Block","src":"10757:78:16","statements":[{"expression":{"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"10775:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10784:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10790:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10784:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10775:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3116,"nodeType":"ExpressionStatement","src":"10775:16:16"},{"expression":{"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3117,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"10809:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10819:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10809:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3120,"nodeType":"ExpressionStatement","src":"10809:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"10852:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10861:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10861:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10852:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3139,"nodeType":"IfStatement","src":"10848:100:16","trueBody":{"id":3138,"nodeType":"Block","src":"10870:78:16","statements":[{"expression":{"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"10888:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10897:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10897:7:16","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10888:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3133,"nodeType":"ExpressionStatement","src":"10888:16:16"},{"expression":{"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3134,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"10922:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10932:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10922:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3137,"nodeType":"ExpressionStatement","src":"10922:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"10965:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10974:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10980:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10974:7:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10965:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3150,"nodeType":"IfStatement","src":"10961:66:16","trueBody":{"id":3149,"nodeType":"Block","src":"10983:44:16","statements":[{"expression":{"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3145,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"11001:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11001:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3148,"nodeType":"ExpressionStatement","src":"11001:11:16"}]}}]},{"expression":{"id":3152,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"11053:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3033,"id":3153,"nodeType":"Return","src":"11046:13:16"}]},"documentation":{"id":3027,"nodeType":"StructuredDocumentation","src":"10031:114:16","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3155,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10159:5:16","nodeType":"FunctionDefinition","parameters":{"id":3030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3029,"mutability":"mutable","name":"value","nameLocation":"10173:5:16","nodeType":"VariableDeclaration","scope":3155,"src":"10165:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3028,"name":"uint256","nodeType":"ElementaryTypeName","src":"10165:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10164:15:16"},"returnParameters":{"id":3033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3155,"src":"10203:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3031,"name":"uint256","nodeType":"ElementaryTypeName","src":"10203:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10202:9:16"},"scope":3318,"src":"10150:916:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3190,"nodeType":"Block","src":"11301:167:16","statements":[{"id":3189,"nodeType":"UncheckedBlock","src":"11311:151:16","statements":[{"assignments":[3167],"declarations":[{"constant":false,"id":3167,"mutability":"mutable","name":"result","nameLocation":"11343:6:16","nodeType":"VariableDeclaration","scope":3189,"src":"11335:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3166,"name":"uint256","nodeType":"ElementaryTypeName","src":"11335:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3171,"initialValue":{"arguments":[{"id":3169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"11358:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3168,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3155,3191],"referencedDeclaration":3155,"src":"11352:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11352:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11335:29:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3172,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"11385:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum MathUpgradeable.Rounding"},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3173,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"11395:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3174,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"11407:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2459_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11416:2:16","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2457,"src":"11407:11:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum MathUpgradeable.Rounding"}},"src":"11395:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11422:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3178,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"11428:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11422:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"11437:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11422:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11395:47:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11449:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11395:55:16","trueExpression":{"hexValue":"31","id":3183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11445:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3186,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11394:57:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11385:66:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3165,"id":3188,"nodeType":"Return","src":"11378:73:16"}]}]},"documentation":{"id":3156,"nodeType":"StructuredDocumentation","src":"11072:143:16","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3191,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11229:5:16","nodeType":"FunctionDefinition","parameters":{"id":3162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3158,"mutability":"mutable","name":"value","nameLocation":"11243:5:16","nodeType":"VariableDeclaration","scope":3191,"src":"11235:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3157,"name":"uint256","nodeType":"ElementaryTypeName","src":"11235:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3161,"mutability":"mutable","name":"rounding","nameLocation":"11259:8:16","nodeType":"VariableDeclaration","scope":3191,"src":"11250:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":3160,"nodeType":"UserDefinedTypeName","pathNode":{"id":3159,"name":"Rounding","nameLocations":["11250:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":2459,"src":"11250:8:16"},"referencedDeclaration":2459,"src":"11250:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"11234:34:16"},"returnParameters":{"id":3165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3191,"src":"11292:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3163,"name":"uint256","nodeType":"ElementaryTypeName","src":"11292:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11291:9:16"},"scope":3318,"src":"11220:248:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3277,"nodeType":"Block","src":"11782:600:16","statements":[{"assignments":[3200],"declarations":[{"constant":false,"id":3200,"mutability":"mutable","name":"result","nameLocation":"11800:6:16","nodeType":"VariableDeclaration","scope":3277,"src":"11792:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3199,"name":"uint256","nodeType":"ElementaryTypeName","src":"11792:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3202,"initialValue":{"hexValue":"30","id":3201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11809:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11792:18:16"},{"id":3274,"nodeType":"UncheckedBlock","src":"11820:533:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"11848:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11848:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11863:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11848:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3217,"nodeType":"IfStatement","src":"11844:98:16","trueBody":{"id":3216,"nodeType":"Block","src":"11866:76:16","statements":[{"expression":{"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"11884:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11894:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11884:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3211,"nodeType":"ExpressionStatement","src":"11884:13:16"},{"expression":{"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3212,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"11915:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11925:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11915:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3215,"nodeType":"ExpressionStatement","src":"11915:12:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"11959:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11968:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11959:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11973:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11959:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3232,"nodeType":"IfStatement","src":"11955:95:16","trueBody":{"id":3231,"nodeType":"Block","src":"11976:74:16","statements":[{"expression":{"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"11994:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12004:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11994:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3226,"nodeType":"ExpressionStatement","src":"11994:12:16"},{"expression":{"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3227,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"12024:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12034:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12024:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3230,"nodeType":"ExpressionStatement","src":"12024:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"12067:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12076:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12067:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12081:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12067:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3247,"nodeType":"IfStatement","src":"12063:95:16","trueBody":{"id":3246,"nodeType":"Block","src":"12084:74:16","statements":[{"expression":{"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"12102:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12112:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12102:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3241,"nodeType":"ExpressionStatement","src":"12102:12:16"},{"expression":{"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3242,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"12132:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12142:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12132:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3245,"nodeType":"ExpressionStatement","src":"12132:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"12175:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12184:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12175:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12189:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12175:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3262,"nodeType":"IfStatement","src":"12171:95:16","trueBody":{"id":3261,"nodeType":"Block","src":"12192:74:16","statements":[{"expression":{"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"12210:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12220:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12210:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3256,"nodeType":"ExpressionStatement","src":"12210:12:16"},{"expression":{"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3257,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"12240:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12250:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12240:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3260,"nodeType":"ExpressionStatement","src":"12240:11:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"12283:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12292:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12283:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12296:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12283:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3273,"nodeType":"IfStatement","src":"12279:64:16","trueBody":{"id":3272,"nodeType":"Block","src":"12299:44:16","statements":[{"expression":{"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3268,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"12317:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12327:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12317:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3271,"nodeType":"ExpressionStatement","src":"12317:11:16"}]}}]},{"expression":{"id":3275,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"12369:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3198,"id":3276,"nodeType":"Return","src":"12362:13:16"}]},"documentation":{"id":3192,"nodeType":"StructuredDocumentation","src":"11474:240:16","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3278,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11728:6:16","nodeType":"FunctionDefinition","parameters":{"id":3195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3194,"mutability":"mutable","name":"value","nameLocation":"11743:5:16","nodeType":"VariableDeclaration","scope":3278,"src":"11735:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3193,"name":"uint256","nodeType":"ElementaryTypeName","src":"11735:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11734:15:16"},"returnParameters":{"id":3198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3278,"src":"11773:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3196,"name":"uint256","nodeType":"ElementaryTypeName","src":"11773:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11772:9:16"},"scope":3318,"src":"11719:663:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3316,"nodeType":"Block","src":"12619:174:16","statements":[{"id":3315,"nodeType":"UncheckedBlock","src":"12629:158:16","statements":[{"assignments":[3290],"declarations":[{"constant":false,"id":3290,"mutability":"mutable","name":"result","nameLocation":"12661:6:16","nodeType":"VariableDeclaration","scope":3315,"src":"12653:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3289,"name":"uint256","nodeType":"ElementaryTypeName","src":"12653:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3294,"initialValue":{"arguments":[{"id":3292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"12677:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3291,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3278,3317],"referencedDeclaration":3278,"src":"12670:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12670:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12653:30:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3295,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"12704:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum MathUpgradeable.Rounding"},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3296,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"12714:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3297,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"12726:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2459_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":3298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12735:2:16","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2457,"src":"12726:11:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum MathUpgradeable.Rounding"}},"src":"12714:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3301,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"12747:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12747:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3304,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12746:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12741:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"12762:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12741:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12714:53:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12774:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12714:61:16","trueExpression":{"hexValue":"31","id":3309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3312,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12713:63:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12704:72:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3288,"id":3314,"nodeType":"Return","src":"12697:79:16"}]}]},"documentation":{"id":3279,"nodeType":"StructuredDocumentation","src":"12388:144:16","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3317,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12546:6:16","nodeType":"FunctionDefinition","parameters":{"id":3285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3281,"mutability":"mutable","name":"value","nameLocation":"12561:5:16","nodeType":"VariableDeclaration","scope":3317,"src":"12553:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3280,"name":"uint256","nodeType":"ElementaryTypeName","src":"12553:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3284,"mutability":"mutable","name":"rounding","nameLocation":"12577:8:16","nodeType":"VariableDeclaration","scope":3317,"src":"12568:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":3283,"nodeType":"UserDefinedTypeName","pathNode":{"id":3282,"name":"Rounding","nameLocations":["12568:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":2459,"src":"12568:8:16"},"referencedDeclaration":2459,"src":"12568:8:16","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2459","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"12552:34:16"},"returnParameters":{"id":3288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3317,"src":"12610:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3286,"name":"uint256","nodeType":"ElementaryTypeName","src":"12610:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12609:9:16"},"scope":3318,"src":"12537:256:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3319,"src":"202:12593:16","usedErrors":[],"usedEvents":[]}],"src":"103:12693:16"},"id":16},"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol","exportedSymbols":{"SignedMathUpgradeable":[3423]},"id":3424,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3320,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMathUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":3321,"nodeType":"StructuredDocumentation","src":"134:80:17","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3423,"linearizedBaseContracts":[3423],"name":"SignedMathUpgradeable","nameLocation":"223:21:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":3338,"nodeType":"Block","src":"386:37:17","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3331,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"403:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3332,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"407:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"403:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3335,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"415:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"403:13:17","trueExpression":{"id":3334,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"411:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3330,"id":3337,"nodeType":"Return","src":"396:20:17"}]},"documentation":{"id":3322,"nodeType":"StructuredDocumentation","src":"251:66:17","text":" @dev Returns the largest of two signed numbers."},"id":3339,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"331:3:17","nodeType":"FunctionDefinition","parameters":{"id":3327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3324,"mutability":"mutable","name":"a","nameLocation":"342:1:17","nodeType":"VariableDeclaration","scope":3339,"src":"335:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3323,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3326,"mutability":"mutable","name":"b","nameLocation":"352:1:17","nodeType":"VariableDeclaration","scope":3339,"src":"345:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3325,"name":"int256","nodeType":"ElementaryTypeName","src":"345:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"334:20:17"},"returnParameters":{"id":3330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3339,"src":"378:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3328,"name":"int256","nodeType":"ElementaryTypeName","src":"378:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"377:8:17"},"scope":3423,"src":"322:101:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3356,"nodeType":"Block","src":"565:37:17","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3349,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"582:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3350,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"586:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"582:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3353,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"594:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"582:13:17","trueExpression":{"id":3352,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"590:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3348,"id":3355,"nodeType":"Return","src":"575:20:17"}]},"documentation":{"id":3340,"nodeType":"StructuredDocumentation","src":"429:67:17","text":" @dev Returns the smallest of two signed numbers."},"id":3357,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"510:3:17","nodeType":"FunctionDefinition","parameters":{"id":3345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3342,"mutability":"mutable","name":"a","nameLocation":"521:1:17","nodeType":"VariableDeclaration","scope":3357,"src":"514:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3341,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3344,"mutability":"mutable","name":"b","nameLocation":"531:1:17","nodeType":"VariableDeclaration","scope":3357,"src":"524:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3343,"name":"int256","nodeType":"ElementaryTypeName","src":"524:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"513:20:17"},"returnParameters":{"id":3348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3357,"src":"557:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3346,"name":"int256","nodeType":"ElementaryTypeName","src":"557:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"556:8:17"},"scope":3423,"src":"501:101:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3400,"nodeType":"Block","src":"807:162:17","statements":[{"assignments":[3368],"declarations":[{"constant":false,"id":3368,"mutability":"mutable","name":"x","nameLocation":"876:1:17","nodeType":"VariableDeclaration","scope":3400,"src":"869:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3367,"name":"int256","nodeType":"ElementaryTypeName","src":"869:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3381,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3369,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"881:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3370,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"885:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3372,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3373,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"892:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3374,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"896:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"892:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"891:7:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"902:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"891:12:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3379,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"890:14:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"880:24:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"869:35:17"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3382,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"921:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3387,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"941:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"933:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3385,"name":"uint256","nodeType":"ElementaryTypeName","src":"933:7:17","typeDescriptions":{}}},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"933:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"947:3:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"933:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"926:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3383,"name":"int256","nodeType":"ElementaryTypeName","src":"926:6:17","typeDescriptions":{}}},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"926:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3392,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"955:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3393,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"959:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"955:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3395,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"954:7:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"926:35:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3397,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"925:37:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"921:41:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3366,"id":3399,"nodeType":"Return","src":"914:48:17"}]},"documentation":{"id":3358,"nodeType":"StructuredDocumentation","src":"608:126:17","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3401,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"748:7:17","nodeType":"FunctionDefinition","parameters":{"id":3363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3360,"mutability":"mutable","name":"a","nameLocation":"763:1:17","nodeType":"VariableDeclaration","scope":3401,"src":"756:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3359,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3362,"mutability":"mutable","name":"b","nameLocation":"773:1:17","nodeType":"VariableDeclaration","scope":3401,"src":"766:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3361,"name":"int256","nodeType":"ElementaryTypeName","src":"766:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"755:20:17"},"returnParameters":{"id":3366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3401,"src":"799:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3364,"name":"int256","nodeType":"ElementaryTypeName","src":"799:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"798:8:17"},"scope":3423,"src":"739:230:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3421,"nodeType":"Block","src":"1113:158:17","statements":[{"id":3420,"nodeType":"UncheckedBlock","src":"1123:142:17","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3411,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"1238:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1243:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1238:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1251:2:17","subExpression":{"id":3415,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"1252:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1238:15:17","trueExpression":{"id":3414,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"1247:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1230:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3409,"name":"uint256","nodeType":"ElementaryTypeName","src":"1230:7:17","typeDescriptions":{}}},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1230:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3408,"id":3419,"nodeType":"Return","src":"1223:31:17"}]}]},"documentation":{"id":3402,"nodeType":"StructuredDocumentation","src":"975:78:17","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3422,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1067:3:17","nodeType":"FunctionDefinition","parameters":{"id":3405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3404,"mutability":"mutable","name":"n","nameLocation":"1078:1:17","nodeType":"VariableDeclaration","scope":3422,"src":"1071:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3403,"name":"int256","nodeType":"ElementaryTypeName","src":"1071:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1070:10:17"},"returnParameters":{"id":3408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3422,"src":"1104:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3406,"name":"uint256","nodeType":"ElementaryTypeName","src":"1104:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1103:9:17"},"scope":3423,"src":"1058:213:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3424,"src":"215:1058:17","usedErrors":[],"usedEvents":[]}],"src":"109:1165:17"},"id":17},"@openzeppelin/contracts/interfaces/IERC1271.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1271.sol","exportedSymbols":{"IERC1271":[3437]},"id":3438,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3425,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"92:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1271","contractDependencies":[],"contractKind":"interface","documentation":{"id":3426,"nodeType":"StructuredDocumentation","src":"117:189:18","text":" @dev Interface of the ERC1271 standard signature validation method for\n contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n _Available since v4.1._"},"fullyImplemented":false,"id":3437,"linearizedBaseContracts":[3437],"name":"IERC1271","nameLocation":"317:8:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3427,"nodeType":"StructuredDocumentation","src":"332:220:18","text":" @dev Should return whether the signature provided is valid for the provided data\n @param hash      Hash of the data to be signed\n @param signature Signature byte array associated with _data"},"functionSelector":"1626ba7e","id":3436,"implemented":false,"kind":"function","modifiers":[],"name":"isValidSignature","nameLocation":"566:16:18","nodeType":"FunctionDefinition","parameters":{"id":3432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3429,"mutability":"mutable","name":"hash","nameLocation":"591:4:18","nodeType":"VariableDeclaration","scope":3436,"src":"583:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3428,"name":"bytes32","nodeType":"ElementaryTypeName","src":"583:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3431,"mutability":"mutable","name":"signature","nameLocation":"610:9:18","nodeType":"VariableDeclaration","scope":3436,"src":"597:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3430,"name":"bytes","nodeType":"ElementaryTypeName","src":"597:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"582:38:18"},"returnParameters":{"id":3435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3434,"mutability":"mutable","name":"magicValue","nameLocation":"651:10:18","nodeType":"VariableDeclaration","scope":3436,"src":"644:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3433,"name":"bytes4","nodeType":"ElementaryTypeName","src":"644:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"643:19:18"},"scope":3437,"src":"557:106:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3438,"src":"307:358:18","usedErrors":[],"usedEvents":[]}],"src":"92:574:18"},"id":18},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[3515]},"id":3516,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3439,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":3440,"nodeType":"StructuredDocumentation","src":"131:70:19","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":3515,"linearizedBaseContracts":[3515],"name":"IERC20","nameLocation":"212:6:19","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3441,"nodeType":"StructuredDocumentation","src":"225:158:19","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":3449,"name":"Transfer","nameLocation":"394:8:19","nodeType":"EventDefinition","parameters":{"id":3448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3443,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:19","nodeType":"VariableDeclaration","scope":3449,"src":"403:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3442,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3445,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:19","nodeType":"VariableDeclaration","scope":3449,"src":"425:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3444,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3447,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:19","nodeType":"VariableDeclaration","scope":3449,"src":"445:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3446,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:19"},"src":"388:72:19"},{"anonymous":false,"documentation":{"id":3450,"nodeType":"StructuredDocumentation","src":"466:148:19","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":3458,"name":"Approval","nameLocation":"625:8:19","nodeType":"EventDefinition","parameters":{"id":3457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3452,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:19","nodeType":"VariableDeclaration","scope":3458,"src":"634:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3451,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3454,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:19","nodeType":"VariableDeclaration","scope":3458,"src":"657:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3453,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3456,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:19","nodeType":"VariableDeclaration","scope":3458,"src":"682:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3455,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:19"},"src":"619:78:19"},{"documentation":{"id":3459,"nodeType":"StructuredDocumentation","src":"703:66:19","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":3464,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:19","nodeType":"FunctionDefinition","parameters":{"id":3460,"nodeType":"ParameterList","parameters":[],"src":"794:2:19"},"returnParameters":{"id":3463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3464,"src":"820:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3461,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:19"},"scope":3515,"src":"774:55:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3465,"nodeType":"StructuredDocumentation","src":"835:72:19","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":3472,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:19","nodeType":"FunctionDefinition","parameters":{"id":3468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3467,"mutability":"mutable","name":"account","nameLocation":"939:7:19","nodeType":"VariableDeclaration","scope":3472,"src":"931:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3466,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:19"},"returnParameters":{"id":3471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3472,"src":"971:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3469,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:19"},"scope":3515,"src":"912:68:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3473,"nodeType":"StructuredDocumentation","src":"986:202:19","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":3482,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:19","nodeType":"FunctionDefinition","parameters":{"id":3478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3475,"mutability":"mutable","name":"to","nameLocation":"1219:2:19","nodeType":"VariableDeclaration","scope":3482,"src":"1211:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3474,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3477,"mutability":"mutable","name":"amount","nameLocation":"1231:6:19","nodeType":"VariableDeclaration","scope":3482,"src":"1223:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3476,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:19"},"returnParameters":{"id":3481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3482,"src":"1257:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3479,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:19"},"scope":3515,"src":"1193:70:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3483,"nodeType":"StructuredDocumentation","src":"1269:264:19","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":3492,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:19","nodeType":"FunctionDefinition","parameters":{"id":3488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3485,"mutability":"mutable","name":"owner","nameLocation":"1565:5:19","nodeType":"VariableDeclaration","scope":3492,"src":"1557:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3484,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3487,"mutability":"mutable","name":"spender","nameLocation":"1580:7:19","nodeType":"VariableDeclaration","scope":3492,"src":"1572:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3486,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:19"},"returnParameters":{"id":3491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3492,"src":"1612:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3489,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:19"},"scope":3515,"src":"1538:83:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3493,"nodeType":"StructuredDocumentation","src":"1627:642:19","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":3502,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:19","nodeType":"FunctionDefinition","parameters":{"id":3498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3495,"mutability":"mutable","name":"spender","nameLocation":"2299:7:19","nodeType":"VariableDeclaration","scope":3502,"src":"2291:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3494,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3497,"mutability":"mutable","name":"amount","nameLocation":"2316:6:19","nodeType":"VariableDeclaration","scope":3502,"src":"2308:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3496,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:19"},"returnParameters":{"id":3501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3502,"src":"2342:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3499,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:19"},"scope":3515,"src":"2274:74:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3503,"nodeType":"StructuredDocumentation","src":"2354:287:19","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":3514,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:19","nodeType":"FunctionDefinition","parameters":{"id":3510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3505,"mutability":"mutable","name":"from","nameLocation":"2676:4:19","nodeType":"VariableDeclaration","scope":3514,"src":"2668:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3504,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3507,"mutability":"mutable","name":"to","nameLocation":"2690:2:19","nodeType":"VariableDeclaration","scope":3514,"src":"2682:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3506,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3509,"mutability":"mutable","name":"amount","nameLocation":"2702:6:19","nodeType":"VariableDeclaration","scope":3514,"src":"2694:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3508,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:19"},"returnParameters":{"id":3513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3514,"src":"2728:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3511,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:19"},"scope":3515,"src":"2646:88:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3516,"src":"202:2534:19","usedErrors":[],"usedEvents":[3449,3458]}],"src":"106:2631:19"},"id":19},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5603],"SignedMath":[5708],"Strings":[3744]},"id":3745,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3517,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:20"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3518,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3745,"sourceUnit":5604,"src":"126:25:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":3519,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3745,"sourceUnit":5709,"src":"152:31:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":3520,"nodeType":"StructuredDocumentation","src":"185:34:20","text":" @dev String operations."},"fullyImplemented":true,"id":3744,"linearizedBaseContracts":[3744],"name":"Strings","nameLocation":"228:7:20","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3523,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:20","nodeType":"VariableDeclaration","scope":3744,"src":"242:54:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3521,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:20","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3526,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:20","nodeType":"VariableDeclaration","scope":3744,"src":"302:43:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3524,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:20","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":3573,"nodeType":"Block","src":"518:625:20","statements":[{"id":3572,"nodeType":"UncheckedBlock","src":"528:609:20","statements":[{"assignments":[3535],"declarations":[{"constant":false,"id":3535,"mutability":"mutable","name":"length","nameLocation":"560:6:20","nodeType":"VariableDeclaration","scope":3572,"src":"552:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3534,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3542,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"580:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3536,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"569:4:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5603_$","typeString":"type(library Math)"}},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:20","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5440,"src":"569:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:20"},{"assignments":[3544],"declarations":[{"constant":false,"id":3544,"mutability":"mutable","name":"buffer","nameLocation":"618:6:20","nodeType":"VariableDeclaration","scope":3572,"src":"604:20:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3543,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3549,"initialValue":{"arguments":[{"id":3547,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"638:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3545,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:20"},{"assignments":[3551],"declarations":[{"constant":false,"id":3551,"mutability":"mutable","name":"ptr","nameLocation":"667:3:20","nodeType":"VariableDeclaration","scope":3572,"src":"659:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3550,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3552,"nodeType":"VariableDeclarationStatement","src":"659:11:20"},{"AST":{"nativeSrc":"740:67:20","nodeType":"YulBlock","src":"740:67:20","statements":[{"nativeSrc":"758:35:20","nodeType":"YulAssignment","src":"758:35:20","value":{"arguments":[{"name":"buffer","nativeSrc":"769:6:20","nodeType":"YulIdentifier","src":"769:6:20"},{"arguments":[{"kind":"number","nativeSrc":"781:2:20","nodeType":"YulLiteral","src":"781:2:20","type":"","value":"32"},{"name":"length","nativeSrc":"785:6:20","nodeType":"YulIdentifier","src":"785:6:20"}],"functionName":{"name":"add","nativeSrc":"777:3:20","nodeType":"YulIdentifier","src":"777:3:20"},"nativeSrc":"777:15:20","nodeType":"YulFunctionCall","src":"777:15:20"}],"functionName":{"name":"add","nativeSrc":"765:3:20","nodeType":"YulIdentifier","src":"765:3:20"},"nativeSrc":"765:28:20","nodeType":"YulFunctionCall","src":"765:28:20"},"variableNames":[{"name":"ptr","nativeSrc":"758:3:20","nodeType":"YulIdentifier","src":"758:3:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":3544,"isOffset":false,"isSlot":false,"src":"769:6:20","valueSize":1},{"declaration":3535,"isOffset":false,"isSlot":false,"src":"785:6:20","valueSize":1},{"declaration":3551,"isOffset":false,"isSlot":false,"src":"758:3:20","valueSize":1}],"id":3553,"nodeType":"InlineAssembly","src":"731:76:20"},{"body":{"id":3568,"nodeType":"Block","src":"833:267:20","statements":[{"expression":{"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:20","subExpression":{"id":3555,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"851:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3557,"nodeType":"ExpressionStatement","src":"851:5:20"},{"AST":{"nativeSrc":"934:84:20","nodeType":"YulBlock","src":"934:84:20","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"964:3:20","nodeType":"YulIdentifier","src":"964:3:20"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"978:5:20","nodeType":"YulIdentifier","src":"978:5:20"},{"kind":"number","nativeSrc":"985:2:20","nodeType":"YulLiteral","src":"985:2:20","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"974:3:20","nodeType":"YulIdentifier","src":"974:3:20"},"nativeSrc":"974:14:20","nodeType":"YulFunctionCall","src":"974:14:20"},{"name":"_SYMBOLS","nativeSrc":"990:8:20","nodeType":"YulIdentifier","src":"990:8:20"}],"functionName":{"name":"byte","nativeSrc":"969:4:20","nodeType":"YulIdentifier","src":"969:4:20"},"nativeSrc":"969:30:20","nodeType":"YulFunctionCall","src":"969:30:20"}],"functionName":{"name":"mstore8","nativeSrc":"956:7:20","nodeType":"YulIdentifier","src":"956:7:20"},"nativeSrc":"956:44:20","nodeType":"YulFunctionCall","src":"956:44:20"},"nativeSrc":"956:44:20","nodeType":"YulExpressionStatement","src":"956:44:20"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":3523,"isOffset":false,"isSlot":false,"src":"990:8:20","valueSize":1},{"declaration":3551,"isOffset":false,"isSlot":false,"src":"964:3:20","valueSize":1},{"declaration":3529,"isOffset":false,"isSlot":false,"src":"978:5:20","valueSize":1}],"id":3558,"nodeType":"InlineAssembly","src":"925:93:20"},{"expression":{"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"1035:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3562,"nodeType":"ExpressionStatement","src":"1035:11:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"1068:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3567,"nodeType":"IfStatement","src":"1064:21:20","trueBody":{"id":3566,"nodeType":"Break","src":"1080:5:20"}}]},"condition":{"hexValue":"74727565","id":3554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":3569,"nodeType":"WhileStatement","src":"820:280:20"},{"expression":{"id":3570,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"1120:6:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3533,"id":3571,"nodeType":"Return","src":"1113:13:20"}]}]},"documentation":{"id":3527,"nodeType":"StructuredDocumentation","src":"352:90:20","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3574,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:20","nodeType":"FunctionDefinition","parameters":{"id":3530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3529,"mutability":"mutable","name":"value","nameLocation":"473:5:20","nodeType":"VariableDeclaration","scope":3574,"src":"465:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3528,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:20"},"returnParameters":{"id":3533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3574,"src":"503:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3531,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:20"},"scope":3744,"src":"447:696:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3601,"nodeType":"Block","src":"1313:103:20","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"1354:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":3590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:20","trueExpression":{"hexValue":"2d","id":3589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":3595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"1400:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3593,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"1385:10:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$5708_$","typeString":"type(library SignedMath)"}},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:20","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":5707,"src":"1385:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3592,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[3574,3602],"referencedDeclaration":3574,"src":"1376:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3584,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3582,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:20","typeDescriptions":{}}},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3581,"id":3600,"nodeType":"Return","src":"1323:86:20"}]},"documentation":{"id":3575,"nodeType":"StructuredDocumentation","src":"1149:89:20","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":3602,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:20","nodeType":"FunctionDefinition","parameters":{"id":3578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3577,"mutability":"mutable","name":"value","nameLocation":"1268:5:20","nodeType":"VariableDeclaration","scope":3602,"src":"1261:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3576,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:20"},"returnParameters":{"id":3581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3602,"src":"1298:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3579,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:20"},"scope":3744,"src":"1243:173:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3621,"nodeType":"Block","src":"1595:100:20","statements":[{"id":3620,"nodeType":"UncheckedBlock","src":"1605:84:20","statements":[{"expression":{"arguments":[{"id":3611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"1648:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"1667:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3612,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"1655:4:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5603_$","typeString":"type(library Math)"}},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:20","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5563,"src":"1655:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3610,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3622,3698,3718],"referencedDeclaration":3698,"src":"1636:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3609,"id":3619,"nodeType":"Return","src":"1629:49:20"}]}]},"documentation":{"id":3603,"nodeType":"StructuredDocumentation","src":"1422:94:20","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3622,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:20","nodeType":"FunctionDefinition","parameters":{"id":3606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3605,"mutability":"mutable","name":"value","nameLocation":"1550:5:20","nodeType":"VariableDeclaration","scope":3622,"src":"1542:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3604,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:20"},"returnParameters":{"id":3609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3622,"src":"1580:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3607,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:20"},"scope":3744,"src":"1521:174:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3697,"nodeType":"Block","src":"1908:347:20","statements":[{"assignments":[3633],"declarations":[{"constant":false,"id":3633,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:20","nodeType":"VariableDeclaration","scope":3697,"src":"1918:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3632,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3642,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3637,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"1954:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3634,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:20"},{"expression":{"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3643,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"1975:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3645,"indexExpression":{"hexValue":"30","id":3644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3648,"nodeType":"ExpressionStatement","src":"1975:15:20"},{"expression":{"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3649,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"2000:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3651,"indexExpression":{"hexValue":"31","id":3650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3654,"nodeType":"ExpressionStatement","src":"2000:15:20"},{"body":{"id":3683,"nodeType":"Block","src":"2070:83:20","statements":[{"expression":{"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3669,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"2084:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3671,"indexExpression":{"id":3670,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"2091:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3672,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"2096:8:20","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3676,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"2105:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:20","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3678,"nodeType":"ExpressionStatement","src":"2084:33:20"},{"expression":{"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"2131:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3682,"nodeType":"ExpressionStatement","src":"2131:11:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3663,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"2058:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3684,"initializationExpression":{"assignments":[3656],"declarations":[{"constant":false,"id":3656,"mutability":"mutable","name":"i","nameLocation":"2038:1:20","nodeType":"VariableDeclaration","scope":3684,"src":"2030:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3655,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3662,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3658,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"2046:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:20"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:20","subExpression":{"id":3666,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"2067:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3668,"nodeType":"ExpressionStatement","src":"2065:3:20"},"nodeType":"ForStatement","src":"2025:128:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"2170:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":3689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":3685,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3691,"nodeType":"ExpressionStatement","src":"2162:55:20"},{"expression":{"arguments":[{"id":3694,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"2241:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3692,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:20","typeDescriptions":{}}},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3631,"id":3696,"nodeType":"Return","src":"2227:21:20"}]},"documentation":{"id":3623,"nodeType":"StructuredDocumentation","src":"1701:112:20","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3698,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:20","nodeType":"FunctionDefinition","parameters":{"id":3628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3625,"mutability":"mutable","name":"value","nameLocation":"1847:5:20","nodeType":"VariableDeclaration","scope":3698,"src":"1839:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3624,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3627,"mutability":"mutable","name":"length","nameLocation":"1862:6:20","nodeType":"VariableDeclaration","scope":3698,"src":"1854:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3626,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:20"},"returnParameters":{"id":3631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3698,"src":"1893:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3629,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:20"},"scope":3744,"src":"1818:437:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3717,"nodeType":"Block","src":"2480:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3711,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"2525:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3709,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:20","typeDescriptions":{}}},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3707,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:20","typeDescriptions":{}}},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3714,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"2533:15:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3706,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3622,3698,3718],"referencedDeclaration":3698,"src":"2497:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3705,"id":3716,"nodeType":"Return","src":"2490:59:20"}]},"documentation":{"id":3699,"nodeType":"StructuredDocumentation","src":"2261:141:20","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":3718,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:20","nodeType":"FunctionDefinition","parameters":{"id":3702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3701,"mutability":"mutable","name":"addr","nameLocation":"2436:4:20","nodeType":"VariableDeclaration","scope":3718,"src":"2428:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3700,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:20"},"returnParameters":{"id":3705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3718,"src":"2465:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3703,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:20"},"scope":3744,"src":"2407:149:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3742,"nodeType":"Block","src":"2711:66:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3731,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"2744:1:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3729,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:20","typeDescriptions":{}}},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3728,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3737,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"2767:1:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3735,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:20","typeDescriptions":{}}},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3734,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3727,"id":3741,"nodeType":"Return","src":"2721:49:20"}]},"documentation":{"id":3719,"nodeType":"StructuredDocumentation","src":"2562:66:20","text":" @dev Returns true if the two strings are equal."},"id":3743,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:20","nodeType":"FunctionDefinition","parameters":{"id":3724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3721,"mutability":"mutable","name":"a","nameLocation":"2662:1:20","nodeType":"VariableDeclaration","scope":3743,"src":"2648:15:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3720,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3723,"mutability":"mutable","name":"b","nameLocation":"2679:1:20","nodeType":"VariableDeclaration","scope":3743,"src":"2665:15:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3722,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:20"},"returnParameters":{"id":3727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3743,"src":"2705:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3725,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:20"},"scope":3744,"src":"2633:144:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3745,"src":"220:2559:20","usedErrors":[],"usedEvents":[]}],"src":"101:2679:20"},"id":20},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[4110],"Math":[5603],"SignedMath":[5708],"Strings":[3744]},"id":4111,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3746,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:21"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3747,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4111,"sourceUnit":3745,"src":"137:24:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3748,"nodeType":"StructuredDocumentation","src":"163:205:21","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":4110,"linearizedBaseContracts":[4110],"name":"ECDSA","nameLocation":"377:5:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3754,"members":[{"id":3749,"name":"NoError","nameLocation":"417:7:21","nodeType":"EnumValue","src":"417:7:21"},{"id":3750,"name":"InvalidSignature","nameLocation":"434:16:21","nodeType":"EnumValue","src":"434:16:21"},{"id":3751,"name":"InvalidSignatureLength","nameLocation":"460:22:21","nodeType":"EnumValue","src":"460:22:21"},{"id":3752,"name":"InvalidSignatureS","nameLocation":"492:17:21","nodeType":"EnumValue","src":"492:17:21"},{"id":3753,"name":"InvalidSignatureV","nameLocation":"519:17:21","nodeType":"EnumValue","src":"519:17:21"}],"name":"RecoverError","nameLocation":"394:12:21","nodeType":"EnumDefinition","src":"389:175:21"},{"body":{"id":3797,"nodeType":"Block","src":"624:457:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3760,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3757,"src":"638:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3761,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"647:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3754_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"660:7:21","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3749,"src":"647:20:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3766,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3757,"src":"734:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3767,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"743:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3754_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"756:16:21","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3750,"src":"743:29:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3775,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3757,"src":"843:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3776,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"852:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3754_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"865:22:21","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3751,"src":"852:35:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3784,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3757,"src":"965:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3785,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"974:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3754_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"987:17:21","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3752,"src":"974:30:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3793,"nodeType":"IfStatement","src":"961:114:21","trueBody":{"id":3792,"nodeType":"Block","src":"1006:69:21","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":3789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":3788,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:21","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1020:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3791,"nodeType":"ExpressionStatement","src":"1020:44:21"}]}},"id":3794,"nodeType":"IfStatement","src":"839:236:21","trueBody":{"id":3783,"nodeType":"Block","src":"889:66:21","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":3780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":3779,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:21","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"903:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3782,"nodeType":"ExpressionStatement","src":"903:41:21"}]}},"id":3795,"nodeType":"IfStatement","src":"730:345:21","trueBody":{"id":3774,"nodeType":"Block","src":"774:59:21","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":3771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":3770,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:21","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"788:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3773,"nodeType":"ExpressionStatement","src":"788:34:21"}]}},"id":3796,"nodeType":"IfStatement","src":"634:441:21","trueBody":{"id":3765,"nodeType":"Block","src":"669:55:21","statements":[{"functionReturnParameters":3759,"id":3764,"nodeType":"Return","src":"683:7:21"}]}}]},"id":3798,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:21","nodeType":"FunctionDefinition","parameters":{"id":3758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3757,"mutability":"mutable","name":"error","nameLocation":"604:5:21","nodeType":"VariableDeclaration","scope":3798,"src":"591:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3756,"nodeType":"UserDefinedTypeName","pathNode":{"id":3755,"name":"RecoverError","nameLocations":["591:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":3754,"src":"591:12:21"},"referencedDeclaration":3754,"src":"591:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:21"},"returnParameters":{"id":3759,"nodeType":"ParameterList","parameters":[],"src":"624:0:21"},"scope":4110,"src":"570:511:21","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3843,"nodeType":"Block","src":"2249:626:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3811,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"2263:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2273:6:21","memberName":"length","nodeType":"MemberAccess","src":"2263:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:21","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3841,"nodeType":"Block","src":"2788:81:21","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3833,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:21","typeDescriptions":{}}},"id":3836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2810:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3837,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"2822:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3754_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:22:21","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3751,"src":"2822:35:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"}}],"id":3839,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3754_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":3810,"id":3840,"nodeType":"Return","src":"2802:56:21"}]},"id":3842,"nodeType":"IfStatement","src":"2259:610:21","trueBody":{"id":3832,"nodeType":"Block","src":"2287:495:21","statements":[{"assignments":[3816],"declarations":[{"constant":false,"id":3816,"mutability":"mutable","name":"r","nameLocation":"2309:1:21","nodeType":"VariableDeclaration","scope":3832,"src":"2301:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3815,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3817,"nodeType":"VariableDeclarationStatement","src":"2301:9:21"},{"assignments":[3819],"declarations":[{"constant":false,"id":3819,"mutability":"mutable","name":"s","nameLocation":"2332:1:21","nodeType":"VariableDeclaration","scope":3832,"src":"2324:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3818,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3820,"nodeType":"VariableDeclarationStatement","src":"2324:9:21"},{"assignments":[3822],"declarations":[{"constant":false,"id":3822,"mutability":"mutable","name":"v","nameLocation":"2353:1:21","nodeType":"VariableDeclaration","scope":3832,"src":"2347:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3821,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3823,"nodeType":"VariableDeclarationStatement","src":"2347:7:21"},{"AST":{"nativeSrc":"2555:171:21","nodeType":"YulBlock","src":"2555:171:21","statements":[{"nativeSrc":"2573:32:21","nodeType":"YulAssignment","src":"2573:32:21","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2588:9:21","nodeType":"YulIdentifier","src":"2588:9:21"},{"kind":"number","nativeSrc":"2599:4:21","nodeType":"YulLiteral","src":"2599:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2584:3:21","nodeType":"YulIdentifier","src":"2584:3:21"},"nativeSrc":"2584:20:21","nodeType":"YulFunctionCall","src":"2584:20:21"}],"functionName":{"name":"mload","nativeSrc":"2578:5:21","nodeType":"YulIdentifier","src":"2578:5:21"},"nativeSrc":"2578:27:21","nodeType":"YulFunctionCall","src":"2578:27:21"},"variableNames":[{"name":"r","nativeSrc":"2573:1:21","nodeType":"YulIdentifier","src":"2573:1:21"}]},{"nativeSrc":"2622:32:21","nodeType":"YulAssignment","src":"2622:32:21","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2637:9:21","nodeType":"YulIdentifier","src":"2637:9:21"},{"kind":"number","nativeSrc":"2648:4:21","nodeType":"YulLiteral","src":"2648:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2633:3:21","nodeType":"YulIdentifier","src":"2633:3:21"},"nativeSrc":"2633:20:21","nodeType":"YulFunctionCall","src":"2633:20:21"}],"functionName":{"name":"mload","nativeSrc":"2627:5:21","nodeType":"YulIdentifier","src":"2627:5:21"},"nativeSrc":"2627:27:21","nodeType":"YulFunctionCall","src":"2627:27:21"},"variableNames":[{"name":"s","nativeSrc":"2622:1:21","nodeType":"YulIdentifier","src":"2622:1:21"}]},{"nativeSrc":"2671:41:21","nodeType":"YulAssignment","src":"2671:41:21","value":{"arguments":[{"kind":"number","nativeSrc":"2681:1:21","nodeType":"YulLiteral","src":"2681:1:21","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2694:9:21","nodeType":"YulIdentifier","src":"2694:9:21"},{"kind":"number","nativeSrc":"2705:4:21","nodeType":"YulLiteral","src":"2705:4:21","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2690:3:21","nodeType":"YulIdentifier","src":"2690:3:21"},"nativeSrc":"2690:20:21","nodeType":"YulFunctionCall","src":"2690:20:21"}],"functionName":{"name":"mload","nativeSrc":"2684:5:21","nodeType":"YulIdentifier","src":"2684:5:21"},"nativeSrc":"2684:27:21","nodeType":"YulFunctionCall","src":"2684:27:21"}],"functionName":{"name":"byte","nativeSrc":"2676:4:21","nodeType":"YulIdentifier","src":"2676:4:21"},"nativeSrc":"2676:36:21","nodeType":"YulFunctionCall","src":"2676:36:21"},"variableNames":[{"name":"v","nativeSrc":"2671:1:21","nodeType":"YulIdentifier","src":"2671:1:21"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":3816,"isOffset":false,"isSlot":false,"src":"2573:1:21","valueSize":1},{"declaration":3819,"isOffset":false,"isSlot":false,"src":"2622:1:21","valueSize":1},{"declaration":3803,"isOffset":false,"isSlot":false,"src":"2588:9:21","valueSize":1},{"declaration":3803,"isOffset":false,"isSlot":false,"src":"2637:9:21","valueSize":1},{"declaration":3803,"isOffset":false,"isSlot":false,"src":"2694:9:21","valueSize":1},{"declaration":3822,"isOffset":false,"isSlot":false,"src":"2671:1:21","valueSize":1}],"id":3824,"nodeType":"InlineAssembly","src":"2546:180:21"},{"expression":{"arguments":[{"id":3826,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"2757:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3827,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"2763:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3828,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"2766:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3829,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"2769:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3825,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3844,3918,4012],"referencedDeclaration":4012,"src":"2746:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3754_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3754_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":3810,"id":3831,"nodeType":"Return","src":"2739:32:21"}]}}]},"documentation":{"id":3799,"nodeType":"StructuredDocumentation","src":"1087:1053:21","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":3844,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:21","nodeType":"FunctionDefinition","parameters":{"id":3804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3801,"mutability":"mutable","name":"hash","nameLocation":"2173:4:21","nodeType":"VariableDeclaration","scope":3844,"src":"2165:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3800,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3803,"mutability":"mutable","name":"signature","nameLocation":"2192:9:21","nodeType":"VariableDeclaration","scope":3844,"src":"2179:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3802,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:21"},"returnParameters":{"id":3810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3844,"src":"2226:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3805,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3844,"src":"2235:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3808,"nodeType":"UserDefinedTypeName","pathNode":{"id":3807,"name":"RecoverError","nameLocations":["2235:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":3754,"src":"2235:12:21"},"referencedDeclaration":3754,"src":"2235:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:21"},"scope":4110,"src":"2145:730:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3870,"nodeType":"Block","src":"3748:140:21","statements":[{"assignments":[3855,3858],"declarations":[{"constant":false,"id":3855,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:21","nodeType":"VariableDeclaration","scope":3870,"src":"3759:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3854,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3858,"mutability":"mutable","name":"error","nameLocation":"3791:5:21","nodeType":"VariableDeclaration","scope":3870,"src":"3778:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3857,"nodeType":"UserDefinedTypeName","pathNode":{"id":3856,"name":"RecoverError","nameLocations":["3778:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":3754,"src":"3778:12:21"},"referencedDeclaration":3754,"src":"3778:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":3863,"initialValue":{"arguments":[{"id":3860,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"3811:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3861,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"3817:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3859,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3844,3918,4012],"referencedDeclaration":3844,"src":"3800:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3754_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3800:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3754_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:21"},{"expression":{"arguments":[{"id":3865,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"3849:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"}],"id":3864,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"3837:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3754_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3837:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3867,"nodeType":"ExpressionStatement","src":"3837:18:21"},{"expression":{"id":3868,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"3872:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3853,"id":3869,"nodeType":"Return","src":"3865:16:21"}]},"documentation":{"id":3845,"nodeType":"StructuredDocumentation","src":"2881:775:21","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":3871,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:21","nodeType":"FunctionDefinition","parameters":{"id":3850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3847,"mutability":"mutable","name":"hash","nameLocation":"3686:4:21","nodeType":"VariableDeclaration","scope":3871,"src":"3678:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3846,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3849,"mutability":"mutable","name":"signature","nameLocation":"3705:9:21","nodeType":"VariableDeclaration","scope":3871,"src":"3692:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3848,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:21"},"returnParameters":{"id":3853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3871,"src":"3739:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3851,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:21"},"scope":4110,"src":"3661:227:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3917,"nodeType":"Block","src":"4245:203:21","statements":[{"assignments":[3887],"declarations":[{"constant":false,"id":3887,"mutability":"mutable","name":"s","nameLocation":"4263:1:21","nodeType":"VariableDeclaration","scope":3917,"src":"4255:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3886,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3894,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3888,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"4267:2:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4280:66:21","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4272:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3889,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4272:7:21","typeDescriptions":{}}},"id":3892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:75:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4267:80:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4255:92:21"},{"assignments":[3896],"declarations":[{"constant":false,"id":3896,"mutability":"mutable","name":"v","nameLocation":"4363:1:21","nodeType":"VariableDeclaration","scope":3917,"src":"4357:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3895,"name":"uint8","nodeType":"ElementaryTypeName","src":"4357:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3909,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3901,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"4382:2:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4374:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3899,"name":"uint256","nodeType":"ElementaryTypeName","src":"4374:7:21","typeDescriptions":{}}},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4374:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4389:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4374:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3905,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4373:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4396:2:21","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4373:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4367:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3897,"name":"uint8","nodeType":"ElementaryTypeName","src":"4367:5:21","typeDescriptions":{}}},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4367:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4357:42:21"},{"expression":{"arguments":[{"id":3911,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"4427:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3912,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"4433:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3913,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"4436:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3914,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"4439:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3910,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3844,3918,4012],"referencedDeclaration":4012,"src":"4416:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3754_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4416:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3754_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":3885,"id":3916,"nodeType":"Return","src":"4409:32:21"}]},"documentation":{"id":3872,"nodeType":"StructuredDocumentation","src":"3894:243:21","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":3918,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:21","nodeType":"FunctionDefinition","parameters":{"id":3879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3874,"mutability":"mutable","name":"hash","nameLocation":"4170:4:21","nodeType":"VariableDeclaration","scope":3918,"src":"4162:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3873,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4162:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3876,"mutability":"mutable","name":"r","nameLocation":"4184:1:21","nodeType":"VariableDeclaration","scope":3918,"src":"4176:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3875,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4176:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3878,"mutability":"mutable","name":"vs","nameLocation":"4195:2:21","nodeType":"VariableDeclaration","scope":3918,"src":"4187:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3877,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4187:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:37:21"},"returnParameters":{"id":3885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3918,"src":"4222:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3880,"name":"address","nodeType":"ElementaryTypeName","src":"4222:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3918,"src":"4231:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3883,"nodeType":"UserDefinedTypeName","pathNode":{"id":3882,"name":"RecoverError","nameLocations":["4231:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":3754,"src":"4231:12:21"},"referencedDeclaration":3754,"src":"4231:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4221:23:21"},"scope":4110,"src":"4142:306:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3947,"nodeType":"Block","src":"4699:136:21","statements":[{"assignments":[3931,3934],"declarations":[{"constant":false,"id":3931,"mutability":"mutable","name":"recovered","nameLocation":"4718:9:21","nodeType":"VariableDeclaration","scope":3947,"src":"4710:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3930,"name":"address","nodeType":"ElementaryTypeName","src":"4710:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3934,"mutability":"mutable","name":"error","nameLocation":"4742:5:21","nodeType":"VariableDeclaration","scope":3947,"src":"4729:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3933,"nodeType":"UserDefinedTypeName","pathNode":{"id":3932,"name":"RecoverError","nameLocations":["4729:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":3754,"src":"4729:12:21"},"referencedDeclaration":3754,"src":"4729:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":3940,"initialValue":{"arguments":[{"id":3936,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"4762:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3937,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"4768:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3938,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"4771:2:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3935,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3844,3918,4012],"referencedDeclaration":3918,"src":"4751:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3754_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4751:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3754_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4709:65:21"},{"expression":{"arguments":[{"id":3942,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"4796:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"}],"id":3941,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"4784:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3754_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3944,"nodeType":"ExpressionStatement","src":"4784:18:21"},{"expression":{"id":3945,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"4819:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3929,"id":3946,"nodeType":"Return","src":"4812:16:21"}]},"documentation":{"id":3919,"nodeType":"StructuredDocumentation","src":"4454:154:21","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":3948,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4622:7:21","nodeType":"FunctionDefinition","parameters":{"id":3926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3921,"mutability":"mutable","name":"hash","nameLocation":"4638:4:21","nodeType":"VariableDeclaration","scope":3948,"src":"4630:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3920,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4630:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3923,"mutability":"mutable","name":"r","nameLocation":"4652:1:21","nodeType":"VariableDeclaration","scope":3948,"src":"4644:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3922,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4644:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3925,"mutability":"mutable","name":"vs","nameLocation":"4663:2:21","nodeType":"VariableDeclaration","scope":3948,"src":"4655:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4655:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4629:37:21"},"returnParameters":{"id":3929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3948,"src":"4690:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3927,"name":"address","nodeType":"ElementaryTypeName","src":"4690:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4689:9:21"},"scope":4110,"src":"4613:222:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4011,"nodeType":"Block","src":"5120:1345:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3967,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"6016:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6008:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3965,"name":"uint256","nodeType":"ElementaryTypeName","src":"6008:7:21","typeDescriptions":{}}},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6008:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6021:66:21","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6008:79:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3980,"nodeType":"IfStatement","src":"6004:161:21","trueBody":{"id":3979,"nodeType":"Block","src":"6089:76:21","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6111:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3971,"name":"address","nodeType":"ElementaryTypeName","src":"6111:7:21","typeDescriptions":{}}},"id":3974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6111:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3975,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"6123:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3754_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6136:17:21","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3752,"src":"6123:30:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"}}],"id":3977,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6110:44:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3754_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":3964,"id":3978,"nodeType":"Return","src":"6103:51:21"}]}},{"assignments":[3982],"declarations":[{"constant":false,"id":3982,"mutability":"mutable","name":"signer","nameLocation":"6267:6:21","nodeType":"VariableDeclaration","scope":4011,"src":"6259:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3981,"name":"address","nodeType":"ElementaryTypeName","src":"6259:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3989,"initialValue":{"arguments":[{"id":3984,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"6286:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3985,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"6292:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3986,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"6295:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3987,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"6298:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3983,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6276:9:21","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6276:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6259:41:21"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3990,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"6314:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6332:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6324:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3991,"name":"address","nodeType":"ElementaryTypeName","src":"6324:7:21","typeDescriptions":{}}},"id":3994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6324:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6314:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4005,"nodeType":"IfStatement","src":"6310:101:21","trueBody":{"id":4004,"nodeType":"Block","src":"6336:75:21","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6366:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6358:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3996,"name":"address","nodeType":"ElementaryTypeName","src":"6358:7:21","typeDescriptions":{}}},"id":3999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6358:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4000,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"6370:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3754_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6383:16:21","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3750,"src":"6370:29:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"}}],"id":4002,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6357:43:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3754_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":3964,"id":4003,"nodeType":"Return","src":"6350:50:21"}]}},{"expression":{"components":[{"id":4006,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"6429:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4007,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"6437:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3754_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6450:7:21","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3749,"src":"6437:20:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"}}],"id":4009,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6428:30:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3754_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":3964,"id":4010,"nodeType":"Return","src":"6421:37:21"}]},"documentation":{"id":3949,"nodeType":"StructuredDocumentation","src":"4841:163:21","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":4012,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5018:10:21","nodeType":"FunctionDefinition","parameters":{"id":3958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3951,"mutability":"mutable","name":"hash","nameLocation":"5037:4:21","nodeType":"VariableDeclaration","scope":4012,"src":"5029:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3950,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5029:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3953,"mutability":"mutable","name":"v","nameLocation":"5049:1:21","nodeType":"VariableDeclaration","scope":4012,"src":"5043:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3952,"name":"uint8","nodeType":"ElementaryTypeName","src":"5043:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3955,"mutability":"mutable","name":"r","nameLocation":"5060:1:21","nodeType":"VariableDeclaration","scope":4012,"src":"5052:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3954,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5052:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3957,"mutability":"mutable","name":"s","nameLocation":"5071:1:21","nodeType":"VariableDeclaration","scope":4012,"src":"5063:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5063:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5028:45:21"},"returnParameters":{"id":3964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4012,"src":"5097:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3959,"name":"address","nodeType":"ElementaryTypeName","src":"5097:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4012,"src":"5106:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3962,"nodeType":"UserDefinedTypeName","pathNode":{"id":3961,"name":"RecoverError","nameLocations":["5106:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":3754,"src":"5106:12:21"},"referencedDeclaration":3754,"src":"5106:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5096:23:21"},"scope":4110,"src":"5009:1456:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4044,"nodeType":"Block","src":"6692:138:21","statements":[{"assignments":[4027,4030],"declarations":[{"constant":false,"id":4027,"mutability":"mutable","name":"recovered","nameLocation":"6711:9:21","nodeType":"VariableDeclaration","scope":4044,"src":"6703:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4026,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4030,"mutability":"mutable","name":"error","nameLocation":"6735:5:21","nodeType":"VariableDeclaration","scope":4044,"src":"6722:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4029,"nodeType":"UserDefinedTypeName","pathNode":{"id":4028,"name":"RecoverError","nameLocations":["6722:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":3754,"src":"6722:12:21"},"referencedDeclaration":3754,"src":"6722:12:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":4037,"initialValue":{"arguments":[{"id":4032,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"6755:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4033,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"6761:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4034,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"6764:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4035,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"6767:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4031,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3844,3918,4012],"referencedDeclaration":4012,"src":"6744:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3754_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6744:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3754_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6702:67:21"},{"expression":{"arguments":[{"id":4039,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"6791:5:21","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"}],"id":4038,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"6779:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3754_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6779:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4041,"nodeType":"ExpressionStatement","src":"6779:18:21"},{"expression":{"id":4042,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"6814:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4025,"id":4043,"nodeType":"Return","src":"6807:16:21"}]},"documentation":{"id":4013,"nodeType":"StructuredDocumentation","src":"6471:122:21","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4045,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6607:7:21","nodeType":"FunctionDefinition","parameters":{"id":4022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4015,"mutability":"mutable","name":"hash","nameLocation":"6623:4:21","nodeType":"VariableDeclaration","scope":4045,"src":"6615:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4014,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6615:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4017,"mutability":"mutable","name":"v","nameLocation":"6635:1:21","nodeType":"VariableDeclaration","scope":4045,"src":"6629:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4016,"name":"uint8","nodeType":"ElementaryTypeName","src":"6629:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4019,"mutability":"mutable","name":"r","nameLocation":"6646:1:21","nodeType":"VariableDeclaration","scope":4045,"src":"6638:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4018,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6638:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4021,"mutability":"mutable","name":"s","nameLocation":"6657:1:21","nodeType":"VariableDeclaration","scope":4045,"src":"6649:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4020,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6649:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6614:45:21"},"returnParameters":{"id":4025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4045,"src":"6683:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4023,"name":"address","nodeType":"ElementaryTypeName","src":"6683:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6682:9:21"},"scope":4110,"src":"6598:232:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4054,"nodeType":"Block","src":"7206:310:21","statements":[{"AST":{"nativeSrc":"7362:148:21","nodeType":"YulBlock","src":"7362:148:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7383:4:21","nodeType":"YulLiteral","src":"7383:4:21","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"7389:34:21","nodeType":"YulLiteral","src":"7389:34:21","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"7376:6:21","nodeType":"YulIdentifier","src":"7376:6:21"},"nativeSrc":"7376:48:21","nodeType":"YulFunctionCall","src":"7376:48:21"},"nativeSrc":"7376:48:21","nodeType":"YulExpressionStatement","src":"7376:48:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7444:4:21","nodeType":"YulLiteral","src":"7444:4:21","type":"","value":"0x1c"},{"name":"hash","nativeSrc":"7450:4:21","nodeType":"YulIdentifier","src":"7450:4:21"}],"functionName":{"name":"mstore","nativeSrc":"7437:6:21","nodeType":"YulIdentifier","src":"7437:6:21"},"nativeSrc":"7437:18:21","nodeType":"YulFunctionCall","src":"7437:18:21"},"nativeSrc":"7437:18:21","nodeType":"YulExpressionStatement","src":"7437:18:21"},{"nativeSrc":"7468:32:21","nodeType":"YulAssignment","src":"7468:32:21","value":{"arguments":[{"kind":"number","nativeSrc":"7489:4:21","nodeType":"YulLiteral","src":"7489:4:21","type":"","value":"0x00"},{"kind":"number","nativeSrc":"7495:4:21","nodeType":"YulLiteral","src":"7495:4:21","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"7479:9:21","nodeType":"YulIdentifier","src":"7479:9:21"},"nativeSrc":"7479:21:21","nodeType":"YulFunctionCall","src":"7479:21:21"},"variableNames":[{"name":"message","nativeSrc":"7468:7:21","nodeType":"YulIdentifier","src":"7468:7:21"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":4048,"isOffset":false,"isSlot":false,"src":"7450:4:21","valueSize":1},{"declaration":4051,"isOffset":false,"isSlot":false,"src":"7468:7:21","valueSize":1}],"id":4053,"nodeType":"InlineAssembly","src":"7353:157:21"}]},"documentation":{"id":4046,"nodeType":"StructuredDocumentation","src":"6836:279:21","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":4055,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7129:22:21","nodeType":"FunctionDefinition","parameters":{"id":4049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4048,"mutability":"mutable","name":"hash","nameLocation":"7160:4:21","nodeType":"VariableDeclaration","scope":4055,"src":"7152:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4047,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7152:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7151:14:21"},"returnParameters":{"id":4052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4051,"mutability":"mutable","name":"message","nameLocation":"7197:7:21","nodeType":"VariableDeclaration","scope":4055,"src":"7189:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4050,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7189:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7188:17:21"},"scope":4110,"src":"7120:396:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4076,"nodeType":"Block","src":"7881:116:21","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":4066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7925:32:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":4069,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"7976:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7978:6:21","memberName":"length","nodeType":"MemberAccess","src":"7976:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4067,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"7959:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3744_$","typeString":"type(library Strings)"}},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7967:8:21","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3574,"src":"7959:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7959:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4072,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"7987:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4064,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7908:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7912:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"7908:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:81:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4063,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7898:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7898:92:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4062,"id":4075,"nodeType":"Return","src":"7891:99:21"}]},"documentation":{"id":4056,"nodeType":"StructuredDocumentation","src":"7522:274:21","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":4077,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7810:22:21","nodeType":"FunctionDefinition","parameters":{"id":4059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4058,"mutability":"mutable","name":"s","nameLocation":"7846:1:21","nodeType":"VariableDeclaration","scope":4077,"src":"7833:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4057,"name":"bytes","nodeType":"ElementaryTypeName","src":"7833:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7832:16:21"},"returnParameters":{"id":4062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4077,"src":"7872:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4060,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7872:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7871:9:21"},"scope":4110,"src":"7801:196:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4088,"nodeType":"Block","src":"8443:290:21","statements":[{"AST":{"nativeSrc":"8505:222:21","nodeType":"YulBlock","src":"8505:222:21","statements":[{"nativeSrc":"8519:22:21","nodeType":"YulVariableDeclaration","src":"8519:22:21","value":{"arguments":[{"kind":"number","nativeSrc":"8536:4:21","nodeType":"YulLiteral","src":"8536:4:21","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"8530:5:21","nodeType":"YulIdentifier","src":"8530:5:21"},"nativeSrc":"8530:11:21","nodeType":"YulFunctionCall","src":"8530:11:21"},"variables":[{"name":"ptr","nativeSrc":"8523:3:21","nodeType":"YulTypedName","src":"8523:3:21","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8561:3:21","nodeType":"YulIdentifier","src":"8561:3:21"},{"hexValue":"1901","kind":"string","nativeSrc":"8566:10:21","nodeType":"YulLiteral","src":"8566:10:21","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"8554:6:21","nodeType":"YulIdentifier","src":"8554:6:21"},"nativeSrc":"8554:23:21","nodeType":"YulFunctionCall","src":"8554:23:21"},"nativeSrc":"8554:23:21","nodeType":"YulExpressionStatement","src":"8554:23:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"8601:3:21","nodeType":"YulIdentifier","src":"8601:3:21"},{"kind":"number","nativeSrc":"8606:4:21","nodeType":"YulLiteral","src":"8606:4:21","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"8597:3:21","nodeType":"YulIdentifier","src":"8597:3:21"},"nativeSrc":"8597:14:21","nodeType":"YulFunctionCall","src":"8597:14:21"},{"name":"domainSeparator","nativeSrc":"8613:15:21","nodeType":"YulIdentifier","src":"8613:15:21"}],"functionName":{"name":"mstore","nativeSrc":"8590:6:21","nodeType":"YulIdentifier","src":"8590:6:21"},"nativeSrc":"8590:39:21","nodeType":"YulFunctionCall","src":"8590:39:21"},"nativeSrc":"8590:39:21","nodeType":"YulExpressionStatement","src":"8590:39:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"8653:3:21","nodeType":"YulIdentifier","src":"8653:3:21"},{"kind":"number","nativeSrc":"8658:4:21","nodeType":"YulLiteral","src":"8658:4:21","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"8649:3:21","nodeType":"YulIdentifier","src":"8649:3:21"},"nativeSrc":"8649:14:21","nodeType":"YulFunctionCall","src":"8649:14:21"},{"name":"structHash","nativeSrc":"8665:10:21","nodeType":"YulIdentifier","src":"8665:10:21"}],"functionName":{"name":"mstore","nativeSrc":"8642:6:21","nodeType":"YulIdentifier","src":"8642:6:21"},"nativeSrc":"8642:34:21","nodeType":"YulFunctionCall","src":"8642:34:21"},"nativeSrc":"8642:34:21","nodeType":"YulExpressionStatement","src":"8642:34:21"},{"nativeSrc":"8689:28:21","nodeType":"YulAssignment","src":"8689:28:21","value":{"arguments":[{"name":"ptr","nativeSrc":"8707:3:21","nodeType":"YulIdentifier","src":"8707:3:21"},{"kind":"number","nativeSrc":"8712:4:21","nodeType":"YulLiteral","src":"8712:4:21","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"8697:9:21","nodeType":"YulIdentifier","src":"8697:9:21"},"nativeSrc":"8697:20:21","nodeType":"YulFunctionCall","src":"8697:20:21"},"variableNames":[{"name":"data","nativeSrc":"8689:4:21","nodeType":"YulIdentifier","src":"8689:4:21"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":4085,"isOffset":false,"isSlot":false,"src":"8689:4:21","valueSize":1},{"declaration":4080,"isOffset":false,"isSlot":false,"src":"8613:15:21","valueSize":1},{"declaration":4082,"isOffset":false,"isSlot":false,"src":"8665:10:21","valueSize":1}],"id":4087,"nodeType":"InlineAssembly","src":"8496:231:21"}]},"documentation":{"id":4078,"nodeType":"StructuredDocumentation","src":"8003:328:21","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":4089,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8345:15:21","nodeType":"FunctionDefinition","parameters":{"id":4083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4080,"mutability":"mutable","name":"domainSeparator","nameLocation":"8369:15:21","nodeType":"VariableDeclaration","scope":4089,"src":"8361:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4079,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8361:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4082,"mutability":"mutable","name":"structHash","nameLocation":"8394:10:21","nodeType":"VariableDeclaration","scope":4089,"src":"8386:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4081,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8386:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8360:45:21"},"returnParameters":{"id":4086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4085,"mutability":"mutable","name":"data","nameLocation":"8437:4:21","nodeType":"VariableDeclaration","scope":4089,"src":"8429:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4084,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8429:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8428:14:21"},"scope":4110,"src":"8336:397:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4108,"nodeType":"Block","src":"9048:80:21","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":4102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9092:10:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":4103,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"9104:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4104,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"9115:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4100,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9075:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9079:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"9075:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9075:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4099,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9065:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9065:56:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4098,"id":4107,"nodeType":"Return","src":"9058:63:21"}]},"documentation":{"id":4090,"nodeType":"StructuredDocumentation","src":"8739:193:21","text":" @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."},"id":4109,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"8946:31:21","nodeType":"FunctionDefinition","parameters":{"id":4095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4092,"mutability":"mutable","name":"validator","nameLocation":"8986:9:21","nodeType":"VariableDeclaration","scope":4109,"src":"8978:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4091,"name":"address","nodeType":"ElementaryTypeName","src":"8978:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4094,"mutability":"mutable","name":"data","nameLocation":"9010:4:21","nodeType":"VariableDeclaration","scope":4109,"src":"8997:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4093,"name":"bytes","nodeType":"ElementaryTypeName","src":"8997:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8977:38:21"},"returnParameters":{"id":4098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4109,"src":"9039:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4096,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9039:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9038:9:21"},"scope":4110,"src":"8937:191:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4111,"src":"369:8761:21","usedErrors":[],"usedEvents":[]}],"src":"112:9019:21"},"id":21},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"MerkleProof":[4638]},"id":4639,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4112,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:22"},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":4113,"nodeType":"StructuredDocumentation","src":"143:658:22","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates merkle trees that are safe\n against this attack out of the box."},"fullyImplemented":true,"id":4638,"linearizedBaseContracts":[4638],"name":"MerkleProof","nameLocation":"810:11:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":4133,"nodeType":"Block","src":"1253:57:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4127,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"1283:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":4128,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"1290:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4126,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"1270:12:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1270:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4130,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"1299:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1270:33:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4125,"id":4132,"nodeType":"Return","src":"1263:40:22"}]},"documentation":{"id":4114,"nodeType":"StructuredDocumentation","src":"828:323:22","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."},"id":4134,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1165:6:22","nodeType":"FunctionDefinition","parameters":{"id":4122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4117,"mutability":"mutable","name":"proof","nameLocation":"1189:5:22","nodeType":"VariableDeclaration","scope":4134,"src":"1172:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4115,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1172:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4116,"nodeType":"ArrayTypeName","src":"1172:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4119,"mutability":"mutable","name":"root","nameLocation":"1204:4:22","nodeType":"VariableDeclaration","scope":4134,"src":"1196:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1196:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4121,"mutability":"mutable","name":"leaf","nameLocation":"1218:4:22","nodeType":"VariableDeclaration","scope":4134,"src":"1210:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1210:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1171:52:22"},"returnParameters":{"id":4125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4134,"src":"1247:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4123,"name":"bool","nodeType":"ElementaryTypeName","src":"1247:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1246:6:22"},"scope":4638,"src":"1156:154:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4154,"nodeType":"Block","src":"1518:65:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4148,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"1556:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":4149,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"1563:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4147,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"1535:20:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1535:33:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4151,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"1572:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1535:41:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4146,"id":4153,"nodeType":"Return","src":"1528:48:22"}]},"documentation":{"id":4135,"nodeType":"StructuredDocumentation","src":"1316:90:22","text":" @dev Calldata version of {verify}\n _Available since v4.7._"},"id":4155,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"1420:14:22","nodeType":"FunctionDefinition","parameters":{"id":4143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4138,"mutability":"mutable","name":"proof","nameLocation":"1454:5:22","nodeType":"VariableDeclaration","scope":4155,"src":"1435:24:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4136,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1435:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4137,"nodeType":"ArrayTypeName","src":"1435:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4140,"mutability":"mutable","name":"root","nameLocation":"1469:4:22","nodeType":"VariableDeclaration","scope":4155,"src":"1461:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1461:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4142,"mutability":"mutable","name":"leaf","nameLocation":"1483:4:22","nodeType":"VariableDeclaration","scope":4155,"src":"1475:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1475:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1434:54:22"},"returnParameters":{"id":4146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4155,"src":"1512:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4144,"name":"bool","nodeType":"ElementaryTypeName","src":"1512:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1511:6:22"},"scope":4638,"src":"1411:172:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4194,"nodeType":"Block","src":"2026:198:22","statements":[{"assignments":[4167],"declarations":[{"constant":false,"id":4167,"mutability":"mutable","name":"computedHash","nameLocation":"2044:12:22","nodeType":"VariableDeclaration","scope":4194,"src":"2036:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2036:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4169,"initialValue":{"id":4168,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"2059:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2036:27:22"},{"body":{"id":4190,"nodeType":"Block","src":"2116:73:22","statements":[{"expression":{"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4181,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"2130:12:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4183,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"2155:12:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":4184,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"2169:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4186,"indexExpression":{"id":4185,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"2175:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2169:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4182,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"2145:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:33:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2130:48:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4189,"nodeType":"ExpressionStatement","src":"2130:48:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4174,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"2093:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4175,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"2097:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2103:6:22","memberName":"length","nodeType":"MemberAccess","src":"2097:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2093:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4191,"initializationExpression":{"assignments":[4171],"declarations":[{"constant":false,"id":4171,"mutability":"mutable","name":"i","nameLocation":"2086:1:22","nodeType":"VariableDeclaration","scope":4191,"src":"2078:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4170,"name":"uint256","nodeType":"ElementaryTypeName","src":"2078:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4173,"initialValue":{"hexValue":"30","id":4172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2090:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2078:13:22"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2111:3:22","subExpression":{"id":4178,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"2111:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4180,"nodeType":"ExpressionStatement","src":"2111:3:22"},"nodeType":"ForStatement","src":"2073:116:22"},{"expression":{"id":4192,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"2205:12:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4165,"id":4193,"nodeType":"Return","src":"2198:19:22"}]},"documentation":{"id":4156,"nodeType":"StructuredDocumentation","src":"1589:340:22","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leafs & pre-images are assumed to be sorted.\n _Available since v4.4._"},"id":4195,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"1943:12:22","nodeType":"FunctionDefinition","parameters":{"id":4162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4159,"mutability":"mutable","name":"proof","nameLocation":"1973:5:22","nodeType":"VariableDeclaration","scope":4195,"src":"1956:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4157,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1956:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4158,"nodeType":"ArrayTypeName","src":"1956:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4161,"mutability":"mutable","name":"leaf","nameLocation":"1988:4:22","nodeType":"VariableDeclaration","scope":4195,"src":"1980:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1980:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1955:38:22"},"returnParameters":{"id":4165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4195,"src":"2017:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2017:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2016:9:22"},"scope":4638,"src":"1934:290:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4234,"nodeType":"Block","src":"2433:198:22","statements":[{"assignments":[4207],"declarations":[{"constant":false,"id":4207,"mutability":"mutable","name":"computedHash","nameLocation":"2451:12:22","nodeType":"VariableDeclaration","scope":4234,"src":"2443:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4209,"initialValue":{"id":4208,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"2466:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2443:27:22"},{"body":{"id":4230,"nodeType":"Block","src":"2523:73:22","statements":[{"expression":{"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4221,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"2537:12:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4223,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"2562:12:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":4224,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"2576:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4226,"indexExpression":{"id":4225,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"2582:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2576:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4222,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"2552:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2552:33:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2537:48:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4229,"nodeType":"ExpressionStatement","src":"2537:48:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4214,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"2500:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4215,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"2504:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2510:6:22","memberName":"length","nodeType":"MemberAccess","src":"2504:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2500:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4231,"initializationExpression":{"assignments":[4211],"declarations":[{"constant":false,"id":4211,"mutability":"mutable","name":"i","nameLocation":"2493:1:22","nodeType":"VariableDeclaration","scope":4231,"src":"2485:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4210,"name":"uint256","nodeType":"ElementaryTypeName","src":"2485:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4213,"initialValue":{"hexValue":"30","id":4212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2497:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2485:13:22"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2518:3:22","subExpression":{"id":4218,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"2518:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4220,"nodeType":"ExpressionStatement","src":"2518:3:22"},"nodeType":"ForStatement","src":"2480:116:22"},{"expression":{"id":4232,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"2612:12:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4205,"id":4233,"nodeType":"Return","src":"2605:19:22"}]},"documentation":{"id":4196,"nodeType":"StructuredDocumentation","src":"2230:96:22","text":" @dev Calldata version of {processProof}\n _Available since v4.7._"},"id":4235,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"2340:20:22","nodeType":"FunctionDefinition","parameters":{"id":4202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4199,"mutability":"mutable","name":"proof","nameLocation":"2380:5:22","nodeType":"VariableDeclaration","scope":4235,"src":"2361:24:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2361:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4198,"nodeType":"ArrayTypeName","src":"2361:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4201,"mutability":"mutable","name":"leaf","nameLocation":"2395:4:22","nodeType":"VariableDeclaration","scope":4235,"src":"2387:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2387:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2360:40:22"},"returnParameters":{"id":4205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4235,"src":"2424:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4203,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2424:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2423:9:22"},"scope":4638,"src":"2331:300:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4260,"nodeType":"Block","src":"3174:76:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4253,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"3209:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":4254,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"3216:10:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":4255,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"3228:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":4252,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"3191:17:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3191:44:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4257,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"3239:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3191:52:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4251,"id":4259,"nodeType":"Return","src":"3184:59:22"}]},"documentation":{"id":4236,"nodeType":"StructuredDocumentation","src":"2637:350:22","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":4261,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"3001:16:22","nodeType":"FunctionDefinition","parameters":{"id":4248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4239,"mutability":"mutable","name":"proof","nameLocation":"3044:5:22","nodeType":"VariableDeclaration","scope":4261,"src":"3027:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3027:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4238,"nodeType":"ArrayTypeName","src":"3027:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4242,"mutability":"mutable","name":"proofFlags","nameLocation":"3073:10:22","nodeType":"VariableDeclaration","scope":4261,"src":"3059:24:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4240,"name":"bool","nodeType":"ElementaryTypeName","src":"3059:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4241,"nodeType":"ArrayTypeName","src":"3059:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4244,"mutability":"mutable","name":"root","nameLocation":"3101:4:22","nodeType":"VariableDeclaration","scope":4261,"src":"3093:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4243,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3093:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4247,"mutability":"mutable","name":"leaves","nameLocation":"3132:6:22","nodeType":"VariableDeclaration","scope":4261,"src":"3115:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3115:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4246,"nodeType":"ArrayTypeName","src":"3115:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3017:127:22"},"returnParameters":{"id":4251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4261,"src":"3168:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4249,"name":"bool","nodeType":"ElementaryTypeName","src":"3168:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3167:6:22"},"scope":4638,"src":"2992:258:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4286,"nodeType":"Block","src":"3655:84:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4279,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"3698:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":4280,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"3705:10:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":4281,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"3717:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":4278,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"3672:25:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3672:52:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4283,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"3728:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3672:60:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4277,"id":4285,"nodeType":"Return","src":"3665:67:22"}]},"documentation":{"id":4262,"nodeType":"StructuredDocumentation","src":"3256:200:22","text":" @dev Calldata version of {multiProofVerify}\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":4287,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"3470:24:22","nodeType":"FunctionDefinition","parameters":{"id":4274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4265,"mutability":"mutable","name":"proof","nameLocation":"3523:5:22","nodeType":"VariableDeclaration","scope":4287,"src":"3504:24:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4263,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3504:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4264,"nodeType":"ArrayTypeName","src":"3504:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4268,"mutability":"mutable","name":"proofFlags","nameLocation":"3554:10:22","nodeType":"VariableDeclaration","scope":4287,"src":"3538:26:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4266,"name":"bool","nodeType":"ElementaryTypeName","src":"3538:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4267,"nodeType":"ArrayTypeName","src":"3538:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4270,"mutability":"mutable","name":"root","nameLocation":"3582:4:22","nodeType":"VariableDeclaration","scope":4287,"src":"3574:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4269,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3574:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4273,"mutability":"mutable","name":"leaves","nameLocation":"3613:6:22","nodeType":"VariableDeclaration","scope":4287,"src":"3596:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4271,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3596:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4272,"nodeType":"ArrayTypeName","src":"3596:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3494:131:22"},"returnParameters":{"id":4277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4287,"src":"3649:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4275,"name":"bool","nodeType":"ElementaryTypeName","src":"3649:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3648:6:22"},"scope":4638,"src":"3461:278:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4444,"nodeType":"Block","src":"4693:2053:22","statements":[{"assignments":[4303],"declarations":[{"constant":false,"id":4303,"mutability":"mutable","name":"leavesLen","nameLocation":"5085:9:22","nodeType":"VariableDeclaration","scope":4444,"src":"5077:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4302,"name":"uint256","nodeType":"ElementaryTypeName","src":"5077:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4306,"initialValue":{"expression":{"id":4304,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"5097:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5104:6:22","memberName":"length","nodeType":"MemberAccess","src":"5097:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5077:33:22"},{"assignments":[4308],"declarations":[{"constant":false,"id":4308,"mutability":"mutable","name":"proofLen","nameLocation":"5128:8:22","nodeType":"VariableDeclaration","scope":4444,"src":"5120:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4307,"name":"uint256","nodeType":"ElementaryTypeName","src":"5120:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4311,"initialValue":{"expression":{"id":4309,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"5139:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5145:6:22","memberName":"length","nodeType":"MemberAccess","src":"5139:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5120:31:22"},{"assignments":[4313],"declarations":[{"constant":false,"id":4313,"mutability":"mutable","name":"totalHashes","nameLocation":"5169:11:22","nodeType":"VariableDeclaration","scope":4444,"src":"5161:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4312,"name":"uint256","nodeType":"ElementaryTypeName","src":"5161:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4316,"initialValue":{"expression":{"id":4314,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"5183:10:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5194:6:22","memberName":"length","nodeType":"MemberAccess","src":"5183:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5161:39:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4318,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"5252:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4319,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"5264:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5252:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5275:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5252:24:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4323,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"5280:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5252:39:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":4325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5293:33:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":4317,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5244:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5244:83:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4327,"nodeType":"ExpressionStatement","src":"5244:83:22"},{"assignments":[4332],"declarations":[{"constant":false,"id":4332,"mutability":"mutable","name":"hashes","nameLocation":"5589:6:22","nodeType":"VariableDeclaration","scope":4444,"src":"5572:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4330,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5572:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4331,"nodeType":"ArrayTypeName","src":"5572:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4338,"initialValue":{"arguments":[{"id":4336,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"5612:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5598:13:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":4333,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5602:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4334,"nodeType":"ArrayTypeName","src":"5602:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5598:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5572:52:22"},{"assignments":[4340],"declarations":[{"constant":false,"id":4340,"mutability":"mutable","name":"leafPos","nameLocation":"5642:7:22","nodeType":"VariableDeclaration","scope":4444,"src":"5634:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4339,"name":"uint256","nodeType":"ElementaryTypeName","src":"5634:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4342,"initialValue":{"hexValue":"30","id":4341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5634:19:22"},{"assignments":[4344],"declarations":[{"constant":false,"id":4344,"mutability":"mutable","name":"hashPos","nameLocation":"5671:7:22","nodeType":"VariableDeclaration","scope":4444,"src":"5663:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4343,"name":"uint256","nodeType":"ElementaryTypeName","src":"5663:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4346,"initialValue":{"hexValue":"30","id":4345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5681:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5663:19:22"},{"assignments":[4348],"declarations":[{"constant":false,"id":4348,"mutability":"mutable","name":"proofPos","nameLocation":"5700:8:22","nodeType":"VariableDeclaration","scope":4444,"src":"5692:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4347,"name":"uint256","nodeType":"ElementaryTypeName","src":"5692:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4350,"initialValue":{"hexValue":"30","id":4349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5711:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5692:20:22"},{"body":{"id":4409,"nodeType":"Block","src":"6130:292:22","statements":[{"assignments":[4362],"declarations":[{"constant":false,"id":4362,"mutability":"mutable","name":"a","nameLocation":"6152:1:22","nodeType":"VariableDeclaration","scope":4409,"src":"6144:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4361,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6144:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4375,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4363,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"6156:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4364,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"6166:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6156:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4370,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"6198:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4373,"indexExpression":{"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6205:9:22","subExpression":{"id":4371,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"6205:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6198:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6156:59:22","trueExpression":{"baseExpression":{"id":4366,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"6178:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4369,"indexExpression":{"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6185:9:22","subExpression":{"id":4367,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"6185:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6178:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6144:71:22"},{"assignments":[4377],"declarations":[{"constant":false,"id":4377,"mutability":"mutable","name":"b","nameLocation":"6237:1:22","nodeType":"VariableDeclaration","scope":4409,"src":"6229:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4376,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6229:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4399,"initialValue":{"condition":{"baseExpression":{"id":4378,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"6241:10:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":4380,"indexExpression":{"id":4379,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"6252:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6241:13:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4394,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"6353:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4397,"indexExpression":{"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6359:10:22","subExpression":{"id":4395,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4348,"src":"6359:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6353:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6241:129:22","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4381,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"6274:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4382,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"6284:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6274:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4388,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"6316:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4391,"indexExpression":{"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6323:9:22","subExpression":{"id":4389,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"6323:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6316:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6274:59:22","trueExpression":{"baseExpression":{"id":4384,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"6296:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4387,"indexExpression":{"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6303:9:22","subExpression":{"id":4385,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"6303:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6296:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4393,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6273:61:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6229:141:22"},{"expression":{"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4400,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"6384:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4402,"indexExpression":{"id":4401,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"6391:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6384:9:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4404,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"6406:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4405,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"6409:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4403,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"6396:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6396:15:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6384:27:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4408,"nodeType":"ExpressionStatement","src":"6384:27:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4355,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"6108:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4356,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"6112:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6108:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4410,"initializationExpression":{"assignments":[4352],"declarations":[{"constant":false,"id":4352,"mutability":"mutable","name":"i","nameLocation":"6101:1:22","nodeType":"VariableDeclaration","scope":4410,"src":"6093:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4351,"name":"uint256","nodeType":"ElementaryTypeName","src":"6093:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4354,"initialValue":{"hexValue":"30","id":4353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6105:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6093:13:22"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6125:3:22","subExpression":{"id":4358,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"6125:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4360,"nodeType":"ExpressionStatement","src":"6125:3:22"},"nodeType":"ForStatement","src":"6088:334:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4411,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"6436:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6450:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6436:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4429,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"6638:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6650:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6638:13:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4441,"nodeType":"Block","src":"6700:40:22","statements":[{"expression":{"baseExpression":{"id":4437,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"6721:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4439,"indexExpression":{"hexValue":"30","id":4438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6727:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6721:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4301,"id":4440,"nodeType":"Return","src":"6714:15:22"}]},"id":4442,"nodeType":"IfStatement","src":"6634:106:22","trueBody":{"id":4436,"nodeType":"Block","src":"6653:41:22","statements":[{"expression":{"baseExpression":{"id":4432,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"6674:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4434,"indexExpression":{"hexValue":"30","id":4433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6674:9:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4301,"id":4435,"nodeType":"Return","src":"6667:16:22"}]}},"id":4443,"nodeType":"IfStatement","src":"6432:308:22","trueBody":{"id":4428,"nodeType":"Block","src":"6453:175:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4415,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4348,"src":"6475:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4416,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"6487:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6475:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":4418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6497:33:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":4414,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6467:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6467:64:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4420,"nodeType":"ExpressionStatement","src":"6467:64:22"},{"id":4427,"nodeType":"UncheckedBlock","src":"6545:73:22","statements":[{"expression":{"baseExpression":{"id":4421,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"6580:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4425,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4422,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"6587:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6601:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6587:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6580:23:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4301,"id":4426,"nodeType":"Return","src":"6573:30:22"}]}]}}]},"documentation":{"id":4288,"nodeType":"StructuredDocumentation","src":"3745:768:22","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n CAUTION: Not all merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n _Available since v4.7._"},"id":4445,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"4527:17:22","nodeType":"FunctionDefinition","parameters":{"id":4298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4291,"mutability":"mutable","name":"proof","nameLocation":"4571:5:22","nodeType":"VariableDeclaration","scope":4445,"src":"4554:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4289,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4554:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4290,"nodeType":"ArrayTypeName","src":"4554:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4294,"mutability":"mutable","name":"proofFlags","nameLocation":"4600:10:22","nodeType":"VariableDeclaration","scope":4445,"src":"4586:24:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4292,"name":"bool","nodeType":"ElementaryTypeName","src":"4586:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4293,"nodeType":"ArrayTypeName","src":"4586:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4297,"mutability":"mutable","name":"leaves","nameLocation":"4637:6:22","nodeType":"VariableDeclaration","scope":4445,"src":"4620:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4620:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4296,"nodeType":"ArrayTypeName","src":"4620:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4544:105:22"},"returnParameters":{"id":4301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4300,"mutability":"mutable","name":"merkleRoot","nameLocation":"4681:10:22","nodeType":"VariableDeclaration","scope":4445,"src":"4673:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4299,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4673:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4672:20:22"},"scope":4638,"src":"4518:2228:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4602,"nodeType":"Block","src":"7146:2053:22","statements":[{"assignments":[4461],"declarations":[{"constant":false,"id":4461,"mutability":"mutable","name":"leavesLen","nameLocation":"7538:9:22","nodeType":"VariableDeclaration","scope":4602,"src":"7530:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4460,"name":"uint256","nodeType":"ElementaryTypeName","src":"7530:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4464,"initialValue":{"expression":{"id":4462,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"7550:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7557:6:22","memberName":"length","nodeType":"MemberAccess","src":"7550:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7530:33:22"},{"assignments":[4466],"declarations":[{"constant":false,"id":4466,"mutability":"mutable","name":"proofLen","nameLocation":"7581:8:22","nodeType":"VariableDeclaration","scope":4602,"src":"7573:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4465,"name":"uint256","nodeType":"ElementaryTypeName","src":"7573:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4469,"initialValue":{"expression":{"id":4467,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"7592:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7598:6:22","memberName":"length","nodeType":"MemberAccess","src":"7592:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7573:31:22"},{"assignments":[4471],"declarations":[{"constant":false,"id":4471,"mutability":"mutable","name":"totalHashes","nameLocation":"7622:11:22","nodeType":"VariableDeclaration","scope":4602,"src":"7614:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4470,"name":"uint256","nodeType":"ElementaryTypeName","src":"7614:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4474,"initialValue":{"expression":{"id":4472,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"7636:10:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7647:6:22","memberName":"length","nodeType":"MemberAccess","src":"7636:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7614:39:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4476,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"7705:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4477,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"7717:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7705:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7728:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7705:24:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4481,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"7733:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7705:39:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":4483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7746:33:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":4475,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7697:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7697:83:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4485,"nodeType":"ExpressionStatement","src":"7697:83:22"},{"assignments":[4490],"declarations":[{"constant":false,"id":4490,"mutability":"mutable","name":"hashes","nameLocation":"8042:6:22","nodeType":"VariableDeclaration","scope":4602,"src":"8025:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8025:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4489,"nodeType":"ArrayTypeName","src":"8025:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4496,"initialValue":{"arguments":[{"id":4494,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"8065:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8051:13:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":4491,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8055:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4492,"nodeType":"ArrayTypeName","src":"8055:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8051:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8025:52:22"},{"assignments":[4498],"declarations":[{"constant":false,"id":4498,"mutability":"mutable","name":"leafPos","nameLocation":"8095:7:22","nodeType":"VariableDeclaration","scope":4602,"src":"8087:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4497,"name":"uint256","nodeType":"ElementaryTypeName","src":"8087:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4500,"initialValue":{"hexValue":"30","id":4499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8105:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8087:19:22"},{"assignments":[4502],"declarations":[{"constant":false,"id":4502,"mutability":"mutable","name":"hashPos","nameLocation":"8124:7:22","nodeType":"VariableDeclaration","scope":4602,"src":"8116:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4501,"name":"uint256","nodeType":"ElementaryTypeName","src":"8116:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4504,"initialValue":{"hexValue":"30","id":4503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8134:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8116:19:22"},{"assignments":[4506],"declarations":[{"constant":false,"id":4506,"mutability":"mutable","name":"proofPos","nameLocation":"8153:8:22","nodeType":"VariableDeclaration","scope":4602,"src":"8145:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4505,"name":"uint256","nodeType":"ElementaryTypeName","src":"8145:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4508,"initialValue":{"hexValue":"30","id":4507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8164:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8145:20:22"},{"body":{"id":4567,"nodeType":"Block","src":"8583:292:22","statements":[{"assignments":[4520],"declarations":[{"constant":false,"id":4520,"mutability":"mutable","name":"a","nameLocation":"8605:1:22","nodeType":"VariableDeclaration","scope":4567,"src":"8597:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4519,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8597:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4533,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4521,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"8609:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4522,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"8619:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4528,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"8651:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4531,"indexExpression":{"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8658:9:22","subExpression":{"id":4529,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4502,"src":"8658:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8651:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8609:59:22","trueExpression":{"baseExpression":{"id":4524,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"8631:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4527,"indexExpression":{"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8638:9:22","subExpression":{"id":4525,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"8638:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8631:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8597:71:22"},{"assignments":[4535],"declarations":[{"constant":false,"id":4535,"mutability":"mutable","name":"b","nameLocation":"8690:1:22","nodeType":"VariableDeclaration","scope":4567,"src":"8682:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4534,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8682:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4557,"initialValue":{"condition":{"baseExpression":{"id":4536,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"8694:10:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":4538,"indexExpression":{"id":4537,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"8705:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8694:13:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4552,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"8806:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4555,"indexExpression":{"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8812:10:22","subExpression":{"id":4553,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4506,"src":"8812:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8806:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8694:129:22","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4539,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"8727:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4540,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"8737:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8727:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4546,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"8769:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4549,"indexExpression":{"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8776:9:22","subExpression":{"id":4547,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4502,"src":"8776:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8769:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8727:59:22","trueExpression":{"baseExpression":{"id":4542,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"8749:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4545,"indexExpression":{"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8756:9:22","subExpression":{"id":4543,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"8756:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8749:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8726:61:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8682:141:22"},{"expression":{"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4558,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"8837:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4560,"indexExpression":{"id":4559,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"8844:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8837:9:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4562,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"8859:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4563,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"8862:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4561,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"8849:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8849:15:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8837:27:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4566,"nodeType":"ExpressionStatement","src":"8837:27:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4513,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"8561:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4514,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"8565:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8561:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4568,"initializationExpression":{"assignments":[4510],"declarations":[{"constant":false,"id":4510,"mutability":"mutable","name":"i","nameLocation":"8554:1:22","nodeType":"VariableDeclaration","scope":4568,"src":"8546:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4509,"name":"uint256","nodeType":"ElementaryTypeName","src":"8546:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4512,"initialValue":{"hexValue":"30","id":4511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8558:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8546:13:22"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8578:3:22","subExpression":{"id":4516,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"8578:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4518,"nodeType":"ExpressionStatement","src":"8578:3:22"},"nodeType":"ForStatement","src":"8541:334:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4569,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"8889:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8903:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8889:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4587,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"9091:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9103:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9091:13:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4599,"nodeType":"Block","src":"9153:40:22","statements":[{"expression":{"baseExpression":{"id":4595,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"9174:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4597,"indexExpression":{"hexValue":"30","id":4596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9180:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9174:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4459,"id":4598,"nodeType":"Return","src":"9167:15:22"}]},"id":4600,"nodeType":"IfStatement","src":"9087:106:22","trueBody":{"id":4594,"nodeType":"Block","src":"9106:41:22","statements":[{"expression":{"baseExpression":{"id":4590,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"9127:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4592,"indexExpression":{"hexValue":"30","id":4591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9134:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9127:9:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4459,"id":4593,"nodeType":"Return","src":"9120:16:22"}]}},"id":4601,"nodeType":"IfStatement","src":"8885:308:22","trueBody":{"id":4586,"nodeType":"Block","src":"8906:175:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4573,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4506,"src":"8928:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4574,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"8940:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8928:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":4576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8950:33:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":4572,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8920:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8920:64:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4578,"nodeType":"ExpressionStatement","src":"8920:64:22"},{"id":4585,"nodeType":"UncheckedBlock","src":"8998:73:22","statements":[{"expression":{"baseExpression":{"id":4579,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"9033:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4583,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4580,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"9040:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9054:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9040:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9033:23:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4459,"id":4584,"nodeType":"Return","src":"9026:30:22"}]}]}}]},"documentation":{"id":4446,"nodeType":"StructuredDocumentation","src":"6752:202:22","text":" @dev Calldata version of {processMultiProof}.\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":4603,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"6968:25:22","nodeType":"FunctionDefinition","parameters":{"id":4456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4449,"mutability":"mutable","name":"proof","nameLocation":"7022:5:22","nodeType":"VariableDeclaration","scope":4603,"src":"7003:24:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4447,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7003:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4448,"nodeType":"ArrayTypeName","src":"7003:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4452,"mutability":"mutable","name":"proofFlags","nameLocation":"7053:10:22","nodeType":"VariableDeclaration","scope":4603,"src":"7037:26:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4450,"name":"bool","nodeType":"ElementaryTypeName","src":"7037:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4451,"nodeType":"ArrayTypeName","src":"7037:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4455,"mutability":"mutable","name":"leaves","nameLocation":"7090:6:22","nodeType":"VariableDeclaration","scope":4603,"src":"7073:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7073:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4454,"nodeType":"ArrayTypeName","src":"7073:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6993:109:22"},"returnParameters":{"id":4459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4458,"mutability":"mutable","name":"merkleRoot","nameLocation":"7134:10:22","nodeType":"VariableDeclaration","scope":4603,"src":"7126:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7126:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7125:20:22"},"scope":4638,"src":"6959:2240:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4625,"nodeType":"Block","src":"9277:75:22","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4612,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"9294:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4613,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"9298:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9294:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":4620,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"9340:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4621,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"9343:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4619,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"9325:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9325:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9294:51:22","trueExpression":{"arguments":[{"id":4616,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"9317:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4617,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"9320:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4615,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"9302:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9302:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4611,"id":4624,"nodeType":"Return","src":"9287:58:22"}]},"id":4626,"implemented":true,"kind":"function","modifiers":[],"name":"_hashPair","nameLocation":"9214:9:22","nodeType":"FunctionDefinition","parameters":{"id":4608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4605,"mutability":"mutable","name":"a","nameLocation":"9232:1:22","nodeType":"VariableDeclaration","scope":4626,"src":"9224:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4604,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9224:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4607,"mutability":"mutable","name":"b","nameLocation":"9243:1:22","nodeType":"VariableDeclaration","scope":4626,"src":"9235:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4606,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9235:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9223:22:22"},"returnParameters":{"id":4611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4626,"src":"9268:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4609,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9268:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9267:9:22"},"scope":4638,"src":"9205:147:22","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4636,"nodeType":"Block","src":"9441:178:22","statements":[{"AST":{"nativeSrc":"9503:110:22","nodeType":"YulBlock","src":"9503:110:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9524:4:22","nodeType":"YulLiteral","src":"9524:4:22","type":"","value":"0x00"},{"name":"a","nativeSrc":"9530:1:22","nodeType":"YulIdentifier","src":"9530:1:22"}],"functionName":{"name":"mstore","nativeSrc":"9517:6:22","nodeType":"YulIdentifier","src":"9517:6:22"},"nativeSrc":"9517:15:22","nodeType":"YulFunctionCall","src":"9517:15:22"},"nativeSrc":"9517:15:22","nodeType":"YulExpressionStatement","src":"9517:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9552:4:22","nodeType":"YulLiteral","src":"9552:4:22","type":"","value":"0x20"},{"name":"b","nativeSrc":"9558:1:22","nodeType":"YulIdentifier","src":"9558:1:22"}],"functionName":{"name":"mstore","nativeSrc":"9545:6:22","nodeType":"YulIdentifier","src":"9545:6:22"},"nativeSrc":"9545:15:22","nodeType":"YulFunctionCall","src":"9545:15:22"},"nativeSrc":"9545:15:22","nodeType":"YulExpressionStatement","src":"9545:15:22"},{"nativeSrc":"9573:30:22","nodeType":"YulAssignment","src":"9573:30:22","value":{"arguments":[{"kind":"number","nativeSrc":"9592:4:22","nodeType":"YulLiteral","src":"9592:4:22","type":"","value":"0x00"},{"kind":"number","nativeSrc":"9598:4:22","nodeType":"YulLiteral","src":"9598:4:22","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"9582:9:22","nodeType":"YulIdentifier","src":"9582:9:22"},"nativeSrc":"9582:21:22","nodeType":"YulFunctionCall","src":"9582:21:22"},"variableNames":[{"name":"value","nativeSrc":"9573:5:22","nodeType":"YulIdentifier","src":"9573:5:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":4628,"isOffset":false,"isSlot":false,"src":"9530:1:22","valueSize":1},{"declaration":4630,"isOffset":false,"isSlot":false,"src":"9558:1:22","valueSize":1},{"declaration":4633,"isOffset":false,"isSlot":false,"src":"9573:5:22","valueSize":1}],"id":4635,"nodeType":"InlineAssembly","src":"9494:119:22"}]},"id":4637,"implemented":true,"kind":"function","modifiers":[],"name":"_efficientHash","nameLocation":"9367:14:22","nodeType":"FunctionDefinition","parameters":{"id":4631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4628,"mutability":"mutable","name":"a","nameLocation":"9390:1:22","nodeType":"VariableDeclaration","scope":4637,"src":"9382:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4627,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9382:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4630,"mutability":"mutable","name":"b","nameLocation":"9401:1:22","nodeType":"VariableDeclaration","scope":4637,"src":"9393:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4629,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9393:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9381:22:22"},"returnParameters":{"id":4634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4633,"mutability":"mutable","name":"value","nameLocation":"9434:5:22","nodeType":"VariableDeclaration","scope":4637,"src":"9426:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4632,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9426:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9425:15:22"},"scope":4638,"src":"9358:261:22","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4639,"src":"802:8819:22","usedErrors":[],"usedEvents":[]}],"src":"118:9504:22"},"id":22},"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol","exportedSymbols":{"ECDSA":[4110],"IERC1271":[3437],"Math":[5603],"SignatureChecker":[4737],"SignedMath":[5708],"Strings":[3744]},"id":4738,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4640,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:23"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","id":4641,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4738,"sourceUnit":4111,"src":"148:21:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1271.sol","file":"../../interfaces/IERC1271.sol","id":4642,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4738,"sourceUnit":3438,"src":"170:39:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignatureChecker","contractDependencies":[],"contractKind":"library","documentation":{"id":4643,"nodeType":"StructuredDocumentation","src":"211:294:23","text":" @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\n signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like\n Argent and Gnosis Safe.\n _Available since v4.1._"},"fullyImplemented":true,"id":4737,"linearizedBaseContracts":[4737],"name":"SignatureChecker","nameLocation":"514:16:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":4683,"nodeType":"Block","src":"1126:254:23","statements":[{"assignments":[4656,4659],"declarations":[{"constant":false,"id":4656,"mutability":"mutable","name":"recovered","nameLocation":"1145:9:23","nodeType":"VariableDeclaration","scope":4683,"src":"1137:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4655,"name":"address","nodeType":"ElementaryTypeName","src":"1137:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4659,"mutability":"mutable","name":"error","nameLocation":"1175:5:23","nodeType":"VariableDeclaration","scope":4683,"src":"1156:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4658,"nodeType":"UserDefinedTypeName","pathNode":{"id":4657,"name":"ECDSA.RecoverError","nameLocations":["1156:5:23","1162:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":3754,"src":"1156:18:23"},"referencedDeclaration":3754,"src":"1156:18:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":4665,"initialValue":{"arguments":[{"id":4662,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"1201:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4663,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"1207:9:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4660,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"1184:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$4110_$","typeString":"type(library ECDSA)"}},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1190:10:23","memberName":"tryRecover","nodeType":"MemberAccess","referencedDeclaration":3844,"src":"1184:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3754_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1184:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3754_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"1136:81:23"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4666,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"1247:5:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4667,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"1256:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$4110_$","typeString":"type(library ECDSA)"}},"id":4668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1262:12:23","memberName":"RecoverError","nodeType":"MemberAccess","referencedDeclaration":3754,"src":"1256:18:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3754_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1275:7:23","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3749,"src":"1256:26:23","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3754","typeString":"enum ECDSA.RecoverError"}},"src":"1247:35:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4671,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4656,"src":"1286:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4672,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4646,"src":"1299:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1286:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1247:58:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4675,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1246:60:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":4677,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4646,"src":"1349:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4678,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"1357:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4679,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"1363:9:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4676,"name":"isValidERC1271SignatureNow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4736,"src":"1322:26:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,bytes32,bytes memory) view returns (bool)"}},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:51:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1246:127:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4654,"id":4682,"nodeType":"Return","src":"1227:146:23"}]},"documentation":{"id":4644,"nodeType":"StructuredDocumentation","src":"537:472:23","text":" @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\n signature is validated against that smart contract using ERC1271, otherwise it's validated using `ECDSA.recover`.\n NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n change through time. It could return true at block N and false at block N+1 (or the opposite)."},"id":4684,"implemented":true,"kind":"function","modifiers":[],"name":"isValidSignatureNow","nameLocation":"1023:19:23","nodeType":"FunctionDefinition","parameters":{"id":4651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4646,"mutability":"mutable","name":"signer","nameLocation":"1051:6:23","nodeType":"VariableDeclaration","scope":4684,"src":"1043:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4645,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4648,"mutability":"mutable","name":"hash","nameLocation":"1067:4:23","nodeType":"VariableDeclaration","scope":4684,"src":"1059:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4647,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1059:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4650,"mutability":"mutable","name":"signature","nameLocation":"1086:9:23","nodeType":"VariableDeclaration","scope":4684,"src":"1073:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4649,"name":"bytes","nodeType":"ElementaryTypeName","src":"1073:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1042:54:23"},"returnParameters":{"id":4654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4684,"src":"1120:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4652,"name":"bool","nodeType":"ElementaryTypeName","src":"1120:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1119:6:23"},"scope":4737,"src":"1014:366:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4735,"nodeType":"Block","src":"1935:324:23","statements":[{"assignments":[4697,4699],"declarations":[{"constant":false,"id":4697,"mutability":"mutable","name":"success","nameLocation":"1951:7:23","nodeType":"VariableDeclaration","scope":4735,"src":"1946:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4696,"name":"bool","nodeType":"ElementaryTypeName","src":"1946:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4699,"mutability":"mutable","name":"result","nameLocation":"1973:6:23","nodeType":"VariableDeclaration","scope":4735,"src":"1960:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4698,"name":"bytes","nodeType":"ElementaryTypeName","src":"1960:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4711,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":4704,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"2037:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$3437_$","typeString":"type(contract IERC1271)"}},"id":4705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2046:16:23","memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":3436,"src":"2037:25:23","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},"id":4706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2063:8:23","memberName":"selector","nodeType":"MemberAccess","src":"2037:34:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4707,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"2073:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4708,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"2079:9:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4702,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2014:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2018:18:23","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2014:22:23","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2014:75:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4700,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"1983:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1990:10:23","memberName":"staticcall","nodeType":"MemberAccess","src":"1983:17:23","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1983:116:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1945:154:23"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4712,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"2117:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4713,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"2140:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2147:6:23","memberName":"length","nodeType":"MemberAccess","src":"2140:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3332","id":4715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"2140:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2117:42:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4720,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"2186:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":4722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2195:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4721,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2195:7:23","typeDescriptions":{}}}],"id":4723,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2194:9:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}],"expression":{"id":4718,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2175:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2179:6:23","memberName":"decode","nodeType":"MemberAccess","src":"2175:10:23","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2175:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"expression":{"expression":{"id":4727,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"2216:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$3437_$","typeString":"type(contract IERC1271)"}},"id":4728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2225:16:23","memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":3436,"src":"2216:25:23","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},"id":4729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2242:8:23","memberName":"selector","nodeType":"MemberAccess","src":"2216:34:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":4726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2208:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4725,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2208:7:23","typeDescriptions":{}}},"id":4730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2208:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2175:76:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2117:134:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4733,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2116:136:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4695,"id":4734,"nodeType":"Return","src":"2109:143:23"}]},"documentation":{"id":4685,"nodeType":"StructuredDocumentation","src":"1386:395:23","text":" @dev Checks if a signature is valid for a given signer and data hash. The signature is validated\n against the signer smart contract using ERC1271.\n NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n change through time. It could return true at block N and false at block N+1 (or the opposite)."},"id":4736,"implemented":true,"kind":"function","modifiers":[],"name":"isValidERC1271SignatureNow","nameLocation":"1795:26:23","nodeType":"FunctionDefinition","parameters":{"id":4692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4687,"mutability":"mutable","name":"signer","nameLocation":"1839:6:23","nodeType":"VariableDeclaration","scope":4736,"src":"1831:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4686,"name":"address","nodeType":"ElementaryTypeName","src":"1831:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4689,"mutability":"mutable","name":"hash","nameLocation":"1863:4:23","nodeType":"VariableDeclaration","scope":4736,"src":"1855:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4688,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1855:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4691,"mutability":"mutable","name":"signature","nameLocation":"1890:9:23","nodeType":"VariableDeclaration","scope":4736,"src":"1877:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4690,"name":"bytes","nodeType":"ElementaryTypeName","src":"1877:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1821:84:23"},"returnParameters":{"id":4695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4736,"src":"1929:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4693,"name":"bool","nodeType":"ElementaryTypeName","src":"1929:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1928:6:23"},"scope":4737,"src":"1786:473:23","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4738,"src":"506:1755:23","usedErrors":[],"usedEvents":[]}],"src":"123:2139:23"},"id":23},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5603]},"id":5604,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4739,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:24"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4740,"nodeType":"StructuredDocumentation","src":"128:73:24","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5603,"linearizedBaseContracts":[5603],"name":"Math","nameLocation":"210:4:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4744,"members":[{"id":4741,"name":"Down","nameLocation":"245:4:24","nodeType":"EnumValue","src":"245:4:24"},{"id":4742,"name":"Up","nameLocation":"287:2:24","nodeType":"EnumValue","src":"287:2:24"},{"id":4743,"name":"Zero","nameLocation":"318:4:24","nodeType":"EnumValue","src":"318:4:24"}],"name":"Rounding","nameLocation":"226:8:24","nodeType":"EnumDefinition","src":"221:122:24"},{"body":{"id":4761,"nodeType":"Block","src":"480:37:24","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4754,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"497:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4755,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"501:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4758,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"509:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:24","trueExpression":{"id":4757,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"505:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4753,"id":4760,"nodeType":"Return","src":"490:20:24"}]},"documentation":{"id":4745,"nodeType":"StructuredDocumentation","src":"349:59:24","text":" @dev Returns the largest of two numbers."},"id":4762,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:24","nodeType":"FunctionDefinition","parameters":{"id":4750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4747,"mutability":"mutable","name":"a","nameLocation":"434:1:24","nodeType":"VariableDeclaration","scope":4762,"src":"426:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4746,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4749,"mutability":"mutable","name":"b","nameLocation":"445:1:24","nodeType":"VariableDeclaration","scope":4762,"src":"437:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4748,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:24"},"returnParameters":{"id":4753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4762,"src":"471:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4751,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:24"},"scope":5603,"src":"413:104:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4779,"nodeType":"Block","src":"655:37:24","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4772,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"672:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4773,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"676:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4776,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"684:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:24","trueExpression":{"id":4775,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"680:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4771,"id":4778,"nodeType":"Return","src":"665:20:24"}]},"documentation":{"id":4763,"nodeType":"StructuredDocumentation","src":"523:60:24","text":" @dev Returns the smallest of two numbers."},"id":4780,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:24","nodeType":"FunctionDefinition","parameters":{"id":4768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4765,"mutability":"mutable","name":"a","nameLocation":"609:1:24","nodeType":"VariableDeclaration","scope":4780,"src":"601:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4764,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4767,"mutability":"mutable","name":"b","nameLocation":"620:1:24","nodeType":"VariableDeclaration","scope":4780,"src":"612:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4766,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:24"},"returnParameters":{"id":4771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4780,"src":"646:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4769,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:24"},"scope":5603,"src":"588:104:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4802,"nodeType":"Block","src":"876:82:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4790,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"931:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4791,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"935:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4793,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4794,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"941:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4795,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"945:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4797,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4789,"id":4801,"nodeType":"Return","src":"923:28:24"}]},"documentation":{"id":4781,"nodeType":"StructuredDocumentation","src":"698:102:24","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4803,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:24","nodeType":"FunctionDefinition","parameters":{"id":4786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4783,"mutability":"mutable","name":"a","nameLocation":"830:1:24","nodeType":"VariableDeclaration","scope":4803,"src":"822:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4782,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4785,"mutability":"mutable","name":"b","nameLocation":"841:1:24","nodeType":"VariableDeclaration","scope":4803,"src":"833:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4784,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:24"},"returnParameters":{"id":4789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4803,"src":"867:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4787,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:24"},"scope":5603,"src":"805:153:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4827,"nodeType":"Block","src":"1228:123:24","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4813,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"1316:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4817,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"1330:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4820,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4821,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"1339:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:24","trueExpression":{"hexValue":"30","id":4816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4812,"id":4826,"nodeType":"Return","src":"1309:35:24"}]},"documentation":{"id":4804,"nodeType":"StructuredDocumentation","src":"964:188:24","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":4828,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:24","nodeType":"FunctionDefinition","parameters":{"id":4809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4806,"mutability":"mutable","name":"a","nameLocation":"1182:1:24","nodeType":"VariableDeclaration","scope":4828,"src":"1174:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4805,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4808,"mutability":"mutable","name":"b","nameLocation":"1193:1:24","nodeType":"VariableDeclaration","scope":4828,"src":"1185:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4807,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:24"},"returnParameters":{"id":4812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4828,"src":"1219:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4810,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:24"},"scope":5603,"src":"1157:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4950,"nodeType":"Block","src":"1765:4115:24","statements":[{"id":4949,"nodeType":"UncheckedBlock","src":"1775:4099:24","statements":[{"assignments":[4841],"declarations":[{"constant":false,"id":4841,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:24","nodeType":"VariableDeclaration","scope":4949,"src":"2096:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4840,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4842,"nodeType":"VariableDeclarationStatement","src":"2096:13:24"},{"assignments":[4844],"declarations":[{"constant":false,"id":4844,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:24","nodeType":"VariableDeclaration","scope":4949,"src":"2168:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4843,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4845,"nodeType":"VariableDeclarationStatement","src":"2168:13:24"},{"AST":{"nativeSrc":"2248:157:24","nodeType":"YulBlock","src":"2248:157:24","statements":[{"nativeSrc":"2266:30:24","nodeType":"YulVariableDeclaration","src":"2266:30:24","value":{"arguments":[{"name":"x","nativeSrc":"2283:1:24","nodeType":"YulIdentifier","src":"2283:1:24"},{"name":"y","nativeSrc":"2286:1:24","nodeType":"YulIdentifier","src":"2286:1:24"},{"arguments":[{"kind":"number","nativeSrc":"2293:1:24","nodeType":"YulLiteral","src":"2293:1:24","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2289:3:24","nodeType":"YulIdentifier","src":"2289:3:24"},"nativeSrc":"2289:6:24","nodeType":"YulFunctionCall","src":"2289:6:24"}],"functionName":{"name":"mulmod","nativeSrc":"2276:6:24","nodeType":"YulIdentifier","src":"2276:6:24"},"nativeSrc":"2276:20:24","nodeType":"YulFunctionCall","src":"2276:20:24"},"variables":[{"name":"mm","nativeSrc":"2270:2:24","nodeType":"YulTypedName","src":"2270:2:24","type":""}]},{"nativeSrc":"2313:18:24","nodeType":"YulAssignment","src":"2313:18:24","value":{"arguments":[{"name":"x","nativeSrc":"2326:1:24","nodeType":"YulIdentifier","src":"2326:1:24"},{"name":"y","nativeSrc":"2329:1:24","nodeType":"YulIdentifier","src":"2329:1:24"}],"functionName":{"name":"mul","nativeSrc":"2322:3:24","nodeType":"YulIdentifier","src":"2322:3:24"},"nativeSrc":"2322:9:24","nodeType":"YulFunctionCall","src":"2322:9:24"},"variableNames":[{"name":"prod0","nativeSrc":"2313:5:24","nodeType":"YulIdentifier","src":"2313:5:24"}]},{"nativeSrc":"2348:43:24","nodeType":"YulAssignment","src":"2348:43:24","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"2365:2:24","nodeType":"YulIdentifier","src":"2365:2:24"},{"name":"prod0","nativeSrc":"2369:5:24","nodeType":"YulIdentifier","src":"2369:5:24"}],"functionName":{"name":"sub","nativeSrc":"2361:3:24","nodeType":"YulIdentifier","src":"2361:3:24"},"nativeSrc":"2361:14:24","nodeType":"YulFunctionCall","src":"2361:14:24"},{"arguments":[{"name":"mm","nativeSrc":"2380:2:24","nodeType":"YulIdentifier","src":"2380:2:24"},{"name":"prod0","nativeSrc":"2384:5:24","nodeType":"YulIdentifier","src":"2384:5:24"}],"functionName":{"name":"lt","nativeSrc":"2377:2:24","nodeType":"YulIdentifier","src":"2377:2:24"},"nativeSrc":"2377:13:24","nodeType":"YulFunctionCall","src":"2377:13:24"}],"functionName":{"name":"sub","nativeSrc":"2357:3:24","nodeType":"YulIdentifier","src":"2357:3:24"},"nativeSrc":"2357:34:24","nodeType":"YulFunctionCall","src":"2357:34:24"},"variableNames":[{"name":"prod1","nativeSrc":"2348:5:24","nodeType":"YulIdentifier","src":"2348:5:24"}]}]},"evmVersion":"shanghai","externalReferences":[{"declaration":4841,"isOffset":false,"isSlot":false,"src":"2313:5:24","valueSize":1},{"declaration":4841,"isOffset":false,"isSlot":false,"src":"2369:5:24","valueSize":1},{"declaration":4841,"isOffset":false,"isSlot":false,"src":"2384:5:24","valueSize":1},{"declaration":4844,"isOffset":false,"isSlot":false,"src":"2348:5:24","valueSize":1},{"declaration":4831,"isOffset":false,"isSlot":false,"src":"2283:1:24","valueSize":1},{"declaration":4831,"isOffset":false,"isSlot":false,"src":"2326:1:24","valueSize":1},{"declaration":4833,"isOffset":false,"isSlot":false,"src":"2286:1:24","valueSize":1},{"declaration":4833,"isOffset":false,"isSlot":false,"src":"2329:1:24","valueSize":1}],"id":4846,"nodeType":"InlineAssembly","src":"2239:166:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4847,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4844,"src":"2486:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4855,"nodeType":"IfStatement","src":"2482:368:24","trueBody":{"id":4854,"nodeType":"Block","src":"2498:352:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4850,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"2816:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4851,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4835,"src":"2824:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4839,"id":4853,"nodeType":"Return","src":"2809:26:24"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4857,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4835,"src":"2960:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4858,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4844,"src":"2974:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":4860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":4856,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4862,"nodeType":"ExpressionStatement","src":"2952:53:24"},{"assignments":[4864],"declarations":[{"constant":false,"id":4864,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:24","nodeType":"VariableDeclaration","scope":4949,"src":"3261:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4863,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4865,"nodeType":"VariableDeclarationStatement","src":"3261:17:24"},{"AST":{"nativeSrc":"3301:291:24","nodeType":"YulBlock","src":"3301:291:24","statements":[{"nativeSrc":"3370:38:24","nodeType":"YulAssignment","src":"3370:38:24","value":{"arguments":[{"name":"x","nativeSrc":"3390:1:24","nodeType":"YulIdentifier","src":"3390:1:24"},{"name":"y","nativeSrc":"3393:1:24","nodeType":"YulIdentifier","src":"3393:1:24"},{"name":"denominator","nativeSrc":"3396:11:24","nodeType":"YulIdentifier","src":"3396:11:24"}],"functionName":{"name":"mulmod","nativeSrc":"3383:6:24","nodeType":"YulIdentifier","src":"3383:6:24"},"nativeSrc":"3383:25:24","nodeType":"YulFunctionCall","src":"3383:25:24"},"variableNames":[{"name":"remainder","nativeSrc":"3370:9:24","nodeType":"YulIdentifier","src":"3370:9:24"}]},{"nativeSrc":"3490:41:24","nodeType":"YulAssignment","src":"3490:41:24","value":{"arguments":[{"name":"prod1","nativeSrc":"3503:5:24","nodeType":"YulIdentifier","src":"3503:5:24"},{"arguments":[{"name":"remainder","nativeSrc":"3513:9:24","nodeType":"YulIdentifier","src":"3513:9:24"},{"name":"prod0","nativeSrc":"3524:5:24","nodeType":"YulIdentifier","src":"3524:5:24"}],"functionName":{"name":"gt","nativeSrc":"3510:2:24","nodeType":"YulIdentifier","src":"3510:2:24"},"nativeSrc":"3510:20:24","nodeType":"YulFunctionCall","src":"3510:20:24"}],"functionName":{"name":"sub","nativeSrc":"3499:3:24","nodeType":"YulIdentifier","src":"3499:3:24"},"nativeSrc":"3499:32:24","nodeType":"YulFunctionCall","src":"3499:32:24"},"variableNames":[{"name":"prod1","nativeSrc":"3490:5:24","nodeType":"YulIdentifier","src":"3490:5:24"}]},{"nativeSrc":"3548:30:24","nodeType":"YulAssignment","src":"3548:30:24","value":{"arguments":[{"name":"prod0","nativeSrc":"3561:5:24","nodeType":"YulIdentifier","src":"3561:5:24"},{"name":"remainder","nativeSrc":"3568:9:24","nodeType":"YulIdentifier","src":"3568:9:24"}],"functionName":{"name":"sub","nativeSrc":"3557:3:24","nodeType":"YulIdentifier","src":"3557:3:24"},"nativeSrc":"3557:21:24","nodeType":"YulFunctionCall","src":"3557:21:24"},"variableNames":[{"name":"prod0","nativeSrc":"3548:5:24","nodeType":"YulIdentifier","src":"3548:5:24"}]}]},"evmVersion":"shanghai","externalReferences":[{"declaration":4835,"isOffset":false,"isSlot":false,"src":"3396:11:24","valueSize":1},{"declaration":4841,"isOffset":false,"isSlot":false,"src":"3524:5:24","valueSize":1},{"declaration":4841,"isOffset":false,"isSlot":false,"src":"3548:5:24","valueSize":1},{"declaration":4841,"isOffset":false,"isSlot":false,"src":"3561:5:24","valueSize":1},{"declaration":4844,"isOffset":false,"isSlot":false,"src":"3490:5:24","valueSize":1},{"declaration":4844,"isOffset":false,"isSlot":false,"src":"3503:5:24","valueSize":1},{"declaration":4864,"isOffset":false,"isSlot":false,"src":"3370:9:24","valueSize":1},{"declaration":4864,"isOffset":false,"isSlot":false,"src":"3513:9:24","valueSize":1},{"declaration":4864,"isOffset":false,"isSlot":false,"src":"3568:9:24","valueSize":1},{"declaration":4831,"isOffset":false,"isSlot":false,"src":"3390:1:24","valueSize":1},{"declaration":4833,"isOffset":false,"isSlot":false,"src":"3393:1:24","valueSize":1}],"id":4866,"nodeType":"InlineAssembly","src":"3292:300:24"},{"assignments":[4868],"declarations":[{"constant":false,"id":4868,"mutability":"mutable","name":"twos","nameLocation":"3907:4:24","nodeType":"VariableDeclaration","scope":4949,"src":"3899:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4867,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4876,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4869,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4835,"src":"3914:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:24","subExpression":{"id":4870,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4835,"src":"3930:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4874,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:24"},{"AST":{"nativeSrc":"3969:362:24","nodeType":"YulBlock","src":"3969:362:24","statements":[{"nativeSrc":"4034:37:24","nodeType":"YulAssignment","src":"4034:37:24","value":{"arguments":[{"name":"denominator","nativeSrc":"4053:11:24","nodeType":"YulIdentifier","src":"4053:11:24"},{"name":"twos","nativeSrc":"4066:4:24","nodeType":"YulIdentifier","src":"4066:4:24"}],"functionName":{"name":"div","nativeSrc":"4049:3:24","nodeType":"YulIdentifier","src":"4049:3:24"},"nativeSrc":"4049:22:24","nodeType":"YulFunctionCall","src":"4049:22:24"},"variableNames":[{"name":"denominator","nativeSrc":"4034:11:24","nodeType":"YulIdentifier","src":"4034:11:24"}]},{"nativeSrc":"4138:25:24","nodeType":"YulAssignment","src":"4138:25:24","value":{"arguments":[{"name":"prod0","nativeSrc":"4151:5:24","nodeType":"YulIdentifier","src":"4151:5:24"},{"name":"twos","nativeSrc":"4158:4:24","nodeType":"YulIdentifier","src":"4158:4:24"}],"functionName":{"name":"div","nativeSrc":"4147:3:24","nodeType":"YulIdentifier","src":"4147:3:24"},"nativeSrc":"4147:16:24","nodeType":"YulFunctionCall","src":"4147:16:24"},"variableNames":[{"name":"prod0","nativeSrc":"4138:5:24","nodeType":"YulIdentifier","src":"4138:5:24"}]},{"nativeSrc":"4278:39:24","nodeType":"YulAssignment","src":"4278:39:24","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4298:1:24","nodeType":"YulLiteral","src":"4298:1:24","type":"","value":"0"},{"name":"twos","nativeSrc":"4301:4:24","nodeType":"YulIdentifier","src":"4301:4:24"}],"functionName":{"name":"sub","nativeSrc":"4294:3:24","nodeType":"YulIdentifier","src":"4294:3:24"},"nativeSrc":"4294:12:24","nodeType":"YulFunctionCall","src":"4294:12:24"},{"name":"twos","nativeSrc":"4308:4:24","nodeType":"YulIdentifier","src":"4308:4:24"}],"functionName":{"name":"div","nativeSrc":"4290:3:24","nodeType":"YulIdentifier","src":"4290:3:24"},"nativeSrc":"4290:23:24","nodeType":"YulFunctionCall","src":"4290:23:24"},{"kind":"number","nativeSrc":"4315:1:24","nodeType":"YulLiteral","src":"4315:1:24","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4286:3:24","nodeType":"YulIdentifier","src":"4286:3:24"},"nativeSrc":"4286:31:24","nodeType":"YulFunctionCall","src":"4286:31:24"},"variableNames":[{"name":"twos","nativeSrc":"4278:4:24","nodeType":"YulIdentifier","src":"4278:4:24"}]}]},"evmVersion":"shanghai","externalReferences":[{"declaration":4835,"isOffset":false,"isSlot":false,"src":"4034:11:24","valueSize":1},{"declaration":4835,"isOffset":false,"isSlot":false,"src":"4053:11:24","valueSize":1},{"declaration":4841,"isOffset":false,"isSlot":false,"src":"4138:5:24","valueSize":1},{"declaration":4841,"isOffset":false,"isSlot":false,"src":"4151:5:24","valueSize":1},{"declaration":4868,"isOffset":false,"isSlot":false,"src":"4066:4:24","valueSize":1},{"declaration":4868,"isOffset":false,"isSlot":false,"src":"4158:4:24","valueSize":1},{"declaration":4868,"isOffset":false,"isSlot":false,"src":"4278:4:24","valueSize":1},{"declaration":4868,"isOffset":false,"isSlot":false,"src":"4301:4:24","valueSize":1},{"declaration":4868,"isOffset":false,"isSlot":false,"src":"4308:4:24","valueSize":1}],"id":4877,"nodeType":"InlineAssembly","src":"3960:371:24"},{"expression":{"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4878,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"4397:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4879,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4844,"src":"4406:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4880,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"4414:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4883,"nodeType":"ExpressionStatement","src":"4397:21:24"},{"assignments":[4885],"declarations":[{"constant":false,"id":4885,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:24","nodeType":"VariableDeclaration","scope":4949,"src":"4736:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4884,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4892,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4887,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4835,"src":"4759:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4889,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:24"},{"expression":{"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4893,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"4992:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4895,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4835,"src":"5007:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4896,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"5021:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4900,"nodeType":"ExpressionStatement","src":"4992:36:24"},{"expression":{"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4901,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"5061:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4903,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4835,"src":"5076:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4904,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"5090:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4908,"nodeType":"ExpressionStatement","src":"5061:36:24"},{"expression":{"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4909,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"5131:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4911,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4835,"src":"5146:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4912,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"5160:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4916,"nodeType":"ExpressionStatement","src":"5131:36:24"},{"expression":{"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4917,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"5201:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4919,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4835,"src":"5216:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4920,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"5230:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4924,"nodeType":"ExpressionStatement","src":"5201:36:24"},{"expression":{"id":4931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4925,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"5271:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4927,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4835,"src":"5286:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4928,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"5300:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4932,"nodeType":"ExpressionStatement","src":"5271:36:24"},{"expression":{"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4933,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"5342:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4935,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4835,"src":"5357:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4936,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"5371:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4940,"nodeType":"ExpressionStatement","src":"5342:36:24"},{"expression":{"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4941,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"5812:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4942,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"5821:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4943,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"5829:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4946,"nodeType":"ExpressionStatement","src":"5812:24:24"},{"expression":{"id":4947,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"5857:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4839,"id":4948,"nodeType":"Return","src":"5850:13:24"}]}]},"documentation":{"id":4829,"nodeType":"StructuredDocumentation","src":"1357:305:24","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":4951,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:24","nodeType":"FunctionDefinition","parameters":{"id":4836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4831,"mutability":"mutable","name":"x","nameLocation":"1691:1:24","nodeType":"VariableDeclaration","scope":4951,"src":"1683:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4830,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4833,"mutability":"mutable","name":"y","nameLocation":"1702:1:24","nodeType":"VariableDeclaration","scope":4951,"src":"1694:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4832,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4835,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:24","nodeType":"VariableDeclaration","scope":4951,"src":"1705:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4834,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:24"},"returnParameters":{"id":4839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4838,"mutability":"mutable","name":"result","nameLocation":"1757:6:24","nodeType":"VariableDeclaration","scope":4951,"src":"1749:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4837,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:24"},"scope":5603,"src":"1667:4213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4994,"nodeType":"Block","src":"6122:189:24","statements":[{"assignments":[4967],"declarations":[{"constant":false,"id":4967,"mutability":"mutable","name":"result","nameLocation":"6140:6:24","nodeType":"VariableDeclaration","scope":4994,"src":"6132:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4966,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4973,"initialValue":{"arguments":[{"id":4969,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"6156:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4970,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"6159:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4971,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4958,"src":"6162:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4968,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4951,4995],"referencedDeclaration":4951,"src":"6149:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:24"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4744","typeString":"enum Math.Rounding"},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4974,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4961,"src":"6188:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4744","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4975,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"6200:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4744_$","typeString":"type(enum Math.Rounding)"}},"id":4976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:24","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4742,"src":"6200:11:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4744","typeString":"enum Math.Rounding"}},"src":"6188:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4979,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"6222:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4980,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"6225:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4981,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4958,"src":"6228:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4978,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:24","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4991,"nodeType":"IfStatement","src":"6184:98:24","trueBody":{"id":4990,"nodeType":"Block","src":"6246:36:24","statements":[{"expression":{"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4986,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"6260:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4989,"nodeType":"ExpressionStatement","src":"6260:11:24"}]}},{"expression":{"id":4992,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"6298:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4965,"id":4993,"nodeType":"Return","src":"6291:13:24"}]},"documentation":{"id":4952,"nodeType":"StructuredDocumentation","src":"5886:121:24","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4995,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:24","nodeType":"FunctionDefinition","parameters":{"id":4962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4954,"mutability":"mutable","name":"x","nameLocation":"6036:1:24","nodeType":"VariableDeclaration","scope":4995,"src":"6028:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4953,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4956,"mutability":"mutable","name":"y","nameLocation":"6047:1:24","nodeType":"VariableDeclaration","scope":4995,"src":"6039:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4955,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4958,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:24","nodeType":"VariableDeclaration","scope":4995,"src":"6050:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4957,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4961,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:24","nodeType":"VariableDeclaration","scope":4995,"src":"6071:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4744","typeString":"enum Math.Rounding"},"typeName":{"id":4960,"nodeType":"UserDefinedTypeName","pathNode":{"id":4959,"name":"Rounding","nameLocations":["6071:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":4744,"src":"6071:8:24"},"referencedDeclaration":4744,"src":"6071:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4744","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:24"},"returnParameters":{"id":4965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4995,"src":"6113:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4963,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:24"},"scope":5603,"src":"6012:299:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5106,"nodeType":"Block","src":"6587:1585:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5003,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"6601:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5009,"nodeType":"IfStatement","src":"6597:45:24","trueBody":{"id":5008,"nodeType":"Block","src":"6609:33:24","statements":[{"expression":{"hexValue":"30","id":5006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5002,"id":5007,"nodeType":"Return","src":"6623:8:24"}]}},{"assignments":[5011],"declarations":[{"constant":false,"id":5011,"mutability":"mutable","name":"result","nameLocation":"7329:6:24","nodeType":"VariableDeclaration","scope":5106,"src":"7321:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5010,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5020,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5014,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"7349:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5013,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5275,5311],"referencedDeclaration":5275,"src":"7344:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5018,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:24"},{"id":5105,"nodeType":"UncheckedBlock","src":"7758:408:24","statements":[{"expression":{"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5021,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"7782:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5022,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"7792:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5023,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"7801:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5024,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"7805:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5027,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5031,"nodeType":"ExpressionStatement","src":"7782:35:24"},{"expression":{"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5032,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"7831:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5033,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"7841:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5034,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"7850:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5035,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"7854:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5038,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5042,"nodeType":"ExpressionStatement","src":"7831:35:24"},{"expression":{"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5043,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"7880:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5044,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"7890:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5045,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"7899:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5046,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"7903:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5049,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5053,"nodeType":"ExpressionStatement","src":"7880:35:24"},{"expression":{"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5054,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"7929:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5055,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"7939:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5056,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"7948:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5057,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"7952:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5060,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5064,"nodeType":"ExpressionStatement","src":"7929:35:24"},{"expression":{"id":5074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5065,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"7978:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5066,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"7988:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5067,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"7997:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5068,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"8001:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5071,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5075,"nodeType":"ExpressionStatement","src":"7978:35:24"},{"expression":{"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5076,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"8027:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5077,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"8037:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5078,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"8046:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5079,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"8050:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5082,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5086,"nodeType":"ExpressionStatement","src":"8027:35:24"},{"expression":{"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5087,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"8076:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5088,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"8086:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5089,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"8095:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5090,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"8099:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5093,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5097,"nodeType":"ExpressionStatement","src":"8076:35:24"},{"expression":{"arguments":[{"id":5099,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"8136:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5100,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"8144:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5101,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"8148:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5098,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"8132:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5002,"id":5104,"nodeType":"Return","src":"8125:30:24"}]}]},"documentation":{"id":4996,"nodeType":"StructuredDocumentation","src":"6317:208:24","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":5107,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:24","nodeType":"FunctionDefinition","parameters":{"id":4999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4998,"mutability":"mutable","name":"a","nameLocation":"6552:1:24","nodeType":"VariableDeclaration","scope":5107,"src":"6544:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4997,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:24"},"returnParameters":{"id":5002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5107,"src":"6578:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5000,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:24"},"scope":5603,"src":"6530:1642:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5142,"nodeType":"Block","src":"8348:161:24","statements":[{"id":5141,"nodeType":"UncheckedBlock","src":"8358:145:24","statements":[{"assignments":[5119],"declarations":[{"constant":false,"id":5119,"mutability":"mutable","name":"result","nameLocation":"8390:6:24","nodeType":"VariableDeclaration","scope":5141,"src":"8382:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5118,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5123,"initialValue":{"arguments":[{"id":5121,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"8404:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5120,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5107,5143],"referencedDeclaration":5107,"src":"8399:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5124,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"8427:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4744","typeString":"enum Math.Rounding"},"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5125,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"8437:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4744","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5126,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"8449:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4744_$","typeString":"type(enum Math.Rounding)"}},"id":5127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:24","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4742,"src":"8449:11:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4744","typeString":"enum Math.Rounding"}},"src":"8437:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5129,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"8464:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5130,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"8473:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5132,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"8482:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:24","trueExpression":{"hexValue":"31","id":5135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5138,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5117,"id":5140,"nodeType":"Return","src":"8420:72:24"}]}]},"documentation":{"id":5108,"nodeType":"StructuredDocumentation","src":"8178:89:24","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":5143,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:24","nodeType":"FunctionDefinition","parameters":{"id":5114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5110,"mutability":"mutable","name":"a","nameLocation":"8294:1:24","nodeType":"VariableDeclaration","scope":5143,"src":"8286:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5109,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5113,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:24","nodeType":"VariableDeclaration","scope":5143,"src":"8297:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4744","typeString":"enum Math.Rounding"},"typeName":{"id":5112,"nodeType":"UserDefinedTypeName","pathNode":{"id":5111,"name":"Rounding","nameLocations":["8297:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":4744,"src":"8297:8:24"},"referencedDeclaration":4744,"src":"8297:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4744","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:24"},"returnParameters":{"id":5117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5143,"src":"8339:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5115,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:24"},"scope":5603,"src":"8272:237:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5274,"nodeType":"Block","src":"8694:922:24","statements":[{"assignments":[5152],"declarations":[{"constant":false,"id":5152,"mutability":"mutable","name":"result","nameLocation":"8712:6:24","nodeType":"VariableDeclaration","scope":5274,"src":"8704:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5151,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5154,"initialValue":{"hexValue":"30","id":5153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:24"},{"id":5271,"nodeType":"UncheckedBlock","src":"8732:855:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"8760:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":5156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5169,"nodeType":"IfStatement","src":"8756:99:24","trueBody":{"id":5168,"nodeType":"Block","src":"8778:77:24","statements":[{"expression":{"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"8796:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5163,"nodeType":"ExpressionStatement","src":"8796:13:24"},{"expression":{"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5164,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"8827:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":5165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5167,"nodeType":"ExpressionStatement","src":"8827:13:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"8872:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":5171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5184,"nodeType":"IfStatement","src":"8868:96:24","trueBody":{"id":5183,"nodeType":"Block","src":"8889:75:24","statements":[{"expression":{"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"8907:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5178,"nodeType":"ExpressionStatement","src":"8907:12:24"},{"expression":{"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5179,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"8937:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5182,"nodeType":"ExpressionStatement","src":"8937:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"8981:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":5186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5199,"nodeType":"IfStatement","src":"8977:96:24","trueBody":{"id":5198,"nodeType":"Block","src":"8998:75:24","statements":[{"expression":{"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"9016:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5193,"nodeType":"ExpressionStatement","src":"9016:12:24"},{"expression":{"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5194,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"9046:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5197,"nodeType":"ExpressionStatement","src":"9046:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"9090:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":5201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5214,"nodeType":"IfStatement","src":"9086:96:24","trueBody":{"id":5213,"nodeType":"Block","src":"9107:75:24","statements":[{"expression":{"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"9125:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5208,"nodeType":"ExpressionStatement","src":"9125:12:24"},{"expression":{"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5209,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"9155:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5212,"nodeType":"ExpressionStatement","src":"9155:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"9199:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":5216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5229,"nodeType":"IfStatement","src":"9195:93:24","trueBody":{"id":5228,"nodeType":"Block","src":"9215:73:24","statements":[{"expression":{"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"9233:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5223,"nodeType":"ExpressionStatement","src":"9233:11:24"},{"expression":{"id":5226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5224,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"9262:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5227,"nodeType":"ExpressionStatement","src":"9262:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"9305:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":5231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5244,"nodeType":"IfStatement","src":"9301:93:24","trueBody":{"id":5243,"nodeType":"Block","src":"9321:73:24","statements":[{"expression":{"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"9339:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5238,"nodeType":"ExpressionStatement","src":"9339:11:24"},{"expression":{"id":5241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5239,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"9368:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5242,"nodeType":"ExpressionStatement","src":"9368:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"9411:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":5246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5259,"nodeType":"IfStatement","src":"9407:93:24","trueBody":{"id":5258,"nodeType":"Block","src":"9427:73:24","statements":[{"expression":{"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"9445:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":5251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5253,"nodeType":"ExpressionStatement","src":"9445:11:24"},{"expression":{"id":5256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5254,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"9474:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5257,"nodeType":"ExpressionStatement","src":"9474:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"9517:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5270,"nodeType":"IfStatement","src":"9513:64:24","trueBody":{"id":5269,"nodeType":"Block","src":"9533:44:24","statements":[{"expression":{"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5265,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"9551:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5268,"nodeType":"ExpressionStatement","src":"9551:11:24"}]}}]},{"expression":{"id":5272,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"9603:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5150,"id":5273,"nodeType":"Return","src":"9596:13:24"}]},"documentation":{"id":5144,"nodeType":"StructuredDocumentation","src":"8515:113:24","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":5275,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:24","nodeType":"FunctionDefinition","parameters":{"id":5147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5146,"mutability":"mutable","name":"value","nameLocation":"8655:5:24","nodeType":"VariableDeclaration","scope":5275,"src":"8647:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5145,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:24"},"returnParameters":{"id":5150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5275,"src":"8685:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5148,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:24"},"scope":5603,"src":"8633:983:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5310,"nodeType":"Block","src":"9849:165:24","statements":[{"id":5309,"nodeType":"UncheckedBlock","src":"9859:149:24","statements":[{"assignments":[5287],"declarations":[{"constant":false,"id":5287,"mutability":"mutable","name":"result","nameLocation":"9891:6:24","nodeType":"VariableDeclaration","scope":5309,"src":"9883:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5286,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5291,"initialValue":{"arguments":[{"id":5289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5278,"src":"9905:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5288,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5275,5311],"referencedDeclaration":5275,"src":"9900:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5292,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"9932:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4744","typeString":"enum Math.Rounding"},"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5293,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"9942:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4744","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5294,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"9954:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4744_$","typeString":"type(enum Math.Rounding)"}},"id":5295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:24","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4742,"src":"9954:11:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4744","typeString":"enum Math.Rounding"}},"src":"9942:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5298,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"9974:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5278,"src":"9983:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:24","trueExpression":{"hexValue":"31","id":5303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5306,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5285,"id":5308,"nodeType":"Return","src":"9925:72:24"}]}]},"documentation":{"id":5276,"nodeType":"StructuredDocumentation","src":"9622:142:24","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5311,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:24","nodeType":"FunctionDefinition","parameters":{"id":5282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5278,"mutability":"mutable","name":"value","nameLocation":"9791:5:24","nodeType":"VariableDeclaration","scope":5311,"src":"9783:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5277,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5281,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:24","nodeType":"VariableDeclaration","scope":5311,"src":"9798:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4744","typeString":"enum Math.Rounding"},"typeName":{"id":5280,"nodeType":"UserDefinedTypeName","pathNode":{"id":5279,"name":"Rounding","nameLocations":["9798:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":4744,"src":"9798:8:24"},"referencedDeclaration":4744,"src":"9798:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4744","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:24"},"returnParameters":{"id":5285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5311,"src":"9840:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5283,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:24"},"scope":5603,"src":"9769:245:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5439,"nodeType":"Block","src":"10201:854:24","statements":[{"assignments":[5320],"declarations":[{"constant":false,"id":5320,"mutability":"mutable","name":"result","nameLocation":"10219:6:24","nodeType":"VariableDeclaration","scope":5439,"src":"10211:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5319,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5322,"initialValue":{"hexValue":"30","id":5321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:24"},{"id":5436,"nodeType":"UncheckedBlock","src":"10239:787:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"10267:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5339,"nodeType":"IfStatement","src":"10263:103:24","trueBody":{"id":5338,"nodeType":"Block","src":"10286:80:24","statements":[{"expression":{"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"10304:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5333,"nodeType":"ExpressionStatement","src":"10304:17:24"},{"expression":{"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5334,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"10339:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5337,"nodeType":"ExpressionStatement","src":"10339:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"10383:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5356,"nodeType":"IfStatement","src":"10379:103:24","trueBody":{"id":5355,"nodeType":"Block","src":"10402:80:24","statements":[{"expression":{"id":5349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"10420:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5350,"nodeType":"ExpressionStatement","src":"10420:17:24"},{"expression":{"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5351,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"10455:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5354,"nodeType":"ExpressionStatement","src":"10455:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"10499:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5373,"nodeType":"IfStatement","src":"10495:103:24","trueBody":{"id":5372,"nodeType":"Block","src":"10518:80:24","statements":[{"expression":{"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"10536:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5367,"nodeType":"ExpressionStatement","src":"10536:17:24"},{"expression":{"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5368,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"10571:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5371,"nodeType":"ExpressionStatement","src":"10571:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"10615:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5390,"nodeType":"IfStatement","src":"10611:100:24","trueBody":{"id":5389,"nodeType":"Block","src":"10633:78:24","statements":[{"expression":{"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"10651:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5384,"nodeType":"ExpressionStatement","src":"10651:16:24"},{"expression":{"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5385,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"10685:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5388,"nodeType":"ExpressionStatement","src":"10685:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"10728:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5407,"nodeType":"IfStatement","src":"10724:100:24","trueBody":{"id":5406,"nodeType":"Block","src":"10746:78:24","statements":[{"expression":{"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"10764:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5401,"nodeType":"ExpressionStatement","src":"10764:16:24"},{"expression":{"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5402,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"10798:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5405,"nodeType":"ExpressionStatement","src":"10798:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"10841:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5424,"nodeType":"IfStatement","src":"10837:100:24","trueBody":{"id":5423,"nodeType":"Block","src":"10859:78:24","statements":[{"expression":{"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"10877:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5418,"nodeType":"ExpressionStatement","src":"10877:16:24"},{"expression":{"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5419,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"10911:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5422,"nodeType":"ExpressionStatement","src":"10911:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"10954:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5435,"nodeType":"IfStatement","src":"10950:66:24","trueBody":{"id":5434,"nodeType":"Block","src":"10972:44:24","statements":[{"expression":{"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5430,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"10990:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5433,"nodeType":"ExpressionStatement","src":"10990:11:24"}]}}]},{"expression":{"id":5437,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"11042:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5318,"id":5438,"nodeType":"Return","src":"11035:13:24"}]},"documentation":{"id":5312,"nodeType":"StructuredDocumentation","src":"10020:114:24","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":5440,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:24","nodeType":"FunctionDefinition","parameters":{"id":5315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5314,"mutability":"mutable","name":"value","nameLocation":"10162:5:24","nodeType":"VariableDeclaration","scope":5440,"src":"10154:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5313,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:24"},"returnParameters":{"id":5318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5440,"src":"10192:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5316,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:24"},"scope":5603,"src":"10139:916:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5475,"nodeType":"Block","src":"11290:167:24","statements":[{"id":5474,"nodeType":"UncheckedBlock","src":"11300:151:24","statements":[{"assignments":[5452],"declarations":[{"constant":false,"id":5452,"mutability":"mutable","name":"result","nameLocation":"11332:6:24","nodeType":"VariableDeclaration","scope":5474,"src":"11324:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5451,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5456,"initialValue":{"arguments":[{"id":5454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"11347:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5453,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5440,5476],"referencedDeclaration":5440,"src":"11341:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5457,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"11374:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4744","typeString":"enum Math.Rounding"},"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5458,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"11384:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4744","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5459,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"11396:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4744_$","typeString":"type(enum Math.Rounding)"}},"id":5460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:24","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4742,"src":"11396:11:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4744","typeString":"enum Math.Rounding"}},"src":"11384:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5463,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"11417:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"11426:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:24","trueExpression":{"hexValue":"31","id":5468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5471,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5450,"id":5473,"nodeType":"Return","src":"11367:73:24"}]}]},"documentation":{"id":5441,"nodeType":"StructuredDocumentation","src":"11061:143:24","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5476,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:24","nodeType":"FunctionDefinition","parameters":{"id":5447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5443,"mutability":"mutable","name":"value","nameLocation":"11232:5:24","nodeType":"VariableDeclaration","scope":5476,"src":"11224:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5442,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5446,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:24","nodeType":"VariableDeclaration","scope":5476,"src":"11239:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4744","typeString":"enum Math.Rounding"},"typeName":{"id":5445,"nodeType":"UserDefinedTypeName","pathNode":{"id":5444,"name":"Rounding","nameLocations":["11239:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":4744,"src":"11239:8:24"},"referencedDeclaration":4744,"src":"11239:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4744","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:24"},"returnParameters":{"id":5450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5476,"src":"11281:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5448,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:24"},"scope":5603,"src":"11209:248:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5562,"nodeType":"Block","src":"11771:600:24","statements":[{"assignments":[5485],"declarations":[{"constant":false,"id":5485,"mutability":"mutable","name":"result","nameLocation":"11789:6:24","nodeType":"VariableDeclaration","scope":5562,"src":"11781:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5484,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5487,"initialValue":{"hexValue":"30","id":5486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:24"},{"id":5559,"nodeType":"UncheckedBlock","src":"11809:533:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5479,"src":"11837:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":5489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5502,"nodeType":"IfStatement","src":"11833:98:24","trueBody":{"id":5501,"nodeType":"Block","src":"11855:76:24","statements":[{"expression":{"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5479,"src":"11873:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5496,"nodeType":"ExpressionStatement","src":"11873:13:24"},{"expression":{"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5497,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"11904:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5500,"nodeType":"ExpressionStatement","src":"11904:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5479,"src":"11948:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":5504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5517,"nodeType":"IfStatement","src":"11944:95:24","trueBody":{"id":5516,"nodeType":"Block","src":"11965:74:24","statements":[{"expression":{"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5479,"src":"11983:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5511,"nodeType":"ExpressionStatement","src":"11983:12:24"},{"expression":{"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5512,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"12013:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5515,"nodeType":"ExpressionStatement","src":"12013:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5479,"src":"12056:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":5519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5532,"nodeType":"IfStatement","src":"12052:95:24","trueBody":{"id":5531,"nodeType":"Block","src":"12073:74:24","statements":[{"expression":{"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5479,"src":"12091:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5526,"nodeType":"ExpressionStatement","src":"12091:12:24"},{"expression":{"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5527,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"12121:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5530,"nodeType":"ExpressionStatement","src":"12121:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5479,"src":"12164:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":5534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5547,"nodeType":"IfStatement","src":"12160:95:24","trueBody":{"id":5546,"nodeType":"Block","src":"12181:74:24","statements":[{"expression":{"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5479,"src":"12199:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5541,"nodeType":"ExpressionStatement","src":"12199:12:24"},{"expression":{"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5542,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"12229:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5545,"nodeType":"ExpressionStatement","src":"12229:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5479,"src":"12272:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":5549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5558,"nodeType":"IfStatement","src":"12268:64:24","trueBody":{"id":5557,"nodeType":"Block","src":"12288:44:24","statements":[{"expression":{"id":5555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5553,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"12306:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5556,"nodeType":"ExpressionStatement","src":"12306:11:24"}]}}]},{"expression":{"id":5560,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"12358:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5483,"id":5561,"nodeType":"Return","src":"12351:13:24"}]},"documentation":{"id":5477,"nodeType":"StructuredDocumentation","src":"11463:240:24","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5563,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:24","nodeType":"FunctionDefinition","parameters":{"id":5480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5479,"mutability":"mutable","name":"value","nameLocation":"11732:5:24","nodeType":"VariableDeclaration","scope":5563,"src":"11724:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5478,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:24"},"returnParameters":{"id":5483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5563,"src":"11762:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5481,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:24"},"scope":5603,"src":"11708:663:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5601,"nodeType":"Block","src":"12608:174:24","statements":[{"id":5600,"nodeType":"UncheckedBlock","src":"12618:158:24","statements":[{"assignments":[5575],"declarations":[{"constant":false,"id":5575,"mutability":"mutable","name":"result","nameLocation":"12650:6:24","nodeType":"VariableDeclaration","scope":5600,"src":"12642:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5574,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5579,"initialValue":{"arguments":[{"id":5577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"12666:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5576,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5563,5602],"referencedDeclaration":5563,"src":"12659:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5580,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"12693:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4744","typeString":"enum Math.Rounding"},"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5581,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"12703:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4744","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5582,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"12715:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4744_$","typeString":"type(enum Math.Rounding)"}},"id":5583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:24","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4742,"src":"12715:11:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4744","typeString":"enum Math.Rounding"}},"src":"12703:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5586,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"12736:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5589,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"12751:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:24","trueExpression":{"hexValue":"31","id":5594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5597,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5573,"id":5599,"nodeType":"Return","src":"12686:79:24"}]}]},"documentation":{"id":5564,"nodeType":"StructuredDocumentation","src":"12377:144:24","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5602,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:24","nodeType":"FunctionDefinition","parameters":{"id":5570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5566,"mutability":"mutable","name":"value","nameLocation":"12550:5:24","nodeType":"VariableDeclaration","scope":5602,"src":"12542:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5565,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5569,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:24","nodeType":"VariableDeclaration","scope":5602,"src":"12557:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4744","typeString":"enum Math.Rounding"},"typeName":{"id":5568,"nodeType":"UserDefinedTypeName","pathNode":{"id":5567,"name":"Rounding","nameLocations":["12557:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":4744,"src":"12557:8:24"},"referencedDeclaration":4744,"src":"12557:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4744","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:24"},"returnParameters":{"id":5573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5602,"src":"12599:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5571,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:24"},"scope":5603,"src":"12526:256:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5604,"src":"202:12582:24","usedErrors":[],"usedEvents":[]}],"src":"103:12682:24"},"id":24},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[5708]},"id":5709,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5605,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:25"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":5606,"nodeType":"StructuredDocumentation","src":"134:80:25","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5708,"linearizedBaseContracts":[5708],"name":"SignedMath","nameLocation":"223:10:25","nodeType":"ContractDefinition","nodes":[{"body":{"id":5623,"nodeType":"Block","src":"375:37:25","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5616,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5609,"src":"392:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5617,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"396:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5620,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"404:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:25","trueExpression":{"id":5619,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5609,"src":"400:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5615,"id":5622,"nodeType":"Return","src":"385:20:25"}]},"documentation":{"id":5607,"nodeType":"StructuredDocumentation","src":"240:66:25","text":" @dev Returns the largest of two signed numbers."},"id":5624,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:25","nodeType":"FunctionDefinition","parameters":{"id":5612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5609,"mutability":"mutable","name":"a","nameLocation":"331:1:25","nodeType":"VariableDeclaration","scope":5624,"src":"324:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5608,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5611,"mutability":"mutable","name":"b","nameLocation":"341:1:25","nodeType":"VariableDeclaration","scope":5624,"src":"334:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5610,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:25"},"returnParameters":{"id":5615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5624,"src":"367:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5613,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:25"},"scope":5708,"src":"311:101:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5641,"nodeType":"Block","src":"554:37:25","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5634,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"571:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5635,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"575:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5638,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"583:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:25","trueExpression":{"id":5637,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"579:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5633,"id":5640,"nodeType":"Return","src":"564:20:25"}]},"documentation":{"id":5625,"nodeType":"StructuredDocumentation","src":"418:67:25","text":" @dev Returns the smallest of two signed numbers."},"id":5642,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:25","nodeType":"FunctionDefinition","parameters":{"id":5630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5627,"mutability":"mutable","name":"a","nameLocation":"510:1:25","nodeType":"VariableDeclaration","scope":5642,"src":"503:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5626,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5629,"mutability":"mutable","name":"b","nameLocation":"520:1:25","nodeType":"VariableDeclaration","scope":5642,"src":"513:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5628,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:25"},"returnParameters":{"id":5633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5642,"src":"546:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5631,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:25"},"scope":5708,"src":"490:101:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5685,"nodeType":"Block","src":"796:162:25","statements":[{"assignments":[5653],"declarations":[{"constant":false,"id":5653,"mutability":"mutable","name":"x","nameLocation":"865:1:25","nodeType":"VariableDeclaration","scope":5685,"src":"858:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5652,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5666,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5654,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"870:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5655,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5647,"src":"874:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5657,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5658,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"881:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5659,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5647,"src":"885:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5661,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5664,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:25"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5667,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"910:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5672,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"930:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5670,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:25","typeDescriptions":{}}},"id":5673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5668,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:25","typeDescriptions":{}}},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5677,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"944:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5678,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5647,"src":"948:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5680,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5682,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5651,"id":5684,"nodeType":"Return","src":"903:48:25"}]},"documentation":{"id":5643,"nodeType":"StructuredDocumentation","src":"597:126:25","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":5686,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:25","nodeType":"FunctionDefinition","parameters":{"id":5648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5645,"mutability":"mutable","name":"a","nameLocation":"752:1:25","nodeType":"VariableDeclaration","scope":5686,"src":"745:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5644,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5647,"mutability":"mutable","name":"b","nameLocation":"762:1:25","nodeType":"VariableDeclaration","scope":5686,"src":"755:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5646,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:25"},"returnParameters":{"id":5651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5686,"src":"788:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5649,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:25"},"scope":5708,"src":"728:230:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5706,"nodeType":"Block","src":"1102:158:25","statements":[{"id":5705,"nodeType":"UncheckedBlock","src":"1112:142:25","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5696,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"1227:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":5697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:25","subExpression":{"id":5700,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"1241:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:25","trueExpression":{"id":5699,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"1236:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5694,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:25","typeDescriptions":{}}},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5693,"id":5704,"nodeType":"Return","src":"1212:31:25"}]}]},"documentation":{"id":5687,"nodeType":"StructuredDocumentation","src":"964:78:25","text":" @dev Returns the absolute unsigned value of a signed value."},"id":5707,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:25","nodeType":"FunctionDefinition","parameters":{"id":5690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5689,"mutability":"mutable","name":"n","nameLocation":"1067:1:25","nodeType":"VariableDeclaration","scope":5707,"src":"1060:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5688,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:25"},"returnParameters":{"id":5693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5707,"src":"1093:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5691,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:25"},"scope":5708,"src":"1047:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5709,"src":"215:1047:25","usedErrors":[],"usedEvents":[]}],"src":"109:1154:25"},"id":25},"contracts/MerkleLib.sol":{"ast":{"absolutePath":"contracts/MerkleLib.sol","exportedSymbols":{"HubPoolInterface":[9136],"IERC20":[3515],"MerkleLib":[5945],"MerkleProof":[4638],"SpokePoolInterface":[9421],"V3SpokePoolInterface":[9705]},"id":5946,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":5710,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:26"},{"absolutePath":"contracts/interfaces/SpokePoolInterface.sol","file":"./interfaces/SpokePoolInterface.sol","id":5711,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5946,"sourceUnit":9422,"src":"62:45:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/V3SpokePoolInterface.sol","file":"./interfaces/V3SpokePoolInterface.sol","id":5712,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5946,"sourceUnit":9706,"src":"108:47:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/HubPoolInterface.sol","file":"./interfaces/HubPoolInterface.sol","id":5713,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5946,"sourceUnit":9137,"src":"156:43:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":5714,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5946,"sourceUnit":4639,"src":"201:68:26","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleLib","contractDependencies":[],"contractKind":"library","documentation":{"id":5715,"nodeType":"StructuredDocumentation","src":"271:73:26","text":" @notice Library to help with merkle roots, proofs, and claims."},"fullyImplemented":true,"id":5945,"linearizedBaseContracts":[5945],"name":"MerkleLib","nameLocation":"353:9:26","nodeType":"ContractDefinition","nodes":[{"body":{"id":5741,"nodeType":"Block","src":"878:89:26","statements":[{"expression":{"arguments":[{"id":5731,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"914:5:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":5732,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"921:4:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":5736,"name":"rebalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5721,"src":"948:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_PoolRebalanceLeaf_$8921_memory_ptr","typeString":"struct HubPoolInterface.PoolRebalanceLeaf memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PoolRebalanceLeaf_$8921_memory_ptr","typeString":"struct HubPoolInterface.PoolRebalanceLeaf memory"}],"expression":{"id":5734,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"937:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"941:6:26","memberName":"encode","nodeType":"MemberAccess","src":"937:10:26","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"937:21:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5733,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"927:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"927:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5729,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"895:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$4638_$","typeString":"type(library MerkleProof)"}},"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"907:6:26","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":4134,"src":"895:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"895:65:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5728,"id":5740,"nodeType":"Return","src":"888:72:26"}]},"documentation":{"id":5716,"nodeType":"StructuredDocumentation","src":"369:325:26","text":" @notice Verifies that a repayment is contained within a merkle root.\n @param root the merkle root.\n @param rebalance the rebalance struct.\n @param proof the merkle proof.\n @return bool to signal if the pool rebalance proof correctly shows inclusion of the rebalance within the tree."},"id":5742,"implemented":true,"kind":"function","modifiers":[],"name":"verifyPoolRebalance","nameLocation":"708:19:26","nodeType":"FunctionDefinition","parameters":{"id":5725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5718,"mutability":"mutable","name":"root","nameLocation":"745:4:26","nodeType":"VariableDeclaration","scope":5742,"src":"737:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5717,"name":"bytes32","nodeType":"ElementaryTypeName","src":"737:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5721,"mutability":"mutable","name":"rebalance","nameLocation":"801:9:26","nodeType":"VariableDeclaration","scope":5742,"src":"759:51:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PoolRebalanceLeaf_$8921_memory_ptr","typeString":"struct HubPoolInterface.PoolRebalanceLeaf"},"typeName":{"id":5720,"nodeType":"UserDefinedTypeName","pathNode":{"id":5719,"name":"HubPoolInterface.PoolRebalanceLeaf","nameLocations":["759:16:26","776:17:26"],"nodeType":"IdentifierPath","referencedDeclaration":8921,"src":"759:34:26"},"referencedDeclaration":8921,"src":"759:34:26","typeDescriptions":{"typeIdentifier":"t_struct$_PoolRebalanceLeaf_$8921_storage_ptr","typeString":"struct HubPoolInterface.PoolRebalanceLeaf"}},"visibility":"internal"},{"constant":false,"id":5724,"mutability":"mutable","name":"proof","nameLocation":"837:5:26","nodeType":"VariableDeclaration","scope":5742,"src":"820:22:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5722,"name":"bytes32","nodeType":"ElementaryTypeName","src":"820:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5723,"nodeType":"ArrayTypeName","src":"820:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"727:121:26"},"returnParameters":{"id":5728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5727,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5742,"src":"872:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5726,"name":"bool","nodeType":"ElementaryTypeName","src":"872:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"871:6:26"},"scope":5945,"src":"699:268:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5768,"nodeType":"Block","src":"1477:86:26","statements":[{"expression":{"arguments":[{"id":5758,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"1513:5:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":5759,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5745,"src":"1520:4:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":5763,"name":"refund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"1547:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$9154_memory_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$9154_memory_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf memory"}],"expression":{"id":5761,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1536:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1540:6:26","memberName":"encode","nodeType":"MemberAccess","src":"1536:10:26","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1536:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5760,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1526:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1526:29:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5756,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"1494:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$4638_$","typeString":"type(library MerkleProof)"}},"id":5757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1506:6:26","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":4134,"src":"1494:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":5766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1494:62:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5755,"id":5767,"nodeType":"Return","src":"1487:69:26"}]},"documentation":{"id":5743,"nodeType":"StructuredDocumentation","src":"973:321:26","text":" @notice Verifies that a relayer refund is contained within a merkle root.\n @param root the merkle root.\n @param refund the refund struct.\n @param proof the merkle proof.\n @return bool to signal if the relayer refund proof correctly shows inclusion of the refund within the tree."},"id":5769,"implemented":true,"kind":"function","modifiers":[],"name":"verifyRelayerRefund","nameLocation":"1308:19:26","nodeType":"FunctionDefinition","parameters":{"id":5752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5745,"mutability":"mutable","name":"root","nameLocation":"1345:4:26","nodeType":"VariableDeclaration","scope":5769,"src":"1337:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5744,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1337:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5748,"mutability":"mutable","name":"refund","nameLocation":"1403:6:26","nodeType":"VariableDeclaration","scope":5769,"src":"1359:50:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$9154_memory_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf"},"typeName":{"id":5747,"nodeType":"UserDefinedTypeName","pathNode":{"id":5746,"name":"SpokePoolInterface.RelayerRefundLeaf","nameLocations":["1359:18:26","1378:17:26"],"nodeType":"IdentifierPath","referencedDeclaration":9154,"src":"1359:36:26"},"referencedDeclaration":9154,"src":"1359:36:26","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$9154_storage_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf"}},"visibility":"internal"},{"constant":false,"id":5751,"mutability":"mutable","name":"proof","nameLocation":"1436:5:26","nodeType":"VariableDeclaration","scope":5769,"src":"1419:22:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1419:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5750,"nodeType":"ArrayTypeName","src":"1419:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1327:120:26"},"returnParameters":{"id":5755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5769,"src":"1471:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5753,"name":"bool","nodeType":"ElementaryTypeName","src":"1471:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1470:6:26"},"scope":5945,"src":"1299:264:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5795,"nodeType":"Block","src":"2172:100:26","statements":[{"expression":{"arguments":[{"id":5785,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"2208:5:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":5786,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5772,"src":"2215:4:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":5790,"name":"slowRelayFulfillment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5775,"src":"2242:20:26","typeDescriptions":{"typeIdentifier":"t_struct$_SlowFill_$9183_memory_ptr","typeString":"struct SpokePoolInterface.SlowFill memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_SlowFill_$9183_memory_ptr","typeString":"struct SpokePoolInterface.SlowFill memory"}],"expression":{"id":5788,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2231:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2235:6:26","memberName":"encode","nodeType":"MemberAccess","src":"2231:10:26","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2231:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5787,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2221:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2221:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5783,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"2189:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$4638_$","typeString":"type(library MerkleProof)"}},"id":5784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2201:6:26","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":4134,"src":"2189:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":5793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2189:76:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5782,"id":5794,"nodeType":"Return","src":"2182:83:26"}]},"documentation":{"id":5770,"nodeType":"StructuredDocumentation","src":"1924:53:26","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"id":5796,"implemented":true,"kind":"function","modifiers":[],"name":"verifySlowRelayFulfillment","nameLocation":"1991:26:26","nodeType":"FunctionDefinition","parameters":{"id":5779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5772,"mutability":"mutable","name":"root","nameLocation":"2035:4:26","nodeType":"VariableDeclaration","scope":5796,"src":"2027:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5771,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2027:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5775,"mutability":"mutable","name":"slowRelayFulfillment","nameLocation":"2084:20:26","nodeType":"VariableDeclaration","scope":5796,"src":"2049:55:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SlowFill_$9183_memory_ptr","typeString":"struct SpokePoolInterface.SlowFill"},"typeName":{"id":5774,"nodeType":"UserDefinedTypeName","pathNode":{"id":5773,"name":"SpokePoolInterface.SlowFill","nameLocations":["2049:18:26","2068:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":9183,"src":"2049:27:26"},"referencedDeclaration":9183,"src":"2049:27:26","typeDescriptions":{"typeIdentifier":"t_struct$_SlowFill_$9183_storage_ptr","typeString":"struct SpokePoolInterface.SlowFill"}},"visibility":"internal"},{"constant":false,"id":5778,"mutability":"mutable","name":"proof","nameLocation":"2131:5:26","nodeType":"VariableDeclaration","scope":5796,"src":"2114:22:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2114:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5777,"nodeType":"ArrayTypeName","src":"2114:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"2017:125:26"},"returnParameters":{"id":5782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5796,"src":"2166:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5780,"name":"bool","nodeType":"ElementaryTypeName","src":"2166:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2165:6:26"},"scope":5945,"src":"1982:290:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5821,"nodeType":"Block","src":"2474:100:26","statements":[{"expression":{"arguments":[{"id":5811,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5804,"src":"2510:5:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":5812,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"2517:4:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":5816,"name":"slowRelayFulfillment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5801,"src":"2544:20:26","typeDescriptions":{"typeIdentifier":"t_struct$_V3SlowFill_$9464_memory_ptr","typeString":"struct V3SpokePoolInterface.V3SlowFill memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_V3SlowFill_$9464_memory_ptr","typeString":"struct V3SpokePoolInterface.V3SlowFill memory"}],"expression":{"id":5814,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2533:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2537:6:26","memberName":"encode","nodeType":"MemberAccess","src":"2533:10:26","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5813,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2523:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2523:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5809,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"2491:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$4638_$","typeString":"type(library MerkleProof)"}},"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2503:6:26","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":4134,"src":"2491:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":5819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2491:76:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5808,"id":5820,"nodeType":"Return","src":"2484:83:26"}]},"id":5822,"implemented":true,"kind":"function","modifiers":[],"name":"verifyV3SlowRelayFulfillment","nameLocation":"2287:28:26","nodeType":"FunctionDefinition","parameters":{"id":5805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5798,"mutability":"mutable","name":"root","nameLocation":"2333:4:26","nodeType":"VariableDeclaration","scope":5822,"src":"2325:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5797,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2325:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5801,"mutability":"mutable","name":"slowRelayFulfillment","nameLocation":"2386:20:26","nodeType":"VariableDeclaration","scope":5822,"src":"2347:59:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_V3SlowFill_$9464_memory_ptr","typeString":"struct V3SpokePoolInterface.V3SlowFill"},"typeName":{"id":5800,"nodeType":"UserDefinedTypeName","pathNode":{"id":5799,"name":"V3SpokePoolInterface.V3SlowFill","nameLocations":["2347:20:26","2368:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":9464,"src":"2347:31:26"},"referencedDeclaration":9464,"src":"2347:31:26","typeDescriptions":{"typeIdentifier":"t_struct$_V3SlowFill_$9464_storage_ptr","typeString":"struct V3SpokePoolInterface.V3SlowFill"}},"visibility":"internal"},{"constant":false,"id":5804,"mutability":"mutable","name":"proof","nameLocation":"2433:5:26","nodeType":"VariableDeclaration","scope":5822,"src":"2416:22:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5802,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2416:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5803,"nodeType":"ArrayTypeName","src":"2416:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"2315:129:26"},"returnParameters":{"id":5808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5822,"src":"2468:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5806,"name":"bool","nodeType":"ElementaryTypeName","src":"2468:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2467:6:26"},"scope":5945,"src":"2278:296:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5865,"nodeType":"Block","src":"3200:255:26","statements":[{"assignments":[5835],"declarations":[{"constant":false,"id":5835,"mutability":"mutable","name":"claimedWordIndex","nameLocation":"3218:16:26","nodeType":"VariableDeclaration","scope":5865,"src":"3210:24:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5834,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5839,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5836,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"3237:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"323536","id":5837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3245:3:26","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"3237:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3210:38:26"},{"assignments":[5841],"declarations":[{"constant":false,"id":5841,"mutability":"mutable","name":"claimedBitIndex","nameLocation":"3266:15:26","nodeType":"VariableDeclaration","scope":5865,"src":"3258:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5840,"name":"uint256","nodeType":"ElementaryTypeName","src":"3258:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5845,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5842,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"3284:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"323536","id":5843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3292:3:26","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"3284:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3258:37:26"},{"assignments":[5847],"declarations":[{"constant":false,"id":5847,"mutability":"mutable","name":"claimedWord","nameLocation":"3313:11:26","nodeType":"VariableDeclaration","scope":5865,"src":"3305:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5846,"name":"uint256","nodeType":"ElementaryTypeName","src":"3305:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5851,"initialValue":{"baseExpression":{"id":5848,"name":"claimedBitMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5827,"src":"3327:13:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5850,"indexExpression":{"id":5849,"name":"claimedWordIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"3341:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3327:31:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3305:53:26"},{"assignments":[5853],"declarations":[{"constant":false,"id":5853,"mutability":"mutable","name":"mask","nameLocation":"3376:4:26","nodeType":"VariableDeclaration","scope":5865,"src":"3368:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5852,"name":"uint256","nodeType":"ElementaryTypeName","src":"3368:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5858,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3384:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5855,"name":"claimedBitIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"3389:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3384:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5857,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3383:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3368:37:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5859,"name":"claimedWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5847,"src":"3422:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5860,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5853,"src":"3436:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3422:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5862,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5853,"src":"3444:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3422:26:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5833,"id":5864,"nodeType":"Return","src":"3415:33:26"}]},"documentation":{"id":5823,"nodeType":"StructuredDocumentation","src":"2755:326:26","text":" @notice Tests whether a claim is contained within a claimedBitMap mapping.\n @param claimedBitMap a simple uint256 mapping in storage used as a bitmap.\n @param index the index to check in the bitmap.\n @return bool indicating if the index within the claimedBitMap has been marked as claimed."},"id":5866,"implemented":true,"kind":"function","modifiers":[],"name":"isClaimed","nameLocation":"3095:9:26","nodeType":"FunctionDefinition","parameters":{"id":5830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5827,"mutability":"mutable","name":"claimedBitMap","nameLocation":"3141:13:26","nodeType":"VariableDeclaration","scope":5866,"src":"3105:49:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":5826,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5824,"name":"uint256","nodeType":"ElementaryTypeName","src":"3113:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3105:27:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5825,"name":"uint256","nodeType":"ElementaryTypeName","src":"3124:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":5829,"mutability":"mutable","name":"index","nameLocation":"3164:5:26","nodeType":"VariableDeclaration","scope":5866,"src":"3156:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5828,"name":"uint256","nodeType":"ElementaryTypeName","src":"3156:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3104:66:26"},"returnParameters":{"id":5833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5866,"src":"3194:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5831,"name":"bool","nodeType":"ElementaryTypeName","src":"3194:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3193:6:26"},"scope":5945,"src":"3086:369:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5901,"nodeType":"Block","src":"3768:202:26","statements":[{"assignments":[5877],"declarations":[{"constant":false,"id":5877,"mutability":"mutable","name":"claimedWordIndex","nameLocation":"3786:16:26","nodeType":"VariableDeclaration","scope":5901,"src":"3778:24:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5876,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5881,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5878,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"3805:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"323536","id":5879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3813:3:26","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"3805:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3778:38:26"},{"assignments":[5883],"declarations":[{"constant":false,"id":5883,"mutability":"mutable","name":"claimedBitIndex","nameLocation":"3834:15:26","nodeType":"VariableDeclaration","scope":5901,"src":"3826:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5882,"name":"uint256","nodeType":"ElementaryTypeName","src":"3826:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5887,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5884,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"3852:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"323536","id":5885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3860:3:26","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"3852:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3826:37:26"},{"expression":{"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5888,"name":"claimedBitMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5871,"src":"3873:13:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5890,"indexExpression":{"id":5889,"name":"claimedWordIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5877,"src":"3887:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3873:31:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5891,"name":"claimedBitMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5871,"src":"3907:13:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5893,"indexExpression":{"id":5892,"name":"claimedWordIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5877,"src":"3921:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3907:31:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3942:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5895,"name":"claimedBitIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5883,"src":"3947:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3942:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5897,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3941:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3907:56:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3873:90:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5900,"nodeType":"ExpressionStatement","src":"3873:90:26"}]},"documentation":{"id":5867,"nodeType":"StructuredDocumentation","src":"3461:207:26","text":" @notice Marks an index in a claimedBitMap as claimed.\n @param claimedBitMap a simple uint256 mapping in storage used as a bitmap.\n @param index the index to mark in the bitmap."},"id":5902,"implemented":true,"kind":"function","modifiers":[],"name":"setClaimed","nameLocation":"3682:10:26","nodeType":"FunctionDefinition","parameters":{"id":5874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5871,"mutability":"mutable","name":"claimedBitMap","nameLocation":"3729:13:26","nodeType":"VariableDeclaration","scope":5902,"src":"3693:49:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":5870,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5868,"name":"uint256","nodeType":"ElementaryTypeName","src":"3701:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3693:27:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5869,"name":"uint256","nodeType":"ElementaryTypeName","src":"3712:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":5873,"mutability":"mutable","name":"index","nameLocation":"3752:5:26","nodeType":"VariableDeclaration","scope":5902,"src":"3744:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5872,"name":"uint256","nodeType":"ElementaryTypeName","src":"3744:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3692:66:26"},"returnParameters":{"id":5875,"nodeType":"ParameterList","parameters":[],"src":"3768:0:26"},"scope":5945,"src":"3673:297:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5925,"nodeType":"Block","src":"4435:89:26","statements":[{"assignments":[5913],"declarations":[{"constant":false,"id":5913,"mutability":"mutable","name":"mask","nameLocation":"4453:4:26","nodeType":"VariableDeclaration","scope":5925,"src":"4445:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5912,"name":"uint256","nodeType":"ElementaryTypeName","src":"4445:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5918,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4461:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5915,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"4466:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4461:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5917,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4460:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4445:27:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5919,"name":"claimedBitMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"4489:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5920,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5913,"src":"4505:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4489:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5922,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5913,"src":"4513:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4489:28:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5911,"id":5924,"nodeType":"Return","src":"4482:35:26"}]},"documentation":{"id":5903,"nodeType":"StructuredDocumentation","src":"3976:368:26","text":" @notice Tests whether a claim is contained within a 1D claimedBitMap mapping.\n @param claimedBitMap a simple uint256 value, encoding a 1D bitmap.\n @param index the index to check in the bitmap. Uint8 type enforces that index can't be > 255.\n @return bool indicating if the index within the claimedBitMap has been marked as claimed."},"id":5926,"implemented":true,"kind":"function","modifiers":[],"name":"isClaimed1D","nameLocation":"4358:11:26","nodeType":"FunctionDefinition","parameters":{"id":5908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5905,"mutability":"mutable","name":"claimedBitMap","nameLocation":"4378:13:26","nodeType":"VariableDeclaration","scope":5926,"src":"4370:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5904,"name":"uint256","nodeType":"ElementaryTypeName","src":"4370:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5907,"mutability":"mutable","name":"index","nameLocation":"4399:5:26","nodeType":"VariableDeclaration","scope":5926,"src":"4393:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5906,"name":"uint8","nodeType":"ElementaryTypeName","src":"4393:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4369:36:26"},"returnParameters":{"id":5911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5926,"src":"4429:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5909,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:26"},"scope":5945,"src":"4349:175:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5943,"nodeType":"Block","src":"4983:52:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5936,"name":"claimedBitMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"5000:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5017:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5938,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"5022:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5017:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5940,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5016:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5000:28:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5935,"id":5942,"nodeType":"Return","src":"4993:35:26"}]},"documentation":{"id":5927,"nodeType":"StructuredDocumentation","src":"4530:358:26","text":" @notice Marks an index in a claimedBitMap as claimed.\n @param claimedBitMap a simple uint256 mapping in storage used as a bitmap. Uint8 type enforces that index\n can't be > 255.\n @param index the index to mark in the bitmap.\n @return uint256 representing the modified input claimedBitMap with the index set to true."},"id":5944,"implemented":true,"kind":"function","modifiers":[],"name":"setClaimed1D","nameLocation":"4902:12:26","nodeType":"FunctionDefinition","parameters":{"id":5932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5929,"mutability":"mutable","name":"claimedBitMap","nameLocation":"4923:13:26","nodeType":"VariableDeclaration","scope":5944,"src":"4915:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5928,"name":"uint256","nodeType":"ElementaryTypeName","src":"4915:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5931,"mutability":"mutable","name":"index","nameLocation":"4944:5:26","nodeType":"VariableDeclaration","scope":5944,"src":"4938:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5930,"name":"uint8","nodeType":"ElementaryTypeName","src":"4938:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4914:36:26"},"returnParameters":{"id":5935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5944,"src":"4974:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5933,"name":"uint256","nodeType":"ElementaryTypeName","src":"4974:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4973:9:26"},"scope":5945,"src":"4893:142:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5946,"src":"345:4692:26","usedErrors":[],"usedEvents":[]}],"src":"37:5001:26"},"id":26},"contracts/SpokePool.sol":{"ast":{"absolutePath":"contracts/SpokePool.sol","exportedSymbols":{"AcrossMessageHandler":[5986],"AddressLibUpgradeable":[10427],"AddressUpgradeable":[1705],"ECDSA":[4110],"ECDSAUpgradeable":[2452],"EIP712CrossChainUpgradeable":[10538],"ERC1967UpgradeUpgradeable":[486],"HubPoolInterface":[9136],"IBeaconUpgradeable":[496],"IERC1271":[3437],"IERC1822ProxiableUpgradeable":[162],"IERC1967Upgradeable":[152],"IERC20":[3515],"IERC20PermitUpgradeable":[999],"IERC20Upgradeable":[963],"Initializable":[665],"Math":[5603],"MathUpgradeable":[3318],"MerkleLib":[5945],"MerkleProof":[4638],"MultiCallerUpgradeable":[10632],"ReentrancyGuardUpgradeable":[885],"SafeERC20Upgradeable":[1375],"SignatureChecker":[4737],"SignedMath":[5708],"SignedMathUpgradeable":[3423],"SpokePool":[8866],"SpokePoolInterface":[9421],"StorageSlotUpgradeable":[1857],"Strings":[3744],"StringsUpgradeable":[2086],"UUPSUpgradeable":[801],"V3SpokePoolInterface":[9705],"WETH9Interface":[8898]},"id":8867,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":5947,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:27"},{"absolutePath":"contracts/MerkleLib.sol","file":"./MerkleLib.sol","id":5948,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8867,"sourceUnit":5946,"src":"62:25:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/external/interfaces/WETH9Interface.sol","file":"./external/interfaces/WETH9Interface.sol","id":5949,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8867,"sourceUnit":8899,"src":"88:50:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/SpokePoolInterface.sol","file":"./interfaces/SpokePoolInterface.sol","id":5950,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8867,"sourceUnit":9422,"src":"139:45:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/V3SpokePoolInterface.sol","file":"./interfaces/V3SpokePoolInterface.sol","id":5951,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8867,"sourceUnit":9706,"src":"185:47:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/upgradeable/MultiCallerUpgradeable.sol","file":"./upgradeable/MultiCallerUpgradeable.sol","id":5952,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8867,"sourceUnit":10633,"src":"233:50:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/upgradeable/EIP712CrossChainUpgradeable.sol","file":"./upgradeable/EIP712CrossChainUpgradeable.sol","id":5953,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8867,"sourceUnit":10539,"src":"284:55:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/upgradeable/AddressLibUpgradeable.sol","file":"./upgradeable/AddressLibUpgradeable.sol","id":5954,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8867,"sourceUnit":10428,"src":"340:49:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","id":5955,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8867,"sourceUnit":964,"src":"391:79:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol","id":5956,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8867,"sourceUnit":1376,"src":"471:88:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol","file":"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol","id":5957,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8867,"sourceUnit":4738,"src":"560:73:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":5958,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8867,"sourceUnit":802,"src":"634:77:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","id":5959,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8867,"sourceUnit":886,"src":"712:85:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"@openzeppelin/contracts/utils/math/SignedMath.sol","id":5960,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8867,"sourceUnit":5709,"src":"798:59:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"AcrossMessageHandler","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5986,"linearizedBaseContracts":[5986],"name":"AcrossMessageHandler","nameLocation":"986:20:27","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5961,"nodeType":"StructuredDocumentation","src":"1013:53:27","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"functionSelector":"0ea1f938","id":5974,"implemented":false,"kind":"function","modifiers":[],"name":"handleAcrossMessage","nameLocation":"1080:19:27","nodeType":"FunctionDefinition","parameters":{"id":5972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5963,"mutability":"mutable","name":"tokenSent","nameLocation":"1117:9:27","nodeType":"VariableDeclaration","scope":5974,"src":"1109:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5962,"name":"address","nodeType":"ElementaryTypeName","src":"1109:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5965,"mutability":"mutable","name":"amount","nameLocation":"1144:6:27","nodeType":"VariableDeclaration","scope":5974,"src":"1136:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5964,"name":"uint256","nodeType":"ElementaryTypeName","src":"1136:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5967,"mutability":"mutable","name":"fillCompleted","nameLocation":"1165:13:27","nodeType":"VariableDeclaration","scope":5974,"src":"1160:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5966,"name":"bool","nodeType":"ElementaryTypeName","src":"1160:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5969,"mutability":"mutable","name":"relayer","nameLocation":"1196:7:27","nodeType":"VariableDeclaration","scope":5974,"src":"1188:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5968,"name":"address","nodeType":"ElementaryTypeName","src":"1188:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5971,"mutability":"mutable","name":"message","nameLocation":"1226:7:27","nodeType":"VariableDeclaration","scope":5974,"src":"1213:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5970,"name":"bytes","nodeType":"ElementaryTypeName","src":"1213:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1099:140:27"},"returnParameters":{"id":5973,"nodeType":"ParameterList","parameters":[],"src":"1248:0:27"},"scope":5986,"src":"1071:178:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3a5be8cb","id":5985,"implemented":false,"kind":"function","modifiers":[],"name":"handleV3AcrossMessage","nameLocation":"1415:21:27","nodeType":"FunctionDefinition","parameters":{"id":5983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5976,"mutability":"mutable","name":"tokenSent","nameLocation":"1454:9:27","nodeType":"VariableDeclaration","scope":5985,"src":"1446:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5975,"name":"address","nodeType":"ElementaryTypeName","src":"1446:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5978,"mutability":"mutable","name":"amount","nameLocation":"1481:6:27","nodeType":"VariableDeclaration","scope":5985,"src":"1473:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5977,"name":"uint256","nodeType":"ElementaryTypeName","src":"1473:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5980,"mutability":"mutable","name":"relayer","nameLocation":"1505:7:27","nodeType":"VariableDeclaration","scope":5985,"src":"1497:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5979,"name":"address","nodeType":"ElementaryTypeName","src":"1497:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5982,"mutability":"mutable","name":"message","nameLocation":"1535:7:27","nodeType":"VariableDeclaration","scope":5985,"src":"1522:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5981,"name":"bytes","nodeType":"ElementaryTypeName","src":"1522:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1436:112:27"},"returnParameters":{"id":5984,"nodeType":"ParameterList","parameters":[],"src":"1557:0:27"},"scope":5986,"src":"1406:152:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":8867,"src":"976:584:27","usedErrors":[],"usedEvents":[]},{"abstract":true,"baseContracts":[{"baseName":{"id":5988,"name":"V3SpokePoolInterface","nameLocations":["2334:20:27"],"nodeType":"IdentifierPath","referencedDeclaration":9705,"src":"2334:20:27"},"id":5989,"nodeType":"InheritanceSpecifier","src":"2334:20:27"},{"baseName":{"id":5990,"name":"SpokePoolInterface","nameLocations":["2360:18:27"],"nodeType":"IdentifierPath","referencedDeclaration":9421,"src":"2360:18:27"},"id":5991,"nodeType":"InheritanceSpecifier","src":"2360:18:27"},{"baseName":{"id":5992,"name":"UUPSUpgradeable","nameLocations":["2384:15:27"],"nodeType":"IdentifierPath","referencedDeclaration":801,"src":"2384:15:27"},"id":5993,"nodeType":"InheritanceSpecifier","src":"2384:15:27"},{"baseName":{"id":5994,"name":"ReentrancyGuardUpgradeable","nameLocations":["2405:26:27"],"nodeType":"IdentifierPath","referencedDeclaration":885,"src":"2405:26:27"},"id":5995,"nodeType":"InheritanceSpecifier","src":"2405:26:27"},{"baseName":{"id":5996,"name":"MultiCallerUpgradeable","nameLocations":["2437:22:27"],"nodeType":"IdentifierPath","referencedDeclaration":10632,"src":"2437:22:27"},"id":5997,"nodeType":"InheritanceSpecifier","src":"2437:22:27"},{"baseName":{"id":5998,"name":"EIP712CrossChainUpgradeable","nameLocations":["2465:27:27"],"nodeType":"IdentifierPath","referencedDeclaration":10538,"src":"2465:27:27"},"id":5999,"nodeType":"InheritanceSpecifier","src":"2465:27:27"}],"canonicalName":"SpokePool","contractDependencies":[],"contractKind":"contract","documentation":{"id":5987,"nodeType":"StructuredDocumentation","src":"1562:736:27","text":" @title SpokePool\n @notice Base contract deployed on source and destination chains enabling depositors to transfer assets from source to\n destination. Deposit orders are fulfilled by off-chain relayers who also interact with this contract. Deposited\n tokens are locked on the source chain and relayers send the recipient the desired token currency and amount\n on the destination chain. Locked source chain tokens are later sent over the canonical token bridge to L1 HubPool.\n Relayers are refunded with destination tokens out of this contract after another off-chain actor, a \"data worker\",\n submits a proof that the relayer correctly submitted a relay on this SpokePool.\n @custom:security-contact bugs@across.to"},"fullyImplemented":false,"id":8866,"linearizedBaseContracts":[8866,10538,10632,885,801,486,152,162,665,9421,9705],"name":"SpokePool","nameLocation":"2317:9:27","nodeType":"ContractDefinition","nodes":[{"global":false,"id":6003,"libraryName":{"id":6000,"name":"SafeERC20Upgradeable","nameLocations":["2505:20:27"],"nodeType":"IdentifierPath","referencedDeclaration":1375,"src":"2505:20:27"},"nodeType":"UsingForDirective","src":"2499:49:27","typeName":{"id":6002,"nodeType":"UserDefinedTypeName","pathNode":{"id":6001,"name":"IERC20Upgradeable","nameLocations":["2530:17:27"],"nodeType":"IdentifierPath","referencedDeclaration":963,"src":"2530:17:27"},"referencedDeclaration":963,"src":"2530:17:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}}},{"global":false,"id":6006,"libraryName":{"id":6004,"name":"AddressLibUpgradeable","nameLocations":["2559:21:27"],"nodeType":"IdentifierPath","referencedDeclaration":10427,"src":"2559:21:27"},"nodeType":"UsingForDirective","src":"2553:40:27","typeName":{"id":6005,"name":"address","nodeType":"ElementaryTypeName","src":"2585:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"constant":false,"functionSelector":"5285e058","id":6008,"mutability":"mutable","name":"crossDomainAdmin","nameLocation":"2853:16:27","nodeType":"VariableDeclaration","scope":8866,"src":"2838:31:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6007,"name":"address","nodeType":"ElementaryTypeName","src":"2838:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"e1904402","id":6010,"mutability":"mutable","name":"hubPool","nameLocation":"3036:7:27","nodeType":"VariableDeclaration","scope":8866,"src":"3021:22:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6009,"name":"address","nodeType":"ElementaryTypeName","src":"3021:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":6013,"mutability":"mutable","name":"DEPRECATED_wrappedNativeToken","nameLocation":"3615:29:27","nodeType":"VariableDeclaration","scope":8866,"src":"3592:52:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$8898","typeString":"contract WETH9Interface"},"typeName":{"id":6012,"nodeType":"UserDefinedTypeName","pathNode":{"id":6011,"name":"WETH9Interface","nameLocations":["3592:14:27"],"nodeType":"IdentifierPath","referencedDeclaration":8898,"src":"3592:14:27"},"referencedDeclaration":8898,"src":"3592:14:27","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$8898","typeString":"contract WETH9Interface"}},"visibility":"private"},{"constant":false,"id":6015,"mutability":"mutable","name":"DEPRECATED_depositQuoteTimeBuffer","nameLocation":"3665:33:27","nodeType":"VariableDeclaration","scope":8866,"src":"3650:48:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6014,"name":"uint32","nodeType":"ElementaryTypeName","src":"3650:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"private"},{"constant":false,"functionSelector":"a1244c67","id":6017,"mutability":"mutable","name":"numberOfDeposits","nameLocation":"3814:16:27","nodeType":"VariableDeclaration","scope":8866,"src":"3800:30:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6016,"name":"uint32","nodeType":"ElementaryTypeName","src":"3800:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"public"},{"constant":false,"functionSelector":"dda52113","id":6019,"mutability":"mutable","name":"pausedFills","nameLocation":"3897:11:27","nodeType":"VariableDeclaration","scope":8866,"src":"3885:23:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6018,"name":"bool","nodeType":"ElementaryTypeName","src":"3885:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"6068d6cb","id":6021,"mutability":"mutable","name":"pausedDeposits","nameLocation":"3926:14:27","nodeType":"VariableDeclaration","scope":8866,"src":"3914:26:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6020,"name":"bool","nodeType":"ElementaryTypeName","src":"3914:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"ee2a53f8","id":6025,"mutability":"mutable","name":"rootBundles","nameLocation":"4059:11:27","nodeType":"VariableDeclaration","scope":8866,"src":"4039:31:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RootBundle_$9192_storage_$dyn_storage","typeString":"struct SpokePoolInterface.RootBundle[]"},"typeName":{"baseType":{"id":6023,"nodeType":"UserDefinedTypeName","pathNode":{"id":6022,"name":"RootBundle","nameLocations":["4039:10:27"],"nodeType":"IdentifierPath","referencedDeclaration":9192,"src":"4039:10:27"},"referencedDeclaration":9192,"src":"4039:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$9192_storage_ptr","typeString":"struct SpokePoolInterface.RootBundle"}},"id":6024,"nodeType":"ArrayTypeName","src":"4039:12:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RootBundle_$9192_storage_$dyn_storage_ptr","typeString":"struct SpokePoolInterface.RootBundle[]"}},"visibility":"public"},{"constant":false,"functionSelector":"5249fef1","id":6031,"mutability":"mutable","name":"enabledDepositRoutes","nameLocation":"4242:20:27","nodeType":"VariableDeclaration","scope":8866,"src":"4190:72:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"typeName":{"id":6030,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6026,"name":"address","nodeType":"ElementaryTypeName","src":"4198:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4190:44:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6029,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6027,"name":"uint256","nodeType":"ElementaryTypeName","src":"4217:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"4209:24:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6028,"name":"bool","nodeType":"ElementaryTypeName","src":"4228:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"id":6035,"mutability":"mutable","name":"DEPRECATED_relayFills","nameLocation":"4624:21:27","nodeType":"VariableDeclaration","scope":8866,"src":"4588:57:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":6034,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6032,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4596:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"4588:27:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6033,"name":"uint256","nodeType":"ElementaryTypeName","src":"4607:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":6039,"mutability":"mutable","name":"DEPRECATED_fillCounter","nameLocation":"5565:22:27","nodeType":"VariableDeclaration","scope":8866,"src":"5529:58:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":6038,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6036,"name":"address","nodeType":"ElementaryTypeName","src":"5537:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"5529:27:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6037,"name":"uint256","nodeType":"ElementaryTypeName","src":"5548:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":6043,"mutability":"mutable","name":"DEPRECATED_depositCounter","nameLocation":"5812:25:27","nodeType":"VariableDeclaration","scope":8866,"src":"5776:61:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":6042,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6040,"name":"address","nodeType":"ElementaryTypeName","src":"5784:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"5776:27:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6041,"name":"uint256","nodeType":"ElementaryTypeName","src":"5795:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":6047,"mutability":"mutable","name":"DEPRECATED_refundsRequested","nameLocation":"6120:27:27","nodeType":"VariableDeclaration","scope":8866,"src":"6084:63:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":6046,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6044,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6092:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"6084:27:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6045,"name":"uint256","nodeType":"ElementaryTypeName","src":"6103:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"functionSelector":"c35c83fc","id":6051,"mutability":"mutable","name":"fillStatuses","nameLocation":"6353:12:27","nodeType":"VariableDeclaration","scope":8866,"src":"6318:47:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":6050,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6048,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6326:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"6318:27:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6049,"name":"uint256","nodeType":"ElementaryTypeName","src":"6337:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"documentation":{"id":6052,"nodeType":"StructuredDocumentation","src":"7484:61:27","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"functionSelector":"17fcb39b","id":6055,"mutability":"immutable","name":"wrappedNativeToken","nameLocation":"7582:18:27","nodeType":"VariableDeclaration","scope":8866,"src":"7550:50:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$8898","typeString":"contract WETH9Interface"},"typeName":{"id":6054,"nodeType":"UserDefinedTypeName","pathNode":{"id":6053,"name":"WETH9Interface","nameLocations":["7550:14:27"],"nodeType":"IdentifierPath","referencedDeclaration":8898,"src":"7550:14:27"},"referencedDeclaration":8898,"src":"7550:14:27","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$8898","typeString":"contract WETH9Interface"}},"visibility":"public"},{"constant":false,"documentation":{"id":6056,"nodeType":"StructuredDocumentation","src":"7785:61:27","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"functionSelector":"57f6dcb8","id":6058,"mutability":"immutable","name":"depositQuoteTimeBuffer","nameLocation":"7875:22:27","nodeType":"VariableDeclaration","scope":8866,"src":"7851:46:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6057,"name":"uint32","nodeType":"ElementaryTypeName","src":"7851:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"public"},{"constant":false,"documentation":{"id":6059,"nodeType":"StructuredDocumentation","src":"8022:61:27","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"functionSelector":"079bd2c7","id":6061,"mutability":"immutable","name":"fillDeadlineBuffer","nameLocation":"8112:18:27","nodeType":"VariableDeclaration","scope":8866,"src":"8088:42:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6060,"name":"uint32","nodeType":"ElementaryTypeName","src":"8088:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"public"},{"constant":true,"functionSelector":"ddd224f1","id":6064,"mutability":"constant","name":"MAX_TRANSFER_SIZE","nameLocation":"8161:17:27","nodeType":"VariableDeclaration","scope":8866,"src":"8137:48:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6062,"name":"uint256","nodeType":"ElementaryTypeName","src":"8137:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653336","id":6063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8181:4:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(29 digits omitted)...0000"},"value":"1e36"},"visibility":"public"},{"constant":true,"documentation":{"id":6065,"nodeType":"StructuredDocumentation","src":"8498:53:27","text":"@custom:audit FOLLOWING VARIABLE TO BE DEPRECATED"},"functionSelector":"b5e1bf5f","id":6068,"mutability":"constant","name":"SLOW_FILL_MAX_TOKENS_TO_SEND","nameLocation":"8580:28:27","nodeType":"VariableDeclaration","scope":8866,"src":"8556:59:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6066,"name":"uint256","nodeType":"ElementaryTypeName","src":"8556:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653430","id":6067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8611:4:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(33 digits omitted)...0000"},"value":"1e40"},"visibility":"public"},{"constant":true,"documentation":{"id":6069,"nodeType":"StructuredDocumentation","src":"8668:53:27","text":"@custom:audit FOLLOWING VARIABLE TO BE DEPRECATED"},"functionSelector":"a78e4b60","id":6074,"mutability":"constant","name":"UPDATE_DEPOSIT_DETAILS_HASH","nameLocation":"8750:27:27","nodeType":"VariableDeclaration","scope":8866,"src":"8726:230:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6070,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8726:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5570646174654465706f73697444657461696c732875696e743332206465706f73697449642c75696e74323536206f726967696e436861696e49642c696e743634207570646174656452656c617965724665655063742c616464726573732075706461746564526563697069656e742c627974657320757064617465644d65737361676529","id":6072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8811:135:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_0e058f05b73c62ee68329d2c67c067aaae9a06503cc306378d144d0f0177882b","typeString":"literal_string \"UpdateDepositDetails(uint32 depositId,uint256 originChainId,int64 updatedRelayerFeePct,address updatedRecipient,bytes updatedMessage)\""},"value":"UpdateDepositDetails(uint32 depositId,uint256 originChainId,int64 updatedRelayerFeePct,address updatedRecipient,bytes updatedMessage)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0e058f05b73c62ee68329d2c67c067aaae9a06503cc306378d144d0f0177882b","typeString":"literal_string \"UpdateDepositDetails(uint32 depositId,uint256 originChainId,int64 updatedRelayerFeePct,address updatedRecipient,bytes updatedMessage)\""}],"id":6071,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8788:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8788:168:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"2cfc26c5","id":6079,"mutability":"constant","name":"UPDATE_V3_DEPOSIT_DETAILS_HASH","nameLocation":"8987:30:27","nodeType":"VariableDeclaration","scope":8866,"src":"8963:234:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6075,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8963:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5570646174654465706f73697444657461696c732875696e743332206465706f73697449642c75696e74323536206f726967696e436861696e49642c75696e7432353620757064617465644f7574707574416d6f756e742c616464726573732075706461746564526563697069656e742c627974657320757064617465644d65737361676529","id":6077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9051:136:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_152eb71524aef34d838ab76573c14b1ebfa5e385d9ab29d7cf5398daa2438bd9","typeString":"literal_string \"UpdateDepositDetails(uint32 depositId,uint256 originChainId,uint256 updatedOutputAmount,address updatedRecipient,bytes updatedMessage)\""},"value":"UpdateDepositDetails(uint32 depositId,uint256 originChainId,uint256 updatedOutputAmount,address updatedRecipient,bytes updatedMessage)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_152eb71524aef34d838ab76573c14b1ebfa5e385d9ab29d7cf5398daa2438bd9","typeString":"literal_string \"UpdateDepositDetails(uint32 depositId,uint256 originChainId,uint256 updatedOutputAmount,address updatedRecipient,bytes updatedMessage)\""}],"id":6076,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9028:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9028:169:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"15348e44","id":6082,"mutability":"constant","name":"EMPTY_REPAYMENT_CHAIN_ID","nameLocation":"9340:24:27","nodeType":"VariableDeclaration","scope":8866,"src":"9316:52:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6080,"name":"uint256","nodeType":"ElementaryTypeName","src":"9316:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":6081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9367:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":true,"functionSelector":"6bbbcd2e","id":6088,"mutability":"constant","name":"EMPTY_RELAYER","nameLocation":"9534:13:27","nodeType":"VariableDeclaration","scope":8866,"src":"9510:50:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6083,"name":"address","nodeType":"ElementaryTypeName","src":"9510:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"30","id":6086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9558:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9550:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6084,"name":"address","nodeType":"ElementaryTypeName","src":"9550:7:27","typeDescriptions":{}}},"id":6087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9550:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":true,"functionSelector":"ceb4c987","id":6095,"mutability":"constant","name":"INFINITE_FILL_DEADLINE","nameLocation":"10287:22:27","nodeType":"VariableDeclaration","scope":8866,"src":"10264:64:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6089,"name":"uint32","nodeType":"ElementaryTypeName","src":"10264:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"expression":{"arguments":[{"id":6092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10317:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6091,"name":"uint32","nodeType":"ElementaryTypeName","src":"10317:6:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6090,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10312:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10312:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10325:3:27","memberName":"max","nodeType":"MemberAccess","src":"10312:16:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"public"},{"anonymous":false,"eventSelector":"a9e8c42c9e7fca7f62755189a16b2f5314d43d8fb24e91ba54e6d65f9314e849","id":6099,"name":"SetXDomainAdmin","nameLocation":"10479:15:27","nodeType":"EventDefinition","parameters":{"id":6098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6097,"indexed":true,"mutability":"mutable","name":"newAdmin","nameLocation":"10511:8:27","nodeType":"VariableDeclaration","scope":6099,"src":"10495:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6096,"name":"address","nodeType":"ElementaryTypeName","src":"10495:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10494:26:27"},"src":"10473:48:27"},{"anonymous":false,"eventSelector":"1f17a88f67b0f49060a34bec1a4723a563620e6aa265eb640b5046dcee0759a0","id":6103,"name":"SetHubPool","nameLocation":"10532:10:27","nodeType":"EventDefinition","parameters":{"id":6102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6101,"indexed":true,"mutability":"mutable","name":"newHubPool","nameLocation":"10559:10:27","nodeType":"VariableDeclaration","scope":6103,"src":"10543:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6100,"name":"address","nodeType":"ElementaryTypeName","src":"10543:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10542:28:27"},"src":"10526:45:27"},{"anonymous":false,"eventSelector":"0a21fdd43d0ad0c62689ee7230a47309a050755bcc52eba00310add65297692a","id":6111,"name":"EnabledDepositRoute","nameLocation":"10582:19:27","nodeType":"EventDefinition","parameters":{"id":6110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6105,"indexed":true,"mutability":"mutable","name":"originToken","nameLocation":"10618:11:27","nodeType":"VariableDeclaration","scope":6111,"src":"10602:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6104,"name":"address","nodeType":"ElementaryTypeName","src":"10602:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6107,"indexed":true,"mutability":"mutable","name":"destinationChainId","nameLocation":"10647:18:27","nodeType":"VariableDeclaration","scope":6111,"src":"10631:34:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6106,"name":"uint256","nodeType":"ElementaryTypeName","src":"10631:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6109,"indexed":false,"mutability":"mutable","name":"enabled","nameLocation":"10672:7:27","nodeType":"VariableDeclaration","scope":6111,"src":"10667:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6108,"name":"bool","nodeType":"ElementaryTypeName","src":"10667:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10601:79:27"},"src":"10576:105:27"},{"anonymous":false,"documentation":{"id":6112,"nodeType":"StructuredDocumentation","src":"10686:50:27","text":"@custom:audit FOLLOWING EVENT TO BE DEPRECATED"},"eventSelector":"afc4df6845a4ab948b492800d3d8a25d538a102a2bc07cd01f1cfa097fddcff6","id":6134,"name":"FundsDeposited","nameLocation":"10747:14:27","nodeType":"EventDefinition","parameters":{"id":6133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6114,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"10779:6:27","nodeType":"VariableDeclaration","scope":6134,"src":"10771:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6113,"name":"uint256","nodeType":"ElementaryTypeName","src":"10771:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6116,"indexed":false,"mutability":"mutable","name":"originChainId","nameLocation":"10803:13:27","nodeType":"VariableDeclaration","scope":6134,"src":"10795:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6115,"name":"uint256","nodeType":"ElementaryTypeName","src":"10795:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6118,"indexed":true,"mutability":"mutable","name":"destinationChainId","nameLocation":"10842:18:27","nodeType":"VariableDeclaration","scope":6134,"src":"10826:34:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6117,"name":"uint256","nodeType":"ElementaryTypeName","src":"10826:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6120,"indexed":false,"mutability":"mutable","name":"relayerFeePct","nameLocation":"10876:13:27","nodeType":"VariableDeclaration","scope":6134,"src":"10870:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6119,"name":"int64","nodeType":"ElementaryTypeName","src":"10870:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":6122,"indexed":true,"mutability":"mutable","name":"depositId","nameLocation":"10914:9:27","nodeType":"VariableDeclaration","scope":6134,"src":"10899:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6121,"name":"uint32","nodeType":"ElementaryTypeName","src":"10899:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6124,"indexed":false,"mutability":"mutable","name":"quoteTimestamp","nameLocation":"10940:14:27","nodeType":"VariableDeclaration","scope":6134,"src":"10933:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6123,"name":"uint32","nodeType":"ElementaryTypeName","src":"10933:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6126,"indexed":false,"mutability":"mutable","name":"originToken","nameLocation":"10972:11:27","nodeType":"VariableDeclaration","scope":6134,"src":"10964:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6125,"name":"address","nodeType":"ElementaryTypeName","src":"10964:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6128,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"11001:9:27","nodeType":"VariableDeclaration","scope":6134,"src":"10993:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6127,"name":"address","nodeType":"ElementaryTypeName","src":"10993:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6130,"indexed":true,"mutability":"mutable","name":"depositor","nameLocation":"11036:9:27","nodeType":"VariableDeclaration","scope":6134,"src":"11020:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6129,"name":"address","nodeType":"ElementaryTypeName","src":"11020:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6132,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"11061:7:27","nodeType":"VariableDeclaration","scope":6134,"src":"11055:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6131,"name":"bytes","nodeType":"ElementaryTypeName","src":"11055:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10761:313:27"},"src":"10741:334:27"},{"anonymous":false,"documentation":{"id":6135,"nodeType":"StructuredDocumentation","src":"11080:50:27","text":"@custom:audit FOLLOWING EVENT TO BE DEPRECATED"},"eventSelector":"a6aa57bd282fc82378458de27be4eadfa791a0c7321c49562eeba8b2643dd566","id":6149,"name":"RequestedSpeedUpDeposit","nameLocation":"11141:23:27","nodeType":"EventDefinition","parameters":{"id":6148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6137,"indexed":false,"mutability":"mutable","name":"newRelayerFeePct","nameLocation":"11180:16:27","nodeType":"VariableDeclaration","scope":6149,"src":"11174:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6136,"name":"int64","nodeType":"ElementaryTypeName","src":"11174:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":6139,"indexed":true,"mutability":"mutable","name":"depositId","nameLocation":"11221:9:27","nodeType":"VariableDeclaration","scope":6149,"src":"11206:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6138,"name":"uint32","nodeType":"ElementaryTypeName","src":"11206:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6141,"indexed":true,"mutability":"mutable","name":"depositor","nameLocation":"11256:9:27","nodeType":"VariableDeclaration","scope":6149,"src":"11240:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6140,"name":"address","nodeType":"ElementaryTypeName","src":"11240:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6143,"indexed":false,"mutability":"mutable","name":"updatedRecipient","nameLocation":"11283:16:27","nodeType":"VariableDeclaration","scope":6149,"src":"11275:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6142,"name":"address","nodeType":"ElementaryTypeName","src":"11275:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6145,"indexed":false,"mutability":"mutable","name":"updatedMessage","nameLocation":"11315:14:27","nodeType":"VariableDeclaration","scope":6149,"src":"11309:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6144,"name":"bytes","nodeType":"ElementaryTypeName","src":"11309:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6147,"indexed":false,"mutability":"mutable","name":"depositorSignature","nameLocation":"11345:18:27","nodeType":"VariableDeclaration","scope":6149,"src":"11339:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6146,"name":"bytes","nodeType":"ElementaryTypeName","src":"11339:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11164:205:27"},"src":"11135:235:27"},{"anonymous":false,"documentation":{"id":6150,"nodeType":"StructuredDocumentation","src":"11375:50:27","text":"@custom:audit FOLLOWING EVENT TO BE DEPRECATED"},"eventSelector":"8ab9dc6c19fe88e69bc70221b339c84332752fdd49591b7c51e66bae3947b73c","id":6183,"name":"FilledRelay","nameLocation":"11436:11:27","nodeType":"EventDefinition","parameters":{"id":6182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6152,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"11465:6:27","nodeType":"VariableDeclaration","scope":6183,"src":"11457:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6151,"name":"uint256","nodeType":"ElementaryTypeName","src":"11457:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6154,"indexed":false,"mutability":"mutable","name":"totalFilledAmount","nameLocation":"11489:17:27","nodeType":"VariableDeclaration","scope":6183,"src":"11481:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6153,"name":"uint256","nodeType":"ElementaryTypeName","src":"11481:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6156,"indexed":false,"mutability":"mutable","name":"fillAmount","nameLocation":"11524:10:27","nodeType":"VariableDeclaration","scope":6183,"src":"11516:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6155,"name":"uint256","nodeType":"ElementaryTypeName","src":"11516:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6158,"indexed":false,"mutability":"mutable","name":"repaymentChainId","nameLocation":"11552:16:27","nodeType":"VariableDeclaration","scope":6183,"src":"11544:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6157,"name":"uint256","nodeType":"ElementaryTypeName","src":"11544:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6160,"indexed":true,"mutability":"mutable","name":"originChainId","nameLocation":"11594:13:27","nodeType":"VariableDeclaration","scope":6183,"src":"11578:29:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6159,"name":"uint256","nodeType":"ElementaryTypeName","src":"11578:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6162,"indexed":false,"mutability":"mutable","name":"destinationChainId","nameLocation":"11625:18:27","nodeType":"VariableDeclaration","scope":6183,"src":"11617:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6161,"name":"uint256","nodeType":"ElementaryTypeName","src":"11617:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6164,"indexed":false,"mutability":"mutable","name":"relayerFeePct","nameLocation":"11659:13:27","nodeType":"VariableDeclaration","scope":6183,"src":"11653:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6163,"name":"int64","nodeType":"ElementaryTypeName","src":"11653:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":6166,"indexed":false,"mutability":"mutable","name":"realizedLpFeePct","nameLocation":"11688:16:27","nodeType":"VariableDeclaration","scope":6183,"src":"11682:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6165,"name":"int64","nodeType":"ElementaryTypeName","src":"11682:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":6168,"indexed":true,"mutability":"mutable","name":"depositId","nameLocation":"11729:9:27","nodeType":"VariableDeclaration","scope":6183,"src":"11714:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6167,"name":"uint32","nodeType":"ElementaryTypeName","src":"11714:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6170,"indexed":false,"mutability":"mutable","name":"destinationToken","nameLocation":"11756:16:27","nodeType":"VariableDeclaration","scope":6183,"src":"11748:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6169,"name":"address","nodeType":"ElementaryTypeName","src":"11748:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6172,"indexed":false,"mutability":"mutable","name":"relayer","nameLocation":"11790:7:27","nodeType":"VariableDeclaration","scope":6183,"src":"11782:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6171,"name":"address","nodeType":"ElementaryTypeName","src":"11782:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6174,"indexed":true,"mutability":"mutable","name":"depositor","nameLocation":"11823:9:27","nodeType":"VariableDeclaration","scope":6183,"src":"11807:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6173,"name":"address","nodeType":"ElementaryTypeName","src":"11807:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6176,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"11850:9:27","nodeType":"VariableDeclaration","scope":6183,"src":"11842:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6175,"name":"address","nodeType":"ElementaryTypeName","src":"11842:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6178,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"11875:7:27","nodeType":"VariableDeclaration","scope":6183,"src":"11869:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6177,"name":"bytes","nodeType":"ElementaryTypeName","src":"11869:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6181,"indexed":false,"mutability":"mutable","name":"updatableRelayData","nameLocation":"11911:18:27","nodeType":"VariableDeclaration","scope":6183,"src":"11892:37:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecutionInfo_$6270_memory_ptr","typeString":"struct SpokePool.RelayExecutionInfo"},"typeName":{"id":6180,"nodeType":"UserDefinedTypeName","pathNode":{"id":6179,"name":"RelayExecutionInfo","nameLocations":["11892:18:27"],"nodeType":"IdentifierPath","referencedDeclaration":6270,"src":"11892:18:27"},"referencedDeclaration":6270,"src":"11892:18:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecutionInfo_$6270_storage_ptr","typeString":"struct SpokePool.RelayExecutionInfo"}},"visibility":"internal"}],"src":"11447:488:27"},"src":"11430:506:27"},{"anonymous":false,"eventSelector":"c86ba04c55bc5eb2f2876b91c438849a296dbec7b08751c3074d92e04f0a77af","id":6191,"name":"RelayedRootBundle","nameLocation":"11947:17:27","nodeType":"EventDefinition","parameters":{"id":6190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6185,"indexed":true,"mutability":"mutable","name":"rootBundleId","nameLocation":"11989:12:27","nodeType":"VariableDeclaration","scope":6191,"src":"11974:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6184,"name":"uint32","nodeType":"ElementaryTypeName","src":"11974:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6187,"indexed":true,"mutability":"mutable","name":"relayerRefundRoot","nameLocation":"12027:17:27","nodeType":"VariableDeclaration","scope":6191,"src":"12011:33:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6186,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12011:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6189,"indexed":true,"mutability":"mutable","name":"slowRelayRoot","nameLocation":"12070:13:27","nodeType":"VariableDeclaration","scope":6191,"src":"12054:29:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12054:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11964:125:27"},"src":"11941:149:27"},{"anonymous":false,"eventSelector":"f8bd640004bcec1b89657020f561d0b070cbdf662d0b158db9dccb0a8301bfab","id":6211,"name":"ExecutedRelayerRefundRoot","nameLocation":"12101:25:27","nodeType":"EventDefinition","parameters":{"id":6210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6193,"indexed":false,"mutability":"mutable","name":"amountToReturn","nameLocation":"12144:14:27","nodeType":"VariableDeclaration","scope":6211,"src":"12136:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6192,"name":"uint256","nodeType":"ElementaryTypeName","src":"12136:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6195,"indexed":true,"mutability":"mutable","name":"chainId","nameLocation":"12184:7:27","nodeType":"VariableDeclaration","scope":6211,"src":"12168:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6194,"name":"uint256","nodeType":"ElementaryTypeName","src":"12168:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6198,"indexed":false,"mutability":"mutable","name":"refundAmounts","nameLocation":"12211:13:27","nodeType":"VariableDeclaration","scope":6211,"src":"12201:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6196,"name":"uint256","nodeType":"ElementaryTypeName","src":"12201:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6197,"nodeType":"ArrayTypeName","src":"12201:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6200,"indexed":true,"mutability":"mutable","name":"rootBundleId","nameLocation":"12249:12:27","nodeType":"VariableDeclaration","scope":6211,"src":"12234:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6199,"name":"uint32","nodeType":"ElementaryTypeName","src":"12234:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6202,"indexed":true,"mutability":"mutable","name":"leafId","nameLocation":"12286:6:27","nodeType":"VariableDeclaration","scope":6211,"src":"12271:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6201,"name":"uint32","nodeType":"ElementaryTypeName","src":"12271:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6204,"indexed":false,"mutability":"mutable","name":"l2TokenAddress","nameLocation":"12310:14:27","nodeType":"VariableDeclaration","scope":6211,"src":"12302:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6203,"name":"address","nodeType":"ElementaryTypeName","src":"12302:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6207,"indexed":false,"mutability":"mutable","name":"refundAddresses","nameLocation":"12344:15:27","nodeType":"VariableDeclaration","scope":6211,"src":"12334:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6205,"name":"address","nodeType":"ElementaryTypeName","src":"12334:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6206,"nodeType":"ArrayTypeName","src":"12334:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6209,"indexed":false,"mutability":"mutable","name":"caller","nameLocation":"12377:6:27","nodeType":"VariableDeclaration","scope":6211,"src":"12369:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6208,"name":"address","nodeType":"ElementaryTypeName","src":"12369:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12126:263:27"},"src":"12095:295:27"},{"anonymous":false,"eventSelector":"828fc203220356df8f072a91681caee7d5c75095e2a95e80ed5a14b384697f71","id":6223,"name":"TokensBridged","nameLocation":"12401:13:27","nodeType":"EventDefinition","parameters":{"id":6222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6213,"indexed":false,"mutability":"mutable","name":"amountToReturn","nameLocation":"12432:14:27","nodeType":"VariableDeclaration","scope":6223,"src":"12424:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6212,"name":"uint256","nodeType":"ElementaryTypeName","src":"12424:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6215,"indexed":true,"mutability":"mutable","name":"chainId","nameLocation":"12472:7:27","nodeType":"VariableDeclaration","scope":6223,"src":"12456:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6214,"name":"uint256","nodeType":"ElementaryTypeName","src":"12456:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6217,"indexed":true,"mutability":"mutable","name":"leafId","nameLocation":"12504:6:27","nodeType":"VariableDeclaration","scope":6223,"src":"12489:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6216,"name":"uint32","nodeType":"ElementaryTypeName","src":"12489:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6219,"indexed":true,"mutability":"mutable","name":"l2TokenAddress","nameLocation":"12536:14:27","nodeType":"VariableDeclaration","scope":6223,"src":"12520:30:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6218,"name":"address","nodeType":"ElementaryTypeName","src":"12520:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6221,"indexed":false,"mutability":"mutable","name":"caller","nameLocation":"12568:6:27","nodeType":"VariableDeclaration","scope":6223,"src":"12560:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6220,"name":"address","nodeType":"ElementaryTypeName","src":"12560:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12414:166:27"},"src":"12395:186:27"},{"anonymous":false,"eventSelector":"3569b846531b754c99cb80df3f49cd72fa6fe106aaee5ab8e0caf35a9d7ce88d","id":6227,"name":"EmergencyDeleteRootBundle","nameLocation":"12592:25:27","nodeType":"EventDefinition","parameters":{"id":6226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6225,"indexed":true,"mutability":"mutable","name":"rootBundleId","nameLocation":"12634:12:27","nodeType":"VariableDeclaration","scope":6227,"src":"12618:28:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6224,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:30:27"},"src":"12586:62:27"},{"anonymous":false,"eventSelector":"e88463c2f254e2b070013a2dc7ee1e099f9bc00534cbdf03af551dc26ae49219","id":6231,"name":"PausedDeposits","nameLocation":"12659:14:27","nodeType":"EventDefinition","parameters":{"id":6230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6229,"indexed":false,"mutability":"mutable","name":"isPaused","nameLocation":"12679:8:27","nodeType":"VariableDeclaration","scope":6231,"src":"12674:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6228,"name":"bool","nodeType":"ElementaryTypeName","src":"12674:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12673:15:27"},"src":"12653:36:27"},{"anonymous":false,"eventSelector":"2d5b62420992e5a4afce0e77742636ca2608ef58289fd2e1baa5161ef6e7e41e","id":6235,"name":"PausedFills","nameLocation":"12700:11:27","nodeType":"EventDefinition","parameters":{"id":6234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6233,"indexed":false,"mutability":"mutable","name":"isPaused","nameLocation":"12717:8:27","nodeType":"VariableDeclaration","scope":6235,"src":"12712:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6232,"name":"bool","nodeType":"ElementaryTypeName","src":"12712:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12711:15:27"},"src":"12694:33:27"},{"canonicalName":"SpokePool.RelayExecution","documentation":{"id":6236,"nodeType":"StructuredDocumentation","src":"13710:51:27","text":"@custom:audit FOLLOWING STRUCT TO BE DEPRECATED"},"id":6258,"members":[{"constant":false,"id":6239,"mutability":"mutable","name":"relay","nameLocation":"13808:5:27","nodeType":"VariableDeclaration","scope":6258,"src":"13798:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_storage_ptr","typeString":"struct SpokePoolInterface.RelayData"},"typeName":{"id":6238,"nodeType":"UserDefinedTypeName","pathNode":{"id":6237,"name":"RelayData","nameLocations":["13798:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":9176,"src":"13798:9:27"},"referencedDeclaration":9176,"src":"13798:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_storage_ptr","typeString":"struct SpokePoolInterface.RelayData"}},"visibility":"internal"},{"constant":false,"id":6241,"mutability":"mutable","name":"relayHash","nameLocation":"13831:9:27","nodeType":"VariableDeclaration","scope":6258,"src":"13823:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6240,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13823:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6243,"mutability":"mutable","name":"updatedRelayerFeePct","nameLocation":"13856:20:27","nodeType":"VariableDeclaration","scope":6258,"src":"13850:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6242,"name":"int64","nodeType":"ElementaryTypeName","src":"13850:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":6245,"mutability":"mutable","name":"updatedRecipient","nameLocation":"13894:16:27","nodeType":"VariableDeclaration","scope":6258,"src":"13886:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6244,"name":"address","nodeType":"ElementaryTypeName","src":"13886:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6247,"mutability":"mutable","name":"updatedMessage","nameLocation":"13926:14:27","nodeType":"VariableDeclaration","scope":6258,"src":"13920:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":6246,"name":"bytes","nodeType":"ElementaryTypeName","src":"13920:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6249,"mutability":"mutable","name":"repaymentChainId","nameLocation":"13958:16:27","nodeType":"VariableDeclaration","scope":6258,"src":"13950:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6248,"name":"uint256","nodeType":"ElementaryTypeName","src":"13950:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6251,"mutability":"mutable","name":"maxTokensToSend","nameLocation":"13992:15:27","nodeType":"VariableDeclaration","scope":6258,"src":"13984:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6250,"name":"uint256","nodeType":"ElementaryTypeName","src":"13984:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6253,"mutability":"mutable","name":"maxCount","nameLocation":"14025:8:27","nodeType":"VariableDeclaration","scope":6258,"src":"14017:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6252,"name":"uint256","nodeType":"ElementaryTypeName","src":"14017:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6255,"mutability":"mutable","name":"slowFill","nameLocation":"14048:8:27","nodeType":"VariableDeclaration","scope":6258,"src":"14043:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6254,"name":"bool","nodeType":"ElementaryTypeName","src":"14043:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6257,"mutability":"mutable","name":"payoutAdjustmentPct","nameLocation":"14073:19:27","nodeType":"VariableDeclaration","scope":6258,"src":"14066:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6256,"name":"int256","nodeType":"ElementaryTypeName","src":"14066:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"RelayExecution","nameLocation":"13773:14:27","nodeType":"StructDefinition","scope":8866,"src":"13766:333:27","visibility":"public"},{"canonicalName":"SpokePool.RelayExecutionInfo","documentation":{"id":6259,"nodeType":"StructuredDocumentation","src":"14630:51:27","text":"@custom:audit FOLLOWING STRUCT TO BE DEPRECATED"},"id":6270,"members":[{"constant":false,"id":6261,"mutability":"mutable","name":"recipient","nameLocation":"14730:9:27","nodeType":"VariableDeclaration","scope":6270,"src":"14722:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6260,"name":"address","nodeType":"ElementaryTypeName","src":"14722:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6263,"mutability":"mutable","name":"message","nameLocation":"14755:7:27","nodeType":"VariableDeclaration","scope":6270,"src":"14749:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":6262,"name":"bytes","nodeType":"ElementaryTypeName","src":"14749:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6265,"mutability":"mutable","name":"relayerFeePct","nameLocation":"14778:13:27","nodeType":"VariableDeclaration","scope":6270,"src":"14772:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6264,"name":"int64","nodeType":"ElementaryTypeName","src":"14772:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":6267,"mutability":"mutable","name":"isSlowRelay","nameLocation":"14806:11:27","nodeType":"VariableDeclaration","scope":6270,"src":"14801:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6266,"name":"bool","nodeType":"ElementaryTypeName","src":"14801:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6269,"mutability":"mutable","name":"payoutAdjustmentPct","nameLocation":"14834:19:27","nodeType":"VariableDeclaration","scope":6270,"src":"14827:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6268,"name":"int256","nodeType":"ElementaryTypeName","src":"14827:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"RelayExecutionInfo","nameLocation":"14693:18:27","nodeType":"StructDefinition","scope":8866,"src":"14686:174:27","visibility":"public"},{"body":{"id":6297,"nodeType":"Block","src":"16323:220:27","statements":[{"expression":{"id":6284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6280,"name":"wrappedNativeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"16333:18:27","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$8898","typeString":"contract WETH9Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6282,"name":"_wrappedNativeTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6273,"src":"16369:26:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6281,"name":"WETH9Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8898,"src":"16354:14:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WETH9Interface_$8898_$","typeString":"type(contract WETH9Interface)"}},"id":6283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16354:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$8898","typeString":"contract WETH9Interface"}},"src":"16333:63:27","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$8898","typeString":"contract WETH9Interface"}},"id":6285,"nodeType":"ExpressionStatement","src":"16333:63:27"},{"expression":{"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6286,"name":"depositQuoteTimeBuffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"16406:22:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6287,"name":"_depositQuoteTimeBuffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6275,"src":"16431:23:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"16406:48:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":6289,"nodeType":"ExpressionStatement","src":"16406:48:27"},{"expression":{"id":6292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6290,"name":"fillDeadlineBuffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6061,"src":"16464:18:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6291,"name":"_fillDeadlineBuffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"16485:19:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"16464:40:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":6293,"nodeType":"ExpressionStatement","src":"16464:40:27"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6294,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"16514:20:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16514:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6296,"nodeType":"ExpressionStatement","src":"16514:22:27"}]},"documentation":{"id":6271,"nodeType":"StructuredDocumentation","src":"16132:48:27","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":6298,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6273,"mutability":"mutable","name":"_wrappedNativeTokenAddress","nameLocation":"16214:26:27","nodeType":"VariableDeclaration","scope":6298,"src":"16206:34:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6272,"name":"address","nodeType":"ElementaryTypeName","src":"16206:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6275,"mutability":"mutable","name":"_depositQuoteTimeBuffer","nameLocation":"16257:23:27","nodeType":"VariableDeclaration","scope":6298,"src":"16250:30:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6274,"name":"uint32","nodeType":"ElementaryTypeName","src":"16250:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6277,"mutability":"mutable","name":"_fillDeadlineBuffer","nameLocation":"16297:19:27","nodeType":"VariableDeclaration","scope":6298,"src":"16290:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6276,"name":"uint32","nodeType":"ElementaryTypeName","src":"16290:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"16196:126:27"},"returnParameters":{"id":6279,"nodeType":"ParameterList","parameters":[],"src":"16323:0:27"},"scope":8866,"src":"16185:358:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6333,"nodeType":"Block","src":"17062:246:27","statements":[{"expression":{"id":6312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6310,"name":"numberOfDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"17072:16:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6311,"name":"_initialDepositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6301,"src":"17091:17:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"17072:36:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":6313,"nodeType":"ExpressionStatement","src":"17072:36:27"},{"expression":{"arguments":[{"hexValue":"4143524f53532d5632","id":6315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17132:11:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec4e9f157c7c27788e0dfbb20798d3f8c8066985256c4d077bdccf4022c0eb66","typeString":"literal_string \"ACROSS-V2\""},"value":"ACROSS-V2"},{"hexValue":"312e302e30","id":6316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17145:7:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c","typeString":"literal_string \"1.0.0\""},"value":"1.0.0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ec4e9f157c7c27788e0dfbb20798d3f8c8066985256c4d077bdccf4022c0eb66","typeString":"literal_string \"ACROSS-V2\""},{"typeIdentifier":"t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c","typeString":"literal_string \"1.0.0\""}],"id":6314,"name":"__EIP712_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10459,"src":"17118:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":6317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17118:35:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6318,"nodeType":"ExpressionStatement","src":"17118:35:27"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6319,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"17163:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17163:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6321,"nodeType":"ExpressionStatement","src":"17163:24:27"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6322,"name":"__ReentrancyGuard_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"17197:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17197:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6324,"nodeType":"ExpressionStatement","src":"17197:24:27"},{"expression":{"arguments":[{"id":6326,"name":"_crossDomainAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6303,"src":"17252:17:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6325,"name":"_setCrossDomainAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"17231:20:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17231:39:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6328,"nodeType":"ExpressionStatement","src":"17231:39:27"},{"expression":{"arguments":[{"id":6330,"name":"_hubPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6305,"src":"17292:8:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6329,"name":"_setHubPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7923,"src":"17280:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17280:21:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6332,"nodeType":"ExpressionStatement","src":"17280:21:27"}]},"documentation":{"id":6299,"nodeType":"StructuredDocumentation","src":"16549:357:27","text":" @notice Construct the base SpokePool.\n @param _initialDepositId Starting deposit ID. Set to 0 unless this is a re-deployment in order to mitigate\n relay hash collisions.\n @param _crossDomainAdmin Cross domain admin to set. Can be changed by admin.\n @param _hubPool Hub pool address to set. Can be changed by admin."},"functionSelector":"979f2bc2","id":6334,"implemented":true,"kind":"function","modifiers":[{"id":6308,"kind":"modifierInvocation","modifierName":{"id":6307,"name":"onlyInitializing","nameLocations":["17045:16:27"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"17045:16:27"},"nodeType":"ModifierInvocation","src":"17045:16:27"}],"name":"__SpokePool_init","nameLocation":"16920:16:27","nodeType":"FunctionDefinition","parameters":{"id":6306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6301,"mutability":"mutable","name":"_initialDepositId","nameLocation":"16953:17:27","nodeType":"VariableDeclaration","scope":6334,"src":"16946:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6300,"name":"uint32","nodeType":"ElementaryTypeName","src":"16946:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6303,"mutability":"mutable","name":"_crossDomainAdmin","nameLocation":"16988:17:27","nodeType":"VariableDeclaration","scope":6334,"src":"16980:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6302,"name":"address","nodeType":"ElementaryTypeName","src":"16980:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6305,"mutability":"mutable","name":"_hubPool","nameLocation":"17023:8:27","nodeType":"VariableDeclaration","scope":6334,"src":"17015:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6304,"name":"address","nodeType":"ElementaryTypeName","src":"17015:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16936:101:27"},"returnParameters":{"id":6309,"nodeType":"ParameterList","parameters":[],"src":"17062:0:27"},"scope":8866,"src":"16911:397:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6341,"nodeType":"Block","src":"17722:49:27","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6337,"name":"_requireAdminSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8857,"src":"17732:19:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17732:21:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6339,"nodeType":"ExpressionStatement","src":"17732:21:27"},{"id":6340,"nodeType":"PlaceholderStatement","src":"17763:1:27"}]},"documentation":{"id":6335,"nodeType":"StructuredDocumentation","src":"17454:242:27","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n @dev This should be set to cross domain admin for specific SpokePool."},"id":6342,"name":"onlyAdmin","nameLocation":"17710:9:27","nodeType":"ModifierDefinition","parameters":{"id":6336,"nodeType":"ParameterList","parameters":[],"src":"17719:2:27"},"src":"17701:70:27","virtual":false,"visibility":"internal"},{"body":{"id":6351,"nodeType":"Block","src":"17805:71:27","statements":[{"expression":{"arguments":[{"id":6346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"17823:15:27","subExpression":{"id":6345,"name":"pausedDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6021,"src":"17824:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506175736564206465706f73697473","id":6347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17840:17:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_db499b6d0d37c204c1e7ed0793d3ba54ffb77de93583285e43702f614089cdf5","typeString":"literal_string \"Paused deposits\""},"value":"Paused deposits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_db499b6d0d37c204c1e7ed0793d3ba54ffb77de93583285e43702f614089cdf5","typeString":"literal_string \"Paused deposits\""}],"id":6344,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17815:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17815:43:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6349,"nodeType":"ExpressionStatement","src":"17815:43:27"},{"id":6350,"nodeType":"PlaceholderStatement","src":"17868:1:27"}]},"id":6352,"name":"unpausedDeposits","nameLocation":"17786:16:27","nodeType":"ModifierDefinition","parameters":{"id":6343,"nodeType":"ParameterList","parameters":[],"src":"17802:2:27"},"src":"17777:99:27","virtual":false,"visibility":"internal"},{"body":{"id":6361,"nodeType":"Block","src":"17907:65:27","statements":[{"expression":{"arguments":[{"id":6356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"17925:12:27","subExpression":{"id":6355,"name":"pausedFills","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"17926:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757365642066696c6c73","id":6357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17939:14:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_48775999d7f28bf475b647b2c160c9ab51356f8a399041d25f080ab7d93fbd46","typeString":"literal_string \"Paused fills\""},"value":"Paused fills"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48775999d7f28bf475b647b2c160c9ab51356f8a399041d25f080ab7d93fbd46","typeString":"literal_string \"Paused fills\""}],"id":6354,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17917:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17917:37:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6359,"nodeType":"ExpressionStatement","src":"17917:37:27"},{"id":6360,"nodeType":"PlaceholderStatement","src":"17964:1:27"}]},"id":6362,"name":"unpausedFills","nameLocation":"17891:13:27","nodeType":"ModifierDefinition","parameters":{"id":6353,"nodeType":"ParameterList","parameters":[],"src":"17904:2:27"},"src":"17882:90:27","virtual":false,"visibility":"internal"},{"baseFunctions":[795],"body":{"id":6370,"nodeType":"Block","src":"18265:2:27","statements":[]},"id":6371,"implemented":true,"kind":"function","modifiers":[{"id":6368,"kind":"modifierInvocation","modifierName":{"id":6367,"name":"onlyAdmin","nameLocations":["18255:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":6342,"src":"18255:9:27"},"nodeType":"ModifierInvocation","src":"18255:9:27"}],"name":"_authorizeUpgrade","nameLocation":"18192:17:27","nodeType":"FunctionDefinition","overrides":{"id":6366,"nodeType":"OverrideSpecifier","overrides":[],"src":"18246:8:27"},"parameters":{"id":6365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6364,"mutability":"mutable","name":"newImplementation","nameLocation":"18218:17:27","nodeType":"VariableDeclaration","scope":6371,"src":"18210:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6363,"name":"address","nodeType":"ElementaryTypeName","src":"18210:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18209:27:27"},"returnParameters":{"id":6369,"nodeType":"ParameterList","parameters":[],"src":"18265:0:27"},"scope":8866,"src":"18183:84:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[9216],"body":{"id":6390,"nodeType":"Block","src":"18743:75:27","statements":[{"expression":{"id":6384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6382,"name":"pausedDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6021,"src":"18753:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6383,"name":"pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"18770:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18753:22:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6385,"nodeType":"ExpressionStatement","src":"18753:22:27"},{"eventCall":{"arguments":[{"id":6387,"name":"pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"18805:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6386,"name":"PausedDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6231,"src":"18790:14:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":6388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18790:21:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6389,"nodeType":"EmitStatement","src":"18785:26:27"}]},"documentation":{"id":6372,"nodeType":"StructuredDocumentation","src":"18273:391:27","text":" @notice Pauses deposit-related functions. This is intended to be used if this contract is deprecated or when\n something goes awry.\n @dev Affects `deposit()` but not `speedUpDeposit()`, so that existing deposits can be sped up and still\n relayed.\n @param pause true if the call is meant to pause the system, false if the call is meant to unpause it."},"functionSelector":"738b62e5","id":6391,"implemented":true,"kind":"function","modifiers":[{"id":6378,"kind":"modifierInvocation","modifierName":{"id":6377,"name":"onlyAdmin","nameLocations":["18720:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":6342,"src":"18720:9:27"},"nodeType":"ModifierInvocation","src":"18720:9:27"},{"id":6380,"kind":"modifierInvocation","modifierName":{"id":6379,"name":"nonReentrant","nameLocations":["18730:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":845,"src":"18730:12:27"},"nodeType":"ModifierInvocation","src":"18730:12:27"}],"name":"pauseDeposits","nameLocation":"18678:13:27","nodeType":"FunctionDefinition","overrides":{"id":6376,"nodeType":"OverrideSpecifier","overrides":[],"src":"18711:8:27"},"parameters":{"id":6375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6374,"mutability":"mutable","name":"pause","nameLocation":"18697:5:27","nodeType":"VariableDeclaration","scope":6391,"src":"18692:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6373,"name":"bool","nodeType":"ElementaryTypeName","src":"18692:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18691:12:27"},"returnParameters":{"id":6381,"nodeType":"ParameterList","parameters":[],"src":"18743:0:27"},"scope":8866,"src":"18669:149:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[9221],"body":{"id":6410,"nodeType":"Block","src":"19228:69:27","statements":[{"expression":{"id":6404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6402,"name":"pausedFills","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"19238:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6403,"name":"pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6394,"src":"19252:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19238:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6405,"nodeType":"ExpressionStatement","src":"19238:19:27"},{"eventCall":{"arguments":[{"id":6407,"name":"pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6394,"src":"19284:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6406,"name":"PausedFills","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"19272:11:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":6408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19272:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6409,"nodeType":"EmitStatement","src":"19267:23:27"}]},"documentation":{"id":6392,"nodeType":"StructuredDocumentation","src":"18824:328:27","text":" @notice Pauses fill-related functions. This is intended to be used if this contract is deprecated or when\n something goes awry.\n @dev Affects fillRelayWithUpdatedDeposit() and fillRelay().\n @param pause true if the call is meant to pause the system, false if the call is meant to unpause it."},"functionSelector":"99cc2968","id":6411,"implemented":true,"kind":"function","modifiers":[{"id":6398,"kind":"modifierInvocation","modifierName":{"id":6397,"name":"onlyAdmin","nameLocations":["19205:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":6342,"src":"19205:9:27"},"nodeType":"ModifierInvocation","src":"19205:9:27"},{"id":6400,"kind":"modifierInvocation","modifierName":{"id":6399,"name":"nonReentrant","nameLocations":["19215:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":845,"src":"19215:12:27"},"nodeType":"ModifierInvocation","src":"19215:12:27"}],"name":"pauseFills","nameLocation":"19166:10:27","nodeType":"FunctionDefinition","overrides":{"id":6396,"nodeType":"OverrideSpecifier","overrides":[],"src":"19196:8:27"},"parameters":{"id":6395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6394,"mutability":"mutable","name":"pause","nameLocation":"19182:5:27","nodeType":"VariableDeclaration","scope":6411,"src":"19177:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6393,"name":"bool","nodeType":"ElementaryTypeName","src":"19177:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19176:12:27"},"returnParameters":{"id":6401,"nodeType":"ParameterList","parameters":[],"src":"19228:0:27"},"scope":8866,"src":"19157:140:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[9197],"body":{"id":6426,"nodeType":"Block","src":"19548:58:27","statements":[{"expression":{"arguments":[{"id":6423,"name":"newCrossDomainAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6414,"src":"19579:19:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6422,"name":"_setCrossDomainAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"19558:20:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19558:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6425,"nodeType":"ExpressionStatement","src":"19558:41:27"}]},"documentation":{"id":6412,"nodeType":"StructuredDocumentation","src":"19303:143:27","text":" @notice Change cross domain admin address. Callable by admin only.\n @param newCrossDomainAdmin New cross domain admin."},"functionSelector":"de7eba78","id":6427,"implemented":true,"kind":"function","modifiers":[{"id":6418,"kind":"modifierInvocation","modifierName":{"id":6417,"name":"onlyAdmin","nameLocations":["19525:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":6342,"src":"19525:9:27"},"nodeType":"ModifierInvocation","src":"19525:9:27"},{"id":6420,"kind":"modifierInvocation","modifierName":{"id":6419,"name":"nonReentrant","nameLocations":["19535:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":845,"src":"19535:12:27"},"nodeType":"ModifierInvocation","src":"19535:12:27"}],"name":"setCrossDomainAdmin","nameLocation":"19460:19:27","nodeType":"FunctionDefinition","overrides":{"id":6416,"nodeType":"OverrideSpecifier","overrides":[],"src":"19516:8:27"},"parameters":{"id":6415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6414,"mutability":"mutable","name":"newCrossDomainAdmin","nameLocation":"19488:19:27","nodeType":"VariableDeclaration","scope":6427,"src":"19480:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6413,"name":"address","nodeType":"ElementaryTypeName","src":"19480:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19479:29:27"},"returnParameters":{"id":6421,"nodeType":"ParameterList","parameters":[],"src":"19548:0:27"},"scope":8866,"src":"19451:155:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[9202],"body":{"id":6442,"nodeType":"Block","src":"19813:40:27","statements":[{"expression":{"arguments":[{"id":6439,"name":"newHubPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"19835:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6438,"name":"_setHubPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7923,"src":"19823:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19823:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6441,"nodeType":"ExpressionStatement","src":"19823:23:27"}]},"documentation":{"id":6428,"nodeType":"StructuredDocumentation","src":"19612:117:27","text":" @notice Change L1 hub pool address. Callable by admin only.\n @param newHubPool New hub pool."},"functionSelector":"1dfb2d02","id":6443,"implemented":true,"kind":"function","modifiers":[{"id":6434,"kind":"modifierInvocation","modifierName":{"id":6433,"name":"onlyAdmin","nameLocations":["19790:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":6342,"src":"19790:9:27"},"nodeType":"ModifierInvocation","src":"19790:9:27"},{"id":6436,"kind":"modifierInvocation","modifierName":{"id":6435,"name":"nonReentrant","nameLocations":["19800:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":845,"src":"19800:12:27"},"nodeType":"ModifierInvocation","src":"19800:12:27"}],"name":"setHubPool","nameLocation":"19743:10:27","nodeType":"FunctionDefinition","overrides":{"id":6432,"nodeType":"OverrideSpecifier","overrides":[],"src":"19781:8:27"},"parameters":{"id":6431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6430,"mutability":"mutable","name":"newHubPool","nameLocation":"19762:10:27","nodeType":"VariableDeclaration","scope":6443,"src":"19754:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6429,"name":"address","nodeType":"ElementaryTypeName","src":"19754:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19753:20:27"},"returnParameters":{"id":6437,"nodeType":"ParameterList","parameters":[],"src":"19813:0:27"},"scope":8866,"src":"19734:119:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[9211],"body":{"id":6472,"nodeType":"Block","src":"20372:156:27","statements":[{"expression":{"id":6464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":6458,"name":"enabledDepositRoutes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6031,"src":"20382:20:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":6461,"indexExpression":{"id":6459,"name":"originToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"20403:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20382:33:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":6462,"indexExpression":{"id":6460,"name":"destinationChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6448,"src":"20416:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20382:53:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6463,"name":"enabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6450,"src":"20438:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20382:63:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6465,"nodeType":"ExpressionStatement","src":"20382:63:27"},{"eventCall":{"arguments":[{"id":6467,"name":"originToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"20480:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6468,"name":"destinationChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6448,"src":"20493:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6469,"name":"enabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6450,"src":"20513:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6466,"name":"EnabledDepositRoute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6111,"src":"20460:19:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,uint256,bool)"}},"id":6470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20460:61:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6471,"nodeType":"EmitStatement","src":"20455:66:27"}]},"documentation":{"id":6444,"nodeType":"StructuredDocumentation","src":"19859:352:27","text":" @notice Enable/Disable an origin token => destination chain ID route for deposits. Callable by admin only.\n @param originToken Token that depositor can deposit to this contract.\n @param destinationChainId Chain ID for where depositor wants to receive funds.\n @param enabled True to enable deposits, False otherwise."},"functionSelector":"272751c7","id":6473,"implemented":true,"kind":"function","modifiers":[{"id":6454,"kind":"modifierInvocation","modifierName":{"id":6453,"name":"onlyAdmin","nameLocations":["20349:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":6342,"src":"20349:9:27"},"nodeType":"ModifierInvocation","src":"20349:9:27"},{"id":6456,"kind":"modifierInvocation","modifierName":{"id":6455,"name":"nonReentrant","nameLocations":["20359:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":845,"src":"20359:12:27"},"nodeType":"ModifierInvocation","src":"20359:12:27"}],"name":"setEnableRoute","nameLocation":"20225:14:27","nodeType":"FunctionDefinition","overrides":{"id":6452,"nodeType":"OverrideSpecifier","overrides":[],"src":"20340:8:27"},"parameters":{"id":6451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6446,"mutability":"mutable","name":"originToken","nameLocation":"20257:11:27","nodeType":"VariableDeclaration","scope":6473,"src":"20249:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6445,"name":"address","nodeType":"ElementaryTypeName","src":"20249:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6448,"mutability":"mutable","name":"destinationChainId","nameLocation":"20286:18:27","nodeType":"VariableDeclaration","scope":6473,"src":"20278:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6447,"name":"uint256","nodeType":"ElementaryTypeName","src":"20278:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6450,"mutability":"mutable","name":"enabled","nameLocation":"20319:7:27","nodeType":"VariableDeclaration","scope":6473,"src":"20314:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6449,"name":"bool","nodeType":"ElementaryTypeName","src":"20314:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20239:93:27"},"returnParameters":{"id":6457,"nodeType":"ParameterList","parameters":[],"src":"20372:0:27"},"scope":8866,"src":"20216:312:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[9228],"body":{"id":6519,"nodeType":"Block","src":"21302:313:27","statements":[{"assignments":[6487],"declarations":[{"constant":false,"id":6487,"mutability":"mutable","name":"rootBundleId","nameLocation":"21319:12:27","nodeType":"VariableDeclaration","scope":6519,"src":"21312:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6486,"name":"uint32","nodeType":"ElementaryTypeName","src":"21312:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":6493,"initialValue":{"arguments":[{"expression":{"id":6490,"name":"rootBundles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"21341:11:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RootBundle_$9192_storage_$dyn_storage","typeString":"struct SpokePoolInterface.RootBundle storage ref[] storage ref"}},"id":6491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21353:6:27","memberName":"length","nodeType":"MemberAccess","src":"21341:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21334:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6488,"name":"uint32","nodeType":"ElementaryTypeName","src":"21334:6:27","typeDescriptions":{}}},"id":6492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21334:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"21312:48:27"},{"assignments":[6496],"declarations":[{"constant":false,"id":6496,"mutability":"mutable","name":"rootBundle","nameLocation":"21389:10:27","nodeType":"VariableDeclaration","scope":6519,"src":"21370:29:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$9192_storage_ptr","typeString":"struct SpokePoolInterface.RootBundle"},"typeName":{"id":6495,"nodeType":"UserDefinedTypeName","pathNode":{"id":6494,"name":"RootBundle","nameLocations":["21370:10:27"],"nodeType":"IdentifierPath","referencedDeclaration":9192,"src":"21370:10:27"},"referencedDeclaration":9192,"src":"21370:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$9192_storage_ptr","typeString":"struct SpokePoolInterface.RootBundle"}},"visibility":"internal"}],"id":6500,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6497,"name":"rootBundles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"21402:11:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RootBundle_$9192_storage_$dyn_storage","typeString":"struct SpokePoolInterface.RootBundle storage ref[] storage ref"}},"id":6498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21414:4:27","memberName":"push","nodeType":"MemberAccess","src":"21402:16:27","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_RootBundle_$9192_storage_$dyn_storage_ptr_$returns$_t_struct$_RootBundle_$9192_storage_$attached_to$_t_array$_t_struct$_RootBundle_$9192_storage_$dyn_storage_ptr_$","typeString":"function (struct SpokePoolInterface.RootBundle storage ref[] storage pointer) returns (struct SpokePoolInterface.RootBundle storage ref)"}},"id":6499,"isConstant":false,"isLValue":true,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21402:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$9192_storage","typeString":"struct SpokePoolInterface.RootBundle storage ref"}},"nodeType":"VariableDeclarationStatement","src":"21370:50:27"},{"expression":{"id":6505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6501,"name":"rootBundle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"21430:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$9192_storage_ptr","typeString":"struct SpokePoolInterface.RootBundle storage pointer"}},"id":6503,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"21441:17:27","memberName":"relayerRefundRoot","nodeType":"MemberAccess","referencedDeclaration":9187,"src":"21430:28:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6504,"name":"relayerRefundRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6476,"src":"21461:17:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"21430:48:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6506,"nodeType":"ExpressionStatement","src":"21430:48:27"},{"expression":{"id":6511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6507,"name":"rootBundle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"21488:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$9192_storage_ptr","typeString":"struct SpokePoolInterface.RootBundle storage pointer"}},"id":6509,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"21499:13:27","memberName":"slowRelayRoot","nodeType":"MemberAccess","referencedDeclaration":9185,"src":"21488:24:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6510,"name":"slowRelayRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"21515:13:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"21488:40:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6512,"nodeType":"ExpressionStatement","src":"21488:40:27"},{"eventCall":{"arguments":[{"id":6514,"name":"rootBundleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6487,"src":"21561:12:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6515,"name":"relayerRefundRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6476,"src":"21575:17:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6516,"name":"slowRelayRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"21594:13:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6513,"name":"RelayedRootBundle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6191,"src":"21543:17:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (uint32,bytes32,bytes32)"}},"id":6517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21543:65:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6518,"nodeType":"EmitStatement","src":"21538:70:27"}]},"documentation":{"id":6474,"nodeType":"StructuredDocumentation","src":"20534:649:27","text":" @notice This method stores a new root bundle in this contract that can be executed to refund relayers, fulfill\n slow relays, and send funds back to the HubPool on L1. This method can only be called by the admin and is\n designed to be called as part of a cross-chain message from the HubPool's executeRootBundle method.\n @param relayerRefundRoot Merkle root containing relayer refund leaves that can be individually executed via\n executeRelayerRefundLeaf().\n @param slowRelayRoot Merkle root containing slow relay fulfillment leaves that can be individually executed via\n executeSlowRelayLeaf()."},"functionSelector":"493a4f84","id":6520,"implemented":true,"kind":"function","modifiers":[{"id":6482,"kind":"modifierInvocation","modifierName":{"id":6481,"name":"onlyAdmin","nameLocations":["21279:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":6342,"src":"21279:9:27"},"nodeType":"ModifierInvocation","src":"21279:9:27"},{"id":6484,"kind":"modifierInvocation","modifierName":{"id":6483,"name":"nonReentrant","nameLocations":["21289:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":845,"src":"21289:12:27"},"nodeType":"ModifierInvocation","src":"21289:12:27"}],"name":"relayRootBundle","nameLocation":"21197:15:27","nodeType":"FunctionDefinition","overrides":{"id":6480,"nodeType":"OverrideSpecifier","overrides":[],"src":"21270:8:27"},"parameters":{"id":6479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6476,"mutability":"mutable","name":"relayerRefundRoot","nameLocation":"21221:17:27","nodeType":"VariableDeclaration","scope":6520,"src":"21213:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6475,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21213:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6478,"mutability":"mutable","name":"slowRelayRoot","nameLocation":"21248:13:27","nodeType":"VariableDeclaration","scope":6520,"src":"21240:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21240:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21212:50:27"},"returnParameters":{"id":6485,"nodeType":"ParameterList","parameters":[],"src":"21302:0:27"},"scope":8866,"src":"21188:427:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[9233],"body":{"id":6540,"nodeType":"Block","src":"22077:571:27","statements":[{"expression":{"id":6534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"22555:32:27","subExpression":{"baseExpression":{"id":6531,"name":"rootBundles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"22562:11:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RootBundle_$9192_storage_$dyn_storage","typeString":"struct SpokePoolInterface.RootBundle storage ref[] storage ref"}},"id":6533,"indexExpression":{"id":6532,"name":"rootBundleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"22574:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"22562:25:27","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$9192_storage","typeString":"struct SpokePoolInterface.RootBundle storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6535,"nodeType":"ExpressionStatement","src":"22555:32:27"},{"eventCall":{"arguments":[{"id":6537,"name":"rootBundleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"22628:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6536,"name":"EmergencyDeleteRootBundle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6227,"src":"22602:25:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22602:39:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6539,"nodeType":"EmitStatement","src":"22597:44:27"}]},"documentation":{"id":6521,"nodeType":"StructuredDocumentation","src":"21621:355:27","text":" @notice This method is intended to only be used in emergencies where a bad root bundle has reached the\n SpokePool.\n @param rootBundleId Index of the root bundle that needs to be deleted. Note: this is intentionally a uint256\n to ensure that a small input range doesn't limit which indices this method is able to reach."},"functionSelector":"8a7860ce","id":6541,"implemented":true,"kind":"function","modifiers":[{"id":6527,"kind":"modifierInvocation","modifierName":{"id":6526,"name":"onlyAdmin","nameLocations":["22054:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":6342,"src":"22054:9:27"},"nodeType":"ModifierInvocation","src":"22054:9:27"},{"id":6529,"kind":"modifierInvocation","modifierName":{"id":6528,"name":"nonReentrant","nameLocations":["22064:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":845,"src":"22064:12:27"},"nodeType":"ModifierInvocation","src":"22064:12:27"}],"name":"emergencyDeleteRootBundle","nameLocation":"21990:25:27","nodeType":"FunctionDefinition","overrides":{"id":6525,"nodeType":"OverrideSpecifier","overrides":[],"src":"22045:8:27"},"parameters":{"id":6524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6523,"mutability":"mutable","name":"rootBundleId","nameLocation":"22024:12:27","nodeType":"VariableDeclaration","scope":6541,"src":"22016:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6522,"name":"uint256","nodeType":"ElementaryTypeName","src":"22016:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22015:22:27"},"returnParameters":{"id":6530,"nodeType":"ParameterList","parameters":[],"src":"22077:0:27"},"scope":8866,"src":"21981:667:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[9252],"body":{"id":6578,"nodeType":"Block","src":"24844:235:27","statements":[{"expression":{"arguments":[{"expression":{"id":6567,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24876:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24880:6:27","memberName":"sender","nodeType":"MemberAccess","src":"24876:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6569,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"24900:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6570,"name":"originToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"24923:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6571,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6548,"src":"24948:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6572,"name":"destinationChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6550,"src":"24968:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6573,"name":"relayerFeePct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"25000:13:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":6574,"name":"quoteTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6554,"src":"25027:14:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6575,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"25055:7:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6566,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7699,"src":"24854:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_int64_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,int64,uint32,bytes memory)"}},"id":6576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24854:218:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6577,"nodeType":"ExpressionStatement","src":"24854:218:27"}]},"documentation":{"id":6542,"nodeType":"StructuredDocumentation","src":"22788:1726:27","text":" @notice Called by user to bridge funds from origin to destination chain. Depositor will effectively lock\n tokens in this contract and receive a destination token on the destination chain. The origin => destination\n token mapping is stored on the L1 HubPool.\n @notice The caller must first approve this contract to spend amount of originToken.\n @notice The originToken => destinationChainId must be enabled.\n @notice This method is payable because the caller is able to deposit native token if the originToken is\n wrappedNativeToken and this function will handle wrapping the native token to wrappedNativeToken.\n @dev Produces a V3FundsDeposited event with an infinite expiry, meaning that this deposit can never expire.\n Moreover, the event's outputToken is set to 0x0 meaning that this deposit can always be slow filled.\n @param recipient Address to receive funds at on destination chain.\n @param originToken Token to lock into this contract to initiate deposit.\n @param amount Amount of tokens to deposit. Will be amount of tokens to receive less fees.\n @param destinationChainId Denotes network where user will receive funds from SpokePool by a relayer.\n @param relayerFeePct % of deposit amount taken out to incentivize a fast relayer.\n @param quoteTimestamp Timestamp used by relayers to compute this deposit's realizedLPFeePct which is paid\n to LP pool on HubPool.\n @param message Arbitrary data that can be used to pass additional information to the recipient along with the tokens.\n Note: this is intended to be used to pass along instructions for how a contract should use or allocate the tokens."},"functionSelector":"1186ec33","id":6579,"implemented":true,"kind":"function","modifiers":[{"id":6562,"kind":"modifierInvocation","modifierName":{"id":6561,"name":"nonReentrant","nameLocations":["24814:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":845,"src":"24814:12:27"},"nodeType":"ModifierInvocation","src":"24814:12:27"},{"id":6564,"kind":"modifierInvocation","modifierName":{"id":6563,"name":"unpausedDeposits","nameLocations":["24827:16:27"],"nodeType":"IdentifierPath","referencedDeclaration":6352,"src":"24827:16:27"},"nodeType":"ModifierInvocation","src":"24827:16:27"}],"name":"deposit","nameLocation":"24528:7:27","nodeType":"FunctionDefinition","overrides":{"id":6560,"nodeType":"OverrideSpecifier","overrides":[],"src":"24805:8:27"},"parameters":{"id":6559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6544,"mutability":"mutable","name":"recipient","nameLocation":"24553:9:27","nodeType":"VariableDeclaration","scope":6579,"src":"24545:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6543,"name":"address","nodeType":"ElementaryTypeName","src":"24545:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6546,"mutability":"mutable","name":"originToken","nameLocation":"24580:11:27","nodeType":"VariableDeclaration","scope":6579,"src":"24572:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6545,"name":"address","nodeType":"ElementaryTypeName","src":"24572:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6548,"mutability":"mutable","name":"amount","nameLocation":"24609:6:27","nodeType":"VariableDeclaration","scope":6579,"src":"24601:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6547,"name":"uint256","nodeType":"ElementaryTypeName","src":"24601:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6550,"mutability":"mutable","name":"destinationChainId","nameLocation":"24633:18:27","nodeType":"VariableDeclaration","scope":6579,"src":"24625:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6549,"name":"uint256","nodeType":"ElementaryTypeName","src":"24625:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6552,"mutability":"mutable","name":"relayerFeePct","nameLocation":"24667:13:27","nodeType":"VariableDeclaration","scope":6579,"src":"24661:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6551,"name":"int64","nodeType":"ElementaryTypeName","src":"24661:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":6554,"mutability":"mutable","name":"quoteTimestamp","nameLocation":"24697:14:27","nodeType":"VariableDeclaration","scope":6579,"src":"24690:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6553,"name":"uint32","nodeType":"ElementaryTypeName","src":"24690:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6556,"mutability":"mutable","name":"message","nameLocation":"24734:7:27","nodeType":"VariableDeclaration","scope":6579,"src":"24721:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6555,"name":"bytes","nodeType":"ElementaryTypeName","src":"24721:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6579,"src":"24751:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6557,"name":"uint256","nodeType":"ElementaryTypeName","src":"24751:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24535:254:27"},"returnParameters":{"id":6565,"nodeType":"ParameterList","parameters":[],"src":"24844:0:27"},"scope":8866,"src":"24519:560:27","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[9274],"body":{"id":6616,"nodeType":"Block","src":"27248:128:27","statements":[{"expression":{"arguments":[{"id":6606,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6582,"src":"27267:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6607,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6584,"src":"27278:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6608,"name":"originToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6586,"src":"27289:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6609,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6588,"src":"27302:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6610,"name":"destinationChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6590,"src":"27310:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6611,"name":"relayerFeePct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6592,"src":"27330:13:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":6612,"name":"quoteTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"27345:14:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6613,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6596,"src":"27361:7:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6605,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7699,"src":"27258:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_int64_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,int64,uint32,bytes memory)"}},"id":6614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27258:111:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6615,"nodeType":"ExpressionStatement","src":"27258:111:27"}]},"documentation":{"id":6580,"nodeType":"StructuredDocumentation","src":"26844:53:27","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"functionSelector":"541f4f14","id":6617,"implemented":true,"kind":"function","modifiers":[{"id":6601,"kind":"modifierInvocation","modifierName":{"id":6600,"name":"nonReentrant","nameLocations":["27218:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":845,"src":"27218:12:27"},"nodeType":"ModifierInvocation","src":"27218:12:27"},{"id":6603,"kind":"modifierInvocation","modifierName":{"id":6602,"name":"unpausedDeposits","nameLocations":["27231:16:27"],"nodeType":"IdentifierPath","referencedDeclaration":6352,"src":"27231:16:27"},"nodeType":"ModifierInvocation","src":"27231:16:27"}],"name":"depositFor","nameLocation":"26911:10:27","nodeType":"FunctionDefinition","parameters":{"id":6599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6582,"mutability":"mutable","name":"depositor","nameLocation":"26939:9:27","nodeType":"VariableDeclaration","scope":6617,"src":"26931:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6581,"name":"address","nodeType":"ElementaryTypeName","src":"26931:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6584,"mutability":"mutable","name":"recipient","nameLocation":"26966:9:27","nodeType":"VariableDeclaration","scope":6617,"src":"26958:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6583,"name":"address","nodeType":"ElementaryTypeName","src":"26958:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6586,"mutability":"mutable","name":"originToken","nameLocation":"26993:11:27","nodeType":"VariableDeclaration","scope":6617,"src":"26985:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6585,"name":"address","nodeType":"ElementaryTypeName","src":"26985:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6588,"mutability":"mutable","name":"amount","nameLocation":"27022:6:27","nodeType":"VariableDeclaration","scope":6617,"src":"27014:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6587,"name":"uint256","nodeType":"ElementaryTypeName","src":"27014:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6590,"mutability":"mutable","name":"destinationChainId","nameLocation":"27046:18:27","nodeType":"VariableDeclaration","scope":6617,"src":"27038:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6589,"name":"uint256","nodeType":"ElementaryTypeName","src":"27038:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6592,"mutability":"mutable","name":"relayerFeePct","nameLocation":"27080:13:27","nodeType":"VariableDeclaration","scope":6617,"src":"27074:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6591,"name":"int64","nodeType":"ElementaryTypeName","src":"27074:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":6594,"mutability":"mutable","name":"quoteTimestamp","nameLocation":"27110:14:27","nodeType":"VariableDeclaration","scope":6617,"src":"27103:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6593,"name":"uint32","nodeType":"ElementaryTypeName","src":"27103:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6596,"mutability":"mutable","name":"message","nameLocation":"27147:7:27","nodeType":"VariableDeclaration","scope":6617,"src":"27134:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6595,"name":"bytes","nodeType":"ElementaryTypeName","src":"27134:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6617,"src":"27164:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6597,"name":"uint256","nodeType":"ElementaryTypeName","src":"27164:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26921:281:27"},"returnParameters":{"id":6604,"nodeType":"ParameterList","parameters":[],"src":"27248:0:27"},"scope":8866,"src":"26902:474:27","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[9292],"body":{"id":6650,"nodeType":"Block","src":"29022:242:27","statements":[{"expression":{"arguments":[{"id":6636,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"29053:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6637,"name":"originToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"29076:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6638,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6624,"src":"29101:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6639,"name":"destinationChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"29121:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6640,"name":"relayerFeePct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6628,"src":"29153:13:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":6643,"name":"getCurrentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7571,"src":"29187:14:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29187:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29180:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6641,"name":"uint32","nodeType":"ElementaryTypeName","src":"29180:6:27","typeDescriptions":{}}},"id":6645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29180:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6646,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"29218:7:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6647,"name":"maxCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6632,"src":"29239:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6635,"name":"deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"29032:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_int64_$_t_uint32_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256,int64,uint32,bytes memory,uint256)"}},"id":6648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29032:225:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6649,"nodeType":"ExpressionStatement","src":"29032:225:27"}]},"documentation":{"id":6618,"nodeType":"StructuredDocumentation","src":"28722:53:27","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"functionSelector":"ae527fbb","id":6651,"implemented":true,"kind":"function","modifiers":[],"name":"depositNow","nameLocation":"28789:10:27","nodeType":"FunctionDefinition","parameters":{"id":6633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6620,"mutability":"mutable","name":"recipient","nameLocation":"28817:9:27","nodeType":"VariableDeclaration","scope":6651,"src":"28809:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6619,"name":"address","nodeType":"ElementaryTypeName","src":"28809:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6622,"mutability":"mutable","name":"originToken","nameLocation":"28844:11:27","nodeType":"VariableDeclaration","scope":6651,"src":"28836:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6621,"name":"address","nodeType":"ElementaryTypeName","src":"28836:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6624,"mutability":"mutable","name":"amount","nameLocation":"28873:6:27","nodeType":"VariableDeclaration","scope":6651,"src":"28865:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6623,"name":"uint256","nodeType":"ElementaryTypeName","src":"28865:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6626,"mutability":"mutable","name":"destinationChainId","nameLocation":"28897:18:27","nodeType":"VariableDeclaration","scope":6651,"src":"28889:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6625,"name":"uint256","nodeType":"ElementaryTypeName","src":"28889:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6628,"mutability":"mutable","name":"relayerFeePct","nameLocation":"28931:13:27","nodeType":"VariableDeclaration","scope":6651,"src":"28925:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6627,"name":"int64","nodeType":"ElementaryTypeName","src":"28925:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":6630,"mutability":"mutable","name":"message","nameLocation":"28967:7:27","nodeType":"VariableDeclaration","scope":6651,"src":"28954:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6629,"name":"bytes","nodeType":"ElementaryTypeName","src":"28954:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6632,"mutability":"mutable","name":"maxCount","nameLocation":"28992:8:27","nodeType":"VariableDeclaration","scope":6651,"src":"28984:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6631,"name":"uint256","nodeType":"ElementaryTypeName","src":"28984:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28799:207:27"},"returnParameters":{"id":6634,"nodeType":"ParameterList","parameters":[],"src":"29022:0:27"},"scope":8866,"src":"28780:484:27","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":6687,"nodeType":"Block","src":"31061:268:27","statements":[{"expression":{"arguments":[{"id":6672,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"31095:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6673,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6656,"src":"31118:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6674,"name":"originToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6658,"src":"31141:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6675,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"31166:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6676,"name":"destinationChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"31186:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6677,"name":"relayerFeePct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"31218:13:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":6680,"name":"getCurrentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7571,"src":"31252:14:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31252:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31245:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6678,"name":"uint32","nodeType":"ElementaryTypeName","src":"31245:6:27","typeDescriptions":{}}},"id":6682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31245:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6683,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6666,"src":"31283:7:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6684,"name":"maxCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6668,"src":"31304:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6671,"name":"depositFor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6617,"src":"31071:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_int64_$_t_uint32_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256,int64,uint32,bytes memory,uint256)"}},"id":6685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31071:251:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6686,"nodeType":"ExpressionStatement","src":"31071:251:27"}]},"documentation":{"id":6652,"nodeType":"StructuredDocumentation","src":"30731:53:27","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"functionSelector":"fd7c1054","id":6688,"implemented":true,"kind":"function","modifiers":[],"name":"depositForNow","nameLocation":"30798:13:27","nodeType":"FunctionDefinition","parameters":{"id":6669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6654,"mutability":"mutable","name":"depositor","nameLocation":"30829:9:27","nodeType":"VariableDeclaration","scope":6688,"src":"30821:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6653,"name":"address","nodeType":"ElementaryTypeName","src":"30821:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6656,"mutability":"mutable","name":"recipient","nameLocation":"30856:9:27","nodeType":"VariableDeclaration","scope":6688,"src":"30848:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6655,"name":"address","nodeType":"ElementaryTypeName","src":"30848:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6658,"mutability":"mutable","name":"originToken","nameLocation":"30883:11:27","nodeType":"VariableDeclaration","scope":6688,"src":"30875:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6657,"name":"address","nodeType":"ElementaryTypeName","src":"30875:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6660,"mutability":"mutable","name":"amount","nameLocation":"30912:6:27","nodeType":"VariableDeclaration","scope":6688,"src":"30904:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6659,"name":"uint256","nodeType":"ElementaryTypeName","src":"30904:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6662,"mutability":"mutable","name":"destinationChainId","nameLocation":"30936:18:27","nodeType":"VariableDeclaration","scope":6688,"src":"30928:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6661,"name":"uint256","nodeType":"ElementaryTypeName","src":"30928:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6664,"mutability":"mutable","name":"relayerFeePct","nameLocation":"30970:13:27","nodeType":"VariableDeclaration","scope":6688,"src":"30964:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6663,"name":"int64","nodeType":"ElementaryTypeName","src":"30964:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":6666,"mutability":"mutable","name":"message","nameLocation":"31006:7:27","nodeType":"VariableDeclaration","scope":6688,"src":"30993:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6665,"name":"bytes","nodeType":"ElementaryTypeName","src":"30993:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6668,"mutability":"mutable","name":"maxCount","nameLocation":"31031:8:27","nodeType":"VariableDeclaration","scope":6688,"src":"31023:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6667,"name":"uint256","nodeType":"ElementaryTypeName","src":"31023:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30811:234:27"},"returnParameters":{"id":6670,"nodeType":"ParameterList","parameters":[],"src":"31061:0:27"},"scope":8866,"src":"30789:540:27","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[9308],"body":{"id":6737,"nodeType":"Block","src":"33513:748:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6710,"name":"updatedRelayerFeePct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"33546:20:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int64","typeString":"int64"}],"expression":{"id":6708,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"33531:10:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$5708_$","typeString":"type(library SignedMath)"}},"id":6709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"33542:3:27","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":5707,"src":"33531:14:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":6711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33531:36:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"302e35653138","id":6712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33570:6:27","typeDescriptions":{"typeIdentifier":"t_rational_500000000000000000_by_1","typeString":"int_const 500000000000000000"},"value":"0.5e18"},"src":"33531:45:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642072656c6179657220666565","id":6714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33578:21:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_d8a4974ec8c46fb806999f6d5fb30732302054b90b38014a2f8237102b48f383","typeString":"literal_string \"Invalid relayer fee\""},"value":"Invalid relayer fee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d8a4974ec8c46fb806999f6d5fb30732302054b90b38014a2f8237102b48f383","typeString":"literal_string \"Invalid relayer fee\""}],"id":6707,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33523:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33523:77:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6716,"nodeType":"ExpressionStatement","src":"33523:77:27"},{"expression":{"arguments":[{"id":6718,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6691,"src":"33652:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6719,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"33675:9:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6720,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"33698:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33698:9:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6722,"name":"updatedRelayerFeePct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"33721:20:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":6723,"name":"updatedRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6697,"src":"33755:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6724,"name":"updatedMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6699,"src":"33785:14:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6725,"name":"depositorSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6701,"src":"33813:18:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6717,"name":"_verifyUpdateDepositMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8013,"src":"33611:27:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint32_$_t_uint256_$_t_int64_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint32,uint256,int64,address,bytes memory,bytes memory) view"}},"id":6726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33611:230:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6727,"nodeType":"ExpressionStatement","src":"33611:230:27"},{"eventCall":{"arguments":[{"id":6729,"name":"updatedRelayerFeePct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"34088:20:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":6730,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"34122:9:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6731,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6691,"src":"34145:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6732,"name":"updatedRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6697,"src":"34168:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6733,"name":"updatedMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6699,"src":"34198:14:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6734,"name":"depositorSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6701,"src":"34226:18:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6728,"name":"RequestedSpeedUpDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"34051:23:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_int64_$_t_uint32_$_t_address_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (int64,uint32,address,address,bytes memory,bytes memory)"}},"id":6735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34051:203:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6736,"nodeType":"EmitStatement","src":"34046:208:27"}]},"documentation":{"id":6689,"nodeType":"StructuredDocumentation","src":"33195:53:27","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"functionSelector":"7e688bba","id":6738,"implemented":true,"kind":"function","modifiers":[{"id":6705,"kind":"modifierInvocation","modifierName":{"id":6704,"name":"nonReentrant","nameLocations":["33500:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":845,"src":"33500:12:27"},"nodeType":"ModifierInvocation","src":"33500:12:27"}],"name":"speedUpDeposit","nameLocation":"33262:14:27","nodeType":"FunctionDefinition","overrides":{"id":6703,"nodeType":"OverrideSpecifier","overrides":[],"src":"33491:8:27"},"parameters":{"id":6702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6691,"mutability":"mutable","name":"depositor","nameLocation":"33294:9:27","nodeType":"VariableDeclaration","scope":6738,"src":"33286:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6690,"name":"address","nodeType":"ElementaryTypeName","src":"33286:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6693,"mutability":"mutable","name":"updatedRelayerFeePct","nameLocation":"33319:20:27","nodeType":"VariableDeclaration","scope":6738,"src":"33313:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6692,"name":"int64","nodeType":"ElementaryTypeName","src":"33313:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":6695,"mutability":"mutable","name":"depositId","nameLocation":"33356:9:27","nodeType":"VariableDeclaration","scope":6738,"src":"33349:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6694,"name":"uint32","nodeType":"ElementaryTypeName","src":"33349:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6697,"mutability":"mutable","name":"updatedRecipient","nameLocation":"33383:16:27","nodeType":"VariableDeclaration","scope":6738,"src":"33375:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6696,"name":"address","nodeType":"ElementaryTypeName","src":"33375:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6699,"mutability":"mutable","name":"updatedMessage","nameLocation":"33422:14:27","nodeType":"VariableDeclaration","scope":6738,"src":"33409:27:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6698,"name":"bytes","nodeType":"ElementaryTypeName","src":"33409:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6701,"mutability":"mutable","name":"depositorSignature","nameLocation":"33459:18:27","nodeType":"VariableDeclaration","scope":6738,"src":"33446:31:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6700,"name":"bytes","nodeType":"ElementaryTypeName","src":"33446:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"33276:207:27"},"returnParameters":{"id":6706,"nodeType":"ParameterList","parameters":[],"src":"33513:0:27"},"scope":8866,"src":"33253:1008:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[9616],"body":{"id":6906,"nodeType":"Block","src":"39230:4478:27","statements":[{"condition":{"id":6776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"39481:53:27","subExpression":{"baseExpression":{"baseExpression":{"id":6771,"name":"enabledDepositRoutes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6031,"src":"39482:20:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":6773,"indexExpression":{"id":6772,"name":"inputToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6745,"src":"39503:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"39482:32:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":6775,"indexExpression":{"id":6774,"name":"destinationChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"39515:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"39482:52:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6780,"nodeType":"IfStatement","src":"39477:81:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6777,"name":"DisabledRoute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9674,"src":"39543:13:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39543:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6779,"nodeType":"RevertStatement","src":"39536:22:27"}},{"assignments":[6782],"declarations":[{"constant":false,"id":6782,"mutability":"mutable","name":"currentTime","nameLocation":"40233:11:27","nodeType":"VariableDeclaration","scope":6906,"src":"40225:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6781,"name":"uint256","nodeType":"ElementaryTypeName","src":"40225:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6785,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":6783,"name":"getCurrentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7571,"src":"40247:14:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40247:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"40225:38:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6786,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6782,"src":"40277:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6787,"name":"quoteTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"40291:14:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"40277:28:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6789,"name":"depositQuoteTimeBuffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"40308:22:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"40277:53:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6794,"nodeType":"IfStatement","src":"40273:89:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6791,"name":"InvalidQuoteTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9676,"src":"40339:21:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40339:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6793,"nodeType":"RevertStatement","src":"40332:30:27"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6795,"name":"fillDeadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6759,"src":"41020:12:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6796,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6782,"src":"41035:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"41020:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6798,"name":"fillDeadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6759,"src":"41050:12:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6799,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6782,"src":"41065:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6800,"name":"fillDeadlineBuffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6061,"src":"41079:18:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"41065:32:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"41050:47:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"41020:77:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6807,"nodeType":"IfStatement","src":"41016:111:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6804,"name":"InvalidFillDeadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9678,"src":"41106:19:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41106:21:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6806,"nodeType":"RevertStatement","src":"41099:28:27"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":6812,"name":"exclusiveRelayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6755,"src":"41514:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"41506:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6810,"name":"uint160","nodeType":"ElementaryTypeName","src":"41506:7:27","typeDescriptions":{}}},"id":6813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41506:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":6809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"41498:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6808,"name":"uint256","nodeType":"ElementaryTypeName","src":"41498:7:27","typeDescriptions":{}}},"id":6814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41498:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":6815,"name":"exclusivityDeadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"41535:19:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"41498:56:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"41558:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"41498:61:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6837,"nodeType":"IfStatement","src":"41494:441:27","trueBody":{"id":6836,"nodeType":"Block","src":"41561:374:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6819,"name":"exclusiveRelayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6755,"src":"41718:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"41746:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"41738:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6820,"name":"address","nodeType":"ElementaryTypeName","src":"41738:7:27","typeDescriptions":{}}},"id":6823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41738:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"41718:30:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6828,"nodeType":"IfStatement","src":"41714:68:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6825,"name":"InvalidExclusiveRelayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9680,"src":"41757:23:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41757:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6827,"nodeType":"RevertStatement","src":"41750:32:27"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6829,"name":"exclusivityDeadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"41854:19:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6830,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6782,"src":"41876:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"41854:33:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6835,"nodeType":"IfStatement","src":"41850:74:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6832,"name":"InvalidExclusivityDeadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9682,"src":"41896:26:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41896:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6834,"nodeType":"RevertStatement","src":"41889:35:27"}}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6838,"name":"inputToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6745,"src":"42399:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":6841,"name":"wrappedNativeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"42421:18:27","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$8898","typeString":"contract WETH9Interface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_WETH9Interface_$8898","typeString":"contract WETH9Interface"}],"id":6840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"42413:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6839,"name":"address","nodeType":"ElementaryTypeName","src":"42413:7:27","typeDescriptions":{}}},"id":6842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42413:27:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"42399:41:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6844,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"42444:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"42448:5:27","memberName":"value","nodeType":"MemberAccess","src":"42444:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"42456:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"42444:13:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"42399:58:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6887,"nodeType":"Block","src":"42950:269:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6866,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"43052:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"43056:5:27","memberName":"value","nodeType":"MemberAccess","src":"43052:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"43065:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"43052:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6873,"nodeType":"IfStatement","src":"43048:60:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6870,"name":"MsgValueDoesNotMatchInputAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9684,"src":"43075:31:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"43075:33:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6872,"nodeType":"RevertStatement","src":"43068:40:27"}},{"expression":{"arguments":[{"expression":{"id":6878,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"43169:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"43173:6:27","memberName":"sender","nodeType":"MemberAccess","src":"43169:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6882,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"43189:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_SpokePool_$8866","typeString":"contract SpokePool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SpokePool_$8866","typeString":"contract SpokePool"}],"id":6881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"43181:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6880,"name":"address","nodeType":"ElementaryTypeName","src":"43181:7:27","typeDescriptions":{}}},"id":6883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"43181:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6884,"name":"inputAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"43196:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":6875,"name":"inputToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6745,"src":"43140:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6874,"name":"IERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"43122:17:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Upgradeable_$963_$","typeString":"type(contract IERC20Upgradeable)"}},"id":6876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"43122:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},"id":6877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"43152:16:27","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1059,"src":"43122:46:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$963_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20Upgradeable_$963_$","typeString":"function (contract IERC20Upgradeable,address,address,uint256)"}},"id":6885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"43122:86:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6886,"nodeType":"ExpressionStatement","src":"43122:86:27"}]},"id":6888,"nodeType":"IfStatement","src":"42395:824:27","trueBody":{"id":6865,"nodeType":"Block","src":"42459:485:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6849,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"42477:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"42481:5:27","memberName":"value","nodeType":"MemberAccess","src":"42477:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6851,"name":"inputAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"42490:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"42477:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6856,"nodeType":"IfStatement","src":"42473:70:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6853,"name":"MsgValueDoesNotMatchInputAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9684,"src":"42510:31:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42510:33:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6855,"nodeType":"RevertStatement","src":"42503:40:27"}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"expression":{"id":6857,"name":"wrappedNativeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"42557:18:27","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$8898","typeString":"contract WETH9Interface"}},"id":6859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"42576:7:27","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":8879,"src":"42557:26:27","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$","typeString":"function () payable external"}},"id":6862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":6860,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"42592:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"42596:5:27","memberName":"value","nodeType":"MemberAccess","src":"42592:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"42557:46:27","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$value","typeString":"function () payable external"}},"id":6863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42557:48:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6864,"nodeType":"ExpressionStatement","src":"42557:48:27"}]}},{"eventCall":{"arguments":[{"id":6890,"name":"inputToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6745,"src":"43264:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6891,"name":"outputToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6747,"src":"43288:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6892,"name":"inputAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"43313:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6893,"name":"outputAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6751,"src":"43338:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6894,"name":"destinationChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"43364:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"43489:18:27","subExpression":{"id":6895,"name":"numberOfDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"43489:16:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6897,"name":"quoteTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"43521:14:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6898,"name":"fillDeadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6759,"src":"43549:12:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6899,"name":"exclusivityDeadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"43575:19:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6900,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6741,"src":"43608:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6901,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"43631:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6902,"name":"exclusiveRelayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6755,"src":"43654:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6903,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6763,"src":"43684:7:27","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":6889,"name":"V3FundsDeposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9516,"src":"43234:16:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint32_$_t_uint32_$_t_uint32_$_t_address_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,uint256,uint32,uint32,uint32,uint32,address,address,address,bytes memory)"}},"id":6904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"43234:467:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6905,"nodeType":"EmitStatement","src":"43229:472:27"}]},"documentation":{"id":6739,"nodeType":"StructuredDocumentation","src":"34418:4360:27","text":" @notice Request to bridge input token cross chain to a destination chain and receive a specified amount\n of output tokens. The fee paid to relayers and the system should be captured in the spread between output\n amount and input amount when adjusted to be denominated in the input token. A relayer on the destination\n chain will send outputAmount of outputTokens to the recipient and receive inputTokens on a repayment\n chain of their choice. Therefore, the fee should account for destination fee transaction costs,\n the relayer's opportunity cost of capital while they wait to be refunded following an optimistic challenge\n window in the HubPool, and the system fee that they'll be charged.\n @dev On the destination chain, the hash of the deposit data will be used to uniquely identify this deposit, so\n modifying any params in it will result in a different hash and a different deposit. The hash will comprise\n all parameters to this function along with this chain's chainId(). Relayers are only refunded for filling\n deposits with deposit hashes that map exactly to the one emitted by this contract.\n @param depositor The account credited with the deposit who can request to \"speed up\" this deposit by modifying\n the output amount, recipient, and message.\n @param recipient The account receiving funds on the destination chain. Can be an EOA or a contract. If\n the output token is the wrapped native token for the chain, then the recipient will receive native token if\n an EOA or wrapped native token if a contract.\n @param inputToken The token pulled from the caller's account and locked into this contract to\n initiate the deposit. The equivalent of this token on the relayer's repayment chain of choice will be sent\n as a refund. If this is equal to the wrapped native token then the caller can optionally pass in native token as\n msg.value, as long as msg.value = inputTokenAmount.\n @param outputToken The token that the relayer will send to the recipient on the destination chain. Must be an\n ERC20.\n @param inputAmount The amount of input tokens to pull from the caller's account and lock into this contract.\n This amount will be sent to the relayer on their repayment chain of choice as a refund following an optimistic\n challenge window in the HubPool, less a system fee.\n @param outputAmount The amount of output tokens that the relayer will send to the recipient on the destination.\n @param destinationChainId The destination chain identifier. Must be enabled along with the input token\n as a valid deposit route from this spoke pool or this transaction will revert.\n @param exclusiveRelayer The relayer that will be exclusively allowed to fill this deposit before the\n exclusivity deadline timestamp. This must be a valid, non-zero address if the exclusivity deadline is\n greater than the current block.timestamp. If the exclusivity deadline is < currentTime, then this must be\n address(0), and vice versa if this is address(0).\n @param quoteTimestamp The HubPool timestamp that is used to determine the system fee paid by the depositor.\n  This must be set to some time between [currentTime - depositQuoteTimeBuffer, currentTime]\n where currentTime is block.timestamp on this chain or this transaction will revert.\n @param fillDeadline The deadline for the relayer to fill the deposit. After this destination chain timestamp,\n the fill will revert on the destination chain. Must be set between [currentTime, currentTime + fillDeadlineBuffer]\n where currentTime is block.timestamp on this chain or this transaction will revert.\n @param exclusivityDeadline The deadline for the exclusive relayer to fill the deposit. After this\n destination chain timestamp, anyone can fill this deposit on the destination chain. If exclusiveRelayer is set\n to address(0), then this also must be set to 0, (and vice versa), otherwise this must be set >= current time.\n @param message The message to send to the recipient on the destination chain if the recipient is a contract.\n If the message is not empty, the recipient contract must implement handleV3AcrossMessage() or the fill will revert."},"functionSelector":"7b939232","id":6907,"implemented":true,"kind":"function","modifiers":[{"id":6767,"kind":"modifierInvocation","modifierName":{"id":6766,"name":"nonReentrant","nameLocations":["39200:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":845,"src":"39200:12:27"},"nodeType":"ModifierInvocation","src":"39200:12:27"},{"id":6769,"kind":"modifierInvocation","modifierName":{"id":6768,"name":"unpausedDeposits","nameLocations":["39213:16:27"],"nodeType":"IdentifierPath","referencedDeclaration":6352,"src":"39213:16:27"},"nodeType":"ModifierInvocation","src":"39213:16:27"}],"name":"depositV3","nameLocation":"38792:9:27","nodeType":"FunctionDefinition","overrides":{"id":6765,"nodeType":"OverrideSpecifier","overrides":[],"src":"39191:8:27"},"parameters":{"id":6764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6741,"mutability":"mutable","name":"depositor","nameLocation":"38819:9:27","nodeType":"VariableDeclaration","scope":6907,"src":"38811:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6740,"name":"address","nodeType":"ElementaryTypeName","src":"38811:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6743,"mutability":"mutable","name":"recipient","nameLocation":"38846:9:27","nodeType":"VariableDeclaration","scope":6907,"src":"38838:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6742,"name":"address","nodeType":"ElementaryTypeName","src":"38838:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6745,"mutability":"mutable","name":"inputToken","nameLocation":"38873:10:27","nodeType":"VariableDeclaration","scope":6907,"src":"38865:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6744,"name":"address","nodeType":"ElementaryTypeName","src":"38865:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6747,"mutability":"mutable","name":"outputToken","nameLocation":"38901:11:27","nodeType":"VariableDeclaration","scope":6907,"src":"38893:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6746,"name":"address","nodeType":"ElementaryTypeName","src":"38893:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6749,"mutability":"mutable","name":"inputAmount","nameLocation":"38930:11:27","nodeType":"VariableDeclaration","scope":6907,"src":"38922:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6748,"name":"uint256","nodeType":"ElementaryTypeName","src":"38922:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6751,"mutability":"mutable","name":"outputAmount","nameLocation":"38959:12:27","nodeType":"VariableDeclaration","scope":6907,"src":"38951:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6750,"name":"uint256","nodeType":"ElementaryTypeName","src":"38951:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6753,"mutability":"mutable","name":"destinationChainId","nameLocation":"38989:18:27","nodeType":"VariableDeclaration","scope":6907,"src":"38981:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6752,"name":"uint256","nodeType":"ElementaryTypeName","src":"38981:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6755,"mutability":"mutable","name":"exclusiveRelayer","nameLocation":"39025:16:27","nodeType":"VariableDeclaration","scope":6907,"src":"39017:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6754,"name":"address","nodeType":"ElementaryTypeName","src":"39017:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6757,"mutability":"mutable","name":"quoteTimestamp","nameLocation":"39058:14:27","nodeType":"VariableDeclaration","scope":6907,"src":"39051:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6756,"name":"uint32","nodeType":"ElementaryTypeName","src":"39051:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6759,"mutability":"mutable","name":"fillDeadline","nameLocation":"39089:12:27","nodeType":"VariableDeclaration","scope":6907,"src":"39082:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6758,"name":"uint32","nodeType":"ElementaryTypeName","src":"39082:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6761,"mutability":"mutable","name":"exclusivityDeadline","nameLocation":"39118:19:27","nodeType":"VariableDeclaration","scope":6907,"src":"39111:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6760,"name":"uint32","nodeType":"ElementaryTypeName","src":"39111:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6763,"mutability":"mutable","name":"message","nameLocation":"39162:7:27","nodeType":"VariableDeclaration","scope":6907,"src":"39147:22:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6762,"name":"bytes","nodeType":"ElementaryTypeName","src":"39147:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"38801:374:27"},"returnParameters":{"id":6770,"nodeType":"ParameterList","parameters":[],"src":"39230:0:27"},"scope":8866,"src":"38783:4925:27","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[9631],"body":{"id":6946,"nodeType":"Block","src":"45499:660:27","statements":[{"expression":{"arguments":[{"id":6927,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"45552:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6928,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"45575:9:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6929,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"45598:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45598:9:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6931,"name":"updatedOutputAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6914,"src":"45621:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6932,"name":"updatedRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"45654:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6933,"name":"updatedMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6918,"src":"45684:14:27","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":6934,"name":"depositorSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"45712:18:27","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":6926,"name":"_verifyUpdateV3DepositMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8056,"src":"45509:29:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint32,uint256,uint256,address,bytes memory,bytes memory) view"}},"id":6935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45509:231:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6936,"nodeType":"ExpressionStatement","src":"45509:231:27"},{"eventCall":{"arguments":[{"id":6938,"name":"updatedOutputAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6914,"src":"45987:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6939,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"46020:9:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6940,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"46043:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6941,"name":"updatedRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"46066:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6942,"name":"updatedMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6918,"src":"46096:14:27","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":6943,"name":"depositorSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"46124:18:27","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":6937,"name":"RequestedSpeedUpV3Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9530,"src":"45948:25:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint32_$_t_address_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,uint32,address,address,bytes memory,bytes memory)"}},"id":6944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45948:204:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6945,"nodeType":"EmitStatement","src":"45943:209:27"}]},"documentation":{"id":6908,"nodeType":"StructuredDocumentation","src":"43714:1513:27","text":" @notice Depositor can use this function to signal to relayer to use updated output amount, recipient,\n and/or message.\n @dev the depositor and depositId must match the params in a V3FundsDeposited event that the depositor\n wants to speed up. The relayer has the option but not the obligation to use this updated information\n when filling the deposit via fillV3RelayWithUpdatedDeposit().\n @param depositor Depositor that must sign the depositorSignature and was the original depositor.\n @param depositId Deposit ID to speed up.\n @param updatedOutputAmount New output amount to use for this deposit. Should be lower than previous value\n otherwise relayer has no incentive to use this updated value.\n @param updatedRecipient New recipient to use for this deposit. Can be modified if the recipient is a contract\n that expects to receive a message from the relay and for some reason needs to be modified.\n @param updatedMessage New message to use for this deposit. Can be modified if the recipient is a contract\n that expects to receive a message from the relay and for some reason needs to be modified.\n @param depositorSignature Signed EIP712 hashstruct containing the deposit ID. Should be signed by the depositor\n account. If depositor is a contract, then should implement EIP1271 to sign as a contract. See\n _verifyUpdateV3DepositMessage() for more details about how this signature should be constructed."},"functionSelector":"4e0fb8f5","id":6947,"implemented":true,"kind":"function","modifiers":[{"id":6924,"kind":"modifierInvocation","modifierName":{"id":6923,"name":"nonReentrant","nameLocations":["45486:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":845,"src":"45486:12:27"},"nodeType":"ModifierInvocation","src":"45486:12:27"}],"name":"speedUpV3Deposit","nameLocation":"45241:16:27","nodeType":"FunctionDefinition","overrides":{"id":6922,"nodeType":"OverrideSpecifier","overrides":[],"src":"45477:8:27"},"parameters":{"id":6921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6910,"mutability":"mutable","name":"depositor","nameLocation":"45275:9:27","nodeType":"VariableDeclaration","scope":6947,"src":"45267:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6909,"name":"address","nodeType":"ElementaryTypeName","src":"45267:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6912,"mutability":"mutable","name":"depositId","nameLocation":"45301:9:27","nodeType":"VariableDeclaration","scope":6947,"src":"45294:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6911,"name":"uint32","nodeType":"ElementaryTypeName","src":"45294:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6914,"mutability":"mutable","name":"updatedOutputAmount","nameLocation":"45328:19:27","nodeType":"VariableDeclaration","scope":6947,"src":"45320:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6913,"name":"uint256","nodeType":"ElementaryTypeName","src":"45320:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6916,"mutability":"mutable","name":"updatedRecipient","nameLocation":"45365:16:27","nodeType":"VariableDeclaration","scope":6947,"src":"45357:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6915,"name":"address","nodeType":"ElementaryTypeName","src":"45357:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6918,"mutability":"mutable","name":"updatedMessage","nameLocation":"45406:14:27","nodeType":"VariableDeclaration","scope":6947,"src":"45391:29:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6917,"name":"bytes","nodeType":"ElementaryTypeName","src":"45391:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6920,"mutability":"mutable","name":"depositorSignature","nameLocation":"45445:18:27","nodeType":"VariableDeclaration","scope":6947,"src":"45430:33:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6919,"name":"bytes","nodeType":"ElementaryTypeName","src":"45430:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"45257:212:27"},"returnParameters":{"id":6925,"nodeType":"ParameterList","parameters":[],"src":"45499:0:27"},"scope":8866,"src":"45232:927:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[9336],"body":{"id":7031,"nodeType":"Block","src":"48864:1454:27","statements":[{"assignments":[6981],"declarations":[{"constant":false,"id":6981,"mutability":"mutable","name":"relayExecution","nameLocation":"49231:14:27","nodeType":"VariableDeclaration","scope":7031,"src":"49209:36:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution"},"typeName":{"id":6980,"nodeType":"UserDefinedTypeName","pathNode":{"id":6979,"name":"RelayExecution","nameLocations":["49209:14:27"],"nodeType":"IdentifierPath","referencedDeclaration":6258,"src":"49209:14:27"},"referencedDeclaration":6258,"src":"49209:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_storage_ptr","typeString":"struct SpokePool.RelayExecution"}},"visibility":"internal"}],"id":7010,"initialValue":{"arguments":[{"arguments":[{"id":6985,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6950,"src":"49342:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6986,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6952,"src":"49380:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6987,"name":"destinationToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6954,"src":"49425:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6988,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6956,"src":"49467:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6989,"name":"realizedLpFeePct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"49509:16:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":6990,"name":"relayerFeePct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"49558:13:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":6991,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6968,"src":"49600:9:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6992,"name":"originChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6962,"src":"49642:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6993,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"49693:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"49693:9:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6995,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"49729:7:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6983,"name":"SpokePoolInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9421,"src":"49284:18:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SpokePoolInterface_$9421_$","typeString":"type(contract SpokePoolInterface)"}},"id":6984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"49303:9:27","memberName":"RelayData","nodeType":"MemberAccess","referencedDeclaration":9176,"src":"49284:28:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RelayData_$9176_storage_ptr_$","typeString":"type(struct SpokePoolInterface.RelayData storage pointer)"}},"id":6996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["49331:9:27","49369:9:27","49407:16:27","49459:6:27","49491:16:27","49543:13:27","49589:9:27","49627:13:27","49673:18:27","49720:7:27"],"names":["depositor","recipient","destinationToken","amount","realizedLpFeePct","relayerFeePct","depositId","originChainId","destinationChainId","message"],"nodeType":"FunctionCall","src":"49284:467:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}},{"arguments":[{"hexValue":"30","id":6999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"49784:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"49776:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6997,"name":"bytes32","nodeType":"ElementaryTypeName","src":"49776:7:27","typeDescriptions":{}}},"id":7000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"49776:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7001,"name":"relayerFeePct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"49822:13:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":7002,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6952,"src":"49867:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7003,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"49906:7:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7004,"name":"repaymentChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"49945:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7005,"name":"maxTokensToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"49992:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":7006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"50031:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":7007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"50071:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7008,"name":"maxCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6972,"src":"50096:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6982,"name":"RelayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6258,"src":"49248:14:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RelayExecution_$6258_storage_ptr_$","typeString":"type(struct SpokePool.RelayExecution storage pointer)"}},"id":7009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["49277:5:27","49765:9:27","49800:20:27","49849:16:27","49890:14:27","49927:16:27","49975:15:27","50021:8:27","50050:19:27","50086:8:27"],"names":["relay","relayHash","updatedRelayerFeePct","updatedRecipient","updatedMessage","repaymentChainId","maxTokensToSend","slowFill","payoutAdjustmentPct","maxCount"],"nodeType":"FunctionCall","src":"49248:867:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"nodeType":"VariableDeclarationStatement","src":"49209:906:27"},{"expression":{"id":7018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7011,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6981,"src":"50125:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":7013,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"50140:9:27","memberName":"relayHash","nodeType":"MemberAccess","referencedDeclaration":6241,"src":"50125:24:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":7015,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6981,"src":"50166:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":7016,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"50181:5:27","memberName":"relay","nodeType":"MemberAccess","referencedDeclaration":6239,"src":"50166:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}],"id":7014,"name":"_getRelayHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8223,"src":"50152:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RelayData_$9176_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct SpokePoolInterface.RelayData memory) pure returns (bytes32)"}},"id":7017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"50152:35:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"50125:62:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7019,"nodeType":"ExpressionStatement","src":"50125:62:27"},{"assignments":[7021],"declarations":[{"constant":false,"id":7021,"mutability":"mutable","name":"fillAmountPreFees","nameLocation":"50206:17:27","nodeType":"VariableDeclaration","scope":7031,"src":"50198:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7020,"name":"uint256","nodeType":"ElementaryTypeName","src":"50198:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7025,"initialValue":{"arguments":[{"id":7023,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6981,"src":"50237:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}],"id":7022,"name":"_fillRelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8564,"src":"50226:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_RelayExecution_$6258_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct SpokePool.RelayExecution memory) returns (uint256)"}},"id":7024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"50226:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"50198:54:27"},{"expression":{"arguments":[{"id":7027,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6981,"src":"50277:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},{"id":7028,"name":"fillAmountPreFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7021,"src":"50293:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7026,"name":"_emitFillRelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8854,"src":"50262:14:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_RelayExecution_$6258_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct SpokePool.RelayExecution memory,uint256)"}},"id":7029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"50262:49:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7030,"nodeType":"ExpressionStatement","src":"50262:49:27"}]},"documentation":{"id":6948,"nodeType":"StructuredDocumentation","src":"48394:53:27","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"functionSelector":"44b8be68","id":7032,"implemented":true,"kind":"function","modifiers":[{"id":6975,"kind":"modifierInvocation","modifierName":{"id":6974,"name":"nonReentrant","nameLocations":["48837:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":845,"src":"48837:12:27"},"nodeType":"ModifierInvocation","src":"48837:12:27"},{"id":6977,"kind":"modifierInvocation","modifierName":{"id":6976,"name":"unpausedFills","nameLocations":["48850:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":6362,"src":"48850:13:27"},"nodeType":"ModifierInvocation","src":"48850:13:27"}],"name":"fillRelay","nameLocation":"48461:9:27","nodeType":"FunctionDefinition","parameters":{"id":6973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6950,"mutability":"mutable","name":"depositor","nameLocation":"48488:9:27","nodeType":"VariableDeclaration","scope":7032,"src":"48480:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6949,"name":"address","nodeType":"ElementaryTypeName","src":"48480:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6952,"mutability":"mutable","name":"recipient","nameLocation":"48515:9:27","nodeType":"VariableDeclaration","scope":7032,"src":"48507:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6951,"name":"address","nodeType":"ElementaryTypeName","src":"48507:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6954,"mutability":"mutable","name":"destinationToken","nameLocation":"48542:16:27","nodeType":"VariableDeclaration","scope":7032,"src":"48534:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6953,"name":"address","nodeType":"ElementaryTypeName","src":"48534:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6956,"mutability":"mutable","name":"amount","nameLocation":"48576:6:27","nodeType":"VariableDeclaration","scope":7032,"src":"48568:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6955,"name":"uint256","nodeType":"ElementaryTypeName","src":"48568:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6958,"mutability":"mutable","name":"maxTokensToSend","nameLocation":"48600:15:27","nodeType":"VariableDeclaration","scope":7032,"src":"48592:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6957,"name":"uint256","nodeType":"ElementaryTypeName","src":"48592:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6960,"mutability":"mutable","name":"repaymentChainId","nameLocation":"48633:16:27","nodeType":"VariableDeclaration","scope":7032,"src":"48625:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6959,"name":"uint256","nodeType":"ElementaryTypeName","src":"48625:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6962,"mutability":"mutable","name":"originChainId","nameLocation":"48667:13:27","nodeType":"VariableDeclaration","scope":7032,"src":"48659:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6961,"name":"uint256","nodeType":"ElementaryTypeName","src":"48659:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6964,"mutability":"mutable","name":"realizedLpFeePct","nameLocation":"48696:16:27","nodeType":"VariableDeclaration","scope":7032,"src":"48690:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6963,"name":"int64","nodeType":"ElementaryTypeName","src":"48690:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":6966,"mutability":"mutable","name":"relayerFeePct","nameLocation":"48728:13:27","nodeType":"VariableDeclaration","scope":7032,"src":"48722:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6965,"name":"int64","nodeType":"ElementaryTypeName","src":"48722:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":6968,"mutability":"mutable","name":"depositId","nameLocation":"48758:9:27","nodeType":"VariableDeclaration","scope":7032,"src":"48751:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6967,"name":"uint32","nodeType":"ElementaryTypeName","src":"48751:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6970,"mutability":"mutable","name":"message","nameLocation":"48790:7:27","nodeType":"VariableDeclaration","scope":7032,"src":"48777:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6969,"name":"bytes","nodeType":"ElementaryTypeName","src":"48777:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6972,"mutability":"mutable","name":"maxCount","nameLocation":"48815:8:27","nodeType":"VariableDeclaration","scope":7032,"src":"48807:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6971,"name":"uint256","nodeType":"ElementaryTypeName","src":"48807:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"48470:359:27"},"returnParameters":{"id":6978,"nodeType":"ParameterList","parameters":[],"src":"48864:0:27"},"scope":8866,"src":"48452:1866:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[9372],"body":{"id":7135,"nodeType":"Block","src":"53000:1384:27","statements":[{"assignments":[7075],"declarations":[{"constant":false,"id":7075,"mutability":"mutable","name":"relayExecution","nameLocation":"53032:14:27","nodeType":"VariableDeclaration","scope":7135,"src":"53010:36:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution"},"typeName":{"id":7074,"nodeType":"UserDefinedTypeName","pathNode":{"id":7073,"name":"RelayExecution","nameLocations":["53010:14:27"],"nodeType":"IdentifierPath","referencedDeclaration":6258,"src":"53010:14:27"},"referencedDeclaration":6258,"src":"53010:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_storage_ptr","typeString":"struct SpokePool.RelayExecution"}},"visibility":"internal"}],"id":7104,"initialValue":{"arguments":[{"arguments":[{"id":7079,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7035,"src":"53143:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7080,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"53181:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7081,"name":"destinationToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7041,"src":"53226:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7082,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7043,"src":"53268:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7083,"name":"realizedLpFeePct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7051,"src":"53310:16:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":7084,"name":"relayerFeePct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7053,"src":"53359:13:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":7085,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"53401:9:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7086,"name":"originChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"53443:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":7087,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"53494:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":7088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"53494:9:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7089,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"53530:7:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7077,"name":"SpokePoolInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9421,"src":"53085:18:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SpokePoolInterface_$9421_$","typeString":"type(contract SpokePoolInterface)"}},"id":7078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"53104:9:27","memberName":"RelayData","nodeType":"MemberAccess","referencedDeclaration":9176,"src":"53085:28:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RelayData_$9176_storage_ptr_$","typeString":"type(struct SpokePoolInterface.RelayData storage pointer)"}},"id":7090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["53132:9:27","53170:9:27","53208:16:27","53260:6:27","53292:16:27","53344:13:27","53390:9:27","53428:13:27","53474:18:27","53521:7:27"],"names":["depositor","recipient","destinationToken","amount","realizedLpFeePct","relayerFeePct","depositId","originChainId","destinationChainId","message"],"nodeType":"FunctionCall","src":"53085:467:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}},{"arguments":[{"hexValue":"30","id":7093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"53585:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"53577:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7091,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53577:7:27","typeDescriptions":{}}},"id":7094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"53577:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7095,"name":"updatedRelayerFeePct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7055,"src":"53623:20:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":7096,"name":"updatedRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"53675:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7097,"name":"updatedMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"53721:14:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7098,"name":"repaymentChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7047,"src":"53767:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7099,"name":"maxTokensToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7045,"src":"53814:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":7100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"53853:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":7101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"53893:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7102,"name":"maxCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7065,"src":"53918:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7076,"name":"RelayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6258,"src":"53049:14:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RelayExecution_$6258_storage_ptr_$","typeString":"type(struct SpokePool.RelayExecution storage pointer)"}},"id":7103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["53078:5:27","53566:9:27","53601:20:27","53657:16:27","53705:14:27","53749:16:27","53797:15:27","53843:8:27","53872:19:27","53908:8:27"],"names":["relay","relayHash","updatedRelayerFeePct","updatedRecipient","updatedMessage","repaymentChainId","maxTokensToSend","slowFill","payoutAdjustmentPct","maxCount"],"nodeType":"FunctionCall","src":"53049:888:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"nodeType":"VariableDeclarationStatement","src":"53010:927:27"},{"expression":{"id":7112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7105,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"53947:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":7107,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"53962:9:27","memberName":"relayHash","nodeType":"MemberAccess","referencedDeclaration":6241,"src":"53947:24:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":7109,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"53988:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":7110,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"54003:5:27","memberName":"relay","nodeType":"MemberAccess","referencedDeclaration":6239,"src":"53988:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}],"id":7108,"name":"_getRelayHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8223,"src":"53974:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RelayData_$9176_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct SpokePoolInterface.RelayData memory) pure returns (bytes32)"}},"id":7111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"53974:35:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"53947:62:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7113,"nodeType":"ExpressionStatement","src":"53947:62:27"},{"expression":{"arguments":[{"id":7115,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7035,"src":"54061:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7116,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"54084:9:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7117,"name":"originChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"54107:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7118,"name":"updatedRelayerFeePct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7055,"src":"54134:20:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":7119,"name":"updatedRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"54168:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7120,"name":"updatedMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"54198:14:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7121,"name":"depositorSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7063,"src":"54226:18:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7114,"name":"_verifyUpdateDepositMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8013,"src":"54020:27:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint32_$_t_uint256_$_t_int64_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint32,uint256,int64,address,bytes memory,bytes memory) view"}},"id":7122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"54020:234:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7123,"nodeType":"ExpressionStatement","src":"54020:234:27"},{"assignments":[7125],"declarations":[{"constant":false,"id":7125,"mutability":"mutable","name":"fillAmountPreFees","nameLocation":"54272:17:27","nodeType":"VariableDeclaration","scope":7135,"src":"54264:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7124,"name":"uint256","nodeType":"ElementaryTypeName","src":"54264:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7129,"initialValue":{"arguments":[{"id":7127,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"54303:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}],"id":7126,"name":"_fillRelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8564,"src":"54292:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_RelayExecution_$6258_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct SpokePool.RelayExecution memory) returns (uint256)"}},"id":7128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"54292:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"54264:54:27"},{"expression":{"arguments":[{"id":7131,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"54343:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},{"id":7132,"name":"fillAmountPreFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7125,"src":"54359:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7130,"name":"_emitFillRelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8854,"src":"54328:14:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_RelayExecution_$6258_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct SpokePool.RelayExecution memory,uint256)"}},"id":7133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"54328:49:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7134,"nodeType":"ExpressionStatement","src":"54328:49:27"}]},"documentation":{"id":7033,"nodeType":"StructuredDocumentation","src":"52355:53:27","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"functionSelector":"5ceaec32","id":7136,"implemented":true,"kind":"function","modifiers":[{"id":7069,"kind":"modifierInvocation","modifierName":{"id":7068,"name":"nonReentrant","nameLocations":["52973:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":845,"src":"52973:12:27"},"nodeType":"ModifierInvocation","src":"52973:12:27"},{"id":7071,"kind":"modifierInvocation","modifierName":{"id":7070,"name":"unpausedFills","nameLocations":["52986:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":6362,"src":"52986:13:27"},"nodeType":"ModifierInvocation","src":"52986:13:27"}],"name":"fillRelayWithUpdatedDeposit","nameLocation":"52422:27:27","nodeType":"FunctionDefinition","overrides":{"id":7067,"nodeType":"OverrideSpecifier","overrides":[],"src":"52964:8:27"},"parameters":{"id":7066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7035,"mutability":"mutable","name":"depositor","nameLocation":"52467:9:27","nodeType":"VariableDeclaration","scope":7136,"src":"52459:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7034,"name":"address","nodeType":"ElementaryTypeName","src":"52459:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7037,"mutability":"mutable","name":"recipient","nameLocation":"52494:9:27","nodeType":"VariableDeclaration","scope":7136,"src":"52486:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7036,"name":"address","nodeType":"ElementaryTypeName","src":"52486:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7039,"mutability":"mutable","name":"updatedRecipient","nameLocation":"52521:16:27","nodeType":"VariableDeclaration","scope":7136,"src":"52513:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7038,"name":"address","nodeType":"ElementaryTypeName","src":"52513:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7041,"mutability":"mutable","name":"destinationToken","nameLocation":"52555:16:27","nodeType":"VariableDeclaration","scope":7136,"src":"52547:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7040,"name":"address","nodeType":"ElementaryTypeName","src":"52547:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7043,"mutability":"mutable","name":"amount","nameLocation":"52589:6:27","nodeType":"VariableDeclaration","scope":7136,"src":"52581:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7042,"name":"uint256","nodeType":"ElementaryTypeName","src":"52581:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7045,"mutability":"mutable","name":"maxTokensToSend","nameLocation":"52613:15:27","nodeType":"VariableDeclaration","scope":7136,"src":"52605:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7044,"name":"uint256","nodeType":"ElementaryTypeName","src":"52605:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7047,"mutability":"mutable","name":"repaymentChainId","nameLocation":"52646:16:27","nodeType":"VariableDeclaration","scope":7136,"src":"52638:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7046,"name":"uint256","nodeType":"ElementaryTypeName","src":"52638:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7049,"mutability":"mutable","name":"originChainId","nameLocation":"52680:13:27","nodeType":"VariableDeclaration","scope":7136,"src":"52672:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7048,"name":"uint256","nodeType":"ElementaryTypeName","src":"52672:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7051,"mutability":"mutable","name":"realizedLpFeePct","nameLocation":"52709:16:27","nodeType":"VariableDeclaration","scope":7136,"src":"52703:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7050,"name":"int64","nodeType":"ElementaryTypeName","src":"52703:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":7053,"mutability":"mutable","name":"relayerFeePct","nameLocation":"52741:13:27","nodeType":"VariableDeclaration","scope":7136,"src":"52735:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7052,"name":"int64","nodeType":"ElementaryTypeName","src":"52735:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":7055,"mutability":"mutable","name":"updatedRelayerFeePct","nameLocation":"52770:20:27","nodeType":"VariableDeclaration","scope":7136,"src":"52764:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7054,"name":"int64","nodeType":"ElementaryTypeName","src":"52764:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":7057,"mutability":"mutable","name":"depositId","nameLocation":"52807:9:27","nodeType":"VariableDeclaration","scope":7136,"src":"52800:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7056,"name":"uint32","nodeType":"ElementaryTypeName","src":"52800:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7059,"mutability":"mutable","name":"message","nameLocation":"52839:7:27","nodeType":"VariableDeclaration","scope":7136,"src":"52826:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7058,"name":"bytes","nodeType":"ElementaryTypeName","src":"52826:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7061,"mutability":"mutable","name":"updatedMessage","nameLocation":"52869:14:27","nodeType":"VariableDeclaration","scope":7136,"src":"52856:27:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7060,"name":"bytes","nodeType":"ElementaryTypeName","src":"52856:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7063,"mutability":"mutable","name":"depositorSignature","nameLocation":"52906:18:27","nodeType":"VariableDeclaration","scope":7136,"src":"52893:31:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7062,"name":"bytes","nodeType":"ElementaryTypeName","src":"52893:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7065,"mutability":"mutable","name":"maxCount","nameLocation":"52942:8:27","nodeType":"VariableDeclaration","scope":7136,"src":"52934:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7064,"name":"uint256","nodeType":"ElementaryTypeName","src":"52934:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"52449:507:27"},"returnParameters":{"id":7072,"nodeType":"ParameterList","parameters":[],"src":"53000:0:27"},"scope":8866,"src":"52413:1971:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[9639],"body":{"id":7190,"nodeType":"Block","src":"58193:747:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7150,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"58352:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}},"id":7151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"58362:19:27","memberName":"exclusivityDeadline","nodeType":"MemberAccess","referencedDeclaration":9453,"src":"58352:29:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7152,"name":"getCurrentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7571,"src":"58385:14:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":7153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"58385:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"58352:49:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7155,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"58405:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}},"id":7156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"58415:16:27","memberName":"exclusiveRelayer","nodeType":"MemberAccess","referencedDeclaration":9437,"src":"58405:26:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":7157,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"58435:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"58439:6:27","memberName":"sender","nodeType":"MemberAccess","src":"58435:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"58405:40:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"58352:93:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7165,"nodeType":"IfStatement","src":"58348:152:27","trueBody":{"id":7164,"nodeType":"Block","src":"58447:53:27","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7161,"name":"NotExclusiveRelayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9686,"src":"58468:19:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"58468:21:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7163,"nodeType":"RevertStatement","src":"58461:28:27"}]}},{"assignments":[7168],"declarations":[{"constant":false,"id":7168,"mutability":"mutable","name":"relayExecution","nameLocation":"58540:14:27","nodeType":"VariableDeclaration","scope":7190,"src":"58510:44:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams"},"typeName":{"id":7167,"nodeType":"UserDefinedTypeName","pathNode":{"id":7166,"name":"V3RelayExecutionParams","nameLocations":["58510:22:27"],"nodeType":"IdentifierPath","referencedDeclaration":9478,"src":"58510:22:27"},"referencedDeclaration":9478,"src":"58510:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_storage_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams"}},"visibility":"internal"}],"id":7182,"initialValue":{"arguments":[{"id":7170,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"58601:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}},{"arguments":[{"id":7172,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"58651:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}],"id":7171,"name":"_getV3RelayHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8241,"src":"58635:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_V3RelayData_$9456_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct V3SpokePoolInterface.V3RelayData memory) view returns (bytes32)"}},"id":7173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"58635:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7174,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"58696:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}},"id":7175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"58706:12:27","memberName":"outputAmount","nodeType":"MemberAccess","referencedDeclaration":9445,"src":"58696:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7176,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"58750:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}},"id":7177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"58760:9:27","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":9435,"src":"58750:19:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7178,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"58799:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}},"id":7179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"58809:7:27","memberName":"message","nodeType":"MemberAccess","referencedDeclaration":9455,"src":"58799:17:27","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":7180,"name":"repaymentChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"58848:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7169,"name":"V3RelayExecutionParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9478,"src":"58557:22:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_V3RelayExecutionParams_$9478_storage_ptr_$","typeString":"type(struct V3SpokePoolInterface.V3RelayExecutionParams storage pointer)"}},"id":7181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["58594:5:27","58624:9:27","58675:19:27","58732:16:27","58783:14:27","58830:16:27"],"names":["relay","relayHash","updatedOutputAmount","updatedRecipient","updatedMessage","repaymentChainId"],"nodeType":"FunctionCall","src":"58557:318:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams memory"}},"nodeType":"VariableDeclarationStatement","src":"58510:365:27"},{"expression":{"arguments":[{"id":7184,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7168,"src":"58899:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams memory"}},{"expression":{"id":7185,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"58915:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"58919:6:27","memberName":"sender","nodeType":"MemberAccess","src":"58915:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":7187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"58927:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7183,"name":"_fillRelayV3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8785,"src":"58886:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_V3RelayExecutionParams_$9478_memory_ptr_$_t_address_$_t_bool_$returns$__$","typeString":"function (struct V3SpokePoolInterface.V3RelayExecutionParams memory,address,bool)"}},"id":7188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"58886:47:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7189,"nodeType":"ExpressionStatement","src":"58886:47:27"}]},"documentation":{"id":7137,"nodeType":"StructuredDocumentation","src":"54535:3495:27","text":" @notice Fulfill request to bridge cross chain by sending specified output tokens to the recipient.\n @dev The fee paid to relayers and the system should be captured in the spread between output\n amount and input amount when adjusted to be denominated in the input token. A relayer on the destination\n chain will send outputAmount of outputTokens to the recipient and receive inputTokens on a repayment\n chain of their choice. Therefore, the fee should account for destination fee transaction costs, the\n relayer's opportunity cost of capital while they wait to be refunded following an optimistic challenge\n window in the HubPool, and a system fee charged to relayers.\n @dev The hash of the relayData will be used to uniquely identify the deposit to fill, so\n modifying any params in it will result in a different hash and a different deposit. The hash will comprise\n all parameters passed to depositV3() on the origin chain along with that chain's chainId(). This chain's\n chainId() must therefore match the destinationChainId passed into depositV3.\n Relayers are only refunded for filling deposits with deposit hashes that map exactly to the one emitted by the\n origin SpokePool therefore the relayer should not modify any params in relayData.\n @dev Cannot fill more than once. Partial fills are not supported.\n @param relayData struct containing all the data needed to identify the deposit to be filled. Should match\n all the same-named parameters emitted in the origin chain V3FundsDeposited event.\n - depositor: The account credited with the deposit who can request to \"speed up\" this deposit by modifying\n the output amount, recipient, and message.\n - recipient The account receiving funds on this chain. Can be an EOA or a contract. If\n the output token is the wrapped native token for the chain, then the recipient will receive native token if\n an EOA or wrapped native token if a contract.\n - inputToken: The token pulled from the caller's account to initiate the deposit. The equivalent of this\n token on the repayment chain will be sent as a refund to the caller.\n - outputToken The token that the caller will send to the recipient on the destination chain. Must be an\n ERC20.\n - inputAmount: This amount, less a system fee, will be sent to the caller on their repayment chain of choice as a refund\n following an optimistic challenge window in the HubPool.\n - outputAmount: The amount of output tokens that the caller will send to the recipient.\n - originChainId: The origin chain identifier.\n - exclusiveRelayer The relayer that will be exclusively allowed to fill this deposit before the\n exclusivity deadline timestamp.\n - fillDeadline The deadline for the caller to fill the deposit. After this timestamp,\n the fill will revert on the destination chain.\n - exclusivityDeadline: The deadline for the exclusive relayer to fill the deposit. After this\n timestamp, anyone can fill this deposit.\n - message The message to send to the recipient if the recipient is a contract that implements a\n handleV3AcrossMessage() public function\n @param repaymentChainId Chain of SpokePool where relayer wants to be refunded after the challenge window has\n passed. Will receive inputAmount of the equivalent token to inputToken on the repayment chain."},"functionSelector":"2e378115","id":7191,"implemented":true,"kind":"function","modifiers":[{"id":7146,"kind":"modifierInvocation","modifierName":{"id":7145,"name":"nonReentrant","nameLocations":["58154:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":845,"src":"58154:12:27"},"nodeType":"ModifierInvocation","src":"58154:12:27"},{"id":7148,"kind":"modifierInvocation","modifierName":{"id":7147,"name":"unpausedFills","nameLocations":["58175:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":6362,"src":"58175:13:27"},"nodeType":"ModifierInvocation","src":"58175:13:27"}],"name":"fillV3Relay","nameLocation":"58044:11:27","nodeType":"FunctionDefinition","overrides":{"id":7144,"nodeType":"OverrideSpecifier","overrides":[],"src":"58137:8:27"},"parameters":{"id":7143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7140,"mutability":"mutable","name":"relayData","nameLocation":"58077:9:27","nodeType":"VariableDeclaration","scope":7191,"src":"58056:30:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"},"typeName":{"id":7139,"nodeType":"UserDefinedTypeName","pathNode":{"id":7138,"name":"V3RelayData","nameLocations":["58056:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":9456,"src":"58056:11:27"},"referencedDeclaration":9456,"src":"58056:11:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_storage_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"}},"visibility":"internal"},{"constant":false,"id":7142,"mutability":"mutable","name":"repaymentChainId","nameLocation":"58096:16:27","nodeType":"VariableDeclaration","scope":7191,"src":"58088:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7141,"name":"uint256","nodeType":"ElementaryTypeName","src":"58088:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58055:58:27"},"returnParameters":{"id":7149,"nodeType":"ParameterList","parameters":[],"src":"58193:0:27"},"scope":8866,"src":"58035:905:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[9655],"body":{"id":7263,"nodeType":"Block","src":"60554:1014:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7213,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7195,"src":"60713:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}},"id":7214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"60723:19:27","memberName":"exclusivityDeadline","nodeType":"MemberAccess","referencedDeclaration":9453,"src":"60713:29:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7215,"name":"getCurrentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7571,"src":"60746:14:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":7216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"60746:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"60713:49:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7218,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7195,"src":"60766:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}},"id":7219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"60776:16:27","memberName":"exclusiveRelayer","nodeType":"MemberAccess","referencedDeclaration":9437,"src":"60766:26:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":7220,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"60796:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"60800:6:27","memberName":"sender","nodeType":"MemberAccess","src":"60796:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"60766:40:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"60713:93:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7228,"nodeType":"IfStatement","src":"60709:152:27","trueBody":{"id":7227,"nodeType":"Block","src":"60808:53:27","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7224,"name":"NotExclusiveRelayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9686,"src":"60829:19:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"60829:21:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7226,"nodeType":"RevertStatement","src":"60822:28:27"}]}},{"assignments":[7231],"declarations":[{"constant":false,"id":7231,"mutability":"mutable","name":"relayExecution","nameLocation":"60901:14:27","nodeType":"VariableDeclaration","scope":7263,"src":"60871:44:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams"},"typeName":{"id":7230,"nodeType":"UserDefinedTypeName","pathNode":{"id":7229,"name":"V3RelayExecutionParams","nameLocations":["60871:22:27"],"nodeType":"IdentifierPath","referencedDeclaration":9478,"src":"60871:22:27"},"referencedDeclaration":9478,"src":"60871:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_storage_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams"}},"visibility":"internal"}],"id":7242,"initialValue":{"arguments":[{"id":7233,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7195,"src":"60962:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}},{"arguments":[{"id":7235,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7195,"src":"61012:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}],"id":7234,"name":"_getV3RelayHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8241,"src":"60996:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_V3RelayData_$9456_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct V3SpokePoolInterface.V3RelayData memory) view returns (bytes32)"}},"id":7236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"60996:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7237,"name":"updatedOutputAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7199,"src":"61057:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7238,"name":"updatedRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"61108:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7239,"name":"updatedMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"61154:14:27","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":7240,"name":"repaymentChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"61200:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7232,"name":"V3RelayExecutionParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9478,"src":"60918:22:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_V3RelayExecutionParams_$9478_storage_ptr_$","typeString":"type(struct V3SpokePoolInterface.V3RelayExecutionParams storage pointer)"}},"id":7241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["60955:5:27","60985:9:27","61036:19:27","61090:16:27","61138:14:27","61182:16:27"],"names":["relay","relayHash","updatedOutputAmount","updatedRecipient","updatedMessage","repaymentChainId"],"nodeType":"FunctionCall","src":"60918:309:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams memory"}},"nodeType":"VariableDeclarationStatement","src":"60871:356:27"},{"expression":{"arguments":[{"expression":{"id":7244,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7195,"src":"61281:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}},"id":7245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"61291:9:27","memberName":"depositor","nodeType":"MemberAccess","referencedDeclaration":9433,"src":"61281:19:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7246,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7195,"src":"61314:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}},"id":7247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"61324:9:27","memberName":"depositId","nodeType":"MemberAccess","referencedDeclaration":9449,"src":"61314:19:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":7248,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7195,"src":"61347:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}},"id":7249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"61357:13:27","memberName":"originChainId","nodeType":"MemberAccess","referencedDeclaration":9447,"src":"61347:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7250,"name":"updatedOutputAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7199,"src":"61384:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7251,"name":"updatedRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"61417:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7252,"name":"updatedMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"61447:14:27","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":7253,"name":"depositorSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7205,"src":"61475:18:27","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":7243,"name":"_verifyUpdateV3DepositMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8056,"src":"61238:29:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint32,uint256,uint256,address,bytes memory,bytes memory) view"}},"id":7254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"61238:265:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7255,"nodeType":"ExpressionStatement","src":"61238:265:27"},{"expression":{"arguments":[{"id":7257,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7231,"src":"61527:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams memory"}},{"expression":{"id":7258,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"61543:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"61547:6:27","memberName":"sender","nodeType":"MemberAccess","src":"61543:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":7260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"61555:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7256,"name":"_fillRelayV3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8785,"src":"61514:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_V3RelayExecutionParams_$9478_memory_ptr_$_t_address_$_t_bool_$returns$__$","typeString":"function (struct V3SpokePoolInterface.V3RelayExecutionParams memory,address,bool)"}},"id":7261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"61514:47:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7262,"nodeType":"ExpressionStatement","src":"61514:47:27"}]},"documentation":{"id":7192,"nodeType":"StructuredDocumentation","src":"58946:1288:27","text":" @notice Identical to fillV3Relay except that the relayer wants to use a depositor's updated output amount,\n recipient, and/or message. The relayer should only use this function if they can supply a message signed\n by the depositor that contains the fill's matching deposit ID along with updated relay parameters.\n If the signature can be verified, then this function will emit a FilledV3Event that will be used by\n the system for refund verification purposes. In otherwords, this function is an alternative way to fill a\n a deposit than fillV3Relay.\n @dev Subject to same exclusivity deadline rules as fillV3Relay().\n @param relayData struct containing all the data needed to identify the deposit to be filled. See fillV3Relay().\n @param repaymentChainId Chain of SpokePool where relayer wants to be refunded after the challenge window has\n passed. See fillV3Relay().\n @param updatedOutputAmount New output amount to use for this deposit.\n @param updatedRecipient New recipient to use for this deposit.\n @param updatedMessage New message to use for this deposit.\n @param depositorSignature Signed EIP712 hashstruct containing the deposit ID. Should be signed by the depositor\n account."},"functionSelector":"ccfa5971","id":7264,"implemented":true,"kind":"function","modifiers":[{"id":7209,"kind":"modifierInvocation","modifierName":{"id":7208,"name":"nonReentrant","nameLocations":["60527:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":845,"src":"60527:12:27"},"nodeType":"ModifierInvocation","src":"60527:12:27"},{"id":7211,"kind":"modifierInvocation","modifierName":{"id":7210,"name":"unpausedFills","nameLocations":["60540:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":6362,"src":"60540:13:27"},"nodeType":"ModifierInvocation","src":"60540:13:27"}],"name":"fillV3RelayWithUpdatedDeposit","nameLocation":"60248:29:27","nodeType":"FunctionDefinition","overrides":{"id":7207,"nodeType":"OverrideSpecifier","overrides":[],"src":"60518:8:27"},"parameters":{"id":7206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7195,"mutability":"mutable","name":"relayData","nameLocation":"60308:9:27","nodeType":"VariableDeclaration","scope":7264,"src":"60287:30:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"},"typeName":{"id":7194,"nodeType":"UserDefinedTypeName","pathNode":{"id":7193,"name":"V3RelayData","nameLocations":["60287:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":9456,"src":"60287:11:27"},"referencedDeclaration":9456,"src":"60287:11:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_storage_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"}},"visibility":"internal"},{"constant":false,"id":7197,"mutability":"mutable","name":"repaymentChainId","nameLocation":"60335:16:27","nodeType":"VariableDeclaration","scope":7264,"src":"60327:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7196,"name":"uint256","nodeType":"ElementaryTypeName","src":"60327:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7199,"mutability":"mutable","name":"updatedOutputAmount","nameLocation":"60369:19:27","nodeType":"VariableDeclaration","scope":7264,"src":"60361:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7198,"name":"uint256","nodeType":"ElementaryTypeName","src":"60361:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7201,"mutability":"mutable","name":"updatedRecipient","nameLocation":"60406:16:27","nodeType":"VariableDeclaration","scope":7264,"src":"60398:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7200,"name":"address","nodeType":"ElementaryTypeName","src":"60398:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7203,"mutability":"mutable","name":"updatedMessage","nameLocation":"60447:14:27","nodeType":"VariableDeclaration","scope":7264,"src":"60432:29:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7202,"name":"bytes","nodeType":"ElementaryTypeName","src":"60432:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7205,"mutability":"mutable","name":"depositorSignature","nameLocation":"60486:18:27","nodeType":"VariableDeclaration","scope":7264,"src":"60471:33:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7204,"name":"bytes","nodeType":"ElementaryTypeName","src":"60471:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"60277:233:27"},"returnParameters":{"id":7212,"nodeType":"ParameterList","parameters":[],"src":"60554:0:27"},"scope":8866,"src":"60239:1329:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[9661],"body":{"id":7351,"nodeType":"Block","src":"62839:1294:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7276,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"63224:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}},"id":7277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"63234:19:27","memberName":"exclusivityDeadline","nodeType":"MemberAccess","referencedDeclaration":9453,"src":"63224:29:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7278,"name":"getCurrentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7571,"src":"63257:14:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":7279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"63257:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"63224:49:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7285,"nodeType":"IfStatement","src":"63220:119:27","trueBody":{"id":7284,"nodeType":"Block","src":"63275:64:27","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7281,"name":"NoSlowFillsInExclusivityWindow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9688,"src":"63296:30:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"63296:32:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7283,"nodeType":"RevertStatement","src":"63289:39:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7286,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"63352:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}},"id":7287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"63362:12:27","memberName":"fillDeadline","nodeType":"MemberAccess","referencedDeclaration":9451,"src":"63352:22:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7288,"name":"getCurrentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7571,"src":"63377:14:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":7289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"63377:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"63352:41:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7294,"nodeType":"IfStatement","src":"63348:75:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7291,"name":"ExpiredFillDeadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9694,"src":"63402:19:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"63402:21:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7293,"nodeType":"RevertStatement","src":"63395:28:27"}},{"assignments":[7296],"declarations":[{"constant":false,"id":7296,"mutability":"mutable","name":"relayHash","nameLocation":"63442:9:27","nodeType":"VariableDeclaration","scope":7351,"src":"63434:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"63434:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7300,"initialValue":{"arguments":[{"id":7298,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"63470:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}],"id":7297,"name":"_getV3RelayHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8241,"src":"63454:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_V3RelayData_$9456_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct V3SpokePoolInterface.V3RelayData memory) view returns (bytes32)"}},"id":7299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"63454:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"63434:46:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7301,"name":"fillStatuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6051,"src":"63494:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":7303,"indexExpression":{"id":7302,"name":"relayHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7296,"src":"63507:9:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"63494:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"expression":{"id":7306,"name":"FillStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9427,"src":"63529:10:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_FillStatus_$9427_$","typeString":"type(enum V3SpokePoolInterface.FillStatus)"}},"id":7307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"63540:8:27","memberName":"Unfilled","nodeType":"MemberAccess","referencedDeclaration":9424,"src":"63529:19:27","typeDescriptions":{"typeIdentifier":"t_enum$_FillStatus_$9427","typeString":"enum V3SpokePoolInterface.FillStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_FillStatus_$9427","typeString":"enum V3SpokePoolInterface.FillStatus"}],"id":7305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"63521:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7304,"name":"uint256","nodeType":"ElementaryTypeName","src":"63521:7:27","typeDescriptions":{}}},"id":7308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"63521:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"63494:55:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7313,"nodeType":"IfStatement","src":"63490:92:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7310,"name":"InvalidSlowFillRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9692,"src":"63558:22:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"63558:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7312,"nodeType":"RevertStatement","src":"63551:31:27"}},{"expression":{"id":7322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7314,"name":"fillStatuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6051,"src":"63592:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":7316,"indexExpression":{"id":7315,"name":"relayHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7296,"src":"63605:9:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"63592:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":7319,"name":"FillStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9427,"src":"63626:10:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_FillStatus_$9427_$","typeString":"type(enum V3SpokePoolInterface.FillStatus)"}},"id":7320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"63637:17:27","memberName":"RequestedSlowFill","nodeType":"MemberAccess","referencedDeclaration":9425,"src":"63626:28:27","typeDescriptions":{"typeIdentifier":"t_enum$_FillStatus_$9427","typeString":"enum V3SpokePoolInterface.FillStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_FillStatus_$9427","typeString":"enum V3SpokePoolInterface.FillStatus"}],"id":7318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"63618:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7317,"name":"uint256","nodeType":"ElementaryTypeName","src":"63618:7:27","typeDescriptions":{}}},"id":7321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"63618:37:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"63592:63:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7323,"nodeType":"ExpressionStatement","src":"63592:63:27"},{"eventCall":{"arguments":[{"expression":{"id":7325,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"63704:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}},"id":7326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"63714:10:27","memberName":"inputToken","nodeType":"MemberAccess","referencedDeclaration":9439,"src":"63704:20:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7327,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"63738:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}},"id":7328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"63748:11:27","memberName":"outputToken","nodeType":"MemberAccess","referencedDeclaration":9441,"src":"63738:21:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7329,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"63773:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}},"id":7330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"63783:11:27","memberName":"inputAmount","nodeType":"MemberAccess","referencedDeclaration":9443,"src":"63773:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7331,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"63808:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}},"id":7332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"63818:12:27","memberName":"outputAmount","nodeType":"MemberAccess","referencedDeclaration":9445,"src":"63808:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7333,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"63844:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}},"id":7334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"63854:13:27","memberName":"originChainId","nodeType":"MemberAccess","referencedDeclaration":9447,"src":"63844:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7335,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"63881:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}},"id":7336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"63891:9:27","memberName":"depositId","nodeType":"MemberAccess","referencedDeclaration":9449,"src":"63881:19:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":7337,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"63914:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}},"id":7338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"63924:12:27","memberName":"fillDeadline","nodeType":"MemberAccess","referencedDeclaration":9451,"src":"63914:22:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":7339,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"63950:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}},"id":7340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"63960:19:27","memberName":"exclusivityDeadline","nodeType":"MemberAccess","referencedDeclaration":9453,"src":"63950:29:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":7341,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"63993:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}},"id":7342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"64003:16:27","memberName":"exclusiveRelayer","nodeType":"MemberAccess","referencedDeclaration":9437,"src":"63993:26:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7343,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"64033:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}},"id":7344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"64043:9:27","memberName":"depositor","nodeType":"MemberAccess","referencedDeclaration":9433,"src":"64033:19:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7345,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"64066:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}},"id":7346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"64076:9:27","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":9435,"src":"64066:19:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7347,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"64099:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}},"id":7348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"64109:7:27","memberName":"message","nodeType":"MemberAccess","referencedDeclaration":9455,"src":"64099:17:27","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":7324,"name":"RequestedV3SlowFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9589,"src":"63671:19:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint32_$_t_uint32_$_t_address_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,uint256,uint32,uint32,uint32,address,address,address,bytes memory)"}},"id":7349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"63671:455:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7350,"nodeType":"EmitStatement","src":"63666:460:27"}]},"documentation":{"id":7265,"nodeType":"StructuredDocumentation","src":"61574:1158:27","text":" @notice Request Across to send LP funds to this contract to fulfill a slow fill relay\n for a deposit in the next bundle.\n @dev Slow fills are not possible unless the input and output tokens are \"equivalent\", i.e.\n they route to the same L1 token via PoolRebalanceRoutes.\n @dev Slow fills are created by inserting slow fill objects into a merkle tree that is included\n in the next HubPool \"root bundle\". Once the optimistic challenge window has passed, the HubPool\n will relay the slow root to this chain via relayRootBundle(). Once the slow root is relayed,\n the slow fill can be executed by anyone who calls executeV3SlowRelayLeaf().\n @dev Cannot request a slow fill if the fill deadline has passed.\n @dev Cannot request a slow fill if the relay has already been filled or a slow fill has already been requested.\n @param relayData struct containing all the data needed to identify the deposit that should be\n slow filled. If any of the params are missing or different from the origin chain deposit,\n then Across will not include a slow fill for the intended deposit."},"functionSelector":"9963e5a8","id":7352,"implemented":true,"kind":"function","modifiers":[{"id":7272,"kind":"modifierInvocation","modifierName":{"id":7271,"name":"nonReentrant","nameLocations":["62812:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":845,"src":"62812:12:27"},"nodeType":"ModifierInvocation","src":"62812:12:27"},{"id":7274,"kind":"modifierInvocation","modifierName":{"id":7273,"name":"unpausedFills","nameLocations":["62825:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":6362,"src":"62825:13:27"},"nodeType":"ModifierInvocation","src":"62825:13:27"}],"name":"requestV3SlowFill","nameLocation":"62746:17:27","nodeType":"FunctionDefinition","overrides":{"id":7270,"nodeType":"OverrideSpecifier","overrides":[],"src":"62803:8:27"},"parameters":{"id":7269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7268,"mutability":"mutable","name":"relayData","nameLocation":"62785:9:27","nodeType":"VariableDeclaration","scope":7352,"src":"62764:30:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"},"typeName":{"id":7267,"nodeType":"UserDefinedTypeName","pathNode":{"id":7266,"name":"V3RelayData","nameLocations":["62764:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":9456,"src":"62764:11:27"},"referencedDeclaration":9456,"src":"62764:11:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_storage_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"}},"visibility":"internal"}],"src":"62763:32:27"},"returnParameters":{"id":7275,"nodeType":"ParameterList","parameters":[],"src":"62839:0:27"},"scope":8866,"src":"62737:1396:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[9401],"body":{"id":7405,"nodeType":"Block","src":"66282:417:27","statements":[{"expression":{"arguments":[{"id":7385,"name":"destinationToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7359,"src":"66312:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7384,"name":"_preExecuteLeafHook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7929,"src":"66292:19:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"66292:37:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7387,"nodeType":"ExpressionStatement","src":"66292:37:27"},{"expression":{"arguments":[{"id":7389,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7355,"src":"66374:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7390,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"66397:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7391,"name":"destinationToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7359,"src":"66420:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7392,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7361,"src":"66450:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7393,"name":"originChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7363,"src":"66470:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":7394,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"66497:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":7395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"66497:9:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7396,"name":"realizedLpFeePct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"66520:16:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":7397,"name":"relayerFeePct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"66550:13:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":7398,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7369,"src":"66577:9:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7399,"name":"rootBundleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"66600:12:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7400,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7373,"src":"66626:7:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7401,"name":"payoutAdjustment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7375,"src":"66647:16:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7402,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7378,"src":"66677:5:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":7388,"name":"_executeSlowRelayLeaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7875,"src":"66339:21:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_int64_$_t_int64_$_t_uint32_$_t_uint32_$_t_bytes_memory_ptr_$_t_int256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,uint256,int64,int64,uint32,uint32,bytes memory,int256,bytes32[] memory)"}},"id":7403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"66339:353:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7404,"nodeType":"ExpressionStatement","src":"66339:353:27"}]},"documentation":{"id":7353,"nodeType":"StructuredDocumentation","src":"65805:53:27","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"functionSelector":"0c2097f7","id":7406,"implemented":true,"kind":"function","modifiers":[{"id":7382,"kind":"modifierInvocation","modifierName":{"id":7381,"name":"nonReentrant","nameLocations":["66269:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":845,"src":"66269:12:27"},"nodeType":"ModifierInvocation","src":"66269:12:27"}],"name":"executeSlowRelayLeaf","nameLocation":"65872:20:27","nodeType":"FunctionDefinition","overrides":{"id":7380,"nodeType":"OverrideSpecifier","overrides":[],"src":"66260:8:27"},"parameters":{"id":7379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7355,"mutability":"mutable","name":"depositor","nameLocation":"65910:9:27","nodeType":"VariableDeclaration","scope":7406,"src":"65902:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7354,"name":"address","nodeType":"ElementaryTypeName","src":"65902:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7357,"mutability":"mutable","name":"recipient","nameLocation":"65937:9:27","nodeType":"VariableDeclaration","scope":7406,"src":"65929:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7356,"name":"address","nodeType":"ElementaryTypeName","src":"65929:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7359,"mutability":"mutable","name":"destinationToken","nameLocation":"65964:16:27","nodeType":"VariableDeclaration","scope":7406,"src":"65956:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7358,"name":"address","nodeType":"ElementaryTypeName","src":"65956:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7361,"mutability":"mutable","name":"amount","nameLocation":"65998:6:27","nodeType":"VariableDeclaration","scope":7406,"src":"65990:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7360,"name":"uint256","nodeType":"ElementaryTypeName","src":"65990:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7363,"mutability":"mutable","name":"originChainId","nameLocation":"66022:13:27","nodeType":"VariableDeclaration","scope":7406,"src":"66014:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7362,"name":"uint256","nodeType":"ElementaryTypeName","src":"66014:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7365,"mutability":"mutable","name":"realizedLpFeePct","nameLocation":"66051:16:27","nodeType":"VariableDeclaration","scope":7406,"src":"66045:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7364,"name":"int64","nodeType":"ElementaryTypeName","src":"66045:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":7367,"mutability":"mutable","name":"relayerFeePct","nameLocation":"66083:13:27","nodeType":"VariableDeclaration","scope":7406,"src":"66077:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7366,"name":"int64","nodeType":"ElementaryTypeName","src":"66077:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":7369,"mutability":"mutable","name":"depositId","nameLocation":"66113:9:27","nodeType":"VariableDeclaration","scope":7406,"src":"66106:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7368,"name":"uint32","nodeType":"ElementaryTypeName","src":"66106:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7371,"mutability":"mutable","name":"rootBundleId","nameLocation":"66139:12:27","nodeType":"VariableDeclaration","scope":7406,"src":"66132:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7370,"name":"uint32","nodeType":"ElementaryTypeName","src":"66132:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7373,"mutability":"mutable","name":"message","nameLocation":"66174:7:27","nodeType":"VariableDeclaration","scope":7406,"src":"66161:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7372,"name":"bytes","nodeType":"ElementaryTypeName","src":"66161:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7375,"mutability":"mutable","name":"payoutAdjustment","nameLocation":"66198:16:27","nodeType":"VariableDeclaration","scope":7406,"src":"66191:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7374,"name":"int256","nodeType":"ElementaryTypeName","src":"66191:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7378,"mutability":"mutable","name":"proof","nameLocation":"66241:5:27","nodeType":"VariableDeclaration","scope":7406,"src":"66224:22:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7376,"name":"bytes32","nodeType":"ElementaryTypeName","src":"66224:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7377,"nodeType":"ArrayTypeName","src":"66224:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"65892:360:27"},"returnParameters":{"id":7383,"nodeType":"ParameterList","parameters":[],"src":"66282:0:27"},"scope":8866,"src":"65863:836:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[9672],"body":{"id":7461,"nodeType":"Block","src":"68358:911:27","statements":[{"assignments":[7423],"declarations":[{"constant":false,"id":7423,"mutability":"mutable","name":"relayData","nameLocation":"68387:9:27","nodeType":"VariableDeclaration","scope":7461,"src":"68368:28:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"},"typeName":{"id":7422,"nodeType":"UserDefinedTypeName","pathNode":{"id":7421,"name":"V3RelayData","nameLocations":["68368:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":9456,"src":"68368:11:27"},"referencedDeclaration":9456,"src":"68368:11:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_storage_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"}},"visibility":"internal"}],"id":7426,"initialValue":{"expression":{"id":7424,"name":"slowFillLeaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7410,"src":"68399:12:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3SlowFill_$9464_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3SlowFill calldata"}},"id":7425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"68412:9:27","memberName":"relayData","nodeType":"MemberAccess","referencedDeclaration":9459,"src":"68399:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData calldata"}},"nodeType":"VariableDeclarationStatement","src":"68368:53:27"},{"expression":{"arguments":[{"expression":{"id":7428,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7423,"src":"68452:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData memory"}},"id":7429,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"68462:11:27","memberName":"outputToken","nodeType":"MemberAccess","referencedDeclaration":9441,"src":"68452:21:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7427,"name":"_preExecuteLeafHook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7929,"src":"68432:19:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"68432:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7431,"nodeType":"ExpressionStatement","src":"68432:42:27"},{"assignments":[7434],"declarations":[{"constant":false,"id":7434,"mutability":"mutable","name":"relayExecution","nameLocation":"68682:14:27","nodeType":"VariableDeclaration","scope":7461,"src":"68652:44:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams"},"typeName":{"id":7433,"nodeType":"UserDefinedTypeName","pathNode":{"id":7432,"name":"V3RelayExecutionParams","nameLocations":["68652:22:27"],"nodeType":"IdentifierPath","referencedDeclaration":9478,"src":"68652:22:27"},"referencedDeclaration":9478,"src":"68652:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_storage_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams"}},"visibility":"internal"}],"id":7448,"initialValue":{"arguments":[{"id":7436,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7423,"src":"68743:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData memory"}},{"arguments":[{"id":7438,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7423,"src":"68793:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_V3RelayData_$9456_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData memory"}],"id":7437,"name":"_getV3RelayHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8241,"src":"68777:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_V3RelayData_$9456_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct V3SpokePoolInterface.V3RelayData memory) view returns (bytes32)"}},"id":7439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"68777:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7440,"name":"slowFillLeaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7410,"src":"68838:12:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3SlowFill_$9464_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3SlowFill calldata"}},"id":7441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"68851:19:27","memberName":"updatedOutputAmount","nodeType":"MemberAccess","referencedDeclaration":9463,"src":"68838:32:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7442,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7423,"src":"68902:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData memory"}},"id":7443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"68912:9:27","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":9435,"src":"68902:19:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7444,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7423,"src":"68951:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData memory"}},"id":7445,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"68961:7:27","memberName":"message","nodeType":"MemberAccess","referencedDeclaration":9455,"src":"68951:17:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7446,"name":"EMPTY_REPAYMENT_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6082,"src":"69000:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_V3RelayData_$9456_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7435,"name":"V3RelayExecutionParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9478,"src":"68699:22:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_V3RelayExecutionParams_$9478_storage_ptr_$","typeString":"type(struct V3SpokePoolInterface.V3RelayExecutionParams storage pointer)"}},"id":7447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["68736:5:27","68766:9:27","68817:19:27","68884:16:27","68935:14:27","68982:16:27"],"names":["relay","relayHash","updatedOutputAmount","updatedRecipient","updatedMessage","repaymentChainId"],"nodeType":"FunctionCall","src":"68699:378:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams memory"}},"nodeType":"VariableDeclarationStatement","src":"68652:425:27"},{"expression":{"arguments":[{"id":7450,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"69106:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams memory"}},{"id":7451,"name":"rootBundleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7412,"src":"69122:12:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7452,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7415,"src":"69136:5:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams memory"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}],"id":7449,"name":"_verifyV3SlowFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8154,"src":"69088:17:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_V3RelayExecutionParams_$9478_memory_ptr_$_t_uint32_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$","typeString":"function (struct V3SpokePoolInterface.V3RelayExecutionParams memory,uint32,bytes32[] memory) view"}},"id":7453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"69088:54:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7454,"nodeType":"ExpressionStatement","src":"69088:54:27"},{"expression":{"arguments":[{"id":7456,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"69226:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams memory"}},{"id":7457,"name":"EMPTY_RELAYER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6088,"src":"69242:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":7458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"69257:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7455,"name":"_fillRelayV3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8785,"src":"69213:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_V3RelayExecutionParams_$9478_memory_ptr_$_t_address_$_t_bool_$returns$__$","typeString":"function (struct V3SpokePoolInterface.V3RelayExecutionParams memory,address,bool)"}},"id":7459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"69213:49:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7460,"nodeType":"ExpressionStatement","src":"69213:49:27"}]},"documentation":{"id":7407,"nodeType":"StructuredDocumentation","src":"66705:1476:27","text":" @notice Executes a slow relay leaf stored as part of a root bundle relayed by the HubPool.\n @dev Executing a slow fill leaf is equivalent to filling the relayData so this function cannot be used to\n double fill a recipient. The relayData that is filled is included in the slowFillLeaf and is hashed\n like any other fill sent through fillV3Relay().\n @dev There is no relayer credited with filling this relay since funds are sent directly out of this contract.\n @param slowFillLeaf Contains all data necessary to uniquely identify a relay for this chain. This struct is\n hashed and included in a merkle root that is relayed to all spoke pools.\n - relayData: struct containing all the data needed to identify the original deposit to be slow filled.\n - chainId: chain identifier where slow fill leaf should be executed. If this doesn't match this chain's\n chainId, then this function will revert.\n - updatedOutputAmount: Amount to be sent to recipient out of this contract's balance. Can be set differently\n from relayData.outputAmount to charge a different fee because this deposit was \"slow\" filled. Usually,\n this will be set higher to reimburse the recipient for waiting for the slow fill.\n @param rootBundleId Unique ID of root bundle containing slow relay root that this leaf is contained in.\n @param proof Inclusion proof for this leaf in slow relay root in root bundle."},"functionSelector":"bbca7db0","id":7462,"implemented":true,"kind":"function","modifiers":[{"id":7419,"kind":"modifierInvocation","modifierName":{"id":7418,"name":"nonReentrant","nameLocations":["68345:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":845,"src":"68345:12:27"},"nodeType":"ModifierInvocation","src":"68345:12:27"}],"name":"executeV3SlowRelayLeaf","nameLocation":"68195:22:27","nodeType":"FunctionDefinition","overrides":{"id":7417,"nodeType":"OverrideSpecifier","overrides":[],"src":"68336:8:27"},"parameters":{"id":7416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7410,"mutability":"mutable","name":"slowFillLeaf","nameLocation":"68247:12:27","nodeType":"VariableDeclaration","scope":7462,"src":"68227:32:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_V3SlowFill_$9464_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3SlowFill"},"typeName":{"id":7409,"nodeType":"UserDefinedTypeName","pathNode":{"id":7408,"name":"V3SlowFill","nameLocations":["68227:10:27"],"nodeType":"IdentifierPath","referencedDeclaration":9464,"src":"68227:10:27"},"referencedDeclaration":9464,"src":"68227:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3SlowFill_$9464_storage_ptr","typeString":"struct V3SpokePoolInterface.V3SlowFill"}},"visibility":"internal"},{"constant":false,"id":7412,"mutability":"mutable","name":"rootBundleId","nameLocation":"68276:12:27","nodeType":"VariableDeclaration","scope":7462,"src":"68269:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7411,"name":"uint32","nodeType":"ElementaryTypeName","src":"68269:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7415,"mutability":"mutable","name":"proof","nameLocation":"68317:5:27","nodeType":"VariableDeclaration","scope":7462,"src":"68298:24:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7413,"name":"bytes32","nodeType":"ElementaryTypeName","src":"68298:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7414,"nodeType":"ArrayTypeName","src":"68298:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"68217:111:27"},"returnParameters":{"id":7420,"nodeType":"ParameterList","parameters":[],"src":"68358:0:27"},"scope":8866,"src":"68186:1083:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[9413],"body":{"id":7549,"nodeType":"Block","src":"70083:1275:27","statements":[{"expression":{"arguments":[{"expression":{"id":7478,"name":"relayerRefundLeaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"70113:17:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$9154_memory_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf memory"}},"id":7479,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"70131:14:27","memberName":"l2TokenAddress","nodeType":"MemberAccess","referencedDeclaration":9150,"src":"70113:32:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7477,"name":"_preExecuteLeafHook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7929,"src":"70093:19:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"70093:53:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7481,"nodeType":"ExpressionStatement","src":"70093:53:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7482,"name":"relayerRefundLeaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"70161:17:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$9154_memory_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf memory"}},"id":7483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"70179:7:27","memberName":"chainId","nodeType":"MemberAccess","referencedDeclaration":9143,"src":"70161:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7484,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"70190:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":7485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"70190:9:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"70161:38:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7490,"nodeType":"IfStatement","src":"70157:67:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7487,"name":"InvalidChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9698,"src":"70208:14:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"70208:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7489,"nodeType":"RevertStatement","src":"70201:23:27"}},{"assignments":[7493],"declarations":[{"constant":false,"id":7493,"mutability":"mutable","name":"rootBundle","nameLocation":"70254:10:27","nodeType":"VariableDeclaration","scope":7549,"src":"70235:29:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$9192_storage_ptr","typeString":"struct SpokePoolInterface.RootBundle"},"typeName":{"id":7492,"nodeType":"UserDefinedTypeName","pathNode":{"id":7491,"name":"RootBundle","nameLocations":["70235:10:27"],"nodeType":"IdentifierPath","referencedDeclaration":9192,"src":"70235:10:27"},"referencedDeclaration":9192,"src":"70235:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$9192_storage_ptr","typeString":"struct SpokePoolInterface.RootBundle"}},"visibility":"internal"}],"id":7497,"initialValue":{"baseExpression":{"id":7494,"name":"rootBundles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"70267:11:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RootBundle_$9192_storage_$dyn_storage","typeString":"struct SpokePoolInterface.RootBundle storage ref[] storage ref"}},"id":7496,"indexExpression":{"id":7495,"name":"rootBundleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7465,"src":"70279:12:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"70267:25:27","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$9192_storage","typeString":"struct SpokePoolInterface.RootBundle storage ref"}},"nodeType":"VariableDeclarationStatement","src":"70235:57:27"},{"condition":{"id":7505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"70489:86:27","subExpression":{"arguments":[{"expression":{"id":7500,"name":"rootBundle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7493,"src":"70520:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$9192_storage_ptr","typeString":"struct SpokePoolInterface.RootBundle storage pointer"}},"id":7501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"70531:17:27","memberName":"relayerRefundRoot","nodeType":"MemberAccess","referencedDeclaration":9187,"src":"70520:28:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7502,"name":"relayerRefundLeaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"70550:17:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$9154_memory_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf memory"}},{"id":7503,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"70569:5:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$9154_memory_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"expression":{"id":7498,"name":"MerkleLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"70490:9:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleLib_$5945_$","typeString":"type(library MerkleLib)"}},"id":7499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"70500:19:27","memberName":"verifyRelayerRefund","nodeType":"MemberAccess","referencedDeclaration":5769,"src":"70490:29:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_struct$_RelayerRefundLeaf_$9154_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes32,struct SpokePoolInterface.RelayerRefundLeaf memory,bytes32[] memory) pure returns (bool)"}},"id":7504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"70490:85:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7509,"nodeType":"IfStatement","src":"70485:131:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7506,"name":"InvalidMerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9696,"src":"70596:18:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"70596:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7508,"nodeType":"RevertStatement","src":"70589:27:27"}},{"expression":{"arguments":[{"id":7511,"name":"rootBundleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7465,"src":"70643:12:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":7512,"name":"relayerRefundLeaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"70657:17:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$9154_memory_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf memory"}},"id":7513,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"70675:6:27","memberName":"leafId","nodeType":"MemberAccess","referencedDeclaration":9148,"src":"70657:24:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":7510,"name":"_setClaimedLeaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"70627:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint32_$_t_uint32_$returns$__$","typeString":"function (uint32,uint32)"}},"id":7514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"70627:55:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7515,"nodeType":"ExpressionStatement","src":"70627:55:27"},{"expression":{"arguments":[{"expression":{"id":7517,"name":"relayerRefundLeaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"70732:17:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$9154_memory_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf memory"}},"id":7518,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"70750:7:27","memberName":"chainId","nodeType":"MemberAccess","referencedDeclaration":9143,"src":"70732:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7519,"name":"relayerRefundLeaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"70771:17:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$9154_memory_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf memory"}},"id":7520,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"70789:14:27","memberName":"amountToReturn","nodeType":"MemberAccess","referencedDeclaration":9141,"src":"70771:32:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7521,"name":"relayerRefundLeaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"70817:17:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$9154_memory_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf memory"}},"id":7522,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"70835:13:27","memberName":"refundAmounts","nodeType":"MemberAccess","referencedDeclaration":9146,"src":"70817:31:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":7523,"name":"relayerRefundLeaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"70862:17:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$9154_memory_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf memory"}},"id":7524,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"70880:6:27","memberName":"leafId","nodeType":"MemberAccess","referencedDeclaration":9148,"src":"70862:24:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":7525,"name":"relayerRefundLeaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"70900:17:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$9154_memory_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf memory"}},"id":7526,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"70918:14:27","memberName":"l2TokenAddress","nodeType":"MemberAccess","referencedDeclaration":9150,"src":"70900:32:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7527,"name":"relayerRefundLeaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"70946:17:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$9154_memory_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf memory"}},"id":7528,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"70964:15:27","memberName":"refundAddresses","nodeType":"MemberAccess","referencedDeclaration":9153,"src":"70946:33:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":7516,"name":"_distributeRelayerRefunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7782,"src":"70693:25:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint32_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,uint256[] memory,uint32,address,address[] memory)"}},"id":7529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"70693:296:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7530,"nodeType":"ExpressionStatement","src":"70693:296:27"},{"eventCall":{"arguments":[{"expression":{"id":7532,"name":"relayerRefundLeaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"71044:17:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$9154_memory_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf memory"}},"id":7533,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"71062:14:27","memberName":"amountToReturn","nodeType":"MemberAccess","referencedDeclaration":9141,"src":"71044:32:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7534,"name":"relayerRefundLeaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"71090:17:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$9154_memory_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf memory"}},"id":7535,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"71108:7:27","memberName":"chainId","nodeType":"MemberAccess","referencedDeclaration":9143,"src":"71090:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7536,"name":"relayerRefundLeaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"71129:17:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$9154_memory_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf memory"}},"id":7537,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"71147:13:27","memberName":"refundAmounts","nodeType":"MemberAccess","referencedDeclaration":9146,"src":"71129:31:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":7538,"name":"rootBundleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7465,"src":"71174:12:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":7539,"name":"relayerRefundLeaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"71200:17:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$9154_memory_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf memory"}},"id":7540,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"71218:6:27","memberName":"leafId","nodeType":"MemberAccess","referencedDeclaration":9148,"src":"71200:24:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":7541,"name":"relayerRefundLeaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"71238:17:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$9154_memory_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf memory"}},"id":7542,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"71256:14:27","memberName":"l2TokenAddress","nodeType":"MemberAccess","referencedDeclaration":9150,"src":"71238:32:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7543,"name":"relayerRefundLeaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"71284:17:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$9154_memory_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf memory"}},"id":7544,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"71302:15:27","memberName":"refundAddresses","nodeType":"MemberAccess","referencedDeclaration":9153,"src":"71284:33:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"expression":{"id":7545,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"71331:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"71335:6:27","memberName":"sender","nodeType":"MemberAccess","src":"71331:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7531,"name":"ExecutedRelayerRefundRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6211,"src":"71005:25:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint32_$_t_uint32_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$__$","typeString":"function (uint256,uint256,uint256[] memory,uint32,uint32,address,address[] memory,address)"}},"id":7547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"71005:346:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7548,"nodeType":"EmitStatement","src":"71000:351:27"}]},"documentation":{"id":7463,"nodeType":"StructuredDocumentation","src":"69275:586:27","text":" @notice Executes a relayer refund leaf stored as part of a root bundle. Will send the relayer the amount they\n sent to the recipient plus a relayer fee.\n @param rootBundleId Unique ID of root bundle containing relayer refund root that this leaf is contained in.\n @param relayerRefundLeaf Contains all data necessary to reconstruct leaf contained in root bundle and to\n refund relayer. This data structure is explained in detail in the SpokePoolInterface.\n @param proof Inclusion proof for this leaf in relayer refund root in root bundle."},"functionSelector":"1b3d5559","id":7550,"implemented":true,"kind":"function","modifiers":[{"id":7475,"kind":"modifierInvocation","modifierName":{"id":7474,"name":"nonReentrant","nameLocations":["70070:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":845,"src":"70070:12:27"},"nodeType":"ModifierInvocation","src":"70070:12:27"}],"name":"executeRelayerRefundLeaf","nameLocation":"69875:24:27","nodeType":"FunctionDefinition","overrides":{"id":7473,"nodeType":"OverrideSpecifier","overrides":[],"src":"70061:8:27"},"parameters":{"id":7472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7465,"mutability":"mutable","name":"rootBundleId","nameLocation":"69916:12:27","nodeType":"VariableDeclaration","scope":7550,"src":"69909:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7464,"name":"uint32","nodeType":"ElementaryTypeName","src":"69909:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7468,"mutability":"mutable","name":"relayerRefundLeaf","nameLocation":"69982:17:27","nodeType":"VariableDeclaration","scope":7550,"src":"69938:61:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$9154_memory_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf"},"typeName":{"id":7467,"nodeType":"UserDefinedTypeName","pathNode":{"id":7466,"name":"SpokePoolInterface.RelayerRefundLeaf","nameLocations":["69938:18:27","69957:17:27"],"nodeType":"IdentifierPath","referencedDeclaration":9154,"src":"69938:36:27"},"referencedDeclaration":9154,"src":"69938:36:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$9154_storage_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf"}},"visibility":"internal"},{"constant":false,"id":7471,"mutability":"mutable","name":"proof","nameLocation":"70026:5:27","nodeType":"VariableDeclaration","scope":7550,"src":"70009:22:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7469,"name":"bytes32","nodeType":"ElementaryTypeName","src":"70009:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7470,"nodeType":"ArrayTypeName","src":"70009:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"69899:138:27"},"returnParameters":{"id":7476,"nodeType":"ParameterList","parameters":[],"src":"70083:0:27"},"scope":8866,"src":"69866:1492:27","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[9418],"body":{"id":7560,"nodeType":"Block","src":"71743:37:27","statements":[{"expression":{"expression":{"id":7557,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"71760:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"71766:7:27","memberName":"chainid","nodeType":"MemberAccess","src":"71760:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7556,"id":7559,"nodeType":"Return","src":"71753:20:27"}]},"documentation":{"id":7551,"nodeType":"StructuredDocumentation","src":"71498:174:27","text":" @notice Returns chain ID for this network.\n @dev Some L2s like ZKSync don't support the CHAIN_ID opcode so we allow the implementer to override this."},"functionSelector":"9a8a0592","id":7561,"implemented":true,"kind":"function","modifiers":[],"name":"chainId","nameLocation":"71686:7:27","nodeType":"FunctionDefinition","overrides":{"id":7553,"nodeType":"OverrideSpecifier","overrides":[],"src":"71716:8:27"},"parameters":{"id":7552,"nodeType":"ParameterList","parameters":[],"src":"71693:2:27"},"returnParameters":{"id":7556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7561,"src":"71734:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7554,"name":"uint256","nodeType":"ElementaryTypeName","src":"71734:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71733:9:27"},"scope":8866,"src":"71677:103:27","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":7570,"nodeType":"Block","src":"71951:80:27","statements":[{"expression":{"expression":{"id":7567,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"71968:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"71974:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"71968:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7566,"id":7569,"nodeType":"Return","src":"71961:22:27"}]},"documentation":{"id":7562,"nodeType":"StructuredDocumentation","src":"71786:96:27","text":" @notice Gets the current time.\n @return uint for the current timestamp."},"functionSelector":"29cb924d","id":7571,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentTime","nameLocation":"71896:14:27","nodeType":"FunctionDefinition","parameters":{"id":7563,"nodeType":"ParameterList","parameters":[],"src":"71910:2:27"},"returnParameters":{"id":7566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7571,"src":"71942:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7564,"name":"uint256","nodeType":"ElementaryTypeName","src":"71942:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71941:9:27"},"scope":8866,"src":"71887:144:27","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":7698,"nodeType":"Block","src":"72437:3701:27","statements":[{"expression":{"arguments":[{"baseExpression":{"baseExpression":{"id":7591,"name":"enabledDepositRoutes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6031,"src":"72503:20:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":7593,"indexExpression":{"id":7592,"name":"originToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7577,"src":"72524:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"72503:33:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":7595,"indexExpression":{"id":7594,"name":"destinationChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"72537:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"72503:53:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"44697361626c656420726f757465","id":7596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"72558:16:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_9339230bcacb85d3978e25396674974ca1872d268d040281336294e624a84ad5","typeString":"literal_string \"Disabled route\""},"value":"Disabled route"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9339230bcacb85d3978e25396674974ca1872d268d040281336294e624a84ad5","typeString":"literal_string \"Disabled route\""}],"id":7590,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"72495:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"72495:80:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7598,"nodeType":"ExpressionStatement","src":"72495:80:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7602,"name":"relayerFeePct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7583,"src":"72698:13:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int64","typeString":"int64"}],"expression":{"id":7600,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"72683:10:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$5708_$","typeString":"type(library SignedMath)"}},"id":7601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"72694:3:27","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":5707,"src":"72683:14:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":7603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"72683:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"302e35653138","id":7604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"72715:6:27","typeDescriptions":{"typeIdentifier":"t_rational_500000000000000000_by_1","typeString":"int_const 500000000000000000"},"value":"0.5e18"},"src":"72683:38:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642072656c6179657220666565","id":7606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"72723:21:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_d8a4974ec8c46fb806999f6d5fb30732302054b90b38014a2f8237102b48f383","typeString":"literal_string \"Invalid relayer fee\""},"value":"Invalid relayer fee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d8a4974ec8c46fb806999f6d5fb30732302054b90b38014a2f8237102b48f383","typeString":"literal_string \"Invalid relayer fee\""}],"id":7599,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"72675:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"72675:70:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7608,"nodeType":"ExpressionStatement","src":"72675:70:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7610,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"72763:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7611,"name":"MAX_TRANSFER_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6064,"src":"72773:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"72763:27:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e7420746f6f206c61726765","id":7613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"72792:18:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_49349839eb0d890244fdc632747bbac283ea8181336b04e1d6f252a62b678bff","typeString":"literal_string \"Amount too large\""},"value":"Amount too large"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_49349839eb0d890244fdc632747bbac283ea8181336b04e1d6f252a62b678bff","typeString":"literal_string \"Amount too large\""}],"id":7609,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"72755:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"72755:56:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7615,"nodeType":"ExpressionStatement","src":"72755:56:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7617,"name":"getCurrentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7571,"src":"73469:14:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":7618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"73469:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7619,"name":"quoteTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"73488:14:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"73469:33:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7621,"name":"depositQuoteTimeBuffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"73506:22:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"73469:59:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c69642071756f746554696d657374616d70","id":7623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"73530:24:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_7740ca549d22bcad212ec5f133eb5fa11f3f8933f001a9bf8b4531479c1378da","typeString":"literal_string \"invalid quoteTimestamp\""},"value":"invalid quoteTimestamp"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7740ca549d22bcad212ec5f133eb5fa11f3f8933f001a9bf8b4531479c1378da","typeString":"literal_string \"invalid quoteTimestamp\""}],"id":7616,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"73461:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"73461:94:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7625,"nodeType":"ExpressionStatement","src":"73461:94:27"},{"assignments":[7627],"declarations":[{"constant":false,"id":7627,"mutability":"mutable","name":"newDepositId","nameLocation":"73662:12:27","nodeType":"VariableDeclaration","scope":7698,"src":"73655:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7626,"name":"uint32","nodeType":"ElementaryTypeName","src":"73655:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":7630,"initialValue":{"id":7629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"73677:18:27","subExpression":{"id":7628,"name":"numberOfDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"73677:16:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"73655:40:27"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7631,"name":"originToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7577,"src":"73941:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":7634,"name":"wrappedNativeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"73964:18:27","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$8898","typeString":"contract WETH9Interface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_WETH9Interface_$8898","typeString":"contract WETH9Interface"}],"id":7633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"73956:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7632,"name":"address","nodeType":"ElementaryTypeName","src":"73956:7:27","typeDescriptions":{}}},"id":7635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"73956:27:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"73941:42:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7637,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"73987:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"73991:5:27","memberName":"value","nodeType":"MemberAccess","src":"73987:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"73999:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"73987:13:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"73941:59:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"arguments":[{"expression":{"id":7663,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"74535:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"74539:6:27","memberName":"sender","nodeType":"MemberAccess","src":"74535:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7667,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"74555:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_SpokePool_$8866","typeString":"contract SpokePool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SpokePool_$8866","typeString":"contract SpokePool"}],"id":7666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"74547:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7665,"name":"address","nodeType":"ElementaryTypeName","src":"74547:7:27","typeDescriptions":{}}},"id":7668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"74547:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7669,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"74562:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7660,"name":"originToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7577,"src":"74505:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7659,"name":"IERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"74487:17:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Upgradeable_$963_$","typeString":"type(contract IERC20Upgradeable)"}},"id":7661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"74487:30:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},"id":7662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"74518:16:27","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1059,"src":"74487:47:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$963_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20Upgradeable_$963_$","typeString":"function (contract IERC20Upgradeable,address,address,uint256)"}},"id":7670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"74487:82:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7671,"nodeType":"ExpressionStatement","src":"74487:82:27"},"id":7672,"nodeType":"IfStatement","src":"73937:632:27","trueBody":{"id":7658,"nodeType":"Block","src":"74002:479:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7643,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"74024:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"74028:5:27","memberName":"value","nodeType":"MemberAccess","src":"74024:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7645,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"74037:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"74024:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6d73672e76616c7565206d757374206d6174636820616d6f756e74","id":7647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"74045:29:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_f3079425008d77a92a17139796f151ca993e8bb15a00a3ffeed9a8c7aa507e20","typeString":"literal_string \"msg.value must match amount\""},"value":"msg.value must match amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f3079425008d77a92a17139796f151ca993e8bb15a00a3ffeed9a8c7aa507e20","typeString":"literal_string \"msg.value must match amount\""}],"id":7642,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"74016:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"74016:59:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7649,"nodeType":"ExpressionStatement","src":"74016:59:27"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"expression":{"id":7650,"name":"wrappedNativeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"74089:18:27","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$8898","typeString":"contract WETH9Interface"}},"id":7652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"74108:7:27","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":8879,"src":"74089:26:27","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$","typeString":"function () payable external"}},"id":7655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":7653,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"74124:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"74128:5:27","memberName":"value","nodeType":"MemberAccess","src":"74124:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"74089:46:27","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$value","typeString":"function () payable external"}},"id":7656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"74089:48:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7657,"nodeType":"ExpressionStatement","src":"74089:48:27"}]}},{"eventCall":{"arguments":[{"id":7674,"name":"originToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7577,"src":"74615:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":7677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"74662:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"74654:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7675,"name":"address","nodeType":"ElementaryTypeName","src":"74654:7:27","typeDescriptions":{}}},"id":7678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"74654:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7679,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"75102:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":7681,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"75160:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7682,"name":"relayerFeePct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7583,"src":"75168:13:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int64","typeString":"int64"}],"id":7680,"name":"_computeAmountPostFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8206,"src":"75137:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_int256_$returns$_t_uint256_$","typeString":"function (uint256,int256) pure returns (uint256)"}},"id":7683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"75137:45:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7684,"name":"destinationChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"75486:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7685,"name":"newDepositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7627,"src":"75518:12:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7686,"name":"quoteTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"75544:14:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7687,"name":"INFINITE_FILL_DEADLINE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6095,"src":"75572:22:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":7688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"75764:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7689,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7573,"src":"75917:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7690,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7575,"src":"75940:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":7693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"75971:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"75963:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7691,"name":"address","nodeType":"ElementaryTypeName","src":"75963:7:27","typeDescriptions":{}}},"id":7694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"75963:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7695,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"76114:7:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7673,"name":"V3FundsDeposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9516,"src":"74585:16:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint32_$_t_uint32_$_t_uint32_$_t_address_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,uint256,uint32,uint32,uint32,uint32,address,address,address,bytes memory)"}},"id":7696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"74585:1546:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7697,"nodeType":"EmitStatement","src":"74580:1551:27"}]},"id":7699,"implemented":true,"kind":"function","modifiers":[],"name":"_deposit","nameLocation":"72180:8:27","nodeType":"FunctionDefinition","parameters":{"id":7588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7573,"mutability":"mutable","name":"depositor","nameLocation":"72206:9:27","nodeType":"VariableDeclaration","scope":7699,"src":"72198:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7572,"name":"address","nodeType":"ElementaryTypeName","src":"72198:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7575,"mutability":"mutable","name":"recipient","nameLocation":"72233:9:27","nodeType":"VariableDeclaration","scope":7699,"src":"72225:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7574,"name":"address","nodeType":"ElementaryTypeName","src":"72225:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7577,"mutability":"mutable","name":"originToken","nameLocation":"72260:11:27","nodeType":"VariableDeclaration","scope":7699,"src":"72252:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7576,"name":"address","nodeType":"ElementaryTypeName","src":"72252:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7579,"mutability":"mutable","name":"amount","nameLocation":"72289:6:27","nodeType":"VariableDeclaration","scope":7699,"src":"72281:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7578,"name":"uint256","nodeType":"ElementaryTypeName","src":"72281:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7581,"mutability":"mutable","name":"destinationChainId","nameLocation":"72313:18:27","nodeType":"VariableDeclaration","scope":7699,"src":"72305:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7580,"name":"uint256","nodeType":"ElementaryTypeName","src":"72305:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7583,"mutability":"mutable","name":"relayerFeePct","nameLocation":"72347:13:27","nodeType":"VariableDeclaration","scope":7699,"src":"72341:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7582,"name":"int64","nodeType":"ElementaryTypeName","src":"72341:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":7585,"mutability":"mutable","name":"quoteTimestamp","nameLocation":"72377:14:27","nodeType":"VariableDeclaration","scope":7699,"src":"72370:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7584,"name":"uint32","nodeType":"ElementaryTypeName","src":"72370:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7587,"mutability":"mutable","name":"message","nameLocation":"72414:7:27","nodeType":"VariableDeclaration","scope":7699,"src":"72401:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7586,"name":"bytes","nodeType":"ElementaryTypeName","src":"72401:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"72188:239:27"},"returnParameters":{"id":7589,"nodeType":"ParameterList","parameters":[],"src":"72437:0:27"},"scope":8866,"src":"72171:3967:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7781,"nodeType":"Block","src":"76389:909:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7716,"name":"refundAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7713,"src":"76403:15:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":7717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"76419:6:27","memberName":"length","nodeType":"MemberAccess","src":"76403:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":7718,"name":"refundAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7706,"src":"76429:13:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"76443:6:27","memberName":"length","nodeType":"MemberAccess","src":"76429:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"76403:46:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7724,"nodeType":"IfStatement","src":"76399:78:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7721,"name":"InvalidMerkleLeaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9700,"src":"76458:17:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"76458:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7723,"nodeType":"RevertStatement","src":"76451:26:27"}},{"assignments":[7726],"declarations":[{"constant":false,"id":7726,"mutability":"mutable","name":"length","nameLocation":"76700:6:27","nodeType":"VariableDeclaration","scope":7781,"src":"76692:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7725,"name":"uint256","nodeType":"ElementaryTypeName","src":"76692:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7729,"initialValue":{"expression":{"id":7727,"name":"refundAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7706,"src":"76709:13:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"76723:6:27","memberName":"length","nodeType":"MemberAccess","src":"76709:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"76692:37:27"},{"body":{"id":7760,"nodeType":"Block","src":"76776:162:27","statements":[{"assignments":[7741],"declarations":[{"constant":false,"id":7741,"mutability":"mutable","name":"amount","nameLocation":"76798:6:27","nodeType":"VariableDeclaration","scope":7760,"src":"76790:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7740,"name":"uint256","nodeType":"ElementaryTypeName","src":"76790:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7745,"initialValue":{"baseExpression":{"id":7742,"name":"refundAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7706,"src":"76807:13:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7744,"indexExpression":{"id":7743,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7731,"src":"76821:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"76807:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"76790:33:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7746,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7741,"src":"76841:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"76850:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"76841:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7759,"nodeType":"IfStatement","src":"76837:90:27","trueBody":{"expression":{"arguments":[{"baseExpression":{"id":7753,"name":"refundAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7713,"src":"76900:15:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":7755,"indexExpression":{"id":7754,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7731,"src":"76916:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"76900:18:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7756,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7741,"src":"76920:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7750,"name":"l2TokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7710,"src":"76871:14:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7749,"name":"IERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"76853:17:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Upgradeable_$963_$","typeString":"type(contract IERC20Upgradeable)"}},"id":7751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"76853:33:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},"id":7752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"76887:12:27","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1032,"src":"76853:46:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$963_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20Upgradeable_$963_$","typeString":"function (contract IERC20Upgradeable,address,uint256)"}},"id":7757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"76853:74:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7758,"nodeType":"ExpressionStatement","src":"76853:74:27"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7734,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7731,"src":"76759:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7735,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"76763:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"76759:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7761,"initializationExpression":{"assignments":[7731],"declarations":[{"constant":false,"id":7731,"mutability":"mutable","name":"i","nameLocation":"76752:1:27","nodeType":"VariableDeclaration","scope":7761,"src":"76744:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7730,"name":"uint256","nodeType":"ElementaryTypeName","src":"76744:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7733,"initialValue":{"hexValue":"30","id":7732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"76756:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"76744:13:27"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"76771:3:27","subExpression":{"id":7737,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7731,"src":"76773:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7739,"nodeType":"ExpressionStatement","src":"76771:3:27"},"nodeType":"ForStatement","src":"76739:199:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7762,"name":"amountToReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7703,"src":"77098:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"77115:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"77098:18:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7780,"nodeType":"IfStatement","src":"77094:198:27","trueBody":{"id":7779,"nodeType":"Block","src":"77118:174:27","statements":[{"expression":{"arguments":[{"id":7766,"name":"amountToReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7703,"src":"77155:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7767,"name":"l2TokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7710,"src":"77171:14:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7765,"name":"_bridgeTokensToHubPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7936,"src":"77132:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":7768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"77132:54:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7769,"nodeType":"ExpressionStatement","src":"77132:54:27"},{"eventCall":{"arguments":[{"id":7771,"name":"amountToReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7703,"src":"77220:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7772,"name":"_chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7701,"src":"77236:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7773,"name":"leafId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7708,"src":"77246:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7774,"name":"l2TokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7710,"src":"77254:14:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7775,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"77270:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"77274:6:27","memberName":"sender","nodeType":"MemberAccess","src":"77270:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7770,"name":"TokensBridged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6223,"src":"77206:13:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint32_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,uint256,uint32,address,address)"}},"id":7777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"77206:75:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7778,"nodeType":"EmitStatement","src":"77201:80:27"}]}}]},"id":7782,"implemented":true,"kind":"function","modifiers":[],"name":"_distributeRelayerRefunds","nameLocation":"76153:25:27","nodeType":"FunctionDefinition","parameters":{"id":7714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7701,"mutability":"mutable","name":"_chainId","nameLocation":"76196:8:27","nodeType":"VariableDeclaration","scope":7782,"src":"76188:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7700,"name":"uint256","nodeType":"ElementaryTypeName","src":"76188:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7703,"mutability":"mutable","name":"amountToReturn","nameLocation":"76222:14:27","nodeType":"VariableDeclaration","scope":7782,"src":"76214:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7702,"name":"uint256","nodeType":"ElementaryTypeName","src":"76214:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7706,"mutability":"mutable","name":"refundAmounts","nameLocation":"76263:13:27","nodeType":"VariableDeclaration","scope":7782,"src":"76246:30:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7704,"name":"uint256","nodeType":"ElementaryTypeName","src":"76246:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7705,"nodeType":"ArrayTypeName","src":"76246:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7708,"mutability":"mutable","name":"leafId","nameLocation":"76293:6:27","nodeType":"VariableDeclaration","scope":7782,"src":"76286:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7707,"name":"uint32","nodeType":"ElementaryTypeName","src":"76286:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7710,"mutability":"mutable","name":"l2TokenAddress","nameLocation":"76317:14:27","nodeType":"VariableDeclaration","scope":7782,"src":"76309:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7709,"name":"address","nodeType":"ElementaryTypeName","src":"76309:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7713,"mutability":"mutable","name":"refundAddresses","nameLocation":"76358:15:27","nodeType":"VariableDeclaration","scope":7782,"src":"76341:32:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7711,"name":"address","nodeType":"ElementaryTypeName","src":"76341:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7712,"nodeType":"ArrayTypeName","src":"76341:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"76178:201:27"},"returnParameters":{"id":7715,"nodeType":"ParameterList","parameters":[],"src":"76389:0:27"},"scope":8866,"src":"76144:1154:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7874,"nodeType":"Block","src":"77912:1869:27","statements":[{"assignments":[7815],"declarations":[{"constant":false,"id":7815,"mutability":"mutable","name":"relayExecution","nameLocation":"77944:14:27","nodeType":"VariableDeclaration","scope":7874,"src":"77922:36:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution"},"typeName":{"id":7814,"nodeType":"UserDefinedTypeName","pathNode":{"id":7813,"name":"RelayExecution","nameLocations":["77922:14:27"],"nodeType":"IdentifierPath","referencedDeclaration":6258,"src":"77922:14:27"},"referencedDeclaration":6258,"src":"77922:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_storage_ptr","typeString":"struct SpokePool.RelayExecution"}},"visibility":"internal"}],"id":7847,"initialValue":{"arguments":[{"arguments":[{"id":7819,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7785,"src":"78055:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7820,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7787,"src":"78093:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7821,"name":"destinationToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7789,"src":"78138:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7822,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7791,"src":"78180:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7823,"name":"realizedLpFeePct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7797,"src":"78222:16:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":7824,"name":"relayerFeePct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7799,"src":"78271:13:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":7825,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"78313:9:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7826,"name":"originChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7793,"src":"78355:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7827,"name":"destinationChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7795,"src":"78406:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7828,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7805,"src":"78451:7:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7817,"name":"SpokePoolInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9421,"src":"77997:18:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SpokePoolInterface_$9421_$","typeString":"type(contract SpokePoolInterface)"}},"id":7818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"78016:9:27","memberName":"RelayData","nodeType":"MemberAccess","referencedDeclaration":9176,"src":"77997:28:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RelayData_$9176_storage_ptr_$","typeString":"type(struct SpokePoolInterface.RelayData storage pointer)"}},"id":7829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["78044:9:27","78082:9:27","78120:16:27","78172:6:27","78204:16:27","78256:13:27","78302:9:27","78340:13:27","78386:18:27","78442:7:27"],"names":["depositor","recipient","destinationToken","amount","realizedLpFeePct","relayerFeePct","depositId","originChainId","destinationChainId","message"],"nodeType":"FunctionCall","src":"77997:476:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}},{"arguments":[{"hexValue":"30","id":7832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"78506:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"78498:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7830,"name":"bytes32","nodeType":"ElementaryTypeName","src":"78498:7:27","typeDescriptions":{}}},"id":7833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"78498:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"30","id":7834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"78544:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7835,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7787,"src":"78577:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7836,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7805,"src":"78616:7:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":7837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"78655:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7838,"name":"SLOW_FILL_MAX_TOKENS_TO_SEND","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6068,"src":"78687:28:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":7839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"78739:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":7840,"name":"payoutAdjustmentPct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7807,"src":"78778:19:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"expression":{"arguments":[{"id":7843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"78826:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7842,"name":"uint256","nodeType":"ElementaryTypeName","src":"78826:7:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":7841,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"78821:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"78821:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":7845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"78835:3:27","memberName":"max","nodeType":"MemberAccess","src":"78821:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7816,"name":"RelayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6258,"src":"77961:14:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RelayExecution_$6258_storage_ptr_$","typeString":"type(struct SpokePool.RelayExecution storage pointer)"}},"id":7846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["77990:5:27","78487:9:27","78522:20:27","78559:16:27","78600:14:27","78637:16:27","78670:15:27","78729:8:27","78757:19:27","78811:8:27"],"names":["relay","relayHash","updatedRelayerFeePct","updatedRecipient","updatedMessage","repaymentChainId","maxTokensToSend","slowFill","payoutAdjustmentPct","maxCount"],"nodeType":"FunctionCall","src":"77961:888:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"nodeType":"VariableDeclarationStatement","src":"77922:927:27"},{"expression":{"id":7855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7848,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7815,"src":"78859:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":7850,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"78874:9:27","memberName":"relayHash","nodeType":"MemberAccess","referencedDeclaration":6241,"src":"78859:24:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":7852,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7815,"src":"78900:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":7853,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"78915:5:27","memberName":"relay","nodeType":"MemberAccess","referencedDeclaration":6239,"src":"78900:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}],"id":7851,"name":"_getRelayHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8223,"src":"78886:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RelayData_$9176_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct SpokePoolInterface.RelayData memory) pure returns (bytes32)"}},"id":7854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"78886:35:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"78859:62:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7856,"nodeType":"ExpressionStatement","src":"78859:62:27"},{"expression":{"arguments":[{"id":7858,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7815,"src":"78948:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},{"id":7859,"name":"rootBundleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"78964:12:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7860,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"78978:5:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":7857,"name":"_verifySlowFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8116,"src":"78932:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_RelayExecution_$6258_memory_ptr_$_t_uint32_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$","typeString":"function (struct SpokePool.RelayExecution memory,uint32,bytes32[] memory) view"}},"id":7861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"78932:52:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7862,"nodeType":"ExpressionStatement","src":"78932:52:27"},{"assignments":[7864],"declarations":[{"constant":false,"id":7864,"mutability":"mutable","name":"fillAmountPreFees","nameLocation":"79331:17:27","nodeType":"VariableDeclaration","scope":7874,"src":"79323:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7863,"name":"uint256","nodeType":"ElementaryTypeName","src":"79323:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7868,"initialValue":{"arguments":[{"id":7866,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7815,"src":"79362:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}],"id":7865,"name":"_fillRelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8564,"src":"79351:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_RelayExecution_$6258_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct SpokePool.RelayExecution memory) returns (uint256)"}},"id":7867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"79351:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"79323:54:27"},{"expression":{"arguments":[{"id":7870,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7815,"src":"79740:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},{"id":7871,"name":"fillAmountPreFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"79756:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7869,"name":"_emitFillRelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8854,"src":"79725:14:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_RelayExecution_$6258_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct SpokePool.RelayExecution memory,uint256)"}},"id":7872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"79725:49:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7873,"nodeType":"ExpressionStatement","src":"79725:49:27"}]},"documentation":{"id":7783,"nodeType":"StructuredDocumentation","src":"77415:53:27","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"id":7875,"implemented":true,"kind":"function","modifiers":[],"name":"_executeSlowRelayLeaf","nameLocation":"77482:21:27","nodeType":"FunctionDefinition","parameters":{"id":7811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7785,"mutability":"mutable","name":"depositor","nameLocation":"77521:9:27","nodeType":"VariableDeclaration","scope":7875,"src":"77513:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7784,"name":"address","nodeType":"ElementaryTypeName","src":"77513:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7787,"mutability":"mutable","name":"recipient","nameLocation":"77548:9:27","nodeType":"VariableDeclaration","scope":7875,"src":"77540:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7786,"name":"address","nodeType":"ElementaryTypeName","src":"77540:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7789,"mutability":"mutable","name":"destinationToken","nameLocation":"77575:16:27","nodeType":"VariableDeclaration","scope":7875,"src":"77567:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7788,"name":"address","nodeType":"ElementaryTypeName","src":"77567:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7791,"mutability":"mutable","name":"amount","nameLocation":"77609:6:27","nodeType":"VariableDeclaration","scope":7875,"src":"77601:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7790,"name":"uint256","nodeType":"ElementaryTypeName","src":"77601:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7793,"mutability":"mutable","name":"originChainId","nameLocation":"77633:13:27","nodeType":"VariableDeclaration","scope":7875,"src":"77625:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7792,"name":"uint256","nodeType":"ElementaryTypeName","src":"77625:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7795,"mutability":"mutable","name":"destinationChainId","nameLocation":"77664:18:27","nodeType":"VariableDeclaration","scope":7875,"src":"77656:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7794,"name":"uint256","nodeType":"ElementaryTypeName","src":"77656:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7797,"mutability":"mutable","name":"realizedLpFeePct","nameLocation":"77698:16:27","nodeType":"VariableDeclaration","scope":7875,"src":"77692:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7796,"name":"int64","nodeType":"ElementaryTypeName","src":"77692:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":7799,"mutability":"mutable","name":"relayerFeePct","nameLocation":"77730:13:27","nodeType":"VariableDeclaration","scope":7875,"src":"77724:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7798,"name":"int64","nodeType":"ElementaryTypeName","src":"77724:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":7801,"mutability":"mutable","name":"depositId","nameLocation":"77760:9:27","nodeType":"VariableDeclaration","scope":7875,"src":"77753:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7800,"name":"uint32","nodeType":"ElementaryTypeName","src":"77753:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7803,"mutability":"mutable","name":"rootBundleId","nameLocation":"77786:12:27","nodeType":"VariableDeclaration","scope":7875,"src":"77779:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7802,"name":"uint32","nodeType":"ElementaryTypeName","src":"77779:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7805,"mutability":"mutable","name":"message","nameLocation":"77821:7:27","nodeType":"VariableDeclaration","scope":7875,"src":"77808:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7804,"name":"bytes","nodeType":"ElementaryTypeName","src":"77808:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7807,"mutability":"mutable","name":"payoutAdjustmentPct","nameLocation":"77845:19:27","nodeType":"VariableDeclaration","scope":7875,"src":"77838:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7806,"name":"int256","nodeType":"ElementaryTypeName","src":"77838:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7810,"mutability":"mutable","name":"proof","nameLocation":"77891:5:27","nodeType":"VariableDeclaration","scope":7875,"src":"77874:22:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7808,"name":"bytes32","nodeType":"ElementaryTypeName","src":"77874:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7809,"nodeType":"ArrayTypeName","src":"77874:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"77503:399:27"},"returnParameters":{"id":7812,"nodeType":"ParameterList","parameters":[],"src":"77912:0:27"},"scope":8866,"src":"77473:2308:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7898,"nodeType":"Block","src":"79855:187:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7881,"name":"newCrossDomainAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7877,"src":"79873:19:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"79904:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"79896:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7882,"name":"address","nodeType":"ElementaryTypeName","src":"79896:7:27","typeDescriptions":{}}},"id":7885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"79896:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"79873:33:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4261642062726964676520726f757465722061646472657373","id":7887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"79908:27:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_df5bbc1d960fd7e53326e17c6e98cbd79cc513eeafbe33285cf26a0ed8694cbc","typeString":"literal_string \"Bad bridge router address\""},"value":"Bad bridge router address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df5bbc1d960fd7e53326e17c6e98cbd79cc513eeafbe33285cf26a0ed8694cbc","typeString":"literal_string \"Bad bridge router address\""}],"id":7880,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"79865:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"79865:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7889,"nodeType":"ExpressionStatement","src":"79865:71:27"},{"expression":{"id":7892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7890,"name":"crossDomainAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6008,"src":"79946:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7891,"name":"newCrossDomainAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7877,"src":"79965:19:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"79946:38:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7893,"nodeType":"ExpressionStatement","src":"79946:38:27"},{"eventCall":{"arguments":[{"id":7895,"name":"newCrossDomainAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7877,"src":"80015:19:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7894,"name":"SetXDomainAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6099,"src":"79999:15:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"79999:36:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7897,"nodeType":"EmitStatement","src":"79994:41:27"}]},"id":7899,"implemented":true,"kind":"function","modifiers":[],"name":"_setCrossDomainAdmin","nameLocation":"79796:20:27","nodeType":"FunctionDefinition","parameters":{"id":7878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7877,"mutability":"mutable","name":"newCrossDomainAdmin","nameLocation":"79825:19:27","nodeType":"VariableDeclaration","scope":7899,"src":"79817:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7876,"name":"address","nodeType":"ElementaryTypeName","src":"79817:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"79816:29:27"},"returnParameters":{"id":7879,"nodeType":"ParameterList","parameters":[],"src":"79855:0:27"},"scope":8866,"src":"79787:255:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7922,"nodeType":"Block","src":"80098:141:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7905,"name":"newHubPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7901,"src":"80116:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"80138:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"80130:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7906,"name":"address","nodeType":"ElementaryTypeName","src":"80130:7:27","typeDescriptions":{}}},"id":7909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"80130:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"80116:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4261642068756220706f6f6c2061646472657373","id":7911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"80142:22:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a2079a1ea403d0125ea708bb1b5acd0944dc49a1ffd37e375b4afc7e991206d","typeString":"literal_string \"Bad hub pool address\""},"value":"Bad hub pool address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a2079a1ea403d0125ea708bb1b5acd0944dc49a1ffd37e375b4afc7e991206d","typeString":"literal_string \"Bad hub pool address\""}],"id":7904,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"80108:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"80108:57:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7913,"nodeType":"ExpressionStatement","src":"80108:57:27"},{"expression":{"id":7916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7914,"name":"hubPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"80175:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7915,"name":"newHubPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7901,"src":"80185:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"80175:20:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7917,"nodeType":"ExpressionStatement","src":"80175:20:27"},{"eventCall":{"arguments":[{"id":7919,"name":"newHubPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7901,"src":"80221:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7918,"name":"SetHubPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6103,"src":"80210:10:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"80210:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7921,"nodeType":"EmitStatement","src":"80205:27:27"}]},"id":7923,"implemented":true,"kind":"function","modifiers":[],"name":"_setHubPool","nameLocation":"80057:11:27","nodeType":"FunctionDefinition","parameters":{"id":7902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7901,"mutability":"mutable","name":"newHubPool","nameLocation":"80077:10:27","nodeType":"VariableDeclaration","scope":7923,"src":"80069:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7900,"name":"address","nodeType":"ElementaryTypeName","src":"80069:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80068:20:27"},"returnParameters":{"id":7903,"nodeType":"ParameterList","parameters":[],"src":"80098:0:27"},"scope":8866,"src":"80048:191:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7928,"nodeType":"Block","src":"80300:264:27","statements":[]},"id":7929,"implemented":true,"kind":"function","modifiers":[],"name":"_preExecuteLeafHook","nameLocation":"80254:19:27","nodeType":"FunctionDefinition","parameters":{"id":7926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7929,"src":"80274:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7924,"name":"address","nodeType":"ElementaryTypeName","src":"80274:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80273:9:27"},"returnParameters":{"id":7927,"nodeType":"ParameterList","parameters":[],"src":"80300:0:27"},"scope":8866,"src":"80245:319:27","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":7936,"implemented":false,"kind":"function","modifiers":[],"name":"_bridgeTokensToHubPool","nameLocation":"80681:22:27","nodeType":"FunctionDefinition","parameters":{"id":7934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7931,"mutability":"mutable","name":"amountToReturn","nameLocation":"80712:14:27","nodeType":"VariableDeclaration","scope":7936,"src":"80704:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7930,"name":"uint256","nodeType":"ElementaryTypeName","src":"80704:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7933,"mutability":"mutable","name":"l2TokenAddress","nameLocation":"80736:14:27","nodeType":"VariableDeclaration","scope":7936,"src":"80728:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7932,"name":"address","nodeType":"ElementaryTypeName","src":"80728:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80703:48:27"},"returnParameters":{"id":7935,"nodeType":"ParameterList","parameters":[],"src":"80768:0:27"},"scope":8866,"src":"80672:97:27","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":7968,"nodeType":"Block","src":"80845:399:27","statements":[{"assignments":[7945],"declarations":[{"constant":false,"id":7945,"mutability":"mutable","name":"rootBundle","nameLocation":"80874:10:27","nodeType":"VariableDeclaration","scope":7968,"src":"80855:29:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$9192_storage_ptr","typeString":"struct SpokePoolInterface.RootBundle"},"typeName":{"id":7944,"nodeType":"UserDefinedTypeName","pathNode":{"id":7943,"name":"RootBundle","nameLocations":["80855:10:27"],"nodeType":"IdentifierPath","referencedDeclaration":9192,"src":"80855:10:27"},"referencedDeclaration":9192,"src":"80855:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$9192_storage_ptr","typeString":"struct SpokePoolInterface.RootBundle"}},"visibility":"internal"}],"id":7949,"initialValue":{"baseExpression":{"id":7946,"name":"rootBundles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"80887:11:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RootBundle_$9192_storage_$dyn_storage","typeString":"struct SpokePoolInterface.RootBundle storage ref[] storage ref"}},"id":7948,"indexExpression":{"id":7947,"name":"rootBundleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7938,"src":"80899:12:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"80887:25:27","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$9192_storage","typeString":"struct SpokePoolInterface.RootBundle storage ref"}},"nodeType":"VariableDeclarationStatement","src":"80855:57:27"},{"condition":{"arguments":[{"expression":{"id":7952,"name":"rootBundle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7945,"src":"81014:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$9192_storage_ptr","typeString":"struct SpokePoolInterface.RootBundle storage pointer"}},"id":7953,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"81025:13:27","memberName":"claimedBitmap","nodeType":"MemberAccess","referencedDeclaration":9191,"src":"81014:24:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},{"id":7954,"name":"leafId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7940,"src":"81040:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":7950,"name":"MerkleLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"80994:9:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleLib_$5945_$","typeString":"type(library MerkleLib)"}},"id":7951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"81004:9:27","memberName":"isClaimed","nodeType":"MemberAccess","referencedDeclaration":5866,"src":"80994:19:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_mapping$_t_uint256_$_t_uint256_$_$_t_uint256_$returns$_t_bool_$","typeString":"function (mapping(uint256 => uint256),uint256) view returns (bool)"}},"id":7955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"80994:53:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7959,"nodeType":"IfStatement","src":"80990:85:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7956,"name":"ClaimedMerkleLeaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9702,"src":"81056:17:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"81056:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7958,"nodeType":"RevertStatement","src":"81049:26:27"}},{"expression":{"arguments":[{"expression":{"id":7963,"name":"rootBundle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7945,"src":"81204:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$9192_storage_ptr","typeString":"struct SpokePoolInterface.RootBundle storage pointer"}},"id":7964,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"81215:13:27","memberName":"claimedBitmap","nodeType":"MemberAccess","referencedDeclaration":9191,"src":"81204:24:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},{"id":7965,"name":"leafId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7940,"src":"81230:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":7960,"name":"MerkleLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"81183:9:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleLib_$5945_$","typeString":"type(library MerkleLib)"}},"id":7962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"81193:10:27","memberName":"setClaimed","nodeType":"MemberAccess","referencedDeclaration":5902,"src":"81183:20:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_mapping$_t_uint256_$_t_uint256_$_$_t_uint256_$returns$__$","typeString":"function (mapping(uint256 => uint256),uint256)"}},"id":7966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"81183:54:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7967,"nodeType":"ExpressionStatement","src":"81183:54:27"}]},"id":7969,"implemented":true,"kind":"function","modifiers":[],"name":"_setClaimedLeaf","nameLocation":"80784:15:27","nodeType":"FunctionDefinition","parameters":{"id":7941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7938,"mutability":"mutable","name":"rootBundleId","nameLocation":"80807:12:27","nodeType":"VariableDeclaration","scope":7969,"src":"80800:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7937,"name":"uint32","nodeType":"ElementaryTypeName","src":"80800:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7940,"mutability":"mutable","name":"leafId","nameLocation":"80828:6:27","nodeType":"VariableDeclaration","scope":7969,"src":"80821:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7939,"name":"uint32","nodeType":"ElementaryTypeName","src":"80821:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"80799:36:27"},"returnParameters":{"id":7942,"nodeType":"ParameterList","parameters":[],"src":"80845:0:27"},"scope":8866,"src":"80775:469:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8012,"nodeType":"Block","src":"81597:1359:27","statements":[{"assignments":[7988],"declarations":[{"constant":false,"id":7988,"mutability":"mutable","name":"expectedTypedDataV4Hash","nameLocation":"82229:23:27","nodeType":"VariableDeclaration","scope":8012,"src":"82221:31:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"82221:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8005,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":7993,"name":"UPDATE_DEPOSIT_DETAILS_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"82454:27:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7994,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7974,"src":"82503:9:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7995,"name":"originChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7976,"src":"82534:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7996,"name":"updatedRelayerFeePct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7978,"src":"82569:20:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":7997,"name":"updatedRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7980,"src":"82611:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7999,"name":"updatedMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7982,"src":"82659:14:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7998,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"82649:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"82649:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7991,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"82422:3:27","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"82426:6:27","memberName":"encode","nodeType":"MemberAccess","src":"82422:10:27","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"82422:270:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7990,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"82395:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"82395:311:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8003,"name":"originChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7976,"src":"82835:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7989,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10533,"src":"82255:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes32,uint256) view returns (bytes32)"}},"id":8004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"82255:603:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"82221:637:27"},{"expression":{"arguments":[{"id":8007,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"82894:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8008,"name":"expectedTypedDataV4Hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7988,"src":"82905:23:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8009,"name":"depositorSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7984,"src":"82930:18:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8006,"name":"_verifyDepositorSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8080,"src":"82868:25:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes32,bytes memory) view"}},"id":8010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"82868:81:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8011,"nodeType":"ExpressionStatement","src":"82868:81:27"}]},"documentation":{"id":7970,"nodeType":"StructuredDocumentation","src":"81250:53:27","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"id":8013,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyUpdateDepositMessage","nameLocation":"81317:27:27","nodeType":"FunctionDefinition","parameters":{"id":7985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7972,"mutability":"mutable","name":"depositor","nameLocation":"81362:9:27","nodeType":"VariableDeclaration","scope":8013,"src":"81354:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7971,"name":"address","nodeType":"ElementaryTypeName","src":"81354:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7974,"mutability":"mutable","name":"depositId","nameLocation":"81388:9:27","nodeType":"VariableDeclaration","scope":8013,"src":"81381:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7973,"name":"uint32","nodeType":"ElementaryTypeName","src":"81381:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7976,"mutability":"mutable","name":"originChainId","nameLocation":"81415:13:27","nodeType":"VariableDeclaration","scope":8013,"src":"81407:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7975,"name":"uint256","nodeType":"ElementaryTypeName","src":"81407:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7978,"mutability":"mutable","name":"updatedRelayerFeePct","nameLocation":"81444:20:27","nodeType":"VariableDeclaration","scope":8013,"src":"81438:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7977,"name":"int64","nodeType":"ElementaryTypeName","src":"81438:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":7980,"mutability":"mutable","name":"updatedRecipient","nameLocation":"81482:16:27","nodeType":"VariableDeclaration","scope":8013,"src":"81474:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7979,"name":"address","nodeType":"ElementaryTypeName","src":"81474:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7982,"mutability":"mutable","name":"updatedMessage","nameLocation":"81521:14:27","nodeType":"VariableDeclaration","scope":8013,"src":"81508:27:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7981,"name":"bytes","nodeType":"ElementaryTypeName","src":"81508:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7984,"mutability":"mutable","name":"depositorSignature","nameLocation":"81558:18:27","nodeType":"VariableDeclaration","scope":8013,"src":"81545:31:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7983,"name":"bytes","nodeType":"ElementaryTypeName","src":"81545:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"81344:238:27"},"returnParameters":{"id":7986,"nodeType":"ParameterList","parameters":[],"src":"81597:0:27"},"scope":8866,"src":"81308:1648:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8055,"nodeType":"Block","src":"83254:1361:27","statements":[{"assignments":[8031],"declarations":[{"constant":false,"id":8031,"mutability":"mutable","name":"expectedTypedDataV4Hash","nameLocation":"83886:23:27","nodeType":"VariableDeclaration","scope":8055,"src":"83878:31:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8030,"name":"bytes32","nodeType":"ElementaryTypeName","src":"83878:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8048,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":8036,"name":"UPDATE_V3_DEPOSIT_DETAILS_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6079,"src":"84111:30:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8037,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8017,"src":"84163:9:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8038,"name":"originChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8019,"src":"84194:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8039,"name":"updatedOutputAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8021,"src":"84229:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8040,"name":"updatedRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8023,"src":"84270:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8042,"name":"updatedMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8025,"src":"84318:14:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8041,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"84308:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"84308:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":8034,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"84079:3:27","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"84083:6:27","memberName":"encode","nodeType":"MemberAccess","src":"84079:10:27","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"84079:272:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8033,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"84052:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"84052:313:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8046,"name":"originChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8019,"src":"84494:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8032,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10533,"src":"83912:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes32,uint256) view returns (bytes32)"}},"id":8047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"83912:605:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"83878:639:27"},{"expression":{"arguments":[{"id":8050,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8015,"src":"84553:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8051,"name":"expectedTypedDataV4Hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8031,"src":"84564:23:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8052,"name":"depositorSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8027,"src":"84589:18:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8049,"name":"_verifyDepositorSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8080,"src":"84527:25:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes32,bytes memory) view"}},"id":8053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"84527:81:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8054,"nodeType":"ExpressionStatement","src":"84527:81:27"}]},"id":8056,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyUpdateV3DepositMessage","nameLocation":"82971:29:27","nodeType":"FunctionDefinition","parameters":{"id":8028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8015,"mutability":"mutable","name":"depositor","nameLocation":"83018:9:27","nodeType":"VariableDeclaration","scope":8056,"src":"83010:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8014,"name":"address","nodeType":"ElementaryTypeName","src":"83010:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8017,"mutability":"mutable","name":"depositId","nameLocation":"83044:9:27","nodeType":"VariableDeclaration","scope":8056,"src":"83037:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8016,"name":"uint32","nodeType":"ElementaryTypeName","src":"83037:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8019,"mutability":"mutable","name":"originChainId","nameLocation":"83071:13:27","nodeType":"VariableDeclaration","scope":8056,"src":"83063:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8018,"name":"uint256","nodeType":"ElementaryTypeName","src":"83063:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8021,"mutability":"mutable","name":"updatedOutputAmount","nameLocation":"83102:19:27","nodeType":"VariableDeclaration","scope":8056,"src":"83094:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8020,"name":"uint256","nodeType":"ElementaryTypeName","src":"83094:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8023,"mutability":"mutable","name":"updatedRecipient","nameLocation":"83139:16:27","nodeType":"VariableDeclaration","scope":8056,"src":"83131:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8022,"name":"address","nodeType":"ElementaryTypeName","src":"83131:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8025,"mutability":"mutable","name":"updatedMessage","nameLocation":"83178:14:27","nodeType":"VariableDeclaration","scope":8056,"src":"83165:27:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8024,"name":"bytes","nodeType":"ElementaryTypeName","src":"83165:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8027,"mutability":"mutable","name":"depositorSignature","nameLocation":"83215:18:27","nodeType":"VariableDeclaration","scope":8056,"src":"83202:31:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8026,"name":"bytes","nodeType":"ElementaryTypeName","src":"83202:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"83000:239:27"},"returnParameters":{"id":8029,"nodeType":"ParameterList","parameters":[],"src":"83254:0:27"},"scope":8866,"src":"82962:1653:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8079,"nodeType":"Block","src":"85249:799:27","statements":[{"assignments":[8066],"declarations":[{"constant":false,"id":8066,"mutability":"mutable","name":"isValid","nameLocation":"85895:7:27","nodeType":"VariableDeclaration","scope":8079,"src":"85890:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8065,"name":"bool","nodeType":"ElementaryTypeName","src":"85890:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":8073,"initialValue":{"arguments":[{"id":8069,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8058,"src":"85942:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8070,"name":"ethSignedMessageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8060,"src":"85953:20:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8071,"name":"depositorSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"85975:18:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":8067,"name":"SignatureChecker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"85905:16:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignatureChecker_$4737_$","typeString":"type(library SignatureChecker)"}},"id":8068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"85922:19:27","memberName":"isValidSignatureNow","nodeType":"MemberAccess","referencedDeclaration":4684,"src":"85905:36:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,bytes32,bytes memory) view returns (bool)"}},"id":8072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"85905:89:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"85890:104:27"},{"expression":{"arguments":[{"id":8075,"name":"isValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8066,"src":"86012:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c6964207369676e6174757265","id":8076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"86021:19:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a","typeString":"literal_string \"invalid signature\""},"value":"invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a","typeString":"literal_string \"invalid signature\""}],"id":8074,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"86004:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"86004:37:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8078,"nodeType":"ExpressionStatement","src":"86004:37:27"}]},"id":8080,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyDepositorSignature","nameLocation":"85089:25:27","nodeType":"FunctionDefinition","parameters":{"id":8063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8058,"mutability":"mutable","name":"depositor","nameLocation":"85132:9:27","nodeType":"VariableDeclaration","scope":8080,"src":"85124:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8057,"name":"address","nodeType":"ElementaryTypeName","src":"85124:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8060,"mutability":"mutable","name":"ethSignedMessageHash","nameLocation":"85159:20:27","nodeType":"VariableDeclaration","scope":8080,"src":"85151:28:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8059,"name":"bytes32","nodeType":"ElementaryTypeName","src":"85151:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8062,"mutability":"mutable","name":"depositorSignature","nameLocation":"85202:18:27","nodeType":"VariableDeclaration","scope":8080,"src":"85189:31:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8061,"name":"bytes","nodeType":"ElementaryTypeName","src":"85189:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"85114:112:27"},"returnParameters":{"id":8064,"nodeType":"ParameterList","parameters":[],"src":"85249:0:27"},"scope":8866,"src":"85080:968:27","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":8115,"nodeType":"Block","src":"86264:354:27","statements":[{"assignments":[8094],"declarations":[{"constant":false,"id":8094,"mutability":"mutable","name":"slowFill","nameLocation":"86290:8:27","nodeType":"VariableDeclaration","scope":8115,"src":"86274:24:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SlowFill_$9183_memory_ptr","typeString":"struct SpokePoolInterface.SlowFill"},"typeName":{"id":8093,"nodeType":"UserDefinedTypeName","pathNode":{"id":8092,"name":"SlowFill","nameLocations":["86274:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":9183,"src":"86274:8:27"},"referencedDeclaration":9183,"src":"86274:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_SlowFill_$9183_storage_ptr","typeString":"struct SpokePoolInterface.SlowFill"}},"visibility":"internal"}],"id":8101,"initialValue":{"arguments":[{"expression":{"id":8096,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8084,"src":"86335:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8097,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"86350:5:27","memberName":"relay","nodeType":"MemberAccess","referencedDeclaration":6239,"src":"86335:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}},{"expression":{"id":8098,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8084,"src":"86390:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8099,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"86405:19:27","memberName":"payoutAdjustmentPct","nodeType":"MemberAccess","referencedDeclaration":6257,"src":"86390:34:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8095,"name":"SlowFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9183,"src":"86301:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SlowFill_$9183_storage_ptr_$","typeString":"type(struct SpokePoolInterface.SlowFill storage pointer)"}},"id":8100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["86324:9:27","86369:19:27"],"names":["relayData","payoutAdjustmentPct"],"nodeType":"FunctionCall","src":"86301:134:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SlowFill_$9183_memory_ptr","typeString":"struct SpokePoolInterface.SlowFill memory"}},"nodeType":"VariableDeclarationStatement","src":"86274:161:27"},{"expression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":8105,"name":"rootBundles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"86504:11:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RootBundle_$9192_storage_$dyn_storage","typeString":"struct SpokePoolInterface.RootBundle storage ref[] storage ref"}},"id":8107,"indexExpression":{"id":8106,"name":"rootBundleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8086,"src":"86516:12:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"86504:25:27","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$9192_storage","typeString":"struct SpokePoolInterface.RootBundle storage ref"}},"id":8108,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"86530:13:27","memberName":"slowRelayRoot","nodeType":"MemberAccess","referencedDeclaration":9185,"src":"86504:39:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8109,"name":"slowFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8094,"src":"86545:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_SlowFill_$9183_memory_ptr","typeString":"struct SpokePoolInterface.SlowFill memory"}},{"id":8110,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8089,"src":"86555:5:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_struct$_SlowFill_$9183_memory_ptr","typeString":"struct SpokePoolInterface.SlowFill memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"expression":{"id":8103,"name":"MerkleLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"86467:9:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleLib_$5945_$","typeString":"type(library MerkleLib)"}},"id":8104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"86477:26:27","memberName":"verifySlowRelayFulfillment","nodeType":"MemberAccess","referencedDeclaration":5796,"src":"86467:36:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_struct$_SlowFill_$9183_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes32,struct SpokePoolInterface.SlowFill memory,bytes32[] memory) pure returns (bool)"}},"id":8111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"86467:94:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420736c6f772072656c61792070726f6f66","id":8112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"86575:26:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_801bafa04709df1475563fd1ea21ee6c538a794fbc44c6224d243df7e1d00c7d","typeString":"literal_string \"Invalid slow relay proof\""},"value":"Invalid slow relay proof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_801bafa04709df1475563fd1ea21ee6c538a794fbc44c6224d243df7e1d00c7d","typeString":"literal_string \"Invalid slow relay proof\""}],"id":8102,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"86446:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"86446:165:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8114,"nodeType":"ExpressionStatement","src":"86446:165:27"}]},"documentation":{"id":8081,"nodeType":"StructuredDocumentation","src":"86054:53:27","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"id":8116,"implemented":true,"kind":"function","modifiers":[],"name":"_verifySlowFill","nameLocation":"86121:15:27","nodeType":"FunctionDefinition","parameters":{"id":8090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8084,"mutability":"mutable","name":"relayExecution","nameLocation":"86168:14:27","nodeType":"VariableDeclaration","scope":8116,"src":"86146:36:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution"},"typeName":{"id":8083,"nodeType":"UserDefinedTypeName","pathNode":{"id":8082,"name":"RelayExecution","nameLocations":["86146:14:27"],"nodeType":"IdentifierPath","referencedDeclaration":6258,"src":"86146:14:27"},"referencedDeclaration":6258,"src":"86146:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_storage_ptr","typeString":"struct SpokePool.RelayExecution"}},"visibility":"internal"},{"constant":false,"id":8086,"mutability":"mutable","name":"rootBundleId","nameLocation":"86199:12:27","nodeType":"VariableDeclaration","scope":8116,"src":"86192:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8085,"name":"uint32","nodeType":"ElementaryTypeName","src":"86192:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8089,"mutability":"mutable","name":"proof","nameLocation":"86238:5:27","nodeType":"VariableDeclaration","scope":8116,"src":"86221:22:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8087,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86221:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8088,"nodeType":"ArrayTypeName","src":"86221:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"86136:113:27"},"returnParameters":{"id":8091,"nodeType":"ParameterList","parameters":[],"src":"86264:0:27"},"scope":8866,"src":"86112:506:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8153,"nodeType":"Block","src":"86786:367:27","statements":[{"assignments":[8129],"declarations":[{"constant":false,"id":8129,"mutability":"mutable","name":"slowFill","nameLocation":"86814:8:27","nodeType":"VariableDeclaration","scope":8153,"src":"86796:26:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_V3SlowFill_$9464_memory_ptr","typeString":"struct V3SpokePoolInterface.V3SlowFill"},"typeName":{"id":8128,"nodeType":"UserDefinedTypeName","pathNode":{"id":8127,"name":"V3SlowFill","nameLocations":["86796:10:27"],"nodeType":"IdentifierPath","referencedDeclaration":9464,"src":"86796:10:27"},"referencedDeclaration":9464,"src":"86796:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3SlowFill_$9464_storage_ptr","typeString":"struct V3SpokePoolInterface.V3SlowFill"}},"visibility":"internal"}],"id":8138,"initialValue":{"arguments":[{"expression":{"id":8131,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8119,"src":"86861:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams memory"}},"id":8132,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"86876:5:27","memberName":"relay","nodeType":"MemberAccess","referencedDeclaration":9467,"src":"86861:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":8133,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"86904:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"86904:9:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8135,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8119,"src":"86948:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams memory"}},"id":8136,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"86963:19:27","memberName":"updatedOutputAmount","nodeType":"MemberAccess","referencedDeclaration":9471,"src":"86948:34:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_V3RelayData_$9456_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8130,"name":"V3SlowFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9464,"src":"86825:10:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_V3SlowFill_$9464_storage_ptr_$","typeString":"type(struct V3SpokePoolInterface.V3SlowFill storage pointer)"}},"id":8137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["86850:9:27","86895:7:27","86927:19:27"],"names":["relayData","chainId","updatedOutputAmount"],"nodeType":"FunctionCall","src":"86825:168:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_V3SlowFill_$9464_memory_ptr","typeString":"struct V3SpokePoolInterface.V3SlowFill memory"}},"nodeType":"VariableDeclarationStatement","src":"86796:197:27"},{"condition":{"id":8148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"87008:97:27","subExpression":{"arguments":[{"expression":{"baseExpression":{"id":8141,"name":"rootBundles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"87048:11:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RootBundle_$9192_storage_$dyn_storage","typeString":"struct SpokePoolInterface.RootBundle storage ref[] storage ref"}},"id":8143,"indexExpression":{"id":8142,"name":"rootBundleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8121,"src":"87060:12:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"87048:25:27","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$9192_storage","typeString":"struct SpokePoolInterface.RootBundle storage ref"}},"id":8144,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"87074:13:27","memberName":"slowRelayRoot","nodeType":"MemberAccess","referencedDeclaration":9185,"src":"87048:39:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8145,"name":"slowFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8129,"src":"87089:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3SlowFill_$9464_memory_ptr","typeString":"struct V3SpokePoolInterface.V3SlowFill memory"}},{"id":8146,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8124,"src":"87099:5:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_struct$_V3SlowFill_$9464_memory_ptr","typeString":"struct V3SpokePoolInterface.V3SlowFill memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"expression":{"id":8139,"name":"MerkleLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"87009:9:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleLib_$5945_$","typeString":"type(library MerkleLib)"}},"id":8140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"87019:28:27","memberName":"verifyV3SlowRelayFulfillment","nodeType":"MemberAccess","referencedDeclaration":5822,"src":"87009:38:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_struct$_V3SlowFill_$9464_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes32,struct V3SpokePoolInterface.V3SlowFill memory,bytes32[] memory) pure returns (bool)"}},"id":8147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"87009:96:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8152,"nodeType":"IfStatement","src":"87004:142:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8149,"name":"InvalidMerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9696,"src":"87126:18:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"87126:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8151,"nodeType":"RevertStatement","src":"87119:27:27"}}]},"id":8154,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyV3SlowFill","nameLocation":"86633:17:27","nodeType":"FunctionDefinition","parameters":{"id":8125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8119,"mutability":"mutable","name":"relayExecution","nameLocation":"86690:14:27","nodeType":"VariableDeclaration","scope":8154,"src":"86660:44:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams"},"typeName":{"id":8118,"nodeType":"UserDefinedTypeName","pathNode":{"id":8117,"name":"V3RelayExecutionParams","nameLocations":["86660:22:27"],"nodeType":"IdentifierPath","referencedDeclaration":9478,"src":"86660:22:27"},"referencedDeclaration":9478,"src":"86660:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_storage_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams"}},"visibility":"internal"},{"constant":false,"id":8121,"mutability":"mutable","name":"rootBundleId","nameLocation":"86721:12:27","nodeType":"VariableDeclaration","scope":8154,"src":"86714:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8120,"name":"uint32","nodeType":"ElementaryTypeName","src":"86714:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8124,"mutability":"mutable","name":"proof","nameLocation":"86760:5:27","nodeType":"VariableDeclaration","scope":8154,"src":"86743:22:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8122,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86743:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8123,"nodeType":"ArrayTypeName","src":"86743:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"86650:121:27"},"returnParameters":{"id":8126,"nodeType":"ParameterList","parameters":[],"src":"86786:0:27"},"scope":8866,"src":"86624:529:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8180,"nodeType":"Block","src":"87310:75:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31653138","id":8164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"87328:4:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8165,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8157,"src":"87335:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"87328:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8167,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"87327:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"hexValue":"31653138","id":8172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"87361:4:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"id":8171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"87354:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8170,"name":"int256","nodeType":"ElementaryTypeName","src":"87354:6:27","typeDescriptions":{}}},"id":8173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"87354:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8174,"name":"feesPct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8159,"src":"87369:7:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"87354:22:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8176,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"87353:24:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"87345:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8168,"name":"uint256","nodeType":"ElementaryTypeName","src":"87345:7:27","typeDescriptions":{}}},"id":8177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"87345:33:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"87327:51:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8163,"id":8179,"nodeType":"Return","src":"87320:58:27"}]},"documentation":{"id":8155,"nodeType":"StructuredDocumentation","src":"87159:53:27","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"id":8181,"implemented":true,"kind":"function","modifiers":[],"name":"_computeAmountPreFees","nameLocation":"87226:21:27","nodeType":"FunctionDefinition","parameters":{"id":8160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8157,"mutability":"mutable","name":"amount","nameLocation":"87256:6:27","nodeType":"VariableDeclaration","scope":8181,"src":"87248:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8156,"name":"uint256","nodeType":"ElementaryTypeName","src":"87248:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8159,"mutability":"mutable","name":"feesPct","nameLocation":"87270:7:27","nodeType":"VariableDeclaration","scope":8181,"src":"87264:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":8158,"name":"int64","nodeType":"ElementaryTypeName","src":"87264:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"87247:31:27"},"returnParameters":{"id":8163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8181,"src":"87301:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8161,"name":"uint256","nodeType":"ElementaryTypeName","src":"87301:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"87300:9:27"},"scope":8866,"src":"87217:168:27","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":8205,"nodeType":"Block","src":"87486:73:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8190,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8183,"src":"87504:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"hexValue":"31653138","id":8195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"87528:4:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"id":8194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"87521:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8193,"name":"int256","nodeType":"ElementaryTypeName","src":"87521:6:27","typeDescriptions":{}}},"id":8196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"87521:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8197,"name":"feesPct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8185,"src":"87536:7:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"87521:22:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"87513:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8191,"name":"uint256","nodeType":"ElementaryTypeName","src":"87513:7:27","typeDescriptions":{}}},"id":8199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"87513:31:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"87504:40:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8201,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"87503:42:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":8202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"87548:4:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"87503:49:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8189,"id":8204,"nodeType":"Return","src":"87496:56:27"}]},"id":8206,"implemented":true,"kind":"function","modifiers":[],"name":"_computeAmountPostFees","nameLocation":"87400:22:27","nodeType":"FunctionDefinition","parameters":{"id":8186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8183,"mutability":"mutable","name":"amount","nameLocation":"87431:6:27","nodeType":"VariableDeclaration","scope":8206,"src":"87423:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8182,"name":"uint256","nodeType":"ElementaryTypeName","src":"87423:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8185,"mutability":"mutable","name":"feesPct","nameLocation":"87446:7:27","nodeType":"VariableDeclaration","scope":8206,"src":"87439:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8184,"name":"int256","nodeType":"ElementaryTypeName","src":"87439:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"87422:32:27"},"returnParameters":{"id":8189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8206,"src":"87477:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8187,"name":"uint256","nodeType":"ElementaryTypeName","src":"87477:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"87476:9:27"},"scope":8866,"src":"87391:168:27","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":8222,"nodeType":"Block","src":"87724:56:27","statements":[{"expression":{"arguments":[{"arguments":[{"id":8218,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8210,"src":"87762:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}],"expression":{"id":8216,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"87751:3:27","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"87755:6:27","memberName":"encode","nodeType":"MemberAccess","src":"87751:10:27","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"87751:21:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8215,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"87741:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"87741:32:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8214,"id":8221,"nodeType":"Return","src":"87734:39:27"}]},"documentation":{"id":8207,"nodeType":"StructuredDocumentation","src":"87565:53:27","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"id":8223,"implemented":true,"kind":"function","modifiers":[],"name":"_getRelayHash","nameLocation":"87632:13:27","nodeType":"FunctionDefinition","parameters":{"id":8211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8210,"mutability":"mutable","name":"relayData","nameLocation":"87682:9:27","nodeType":"VariableDeclaration","scope":8223,"src":"87646:45:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData"},"typeName":{"id":8209,"nodeType":"UserDefinedTypeName","pathNode":{"id":8208,"name":"SpokePoolInterface.RelayData","nameLocations":["87646:18:27","87665:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":9176,"src":"87646:28:27"},"referencedDeclaration":9176,"src":"87646:28:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_storage_ptr","typeString":"struct SpokePoolInterface.RelayData"}},"visibility":"internal"}],"src":"87645:47:27"},"returnParameters":{"id":8214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8223,"src":"87715:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8212,"name":"bytes32","nodeType":"ElementaryTypeName","src":"87715:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"87714:9:27"},"scope":8866,"src":"87623:157:27","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":8240,"nodeType":"Block","src":"87872:67:27","statements":[{"expression":{"arguments":[{"arguments":[{"id":8234,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8226,"src":"87910:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":8235,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7561,"src":"87921:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"87921:9:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_V3RelayData_$9456_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8232,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"87899:3:27","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"87903:6:27","memberName":"encode","nodeType":"MemberAccess","src":"87899:10:27","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"87899:32:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8231,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"87889:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"87889:43:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8230,"id":8239,"nodeType":"Return","src":"87882:50:27"}]},"id":8241,"implemented":true,"kind":"function","modifiers":[],"name":"_getV3RelayHash","nameLocation":"87795:15:27","nodeType":"FunctionDefinition","parameters":{"id":8227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8226,"mutability":"mutable","name":"relayData","nameLocation":"87830:9:27","nodeType":"VariableDeclaration","scope":8241,"src":"87811:28:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"},"typeName":{"id":8225,"nodeType":"UserDefinedTypeName","pathNode":{"id":8224,"name":"V3RelayData","nameLocations":["87811:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":9456,"src":"87811:11:27"},"referencedDeclaration":9456,"src":"87811:11:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_storage_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"}},"visibility":"internal"}],"src":"87810:30:27"},"returnParameters":{"id":8230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8241,"src":"87863:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8228,"name":"bytes32","nodeType":"ElementaryTypeName","src":"87863:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"87862:9:27"},"scope":8866,"src":"87786:153:27","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":8281,"nodeType":"Block","src":"88158:265:27","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":8250,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8243,"src":"88180:2:27","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":8249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"88172:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8248,"name":"address","nodeType":"ElementaryTypeName","src":"88172:7:27","typeDescriptions":{}}},"id":8251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"88172:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"88184:10:27","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":10115,"src":"88172:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":8253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"88172:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8279,"nodeType":"Block","src":"88300:117:27","statements":[{"expression":{"arguments":[{"id":8269,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8245,"src":"88342:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8266,"name":"wrappedNativeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"88314:18:27","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$8898","typeString":"contract WETH9Interface"}},"id":8268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"88333:8:27","memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":8875,"src":"88314:27:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":8270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"88314:35:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8271,"nodeType":"ExpressionStatement","src":"88314:35:27"},{"expression":{"arguments":[{"id":8275,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8243,"src":"88395:2:27","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":8276,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8245,"src":"88399:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8272,"name":"AddressLibUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10427,"src":"88363:21:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressLibUpgradeable_$10427_$","typeString":"type(library AddressLibUpgradeable)"}},"id":8274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"88385:9:27","memberName":"sendValue","nodeType":"MemberAccess","referencedDeclaration":10149,"src":"88363:31:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256)"}},"id":8277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"88363:43:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8278,"nodeType":"ExpressionStatement","src":"88363:43:27"}]},"id":8280,"nodeType":"IfStatement","src":"88168:249:27","trueBody":{"id":8265,"nodeType":"Block","src":"88198:96:27","statements":[{"expression":{"arguments":[{"id":8261,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8243,"src":"88272:2:27","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":8262,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8245,"src":"88276:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":8257,"name":"wrappedNativeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"88238:18:27","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$8898","typeString":"contract WETH9Interface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_WETH9Interface_$8898","typeString":"contract WETH9Interface"}],"id":8256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"88230:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8255,"name":"address","nodeType":"ElementaryTypeName","src":"88230:7:27","typeDescriptions":{}}},"id":8258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"88230:27:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8254,"name":"IERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"88212:17:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Upgradeable_$963_$","typeString":"type(contract IERC20Upgradeable)"}},"id":8259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"88212:46:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},"id":8260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"88259:12:27","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1032,"src":"88212:59:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$963_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20Upgradeable_$963_$","typeString":"function (contract IERC20Upgradeable,address,uint256)"}},"id":8263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"88212:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8264,"nodeType":"ExpressionStatement","src":"88212:71:27"}]}}]},"id":8282,"implemented":true,"kind":"function","modifiers":[],"name":"_unwrapwrappedNativeTokenTo","nameLocation":"88085:27:27","nodeType":"FunctionDefinition","parameters":{"id":8246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8243,"mutability":"mutable","name":"to","nameLocation":"88129:2:27","nodeType":"VariableDeclaration","scope":8282,"src":"88113:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":8242,"name":"address","nodeType":"ElementaryTypeName","src":"88113:15:27","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":8245,"mutability":"mutable","name":"amount","nameLocation":"88141:6:27","nodeType":"VariableDeclaration","scope":8282,"src":"88133:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8244,"name":"uint256","nodeType":"ElementaryTypeName","src":"88133:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"88112:36:27"},"returnParameters":{"id":8247,"nodeType":"ParameterList","parameters":[],"src":"88158:0:27"},"scope":8866,"src":"88076:347:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8563,"nodeType":"Block","src":"89400:8117:27","statements":[{"assignments":[8293],"declarations":[{"constant":false,"id":8293,"mutability":"mutable","name":"relayData","nameLocation":"89427:9:27","nodeType":"VariableDeclaration","scope":8563,"src":"89410:26:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData"},"typeName":{"id":8292,"nodeType":"UserDefinedTypeName","pathNode":{"id":8291,"name":"RelayData","nameLocations":["89410:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":9176,"src":"89410:9:27"},"referencedDeclaration":9176,"src":"89410:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_storage_ptr","typeString":"struct SpokePoolInterface.RelayData"}},"visibility":"internal"}],"id":8296,"initialValue":{"expression":{"id":8294,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"89439:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8295,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"89454:5:27","memberName":"relay","nodeType":"MemberAccess","referencedDeclaration":6239,"src":"89439:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}},"nodeType":"VariableDeclarationStatement","src":"89410:49:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":8300,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"89808:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8301,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"89823:20:27","memberName":"updatedRelayerFeePct","nodeType":"MemberAccess","referencedDeclaration":6243,"src":"89808:35:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int64","typeString":"int64"}],"expression":{"id":8298,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"89793:10:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$5708_$","typeString":"type(library SignedMath)"}},"id":8299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"89804:3:27","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":5707,"src":"89793:14:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":8302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"89793:51:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"302e35653138","id":8303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"89847:6:27","typeDescriptions":{"typeIdentifier":"t_rational_500000000000000000_by_1","typeString":"int_const 500000000000000000"},"value":"0.5e18"},"src":"89793:60:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":8307,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8293,"src":"89888:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}},"id":8308,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"89898:16:27","memberName":"realizedLpFeePct","nodeType":"MemberAccess","referencedDeclaration":9169,"src":"89888:26:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int64","typeString":"int64"}],"expression":{"id":8305,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"89873:10:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$5708_$","typeString":"type(library SignedMath)"}},"id":8306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"89884:3:27","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":5707,"src":"89873:14:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":8309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"89873:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"302e35653138","id":8310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"89918:6:27","typeDescriptions":{"typeIdentifier":"t_rational_500000000000000000_by_1","typeString":"int_const 500000000000000000"},"value":"0.5e18"},"src":"89873:51:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"89793:131:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c69642066656573","id":8313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"89938:14:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_97c8d54ece2ec7a24262f9b4c751647f26eeec182ad48773c4002f53d6df87b2","typeString":"literal_string \"invalid fees\""},"value":"invalid fees"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_97c8d54ece2ec7a24262f9b4c751647f26eeec182ad48773c4002f53d6df87b2","typeString":"literal_string \"invalid fees\""}],"id":8297,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"89772:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"89772:190:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8315,"nodeType":"ExpressionStatement","src":"89772:190:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8317,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8293,"src":"89981:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}},"id":8318,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"89991:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":9163,"src":"89981:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":8319,"name":"MAX_TRANSFER_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6064,"src":"90001:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"89981:37:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e7420746f6f206c61726765","id":8321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"90020:18:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_49349839eb0d890244fdc632747bbac283ea8181336b04e1d6f252a62b678bff","typeString":"literal_string \"Amount too large\""},"value":"Amount too large"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_49349839eb0d890244fdc632747bbac283ea8181336b04e1d6f252a62b678bff","typeString":"literal_string \"Amount too large\""}],"id":8316,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"89973:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"89973:66:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8323,"nodeType":"ExpressionStatement","src":"89973:66:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8325,"name":"DEPRECATED_relayFills","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"90291:21:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":8328,"indexExpression":{"expression":{"id":8326,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"90313:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"90328:9:27","memberName":"relayHash","nodeType":"MemberAccess","referencedDeclaration":6241,"src":"90313:24:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"90291:47:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8329,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8293,"src":"90341:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}},"id":8330,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"90351:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":9163,"src":"90341:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"90291:66:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"72656c61792066696c6c6564","id":8332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"90359:14:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_783e79f421efb722bf81c2e5f464fa748f3421776d55ae30459593e3eba9732a","typeString":"literal_string \"relay filled\""},"value":"relay filled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_783e79f421efb722bf81c2e5f464fa748f3421776d55ae30459593e3eba9732a","typeString":"literal_string \"relay filled\""}],"id":8324,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"90283:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"90283:91:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8334,"nodeType":"ExpressionStatement","src":"90283:91:27"},{"expression":{"id":8346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8335,"name":"fillAmountPreFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8289,"src":"90919:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":8337,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"90974:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"90989:15:27","memberName":"maxTokensToSend","nodeType":"MemberAccess","referencedDeclaration":6251,"src":"90974:30:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"components":[{"commonType":{"typeIdentifier":"t_int64","typeString":"int64"},"id":8343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8339,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8293,"src":"91019:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}},"id":8340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"91029:16:27","memberName":"realizedLpFeePct","nodeType":"MemberAccess","referencedDeclaration":9169,"src":"91019:26:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":8341,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"91048:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"91063:20:27","memberName":"updatedRelayerFeePct","nodeType":"MemberAccess","referencedDeclaration":6243,"src":"91048:35:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"91019:64:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"id":8344,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"91018:66:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int64","typeString":"int64"}],"id":8336,"name":"_computeAmountPreFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8181,"src":"90939:21:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_int64_$returns$_t_uint256_$","typeString":"function (uint256,int64) pure returns (uint256)"}},"id":8345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"90939:155:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"90919:175:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8347,"nodeType":"ExpressionStatement","src":"90919:175:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8349,"name":"fillAmountPreFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8289,"src":"91235:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"91255:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"91235:21:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"66696c6c20616d6f756e742070726520666565732069732030","id":8352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"91258:27:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_42deaaa3b9f770d209a7aeb83118548549033daf63cf608c402c59e84f546455","typeString":"literal_string \"fill amount pre fees is 0\""},"value":"fill amount pre fees is 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_42deaaa3b9f770d209a7aeb83118548549033daf63cf608c402c59e84f546455","typeString":"literal_string \"fill amount pre fees is 0\""}],"id":8348,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"91227:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"91227:59:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8354,"nodeType":"ExpressionStatement","src":"91227:59:27"},{"assignments":[8356],"declarations":[{"constant":false,"id":8356,"mutability":"mutable","name":"amountRemainingInRelay","nameLocation":"91482:22:27","nodeType":"VariableDeclaration","scope":8563,"src":"91474:30:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8355,"name":"uint256","nodeType":"ElementaryTypeName","src":"91474:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8364,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8357,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8293,"src":"91507:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}},"id":8358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"91517:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":9163,"src":"91507:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":8359,"name":"DEPRECATED_relayFills","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"91526:21:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":8362,"indexExpression":{"expression":{"id":8360,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"91548:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8361,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"91563:9:27","memberName":"relayHash","nodeType":"MemberAccess","referencedDeclaration":6241,"src":"91548:24:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"91526:47:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"91507:66:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"91474:99:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8365,"name":"amountRemainingInRelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8356,"src":"91587:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8366,"name":"fillAmountPreFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8289,"src":"91612:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"91587:42:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8373,"nodeType":"IfStatement","src":"91583:115:27","trueBody":{"id":8372,"nodeType":"Block","src":"91631:67:27","statements":[{"expression":{"id":8370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8368,"name":"fillAmountPreFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8289,"src":"91645:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8369,"name":"amountRemainingInRelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8356,"src":"91665:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"91645:42:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8371,"nodeType":"ExpressionStatement","src":"91645:42:27"}]}},{"assignments":[8375],"declarations":[{"constant":false,"id":8375,"mutability":"mutable","name":"amountToSend","nameLocation":"92020:12:27","nodeType":"VariableDeclaration","scope":8563,"src":"92012:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8374,"name":"uint256","nodeType":"ElementaryTypeName","src":"92012:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8384,"initialValue":{"arguments":[{"id":8377,"name":"fillAmountPreFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8289,"src":"92071:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_int64","typeString":"int64"},"id":8382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8378,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8293,"src":"92102:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}},"id":8379,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"92112:16:27","memberName":"realizedLpFeePct","nodeType":"MemberAccess","referencedDeclaration":9169,"src":"92102:26:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":8380,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"92131:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"92146:20:27","memberName":"updatedRelayerFeePct","nodeType":"MemberAccess","referencedDeclaration":6243,"src":"92131:35:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"92102:64:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int64","typeString":"int64"}],"id":8376,"name":"_computeAmountPostFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8206,"src":"92035:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_int256_$returns$_t_uint256_$","typeString":"function (uint256,int256) pure returns (uint256)"}},"id":8383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"92035:141:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"92012:164:27"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8385,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"92280:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8386,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"92295:19:27","memberName":"payoutAdjustmentPct","nodeType":"MemberAccess","referencedDeclaration":6257,"src":"92280:34:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"92318:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"92280:39:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8424,"nodeType":"IfStatement","src":"92276:1272:27","trueBody":{"id":8423,"nodeType":"Block","src":"92321:1227:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8390,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"92646:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"92661:19:27","memberName":"payoutAdjustmentPct","nodeType":"MemberAccess","referencedDeclaration":6257,"src":"92646:34:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"92684:5:27","subExpression":{"hexValue":"31653138","id":8392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"92685:4:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1000000000000000000_by_1","typeString":"int_const -1000000000000000000"}},"src":"92646:43:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7061796f757441646a7573746d656e7450637420746f6f20736d616c6c","id":8395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"92691:31:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_365eadd40a0f3afaec342c19f4f12e5ec14bcf91927341d3c102f36b856dc246","typeString":"literal_string \"payoutAdjustmentPct too small\""},"value":"payoutAdjustmentPct too small"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_365eadd40a0f3afaec342c19f4f12e5ec14bcf91927341d3c102f36b856dc246","typeString":"literal_string \"payoutAdjustmentPct too small\""}],"id":8389,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"92638:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"92638:85:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8397,"nodeType":"ExpressionStatement","src":"92638:85:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8399,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"92963:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8400,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"92978:19:27","memberName":"payoutAdjustmentPct","nodeType":"MemberAccess","referencedDeclaration":6257,"src":"92963:34:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"313030653138","id":8401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"93001:6:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000_by_1","typeString":"int_const 100000000000000000000"},"value":"100e18"},"src":"92963:44:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7061796f757441646a7573746d656e7450637420746f6f206c61726765","id":8403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"93009:31:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_f00db92943a2c76067ed06c118b63133c2878f573c66ed7552cdefac4122e90e","typeString":"literal_string \"payoutAdjustmentPct too large\""},"value":"payoutAdjustmentPct too large"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f00db92943a2c76067ed06c118b63133c2878f573c66ed7552cdefac4122e90e","typeString":"literal_string \"payoutAdjustmentPct too large\""}],"id":8398,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"92955:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"92955:86:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8405,"nodeType":"ExpressionStatement","src":"92955:86:27"},{"expression":{"id":8413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8406,"name":"amountToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"93168:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8408,"name":"amountToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"93206:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"93220:35:27","subExpression":{"expression":{"id":8409,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"93221:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8410,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"93236:19:27","memberName":"payoutAdjustmentPct","nodeType":"MemberAccess","referencedDeclaration":6257,"src":"93221:34:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8407,"name":"_computeAmountPostFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8206,"src":"93183:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_int256_$returns$_t_uint256_$","typeString":"function (uint256,int256) pure returns (uint256)"}},"id":8412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"93183:73:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"93168:88:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8414,"nodeType":"ExpressionStatement","src":"93168:88:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8416,"name":"amountToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"93458:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":8417,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"93474:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8418,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"93489:15:27","memberName":"maxTokensToSend","nodeType":"MemberAccess","referencedDeclaration":6251,"src":"93474:30:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"93458:46:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536f6d65686f7720686974206d6178546f6b656e73546f53656e6421","id":8420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"93506:30:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_781601d8740bd3e35a554de1a720dfbf3036fd2266bd188062da869e09903176","typeString":"literal_string \"Somehow hit maxTokensToSend!\""},"value":"Somehow hit maxTokensToSend!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_781601d8740bd3e35a554de1a720dfbf3036fd2266bd188062da869e09903176","typeString":"literal_string \"Somehow hit maxTokensToSend!\""}],"id":8415,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"93450:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"93450:87:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8422,"nodeType":"ExpressionStatement","src":"93450:87:27"}]}},{"assignments":[8426],"declarations":[{"constant":false,"id":8426,"mutability":"mutable","name":"localRepayment","nameLocation":"94170:14:27","nodeType":"VariableDeclaration","scope":8563,"src":"94165:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8425,"name":"bool","nodeType":"ElementaryTypeName","src":"94165:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":8433,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8427,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"94187:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8428,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"94202:16:27","memberName":"repaymentChainId","nodeType":"MemberAccess","referencedDeclaration":6249,"src":"94187:31:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":8429,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"94222:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"94237:5:27","memberName":"relay","nodeType":"MemberAccess","referencedDeclaration":6239,"src":"94222:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}},"id":8431,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"94243:18:27","memberName":"destinationChainId","nodeType":"MemberAccess","referencedDeclaration":9167,"src":"94222:39:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"94187:74:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"94165:96:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8435,"name":"localRepayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8426,"src":"94292:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":8436,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"94310:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8437,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"94325:5:27","memberName":"relay","nodeType":"MemberAccess","referencedDeclaration":6239,"src":"94310:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}},"id":8438,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"94331:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":9163,"src":"94310:27:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8439,"name":"fillAmountPreFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8289,"src":"94341:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"94310:48:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"94292:66:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"expression":{"id":8442,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"94362:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"94377:8:27","memberName":"slowFill","nodeType":"MemberAccess","referencedDeclaration":6255,"src":"94362:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"94292:93:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c69642072657061796d656e7420636861696e","id":8445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"94399:25:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_d990c28d98f4b757e09ee286dfc6a8a3f87bf3926b5593d576d964fddb98966b","typeString":"literal_string \"invalid repayment chain\""},"value":"invalid repayment chain"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d990c28d98f4b757e09ee286dfc6a8a3f87bf3926b5593d576d964fddb98966b","typeString":"literal_string \"invalid repayment chain\""}],"id":8434,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"94271:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"94271:163:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8447,"nodeType":"ExpressionStatement","src":"94271:163:27"},{"expression":{"id":8453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8448,"name":"DEPRECATED_relayFills","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"94769:21:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":8451,"indexExpression":{"expression":{"id":8449,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"94791:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8450,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"94806:9:27","memberName":"relayHash","nodeType":"MemberAccess","referencedDeclaration":6241,"src":"94791:24:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"94769:47:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8452,"name":"fillAmountPreFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8289,"src":"94820:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"94769:68:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8454,"nodeType":"ExpressionStatement","src":"94769:68:27"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8455,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"95332:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"95336:6:27","memberName":"sender","nodeType":"MemberAccess","src":"95332:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8457,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"95346:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"95361:16:27","memberName":"updatedRecipient","nodeType":"MemberAccess","referencedDeclaration":6245,"src":"95346:31:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"95332:45:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":8462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"95381:24:27","subExpression":{"expression":{"id":8460,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"95382:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"95397:8:27","memberName":"slowFill","nodeType":"MemberAccess","referencedDeclaration":6255,"src":"95382:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"95332:73:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8466,"nodeType":"IfStatement","src":"95328:103:27","trueBody":{"expression":{"id":8464,"name":"fillAmountPreFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8289,"src":"95414:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8290,"id":8465,"nodeType":"Return","src":"95407:24:27"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8467,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8293,"src":"95529:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}},"id":8468,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"95539:16:27","memberName":"destinationToken","nodeType":"MemberAccess","referencedDeclaration":9161,"src":"95529:26:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":8471,"name":"wrappedNativeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"95567:18:27","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$8898","typeString":"contract WETH9Interface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_WETH9Interface_$8898","typeString":"contract WETH9Interface"}],"id":8470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"95559:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8469,"name":"address","nodeType":"ElementaryTypeName","src":"95559:7:27","typeDescriptions":{}}},"id":8472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"95559:27:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"95529:57:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8528,"nodeType":"Block","src":"96475:586:27","statements":[{"condition":{"id":8504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"96611:24:27","subExpression":{"expression":{"id":8502,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"96612:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8503,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"96627:8:27","memberName":"slowFill","nodeType":"MemberAccess","referencedDeclaration":6255,"src":"96612:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"arguments":[{"expression":{"id":8522,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"96967:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"96982:16:27","memberName":"updatedRecipient","nodeType":"MemberAccess","referencedDeclaration":6245,"src":"96967:31:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8524,"name":"amountToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"97020:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":8518,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8293,"src":"96905:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}},"id":8519,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"96915:16:27","memberName":"destinationToken","nodeType":"MemberAccess","referencedDeclaration":9161,"src":"96905:26:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8517,"name":"IERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"96887:17:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Upgradeable_$963_$","typeString":"type(contract IERC20Upgradeable)"}},"id":8520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"96887:45:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},"id":8521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"96933:12:27","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1032,"src":"96887:58:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$963_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20Upgradeable_$963_$","typeString":"function (contract IERC20Upgradeable,address,uint256)"}},"id":8525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"96887:163:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8526,"nodeType":"ExpressionStatement","src":"96887:163:27"},"id":8527,"nodeType":"IfStatement","src":"96607:443:27","trueBody":{"expression":{"arguments":[{"expression":{"id":8510,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"96737:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"96741:6:27","memberName":"sender","nodeType":"MemberAccess","src":"96737:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8512,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"96769:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8513,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"96784:16:27","memberName":"updatedRecipient","nodeType":"MemberAccess","referencedDeclaration":6245,"src":"96769:31:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8514,"name":"amountToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"96822:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":8506,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8293,"src":"96671:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}},"id":8507,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"96681:16:27","memberName":"destinationToken","nodeType":"MemberAccess","referencedDeclaration":9161,"src":"96671:26:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8505,"name":"IERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"96653:17:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Upgradeable_$963_$","typeString":"type(contract IERC20Upgradeable)"}},"id":8508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"96653:45:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},"id":8509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"96699:16:27","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1059,"src":"96653:62:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$963_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20Upgradeable_$963_$","typeString":"function (contract IERC20Upgradeable,address,address,uint256)"}},"id":8515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"96653:199:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8516,"nodeType":"ExpressionStatement","src":"96653:199:27"}}]},"id":8529,"nodeType":"IfStatement","src":"95525:1536:27","trueBody":{"id":8501,"nodeType":"Block","src":"95588:881:27","statements":[{"condition":{"id":8476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"96146:24:27","subExpression":{"expression":{"id":8474,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"96147:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8475,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"96162:8:27","memberName":"slowFill","nodeType":"MemberAccess","referencedDeclaration":6255,"src":"96147:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8491,"nodeType":"IfStatement","src":"96142:149:27","trueBody":{"expression":{"arguments":[{"expression":{"id":8482,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"96251:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"96255:6:27","memberName":"sender","nodeType":"MemberAccess","src":"96251:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8486,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"96271:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_SpokePool_$8866","typeString":"contract SpokePool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SpokePool_$8866","typeString":"contract SpokePool"}],"id":8485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"96263:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8484,"name":"address","nodeType":"ElementaryTypeName","src":"96263:7:27","typeDescriptions":{}}},"id":8487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"96263:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8488,"name":"amountToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"96278:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":8478,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8293,"src":"96206:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}},"id":8479,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"96216:16:27","memberName":"destinationToken","nodeType":"MemberAccess","referencedDeclaration":9161,"src":"96206:26:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8477,"name":"IERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"96188:17:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Upgradeable_$963_$","typeString":"type(contract IERC20Upgradeable)"}},"id":8480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"96188:45:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},"id":8481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"96234:16:27","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1059,"src":"96188:62:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$963_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20Upgradeable_$963_$","typeString":"function (contract IERC20Upgradeable,address,address,uint256)"}},"id":8489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"96188:103:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8490,"nodeType":"ExpressionStatement","src":"96188:103:27"}},{"expression":{"arguments":[{"arguments":[{"expression":{"id":8495,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"96341:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8496,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"96356:16:27","memberName":"updatedRecipient","nodeType":"MemberAccess","referencedDeclaration":6245,"src":"96341:31:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"96333:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":8493,"name":"address","nodeType":"ElementaryTypeName","src":"96333:8:27","stateMutability":"payable","typeDescriptions":{}}},"id":8497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"96333:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":8498,"name":"amountToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"96375:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8492,"name":"_unwrapwrappedNativeTokenTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8282,"src":"96305:27:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256)"}},"id":8499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"96305:83:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8500,"nodeType":"ExpressionStatement","src":"96305:83:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":8530,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"97075:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8531,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"97090:16:27","memberName":"updatedRecipient","nodeType":"MemberAccess","referencedDeclaration":6245,"src":"97075:31:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"97107:10:27","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":10115,"src":"97075:42:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":8533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"97075:44:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":8534,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"97123:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8535,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"97138:14:27","memberName":"updatedMessage","nodeType":"MemberAccess","referencedDeclaration":6247,"src":"97123:29:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"97153:6:27","memberName":"length","nodeType":"MemberAccess","src":"97123:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"97162:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"97123:40:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"97075:88:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8562,"nodeType":"IfStatement","src":"97071:440:27","trueBody":{"id":8561,"nodeType":"Block","src":"97165:346:27","statements":[{"expression":{"arguments":[{"expression":{"id":8545,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8293,"src":"97270:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}},"id":8546,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"97280:16:27","memberName":"destinationToken","nodeType":"MemberAccess","referencedDeclaration":9161,"src":"97270:26:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8547,"name":"amountToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"97314:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8548,"name":"DEPRECATED_relayFills","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"97344:21:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":8551,"indexExpression":{"expression":{"id":8549,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"97366:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8550,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"97381:9:27","memberName":"relayHash","nodeType":"MemberAccess","referencedDeclaration":6241,"src":"97366:24:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"97344:47:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":8552,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8293,"src":"97395:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}},"id":8553,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"97405:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":9163,"src":"97395:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"97344:67:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":8555,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"97429:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"97433:6:27","memberName":"sender","nodeType":"MemberAccess","src":"97429:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8557,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"97457:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8558,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"97472:14:27","memberName":"updatedMessage","nodeType":"MemberAccess","referencedDeclaration":6247,"src":"97457:29:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"expression":{"id":8541,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"97200:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8542,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"97215:16:27","memberName":"updatedRecipient","nodeType":"MemberAccess","referencedDeclaration":6245,"src":"97200:31:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8540,"name":"AcrossMessageHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"97179:20:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AcrossMessageHandler_$5986_$","typeString":"type(contract AcrossMessageHandler)"}},"id":8543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"97179:53:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AcrossMessageHandler_$5986","typeString":"contract AcrossMessageHandler"}},"id":8544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"97233:19:27","memberName":"handleAcrossMessage","nodeType":"MemberAccess","referencedDeclaration":5974,"src":"97179:73:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bool,address,bytes memory) external"}},"id":8559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"97179:321:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8560,"nodeType":"ExpressionStatement","src":"97179:321:27"}]}}]},"documentation":{"id":8283,"nodeType":"StructuredDocumentation","src":"89239:53:27","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"id":8564,"implemented":true,"kind":"function","modifiers":[],"name":"_fillRelay","nameLocation":"89306:10:27","nodeType":"FunctionDefinition","parameters":{"id":8287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8286,"mutability":"mutable","name":"relayExecution","nameLocation":"89339:14:27","nodeType":"VariableDeclaration","scope":8564,"src":"89317:36:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution"},"typeName":{"id":8285,"nodeType":"UserDefinedTypeName","pathNode":{"id":8284,"name":"RelayExecution","nameLocations":["89317:14:27"],"nodeType":"IdentifierPath","referencedDeclaration":6258,"src":"89317:14:27"},"referencedDeclaration":6258,"src":"89317:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_storage_ptr","typeString":"struct SpokePool.RelayExecution"}},"visibility":"internal"}],"src":"89316:38:27"},"returnParameters":{"id":8290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8289,"mutability":"mutable","name":"fillAmountPreFees","nameLocation":"89381:17:27","nodeType":"VariableDeclaration","scope":8564,"src":"89373:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8288,"name":"uint256","nodeType":"ElementaryTypeName","src":"89373:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"89372:27:27"},"scope":8866,"src":"89297:8220:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8784,"nodeType":"Block","src":"97838:5257:27","statements":[{"assignments":[8576],"declarations":[{"constant":false,"id":8576,"mutability":"mutable","name":"relayData","nameLocation":"97867:9:27","nodeType":"VariableDeclaration","scope":8784,"src":"97848:28:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"},"typeName":{"id":8575,"nodeType":"UserDefinedTypeName","pathNode":{"id":8574,"name":"V3RelayData","nameLocations":["97848:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":9456,"src":"97848:11:27"},"referencedDeclaration":9456,"src":"97848:11:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_storage_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"}},"visibility":"internal"}],"id":8579,"initialValue":{"expression":{"id":8577,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8567,"src":"97879:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams memory"}},"id":8578,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"97894:5:27","memberName":"relay","nodeType":"MemberAccess","referencedDeclaration":9467,"src":"97879:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData memory"}},"nodeType":"VariableDeclarationStatement","src":"97848:51:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8580,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8576,"src":"97914:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData memory"}},"id":8581,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"97924:12:27","memberName":"fillDeadline","nodeType":"MemberAccess","referencedDeclaration":9451,"src":"97914:22:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8582,"name":"getCurrentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7571,"src":"97939:14:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"97939:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"97914:41:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8588,"nodeType":"IfStatement","src":"97910:75:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8585,"name":"ExpiredFillDeadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9694,"src":"97964:19:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"97964:21:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8587,"nodeType":"RevertStatement","src":"97957:28:27"}},{"assignments":[8590],"declarations":[{"constant":false,"id":8590,"mutability":"mutable","name":"relayHash","nameLocation":"98004:9:27","nodeType":"VariableDeclaration","scope":8784,"src":"97996:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8589,"name":"bytes32","nodeType":"ElementaryTypeName","src":"97996:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8593,"initialValue":{"expression":{"id":8591,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8567,"src":"98016:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams memory"}},"id":8592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"98031:9:27","memberName":"relayHash","nodeType":"MemberAccess","referencedDeclaration":9469,"src":"98016:24:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"97996:44:27"},{"assignments":[8596],"declarations":[{"constant":false,"id":8596,"mutability":"mutable","name":"fillType","nameLocation":"98593:8:27","nodeType":"VariableDeclaration","scope":8784,"src":"98584:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_FillType_$9431","typeString":"enum V3SpokePoolInterface.FillType"},"typeName":{"id":8595,"nodeType":"UserDefinedTypeName","pathNode":{"id":8594,"name":"FillType","nameLocations":["98584:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":9431,"src":"98584:8:27"},"referencedDeclaration":9431,"src":"98584:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_FillType_$9431","typeString":"enum V3SpokePoolInterface.FillType"}},"visibility":"internal"}],"id":8617,"initialValue":{"condition":{"id":8597,"name":"isSlowFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8571,"src":"98604:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8600,"name":"fillStatuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6051,"src":"98784:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":8603,"indexExpression":{"expression":{"id":8601,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8567,"src":"98797:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams memory"}},"id":8602,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"98812:9:27","memberName":"relayHash","nodeType":"MemberAccess","referencedDeclaration":9469,"src":"98797:24:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"98784:38:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"expression":{"id":8606,"name":"FillStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9427,"src":"98834:10:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_FillStatus_$9427_$","typeString":"type(enum V3SpokePoolInterface.FillStatus)"}},"id":8607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"98845:17:27","memberName":"RequestedSlowFill","nodeType":"MemberAccess","referencedDeclaration":9425,"src":"98834:28:27","typeDescriptions":{"typeIdentifier":"t_enum$_FillStatus_$9427","typeString":"enum V3SpokePoolInterface.FillStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_FillStatus_$9427","typeString":"enum V3SpokePoolInterface.FillStatus"}],"id":8605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"98826:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8604,"name":"uint256","nodeType":"ElementaryTypeName","src":"98826:7:27","typeDescriptions":{}}},"id":8608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"98826:37:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"98784:79:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":8612,"name":"FillType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9431,"src":"98934:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_FillType_$9431_$","typeString":"type(enum V3SpokePoolInterface.FillType)"}},"id":8613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"98943:8:27","memberName":"FastFill","nodeType":"MemberAccess","referencedDeclaration":9428,"src":"98934:17:27","typeDescriptions":{"typeIdentifier":"t_enum$_FillType_$9431","typeString":"enum V3SpokePoolInterface.FillType"}},"id":8614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"98784:167:27","trueExpression":{"expression":{"id":8610,"name":"FillType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9431,"src":"98886:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_FillType_$9431_$","typeString":"type(enum V3SpokePoolInterface.FillType)"}},"id":8611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"98895:16:27","memberName":"ReplacedSlowFill","nodeType":"MemberAccess","referencedDeclaration":9429,"src":"98886:25:27","typeDescriptions":{"typeIdentifier":"t_enum$_FillType_$9431","typeString":"enum V3SpokePoolInterface.FillType"}},"typeDescriptions":{"typeIdentifier":"t_enum$_FillType_$9431","typeString":"enum V3SpokePoolInterface.FillType"}}],"id":8615,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"98661:304:27","typeDescriptions":{"typeIdentifier":"t_enum$_FillType_$9431","typeString":"enum V3SpokePoolInterface.FillType"}},"id":8616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"98604:361:27","trueExpression":{"expression":{"id":8598,"name":"FillType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9431,"src":"98629:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_FillType_$9431_$","typeString":"type(enum V3SpokePoolInterface.FillType)"}},"id":8599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"98638:8:27","memberName":"SlowFill","nodeType":"MemberAccess","referencedDeclaration":9430,"src":"98629:17:27","typeDescriptions":{"typeIdentifier":"t_enum$_FillType_$9431","typeString":"enum V3SpokePoolInterface.FillType"}},"typeDescriptions":{"typeIdentifier":"t_enum$_FillType_$9431","typeString":"enum V3SpokePoolInterface.FillType"}},"nodeType":"VariableDeclarationStatement","src":"98584:381:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8618,"name":"fillStatuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6051,"src":"99582:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":8620,"indexExpression":{"id":8619,"name":"relayHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8590,"src":"99595:9:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"99582:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"expression":{"id":8623,"name":"FillStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9427,"src":"99617:10:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_FillStatus_$9427_$","typeString":"type(enum V3SpokePoolInterface.FillStatus)"}},"id":8624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"99628:6:27","memberName":"Filled","nodeType":"MemberAccess","referencedDeclaration":9426,"src":"99617:17:27","typeDescriptions":{"typeIdentifier":"t_enum$_FillStatus_$9427","typeString":"enum V3SpokePoolInterface.FillStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_FillStatus_$9427","typeString":"enum V3SpokePoolInterface.FillStatus"}],"id":8622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"99609:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8621,"name":"uint256","nodeType":"ElementaryTypeName","src":"99609:7:27","typeDescriptions":{}}},"id":8625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"99609:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"99582:53:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8630,"nodeType":"IfStatement","src":"99578:79:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8627,"name":"RelayFilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9690,"src":"99644:11:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"99644:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8629,"nodeType":"RevertStatement","src":"99637:20:27"}},{"expression":{"id":8639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8631,"name":"fillStatuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6051,"src":"99667:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":8633,"indexExpression":{"id":8632,"name":"relayHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8590,"src":"99680:9:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"99667:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":8636,"name":"FillStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9427,"src":"99701:10:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_FillStatus_$9427_$","typeString":"type(enum V3SpokePoolInterface.FillStatus)"}},"id":8637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"99712:6:27","memberName":"Filled","nodeType":"MemberAccess","referencedDeclaration":9426,"src":"99701:17:27","typeDescriptions":{"typeIdentifier":"t_enum$_FillStatus_$9427","typeString":"enum V3SpokePoolInterface.FillStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_FillStatus_$9427","typeString":"enum V3SpokePoolInterface.FillStatus"}],"id":8635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"99693:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8634,"name":"uint256","nodeType":"ElementaryTypeName","src":"99693:7:27","typeDescriptions":{}}},"id":8638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"99693:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"99667:52:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8640,"nodeType":"ExpressionStatement","src":"99667:52:27"},{"eventCall":{"arguments":[{"expression":{"id":8642,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8576,"src":"99901:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData memory"}},"id":8643,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"99911:10:27","memberName":"inputToken","nodeType":"MemberAccess","referencedDeclaration":9439,"src":"99901:20:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8644,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8576,"src":"99935:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData memory"}},"id":8645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"99945:11:27","memberName":"outputToken","nodeType":"MemberAccess","referencedDeclaration":9441,"src":"99935:21:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8646,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8576,"src":"99970:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData memory"}},"id":8647,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"99980:11:27","memberName":"inputAmount","nodeType":"MemberAccess","referencedDeclaration":9443,"src":"99970:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8648,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8576,"src":"100005:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData memory"}},"id":8649,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"100015:12:27","memberName":"outputAmount","nodeType":"MemberAccess","referencedDeclaration":9445,"src":"100005:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8650,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8567,"src":"100041:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams memory"}},"id":8651,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"100056:16:27","memberName":"repaymentChainId","nodeType":"MemberAccess","referencedDeclaration":9477,"src":"100041:31:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8652,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8576,"src":"100086:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData memory"}},"id":8653,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"100096:13:27","memberName":"originChainId","nodeType":"MemberAccess","referencedDeclaration":9447,"src":"100086:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8654,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8576,"src":"100123:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData memory"}},"id":8655,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"100133:9:27","memberName":"depositId","nodeType":"MemberAccess","referencedDeclaration":9449,"src":"100123:19:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":8656,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8576,"src":"100156:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData memory"}},"id":8657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"100166:12:27","memberName":"fillDeadline","nodeType":"MemberAccess","referencedDeclaration":9451,"src":"100156:22:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":8658,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8576,"src":"100192:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData memory"}},"id":8659,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"100202:19:27","memberName":"exclusivityDeadline","nodeType":"MemberAccess","referencedDeclaration":9453,"src":"100192:29:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":8660,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8576,"src":"100235:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData memory"}},"id":8661,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"100245:16:27","memberName":"exclusiveRelayer","nodeType":"MemberAccess","referencedDeclaration":9437,"src":"100235:26:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8662,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8569,"src":"100275:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8663,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8576,"src":"100296:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData memory"}},"id":8664,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"100306:9:27","memberName":"depositor","nodeType":"MemberAccess","referencedDeclaration":9433,"src":"100296:19:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8665,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8576,"src":"100329:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData memory"}},"id":8666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"100339:9:27","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":9435,"src":"100329:19:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8667,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8576,"src":"100362:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData memory"}},"id":8668,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"100372:7:27","memberName":"message","nodeType":"MemberAccess","referencedDeclaration":9455,"src":"100362:17:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"expression":{"id":8670,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8567,"src":"100455:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams memory"}},"id":8671,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"100470:16:27","memberName":"updatedRecipient","nodeType":"MemberAccess","referencedDeclaration":9473,"src":"100455:31:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8672,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8567,"src":"100520:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams memory"}},"id":8673,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"100535:14:27","memberName":"updatedMessage","nodeType":"MemberAccess","referencedDeclaration":9475,"src":"100520:29:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":8674,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8567,"src":"100588:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams memory"}},"id":8675,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"100603:19:27","memberName":"updatedOutputAmount","nodeType":"MemberAccess","referencedDeclaration":9471,"src":"100588:34:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8676,"name":"fillType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8596,"src":"100650:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_FillType_$9431","typeString":"enum V3SpokePoolInterface.FillType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_FillType_$9431","typeString":"enum V3SpokePoolInterface.FillType"}],"id":8669,"name":"V3RelayExecutionEventInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9488,"src":"100393:25:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_V3RelayExecutionEventInfo_$9488_storage_ptr_$","typeString":"type(struct V3SpokePoolInterface.V3RelayExecutionEventInfo storage pointer)"}},"id":8677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["100437:16:27","100504:14:27","100567:19:27","100640:8:27"],"names":["updatedRecipient","updatedMessage","updatedOutputAmount","fillType"],"nodeType":"FunctionCall","src":"100393:280:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionEventInfo_$9488_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionEventInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_struct$_V3RelayExecutionEventInfo_$9488_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionEventInfo memory"}],"id":8641,"name":"FilledV3Relay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9563,"src":"99874:13:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint32_$_t_uint32_$_t_address_$_t_address_$_t_address_$_t_address_$_t_bytes_memory_ptr_$_t_struct$_V3RelayExecutionEventInfo_$9488_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,uint256,uint256,uint32,uint32,uint32,address,address,address,address,bytes memory,struct V3SpokePoolInterface.V3RelayExecutionEventInfo memory)"}},"id":8678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"99874:809:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8679,"nodeType":"EmitStatement","src":"99869:814:27"},{"assignments":[8681],"declarations":[{"constant":false,"id":8681,"mutability":"mutable","name":"recipientToSend","nameLocation":"101182:15:27","nodeType":"VariableDeclaration","scope":8784,"src":"101174:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8680,"name":"address","nodeType":"ElementaryTypeName","src":"101174:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8684,"initialValue":{"expression":{"id":8682,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8567,"src":"101200:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams memory"}},"id":8683,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"101215:16:27","memberName":"updatedRecipient","nodeType":"MemberAccess","referencedDeclaration":9473,"src":"101200:31:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"101174:57:27"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8685,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"101246:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"101250:6:27","memberName":"sender","nodeType":"MemberAccess","src":"101246:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8687,"name":"recipientToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8681,"src":"101260:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"101246:29:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":8690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"101279:11:27","subExpression":{"id":8689,"name":"isSlowFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8571,"src":"101280:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"101246:44:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8693,"nodeType":"IfStatement","src":"101242:57:27","trueBody":{"functionReturnParameters":8573,"id":8692,"nodeType":"Return","src":"101292:7:27"}},{"assignments":[8695],"declarations":[{"constant":false,"id":8695,"mutability":"mutable","name":"outputToken","nameLocation":"101400:11:27","nodeType":"VariableDeclaration","scope":8784,"src":"101392:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8694,"name":"address","nodeType":"ElementaryTypeName","src":"101392:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8698,"initialValue":{"expression":{"id":8696,"name":"relayData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8576,"src":"101414:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData memory"}},"id":8697,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"101424:11:27","memberName":"outputToken","nodeType":"MemberAccess","referencedDeclaration":9441,"src":"101414:21:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"101392:43:27"},{"assignments":[8700],"declarations":[{"constant":false,"id":8700,"mutability":"mutable","name":"amountToSend","nameLocation":"101453:12:27","nodeType":"VariableDeclaration","scope":8784,"src":"101445:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8699,"name":"uint256","nodeType":"ElementaryTypeName","src":"101445:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8703,"initialValue":{"expression":{"id":8701,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8567,"src":"101468:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams memory"}},"id":8702,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"101483:19:27","memberName":"updatedOutputAmount","nodeType":"MemberAccess","referencedDeclaration":9471,"src":"101468:34:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"101445:57:27"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8704,"name":"outputToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8695,"src":"101516:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":8707,"name":"wrappedNativeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"101539:18:27","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$8898","typeString":"contract WETH9Interface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_WETH9Interface_$8898","typeString":"contract WETH9Interface"}],"id":8706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"101531:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8705,"name":"address","nodeType":"ElementaryTypeName","src":"101531:7:27","typeDescriptions":{}}},"id":8708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"101531:27:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"101516:42:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8756,"nodeType":"Block","src":"102387:343:27","statements":[{"condition":{"id":8736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"102523:11:27","subExpression":{"id":8735,"name":"isSlowFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8571,"src":"102524:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"arguments":[{"id":8751,"name":"recipientToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8681,"src":"102689:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8752,"name":"amountToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8700,"src":"102706:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":8748,"name":"outputToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8695,"src":"102663:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8747,"name":"IERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"102645:17:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Upgradeable_$963_$","typeString":"type(contract IERC20Upgradeable)"}},"id":8749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"102645:30:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},"id":8750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"102676:12:27","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1032,"src":"102645:43:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$963_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20Upgradeable_$963_$","typeString":"function (contract IERC20Upgradeable,address,uint256)"}},"id":8753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"102645:74:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8754,"nodeType":"ExpressionStatement","src":"102645:74:27"},"id":8755,"nodeType":"IfStatement","src":"102519:200:27","trueBody":{"expression":{"arguments":[{"expression":{"id":8741,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"102584:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"102588:6:27","memberName":"sender","nodeType":"MemberAccess","src":"102584:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8743,"name":"recipientToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8681,"src":"102596:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8744,"name":"amountToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8700,"src":"102613:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":8738,"name":"outputToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8695,"src":"102554:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8737,"name":"IERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"102536:17:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Upgradeable_$963_$","typeString":"type(contract IERC20Upgradeable)"}},"id":8739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"102536:30:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},"id":8740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"102567:16:27","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1059,"src":"102536:47:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$963_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20Upgradeable_$963_$","typeString":"function (contract IERC20Upgradeable,address,address,uint256)"}},"id":8745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"102536:90:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8746,"nodeType":"ExpressionStatement","src":"102536:90:27"}}]},"id":8757,"nodeType":"IfStatement","src":"101512:1218:27","trueBody":{"id":8734,"nodeType":"Block","src":"101560:821:27","statements":[{"condition":{"id":8711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"102118:11:27","subExpression":{"id":8710,"name":"isSlowFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8571,"src":"102119:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8725,"nodeType":"IfStatement","src":"102114:105:27","trueBody":{"expression":{"arguments":[{"expression":{"id":8716,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"102179:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"102183:6:27","memberName":"sender","nodeType":"MemberAccess","src":"102179:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8720,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"102199:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_SpokePool_$8866","typeString":"contract SpokePool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SpokePool_$8866","typeString":"contract SpokePool"}],"id":8719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"102191:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8718,"name":"address","nodeType":"ElementaryTypeName","src":"102191:7:27","typeDescriptions":{}}},"id":8721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"102191:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8722,"name":"amountToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8700,"src":"102206:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":8713,"name":"outputToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8695,"src":"102149:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8712,"name":"IERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"102131:17:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Upgradeable_$963_$","typeString":"type(contract IERC20Upgradeable)"}},"id":8714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"102131:30:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},"id":8715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"102162:16:27","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1059,"src":"102131:47:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$963_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20Upgradeable_$963_$","typeString":"function (contract IERC20Upgradeable,address,address,uint256)"}},"id":8723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"102131:88:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8724,"nodeType":"ExpressionStatement","src":"102131:88:27"}},{"expression":{"arguments":[{"arguments":[{"id":8729,"name":"recipientToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8681,"src":"102269:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"102261:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":8727,"name":"address","nodeType":"ElementaryTypeName","src":"102261:8:27","stateMutability":"payable","typeDescriptions":{}}},"id":8730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"102261:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":8731,"name":"amountToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8700,"src":"102287:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8726,"name":"_unwrapwrappedNativeTokenTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8282,"src":"102233:27:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256)"}},"id":8732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"102233:67:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8733,"nodeType":"ExpressionStatement","src":"102233:67:27"}]}},{"assignments":[8759],"declarations":[{"constant":false,"id":8759,"mutability":"mutable","name":"updatedMessage","nameLocation":"102753:14:27","nodeType":"VariableDeclaration","scope":8784,"src":"102740:27:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8758,"name":"bytes","nodeType":"ElementaryTypeName","src":"102740:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":8762,"initialValue":{"expression":{"id":8760,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8567,"src":"102770:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams memory"}},"id":8761,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"102785:14:27","memberName":"updatedMessage","nodeType":"MemberAccess","referencedDeclaration":9475,"src":"102770:29:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"102740:59:27"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8763,"name":"recipientToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8681,"src":"102813:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"102829:10:27","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":10115,"src":"102813:26:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":8765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"102813:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8766,"name":"updatedMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8759,"src":"102845:14:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"102860:6:27","memberName":"length","nodeType":"MemberAccess","src":"102845:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"102869:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"102845:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"102813:57:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8783,"nodeType":"IfStatement","src":"102809:280:27","trueBody":{"id":8782,"nodeType":"Block","src":"102872:217:27","statements":[{"expression":{"arguments":[{"id":8775,"name":"outputToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8695,"src":"102963:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8776,"name":"amountToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8700,"src":"102992:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8777,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"103022:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"103026:6:27","memberName":"sender","nodeType":"MemberAccess","src":"103022:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8779,"name":"updatedMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8759,"src":"103050:14:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":8772,"name":"recipientToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8681,"src":"102907:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8771,"name":"AcrossMessageHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"102886:20:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AcrossMessageHandler_$5986_$","typeString":"type(contract AcrossMessageHandler)"}},"id":8773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"102886:37:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AcrossMessageHandler_$5986","typeString":"contract AcrossMessageHandler"}},"id":8774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"102924:21:27","memberName":"handleV3AcrossMessage","nodeType":"MemberAccess","referencedDeclaration":5985,"src":"102886:59:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,address,bytes memory) external"}},"id":8780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"102886:192:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8781,"nodeType":"ExpressionStatement","src":"102886:192:27"}]}}]},"id":8785,"implemented":true,"kind":"function","modifiers":[],"name":"_fillRelayV3","nameLocation":"97706:12:27","nodeType":"FunctionDefinition","parameters":{"id":8572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8567,"mutability":"mutable","name":"relayExecution","nameLocation":"97758:14:27","nodeType":"VariableDeclaration","scope":8785,"src":"97728:44:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams"},"typeName":{"id":8566,"nodeType":"UserDefinedTypeName","pathNode":{"id":8565,"name":"V3RelayExecutionParams","nameLocations":["97728:22:27"],"nodeType":"IdentifierPath","referencedDeclaration":9478,"src":"97728:22:27"},"referencedDeclaration":9478,"src":"97728:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_storage_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams"}},"visibility":"internal"},{"constant":false,"id":8569,"mutability":"mutable","name":"relayer","nameLocation":"97790:7:27","nodeType":"VariableDeclaration","scope":8785,"src":"97782:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8568,"name":"address","nodeType":"ElementaryTypeName","src":"97782:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8571,"mutability":"mutable","name":"isSlowFill","nameLocation":"97812:10:27","nodeType":"VariableDeclaration","scope":8785,"src":"97807:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8570,"name":"bool","nodeType":"ElementaryTypeName","src":"97807:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"97718:110:27"},"returnParameters":{"id":8573,"nodeType":"ParameterList","parameters":[],"src":"97838:0:27"},"scope":8866,"src":"97697:5398:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8853,"nodeType":"Block","src":"103257:1081:27","statements":[{"assignments":[8796],"declarations":[{"constant":false,"id":8796,"mutability":"mutable","name":"relayExecutionInfo","nameLocation":"103293:18:27","nodeType":"VariableDeclaration","scope":8853,"src":"103267:44:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecutionInfo_$6270_memory_ptr","typeString":"struct SpokePool.RelayExecutionInfo"},"typeName":{"id":8795,"nodeType":"UserDefinedTypeName","pathNode":{"id":8794,"name":"RelayExecutionInfo","nameLocations":["103267:18:27"],"nodeType":"IdentifierPath","referencedDeclaration":6270,"src":"103267:18:27"},"referencedDeclaration":6270,"src":"103267:18:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecutionInfo_$6270_storage_ptr","typeString":"struct SpokePool.RelayExecutionInfo"}},"visibility":"internal"}],"id":8809,"initialValue":{"arguments":[{"expression":{"id":8798,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8789,"src":"103362:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8799,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"103377:20:27","memberName":"updatedRelayerFeePct","nodeType":"MemberAccess","referencedDeclaration":6243,"src":"103362:35:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"expression":{"id":8800,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8789,"src":"103422:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8801,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"103437:16:27","memberName":"updatedRecipient","nodeType":"MemberAccess","referencedDeclaration":6245,"src":"103422:31:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8802,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8789,"src":"103476:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8803,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"103491:14:27","memberName":"updatedMessage","nodeType":"MemberAccess","referencedDeclaration":6247,"src":"103476:29:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":8804,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8789,"src":"103532:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8805,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"103547:8:27","memberName":"slowFill","nodeType":"MemberAccess","referencedDeclaration":6255,"src":"103532:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":8806,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8789,"src":"103590:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8807,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"103605:19:27","memberName":"payoutAdjustmentPct","nodeType":"MemberAccess","referencedDeclaration":6257,"src":"103590:34:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8797,"name":"RelayExecutionInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"103314:18:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RelayExecutionInfo_$6270_storage_ptr_$","typeString":"type(struct SpokePool.RelayExecutionInfo storage pointer)"}},"id":8808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["103347:13:27","103411:9:27","103467:7:27","103519:11:27","103569:19:27"],"names":["relayerFeePct","recipient","message","isSlowRelay","payoutAdjustmentPct"],"nodeType":"FunctionCall","src":"103314:321:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecutionInfo_$6270_memory_ptr","typeString":"struct SpokePool.RelayExecutionInfo memory"}},"nodeType":"VariableDeclarationStatement","src":"103267:368:27"},{"eventCall":{"arguments":[{"expression":{"expression":{"id":8811,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8789,"src":"103676:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"103691:5:27","memberName":"relay","nodeType":"MemberAccess","referencedDeclaration":6239,"src":"103676:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}},"id":8813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"103697:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":9163,"src":"103676:27:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":8814,"name":"DEPRECATED_relayFills","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"103717:21:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":8817,"indexExpression":{"expression":{"id":8815,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8789,"src":"103739:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8816,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"103754:9:27","memberName":"relayHash","nodeType":"MemberAccess","referencedDeclaration":6241,"src":"103739:24:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"103717:47:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8818,"name":"fillAmountPreFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8791,"src":"103778:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8819,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8789,"src":"103809:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8820,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"103824:16:27","memberName":"repaymentChainId","nodeType":"MemberAccess","referencedDeclaration":6249,"src":"103809:31:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":8821,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8789,"src":"103854:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8822,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"103869:5:27","memberName":"relay","nodeType":"MemberAccess","referencedDeclaration":6239,"src":"103854:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}},"id":8823,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"103875:13:27","memberName":"originChainId","nodeType":"MemberAccess","referencedDeclaration":9165,"src":"103854:34:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":8824,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8789,"src":"103902:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8825,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"103917:5:27","memberName":"relay","nodeType":"MemberAccess","referencedDeclaration":6239,"src":"103902:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}},"id":8826,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"103923:18:27","memberName":"destinationChainId","nodeType":"MemberAccess","referencedDeclaration":9167,"src":"103902:39:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":8827,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8789,"src":"103955:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"103970:5:27","memberName":"relay","nodeType":"MemberAccess","referencedDeclaration":6239,"src":"103955:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}},"id":8829,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"103976:13:27","memberName":"relayerFeePct","nodeType":"MemberAccess","referencedDeclaration":9171,"src":"103955:34:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"expression":{"expression":{"id":8830,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8789,"src":"104003:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8831,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"104018:5:27","memberName":"relay","nodeType":"MemberAccess","referencedDeclaration":6239,"src":"104003:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}},"id":8832,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"104024:16:27","memberName":"realizedLpFeePct","nodeType":"MemberAccess","referencedDeclaration":9169,"src":"104003:37:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"expression":{"expression":{"id":8833,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8789,"src":"104054:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8834,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"104069:5:27","memberName":"relay","nodeType":"MemberAccess","referencedDeclaration":6239,"src":"104054:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}},"id":8835,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"104075:9:27","memberName":"depositId","nodeType":"MemberAccess","referencedDeclaration":9173,"src":"104054:30:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"expression":{"id":8836,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8789,"src":"104098:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8837,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"104113:5:27","memberName":"relay","nodeType":"MemberAccess","referencedDeclaration":6239,"src":"104098:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}},"id":8838,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"104119:16:27","memberName":"destinationToken","nodeType":"MemberAccess","referencedDeclaration":9161,"src":"104098:37:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8839,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"104149:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"104153:6:27","memberName":"sender","nodeType":"MemberAccess","src":"104149:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":8841,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8789,"src":"104173:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8842,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"104188:5:27","memberName":"relay","nodeType":"MemberAccess","referencedDeclaration":6239,"src":"104173:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}},"id":8843,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"104194:9:27","memberName":"depositor","nodeType":"MemberAccess","referencedDeclaration":9157,"src":"104173:30:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":8844,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8789,"src":"104217:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8845,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"104232:5:27","memberName":"relay","nodeType":"MemberAccess","referencedDeclaration":6239,"src":"104217:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}},"id":8846,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"104238:9:27","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":9159,"src":"104217:30:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":8847,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8789,"src":"104261:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution memory"}},"id":8848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"104276:5:27","memberName":"relay","nodeType":"MemberAccess","referencedDeclaration":6239,"src":"104261:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_memory_ptr","typeString":"struct SpokePoolInterface.RelayData memory"}},"id":8849,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"104282:7:27","memberName":"message","nodeType":"MemberAccess","referencedDeclaration":9175,"src":"104261:28:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":8850,"name":"relayExecutionInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8796,"src":"104303:18:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecutionInfo_$6270_memory_ptr","typeString":"struct SpokePool.RelayExecutionInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_struct$_RelayExecutionInfo_$6270_memory_ptr","typeString":"struct SpokePool.RelayExecutionInfo memory"}],"id":8810,"name":"FilledRelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6183,"src":"103651:11:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_int64_$_t_int64_$_t_uint32_$_t_address_$_t_address_$_t_address_$_t_address_$_t_bytes_memory_ptr_$_t_struct$_RelayExecutionInfo_$6270_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256,uint256,uint256,int64,int64,uint32,address,address,address,address,bytes memory,struct SpokePool.RelayExecutionInfo memory)"}},"id":8851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"103651:680:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8852,"nodeType":"EmitStatement","src":"103646:685:27"}]},"documentation":{"id":8786,"nodeType":"StructuredDocumentation","src":"103101:53:27","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"id":8854,"implemented":true,"kind":"function","modifiers":[],"name":"_emitFillRelay","nameLocation":"103168:14:27","nodeType":"FunctionDefinition","parameters":{"id":8792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8789,"mutability":"mutable","name":"relayExecution","nameLocation":"103205:14:27","nodeType":"VariableDeclaration","scope":8854,"src":"103183:36:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_memory_ptr","typeString":"struct SpokePool.RelayExecution"},"typeName":{"id":8788,"nodeType":"UserDefinedTypeName","pathNode":{"id":8787,"name":"RelayExecution","nameLocations":["103183:14:27"],"nodeType":"IdentifierPath","referencedDeclaration":6258,"src":"103183:14:27"},"referencedDeclaration":6258,"src":"103183:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayExecution_$6258_storage_ptr","typeString":"struct SpokePool.RelayExecution"}},"visibility":"internal"},{"constant":false,"id":8791,"mutability":"mutable","name":"fillAmountPreFees","nameLocation":"103229:17:27","nodeType":"VariableDeclaration","scope":8854,"src":"103221:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8790,"name":"uint256","nodeType":"ElementaryTypeName","src":"103221:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"103182:65:27"},"returnParameters":{"id":8793,"nodeType":"ParameterList","parameters":[],"src":"103257:0:27"},"scope":8866,"src":"103159:1179:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":8857,"implemented":false,"kind":"function","modifiers":[],"name":"_requireAdminSender","nameLocation":"104651:19:27","nodeType":"FunctionDefinition","parameters":{"id":8855,"nodeType":"ParameterList","parameters":[],"src":"104670:2:27"},"returnParameters":{"id":8856,"nodeType":"ParameterList","parameters":[],"src":"104689:0:27"},"scope":8866,"src":"104642:48:27","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":8860,"nodeType":"Block","src":"104836:2:27","statements":[]},"id":8861,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8858,"nodeType":"ParameterList","parameters":[],"src":"104816:2:27"},"returnParameters":{"id":8859,"nodeType":"ParameterList","parameters":[],"src":"104836:0:27"},"scope":8866,"src":"104809:29:27","stateMutability":"payable","virtual":false,"visibility":"external"},{"constant":false,"id":8865,"mutability":"mutable","name":"__gap","nameLocation":"105172:5:27","nodeType":"VariableDeclaration","scope":8866,"src":"105151:26:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$999_storage","typeString":"uint256[999]"},"typeName":{"baseType":{"id":8862,"name":"uint256","nodeType":"ElementaryTypeName","src":"105151:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8864,"length":{"hexValue":"393939","id":8863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"105159:3:27","typeDescriptions":{"typeIdentifier":"t_rational_999_by_1","typeString":"int_const 999"},"value":"999"},"nodeType":"ArrayTypeName","src":"105151:12:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$999_storage_ptr","typeString":"uint256[999]"}},"visibility":"private"}],"scope":8867,"src":"2299:102881:27","usedErrors":[9420,9674,9676,9678,9680,9682,9684,9686,9688,9690,9692,9694,9696,9698,9700,9702,9704],"usedEvents":[139,146,151,511,6099,6103,6111,6134,6149,6183,6191,6211,6223,6227,6231,6235,9516,9530,9563,9589]}],"src":"37:105144:27"},"id":27},"contracts/external/interfaces/WETH9Interface.sol":{"ast":{"absolutePath":"contracts/external/interfaces/WETH9Interface.sol","exportedSymbols":{"WETH9Interface":[8898]},"id":8899,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":8868,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:28"},{"abstract":false,"baseContracts":[],"canonicalName":"WETH9Interface","contractDependencies":[],"contractKind":"interface","documentation":{"id":8869,"nodeType":"StructuredDocumentation","src":"62:52:28","text":" @notice Interface for the WETH9 contract."},"fullyImplemented":false,"id":8898,"linearizedBaseContracts":[8898],"name":"WETH9Interface","nameLocation":"125:14:28","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":8870,"nodeType":"StructuredDocumentation","src":"146:134:28","text":" @notice Burn Wrapped Ether and receive native Ether.\n @param wad Amount of WETH to unwrap and send to caller."},"functionSelector":"2e1a7d4d","id":8875,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"294:8:28","nodeType":"FunctionDefinition","parameters":{"id":8873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8872,"mutability":"mutable","name":"wad","nameLocation":"311:3:28","nodeType":"VariableDeclaration","scope":8875,"src":"303:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8871,"name":"uint256","nodeType":"ElementaryTypeName","src":"303:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"302:13:28"},"returnParameters":{"id":8874,"nodeType":"ParameterList","parameters":[],"src":"324:0:28"},"scope":8898,"src":"285:40:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":8876,"nodeType":"StructuredDocumentation","src":"331:145:28","text":" @notice Lock native Ether and mint Wrapped Ether ERC20\n @dev msg.value is amount of Wrapped Ether to mint/Ether to lock."},"functionSelector":"d0e30db0","id":8879,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"490:7:28","nodeType":"FunctionDefinition","parameters":{"id":8877,"nodeType":"ParameterList","parameters":[],"src":"497:2:28"},"returnParameters":{"id":8878,"nodeType":"ParameterList","parameters":[],"src":"516:0:28"},"scope":8898,"src":"481:36:28","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":8880,"nodeType":"StructuredDocumentation","src":"523:155:28","text":" @notice Get balance of WETH held by `guy`.\n @param guy Address to get balance of.\n @return wad Amount of WETH held by `guy`."},"functionSelector":"70a08231","id":8887,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"692:9:28","nodeType":"FunctionDefinition","parameters":{"id":8883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8882,"mutability":"mutable","name":"guy","nameLocation":"710:3:28","nodeType":"VariableDeclaration","scope":8887,"src":"702:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8881,"name":"address","nodeType":"ElementaryTypeName","src":"702:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"701:13:28"},"returnParameters":{"id":8886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8885,"mutability":"mutable","name":"wad","nameLocation":"746:3:28","nodeType":"VariableDeclaration","scope":8887,"src":"738:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8884,"name":"uint256","nodeType":"ElementaryTypeName","src":"738:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"737:13:28"},"scope":8898,"src":"683:68:28","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":8888,"nodeType":"StructuredDocumentation","src":"757:202:28","text":" @notice Transfer `wad` of WETH from caller to `guy`.\n @param guy Address to send WETH to.\n @param wad Amount of WETH to send.\n @return ok True if transfer succeeded."},"functionSelector":"a9059cbb","id":8897,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"973:8:28","nodeType":"FunctionDefinition","parameters":{"id":8893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8890,"mutability":"mutable","name":"guy","nameLocation":"990:3:28","nodeType":"VariableDeclaration","scope":8897,"src":"982:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8889,"name":"address","nodeType":"ElementaryTypeName","src":"982:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8892,"mutability":"mutable","name":"wad","nameLocation":"1003:3:28","nodeType":"VariableDeclaration","scope":8897,"src":"995:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8891,"name":"uint256","nodeType":"ElementaryTypeName","src":"995:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"981:26:28"},"returnParameters":{"id":8896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8897,"src":"1026:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8894,"name":"bool","nodeType":"ElementaryTypeName","src":"1026:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1025:6:28"},"scope":8898,"src":"964:68:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":8899,"src":"115:919:28","usedErrors":[],"usedEvents":[]}],"src":"37:998:28"},"id":28},"contracts/interfaces/HubPoolInterface.sol":{"ast":{"absolutePath":"contracts/interfaces/HubPoolInterface.sol","exportedSymbols":{"HubPoolInterface":[9136],"IERC20":[3515]},"id":9137,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":8900,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:29"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":8901,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9137,"sourceUnit":3516,"src":"62:56:29","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"HubPoolInterface","contractDependencies":[],"contractKind":"interface","documentation":{"id":8902,"nodeType":"StructuredDocumentation","src":"120:71:29","text":" @notice Concise list of functions in HubPool implementation."},"fullyImplemented":false,"id":9136,"linearizedBaseContracts":[9136],"name":"HubPoolInterface","nameLocation":"202:16:29","nodeType":"ContractDefinition","nodes":[{"canonicalName":"HubPoolInterface.PoolRebalanceLeaf","id":8921,"members":[{"constant":false,"id":8904,"mutability":"mutable","name":"chainId","nameLocation":"488:7:29","nodeType":"VariableDeclaration","scope":8921,"src":"480:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8903,"name":"uint256","nodeType":"ElementaryTypeName","src":"480:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8907,"mutability":"mutable","name":"bundleLpFees","nameLocation":"616:12:29","nodeType":"VariableDeclaration","scope":8921,"src":"606:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8905,"name":"uint256","nodeType":"ElementaryTypeName","src":"606:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8906,"nodeType":"ArrayTypeName","src":"606:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8910,"mutability":"mutable","name":"netSendAmounts","nameLocation":"1356:14:29","nodeType":"VariableDeclaration","scope":8921,"src":"1347:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":8908,"name":"int256","nodeType":"ElementaryTypeName","src":"1347:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":8909,"nodeType":"ArrayTypeName","src":"1347:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":8913,"mutability":"mutable","name":"runningBalances","nameLocation":"1746:15:29","nodeType":"VariableDeclaration","scope":8921,"src":"1737:24:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":8911,"name":"int256","nodeType":"ElementaryTypeName","src":"1737:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":8912,"nodeType":"ArrayTypeName","src":"1737:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":8915,"mutability":"mutable","name":"groupIndex","nameLocation":"2445:10:29","nodeType":"VariableDeclaration","scope":8921,"src":"2437:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8914,"name":"uint256","nodeType":"ElementaryTypeName","src":"2437:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8917,"mutability":"mutable","name":"leafId","nameLocation":"2567:6:29","nodeType":"VariableDeclaration","scope":8921,"src":"2561:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8916,"name":"uint8","nodeType":"ElementaryTypeName","src":"2561:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":8920,"mutability":"mutable","name":"l1Tokens","nameLocation":"2910:8:29","nodeType":"VariableDeclaration","scope":8921,"src":"2900:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8918,"name":"address","nodeType":"ElementaryTypeName","src":"2900:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8919,"nodeType":"ArrayTypeName","src":"2900:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"name":"PoolRebalanceLeaf","nameLocation":"338:17:29","nodeType":"StructDefinition","scope":9136,"src":"331:2594:29","visibility":"public"},{"canonicalName":"HubPoolInterface.RootBundle","id":8936,"members":[{"constant":false,"id":8923,"mutability":"mutable","name":"poolRebalanceRoot","nameLocation":"4057:17:29","nodeType":"VariableDeclaration","scope":8936,"src":"4049:25:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8922,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4049:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8925,"mutability":"mutable","name":"relayerRefundRoot","nameLocation":"4162:17:29","nodeType":"VariableDeclaration","scope":8936,"src":"4154:25:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4154:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8927,"mutability":"mutable","name":"slowRelayRoot","nameLocation":"4263:13:29","nodeType":"VariableDeclaration","scope":8936,"src":"4255:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8926,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8929,"mutability":"mutable","name":"claimedBitMap","nameLocation":"4387:13:29","nodeType":"VariableDeclaration","scope":8936,"src":"4379:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8928,"name":"uint256","nodeType":"ElementaryTypeName","src":"4379:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8931,"mutability":"mutable","name":"proposer","nameLocation":"4459:8:29","nodeType":"VariableDeclaration","scope":8936,"src":"4451:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8930,"name":"address","nodeType":"ElementaryTypeName","src":"4451:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8933,"mutability":"mutable","name":"unclaimedPoolRebalanceLeafCount","nameLocation":"4650:31:29","nodeType":"VariableDeclaration","scope":8936,"src":"4644:37:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8932,"name":"uint8","nodeType":"ElementaryTypeName","src":"4644:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":8935,"mutability":"mutable","name":"challengePeriodEndTimestamp","nameLocation":"4791:27:29","nodeType":"VariableDeclaration","scope":8936,"src":"4784:34:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8934,"name":"uint32","nodeType":"ElementaryTypeName","src":"4784:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"name":"RootBundle","nameLocation":"3946:10:29","nodeType":"StructDefinition","scope":9136,"src":"3939:886:29","visibility":"public"},{"canonicalName":"HubPoolInterface.PooledToken","id":8949,"members":[{"constant":false,"id":8938,"mutability":"mutable","name":"lpToken","nameLocation":"5117:7:29","nodeType":"VariableDeclaration","scope":8949,"src":"5109:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8937,"name":"address","nodeType":"ElementaryTypeName","src":"5109:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8940,"mutability":"mutable","name":"isEnabled","nameLocation":"5178:9:29","nodeType":"VariableDeclaration","scope":8949,"src":"5173:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8939,"name":"bool","nodeType":"ElementaryTypeName","src":"5173:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8942,"mutability":"mutable","name":"lastLpFeeUpdate","nameLocation":"5248:15:29","nodeType":"VariableDeclaration","scope":8949,"src":"5241:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8941,"name":"uint32","nodeType":"ElementaryTypeName","src":"5241:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8944,"mutability":"mutable","name":"utilizedReserves","nameLocation":"5400:16:29","nodeType":"VariableDeclaration","scope":8949,"src":"5393:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8943,"name":"int256","nodeType":"ElementaryTypeName","src":"5393:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8946,"mutability":"mutable","name":"liquidReserves","nameLocation":"5505:14:29","nodeType":"VariableDeclaration","scope":8949,"src":"5497:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8945,"name":"uint256","nodeType":"ElementaryTypeName","src":"5497:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8948,"mutability":"mutable","name":"undistributedLpFees","nameLocation":"5603:19:29","nodeType":"VariableDeclaration","scope":8949,"src":"5595:27:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8947,"name":"uint256","nodeType":"ElementaryTypeName","src":"5595:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PooledToken","nameLocation":"5030:11:29","nodeType":"StructDefinition","scope":9136,"src":"5023:606:29","visibility":"public"},{"canonicalName":"HubPoolInterface.CrossChainContract","id":8954,"members":[{"constant":false,"id":8951,"mutability":"mutable","name":"adapter","nameLocation":"5791:7:29","nodeType":"VariableDeclaration","scope":8954,"src":"5783:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8950,"name":"address","nodeType":"ElementaryTypeName","src":"5783:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8953,"mutability":"mutable","name":"spokePool","nameLocation":"5816:9:29","nodeType":"VariableDeclaration","scope":8954,"src":"5808:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8952,"name":"address","nodeType":"ElementaryTypeName","src":"5808:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"CrossChainContract","nameLocation":"5754:18:29","nodeType":"StructDefinition","scope":9136,"src":"5747:85:29","visibility":"public"},{"functionSelector":"16c38b3c","id":8959,"implemented":false,"kind":"function","modifiers":[],"name":"setPaused","nameLocation":"5847:9:29","nodeType":"FunctionDefinition","parameters":{"id":8957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8956,"mutability":"mutable","name":"pause","nameLocation":"5862:5:29","nodeType":"VariableDeclaration","scope":8959,"src":"5857:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8955,"name":"bool","nodeType":"ElementaryTypeName","src":"5857:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5856:12:29"},"returnParameters":{"id":8958,"nodeType":"ParameterList","parameters":[],"src":"5877:0:29"},"scope":9136,"src":"5838:40:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"625997c0","id":8962,"implemented":false,"kind":"function","modifiers":[],"name":"emergencyDeleteProposal","nameLocation":"5893:23:29","nodeType":"FunctionDefinition","parameters":{"id":8960,"nodeType":"ParameterList","parameters":[],"src":"5916:2:29"},"returnParameters":{"id":8961,"nodeType":"ParameterList","parameters":[],"src":"5927:0:29"},"scope":9136,"src":"5884:44:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"dd70e5e8","id":8969,"implemented":false,"kind":"function","modifiers":[],"name":"relaySpokePoolAdminFunction","nameLocation":"5943:27:29","nodeType":"FunctionDefinition","parameters":{"id":8967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8964,"mutability":"mutable","name":"chainId","nameLocation":"5979:7:29","nodeType":"VariableDeclaration","scope":8969,"src":"5971:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8963,"name":"uint256","nodeType":"ElementaryTypeName","src":"5971:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8966,"mutability":"mutable","name":"functionData","nameLocation":"6001:12:29","nodeType":"VariableDeclaration","scope":8969,"src":"5988:25:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8965,"name":"bytes","nodeType":"ElementaryTypeName","src":"5988:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5970:44:29"},"returnParameters":{"id":8968,"nodeType":"ParameterList","parameters":[],"src":"6023:0:29"},"scope":9136,"src":"5934:90:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"00660b53","id":8976,"implemented":false,"kind":"function","modifiers":[],"name":"setProtocolFeeCapture","nameLocation":"6039:21:29","nodeType":"FunctionDefinition","parameters":{"id":8974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8971,"mutability":"mutable","name":"newProtocolFeeCaptureAddress","nameLocation":"6069:28:29","nodeType":"VariableDeclaration","scope":8976,"src":"6061:36:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8970,"name":"address","nodeType":"ElementaryTypeName","src":"6061:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8973,"mutability":"mutable","name":"newProtocolFeeCapturePct","nameLocation":"6107:24:29","nodeType":"VariableDeclaration","scope":8976,"src":"6099:32:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8972,"name":"uint256","nodeType":"ElementaryTypeName","src":"6099:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6060:72:29"},"returnParameters":{"id":8975,"nodeType":"ParameterList","parameters":[],"src":"6141:0:29"},"scope":9136,"src":"6030:112:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"33dc09ca","id":8984,"implemented":false,"kind":"function","modifiers":[],"name":"setBond","nameLocation":"6157:7:29","nodeType":"FunctionDefinition","parameters":{"id":8982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8979,"mutability":"mutable","name":"newBondToken","nameLocation":"6172:12:29","nodeType":"VariableDeclaration","scope":8984,"src":"6165:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3515","typeString":"contract IERC20"},"typeName":{"id":8978,"nodeType":"UserDefinedTypeName","pathNode":{"id":8977,"name":"IERC20","nameLocations":["6165:6:29"],"nodeType":"IdentifierPath","referencedDeclaration":3515,"src":"6165:6:29"},"referencedDeclaration":3515,"src":"6165:6:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$3515","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":8981,"mutability":"mutable","name":"newBondAmount","nameLocation":"6194:13:29","nodeType":"VariableDeclaration","scope":8984,"src":"6186:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8980,"name":"uint256","nodeType":"ElementaryTypeName","src":"6186:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6164:44:29"},"returnParameters":{"id":8983,"nodeType":"ParameterList","parameters":[],"src":"6217:0:29"},"scope":9136,"src":"6148:70:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"cd949995","id":8989,"implemented":false,"kind":"function","modifiers":[],"name":"setLiveness","nameLocation":"6233:11:29","nodeType":"FunctionDefinition","parameters":{"id":8987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8986,"mutability":"mutable","name":"newLiveness","nameLocation":"6252:11:29","nodeType":"VariableDeclaration","scope":8989,"src":"6245:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8985,"name":"uint32","nodeType":"ElementaryTypeName","src":"6245:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"6244:20:29"},"returnParameters":{"id":8988,"nodeType":"ParameterList","parameters":[],"src":"6273:0:29"},"scope":9136,"src":"6224:50:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"00c99206","id":8994,"implemented":false,"kind":"function","modifiers":[],"name":"setIdentifier","nameLocation":"6289:13:29","nodeType":"FunctionDefinition","parameters":{"id":8992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8991,"mutability":"mutable","name":"newIdentifier","nameLocation":"6311:13:29","nodeType":"VariableDeclaration","scope":8994,"src":"6303:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6303:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6302:23:29"},"returnParameters":{"id":8993,"nodeType":"ParameterList","parameters":[],"src":"6334:0:29"},"scope":9136,"src":"6280:55:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e460e35c","id":9003,"implemented":false,"kind":"function","modifiers":[],"name":"setCrossChainContracts","nameLocation":"6350:22:29","nodeType":"FunctionDefinition","parameters":{"id":9001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8996,"mutability":"mutable","name":"l2ChainId","nameLocation":"6390:9:29","nodeType":"VariableDeclaration","scope":9003,"src":"6382:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8995,"name":"uint256","nodeType":"ElementaryTypeName","src":"6382:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8998,"mutability":"mutable","name":"adapter","nameLocation":"6417:7:29","nodeType":"VariableDeclaration","scope":9003,"src":"6409:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8997,"name":"address","nodeType":"ElementaryTypeName","src":"6409:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9000,"mutability":"mutable","name":"spokePool","nameLocation":"6442:9:29","nodeType":"VariableDeclaration","scope":9003,"src":"6434:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8999,"name":"address","nodeType":"ElementaryTypeName","src":"6434:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6372:85:29"},"returnParameters":{"id":9002,"nodeType":"ParameterList","parameters":[],"src":"6466:0:29"},"scope":9136,"src":"6341:126:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b60c2d7d","id":9008,"implemented":false,"kind":"function","modifiers":[],"name":"enableL1TokenForLiquidityProvision","nameLocation":"6482:34:29","nodeType":"FunctionDefinition","parameters":{"id":9006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9005,"mutability":"mutable","name":"l1Token","nameLocation":"6525:7:29","nodeType":"VariableDeclaration","scope":9008,"src":"6517:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9004,"name":"address","nodeType":"ElementaryTypeName","src":"6517:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6516:17:29"},"returnParameters":{"id":9007,"nodeType":"ParameterList","parameters":[],"src":"6542:0:29"},"scope":9136,"src":"6473:70:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0c501af9","id":9013,"implemented":false,"kind":"function","modifiers":[],"name":"disableL1TokenForLiquidityProvision","nameLocation":"6558:35:29","nodeType":"FunctionDefinition","parameters":{"id":9011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9010,"mutability":"mutable","name":"l1Token","nameLocation":"6602:7:29","nodeType":"VariableDeclaration","scope":9013,"src":"6594:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9009,"name":"address","nodeType":"ElementaryTypeName","src":"6594:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6593:17:29"},"returnParameters":{"id":9012,"nodeType":"ParameterList","parameters":[],"src":"6619:0:29"},"scope":9136,"src":"6549:71:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"56688700","id":9020,"implemented":false,"kind":"function","modifiers":[],"name":"addLiquidity","nameLocation":"6635:12:29","nodeType":"FunctionDefinition","parameters":{"id":9018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9015,"mutability":"mutable","name":"l1Token","nameLocation":"6656:7:29","nodeType":"VariableDeclaration","scope":9020,"src":"6648:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9014,"name":"address","nodeType":"ElementaryTypeName","src":"6648:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9017,"mutability":"mutable","name":"l1TokenAmount","nameLocation":"6673:13:29","nodeType":"VariableDeclaration","scope":9020,"src":"6665:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9016,"name":"uint256","nodeType":"ElementaryTypeName","src":"6665:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6647:40:29"},"returnParameters":{"id":9019,"nodeType":"ParameterList","parameters":[],"src":"6704:0:29"},"scope":9136,"src":"6626:79:29","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"0ee28a88","id":9029,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidity","nameLocation":"6720:15:29","nodeType":"FunctionDefinition","parameters":{"id":9027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9022,"mutability":"mutable","name":"l1Token","nameLocation":"6753:7:29","nodeType":"VariableDeclaration","scope":9029,"src":"6745:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9021,"name":"address","nodeType":"ElementaryTypeName","src":"6745:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9024,"mutability":"mutable","name":"lpTokenAmount","nameLocation":"6778:13:29","nodeType":"VariableDeclaration","scope":9029,"src":"6770:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9023,"name":"uint256","nodeType":"ElementaryTypeName","src":"6770:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9026,"mutability":"mutable","name":"sendEth","nameLocation":"6806:7:29","nodeType":"VariableDeclaration","scope":9029,"src":"6801:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9025,"name":"bool","nodeType":"ElementaryTypeName","src":"6801:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6735:84:29"},"returnParameters":{"id":9028,"nodeType":"ParameterList","parameters":[],"src":"6828:0:29"},"scope":9136,"src":"6711:118:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e0f339e3","id":9036,"implemented":false,"kind":"function","modifiers":[],"name":"exchangeRateCurrent","nameLocation":"6844:19:29","nodeType":"FunctionDefinition","parameters":{"id":9032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9031,"mutability":"mutable","name":"l1Token","nameLocation":"6872:7:29","nodeType":"VariableDeclaration","scope":9036,"src":"6864:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9030,"name":"address","nodeType":"ElementaryTypeName","src":"6864:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6863:17:29"},"returnParameters":{"id":9035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9036,"src":"6899:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9033,"name":"uint256","nodeType":"ElementaryTypeName","src":"6899:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6898:9:29"},"scope":9136,"src":"6835:73:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a16fd6e9","id":9043,"implemented":false,"kind":"function","modifiers":[],"name":"liquidityUtilizationCurrent","nameLocation":"6923:27:29","nodeType":"FunctionDefinition","parameters":{"id":9039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9038,"mutability":"mutable","name":"l1Token","nameLocation":"6959:7:29","nodeType":"VariableDeclaration","scope":9043,"src":"6951:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9037,"name":"address","nodeType":"ElementaryTypeName","src":"6951:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6950:17:29"},"returnParameters":{"id":9042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9043,"src":"6986:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9040,"name":"uint256","nodeType":"ElementaryTypeName","src":"6986:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6985:9:29"},"scope":9136,"src":"6914:81:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"084d0513","id":9052,"implemented":false,"kind":"function","modifiers":[],"name":"liquidityUtilizationPostRelay","nameLocation":"7010:29:29","nodeType":"FunctionDefinition","parameters":{"id":9048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9045,"mutability":"mutable","name":"l1Token","nameLocation":"7048:7:29","nodeType":"VariableDeclaration","scope":9052,"src":"7040:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9044,"name":"address","nodeType":"ElementaryTypeName","src":"7040:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9047,"mutability":"mutable","name":"relayedAmount","nameLocation":"7065:13:29","nodeType":"VariableDeclaration","scope":9052,"src":"7057:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9046,"name":"uint256","nodeType":"ElementaryTypeName","src":"7057:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7039:40:29"},"returnParameters":{"id":9051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9052,"src":"7098:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9049,"name":"uint256","nodeType":"ElementaryTypeName","src":"7098:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7097:9:29"},"scope":9136,"src":"7001:106:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a5841194","id":9057,"implemented":false,"kind":"function","modifiers":[],"name":"sync","nameLocation":"7122:4:29","nodeType":"FunctionDefinition","parameters":{"id":9055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9054,"mutability":"mutable","name":"l1Token","nameLocation":"7135:7:29","nodeType":"VariableDeclaration","scope":9057,"src":"7127:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9053,"name":"address","nodeType":"ElementaryTypeName","src":"7127:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7126:17:29"},"returnParameters":{"id":9056,"nodeType":"ParameterList","parameters":[],"src":"7152:0:29"},"scope":9136,"src":"7113:40:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8bda0c00","id":9071,"implemented":false,"kind":"function","modifiers":[],"name":"proposeRootBundle","nameLocation":"7168:17:29","nodeType":"FunctionDefinition","parameters":{"id":9069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9060,"mutability":"mutable","name":"bundleEvaluationBlockNumbers","nameLocation":"7212:28:29","nodeType":"VariableDeclaration","scope":9071,"src":"7195:45:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9058,"name":"uint256","nodeType":"ElementaryTypeName","src":"7195:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9059,"nodeType":"ArrayTypeName","src":"7195:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9062,"mutability":"mutable","name":"poolRebalanceLeafCount","nameLocation":"7256:22:29","nodeType":"VariableDeclaration","scope":9071,"src":"7250:28:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9061,"name":"uint8","nodeType":"ElementaryTypeName","src":"7250:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":9064,"mutability":"mutable","name":"poolRebalanceRoot","nameLocation":"7296:17:29","nodeType":"VariableDeclaration","scope":9071,"src":"7288:25:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9063,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7288:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9066,"mutability":"mutable","name":"relayerRefundRoot","nameLocation":"7331:17:29","nodeType":"VariableDeclaration","scope":9071,"src":"7323:25:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9065,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7323:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9068,"mutability":"mutable","name":"slowRelayRoot","nameLocation":"7366:13:29","nodeType":"VariableDeclaration","scope":9071,"src":"7358:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9067,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7358:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7185:200:29"},"returnParameters":{"id":9070,"nodeType":"ParameterList","parameters":[],"src":"7394:0:29"},"scope":9136,"src":"7159:236:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"80c09a82","id":9095,"implemented":false,"kind":"function","modifiers":[],"name":"executeRootBundle","nameLocation":"7410:17:29","nodeType":"FunctionDefinition","parameters":{"id":9093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9073,"mutability":"mutable","name":"chainId","nameLocation":"7445:7:29","nodeType":"VariableDeclaration","scope":9095,"src":"7437:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9072,"name":"uint256","nodeType":"ElementaryTypeName","src":"7437:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9075,"mutability":"mutable","name":"groupIndex","nameLocation":"7470:10:29","nodeType":"VariableDeclaration","scope":9095,"src":"7462:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9074,"name":"uint256","nodeType":"ElementaryTypeName","src":"7462:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9078,"mutability":"mutable","name":"bundleLpFees","nameLocation":"7507:12:29","nodeType":"VariableDeclaration","scope":9095,"src":"7490:29:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9076,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9077,"nodeType":"ArrayTypeName","src":"7490:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9081,"mutability":"mutable","name":"netSendAmounts","nameLocation":"7545:14:29","nodeType":"VariableDeclaration","scope":9095,"src":"7529:30:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":9079,"name":"int256","nodeType":"ElementaryTypeName","src":"7529:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":9080,"nodeType":"ArrayTypeName","src":"7529:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":9084,"mutability":"mutable","name":"runningBalances","nameLocation":"7585:15:29","nodeType":"VariableDeclaration","scope":9095,"src":"7569:31:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":9082,"name":"int256","nodeType":"ElementaryTypeName","src":"7569:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":9083,"nodeType":"ArrayTypeName","src":"7569:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":9086,"mutability":"mutable","name":"leafId","nameLocation":"7616:6:29","nodeType":"VariableDeclaration","scope":9095,"src":"7610:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9085,"name":"uint8","nodeType":"ElementaryTypeName","src":"7610:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":9089,"mutability":"mutable","name":"l1Tokens","nameLocation":"7649:8:29","nodeType":"VariableDeclaration","scope":9095,"src":"7632:25:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9087,"name":"address","nodeType":"ElementaryTypeName","src":"7632:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9088,"nodeType":"ArrayTypeName","src":"7632:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":9092,"mutability":"mutable","name":"proof","nameLocation":"7684:5:29","nodeType":"VariableDeclaration","scope":9095,"src":"7667:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9090,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7667:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9091,"nodeType":"ArrayTypeName","src":"7667:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7427:268:29"},"returnParameters":{"id":9094,"nodeType":"ParameterList","parameters":[],"src":"7704:0:29"},"scope":9136,"src":"7401:304:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"22395aaa","id":9098,"implemented":false,"kind":"function","modifiers":[],"name":"disputeRootBundle","nameLocation":"7720:17:29","nodeType":"FunctionDefinition","parameters":{"id":9096,"nodeType":"ParameterList","parameters":[],"src":"7737:2:29"},"returnParameters":{"id":9097,"nodeType":"ParameterList","parameters":[],"src":"7748:0:29"},"scope":9136,"src":"7711:38:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2d0f6f84","id":9103,"implemented":false,"kind":"function","modifiers":[],"name":"claimProtocolFeesCaptured","nameLocation":"7764:25:29","nodeType":"FunctionDefinition","parameters":{"id":9101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9100,"mutability":"mutable","name":"l1Token","nameLocation":"7798:7:29","nodeType":"VariableDeclaration","scope":9103,"src":"7790:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9099,"name":"address","nodeType":"ElementaryTypeName","src":"7790:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7789:17:29"},"returnParameters":{"id":9102,"nodeType":"ParameterList","parameters":[],"src":"7815:0:29"},"scope":9136,"src":"7755:61:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"10b99527","id":9112,"implemented":false,"kind":"function","modifiers":[],"name":"setPoolRebalanceRoute","nameLocation":"7831:21:29","nodeType":"FunctionDefinition","parameters":{"id":9110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9105,"mutability":"mutable","name":"destinationChainId","nameLocation":"7870:18:29","nodeType":"VariableDeclaration","scope":9112,"src":"7862:26:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9104,"name":"uint256","nodeType":"ElementaryTypeName","src":"7862:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9107,"mutability":"mutable","name":"l1Token","nameLocation":"7906:7:29","nodeType":"VariableDeclaration","scope":9112,"src":"7898:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9106,"name":"address","nodeType":"ElementaryTypeName","src":"7898:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9109,"mutability":"mutable","name":"destinationToken","nameLocation":"7931:16:29","nodeType":"VariableDeclaration","scope":9112,"src":"7923:24:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9108,"name":"address","nodeType":"ElementaryTypeName","src":"7923:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7852:101:29"},"returnParameters":{"id":9111,"nodeType":"ParameterList","parameters":[],"src":"7962:0:29"},"scope":9136,"src":"7822:141:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"56864f38","id":9123,"implemented":false,"kind":"function","modifiers":[],"name":"setDepositRoute","nameLocation":"7978:15:29","nodeType":"FunctionDefinition","parameters":{"id":9121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9114,"mutability":"mutable","name":"originChainId","nameLocation":"8011:13:29","nodeType":"VariableDeclaration","scope":9123,"src":"8003:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9113,"name":"uint256","nodeType":"ElementaryTypeName","src":"8003:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9116,"mutability":"mutable","name":"destinationChainId","nameLocation":"8042:18:29","nodeType":"VariableDeclaration","scope":9123,"src":"8034:26:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9115,"name":"uint256","nodeType":"ElementaryTypeName","src":"8034:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9118,"mutability":"mutable","name":"originToken","nameLocation":"8078:11:29","nodeType":"VariableDeclaration","scope":9123,"src":"8070:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9117,"name":"address","nodeType":"ElementaryTypeName","src":"8070:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9120,"mutability":"mutable","name":"depositsEnabled","nameLocation":"8104:15:29","nodeType":"VariableDeclaration","scope":9123,"src":"8099:20:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9119,"name":"bool","nodeType":"ElementaryTypeName","src":"8099:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7993:132:29"},"returnParameters":{"id":9122,"nodeType":"ParameterList","parameters":[],"src":"8134:0:29"},"scope":9136,"src":"7969:166:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2d32d557","id":9132,"implemented":false,"kind":"function","modifiers":[],"name":"poolRebalanceRoute","nameLocation":"8150:18:29","nodeType":"FunctionDefinition","parameters":{"id":9128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9125,"mutability":"mutable","name":"destinationChainId","nameLocation":"8177:18:29","nodeType":"VariableDeclaration","scope":9132,"src":"8169:26:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9124,"name":"uint256","nodeType":"ElementaryTypeName","src":"8169:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9127,"mutability":"mutable","name":"l1Token","nameLocation":"8205:7:29","nodeType":"VariableDeclaration","scope":9132,"src":"8197:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9126,"name":"address","nodeType":"ElementaryTypeName","src":"8197:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8168:45:29"},"returnParameters":{"id":9131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9130,"mutability":"mutable","name":"destinationToken","nameLocation":"8269:16:29","nodeType":"VariableDeclaration","scope":9132,"src":"8261:24:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9129,"name":"address","nodeType":"ElementaryTypeName","src":"8261:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8260:26:29"},"scope":9136,"src":"8141:146:29","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"69b62502","id":9135,"implemented":false,"kind":"function","modifiers":[],"name":"loadEthForL2Calls","nameLocation":"8302:17:29","nodeType":"FunctionDefinition","parameters":{"id":9133,"nodeType":"ParameterList","parameters":[],"src":"8319:2:29"},"returnParameters":{"id":9134,"nodeType":"ParameterList","parameters":[],"src":"8338:0:29"},"scope":9136,"src":"8293:46:29","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":9137,"src":"192:8149:29","usedErrors":[],"usedEvents":[]}],"src":"37:8305:29"},"id":29},"contracts/interfaces/SpokePoolInterface.sol":{"ast":{"absolutePath":"contracts/interfaces/SpokePoolInterface.sol","exportedSymbols":{"SpokePoolInterface":[9421]},"id":9422,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":9138,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:30"},{"abstract":false,"baseContracts":[],"canonicalName":"SpokePoolInterface","contractDependencies":[],"contractKind":"interface","documentation":{"id":9139,"nodeType":"StructuredDocumentation","src":"62:103:30","text":" @notice Contains common data structures and functions used by all SpokePool implementations."},"fullyImplemented":false,"id":9421,"linearizedBaseContracts":[9421],"name":"SpokePoolInterface","nameLocation":"176:18:30","nodeType":"ContractDefinition","nodes":[{"canonicalName":"SpokePoolInterface.RelayerRefundLeaf","id":9154,"members":[{"constant":false,"id":9141,"mutability":"mutable","name":"amountToReturn","nameLocation":"519:14:30","nodeType":"VariableDeclaration","scope":9154,"src":"511:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9140,"name":"uint256","nodeType":"ElementaryTypeName","src":"511:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9143,"mutability":"mutable","name":"chainId","nameLocation":"641:7:30","nodeType":"VariableDeclaration","scope":9154,"src":"633:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9142,"name":"uint256","nodeType":"ElementaryTypeName","src":"633:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9146,"mutability":"mutable","name":"refundAmounts","nameLocation":"754:13:30","nodeType":"VariableDeclaration","scope":9154,"src":"744:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9144,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9145,"nodeType":"ArrayTypeName","src":"744:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9148,"mutability":"mutable","name":"leafId","nameLocation":"880:6:30","nodeType":"VariableDeclaration","scope":9154,"src":"873:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9147,"name":"uint32","nodeType":"ElementaryTypeName","src":"873:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9150,"mutability":"mutable","name":"l2TokenAddress","nameLocation":"973:14:30","nodeType":"VariableDeclaration","scope":9154,"src":"965:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9149,"name":"address","nodeType":"ElementaryTypeName","src":"965:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9153,"mutability":"mutable","name":"refundAddresses","nameLocation":"1106:15:30","nodeType":"VariableDeclaration","scope":9154,"src":"1096:25:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9151,"name":"address","nodeType":"ElementaryTypeName","src":"1096:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9152,"nodeType":"ArrayTypeName","src":"1096:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"name":"RelayerRefundLeaf","nameLocation":"297:17:30","nodeType":"StructDefinition","scope":9421,"src":"290:838:30","visibility":"public"},{"canonicalName":"SpokePoolInterface.RelayData","documentation":{"id":9155,"nodeType":"StructuredDocumentation","src":"1540:51:30","text":"@custom:audit FOLLOWING STRUCT TO BE DEPRECATED"},"id":9176,"members":[{"constant":false,"id":9157,"mutability":"mutable","name":"depositor","nameLocation":"1697:9:30","nodeType":"VariableDeclaration","scope":9176,"src":"1689:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9156,"name":"address","nodeType":"ElementaryTypeName","src":"1689:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9159,"mutability":"mutable","name":"recipient","nameLocation":"1783:9:30","nodeType":"VariableDeclaration","scope":9176,"src":"1775:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9158,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9161,"mutability":"mutable","name":"destinationToken","nameLocation":"1879:16:30","nodeType":"VariableDeclaration","scope":9176,"src":"1871:24:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9160,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9163,"mutability":"mutable","name":"amount","nameLocation":"1974:6:30","nodeType":"VariableDeclaration","scope":9176,"src":"1966:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1966:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9165,"mutability":"mutable","name":"originChainId","nameLocation":"2026:13:30","nodeType":"VariableDeclaration","scope":9176,"src":"2018:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9164,"name":"uint256","nodeType":"ElementaryTypeName","src":"2018:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9167,"mutability":"mutable","name":"destinationChainId","nameLocation":"2090:18:30","nodeType":"VariableDeclaration","scope":9176,"src":"2082:26:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9166,"name":"uint256","nodeType":"ElementaryTypeName","src":"2082:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9169,"mutability":"mutable","name":"realizedLpFeePct","nameLocation":"2262:16:30","nodeType":"VariableDeclaration","scope":9176,"src":"2256:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":9168,"name":"int64","nodeType":"ElementaryTypeName","src":"2256:5:30","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":9171,"mutability":"mutable","name":"relayerFeePct","nameLocation":"2358:13:30","nodeType":"VariableDeclaration","scope":9176,"src":"2352:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":9170,"name":"int64","nodeType":"ElementaryTypeName","src":"2352:5:30","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":9173,"mutability":"mutable","name":"depositId","nameLocation":"2461:9:30","nodeType":"VariableDeclaration","scope":9176,"src":"2454:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9172,"name":"uint32","nodeType":"ElementaryTypeName","src":"2454:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9175,"mutability":"mutable","name":"message","nameLocation":"2538:7:30","nodeType":"VariableDeclaration","scope":9176,"src":"2532:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":9174,"name":"bytes","nodeType":"ElementaryTypeName","src":"2532:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"RelayData","nameLocation":"1603:9:30","nodeType":"StructDefinition","scope":9421,"src":"1596:956:30","visibility":"public"},{"canonicalName":"SpokePoolInterface.SlowFill","documentation":{"id":9177,"nodeType":"StructuredDocumentation","src":"2558:51:30","text":"@custom:audit FOLLOWING STRUCT TO BE DEPRECATED"},"id":9183,"members":[{"constant":false,"id":9180,"mutability":"mutable","name":"relayData","nameLocation":"2650:9:30","nodeType":"VariableDeclaration","scope":9183,"src":"2640:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_storage_ptr","typeString":"struct SpokePoolInterface.RelayData"},"typeName":{"id":9179,"nodeType":"UserDefinedTypeName","pathNode":{"id":9178,"name":"RelayData","nameLocations":["2640:9:30"],"nodeType":"IdentifierPath","referencedDeclaration":9176,"src":"2640:9:30"},"referencedDeclaration":9176,"src":"2640:9:30","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$9176_storage_ptr","typeString":"struct SpokePoolInterface.RelayData"}},"visibility":"internal"},{"constant":false,"id":9182,"mutability":"mutable","name":"payoutAdjustmentPct","nameLocation":"2676:19:30","nodeType":"VariableDeclaration","scope":9183,"src":"2669:26:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9181,"name":"int256","nodeType":"ElementaryTypeName","src":"2669:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"SlowFill","nameLocation":"2621:8:30","nodeType":"StructDefinition","scope":9421,"src":"2614:88:30","visibility":"public"},{"canonicalName":"SpokePoolInterface.RootBundle","id":9192,"members":[{"constant":false,"id":9185,"mutability":"mutable","name":"slowRelayRoot","nameLocation":"3064:13:30","nodeType":"VariableDeclaration","scope":9192,"src":"3056:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3056:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9187,"mutability":"mutable","name":"relayerRefundRoot","nameLocation":"3160:17:30","nodeType":"VariableDeclaration","scope":9192,"src":"3152:25:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9186,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3152:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9191,"mutability":"mutable","name":"claimedBitmap","nameLocation":"3371:13:30","nodeType":"VariableDeclaration","scope":9192,"src":"3343:41:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":9190,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9188,"name":"uint256","nodeType":"ElementaryTypeName","src":"3351:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3343:27:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9189,"name":"uint256","nodeType":"ElementaryTypeName","src":"3362:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"RootBundle","nameLocation":"2912:10:30","nodeType":"StructDefinition","scope":9421,"src":"2905:486:30","visibility":"public"},{"functionSelector":"de7eba78","id":9197,"implemented":false,"kind":"function","modifiers":[],"name":"setCrossDomainAdmin","nameLocation":"3406:19:30","nodeType":"FunctionDefinition","parameters":{"id":9195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9194,"mutability":"mutable","name":"newCrossDomainAdmin","nameLocation":"3434:19:30","nodeType":"VariableDeclaration","scope":9197,"src":"3426:27:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9193,"name":"address","nodeType":"ElementaryTypeName","src":"3426:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3425:29:30"},"returnParameters":{"id":9196,"nodeType":"ParameterList","parameters":[],"src":"3463:0:30"},"scope":9421,"src":"3397:67:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"1dfb2d02","id":9202,"implemented":false,"kind":"function","modifiers":[],"name":"setHubPool","nameLocation":"3479:10:30","nodeType":"FunctionDefinition","parameters":{"id":9200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9199,"mutability":"mutable","name":"newHubPool","nameLocation":"3498:10:30","nodeType":"VariableDeclaration","scope":9202,"src":"3490:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9198,"name":"address","nodeType":"ElementaryTypeName","src":"3490:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3489:20:30"},"returnParameters":{"id":9201,"nodeType":"ParameterList","parameters":[],"src":"3518:0:30"},"scope":9421,"src":"3470:49:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"272751c7","id":9211,"implemented":false,"kind":"function","modifiers":[],"name":"setEnableRoute","nameLocation":"3534:14:30","nodeType":"FunctionDefinition","parameters":{"id":9209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9204,"mutability":"mutable","name":"originToken","nameLocation":"3566:11:30","nodeType":"VariableDeclaration","scope":9211,"src":"3558:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9203,"name":"address","nodeType":"ElementaryTypeName","src":"3558:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9206,"mutability":"mutable","name":"destinationChainId","nameLocation":"3595:18:30","nodeType":"VariableDeclaration","scope":9211,"src":"3587:26:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9205,"name":"uint256","nodeType":"ElementaryTypeName","src":"3587:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9208,"mutability":"mutable","name":"enable","nameLocation":"3628:6:30","nodeType":"VariableDeclaration","scope":9211,"src":"3623:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9207,"name":"bool","nodeType":"ElementaryTypeName","src":"3623:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3548:92:30"},"returnParameters":{"id":9210,"nodeType":"ParameterList","parameters":[],"src":"3649:0:30"},"scope":9421,"src":"3525:125:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"738b62e5","id":9216,"implemented":false,"kind":"function","modifiers":[],"name":"pauseDeposits","nameLocation":"3665:13:30","nodeType":"FunctionDefinition","parameters":{"id":9214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9213,"mutability":"mutable","name":"pause","nameLocation":"3684:5:30","nodeType":"VariableDeclaration","scope":9216,"src":"3679:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9212,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:12:30"},"returnParameters":{"id":9215,"nodeType":"ParameterList","parameters":[],"src":"3699:0:30"},"scope":9421,"src":"3656:44:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"99cc2968","id":9221,"implemented":false,"kind":"function","modifiers":[],"name":"pauseFills","nameLocation":"3715:10:30","nodeType":"FunctionDefinition","parameters":{"id":9219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9218,"mutability":"mutable","name":"pause","nameLocation":"3731:5:30","nodeType":"VariableDeclaration","scope":9221,"src":"3726:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9217,"name":"bool","nodeType":"ElementaryTypeName","src":"3726:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3725:12:30"},"returnParameters":{"id":9220,"nodeType":"ParameterList","parameters":[],"src":"3746:0:30"},"scope":9421,"src":"3706:41:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"493a4f84","id":9228,"implemented":false,"kind":"function","modifiers":[],"name":"relayRootBundle","nameLocation":"3762:15:30","nodeType":"FunctionDefinition","parameters":{"id":9226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9223,"mutability":"mutable","name":"relayerRefundRoot","nameLocation":"3786:17:30","nodeType":"VariableDeclaration","scope":9228,"src":"3778:25:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3778:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9225,"mutability":"mutable","name":"slowRelayRoot","nameLocation":"3813:13:30","nodeType":"VariableDeclaration","scope":9228,"src":"3805:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3805:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3777:50:30"},"returnParameters":{"id":9227,"nodeType":"ParameterList","parameters":[],"src":"3836:0:30"},"scope":9421,"src":"3753:84:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8a7860ce","id":9233,"implemented":false,"kind":"function","modifiers":[],"name":"emergencyDeleteRootBundle","nameLocation":"3852:25:30","nodeType":"FunctionDefinition","parameters":{"id":9231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9230,"mutability":"mutable","name":"rootBundleId","nameLocation":"3886:12:30","nodeType":"VariableDeclaration","scope":9233,"src":"3878:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3878:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3877:22:30"},"returnParameters":{"id":9232,"nodeType":"ParameterList","parameters":[],"src":"3908:0:30"},"scope":9421,"src":"3843:66:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"1186ec33","id":9252,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"3924:7:30","nodeType":"FunctionDefinition","parameters":{"id":9250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9235,"mutability":"mutable","name":"recipient","nameLocation":"3949:9:30","nodeType":"VariableDeclaration","scope":9252,"src":"3941:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9234,"name":"address","nodeType":"ElementaryTypeName","src":"3941:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9237,"mutability":"mutable","name":"originToken","nameLocation":"3976:11:30","nodeType":"VariableDeclaration","scope":9252,"src":"3968:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9236,"name":"address","nodeType":"ElementaryTypeName","src":"3968:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9239,"mutability":"mutable","name":"amount","nameLocation":"4005:6:30","nodeType":"VariableDeclaration","scope":9252,"src":"3997:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9238,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9241,"mutability":"mutable","name":"destinationChainId","nameLocation":"4029:18:30","nodeType":"VariableDeclaration","scope":9252,"src":"4021:26:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9240,"name":"uint256","nodeType":"ElementaryTypeName","src":"4021:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9243,"mutability":"mutable","name":"relayerFeePct","nameLocation":"4063:13:30","nodeType":"VariableDeclaration","scope":9252,"src":"4057:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":9242,"name":"int64","nodeType":"ElementaryTypeName","src":"4057:5:30","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":9245,"mutability":"mutable","name":"quoteTimestamp","nameLocation":"4093:14:30","nodeType":"VariableDeclaration","scope":9252,"src":"4086:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9244,"name":"uint32","nodeType":"ElementaryTypeName","src":"4086:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9247,"mutability":"mutable","name":"message","nameLocation":"4130:7:30","nodeType":"VariableDeclaration","scope":9252,"src":"4117:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9246,"name":"bytes","nodeType":"ElementaryTypeName","src":"4117:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9249,"mutability":"mutable","name":"maxCount","nameLocation":"4155:8:30","nodeType":"VariableDeclaration","scope":9252,"src":"4147:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9248,"name":"uint256","nodeType":"ElementaryTypeName","src":"4147:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3931:238:30"},"returnParameters":{"id":9251,"nodeType":"ParameterList","parameters":[],"src":"4186:0:30"},"scope":9421,"src":"3915:272:30","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":9253,"nodeType":"StructuredDocumentation","src":"4193:53:30","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"functionSelector":"541f4f14","id":9274,"implemented":false,"kind":"function","modifiers":[],"name":"depositFor","nameLocation":"4260:10:30","nodeType":"FunctionDefinition","parameters":{"id":9272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9255,"mutability":"mutable","name":"depositor","nameLocation":"4288:9:30","nodeType":"VariableDeclaration","scope":9274,"src":"4280:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9254,"name":"address","nodeType":"ElementaryTypeName","src":"4280:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9257,"mutability":"mutable","name":"recipient","nameLocation":"4315:9:30","nodeType":"VariableDeclaration","scope":9274,"src":"4307:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9256,"name":"address","nodeType":"ElementaryTypeName","src":"4307:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9259,"mutability":"mutable","name":"originToken","nameLocation":"4342:11:30","nodeType":"VariableDeclaration","scope":9274,"src":"4334:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9258,"name":"address","nodeType":"ElementaryTypeName","src":"4334:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9261,"mutability":"mutable","name":"amount","nameLocation":"4371:6:30","nodeType":"VariableDeclaration","scope":9274,"src":"4363:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9260,"name":"uint256","nodeType":"ElementaryTypeName","src":"4363:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9263,"mutability":"mutable","name":"destinationChainId","nameLocation":"4395:18:30","nodeType":"VariableDeclaration","scope":9274,"src":"4387:26:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9262,"name":"uint256","nodeType":"ElementaryTypeName","src":"4387:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9265,"mutability":"mutable","name":"relayerFeePct","nameLocation":"4429:13:30","nodeType":"VariableDeclaration","scope":9274,"src":"4423:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":9264,"name":"int64","nodeType":"ElementaryTypeName","src":"4423:5:30","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":9267,"mutability":"mutable","name":"quoteTimestamp","nameLocation":"4459:14:30","nodeType":"VariableDeclaration","scope":9274,"src":"4452:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9266,"name":"uint32","nodeType":"ElementaryTypeName","src":"4452:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9269,"mutability":"mutable","name":"message","nameLocation":"4496:7:30","nodeType":"VariableDeclaration","scope":9274,"src":"4483:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9268,"name":"bytes","nodeType":"ElementaryTypeName","src":"4483:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9271,"mutability":"mutable","name":"maxCount","nameLocation":"4521:8:30","nodeType":"VariableDeclaration","scope":9274,"src":"4513:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9270,"name":"uint256","nodeType":"ElementaryTypeName","src":"4513:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4270:265:30"},"returnParameters":{"id":9273,"nodeType":"ParameterList","parameters":[],"src":"4552:0:30"},"scope":9421,"src":"4251:302:30","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":9275,"nodeType":"StructuredDocumentation","src":"4559:53:30","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"functionSelector":"ae527fbb","id":9292,"implemented":false,"kind":"function","modifiers":[],"name":"depositNow","nameLocation":"4626:10:30","nodeType":"FunctionDefinition","parameters":{"id":9290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9277,"mutability":"mutable","name":"recipient","nameLocation":"4654:9:30","nodeType":"VariableDeclaration","scope":9292,"src":"4646:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9276,"name":"address","nodeType":"ElementaryTypeName","src":"4646:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9279,"mutability":"mutable","name":"originToken","nameLocation":"4681:11:30","nodeType":"VariableDeclaration","scope":9292,"src":"4673:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9278,"name":"address","nodeType":"ElementaryTypeName","src":"4673:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9281,"mutability":"mutable","name":"amount","nameLocation":"4710:6:30","nodeType":"VariableDeclaration","scope":9292,"src":"4702:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9280,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9283,"mutability":"mutable","name":"destinationChainId","nameLocation":"4734:18:30","nodeType":"VariableDeclaration","scope":9292,"src":"4726:26:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9282,"name":"uint256","nodeType":"ElementaryTypeName","src":"4726:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9285,"mutability":"mutable","name":"relayerFeePct","nameLocation":"4768:13:30","nodeType":"VariableDeclaration","scope":9292,"src":"4762:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":9284,"name":"int64","nodeType":"ElementaryTypeName","src":"4762:5:30","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":9287,"mutability":"mutable","name":"message","nameLocation":"4804:7:30","nodeType":"VariableDeclaration","scope":9292,"src":"4791:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9286,"name":"bytes","nodeType":"ElementaryTypeName","src":"4791:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9289,"mutability":"mutable","name":"maxCount","nameLocation":"4829:8:30","nodeType":"VariableDeclaration","scope":9292,"src":"4821:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9288,"name":"uint256","nodeType":"ElementaryTypeName","src":"4821:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4636:207:30"},"returnParameters":{"id":9291,"nodeType":"ParameterList","parameters":[],"src":"4860:0:30"},"scope":9421,"src":"4617:244:30","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":9293,"nodeType":"StructuredDocumentation","src":"4867:53:30","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"functionSelector":"7e688bba","id":9308,"implemented":false,"kind":"function","modifiers":[],"name":"speedUpDeposit","nameLocation":"4934:14:30","nodeType":"FunctionDefinition","parameters":{"id":9306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9295,"mutability":"mutable","name":"depositor","nameLocation":"4966:9:30","nodeType":"VariableDeclaration","scope":9308,"src":"4958:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9294,"name":"address","nodeType":"ElementaryTypeName","src":"4958:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9297,"mutability":"mutable","name":"updatedRelayerFeePct","nameLocation":"4991:20:30","nodeType":"VariableDeclaration","scope":9308,"src":"4985:26:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":9296,"name":"int64","nodeType":"ElementaryTypeName","src":"4985:5:30","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":9299,"mutability":"mutable","name":"depositId","nameLocation":"5028:9:30","nodeType":"VariableDeclaration","scope":9308,"src":"5021:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9298,"name":"uint32","nodeType":"ElementaryTypeName","src":"5021:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9301,"mutability":"mutable","name":"updatedRecipient","nameLocation":"5055:16:30","nodeType":"VariableDeclaration","scope":9308,"src":"5047:24:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9300,"name":"address","nodeType":"ElementaryTypeName","src":"5047:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9303,"mutability":"mutable","name":"updatedMessage","nameLocation":"5094:14:30","nodeType":"VariableDeclaration","scope":9308,"src":"5081:27:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9302,"name":"bytes","nodeType":"ElementaryTypeName","src":"5081:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9305,"mutability":"mutable","name":"depositorSignature","nameLocation":"5131:18:30","nodeType":"VariableDeclaration","scope":9308,"src":"5118:31:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9304,"name":"bytes","nodeType":"ElementaryTypeName","src":"5118:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4948:207:30"},"returnParameters":{"id":9307,"nodeType":"ParameterList","parameters":[],"src":"5164:0:30"},"scope":9421,"src":"4925:240:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":9309,"nodeType":"StructuredDocumentation","src":"5171:53:30","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"functionSelector":"44b8be68","id":9336,"implemented":false,"kind":"function","modifiers":[],"name":"fillRelay","nameLocation":"5238:9:30","nodeType":"FunctionDefinition","parameters":{"id":9334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9311,"mutability":"mutable","name":"depositor","nameLocation":"5265:9:30","nodeType":"VariableDeclaration","scope":9336,"src":"5257:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9310,"name":"address","nodeType":"ElementaryTypeName","src":"5257:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9313,"mutability":"mutable","name":"recipient","nameLocation":"5292:9:30","nodeType":"VariableDeclaration","scope":9336,"src":"5284:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9312,"name":"address","nodeType":"ElementaryTypeName","src":"5284:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9315,"mutability":"mutable","name":"destinationToken","nameLocation":"5319:16:30","nodeType":"VariableDeclaration","scope":9336,"src":"5311:24:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9314,"name":"address","nodeType":"ElementaryTypeName","src":"5311:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9317,"mutability":"mutable","name":"amount","nameLocation":"5353:6:30","nodeType":"VariableDeclaration","scope":9336,"src":"5345:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9316,"name":"uint256","nodeType":"ElementaryTypeName","src":"5345:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9319,"mutability":"mutable","name":"maxTokensToSend","nameLocation":"5377:15:30","nodeType":"VariableDeclaration","scope":9336,"src":"5369:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9318,"name":"uint256","nodeType":"ElementaryTypeName","src":"5369:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9321,"mutability":"mutable","name":"repaymentChainId","nameLocation":"5410:16:30","nodeType":"VariableDeclaration","scope":9336,"src":"5402:24:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9320,"name":"uint256","nodeType":"ElementaryTypeName","src":"5402:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9323,"mutability":"mutable","name":"originChainId","nameLocation":"5444:13:30","nodeType":"VariableDeclaration","scope":9336,"src":"5436:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9322,"name":"uint256","nodeType":"ElementaryTypeName","src":"5436:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9325,"mutability":"mutable","name":"realizedLpFeePct","nameLocation":"5473:16:30","nodeType":"VariableDeclaration","scope":9336,"src":"5467:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":9324,"name":"int64","nodeType":"ElementaryTypeName","src":"5467:5:30","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":9327,"mutability":"mutable","name":"relayerFeePct","nameLocation":"5505:13:30","nodeType":"VariableDeclaration","scope":9336,"src":"5499:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":9326,"name":"int64","nodeType":"ElementaryTypeName","src":"5499:5:30","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":9329,"mutability":"mutable","name":"depositId","nameLocation":"5535:9:30","nodeType":"VariableDeclaration","scope":9336,"src":"5528:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9328,"name":"uint32","nodeType":"ElementaryTypeName","src":"5528:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9331,"mutability":"mutable","name":"message","nameLocation":"5567:7:30","nodeType":"VariableDeclaration","scope":9336,"src":"5554:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9330,"name":"bytes","nodeType":"ElementaryTypeName","src":"5554:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9333,"mutability":"mutable","name":"maxCount","nameLocation":"5592:8:30","nodeType":"VariableDeclaration","scope":9336,"src":"5584:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9332,"name":"uint256","nodeType":"ElementaryTypeName","src":"5584:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5247:359:30"},"returnParameters":{"id":9335,"nodeType":"ParameterList","parameters":[],"src":"5615:0:30"},"scope":9421,"src":"5229:387:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":9337,"nodeType":"StructuredDocumentation","src":"5622:53:30","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"functionSelector":"5ceaec32","id":9372,"implemented":false,"kind":"function","modifiers":[],"name":"fillRelayWithUpdatedDeposit","nameLocation":"5689:27:30","nodeType":"FunctionDefinition","parameters":{"id":9370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9339,"mutability":"mutable","name":"depositor","nameLocation":"5734:9:30","nodeType":"VariableDeclaration","scope":9372,"src":"5726:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9338,"name":"address","nodeType":"ElementaryTypeName","src":"5726:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9341,"mutability":"mutable","name":"recipient","nameLocation":"5761:9:30","nodeType":"VariableDeclaration","scope":9372,"src":"5753:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9340,"name":"address","nodeType":"ElementaryTypeName","src":"5753:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9343,"mutability":"mutable","name":"updatedRecipient","nameLocation":"5788:16:30","nodeType":"VariableDeclaration","scope":9372,"src":"5780:24:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9342,"name":"address","nodeType":"ElementaryTypeName","src":"5780:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9345,"mutability":"mutable","name":"destinationToken","nameLocation":"5822:16:30","nodeType":"VariableDeclaration","scope":9372,"src":"5814:24:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9344,"name":"address","nodeType":"ElementaryTypeName","src":"5814:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9347,"mutability":"mutable","name":"amount","nameLocation":"5856:6:30","nodeType":"VariableDeclaration","scope":9372,"src":"5848:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9346,"name":"uint256","nodeType":"ElementaryTypeName","src":"5848:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9349,"mutability":"mutable","name":"maxTokensToSend","nameLocation":"5880:15:30","nodeType":"VariableDeclaration","scope":9372,"src":"5872:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9348,"name":"uint256","nodeType":"ElementaryTypeName","src":"5872:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9351,"mutability":"mutable","name":"repaymentChainId","nameLocation":"5913:16:30","nodeType":"VariableDeclaration","scope":9372,"src":"5905:24:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9350,"name":"uint256","nodeType":"ElementaryTypeName","src":"5905:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9353,"mutability":"mutable","name":"originChainId","nameLocation":"5947:13:30","nodeType":"VariableDeclaration","scope":9372,"src":"5939:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9352,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9355,"mutability":"mutable","name":"realizedLpFeePct","nameLocation":"5976:16:30","nodeType":"VariableDeclaration","scope":9372,"src":"5970:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":9354,"name":"int64","nodeType":"ElementaryTypeName","src":"5970:5:30","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":9357,"mutability":"mutable","name":"relayerFeePct","nameLocation":"6008:13:30","nodeType":"VariableDeclaration","scope":9372,"src":"6002:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":9356,"name":"int64","nodeType":"ElementaryTypeName","src":"6002:5:30","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":9359,"mutability":"mutable","name":"updatedRelayerFeePct","nameLocation":"6037:20:30","nodeType":"VariableDeclaration","scope":9372,"src":"6031:26:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":9358,"name":"int64","nodeType":"ElementaryTypeName","src":"6031:5:30","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":9361,"mutability":"mutable","name":"depositId","nameLocation":"6074:9:30","nodeType":"VariableDeclaration","scope":9372,"src":"6067:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9360,"name":"uint32","nodeType":"ElementaryTypeName","src":"6067:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9363,"mutability":"mutable","name":"message","nameLocation":"6106:7:30","nodeType":"VariableDeclaration","scope":9372,"src":"6093:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9362,"name":"bytes","nodeType":"ElementaryTypeName","src":"6093:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9365,"mutability":"mutable","name":"updatedMessage","nameLocation":"6136:14:30","nodeType":"VariableDeclaration","scope":9372,"src":"6123:27:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9364,"name":"bytes","nodeType":"ElementaryTypeName","src":"6123:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9367,"mutability":"mutable","name":"depositorSignature","nameLocation":"6173:18:30","nodeType":"VariableDeclaration","scope":9372,"src":"6160:31:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9366,"name":"bytes","nodeType":"ElementaryTypeName","src":"6160:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9369,"mutability":"mutable","name":"maxCount","nameLocation":"6209:8:30","nodeType":"VariableDeclaration","scope":9372,"src":"6201:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9368,"name":"uint256","nodeType":"ElementaryTypeName","src":"6201:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5716:507:30"},"returnParameters":{"id":9371,"nodeType":"ParameterList","parameters":[],"src":"6232:0:30"},"scope":9421,"src":"5680:553:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":9373,"nodeType":"StructuredDocumentation","src":"6239:53:30","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"functionSelector":"0c2097f7","id":9401,"implemented":false,"kind":"function","modifiers":[],"name":"executeSlowRelayLeaf","nameLocation":"6306:20:30","nodeType":"FunctionDefinition","parameters":{"id":9399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9375,"mutability":"mutable","name":"depositor","nameLocation":"6344:9:30","nodeType":"VariableDeclaration","scope":9401,"src":"6336:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9374,"name":"address","nodeType":"ElementaryTypeName","src":"6336:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9377,"mutability":"mutable","name":"recipient","nameLocation":"6371:9:30","nodeType":"VariableDeclaration","scope":9401,"src":"6363:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9376,"name":"address","nodeType":"ElementaryTypeName","src":"6363:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9379,"mutability":"mutable","name":"destinationToken","nameLocation":"6398:16:30","nodeType":"VariableDeclaration","scope":9401,"src":"6390:24:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9378,"name":"address","nodeType":"ElementaryTypeName","src":"6390:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9381,"mutability":"mutable","name":"amount","nameLocation":"6432:6:30","nodeType":"VariableDeclaration","scope":9401,"src":"6424:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9380,"name":"uint256","nodeType":"ElementaryTypeName","src":"6424:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9383,"mutability":"mutable","name":"originChainId","nameLocation":"6456:13:30","nodeType":"VariableDeclaration","scope":9401,"src":"6448:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9382,"name":"uint256","nodeType":"ElementaryTypeName","src":"6448:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9385,"mutability":"mutable","name":"realizedLpFeePct","nameLocation":"6485:16:30","nodeType":"VariableDeclaration","scope":9401,"src":"6479:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":9384,"name":"int64","nodeType":"ElementaryTypeName","src":"6479:5:30","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":9387,"mutability":"mutable","name":"relayerFeePct","nameLocation":"6517:13:30","nodeType":"VariableDeclaration","scope":9401,"src":"6511:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":9386,"name":"int64","nodeType":"ElementaryTypeName","src":"6511:5:30","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":9389,"mutability":"mutable","name":"depositId","nameLocation":"6547:9:30","nodeType":"VariableDeclaration","scope":9401,"src":"6540:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9388,"name":"uint32","nodeType":"ElementaryTypeName","src":"6540:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9391,"mutability":"mutable","name":"rootBundleId","nameLocation":"6573:12:30","nodeType":"VariableDeclaration","scope":9401,"src":"6566:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9390,"name":"uint32","nodeType":"ElementaryTypeName","src":"6566:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9393,"mutability":"mutable","name":"message","nameLocation":"6608:7:30","nodeType":"VariableDeclaration","scope":9401,"src":"6595:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9392,"name":"bytes","nodeType":"ElementaryTypeName","src":"6595:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9395,"mutability":"mutable","name":"payoutAdjustment","nameLocation":"6632:16:30","nodeType":"VariableDeclaration","scope":9401,"src":"6625:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9394,"name":"int256","nodeType":"ElementaryTypeName","src":"6625:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9398,"mutability":"mutable","name":"proof","nameLocation":"6675:5:30","nodeType":"VariableDeclaration","scope":9401,"src":"6658:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9396,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6658:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9397,"nodeType":"ArrayTypeName","src":"6658:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6326:360:30"},"returnParameters":{"id":9400,"nodeType":"ParameterList","parameters":[],"src":"6695:0:30"},"scope":9421,"src":"6297:399:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":9402,"nodeType":"StructuredDocumentation","src":"6702:53:30","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"functionSelector":"1b3d5559","id":9413,"implemented":false,"kind":"function","modifiers":[],"name":"executeRelayerRefundLeaf","nameLocation":"6769:24:30","nodeType":"FunctionDefinition","parameters":{"id":9411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9404,"mutability":"mutable","name":"rootBundleId","nameLocation":"6810:12:30","nodeType":"VariableDeclaration","scope":9413,"src":"6803:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9403,"name":"uint32","nodeType":"ElementaryTypeName","src":"6803:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9407,"mutability":"mutable","name":"relayerRefundLeaf","nameLocation":"6876:17:30","nodeType":"VariableDeclaration","scope":9413,"src":"6832:61:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$9154_memory_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf"},"typeName":{"id":9406,"nodeType":"UserDefinedTypeName","pathNode":{"id":9405,"name":"SpokePoolInterface.RelayerRefundLeaf","nameLocations":["6832:18:30","6851:17:30"],"nodeType":"IdentifierPath","referencedDeclaration":9154,"src":"6832:36:30"},"referencedDeclaration":9154,"src":"6832:36:30","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$9154_storage_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf"}},"visibility":"internal"},{"constant":false,"id":9410,"mutability":"mutable","name":"proof","nameLocation":"6920:5:30","nodeType":"VariableDeclaration","scope":9413,"src":"6903:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9408,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6903:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9409,"nodeType":"ArrayTypeName","src":"6903:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6793:138:30"},"returnParameters":{"id":9412,"nodeType":"ParameterList","parameters":[],"src":"6948:0:30"},"scope":9421,"src":"6760:189:30","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"9a8a0592","id":9418,"implemented":false,"kind":"function","modifiers":[],"name":"chainId","nameLocation":"6964:7:30","nodeType":"FunctionDefinition","parameters":{"id":9414,"nodeType":"ParameterList","parameters":[],"src":"6971:2:30"},"returnParameters":{"id":9417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9418,"src":"6997:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9415,"name":"uint256","nodeType":"ElementaryTypeName","src":"6997:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6996:9:30"},"scope":9421,"src":"6955:51:30","stateMutability":"view","virtual":false,"visibility":"external"},{"errorSelector":"ba092d16","id":9420,"name":"NotEOA","nameLocation":"7018:6:30","nodeType":"ErrorDefinition","parameters":{"id":9419,"nodeType":"ParameterList","parameters":[],"src":"7024:2:30"},"src":"7012:15:30"}],"scope":9422,"src":"166:6863:30","usedErrors":[9420],"usedEvents":[]}],"src":"37:6993:30"},"id":30},"contracts/interfaces/V3SpokePoolInterface.sol":{"ast":{"absolutePath":"contracts/interfaces/V3SpokePoolInterface.sol","exportedSymbols":{"V3SpokePoolInterface":[9705]},"id":9706,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":9423,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:31"},{"abstract":false,"baseContracts":[],"canonicalName":"V3SpokePoolInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":9705,"linearizedBaseContracts":[9705],"name":"V3SpokePoolInterface","nameLocation":"170:20:31","nodeType":"ContractDefinition","nodes":[{"canonicalName":"V3SpokePoolInterface.FillStatus","id":9427,"members":[{"id":9424,"name":"Unfilled","nameLocation":"444:8:31","nodeType":"EnumValue","src":"444:8:31"},{"id":9425,"name":"RequestedSlowFill","nameLocation":"462:17:31","nodeType":"EnumValue","src":"462:17:31"},{"id":9426,"name":"Filled","nameLocation":"489:6:31","nodeType":"EnumValue","src":"489:6:31"}],"name":"FillStatus","nameLocation":"423:10:31","nodeType":"EnumDefinition","src":"418:83:31"},{"canonicalName":"V3SpokePoolInterface.FillType","id":9431,"members":[{"id":9428,"name":"FastFill","nameLocation":"733:8:31","nodeType":"EnumValue","src":"733:8:31"},{"id":9429,"name":"ReplacedSlowFill","nameLocation":"831:16:31","nodeType":"EnumValue","src":"831:16:31"},{"id":9430,"name":"SlowFill","nameLocation":"1125:8:31","nodeType":"EnumValue","src":"1125:8:31"}],"name":"FillType","nameLocation":"714:8:31","nodeType":"EnumDefinition","src":"709:588:31"},{"canonicalName":"V3SpokePoolInterface.V3RelayData","id":9456,"members":[{"constant":false,"id":9433,"mutability":"mutable","name":"depositor","nameLocation":"1889:9:31","nodeType":"VariableDeclaration","scope":9456,"src":"1881:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9432,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9435,"mutability":"mutable","name":"recipient","nameLocation":"1975:9:31","nodeType":"VariableDeclaration","scope":9456,"src":"1967:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9434,"name":"address","nodeType":"ElementaryTypeName","src":"1967:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9437,"mutability":"mutable","name":"exclusiveRelayer","nameLocation":"2101:16:31","nodeType":"VariableDeclaration","scope":9456,"src":"2093:24:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9436,"name":"address","nodeType":"ElementaryTypeName","src":"2093:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9439,"mutability":"mutable","name":"inputToken","nameLocation":"2200:10:31","nodeType":"VariableDeclaration","scope":9456,"src":"2192:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9438,"name":"address","nodeType":"ElementaryTypeName","src":"2192:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9441,"mutability":"mutable","name":"outputToken","nameLocation":"2297:11:31","nodeType":"VariableDeclaration","scope":9456,"src":"2289:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9440,"name":"address","nodeType":"ElementaryTypeName","src":"2289:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9443,"mutability":"mutable","name":"inputAmount","nameLocation":"2387:11:31","nodeType":"VariableDeclaration","scope":9456,"src":"2379:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9442,"name":"uint256","nodeType":"ElementaryTypeName","src":"2379:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9445,"mutability":"mutable","name":"outputAmount","nameLocation":"2483:12:31","nodeType":"VariableDeclaration","scope":9456,"src":"2475:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9444,"name":"uint256","nodeType":"ElementaryTypeName","src":"2475:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9447,"mutability":"mutable","name":"originChainId","nameLocation":"2541:13:31","nodeType":"VariableDeclaration","scope":9456,"src":"2533:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9446,"name":"uint256","nodeType":"ElementaryTypeName","src":"2533:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9449,"mutability":"mutable","name":"depositId","nameLocation":"2644:9:31","nodeType":"VariableDeclaration","scope":9456,"src":"2637:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9448,"name":"uint32","nodeType":"ElementaryTypeName","src":"2637:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9451,"mutability":"mutable","name":"fillDeadline","nameLocation":"2770:12:31","nodeType":"VariableDeclaration","scope":9456,"src":"2763:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9450,"name":"uint32","nodeType":"ElementaryTypeName","src":"2763:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9453,"mutability":"mutable","name":"exclusivityDeadline","nameLocation":"2895:19:31","nodeType":"VariableDeclaration","scope":9456,"src":"2888:26:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9452,"name":"uint32","nodeType":"ElementaryTypeName","src":"2888:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9455,"mutability":"mutable","name":"message","nameLocation":"2982:7:31","nodeType":"VariableDeclaration","scope":9456,"src":"2976:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":9454,"name":"bytes","nodeType":"ElementaryTypeName","src":"2976:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"V3RelayData","nameLocation":"1793:11:31","nodeType":"StructDefinition","scope":9705,"src":"1786:1210:31","visibility":"public"},{"canonicalName":"V3SpokePoolInterface.V3SlowFill","id":9464,"members":[{"constant":false,"id":9459,"mutability":"mutable","name":"relayData","nameLocation":"3130:9:31","nodeType":"VariableDeclaration","scope":9464,"src":"3118:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_storage_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"},"typeName":{"id":9458,"nodeType":"UserDefinedTypeName","pathNode":{"id":9457,"name":"V3RelayData","nameLocations":["3118:11:31"],"nodeType":"IdentifierPath","referencedDeclaration":9456,"src":"3118:11:31"},"referencedDeclaration":9456,"src":"3118:11:31","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_storage_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"}},"visibility":"internal"},{"constant":false,"id":9461,"mutability":"mutable","name":"chainId","nameLocation":"3157:7:31","nodeType":"VariableDeclaration","scope":9464,"src":"3149:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9460,"name":"uint256","nodeType":"ElementaryTypeName","src":"3149:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9463,"mutability":"mutable","name":"updatedOutputAmount","nameLocation":"3182:19:31","nodeType":"VariableDeclaration","scope":9464,"src":"3174:27:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9462,"name":"uint256","nodeType":"ElementaryTypeName","src":"3174:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"V3SlowFill","nameLocation":"3097:10:31","nodeType":"StructDefinition","scope":9705,"src":"3090:118:31","visibility":"public"},{"canonicalName":"V3SpokePoolInterface.V3RelayExecutionParams","id":9478,"members":[{"constant":false,"id":9467,"mutability":"mutable","name":"relay","nameLocation":"3728:5:31","nodeType":"VariableDeclaration","scope":9478,"src":"3716:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_storage_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"},"typeName":{"id":9466,"nodeType":"UserDefinedTypeName","pathNode":{"id":9465,"name":"V3RelayData","nameLocations":["3716:11:31"],"nodeType":"IdentifierPath","referencedDeclaration":9456,"src":"3716:11:31"},"referencedDeclaration":9456,"src":"3716:11:31","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_storage_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"}},"visibility":"internal"},{"constant":false,"id":9469,"mutability":"mutable","name":"relayHash","nameLocation":"3751:9:31","nodeType":"VariableDeclaration","scope":9478,"src":"3743:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9468,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3743:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9471,"mutability":"mutable","name":"updatedOutputAmount","nameLocation":"3778:19:31","nodeType":"VariableDeclaration","scope":9478,"src":"3770:27:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9470,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9473,"mutability":"mutable","name":"updatedRecipient","nameLocation":"3815:16:31","nodeType":"VariableDeclaration","scope":9478,"src":"3807:24:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9472,"name":"address","nodeType":"ElementaryTypeName","src":"3807:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9475,"mutability":"mutable","name":"updatedMessage","nameLocation":"3847:14:31","nodeType":"VariableDeclaration","scope":9478,"src":"3841:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":9474,"name":"bytes","nodeType":"ElementaryTypeName","src":"3841:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9477,"mutability":"mutable","name":"repaymentChainId","nameLocation":"3879:16:31","nodeType":"VariableDeclaration","scope":9478,"src":"3871:24:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9476,"name":"uint256","nodeType":"ElementaryTypeName","src":"3871:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"V3RelayExecutionParams","nameLocation":"3683:22:31","nodeType":"StructDefinition","scope":9705,"src":"3676:226:31","visibility":"public"},{"canonicalName":"V3SpokePoolInterface.V3RelayExecutionEventInfo","id":9488,"members":[{"constant":false,"id":9480,"mutability":"mutable","name":"updatedRecipient","nameLocation":"4238:16:31","nodeType":"VariableDeclaration","scope":9488,"src":"4230:24:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9479,"name":"address","nodeType":"ElementaryTypeName","src":"4230:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9482,"mutability":"mutable","name":"updatedMessage","nameLocation":"4270:14:31","nodeType":"VariableDeclaration","scope":9488,"src":"4264:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":9481,"name":"bytes","nodeType":"ElementaryTypeName","src":"4264:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9484,"mutability":"mutable","name":"updatedOutputAmount","nameLocation":"4302:19:31","nodeType":"VariableDeclaration","scope":9488,"src":"4294:27:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9483,"name":"uint256","nodeType":"ElementaryTypeName","src":"4294:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9487,"mutability":"mutable","name":"fillType","nameLocation":"4340:8:31","nodeType":"VariableDeclaration","scope":9488,"src":"4331:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_FillType_$9431","typeString":"enum V3SpokePoolInterface.FillType"},"typeName":{"id":9486,"nodeType":"UserDefinedTypeName","pathNode":{"id":9485,"name":"FillType","nameLocations":["4331:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":9431,"src":"4331:8:31"},"referencedDeclaration":9431,"src":"4331:8:31","typeDescriptions":{"typeIdentifier":"t_enum$_FillType_$9431","typeString":"enum V3SpokePoolInterface.FillType"}},"visibility":"internal"}],"name":"V3RelayExecutionEventInfo","nameLocation":"4194:25:31","nodeType":"StructDefinition","scope":9705,"src":"4187:168:31","visibility":"public"},{"anonymous":false,"eventSelector":"a123dc29aebf7d0c3322c8eeb5b999e859f39937950ed31056532713d0de396f","id":9516,"name":"V3FundsDeposited","nameLocation":"4501:16:31","nodeType":"EventDefinition","parameters":{"id":9515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9490,"indexed":false,"mutability":"mutable","name":"inputToken","nameLocation":"4535:10:31","nodeType":"VariableDeclaration","scope":9516,"src":"4527:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9489,"name":"address","nodeType":"ElementaryTypeName","src":"4527:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9492,"indexed":false,"mutability":"mutable","name":"outputToken","nameLocation":"4563:11:31","nodeType":"VariableDeclaration","scope":9516,"src":"4555:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9491,"name":"address","nodeType":"ElementaryTypeName","src":"4555:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9494,"indexed":false,"mutability":"mutable","name":"inputAmount","nameLocation":"4592:11:31","nodeType":"VariableDeclaration","scope":9516,"src":"4584:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9493,"name":"uint256","nodeType":"ElementaryTypeName","src":"4584:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9496,"indexed":false,"mutability":"mutable","name":"outputAmount","nameLocation":"4621:12:31","nodeType":"VariableDeclaration","scope":9516,"src":"4613:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9495,"name":"uint256","nodeType":"ElementaryTypeName","src":"4613:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9498,"indexed":true,"mutability":"mutable","name":"destinationChainId","nameLocation":"4659:18:31","nodeType":"VariableDeclaration","scope":9516,"src":"4643:34:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9497,"name":"uint256","nodeType":"ElementaryTypeName","src":"4643:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9500,"indexed":true,"mutability":"mutable","name":"depositId","nameLocation":"4702:9:31","nodeType":"VariableDeclaration","scope":9516,"src":"4687:24:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9499,"name":"uint32","nodeType":"ElementaryTypeName","src":"4687:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9502,"indexed":false,"mutability":"mutable","name":"quoteTimestamp","nameLocation":"4728:14:31","nodeType":"VariableDeclaration","scope":9516,"src":"4721:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9501,"name":"uint32","nodeType":"ElementaryTypeName","src":"4721:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9504,"indexed":false,"mutability":"mutable","name":"fillDeadline","nameLocation":"4759:12:31","nodeType":"VariableDeclaration","scope":9516,"src":"4752:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9503,"name":"uint32","nodeType":"ElementaryTypeName","src":"4752:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9506,"indexed":false,"mutability":"mutable","name":"exclusivityDeadline","nameLocation":"4788:19:31","nodeType":"VariableDeclaration","scope":9516,"src":"4781:26:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9505,"name":"uint32","nodeType":"ElementaryTypeName","src":"4781:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9508,"indexed":true,"mutability":"mutable","name":"depositor","nameLocation":"4833:9:31","nodeType":"VariableDeclaration","scope":9516,"src":"4817:25:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9507,"name":"address","nodeType":"ElementaryTypeName","src":"4817:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9510,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"4860:9:31","nodeType":"VariableDeclaration","scope":9516,"src":"4852:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9509,"name":"address","nodeType":"ElementaryTypeName","src":"4852:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9512,"indexed":false,"mutability":"mutable","name":"exclusiveRelayer","nameLocation":"4887:16:31","nodeType":"VariableDeclaration","scope":9516,"src":"4879:24:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9511,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9514,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"4919:7:31","nodeType":"VariableDeclaration","scope":9516,"src":"4913:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9513,"name":"bytes","nodeType":"ElementaryTypeName","src":"4913:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4517:415:31"},"src":"4495:438:31"},{"anonymous":false,"eventSelector":"b0a29aed3d389a1041194255878b423f7780be3ed2324d4693508c6ff189845e","id":9530,"name":"RequestedSpeedUpV3Deposit","nameLocation":"4945:25:31","nodeType":"EventDefinition","parameters":{"id":9529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9518,"indexed":false,"mutability":"mutable","name":"updatedOutputAmount","nameLocation":"4988:19:31","nodeType":"VariableDeclaration","scope":9530,"src":"4980:27:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9517,"name":"uint256","nodeType":"ElementaryTypeName","src":"4980:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9520,"indexed":true,"mutability":"mutable","name":"depositId","nameLocation":"5032:9:31","nodeType":"VariableDeclaration","scope":9530,"src":"5017:24:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9519,"name":"uint32","nodeType":"ElementaryTypeName","src":"5017:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9522,"indexed":true,"mutability":"mutable","name":"depositor","nameLocation":"5067:9:31","nodeType":"VariableDeclaration","scope":9530,"src":"5051:25:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9521,"name":"address","nodeType":"ElementaryTypeName","src":"5051:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9524,"indexed":false,"mutability":"mutable","name":"updatedRecipient","nameLocation":"5094:16:31","nodeType":"VariableDeclaration","scope":9530,"src":"5086:24:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9523,"name":"address","nodeType":"ElementaryTypeName","src":"5086:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9526,"indexed":false,"mutability":"mutable","name":"updatedMessage","nameLocation":"5126:14:31","nodeType":"VariableDeclaration","scope":9530,"src":"5120:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9525,"name":"bytes","nodeType":"ElementaryTypeName","src":"5120:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9528,"indexed":false,"mutability":"mutable","name":"depositorSignature","nameLocation":"5156:18:31","nodeType":"VariableDeclaration","scope":9530,"src":"5150:24:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9527,"name":"bytes","nodeType":"ElementaryTypeName","src":"5150:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4970:210:31"},"src":"4939:242:31"},{"anonymous":false,"eventSelector":"571749edf1d5c9599318cdbc4e28a6475d65e87fd3b2ddbe1e9a8d5e7a0f0ff7","id":9563,"name":"FilledV3Relay","nameLocation":"5193:13:31","nodeType":"EventDefinition","parameters":{"id":9562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9532,"indexed":false,"mutability":"mutable","name":"inputToken","nameLocation":"5224:10:31","nodeType":"VariableDeclaration","scope":9563,"src":"5216:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9531,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9534,"indexed":false,"mutability":"mutable","name":"outputToken","nameLocation":"5252:11:31","nodeType":"VariableDeclaration","scope":9563,"src":"5244:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9533,"name":"address","nodeType":"ElementaryTypeName","src":"5244:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9536,"indexed":false,"mutability":"mutable","name":"inputAmount","nameLocation":"5281:11:31","nodeType":"VariableDeclaration","scope":9563,"src":"5273:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9535,"name":"uint256","nodeType":"ElementaryTypeName","src":"5273:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9538,"indexed":false,"mutability":"mutable","name":"outputAmount","nameLocation":"5310:12:31","nodeType":"VariableDeclaration","scope":9563,"src":"5302:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9537,"name":"uint256","nodeType":"ElementaryTypeName","src":"5302:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9540,"indexed":false,"mutability":"mutable","name":"repaymentChainId","nameLocation":"5340:16:31","nodeType":"VariableDeclaration","scope":9563,"src":"5332:24:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9539,"name":"uint256","nodeType":"ElementaryTypeName","src":"5332:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9542,"indexed":true,"mutability":"mutable","name":"originChainId","nameLocation":"5382:13:31","nodeType":"VariableDeclaration","scope":9563,"src":"5366:29:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9541,"name":"uint256","nodeType":"ElementaryTypeName","src":"5366:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9544,"indexed":true,"mutability":"mutable","name":"depositId","nameLocation":"5420:9:31","nodeType":"VariableDeclaration","scope":9563,"src":"5405:24:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9543,"name":"uint32","nodeType":"ElementaryTypeName","src":"5405:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9546,"indexed":false,"mutability":"mutable","name":"fillDeadline","nameLocation":"5446:12:31","nodeType":"VariableDeclaration","scope":9563,"src":"5439:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9545,"name":"uint32","nodeType":"ElementaryTypeName","src":"5439:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9548,"indexed":false,"mutability":"mutable","name":"exclusivityDeadline","nameLocation":"5475:19:31","nodeType":"VariableDeclaration","scope":9563,"src":"5468:26:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9547,"name":"uint32","nodeType":"ElementaryTypeName","src":"5468:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9550,"indexed":false,"mutability":"mutable","name":"exclusiveRelayer","nameLocation":"5512:16:31","nodeType":"VariableDeclaration","scope":9563,"src":"5504:24:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9549,"name":"address","nodeType":"ElementaryTypeName","src":"5504:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9552,"indexed":true,"mutability":"mutable","name":"relayer","nameLocation":"5554:7:31","nodeType":"VariableDeclaration","scope":9563,"src":"5538:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9551,"name":"address","nodeType":"ElementaryTypeName","src":"5538:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9554,"indexed":false,"mutability":"mutable","name":"depositor","nameLocation":"5579:9:31","nodeType":"VariableDeclaration","scope":9563,"src":"5571:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9553,"name":"address","nodeType":"ElementaryTypeName","src":"5571:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9556,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"5606:9:31","nodeType":"VariableDeclaration","scope":9563,"src":"5598:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9555,"name":"address","nodeType":"ElementaryTypeName","src":"5598:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9558,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"5631:7:31","nodeType":"VariableDeclaration","scope":9563,"src":"5625:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9557,"name":"bytes","nodeType":"ElementaryTypeName","src":"5625:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9561,"indexed":false,"mutability":"mutable","name":"relayExecutionInfo","nameLocation":"5674:18:31","nodeType":"VariableDeclaration","scope":9563,"src":"5648:44:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionEventInfo_$9488_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionEventInfo"},"typeName":{"id":9560,"nodeType":"UserDefinedTypeName","pathNode":{"id":9559,"name":"V3RelayExecutionEventInfo","nameLocations":["5648:25:31"],"nodeType":"IdentifierPath","referencedDeclaration":9488,"src":"5648:25:31"},"referencedDeclaration":9488,"src":"5648:25:31","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionEventInfo_$9488_storage_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionEventInfo"}},"visibility":"internal"}],"src":"5206:492:31"},"src":"5187:512:31"},{"anonymous":false,"eventSelector":"923794976d026d6b119735adc163cb71decfc903e17c3dc226c00789593c04e1","id":9589,"name":"RequestedV3SlowFill","nameLocation":"5711:19:31","nodeType":"EventDefinition","parameters":{"id":9588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9565,"indexed":false,"mutability":"mutable","name":"inputToken","nameLocation":"5748:10:31","nodeType":"VariableDeclaration","scope":9589,"src":"5740:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9564,"name":"address","nodeType":"ElementaryTypeName","src":"5740:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9567,"indexed":false,"mutability":"mutable","name":"outputToken","nameLocation":"5776:11:31","nodeType":"VariableDeclaration","scope":9589,"src":"5768:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9566,"name":"address","nodeType":"ElementaryTypeName","src":"5768:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9569,"indexed":false,"mutability":"mutable","name":"inputAmount","nameLocation":"5805:11:31","nodeType":"VariableDeclaration","scope":9589,"src":"5797:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9568,"name":"uint256","nodeType":"ElementaryTypeName","src":"5797:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9571,"indexed":false,"mutability":"mutable","name":"outputAmount","nameLocation":"5834:12:31","nodeType":"VariableDeclaration","scope":9589,"src":"5826:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9570,"name":"uint256","nodeType":"ElementaryTypeName","src":"5826:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9573,"indexed":true,"mutability":"mutable","name":"originChainId","nameLocation":"5872:13:31","nodeType":"VariableDeclaration","scope":9589,"src":"5856:29:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9572,"name":"uint256","nodeType":"ElementaryTypeName","src":"5856:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9575,"indexed":true,"mutability":"mutable","name":"depositId","nameLocation":"5910:9:31","nodeType":"VariableDeclaration","scope":9589,"src":"5895:24:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9574,"name":"uint32","nodeType":"ElementaryTypeName","src":"5895:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9577,"indexed":false,"mutability":"mutable","name":"fillDeadline","nameLocation":"5936:12:31","nodeType":"VariableDeclaration","scope":9589,"src":"5929:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9576,"name":"uint32","nodeType":"ElementaryTypeName","src":"5929:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9579,"indexed":false,"mutability":"mutable","name":"exclusivityDeadline","nameLocation":"5965:19:31","nodeType":"VariableDeclaration","scope":9589,"src":"5958:26:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9578,"name":"uint32","nodeType":"ElementaryTypeName","src":"5958:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9581,"indexed":false,"mutability":"mutable","name":"exclusiveRelayer","nameLocation":"6002:16:31","nodeType":"VariableDeclaration","scope":9589,"src":"5994:24:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9580,"name":"address","nodeType":"ElementaryTypeName","src":"5994:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9583,"indexed":false,"mutability":"mutable","name":"depositor","nameLocation":"6036:9:31","nodeType":"VariableDeclaration","scope":9589,"src":"6028:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9582,"name":"address","nodeType":"ElementaryTypeName","src":"6028:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9585,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"6063:9:31","nodeType":"VariableDeclaration","scope":9589,"src":"6055:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9584,"name":"address","nodeType":"ElementaryTypeName","src":"6055:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9587,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"6088:7:31","nodeType":"VariableDeclaration","scope":9589,"src":"6082:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9586,"name":"bytes","nodeType":"ElementaryTypeName","src":"6082:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5730:371:31"},"src":"5705:397:31"},{"functionSelector":"7b939232","id":9616,"implemented":false,"kind":"function","modifiers":[],"name":"depositV3","nameLocation":"6251:9:31","nodeType":"FunctionDefinition","parameters":{"id":9614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9591,"mutability":"mutable","name":"depositor","nameLocation":"6278:9:31","nodeType":"VariableDeclaration","scope":9616,"src":"6270:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9590,"name":"address","nodeType":"ElementaryTypeName","src":"6270:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9593,"mutability":"mutable","name":"recipient","nameLocation":"6305:9:31","nodeType":"VariableDeclaration","scope":9616,"src":"6297:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9592,"name":"address","nodeType":"ElementaryTypeName","src":"6297:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9595,"mutability":"mutable","name":"inputToken","nameLocation":"6332:10:31","nodeType":"VariableDeclaration","scope":9616,"src":"6324:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9594,"name":"address","nodeType":"ElementaryTypeName","src":"6324:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9597,"mutability":"mutable","name":"outputToken","nameLocation":"6360:11:31","nodeType":"VariableDeclaration","scope":9616,"src":"6352:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9596,"name":"address","nodeType":"ElementaryTypeName","src":"6352:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9599,"mutability":"mutable","name":"inputAmount","nameLocation":"6389:11:31","nodeType":"VariableDeclaration","scope":9616,"src":"6381:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9598,"name":"uint256","nodeType":"ElementaryTypeName","src":"6381:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9601,"mutability":"mutable","name":"outputAmount","nameLocation":"6418:12:31","nodeType":"VariableDeclaration","scope":9616,"src":"6410:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9600,"name":"uint256","nodeType":"ElementaryTypeName","src":"6410:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9603,"mutability":"mutable","name":"destinationChainId","nameLocation":"6448:18:31","nodeType":"VariableDeclaration","scope":9616,"src":"6440:26:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9602,"name":"uint256","nodeType":"ElementaryTypeName","src":"6440:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9605,"mutability":"mutable","name":"exclusiveRelayer","nameLocation":"6484:16:31","nodeType":"VariableDeclaration","scope":9616,"src":"6476:24:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9604,"name":"address","nodeType":"ElementaryTypeName","src":"6476:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9607,"mutability":"mutable","name":"quoteTimestamp","nameLocation":"6517:14:31","nodeType":"VariableDeclaration","scope":9616,"src":"6510:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9606,"name":"uint32","nodeType":"ElementaryTypeName","src":"6510:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9609,"mutability":"mutable","name":"fillDeadline","nameLocation":"6548:12:31","nodeType":"VariableDeclaration","scope":9616,"src":"6541:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9608,"name":"uint32","nodeType":"ElementaryTypeName","src":"6541:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9611,"mutability":"mutable","name":"exclusivityDeadline","nameLocation":"6577:19:31","nodeType":"VariableDeclaration","scope":9616,"src":"6570:26:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9610,"name":"uint32","nodeType":"ElementaryTypeName","src":"6570:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9613,"mutability":"mutable","name":"message","nameLocation":"6621:7:31","nodeType":"VariableDeclaration","scope":9616,"src":"6606:22:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9612,"name":"bytes","nodeType":"ElementaryTypeName","src":"6606:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6260:374:31"},"returnParameters":{"id":9615,"nodeType":"ParameterList","parameters":[],"src":"6651:0:31"},"scope":9705,"src":"6242:410:31","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"4e0fb8f5","id":9631,"implemented":false,"kind":"function","modifiers":[],"name":"speedUpV3Deposit","nameLocation":"6667:16:31","nodeType":"FunctionDefinition","parameters":{"id":9629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9618,"mutability":"mutable","name":"depositor","nameLocation":"6701:9:31","nodeType":"VariableDeclaration","scope":9631,"src":"6693:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9617,"name":"address","nodeType":"ElementaryTypeName","src":"6693:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9620,"mutability":"mutable","name":"depositId","nameLocation":"6727:9:31","nodeType":"VariableDeclaration","scope":9631,"src":"6720:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9619,"name":"uint32","nodeType":"ElementaryTypeName","src":"6720:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9622,"mutability":"mutable","name":"updatedOutputAmount","nameLocation":"6754:19:31","nodeType":"VariableDeclaration","scope":9631,"src":"6746:27:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9621,"name":"uint256","nodeType":"ElementaryTypeName","src":"6746:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9624,"mutability":"mutable","name":"updatedRecipient","nameLocation":"6791:16:31","nodeType":"VariableDeclaration","scope":9631,"src":"6783:24:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9623,"name":"address","nodeType":"ElementaryTypeName","src":"6783:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9626,"mutability":"mutable","name":"updatedMessage","nameLocation":"6832:14:31","nodeType":"VariableDeclaration","scope":9631,"src":"6817:29:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9625,"name":"bytes","nodeType":"ElementaryTypeName","src":"6817:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9628,"mutability":"mutable","name":"depositorSignature","nameLocation":"6871:18:31","nodeType":"VariableDeclaration","scope":9631,"src":"6856:33:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9627,"name":"bytes","nodeType":"ElementaryTypeName","src":"6856:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6683:212:31"},"returnParameters":{"id":9630,"nodeType":"ParameterList","parameters":[],"src":"6904:0:31"},"scope":9705,"src":"6658:247:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2e378115","id":9639,"implemented":false,"kind":"function","modifiers":[],"name":"fillV3Relay","nameLocation":"6920:11:31","nodeType":"FunctionDefinition","parameters":{"id":9637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9634,"mutability":"mutable","name":"relayData","nameLocation":"6953:9:31","nodeType":"VariableDeclaration","scope":9639,"src":"6932:30:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"},"typeName":{"id":9633,"nodeType":"UserDefinedTypeName","pathNode":{"id":9632,"name":"V3RelayData","nameLocations":["6932:11:31"],"nodeType":"IdentifierPath","referencedDeclaration":9456,"src":"6932:11:31"},"referencedDeclaration":9456,"src":"6932:11:31","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_storage_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"}},"visibility":"internal"},{"constant":false,"id":9636,"mutability":"mutable","name":"repaymentChainId","nameLocation":"6972:16:31","nodeType":"VariableDeclaration","scope":9639,"src":"6964:24:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9635,"name":"uint256","nodeType":"ElementaryTypeName","src":"6964:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6931:58:31"},"returnParameters":{"id":9638,"nodeType":"ParameterList","parameters":[],"src":"6998:0:31"},"scope":9705,"src":"6911:88:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ccfa5971","id":9655,"implemented":false,"kind":"function","modifiers":[],"name":"fillV3RelayWithUpdatedDeposit","nameLocation":"7014:29:31","nodeType":"FunctionDefinition","parameters":{"id":9653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9642,"mutability":"mutable","name":"relayData","nameLocation":"7074:9:31","nodeType":"VariableDeclaration","scope":9655,"src":"7053:30:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"},"typeName":{"id":9641,"nodeType":"UserDefinedTypeName","pathNode":{"id":9640,"name":"V3RelayData","nameLocations":["7053:11:31"],"nodeType":"IdentifierPath","referencedDeclaration":9456,"src":"7053:11:31"},"referencedDeclaration":9456,"src":"7053:11:31","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_storage_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"}},"visibility":"internal"},{"constant":false,"id":9644,"mutability":"mutable","name":"repaymentChainId","nameLocation":"7101:16:31","nodeType":"VariableDeclaration","scope":9655,"src":"7093:24:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9643,"name":"uint256","nodeType":"ElementaryTypeName","src":"7093:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9646,"mutability":"mutable","name":"updatedOutputAmount","nameLocation":"7135:19:31","nodeType":"VariableDeclaration","scope":9655,"src":"7127:27:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9645,"name":"uint256","nodeType":"ElementaryTypeName","src":"7127:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9648,"mutability":"mutable","name":"updatedRecipient","nameLocation":"7172:16:31","nodeType":"VariableDeclaration","scope":9655,"src":"7164:24:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9647,"name":"address","nodeType":"ElementaryTypeName","src":"7164:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9650,"mutability":"mutable","name":"updatedMessage","nameLocation":"7213:14:31","nodeType":"VariableDeclaration","scope":9655,"src":"7198:29:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9649,"name":"bytes","nodeType":"ElementaryTypeName","src":"7198:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9652,"mutability":"mutable","name":"depositorSignature","nameLocation":"7252:18:31","nodeType":"VariableDeclaration","scope":9655,"src":"7237:33:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9651,"name":"bytes","nodeType":"ElementaryTypeName","src":"7237:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7043:233:31"},"returnParameters":{"id":9654,"nodeType":"ParameterList","parameters":[],"src":"7285:0:31"},"scope":9705,"src":"7005:281:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9963e5a8","id":9661,"implemented":false,"kind":"function","modifiers":[],"name":"requestV3SlowFill","nameLocation":"7301:17:31","nodeType":"FunctionDefinition","parameters":{"id":9659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9658,"mutability":"mutable","name":"relayData","nameLocation":"7340:9:31","nodeType":"VariableDeclaration","scope":9661,"src":"7319:30:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"},"typeName":{"id":9657,"nodeType":"UserDefinedTypeName","pathNode":{"id":9656,"name":"V3RelayData","nameLocations":["7319:11:31"],"nodeType":"IdentifierPath","referencedDeclaration":9456,"src":"7319:11:31"},"referencedDeclaration":9456,"src":"7319:11:31","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$9456_storage_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"}},"visibility":"internal"}],"src":"7318:32:31"},"returnParameters":{"id":9660,"nodeType":"ParameterList","parameters":[],"src":"7359:0:31"},"scope":9705,"src":"7292:68:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"bbca7db0","id":9672,"implemented":false,"kind":"function","modifiers":[],"name":"executeV3SlowRelayLeaf","nameLocation":"7375:22:31","nodeType":"FunctionDefinition","parameters":{"id":9670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9664,"mutability":"mutable","name":"slowFillLeaf","nameLocation":"7427:12:31","nodeType":"VariableDeclaration","scope":9672,"src":"7407:32:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_V3SlowFill_$9464_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3SlowFill"},"typeName":{"id":9663,"nodeType":"UserDefinedTypeName","pathNode":{"id":9662,"name":"V3SlowFill","nameLocations":["7407:10:31"],"nodeType":"IdentifierPath","referencedDeclaration":9464,"src":"7407:10:31"},"referencedDeclaration":9464,"src":"7407:10:31","typeDescriptions":{"typeIdentifier":"t_struct$_V3SlowFill_$9464_storage_ptr","typeString":"struct V3SpokePoolInterface.V3SlowFill"}},"visibility":"internal"},{"constant":false,"id":9666,"mutability":"mutable","name":"rootBundleId","nameLocation":"7456:12:31","nodeType":"VariableDeclaration","scope":9672,"src":"7449:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9665,"name":"uint32","nodeType":"ElementaryTypeName","src":"7449:6:31","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9669,"mutability":"mutable","name":"proof","nameLocation":"7497:5:31","nodeType":"VariableDeclaration","scope":9672,"src":"7478:24:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9667,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7478:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9668,"nodeType":"ArrayTypeName","src":"7478:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7397:111:31"},"returnParameters":{"id":9671,"nodeType":"ParameterList","parameters":[],"src":"7517:0:31"},"scope":9705,"src":"7366:152:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"errorSelector":"2a58c4f3","id":9674,"name":"DisabledRoute","nameLocation":"7664:13:31","nodeType":"ErrorDefinition","parameters":{"id":9673,"nodeType":"ParameterList","parameters":[],"src":"7677:2:31"},"src":"7658:22:31"},{"errorSelector":"f722177f","id":9676,"name":"InvalidQuoteTimestamp","nameLocation":"7691:21:31","nodeType":"ErrorDefinition","parameters":{"id":9675,"nodeType":"ParameterList","parameters":[],"src":"7712:2:31"},"src":"7685:30:31"},{"errorSelector":"582e3889","id":9678,"name":"InvalidFillDeadline","nameLocation":"7726:19:31","nodeType":"ErrorDefinition","parameters":{"id":9677,"nodeType":"ParameterList","parameters":[],"src":"7745:2:31"},"src":"7720:28:31"},{"errorSelector":"495d907f","id":9680,"name":"InvalidExclusiveRelayer","nameLocation":"7759:23:31","nodeType":"ErrorDefinition","parameters":{"id":9679,"nodeType":"ParameterList","parameters":[],"src":"7782:2:31"},"src":"7753:32:31"},{"errorSelector":"25a63a5b","id":9682,"name":"InvalidExclusivityDeadline","nameLocation":"7796:26:31","nodeType":"ErrorDefinition","parameters":{"id":9681,"nodeType":"ParameterList","parameters":[],"src":"7822:2:31"},"src":"7790:35:31"},{"errorSelector":"6452a35d","id":9684,"name":"MsgValueDoesNotMatchInputAmount","nameLocation":"7836:31:31","nodeType":"ErrorDefinition","parameters":{"id":9683,"nodeType":"ParameterList","parameters":[],"src":"7867:2:31"},"src":"7830:40:31"},{"errorSelector":"c3a9b9d0","id":9686,"name":"NotExclusiveRelayer","nameLocation":"7881:19:31","nodeType":"ErrorDefinition","parameters":{"id":9685,"nodeType":"ParameterList","parameters":[],"src":"7900:2:31"},"src":"7875:28:31"},{"errorSelector":"09deb9ec","id":9688,"name":"NoSlowFillsInExclusivityWindow","nameLocation":"7914:30:31","nodeType":"ErrorDefinition","parameters":{"id":9687,"nodeType":"ParameterList","parameters":[],"src":"7944:2:31"},"src":"7908:39:31"},{"errorSelector":"8f260c60","id":9690,"name":"RelayFilled","nameLocation":"7958:11:31","nodeType":"ErrorDefinition","parameters":{"id":9689,"nodeType":"ParameterList","parameters":[],"src":"7969:2:31"},"src":"7952:20:31"},{"errorSelector":"012f9e44","id":9692,"name":"InvalidSlowFillRequest","nameLocation":"7983:22:31","nodeType":"ErrorDefinition","parameters":{"id":9691,"nodeType":"ParameterList","parameters":[],"src":"8005:2:31"},"src":"7977:31:31"},{"errorSelector":"d642b7d9","id":9694,"name":"ExpiredFillDeadline","nameLocation":"8019:19:31","nodeType":"ErrorDefinition","parameters":{"id":9693,"nodeType":"ParameterList","parameters":[],"src":"8038:2:31"},"src":"8013:28:31"},{"errorSelector":"b05e92fa","id":9696,"name":"InvalidMerkleProof","nameLocation":"8052:18:31","nodeType":"ErrorDefinition","parameters":{"id":9695,"nodeType":"ParameterList","parameters":[],"src":"8070:2:31"},"src":"8046:27:31"},{"errorSelector":"7a47c9a2","id":9698,"name":"InvalidChainId","nameLocation":"8084:14:31","nodeType":"ErrorDefinition","parameters":{"id":9697,"nodeType":"ParameterList","parameters":[],"src":"8098:2:31"},"src":"8078:23:31"},{"errorSelector":"cd298b38","id":9700,"name":"InvalidMerkleLeaf","nameLocation":"8112:17:31","nodeType":"ErrorDefinition","parameters":{"id":9699,"nodeType":"ParameterList","parameters":[],"src":"8129:2:31"},"src":"8106:26:31"},{"errorSelector":"954476d9","id":9702,"name":"ClaimedMerkleLeaf","nameLocation":"8143:17:31","nodeType":"ErrorDefinition","parameters":{"id":9701,"nodeType":"ParameterList","parameters":[],"src":"8160:2:31"},"src":"8137:26:31"},{"errorSelector":"a693f051","id":9704,"name":"InvalidPayoutAdjustmentPct","nameLocation":"8174:26:31","nodeType":"ErrorDefinition","parameters":{"id":9703,"nodeType":"ParameterList","parameters":[],"src":"8200:2:31"},"src":"8168:35:31"}],"scope":9706,"src":"160:8045:31","usedErrors":[9674,9676,9678,9680,9682,9684,9686,9688,9690,9692,9694,9696,9698,9700,9702,9704],"usedEvents":[9516,9530,9563,9589]}],"src":"37:8169:31"},"id":31},"contracts/test/MockSpokePool.sol":{"ast":{"absolutePath":"contracts/test/MockSpokePool.sol","exportedSymbols":{"AcrossMessageHandler":[5986],"AddressLibUpgradeable":[10427],"AddressUpgradeable":[1705],"ContextUpgradeable":[1747],"ECDSA":[4110],"ECDSAUpgradeable":[2452],"EIP712CrossChainUpgradeable":[10538],"ERC1967UpgradeUpgradeable":[486],"HubPoolInterface":[9136],"IBeaconUpgradeable":[496],"IERC1271":[3437],"IERC1822ProxiableUpgradeable":[162],"IERC1967Upgradeable":[152],"IERC20":[3515],"IERC20PermitUpgradeable":[999],"IERC20Upgradeable":[963],"Initializable":[665],"Math":[5603],"MathUpgradeable":[3318],"MerkleLib":[5945],"MerkleProof":[4638],"MockSpokePool":[10055],"MultiCallerUpgradeable":[10632],"OwnableUpgradeable":[131],"ReentrancyGuardUpgradeable":[885],"SafeERC20Upgradeable":[1375],"SignatureChecker":[4737],"SignedMath":[5708],"SignedMathUpgradeable":[3423],"SpokePool":[8866],"SpokePoolInterface":[9421],"StorageSlotUpgradeable":[1857],"Strings":[3744],"StringsUpgradeable":[2086],"UUPSUpgradeable":[801],"V3SpokePoolInterface":[9705],"WETH9Interface":[8898]},"id":10056,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":9707,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:32"},{"absolutePath":"contracts/SpokePool.sol","file":"../SpokePool.sol","id":9708,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10056,"sourceUnit":8867,"src":"62:26:32","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":9709,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10056,"sourceUnit":132,"src":"89:75:32","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9711,"name":"SpokePool","nameLocations":["277:9:32"],"nodeType":"IdentifierPath","referencedDeclaration":8866,"src":"277:9:32"},"id":9712,"nodeType":"InheritanceSpecifier","src":"277:9:32"},{"baseName":{"id":9713,"name":"OwnableUpgradeable","nameLocations":["288:18:32"],"nodeType":"IdentifierPath","referencedDeclaration":131,"src":"288:18:32"},"id":9714,"nodeType":"InheritanceSpecifier","src":"288:18:32"}],"canonicalName":"MockSpokePool","contractDependencies":[],"contractKind":"contract","documentation":{"id":9710,"nodeType":"StructuredDocumentation","src":"166:84:32","text":" @title MockSpokePool\n @notice Implements abstract contract for testing."},"fullyImplemented":true,"id":10055,"linearizedBaseContracts":[10055,131,1747,8866,10538,10632,885,801,486,152,162,665,9421,9705],"name":"MockSpokePool","nameLocation":"260:13:32","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":9716,"mutability":"mutable","name":"chainId_","nameLocation":"329:8:32","nodeType":"VariableDeclaration","scope":10055,"src":"313:24:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9715,"name":"uint256","nodeType":"ElementaryTypeName","src":"313:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":9718,"mutability":"mutable","name":"currentTime","nameLocation":"359:11:32","nodeType":"VariableDeclaration","scope":10055,"src":"343:27:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9717,"name":"uint256","nodeType":"ElementaryTypeName","src":"343:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"global":false,"id":9722,"libraryName":{"id":9719,"name":"SafeERC20Upgradeable","nameLocations":["382:20:32"],"nodeType":"IdentifierPath","referencedDeclaration":1375,"src":"382:20:32"},"nodeType":"UsingForDirective","src":"376:49:32","typeName":{"id":9721,"nodeType":"UserDefinedTypeName","pathNode":{"id":9720,"name":"IERC20Upgradeable","nameLocations":["407:17:32"],"nodeType":"IdentifierPath","referencedDeclaration":963,"src":"407:17:32"},"referencedDeclaration":963,"src":"407:17:32","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}}},{"anonymous":false,"eventSelector":"b6e6ae61a8fa98a339088353bc7a76c8c580b2efd09210a80bfccabe05d9ae47","id":9728,"name":"BridgedToHubPool","nameLocation":"437:16:32","nodeType":"EventDefinition","parameters":{"id":9727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9724,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"462:6:32","nodeType":"VariableDeclaration","scope":9728,"src":"454:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9723,"name":"uint256","nodeType":"ElementaryTypeName","src":"454:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9726,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"478:5:32","nodeType":"VariableDeclaration","scope":9728,"src":"470:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9725,"name":"address","nodeType":"ElementaryTypeName","src":"470:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"453:31:32"},"src":"431:54:32"},{"anonymous":false,"eventSelector":"8a5afa2f5694ae60f58fb8f4f1d7408f1cb0aac9ffc67150d46e2c7d1bb911ff","id":9732,"name":"PreLeafExecuteHook","nameLocation":"496:18:32","nodeType":"EventDefinition","parameters":{"id":9731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9730,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"523:5:32","nodeType":"VariableDeclaration","scope":9732,"src":"515:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9729,"name":"address","nodeType":"ElementaryTypeName","src":"515:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"514:15:32"},"src":"490:40:32"},{"body":{"id":9743,"nodeType":"Block","src":"693:2:32","statements":[]},"documentation":{"id":9733,"nodeType":"StructuredDocumentation","src":"536:48:32","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":9744,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":9738,"name":"_wrappedNativeTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9735,"src":"647:26:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31","id":9739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"675:7:32","subdenomination":"hours","typeDescriptions":{"typeIdentifier":"t_rational_3600_by_1","typeString":"int_const 3600"},"value":"1"},{"hexValue":"39","id":9740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"684:7:32","subdenomination":"hours","typeDescriptions":{"typeIdentifier":"t_rational_32400_by_1","typeString":"int_const 32400"},"value":"9"}],"id":9741,"kind":"baseConstructorSpecifier","modifierName":{"id":9737,"name":"SpokePool","nameLocations":["637:9:32"],"nodeType":"IdentifierPath","referencedDeclaration":8866,"src":"637:9:32"},"nodeType":"ModifierInvocation","src":"637:55:32"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9735,"mutability":"mutable","name":"_wrappedNativeTokenAddress","nameLocation":"609:26:32","nodeType":"VariableDeclaration","scope":9744,"src":"601:34:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9734,"name":"address","nodeType":"ElementaryTypeName","src":"601:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"600:36:32"},"returnParameters":{"id":9742,"nodeType":"ParameterList","parameters":[],"src":"693:0:32"},"scope":10055,"src":"589:106:32","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9769,"nodeType":"Block","src":"881:187:32","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9755,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"891:14:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"891:16:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9757,"nodeType":"ExpressionStatement","src":"891:16:32"},{"expression":{"arguments":[{"id":9759,"name":"_initialDepositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9746,"src":"934:17:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9760,"name":"_crossDomainAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9748,"src":"953:17:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9761,"name":"_hubPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9750,"src":"972:8:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9758,"name":"__SpokePool_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"917:16:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint32_$_t_address_$_t_address_$returns$__$","typeString":"function (uint32,address,address)"}},"id":9762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"917:64:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9763,"nodeType":"ExpressionStatement","src":"917:64:32"},{"expression":{"id":9767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9764,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9718,"src":"991:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":9765,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1005:5:32","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1011:9:32","memberName":"timestamp","nodeType":"MemberAccess","src":"1005:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"991:29:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9768,"nodeType":"ExpressionStatement","src":"991:29:32"}]},"functionSelector":"647c576c","id":9770,"implemented":true,"kind":"function","modifiers":[{"id":9753,"kind":"modifierInvocation","modifierName":{"id":9752,"name":"initializer","nameLocations":["869:11:32"],"nodeType":"IdentifierPath","referencedDeclaration":567,"src":"869:11:32"},"nodeType":"ModifierInvocation","src":"869:11:32"}],"name":"initialize","nameLocation":"750:10:32","nodeType":"FunctionDefinition","parameters":{"id":9751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9746,"mutability":"mutable","name":"_initialDepositId","nameLocation":"777:17:32","nodeType":"VariableDeclaration","scope":9770,"src":"770:24:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9745,"name":"uint32","nodeType":"ElementaryTypeName","src":"770:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9748,"mutability":"mutable","name":"_crossDomainAdmin","nameLocation":"812:17:32","nodeType":"VariableDeclaration","scope":9770,"src":"804:25:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9747,"name":"address","nodeType":"ElementaryTypeName","src":"804:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9750,"mutability":"mutable","name":"_hubPool","nameLocation":"847:8:32","nodeType":"VariableDeclaration","scope":9770,"src":"839:16:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9749,"name":"address","nodeType":"ElementaryTypeName","src":"839:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"760:101:32"},"returnParameters":{"id":9754,"nodeType":"ParameterList","parameters":[],"src":"881:0:32"},"scope":10055,"src":"741:327:32","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9779,"nodeType":"Block","src":"1121:35:32","statements":[{"expression":{"id":9777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9775,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9718,"src":"1131:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9776,"name":"time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9772,"src":"1145:4:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1131:18:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9778,"nodeType":"ExpressionStatement","src":"1131:18:32"}]},"functionSelector":"22f8e566","id":9780,"implemented":true,"kind":"function","modifiers":[],"name":"setCurrentTime","nameLocation":"1083:14:32","nodeType":"FunctionDefinition","parameters":{"id":9773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9772,"mutability":"mutable","name":"time","nameLocation":"1106:4:32","nodeType":"VariableDeclaration","scope":9780,"src":"1098:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9771,"name":"uint256","nodeType":"ElementaryTypeName","src":"1098:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1097:14:32"},"returnParameters":{"id":9774,"nodeType":"ParameterList","parameters":[],"src":"1121:0:32"},"scope":10055,"src":"1074:82:32","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9806,"nodeType":"Block","src":"1406:124:32","statements":[{"expression":{"arguments":[{"id":9798,"name":"_chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9782,"src":"1442:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9799,"name":"amountToReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9784,"src":"1452:14:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9800,"name":"refundAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9787,"src":"1468:13:32","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":9801,"name":"leafId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9789,"src":"1483:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9802,"name":"l2TokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9791,"src":"1491:14:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9803,"name":"refundAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9794,"src":"1507:15:32","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":9797,"name":"_distributeRelayerRefunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7782,"src":"1416:25:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint32_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,uint256[] memory,uint32,address,address[] memory)"}},"id":9804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1416:107:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9805,"nodeType":"ExpressionStatement","src":"1416:107:32"}]},"functionSelector":"87c3932d","id":9807,"implemented":true,"kind":"function","modifiers":[],"name":"distributeRelayerRefunds","nameLocation":"1171:24:32","nodeType":"FunctionDefinition","parameters":{"id":9795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9782,"mutability":"mutable","name":"_chainId","nameLocation":"1213:8:32","nodeType":"VariableDeclaration","scope":9807,"src":"1205:16:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9781,"name":"uint256","nodeType":"ElementaryTypeName","src":"1205:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9784,"mutability":"mutable","name":"amountToReturn","nameLocation":"1239:14:32","nodeType":"VariableDeclaration","scope":9807,"src":"1231:22:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9783,"name":"uint256","nodeType":"ElementaryTypeName","src":"1231:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9787,"mutability":"mutable","name":"refundAmounts","nameLocation":"1280:13:32","nodeType":"VariableDeclaration","scope":9807,"src":"1263:30:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9785,"name":"uint256","nodeType":"ElementaryTypeName","src":"1263:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9786,"nodeType":"ArrayTypeName","src":"1263:9:32","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9789,"mutability":"mutable","name":"leafId","nameLocation":"1310:6:32","nodeType":"VariableDeclaration","scope":9807,"src":"1303:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9788,"name":"uint32","nodeType":"ElementaryTypeName","src":"1303:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9791,"mutability":"mutable","name":"l2TokenAddress","nameLocation":"1334:14:32","nodeType":"VariableDeclaration","scope":9807,"src":"1326:22:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9790,"name":"address","nodeType":"ElementaryTypeName","src":"1326:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9794,"mutability":"mutable","name":"refundAddresses","nameLocation":"1375:15:32","nodeType":"VariableDeclaration","scope":9807,"src":"1358:32:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9792,"name":"address","nodeType":"ElementaryTypeName","src":"1358:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9793,"nodeType":"ArrayTypeName","src":"1358:9:32","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1195:201:32"},"returnParameters":{"id":9796,"nodeType":"ParameterList","parameters":[],"src":"1406:0:32"},"scope":10055,"src":"1162:368:32","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9834,"nodeType":"Block","src":"1825:303:32","statements":[{"expression":{"arguments":[{"id":9825,"name":"depositor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9809,"src":"1901:9:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9826,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9811,"src":"1928:9:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9827,"name":"originChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9813,"src":"1955:13:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9828,"name":"updatedOutputAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9815,"src":"1986:19:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9829,"name":"updatedRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9817,"src":"2023:16:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9830,"name":"updatedMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9819,"src":"2057:14:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":9831,"name":"depositorSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9821,"src":"2089:18:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9824,"name":"_verifyUpdateV3DepositMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8056,"src":"1854:29:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint32,uint256,uint256,address,bytes memory,bytes memory) view"}},"id":9832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1854:267:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"functionReturnParameters":9823,"id":9833,"nodeType":"Return","src":"1835:286:32"}]},"functionSelector":"74dfa43d","id":9835,"implemented":true,"kind":"function","modifiers":[],"name":"verifyUpdateV3DepositMessage","nameLocation":"1545:28:32","nodeType":"FunctionDefinition","parameters":{"id":9822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9809,"mutability":"mutable","name":"depositor","nameLocation":"1591:9:32","nodeType":"VariableDeclaration","scope":9835,"src":"1583:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9808,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9811,"mutability":"mutable","name":"depositId","nameLocation":"1617:9:32","nodeType":"VariableDeclaration","scope":9835,"src":"1610:16:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9810,"name":"uint32","nodeType":"ElementaryTypeName","src":"1610:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9813,"mutability":"mutable","name":"originChainId","nameLocation":"1644:13:32","nodeType":"VariableDeclaration","scope":9835,"src":"1636:21:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9812,"name":"uint256","nodeType":"ElementaryTypeName","src":"1636:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9815,"mutability":"mutable","name":"updatedOutputAmount","nameLocation":"1675:19:32","nodeType":"VariableDeclaration","scope":9835,"src":"1667:27:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9814,"name":"uint256","nodeType":"ElementaryTypeName","src":"1667:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9817,"mutability":"mutable","name":"updatedRecipient","nameLocation":"1712:16:32","nodeType":"VariableDeclaration","scope":9835,"src":"1704:24:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9816,"name":"address","nodeType":"ElementaryTypeName","src":"1704:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9819,"mutability":"mutable","name":"updatedMessage","nameLocation":"1751:14:32","nodeType":"VariableDeclaration","scope":9835,"src":"1738:27:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9818,"name":"bytes","nodeType":"ElementaryTypeName","src":"1738:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9821,"mutability":"mutable","name":"depositorSignature","nameLocation":"1788:18:32","nodeType":"VariableDeclaration","scope":9835,"src":"1775:31:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9820,"name":"bytes","nodeType":"ElementaryTypeName","src":"1775:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1573:239:32"},"returnParameters":{"id":9823,"nodeType":"ParameterList","parameters":[],"src":"1825:0:32"},"scope":10055,"src":"1536:592:32","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9851,"nodeType":"Block","src":"2282:66:32","statements":[{"expression":{"arguments":[{"id":9846,"name":"relayExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9838,"src":"2305:14:32","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams memory"}},{"id":9847,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9840,"src":"2321:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9848,"name":"isSlowFill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9842,"src":"2330:10:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9845,"name":"_fillRelayV3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8785,"src":"2292:12:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_V3RelayExecutionParams_$9478_memory_ptr_$_t_address_$_t_bool_$returns$__$","typeString":"function (struct V3SpokePoolInterface.V3RelayExecutionParams memory,address,bool)"}},"id":9849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2292:49:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9850,"nodeType":"ExpressionStatement","src":"2292:49:32"}]},"functionSelector":"bf40f25b","id":9852,"implemented":true,"kind":"function","modifiers":[],"name":"fillRelayV3Internal","nameLocation":"2143:19:32","nodeType":"FunctionDefinition","parameters":{"id":9843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9838,"mutability":"mutable","name":"relayExecution","nameLocation":"2202:14:32","nodeType":"VariableDeclaration","scope":9852,"src":"2172:44:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams"},"typeName":{"id":9837,"nodeType":"UserDefinedTypeName","pathNode":{"id":9836,"name":"V3RelayExecutionParams","nameLocations":["2172:22:32"],"nodeType":"IdentifierPath","referencedDeclaration":9478,"src":"2172:22:32"},"referencedDeclaration":9478,"src":"2172:22:32","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionParams_$9478_storage_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionParams"}},"visibility":"internal"},{"constant":false,"id":9840,"mutability":"mutable","name":"relayer","nameLocation":"2234:7:32","nodeType":"VariableDeclaration","scope":9852,"src":"2226:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9839,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9842,"mutability":"mutable","name":"isSlowFill","nameLocation":"2256:10:32","nodeType":"VariableDeclaration","scope":9852,"src":"2251:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9841,"name":"bool","nodeType":"ElementaryTypeName","src":"2251:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2162:110:32"},"returnParameters":{"id":9844,"nodeType":"ParameterList","parameters":[],"src":"2282:0:32"},"scope":10055,"src":"2134:214:32","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9882,"nodeType":"Block","src":"2559:141:32","statements":[{"assignments":[9860,9862],"declarations":[{"constant":false,"id":9860,"mutability":"mutable","name":"success","nameLocation":"2575:7:32","nodeType":"VariableDeclaration","scope":9882,"src":"2570:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9859,"name":"bool","nodeType":"ElementaryTypeName","src":"2570:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9862,"mutability":"mutable","name":"result","nameLocation":"2597:6:32","nodeType":"VariableDeclaration","scope":9882,"src":"2584:19:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9861,"name":"bytes","nodeType":"ElementaryTypeName","src":"2584:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":9873,"initialValue":{"arguments":[{"id":9871,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9854,"src":"2646:4:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":9865,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2615:4:32","typeDescriptions":{"typeIdentifier":"t_contract$_MockSpokePool_$10055","typeString":"contract MockSpokePool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MockSpokePool_$10055","typeString":"contract MockSpokePool"}],"id":9864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2607:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9863,"name":"address","nodeType":"ElementaryTypeName","src":"2607:7:32","typeDescriptions":{}}},"id":9866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2607:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2621:4:32","memberName":"call","nodeType":"MemberAccess","src":"2607:18:32","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":9868,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2634:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2638:5:32","memberName":"value","nodeType":"MemberAccess","src":"2634:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2607:38:32","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2607:44:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2569:82:32"},{"expression":{"arguments":[{"id":9875,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9860,"src":"2669:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"id":9878,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9862,"src":"2685:6:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2678:6:32","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":9876,"name":"string","nodeType":"ElementaryTypeName","src":"2678:6:32","typeDescriptions":{}}},"id":9879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2678:14:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":9874,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2661:7:32","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2661:32:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9881,"nodeType":"ExpressionStatement","src":"2661:32:32"}]},"functionSelector":"e98a5654","id":9883,"implemented":true,"kind":"function","modifiers":[{"id":9857,"kind":"modifierInvocation","modifierName":{"id":9856,"name":"nonReentrant","nameLocations":["2546:12:32"],"nodeType":"IdentifierPath","referencedDeclaration":845,"src":"2546:12:32"},"nodeType":"ModifierInvocation","src":"2546:12:32"}],"name":"callback","nameLocation":"2501:8:32","nodeType":"FunctionDefinition","parameters":{"id":9855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9854,"mutability":"mutable","name":"data","nameLocation":"2523:4:32","nodeType":"VariableDeclaration","scope":9883,"src":"2510:17:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9853,"name":"bytes","nodeType":"ElementaryTypeName","src":"2510:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2509:19:32"},"returnParameters":{"id":9858,"nodeType":"ParameterList","parameters":[],"src":"2559:0:32"},"scope":10055,"src":"2492:208:32","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":9900,"nodeType":"Block","src":"2776:60:32","statements":[{"expression":{"id":9898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9891,"name":"fillStatuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6051,"src":"2786:12:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":9893,"indexExpression":{"id":9892,"name":"relayHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9885,"src":"2799:9:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2786:23:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9896,"name":"fillType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9888,"src":"2820:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_FillType_$9431","typeString":"enum V3SpokePoolInterface.FillType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_FillType_$9431","typeString":"enum V3SpokePoolInterface.FillType"}],"id":9895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2812:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9894,"name":"uint256","nodeType":"ElementaryTypeName","src":"2812:7:32","typeDescriptions":{}}},"id":9897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2812:17:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2786:43:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9899,"nodeType":"ExpressionStatement","src":"2786:43:32"}]},"functionSelector":"5dd36f9c","id":9901,"implemented":true,"kind":"function","modifiers":[],"name":"setFillStatus","nameLocation":"2715:13:32","nodeType":"FunctionDefinition","parameters":{"id":9889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9885,"mutability":"mutable","name":"relayHash","nameLocation":"2737:9:32","nodeType":"VariableDeclaration","scope":9901,"src":"2729:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9884,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2729:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9888,"mutability":"mutable","name":"fillType","nameLocation":"2757:8:32","nodeType":"VariableDeclaration","scope":9901,"src":"2748:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_FillType_$9431","typeString":"enum V3SpokePoolInterface.FillType"},"typeName":{"id":9887,"nodeType":"UserDefinedTypeName","pathNode":{"id":9886,"name":"FillType","nameLocations":["2748:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":9431,"src":"2748:8:32"},"referencedDeclaration":9431,"src":"2748:8:32","typeDescriptions":{"typeIdentifier":"t_enum$_FillType_$9431","typeString":"enum V3SpokePoolInterface.FillType"}},"visibility":"internal"}],"src":"2728:38:32"},"returnParameters":{"id":9890,"nodeType":"ParameterList","parameters":[],"src":"2776:0:32"},"scope":10055,"src":"2706:130:32","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7571],"body":{"id":9909,"nodeType":"Block","src":"2907:35:32","statements":[{"expression":{"id":9907,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9718,"src":"2924:11:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9906,"id":9908,"nodeType":"Return","src":"2917:18:32"}]},"functionSelector":"29cb924d","id":9910,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentTime","nameLocation":"2851:14:32","nodeType":"FunctionDefinition","overrides":{"id":9903,"nodeType":"OverrideSpecifier","overrides":[],"src":"2880:8:32"},"parameters":{"id":9902,"nodeType":"ParameterList","parameters":[],"src":"2865:2:32"},"returnParameters":{"id":9906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9910,"src":"2898:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9904,"name":"uint256","nodeType":"ElementaryTypeName","src":"2898:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2897:9:32"},"scope":10055,"src":"2842:100:32","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[7929],"body":{"id":9920,"nodeType":"Block","src":"3010:47:32","statements":[{"eventCall":{"arguments":[{"id":9917,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9912,"src":"3044:5:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9916,"name":"PreLeafExecuteHook","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9732,"src":"3025:18:32","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":9918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3025:25:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9919,"nodeType":"EmitStatement","src":"3020:30:32"}]},"id":9921,"implemented":true,"kind":"function","modifiers":[],"name":"_preExecuteLeafHook","nameLocation":"2957:19:32","nodeType":"FunctionDefinition","overrides":{"id":9914,"nodeType":"OverrideSpecifier","overrides":[],"src":"3001:8:32"},"parameters":{"id":9913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9912,"mutability":"mutable","name":"token","nameLocation":"2985:5:32","nodeType":"VariableDeclaration","scope":9921,"src":"2977:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9911,"name":"address","nodeType":"ElementaryTypeName","src":"2977:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2976:15:32"},"returnParameters":{"id":9915,"nodeType":"ParameterList","parameters":[],"src":"3010:0:32"},"scope":10055,"src":"2948:109:32","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[7936],"body":{"id":9934,"nodeType":"Block","src":"3144:53:32","statements":[{"eventCall":{"arguments":[{"id":9930,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9923,"src":"3176:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9931,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9925,"src":"3184:5:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9929,"name":"BridgedToHubPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9728,"src":"3159:16:32","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":9932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3159:31:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9933,"nodeType":"EmitStatement","src":"3154:36:32"}]},"id":9935,"implemented":true,"kind":"function","modifiers":[],"name":"_bridgeTokensToHubPool","nameLocation":"3072:22:32","nodeType":"FunctionDefinition","overrides":{"id":9927,"nodeType":"OverrideSpecifier","overrides":[],"src":"3135:8:32"},"parameters":{"id":9926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9923,"mutability":"mutable","name":"amount","nameLocation":"3103:6:32","nodeType":"VariableDeclaration","scope":9935,"src":"3095:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9922,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9925,"mutability":"mutable","name":"token","nameLocation":"3119:5:32","nodeType":"VariableDeclaration","scope":9935,"src":"3111:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9924,"name":"address","nodeType":"ElementaryTypeName","src":"3111:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3094:31:32"},"returnParameters":{"id":9928,"nodeType":"ParameterList","parameters":[],"src":"3144:0:32"},"scope":10055,"src":"3063:134:32","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[8857],"body":{"id":9941,"nodeType":"Block","src":"3262:2:32","statements":[]},"id":9942,"implemented":true,"kind":"function","modifiers":[{"id":9939,"kind":"modifierInvocation","modifierName":{"id":9938,"name":"onlyOwner","nameLocations":["3252:9:32"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"3252:9:32"},"nodeType":"ModifierInvocation","src":"3252:9:32"}],"name":"_requireAdminSender","nameLocation":"3212:19:32","nodeType":"FunctionDefinition","overrides":{"id":9937,"nodeType":"OverrideSpecifier","overrides":[],"src":"3243:8:32"},"parameters":{"id":9936,"nodeType":"ParameterList","parameters":[],"src":"3231:2:32"},"returnParameters":{"id":9940,"nodeType":"ParameterList","parameters":[],"src":"3262:0:32"},"scope":10055,"src":"3203:61:32","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[7561],"body":{"id":9958,"nodeType":"Block","src":"3379:161:32","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9949,"name":"chainId_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9716,"src":"3491:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3503:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3491:13:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":9955,"name":"chainId_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9716,"src":"3525:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3491:42:32","trueExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9952,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3507:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MockSpokePool_$10055_$","typeString":"type(contract super MockSpokePool)"}},"id":9953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3513:7:32","memberName":"chainId","nodeType":"MemberAccess","referencedDeclaration":7561,"src":"3507:13:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3507:15:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9948,"id":9957,"nodeType":"Return","src":"3484:49:32"}]},"functionSelector":"9a8a0592","id":9959,"implemented":true,"kind":"function","modifiers":[],"name":"chainId","nameLocation":"3319:7:32","nodeType":"FunctionDefinition","overrides":{"id":9945,"nodeType":"OverrideSpecifier","overrides":[{"id":9944,"name":"SpokePool","nameLocations":["3350:9:32"],"nodeType":"IdentifierPath","referencedDeclaration":8866,"src":"3350:9:32"}],"src":"3341:19:32"},"parameters":{"id":9943,"nodeType":"ParameterList","parameters":[],"src":"3326:2:32"},"returnParameters":{"id":9948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9959,"src":"3370:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9946,"name":"uint256","nodeType":"ElementaryTypeName","src":"3370:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3369:9:32"},"scope":10055,"src":"3310:230:32","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9968,"nodeType":"Block","src":"3591:36:32","statements":[{"expression":{"id":9966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9964,"name":"chainId_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9716,"src":"3601:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9965,"name":"_chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9961,"src":"3612:8:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3601:19:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9967,"nodeType":"ExpressionStatement","src":"3601:19:32"}]},"functionSelector":"ef0e2ff4","id":9969,"implemented":true,"kind":"function","modifiers":[],"name":"setChainId","nameLocation":"3555:10:32","nodeType":"FunctionDefinition","parameters":{"id":9962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9961,"mutability":"mutable","name":"_chainId","nameLocation":"3574:8:32","nodeType":"VariableDeclaration","scope":9969,"src":"3566:16:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9960,"name":"uint256","nodeType":"ElementaryTypeName","src":"3566:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3565:18:32"},"returnParameters":{"id":9963,"nodeType":"ParameterList","parameters":[],"src":"3591:0:32"},"scope":10055,"src":"3546:81:32","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10053,"nodeType":"Block","src":"4540:1278:32","statements":[{"assignments":[9993],"declarations":[{"constant":false,"id":9993,"mutability":"mutable","name":"newDepositId","nameLocation":"4646:12:32","nodeType":"VariableDeclaration","scope":10053,"src":"4639:19:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9992,"name":"uint32","nodeType":"ElementaryTypeName","src":"4639:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":9996,"initialValue":{"id":9995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4661:18:32","subExpression":{"id":9994,"name":"numberOfDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"4661:16:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"4639:40:32"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9997,"name":"originToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"4925:11:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":10000,"name":"wrappedNativeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"4948:18:32","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$8898","typeString":"contract WETH9Interface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_WETH9Interface_$8898","typeString":"contract WETH9Interface"}],"id":9999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4940:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9998,"name":"address","nodeType":"ElementaryTypeName","src":"4940:7:32","typeDescriptions":{}}},"id":10001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4940:27:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4925:42:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10003,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4971:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4975:5:32","memberName":"value","nodeType":"MemberAccess","src":"4971:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4983:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4971:13:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4925:59:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"arguments":[{"expression":{"id":10028,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5488:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5492:6:32","memberName":"sender","nodeType":"MemberAccess","src":"5488:10:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":10032,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5508:4:32","typeDescriptions":{"typeIdentifier":"t_contract$_MockSpokePool_$10055","typeString":"contract MockSpokePool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MockSpokePool_$10055","typeString":"contract MockSpokePool"}],"id":10031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5500:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10030,"name":"address","nodeType":"ElementaryTypeName","src":"5500:7:32","typeDescriptions":{}}},"id":10033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5500:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10034,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9975,"src":"5515:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":10025,"name":"originToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"5458:11:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10024,"name":"IERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"5440:17:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Upgradeable_$963_$","typeString":"type(contract IERC20Upgradeable)"}},"id":10026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5440:30:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$963","typeString":"contract IERC20Upgradeable"}},"id":10027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5471:16:32","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1059,"src":"5440:47:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$963_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20Upgradeable_$963_$","typeString":"function (contract IERC20Upgradeable,address,address,uint256)"}},"id":10035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5440:82:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10036,"nodeType":"ExpressionStatement","src":"5440:82:32"},"id":10037,"nodeType":"IfStatement","src":"4921:601:32","trueBody":{"id":10023,"nodeType":"Block","src":"4986:448:32","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10009,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5008:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5012:5:32","memberName":"value","nodeType":"MemberAccess","src":"5008:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":10011,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9975,"src":"5021:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5008:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10008,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5000:7:32","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5000:28:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10014,"nodeType":"ExpressionStatement","src":"5000:28:32"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"expression":{"id":10015,"name":"wrappedNativeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"5042:18:32","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$8898","typeString":"contract WETH9Interface"}},"id":10017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5061:7:32","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":8879,"src":"5042:26:32","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$","typeString":"function () payable external"}},"id":10020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":10018,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5077:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5081:5:32","memberName":"value","nodeType":"MemberAccess","src":"5077:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5042:46:32","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$value","typeString":"function () payable external"}},"id":10021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5042:48:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10022,"nodeType":"ExpressionStatement","src":"5042:48:32"}]}},{"eventCall":{"arguments":[{"id":10039,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9975,"src":"5566:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":10040,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[9959],"referencedDeclaration":9959,"src":"5586:7:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":10041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5586:9:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10042,"name":"destinationChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9977,"src":"5609:18:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10043,"name":"relayerFeePct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9979,"src":"5641:13:32","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":10044,"name":"newDepositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9993,"src":"5668:12:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":10045,"name":"quoteTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9981,"src":"5694:14:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":10046,"name":"originToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"5722:11:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10047,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9971,"src":"5747:9:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10048,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5770:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5774:6:32","memberName":"sender","nodeType":"MemberAccess","src":"5770:10:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10050,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9983,"src":"5794:7:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10038,"name":"FundsDeposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6134,"src":"5538:14:32","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_int64_$_t_uint32_$_t_uint32_$_t_address_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,uint256,int64,uint32,uint32,address,address,address,bytes memory)"}},"id":10051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5538:273:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10052,"nodeType":"EmitStatement","src":"5533:278:32"}]},"functionSelector":"bdcb53a5","id":10054,"implemented":true,"kind":"function","modifiers":[{"id":9988,"kind":"modifierInvocation","modifierName":{"id":9987,"name":"nonReentrant","nameLocations":["4510:12:32"],"nodeType":"IdentifierPath","referencedDeclaration":845,"src":"4510:12:32"},"nodeType":"ModifierInvocation","src":"4510:12:32"},{"id":9990,"kind":"modifierInvocation","modifierName":{"id":9989,"name":"unpausedDeposits","nameLocations":["4523:16:32"],"nodeType":"IdentifierPath","referencedDeclaration":6352,"src":"4523:16:32"},"nodeType":"ModifierInvocation","src":"4523:16:32"}],"name":"depositV2","nameLocation":"4236:9:32","nodeType":"FunctionDefinition","parameters":{"id":9986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9971,"mutability":"mutable","name":"recipient","nameLocation":"4263:9:32","nodeType":"VariableDeclaration","scope":10054,"src":"4255:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9970,"name":"address","nodeType":"ElementaryTypeName","src":"4255:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9973,"mutability":"mutable","name":"originToken","nameLocation":"4290:11:32","nodeType":"VariableDeclaration","scope":10054,"src":"4282:19:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9972,"name":"address","nodeType":"ElementaryTypeName","src":"4282:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9975,"mutability":"mutable","name":"amount","nameLocation":"4319:6:32","nodeType":"VariableDeclaration","scope":10054,"src":"4311:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9974,"name":"uint256","nodeType":"ElementaryTypeName","src":"4311:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9977,"mutability":"mutable","name":"destinationChainId","nameLocation":"4343:18:32","nodeType":"VariableDeclaration","scope":10054,"src":"4335:26:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9976,"name":"uint256","nodeType":"ElementaryTypeName","src":"4335:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9979,"mutability":"mutable","name":"relayerFeePct","nameLocation":"4377:13:32","nodeType":"VariableDeclaration","scope":10054,"src":"4371:19:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":9978,"name":"int64","nodeType":"ElementaryTypeName","src":"4371:5:32","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":9981,"mutability":"mutable","name":"quoteTimestamp","nameLocation":"4407:14:32","nodeType":"VariableDeclaration","scope":10054,"src":"4400:21:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9980,"name":"uint32","nodeType":"ElementaryTypeName","src":"4400:6:32","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9983,"mutability":"mutable","name":"message","nameLocation":"4444:7:32","nodeType":"VariableDeclaration","scope":10054,"src":"4431:20:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9982,"name":"bytes","nodeType":"ElementaryTypeName","src":"4431:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10054,"src":"4461:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9984,"name":"uint256","nodeType":"ElementaryTypeName","src":"4461:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4245:241:32"},"returnParameters":{"id":9991,"nodeType":"ParameterList","parameters":[],"src":"4540:0:32"},"scope":10055,"src":"4227:1591:32","stateMutability":"payable","virtual":true,"visibility":"public"}],"scope":10056,"src":"251:5569:32","usedErrors":[9420,9674,9676,9678,9680,9682,9684,9686,9688,9690,9692,9694,9696,9698,9700,9702,9704],"usedEvents":[16,139,146,151,511,6099,6103,6111,6134,6149,6183,6191,6211,6223,6227,6231,6235,9516,9530,9563,9589,9728,9732]}],"src":"37:5784:32"},"id":32},"contracts/test/MockSpokePoolV2.sol":{"ast":{"absolutePath":"contracts/test/MockSpokePoolV2.sol","exportedSymbols":{"AcrossMessageHandler":[5986],"AddressLibUpgradeable":[10427],"AddressUpgradeable":[1705],"ContextUpgradeable":[1747],"ECDSA":[4110],"ECDSAUpgradeable":[2452],"EIP712CrossChainUpgradeable":[10538],"ERC1967UpgradeUpgradeable":[486],"HubPoolInterface":[9136],"IBeaconUpgradeable":[496],"IERC1271":[3437],"IERC1822ProxiableUpgradeable":[162],"IERC1967Upgradeable":[152],"IERC20":[3515],"IERC20PermitUpgradeable":[999],"IERC20Upgradeable":[963],"Initializable":[665],"Math":[5603],"MathUpgradeable":[3318],"MerkleLib":[5945],"MerkleProof":[4638],"MockSpokePool":[10055],"MockSpokePoolV2":[10097],"MultiCallerUpgradeable":[10632],"OwnableUpgradeable":[131],"ReentrancyGuardUpgradeable":[885],"SafeERC20Upgradeable":[1375],"SignatureChecker":[4737],"SignedMath":[5708],"SignedMathUpgradeable":[3423],"SpokePool":[8866],"SpokePoolInterface":[9421],"StorageSlotUpgradeable":[1857],"Strings":[3744],"StringsUpgradeable":[2086],"UUPSUpgradeable":[801],"V3SpokePoolInterface":[9705],"WETH9Interface":[8898]},"id":10098,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":10057,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:33"},{"absolutePath":"contracts/test/MockSpokePool.sol","file":"./MockSpokePool.sol","id":10058,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10098,"sourceUnit":10056,"src":"62:29:33","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":10060,"name":"MockSpokePool","nameLocations":["265:13:33"],"nodeType":"IdentifierPath","referencedDeclaration":10055,"src":"265:13:33"},"id":10061,"nodeType":"InheritanceSpecifier","src":"265:13:33"}],"canonicalName":"MockSpokePoolV2","contractDependencies":[],"contractKind":"contract","documentation":{"id":10059,"nodeType":"StructuredDocumentation","src":"93:143:33","text":" @title MockSpokePoolV2\n @notice Upgrades MockSpokePool for no practical reason other than to demonstrate\n upgradeability options"},"fullyImplemented":true,"id":10097,"linearizedBaseContracts":[10097,10055,131,1747,8866,10538,10632,885,801,486,152,162,665,9421,9705],"name":"MockSpokePoolV2","nameLocation":"246:15:33","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"c40e7ebe8d73fd5a0cb54204770418c5a137493f190ccec1bb558170cd0bf49a","id":10065,"name":"NewEvent","nameLocation":"291:8:33","nodeType":"EventDefinition","parameters":{"id":10064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10063,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"305:5:33","nodeType":"VariableDeclaration","scope":10065,"src":"300:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10062,"name":"bool","nodeType":"ElementaryTypeName","src":"300:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"299:12:33"},"src":"285:27:33"},{"body":{"id":10074,"nodeType":"Block","src":"461:2:33","statements":[]},"documentation":{"id":10066,"nodeType":"StructuredDocumentation","src":"318:48:33","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":10075,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":10071,"name":"_wrappedNativeTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10068,"src":"433:26:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10072,"kind":"baseConstructorSpecifier","modifierName":{"id":10070,"name":"MockSpokePool","nameLocations":["419:13:33"],"nodeType":"IdentifierPath","referencedDeclaration":10055,"src":"419:13:33"},"nodeType":"ModifierInvocation","src":"419:41:33"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":10069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10068,"mutability":"mutable","name":"_wrappedNativeTokenAddress","nameLocation":"391:26:33","nodeType":"VariableDeclaration","scope":10075,"src":"383:34:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10067,"name":"address","nodeType":"ElementaryTypeName","src":"383:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"382:36:33"},"returnParameters":{"id":10073,"nodeType":"ParameterList","parameters":[],"src":"461:0:33"},"scope":10097,"src":"371:92:33","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10087,"nodeType":"Block","src":"781:38:33","statements":[{"expression":{"arguments":[{"id":10084,"name":"_hubPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10077,"src":"803:8:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10083,"name":"_setHubPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7923,"src":"791:11:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":10085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"791:21:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10086,"nodeType":"ExpressionStatement","src":"791:21:33"}]},"functionSelector":"f7e7d1fd","id":10088,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"hexValue":"32","id":10080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"778:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"id":10081,"kind":"modifierInvocation","modifierName":{"id":10079,"name":"reinitializer","nameLocations":["764:13:33"],"nodeType":"IdentifierPath","referencedDeclaration":600,"src":"764:13:33"},"nodeType":"ModifierInvocation","src":"764:16:33"}],"name":"reinitialize","nameLocation":"726:12:33","nodeType":"FunctionDefinition","parameters":{"id":10078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10077,"mutability":"mutable","name":"_hubPool","nameLocation":"747:8:33","nodeType":"VariableDeclaration","scope":10088,"src":"739:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10076,"name":"address","nodeType":"ElementaryTypeName","src":"739:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"738:18:33"},"returnParameters":{"id":10082,"nodeType":"ParameterList","parameters":[],"src":"781:0:33"},"scope":10097,"src":"717:102:33","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10095,"nodeType":"Block","src":"920:36:33","statements":[{"eventCall":{"arguments":[{"hexValue":"74727565","id":10092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"944:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10091,"name":"NewEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10065,"src":"935:8:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":10093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"935:14:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10094,"nodeType":"EmitStatement","src":"930:19:33"}]},"functionSelector":"7b0cb839","id":10096,"implemented":true,"kind":"function","modifiers":[],"name":"emitEvent","nameLocation":"899:9:33","nodeType":"FunctionDefinition","parameters":{"id":10089,"nodeType":"ParameterList","parameters":[],"src":"908:2:33"},"returnParameters":{"id":10090,"nodeType":"ParameterList","parameters":[],"src":"920:0:33"},"scope":10097,"src":"890:66:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10098,"src":"237:721:33","usedErrors":[9420,9674,9676,9678,9680,9682,9684,9686,9688,9690,9692,9694,9696,9698,9700,9702,9704],"usedEvents":[16,139,146,151,511,6099,6103,6111,6134,6149,6183,6191,6211,6223,6227,6231,6235,9516,9530,9563,9589,9728,9732,10065]}],"src":"37:922:33"},"id":33},"contracts/upgradeable/AddressLibUpgradeable.sol":{"ast":{"absolutePath":"contracts/upgradeable/AddressLibUpgradeable.sol","exportedSymbols":{"AddressLibUpgradeable":[10427]},"id":10428,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":10099,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:34"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressLibUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":10100,"nodeType":"StructuredDocumentation","src":"126:484:34","text":" @title AddressUpgradeable\n @dev Collection of functions related to the address type\n @notice Logic is 100% copied from \"@openzeppelin/contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\" but one\n comment is added to clarify why we allow delegatecall() in this contract, which is typically unsafe for use in\n upgradeable implementation contracts.\n @dev See https://docs.openzeppelin.com/upgrades-plugins/1.x/faq#delegatecall-selfdestruct for more details."},"fullyImplemented":true,"id":10427,"linearizedBaseContracts":[10427],"name":"AddressLibUpgradeable","nameLocation":"619:21:34","nodeType":"ContractDefinition","nodes":[{"body":{"id":10114,"nodeType":"Block","src":"1909:254:34","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":10108,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10103,"src":"2133:7:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2141:4:34","memberName":"code","nodeType":"MemberAccess","src":"2133:12:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":10110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2146:6:34","memberName":"length","nodeType":"MemberAccess","src":"2133:19:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2133:23:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10107,"id":10113,"nodeType":"Return","src":"2126:30:34"}]},"documentation":{"id":10101,"nodeType":"StructuredDocumentation","src":"647:1191:34","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":10115,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1852:10:34","nodeType":"FunctionDefinition","parameters":{"id":10104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10103,"mutability":"mutable","name":"account","nameLocation":"1871:7:34","nodeType":"VariableDeclaration","scope":10115,"src":"1863:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10102,"name":"address","nodeType":"ElementaryTypeName","src":"1863:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1862:17:34"},"returnParameters":{"id":10107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10115,"src":"1903:4:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10105,"name":"bool","nodeType":"ElementaryTypeName","src":"1903:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1902:6:34"},"scope":10427,"src":"1843:320:34","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10148,"nodeType":"Block","src":"3149:243:34","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":10126,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3175:4:34","typeDescriptions":{"typeIdentifier":"t_contract$_AddressLibUpgradeable_$10427","typeString":"library AddressLibUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressLibUpgradeable_$10427","typeString":"library AddressLibUpgradeable"}],"id":10125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3167:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10124,"name":"address","nodeType":"ElementaryTypeName","src":"3167:7:34","typeDescriptions":{}}},"id":10127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3167:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3181:7:34","memberName":"balance","nodeType":"MemberAccess","src":"3167:21:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":10129,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10120,"src":"3192:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3167:31:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":10131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3200:31:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":10123,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3159:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3159:73:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10133,"nodeType":"ExpressionStatement","src":"3159:73:34"},{"assignments":[10135,null],"declarations":[{"constant":false,"id":10135,"mutability":"mutable","name":"success","nameLocation":"3249:7:34","nodeType":"VariableDeclaration","scope":10148,"src":"3244:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10134,"name":"bool","nodeType":"ElementaryTypeName","src":"3244:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":10142,"initialValue":{"arguments":[{"hexValue":"","id":10140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3294:2:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":10136,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10118,"src":"3262:9:34","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":10137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3272:4:34","memberName":"call","nodeType":"MemberAccess","src":"3262:14:34","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":10138,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10120,"src":"3285:6:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3262:31:34","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3262:35:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3243:54:34"},{"expression":{"arguments":[{"id":10144,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10135,"src":"3315:7:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":10145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3324:60:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":10143,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3307:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:78:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10147,"nodeType":"ExpressionStatement","src":"3307:78:34"}]},"documentation":{"id":10116,"nodeType":"StructuredDocumentation","src":"2169:904:34","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":10149,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"3087:9:34","nodeType":"FunctionDefinition","parameters":{"id":10121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10118,"mutability":"mutable","name":"recipient","nameLocation":"3113:9:34","nodeType":"VariableDeclaration","scope":10149,"src":"3097:25:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":10117,"name":"address","nodeType":"ElementaryTypeName","src":"3097:15:34","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":10120,"mutability":"mutable","name":"amount","nameLocation":"3132:6:34","nodeType":"VariableDeclaration","scope":10149,"src":"3124:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10119,"name":"uint256","nodeType":"ElementaryTypeName","src":"3124:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3096:43:34"},"returnParameters":{"id":10122,"nodeType":"ParameterList","parameters":[],"src":"3149:0:34"},"scope":10427,"src":"3078:314:34","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10166,"nodeType":"Block","src":"4223:96:34","statements":[{"expression":{"arguments":[{"id":10160,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10152,"src":"4262:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10161,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10154,"src":"4270:4:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":10162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4276:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":10163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4279:32:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":10159,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[10207,10251],"referencedDeclaration":10251,"src":"4240:21:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":10164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:72:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":10158,"id":10165,"nodeType":"Return","src":"4233:79:34"}]},"documentation":{"id":10150,"nodeType":"StructuredDocumentation","src":"3398:731:34","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":10167,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4143:12:34","nodeType":"FunctionDefinition","parameters":{"id":10155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10152,"mutability":"mutable","name":"target","nameLocation":"4164:6:34","nodeType":"VariableDeclaration","scope":10167,"src":"4156:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10151,"name":"address","nodeType":"ElementaryTypeName","src":"4156:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10154,"mutability":"mutable","name":"data","nameLocation":"4185:4:34","nodeType":"VariableDeclaration","scope":10167,"src":"4172:17:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10153,"name":"bytes","nodeType":"ElementaryTypeName","src":"4172:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4155:35:34"},"returnParameters":{"id":10158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10167,"src":"4209:12:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10156,"name":"bytes","nodeType":"ElementaryTypeName","src":"4209:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4208:14:34"},"scope":10427,"src":"4134:185:34","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10186,"nodeType":"Block","src":"4688:76:34","statements":[{"expression":{"arguments":[{"id":10180,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10170,"src":"4727:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10181,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10172,"src":"4735:4:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":10182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":10183,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10174,"src":"4744:12:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":10179,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[10207,10251],"referencedDeclaration":10251,"src":"4705:21:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":10184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4705:52:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":10178,"id":10185,"nodeType":"Return","src":"4698:59:34"}]},"documentation":{"id":10168,"nodeType":"StructuredDocumentation","src":"4325:211:34","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":10187,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4550:12:34","nodeType":"FunctionDefinition","parameters":{"id":10175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10170,"mutability":"mutable","name":"target","nameLocation":"4580:6:34","nodeType":"VariableDeclaration","scope":10187,"src":"4572:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10169,"name":"address","nodeType":"ElementaryTypeName","src":"4572:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10172,"mutability":"mutable","name":"data","nameLocation":"4609:4:34","nodeType":"VariableDeclaration","scope":10187,"src":"4596:17:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10171,"name":"bytes","nodeType":"ElementaryTypeName","src":"4596:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":10174,"mutability":"mutable","name":"errorMessage","nameLocation":"4637:12:34","nodeType":"VariableDeclaration","scope":10187,"src":"4623:26:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10173,"name":"string","nodeType":"ElementaryTypeName","src":"4623:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4562:93:34"},"returnParameters":{"id":10178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10187,"src":"4674:12:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10176,"name":"bytes","nodeType":"ElementaryTypeName","src":"4674:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4673:14:34"},"scope":10427,"src":"4541:223:34","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10206,"nodeType":"Block","src":"5269:111:34","statements":[{"expression":{"arguments":[{"id":10200,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10190,"src":"5308:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10201,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10192,"src":"5316:4:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":10202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10194,"src":"5322:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":10203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5329:43:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":10199,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[10207,10251],"referencedDeclaration":10251,"src":"5286:21:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":10204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5286:87:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":10198,"id":10205,"nodeType":"Return","src":"5279:94:34"}]},"documentation":{"id":10188,"nodeType":"StructuredDocumentation","src":"4770:351:34","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":10207,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5135:21:34","nodeType":"FunctionDefinition","parameters":{"id":10195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10190,"mutability":"mutable","name":"target","nameLocation":"5174:6:34","nodeType":"VariableDeclaration","scope":10207,"src":"5166:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10189,"name":"address","nodeType":"ElementaryTypeName","src":"5166:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10192,"mutability":"mutable","name":"data","nameLocation":"5203:4:34","nodeType":"VariableDeclaration","scope":10207,"src":"5190:17:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10191,"name":"bytes","nodeType":"ElementaryTypeName","src":"5190:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":10194,"mutability":"mutable","name":"value","nameLocation":"5225:5:34","nodeType":"VariableDeclaration","scope":10207,"src":"5217:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10193,"name":"uint256","nodeType":"ElementaryTypeName","src":"5217:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5156:80:34"},"returnParameters":{"id":10198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10207,"src":"5255:12:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10196,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5254:14:34"},"scope":10427,"src":"5126:254:34","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10250,"nodeType":"Block","src":"5807:269:34","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":10224,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5833:4:34","typeDescriptions":{"typeIdentifier":"t_contract$_AddressLibUpgradeable_$10427","typeString":"library AddressLibUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressLibUpgradeable_$10427","typeString":"library AddressLibUpgradeable"}],"id":10223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5825:7:34","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10222,"name":"address","nodeType":"ElementaryTypeName","src":"5825:7:34","typeDescriptions":{}}},"id":10225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5825:13:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5839:7:34","memberName":"balance","nodeType":"MemberAccess","src":"5825:21:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":10227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10214,"src":"5850:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5825:30:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":10229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5857:40:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":10221,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5817:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:81:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10231,"nodeType":"ExpressionStatement","src":"5817:81:34"},{"assignments":[10233,10235],"declarations":[{"constant":false,"id":10233,"mutability":"mutable","name":"success","nameLocation":"5914:7:34","nodeType":"VariableDeclaration","scope":10250,"src":"5909:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10232,"name":"bool","nodeType":"ElementaryTypeName","src":"5909:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":10235,"mutability":"mutable","name":"returndata","nameLocation":"5936:10:34","nodeType":"VariableDeclaration","scope":10250,"src":"5923:23:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10234,"name":"bytes","nodeType":"ElementaryTypeName","src":"5923:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":10242,"initialValue":{"arguments":[{"id":10240,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10212,"src":"5978:4:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":10236,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10210,"src":"5950:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5957:4:34","memberName":"call","nodeType":"MemberAccess","src":"5950:11:34","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":10238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10214,"src":"5970:5:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5950:27:34","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5950:33:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5908:75:34"},{"expression":{"arguments":[{"id":10244,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10210,"src":"6027:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10245,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10233,"src":"6035:7:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":10246,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10235,"src":"6044:10:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":10247,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10216,"src":"6056:12:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":10243,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10382,"src":"6000:26:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":10248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6000:69:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":10220,"id":10249,"nodeType":"Return","src":"5993:76:34"}]},"documentation":{"id":10208,"nodeType":"StructuredDocumentation","src":"5386:237:34","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":10251,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5637:21:34","nodeType":"FunctionDefinition","parameters":{"id":10217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10210,"mutability":"mutable","name":"target","nameLocation":"5676:6:34","nodeType":"VariableDeclaration","scope":10251,"src":"5668:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10209,"name":"address","nodeType":"ElementaryTypeName","src":"5668:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10212,"mutability":"mutable","name":"data","nameLocation":"5705:4:34","nodeType":"VariableDeclaration","scope":10251,"src":"5692:17:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10211,"name":"bytes","nodeType":"ElementaryTypeName","src":"5692:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":10214,"mutability":"mutable","name":"value","nameLocation":"5727:5:34","nodeType":"VariableDeclaration","scope":10251,"src":"5719:13:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10213,"name":"uint256","nodeType":"ElementaryTypeName","src":"5719:7:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10216,"mutability":"mutable","name":"errorMessage","nameLocation":"5756:12:34","nodeType":"VariableDeclaration","scope":10251,"src":"5742:26:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10215,"name":"string","nodeType":"ElementaryTypeName","src":"5742:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5658:116:34"},"returnParameters":{"id":10220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10251,"src":"5793:12:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10218,"name":"bytes","nodeType":"ElementaryTypeName","src":"5793:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5792:14:34"},"scope":10427,"src":"5628:448:34","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10267,"nodeType":"Block","src":"6353:97:34","statements":[{"expression":{"arguments":[{"id":10262,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10254,"src":"6389:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10263,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10256,"src":"6397:4:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":10264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6403:39:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":10261,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[10268,10297],"referencedDeclaration":10297,"src":"6370:18:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":10265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6370:73:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":10260,"id":10266,"nodeType":"Return","src":"6363:80:34"}]},"documentation":{"id":10252,"nodeType":"StructuredDocumentation","src":"6082:166:34","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":10268,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6262:18:34","nodeType":"FunctionDefinition","parameters":{"id":10257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10254,"mutability":"mutable","name":"target","nameLocation":"6289:6:34","nodeType":"VariableDeclaration","scope":10268,"src":"6281:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10253,"name":"address","nodeType":"ElementaryTypeName","src":"6281:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10256,"mutability":"mutable","name":"data","nameLocation":"6310:4:34","nodeType":"VariableDeclaration","scope":10268,"src":"6297:17:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10255,"name":"bytes","nodeType":"ElementaryTypeName","src":"6297:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6280:35:34"},"returnParameters":{"id":10260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10268,"src":"6339:12:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10258,"name":"bytes","nodeType":"ElementaryTypeName","src":"6339:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6338:14:34"},"scope":10427,"src":"6253:197:34","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10296,"nodeType":"Block","src":"6792:168:34","statements":[{"assignments":[10281,10283],"declarations":[{"constant":false,"id":10281,"mutability":"mutable","name":"success","nameLocation":"6808:7:34","nodeType":"VariableDeclaration","scope":10296,"src":"6803:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10280,"name":"bool","nodeType":"ElementaryTypeName","src":"6803:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":10283,"mutability":"mutable","name":"returndata","nameLocation":"6830:10:34","nodeType":"VariableDeclaration","scope":10296,"src":"6817:23:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10282,"name":"bytes","nodeType":"ElementaryTypeName","src":"6817:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":10288,"initialValue":{"arguments":[{"id":10286,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10273,"src":"6862:4:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":10284,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10271,"src":"6844:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6851:10:34","memberName":"staticcall","nodeType":"MemberAccess","src":"6844:17:34","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":10287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6844:23:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6802:65:34"},{"expression":{"arguments":[{"id":10290,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10271,"src":"6911:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10291,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10281,"src":"6919:7:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":10292,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10283,"src":"6928:10:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":10293,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10275,"src":"6940:12:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":10289,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10382,"src":"6884:26:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":10294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6884:69:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":10279,"id":10295,"nodeType":"Return","src":"6877:76:34"}]},"documentation":{"id":10269,"nodeType":"StructuredDocumentation","src":"6456:173:34","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":10297,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6643:18:34","nodeType":"FunctionDefinition","parameters":{"id":10276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10271,"mutability":"mutable","name":"target","nameLocation":"6679:6:34","nodeType":"VariableDeclaration","scope":10297,"src":"6671:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10270,"name":"address","nodeType":"ElementaryTypeName","src":"6671:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10273,"mutability":"mutable","name":"data","nameLocation":"6708:4:34","nodeType":"VariableDeclaration","scope":10297,"src":"6695:17:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10272,"name":"bytes","nodeType":"ElementaryTypeName","src":"6695:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":10275,"mutability":"mutable","name":"errorMessage","nameLocation":"6736:12:34","nodeType":"VariableDeclaration","scope":10297,"src":"6722:26:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10274,"name":"string","nodeType":"ElementaryTypeName","src":"6722:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6661:93:34"},"returnParameters":{"id":10279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10297,"src":"6778:12:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10277,"name":"bytes","nodeType":"ElementaryTypeName","src":"6778:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6777:14:34"},"scope":10427,"src":"6634:326:34","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10313,"nodeType":"Block","src":"7236:101:34","statements":[{"expression":{"arguments":[{"id":10308,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10300,"src":"7274:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10309,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10302,"src":"7282:4:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":10310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7288:41:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":10307,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[10314,10343],"referencedDeclaration":10343,"src":"7253:20:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":10311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7253:77:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":10306,"id":10312,"nodeType":"Return","src":"7246:84:34"}]},"documentation":{"id":10298,"nodeType":"StructuredDocumentation","src":"6966:168:34","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":10314,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7148:20:34","nodeType":"FunctionDefinition","parameters":{"id":10303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10300,"mutability":"mutable","name":"target","nameLocation":"7177:6:34","nodeType":"VariableDeclaration","scope":10314,"src":"7169:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10299,"name":"address","nodeType":"ElementaryTypeName","src":"7169:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10302,"mutability":"mutable","name":"data","nameLocation":"7198:4:34","nodeType":"VariableDeclaration","scope":10314,"src":"7185:17:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10301,"name":"bytes","nodeType":"ElementaryTypeName","src":"7185:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7168:35:34"},"returnParameters":{"id":10306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10314,"src":"7222:12:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10304,"name":"bytes","nodeType":"ElementaryTypeName","src":"7222:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7221:14:34"},"scope":10427,"src":"7139:198:34","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10342,"nodeType":"Block","src":"7678:228:34","statements":[{"assignments":[10327,10329],"declarations":[{"constant":false,"id":10327,"mutability":"mutable","name":"success","nameLocation":"7752:7:34","nodeType":"VariableDeclaration","scope":10342,"src":"7747:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10326,"name":"bool","nodeType":"ElementaryTypeName","src":"7747:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":10329,"mutability":"mutable","name":"returndata","nameLocation":"7774:10:34","nodeType":"VariableDeclaration","scope":10342,"src":"7761:23:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10328,"name":"bytes","nodeType":"ElementaryTypeName","src":"7761:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"documentation":"@custom:oz-upgrades-unsafe-allow delegatecall","id":10334,"initialValue":{"arguments":[{"id":10332,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10319,"src":"7808:4:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":10330,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10317,"src":"7788:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7795:12:34","memberName":"delegatecall","nodeType":"MemberAccess","src":"7788:19:34","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":10333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7788:25:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7746:67:34"},{"expression":{"arguments":[{"id":10336,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10317,"src":"7857:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10337,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10327,"src":"7865:7:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":10338,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10329,"src":"7874:10:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":10339,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10321,"src":"7886:12:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":10335,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10382,"src":"7830:26:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":10340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7830:69:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":10325,"id":10341,"nodeType":"Return","src":"7823:76:34"}]},"documentation":{"id":10315,"nodeType":"StructuredDocumentation","src":"7343:175:34","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":10343,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7532:20:34","nodeType":"FunctionDefinition","parameters":{"id":10322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10317,"mutability":"mutable","name":"target","nameLocation":"7570:6:34","nodeType":"VariableDeclaration","scope":10343,"src":"7562:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10316,"name":"address","nodeType":"ElementaryTypeName","src":"7562:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10319,"mutability":"mutable","name":"data","nameLocation":"7599:4:34","nodeType":"VariableDeclaration","scope":10343,"src":"7586:17:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10318,"name":"bytes","nodeType":"ElementaryTypeName","src":"7586:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":10321,"mutability":"mutable","name":"errorMessage","nameLocation":"7627:12:34","nodeType":"VariableDeclaration","scope":10343,"src":"7613:26:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10320,"name":"string","nodeType":"ElementaryTypeName","src":"7613:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7552:93:34"},"returnParameters":{"id":10325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10343,"src":"7664:12:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10323,"name":"bytes","nodeType":"ElementaryTypeName","src":"7664:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7663:14:34"},"scope":10427,"src":"7523:383:34","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10381,"nodeType":"Block","src":"8388:434:34","statements":[{"condition":{"id":10357,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10348,"src":"8402:7:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":10379,"nodeType":"Block","src":"8758:58:34","statements":[{"expression":{"arguments":[{"id":10375,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10350,"src":"8780:10:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":10376,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10352,"src":"8792:12:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":10374,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10426,"src":"8772:7:34","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":10377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8772:33:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10378,"nodeType":"ExpressionStatement","src":"8772:33:34"}]},"id":10380,"nodeType":"IfStatement","src":"8398:418:34","trueBody":{"id":10373,"nodeType":"Block","src":"8411:341:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10358,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10350,"src":"8429:10:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":10359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8440:6:34","memberName":"length","nodeType":"MemberAccess","src":"8429:17:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8450:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8429:22:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10370,"nodeType":"IfStatement","src":"8425:286:34","trueBody":{"id":10369,"nodeType":"Block","src":"8453:258:34","statements":[{"expression":{"arguments":[{"arguments":[{"id":10364,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10346,"src":"8655:6:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10363,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10115,"src":"8644:10:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":10365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8644:18:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":10366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8664:31:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":10362,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8636:7:34","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8636:60:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10368,"nodeType":"ExpressionStatement","src":"8636:60:34"}]}},{"expression":{"id":10371,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10350,"src":"8731:10:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":10356,"id":10372,"nodeType":"Return","src":"8724:17:34"}]}}]},"documentation":{"id":10344,"nodeType":"StructuredDocumentation","src":"7912:277:34","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":10382,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"8203:26:34","nodeType":"FunctionDefinition","parameters":{"id":10353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10346,"mutability":"mutable","name":"target","nameLocation":"8247:6:34","nodeType":"VariableDeclaration","scope":10382,"src":"8239:14:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10345,"name":"address","nodeType":"ElementaryTypeName","src":"8239:7:34","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10348,"mutability":"mutable","name":"success","nameLocation":"8268:7:34","nodeType":"VariableDeclaration","scope":10382,"src":"8263:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10347,"name":"bool","nodeType":"ElementaryTypeName","src":"8263:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":10350,"mutability":"mutable","name":"returndata","nameLocation":"8298:10:34","nodeType":"VariableDeclaration","scope":10382,"src":"8285:23:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10349,"name":"bytes","nodeType":"ElementaryTypeName","src":"8285:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":10352,"mutability":"mutable","name":"errorMessage","nameLocation":"8332:12:34","nodeType":"VariableDeclaration","scope":10382,"src":"8318:26:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10351,"name":"string","nodeType":"ElementaryTypeName","src":"8318:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8229:121:34"},"returnParameters":{"id":10356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10382,"src":"8374:12:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10354,"name":"bytes","nodeType":"ElementaryTypeName","src":"8374:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8373:14:34"},"scope":10427,"src":"8194:628:34","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10405,"nodeType":"Block","src":"9203:135:34","statements":[{"condition":{"id":10394,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10385,"src":"9217:7:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":10403,"nodeType":"Block","src":"9274:58:34","statements":[{"expression":{"arguments":[{"id":10399,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10387,"src":"9296:10:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":10400,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10389,"src":"9308:12:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":10398,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10426,"src":"9288:7:34","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":10401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9288:33:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10402,"nodeType":"ExpressionStatement","src":"9288:33:34"}]},"id":10404,"nodeType":"IfStatement","src":"9213:119:34","trueBody":{"id":10397,"nodeType":"Block","src":"9226:42:34","statements":[{"expression":{"id":10395,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10387,"src":"9247:10:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":10393,"id":10396,"nodeType":"Return","src":"9240:17:34"}]}}]},"documentation":{"id":10383,"nodeType":"StructuredDocumentation","src":"8828:210:34","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":10406,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"9052:16:34","nodeType":"FunctionDefinition","parameters":{"id":10390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10385,"mutability":"mutable","name":"success","nameLocation":"9083:7:34","nodeType":"VariableDeclaration","scope":10406,"src":"9078:12:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10384,"name":"bool","nodeType":"ElementaryTypeName","src":"9078:4:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":10387,"mutability":"mutable","name":"returndata","nameLocation":"9113:10:34","nodeType":"VariableDeclaration","scope":10406,"src":"9100:23:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10386,"name":"bytes","nodeType":"ElementaryTypeName","src":"9100:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":10389,"mutability":"mutable","name":"errorMessage","nameLocation":"9147:12:34","nodeType":"VariableDeclaration","scope":10406,"src":"9133:26:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10388,"name":"string","nodeType":"ElementaryTypeName","src":"9133:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9068:97:34"},"returnParameters":{"id":10393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10406,"src":"9189:12:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10391,"name":"bytes","nodeType":"ElementaryTypeName","src":"9189:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9188:14:34"},"scope":10427,"src":"9043:295:34","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10425,"nodeType":"Block","src":"9427:457:34","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10413,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10408,"src":"9503:10:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":10414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9514:6:34","memberName":"length","nodeType":"MemberAccess","src":"9503:17:34","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9523:1:34","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9503:21:34","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":10423,"nodeType":"Block","src":"9833:45:34","statements":[{"expression":{"arguments":[{"id":10420,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10410,"src":"9854:12:34","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":10419,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9847:6:34","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":10421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9847:20:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10422,"nodeType":"ExpressionStatement","src":"9847:20:34"}]},"id":10424,"nodeType":"IfStatement","src":"9499:379:34","trueBody":{"id":10418,"nodeType":"Block","src":"9526:301:34","statements":[{"AST":{"nativeSrc":"9684:133:34","nodeType":"YulBlock","src":"9684:133:34","statements":[{"nativeSrc":"9702:40:34","nodeType":"YulVariableDeclaration","src":"9702:40:34","value":{"arguments":[{"name":"returndata","nativeSrc":"9731:10:34","nodeType":"YulIdentifier","src":"9731:10:34"}],"functionName":{"name":"mload","nativeSrc":"9725:5:34","nodeType":"YulIdentifier","src":"9725:5:34"},"nativeSrc":"9725:17:34","nodeType":"YulFunctionCall","src":"9725:17:34"},"variables":[{"name":"returndata_size","nativeSrc":"9706:15:34","nodeType":"YulTypedName","src":"9706:15:34","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9770:2:34","nodeType":"YulLiteral","src":"9770:2:34","type":"","value":"32"},{"name":"returndata","nativeSrc":"9774:10:34","nodeType":"YulIdentifier","src":"9774:10:34"}],"functionName":{"name":"add","nativeSrc":"9766:3:34","nodeType":"YulIdentifier","src":"9766:3:34"},"nativeSrc":"9766:19:34","nodeType":"YulFunctionCall","src":"9766:19:34"},{"name":"returndata_size","nativeSrc":"9787:15:34","nodeType":"YulIdentifier","src":"9787:15:34"}],"functionName":{"name":"revert","nativeSrc":"9759:6:34","nodeType":"YulIdentifier","src":"9759:6:34"},"nativeSrc":"9759:44:34","nodeType":"YulFunctionCall","src":"9759:44:34"},"nativeSrc":"9759:44:34","nodeType":"YulExpressionStatement","src":"9759:44:34"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":10408,"isOffset":false,"isSlot":false,"src":"9731:10:34","valueSize":1},{"declaration":10408,"isOffset":false,"isSlot":false,"src":"9774:10:34","valueSize":1}],"id":10417,"nodeType":"InlineAssembly","src":"9675:142:34"}]}}]},"id":10426,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"9353:7:34","nodeType":"FunctionDefinition","parameters":{"id":10411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10408,"mutability":"mutable","name":"returndata","nameLocation":"9374:10:34","nodeType":"VariableDeclaration","scope":10426,"src":"9361:23:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10407,"name":"bytes","nodeType":"ElementaryTypeName","src":"9361:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":10410,"mutability":"mutable","name":"errorMessage","nameLocation":"9400:12:34","nodeType":"VariableDeclaration","scope":10426,"src":"9386:26:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10409,"name":"string","nodeType":"ElementaryTypeName","src":"9386:6:34","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9360:53:34"},"returnParameters":{"id":10412,"nodeType":"ParameterList","parameters":[],"src":"9427:0:34"},"scope":10427,"src":"9344:540:34","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":10428,"src":"611:9275:34","usedErrors":[],"usedEvents":[]}],"src":"101:9786:34"},"id":34},"contracts/upgradeable/EIP712CrossChainUpgradeable.sol":{"ast":{"absolutePath":"contracts/upgradeable/EIP712CrossChainUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1705],"ECDSAUpgradeable":[2452],"EIP712CrossChainUpgradeable":[10538],"Initializable":[665],"MathUpgradeable":[3318],"SignedMathUpgradeable":[3423],"StringsUpgradeable":[2086]},"id":10539,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":10429,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:35"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol","id":10430,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10539,"sourceUnit":2453,"src":"62:85:35","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":10431,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10539,"sourceUnit":666,"src":"148:75:35","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":10433,"name":"Initializable","nameLocations":["947:13:35"],"nodeType":"IdentifierPath","referencedDeclaration":665,"src":"947:13:35"},"id":10434,"nodeType":"InheritanceSpecifier","src":"947:13:35"}],"canonicalName":"EIP712CrossChainUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":10432,"nodeType":"StructuredDocumentation","src":"225:672:35","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n This contract is based on OpenZeppelin's implementation:\n https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/master/contracts/utils/cryptography/EIP712Upgradeable.sol\n NOTE: Modified version that allows to build a domain separator that relies on a different chain id than the chain this\n contract is deployed to. An example use case we want to support is:\n - User A signs a message on chain with id = 1\n - User B executes a method by verifying user A's EIP-712 compliant signature on a chain with id != 1"},"fullyImplemented":true,"id":10538,"linearizedBaseContracts":[10538,665],"name":"EIP712CrossChainUpgradeable","nameLocation":"916:27:35","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":10436,"mutability":"mutable","name":"_HASHED_NAME","nameLocation":"1028:12:35","nodeType":"VariableDeclaration","scope":10538,"src":"1012:28:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10435,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1012:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":10438,"mutability":"mutable","name":"_HASHED_VERSION","nameLocation":"1062:15:35","nodeType":"VariableDeclaration","scope":10538,"src":"1046:31:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10437,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1046:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":true,"id":10443,"mutability":"constant","name":"_TYPE_HASH","nameLocation":"1108:10:35","nodeType":"VariableDeclaration","scope":10538,"src":"1083:107:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1083:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e496429","id":10441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1131:58:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_c2f8787176b8ac6bf7215b4adcc1e069bf4ab82d9ab1df05a57a91d425935b6e","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId)\""},"value":"EIP712Domain(string name,string version,uint256 chainId)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c2f8787176b8ac6bf7215b4adcc1e069bf4ab82d9ab1df05a57a91d425935b6e","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId)\""}],"id":10440,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1121:9:35","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1121:69:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":10458,"nodeType":"Block","src":"1898:55:35","statements":[{"expression":{"arguments":[{"id":10454,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10446,"src":"1932:4:35","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":10455,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10448,"src":"1938:7:35","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":10453,"name":"__EIP712_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10495,"src":"1908:23:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":10456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1908:38:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10457,"nodeType":"ExpressionStatement","src":"1908:38:35"}]},"documentation":{"id":10444,"nodeType":"StructuredDocumentation","src":"1242:559:35","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":10459,"implemented":true,"kind":"function","modifiers":[{"id":10451,"kind":"modifierInvocation","modifierName":{"id":10450,"name":"onlyInitializing","nameLocations":["1881:16:35"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"1881:16:35"},"nodeType":"ModifierInvocation","src":"1881:16:35"}],"name":"__EIP712_init","nameLocation":"1815:13:35","nodeType":"FunctionDefinition","parameters":{"id":10449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10446,"mutability":"mutable","name":"name","nameLocation":"1843:4:35","nodeType":"VariableDeclaration","scope":10459,"src":"1829:18:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10445,"name":"string","nodeType":"ElementaryTypeName","src":"1829:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10448,"mutability":"mutable","name":"version","nameLocation":"1863:7:35","nodeType":"VariableDeclaration","scope":10459,"src":"1849:21:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10447,"name":"string","nodeType":"ElementaryTypeName","src":"1849:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1828:43:35"},"returnParameters":{"id":10452,"nodeType":"ParameterList","parameters":[],"src":"1898:0:35"},"scope":10538,"src":"1806:147:35","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10494,"nodeType":"Block","src":"2061:195:35","statements":[{"assignments":[10469],"declarations":[{"constant":false,"id":10469,"mutability":"mutable","name":"hashedName","nameLocation":"2079:10:35","nodeType":"VariableDeclaration","scope":10494,"src":"2071:18:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10468,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2071:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":10476,"initialValue":{"arguments":[{"arguments":[{"id":10473,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10461,"src":"2108:4:35","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":10472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2102:5:35","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":10471,"name":"bytes","nodeType":"ElementaryTypeName","src":"2102:5:35","typeDescriptions":{}}},"id":10474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2102:11:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10470,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2092:9:35","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:22:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2071:43:35"},{"assignments":[10478],"declarations":[{"constant":false,"id":10478,"mutability":"mutable","name":"hashedVersion","nameLocation":"2132:13:35","nodeType":"VariableDeclaration","scope":10494,"src":"2124:21:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2124:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":10485,"initialValue":{"arguments":[{"arguments":[{"id":10482,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10463,"src":"2164:7:35","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":10481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2158:5:35","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":10480,"name":"bytes","nodeType":"ElementaryTypeName","src":"2158:5:35","typeDescriptions":{}}},"id":10483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2158:14:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10479,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2148:9:35","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2148:25:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2124:49:35"},{"expression":{"id":10488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10486,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10436,"src":"2183:12:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10487,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10469,"src":"2198:10:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2183:25:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10489,"nodeType":"ExpressionStatement","src":"2183:25:35"},{"expression":{"id":10492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10490,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10438,"src":"2218:15:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10491,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10478,"src":"2236:13:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2218:31:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10493,"nodeType":"ExpressionStatement","src":"2218:31:35"}]},"id":10495,"implemented":true,"kind":"function","modifiers":[{"id":10466,"kind":"modifierInvocation","modifierName":{"id":10465,"name":"onlyInitializing","nameLocations":["2044:16:35"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"2044:16:35"},"nodeType":"ModifierInvocation","src":"2044:16:35"}],"name":"__EIP712_init_unchained","nameLocation":"1968:23:35","nodeType":"FunctionDefinition","parameters":{"id":10464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10461,"mutability":"mutable","name":"name","nameLocation":"2006:4:35","nodeType":"VariableDeclaration","scope":10495,"src":"1992:18:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10460,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10463,"mutability":"mutable","name":"version","nameLocation":"2026:7:35","nodeType":"VariableDeclaration","scope":10495,"src":"2012:21:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10462,"name":"string","nodeType":"ElementaryTypeName","src":"2012:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:43:35"},"returnParameters":{"id":10467,"nodeType":"ParameterList","parameters":[],"src":"2061:0:35"},"scope":10538,"src":"1959:297:35","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10513,"nodeType":"Block","src":"2574:103:35","statements":[{"expression":{"arguments":[{"arguments":[{"id":10506,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10443,"src":"2612:10:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10507,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10436,"src":"2624:12:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10508,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10438,"src":"2638:15:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10509,"name":"originChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10498,"src":"2655:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10504,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2601:3:35","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2605:6:35","memberName":"encode","nodeType":"MemberAccess","src":"2601:10:35","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":10510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2601:68:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10503,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2591:9:35","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2591:79:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":10502,"id":10512,"nodeType":"Return","src":"2584:86:35"}]},"documentation":{"id":10496,"nodeType":"StructuredDocumentation","src":"2262:224:35","text":" @dev Returns the domain separator depending on the `originChainId`.\n @param originChainId Chain id of network where message originates from.\n @return bytes32 EIP-712-compliant domain separator."},"id":10514,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"2500:18:35","nodeType":"FunctionDefinition","parameters":{"id":10499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10498,"mutability":"mutable","name":"originChainId","nameLocation":"2527:13:35","nodeType":"VariableDeclaration","scope":10514,"src":"2519:21:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10497,"name":"uint256","nodeType":"ElementaryTypeName","src":"2519:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2518:23:35"},"returnParameters":{"id":10502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10514,"src":"2565:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10500,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2565:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2564:9:35"},"scope":10538,"src":"2491:186:35","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":10532,"nodeType":"Block","src":"3739:103:35","statements":[{"expression":{"arguments":[{"arguments":[{"id":10527,"name":"originChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10519,"src":"3808:13:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10526,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10514,"src":"3789:18:35","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view returns (bytes32)"}},"id":10528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3789:33:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10529,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10517,"src":"3824:10:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":10524,"name":"ECDSAUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"3756:16:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSAUpgradeable_$2452_$","typeString":"type(library ECDSAUpgradeable)"}},"id":10525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3773:15:35","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":2431,"src":"3756:32:35","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":10530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3756:79:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":10523,"id":10531,"nodeType":"Return","src":"3749:86:35"}]},"documentation":{"id":10515,"nodeType":"StructuredDocumentation","src":"2683:942:35","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 structHash = keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n ));\n bytes32 digest = _hashTypedDataV4(structHash, originChainId);\n address signer = ECDSA.recover(digest, signature);\n ```\n @param structHash Hashed struct as defined in https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct.\n @param originChainId Chain id of network where message originates from.\n @return bytes32 Hash digest that is recoverable via `EDCSA.recover`."},"id":10533,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"3639:16:35","nodeType":"FunctionDefinition","parameters":{"id":10520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10517,"mutability":"mutable","name":"structHash","nameLocation":"3664:10:35","nodeType":"VariableDeclaration","scope":10533,"src":"3656:18:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10516,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3656:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":10519,"mutability":"mutable","name":"originChainId","nameLocation":"3684:13:35","nodeType":"VariableDeclaration","scope":10533,"src":"3676:21:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10518,"name":"uint256","nodeType":"ElementaryTypeName","src":"3676:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3655:43:35"},"returnParameters":{"id":10523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10533,"src":"3730:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3730:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3729:9:35"},"scope":10538,"src":"3630:212:35","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"id":10537,"mutability":"mutable","name":"__gap","nameLocation":"4177:5:35","nodeType":"VariableDeclaration","scope":10538,"src":"4155:27:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$1000_storage","typeString":"uint256[1000]"},"typeName":{"baseType":{"id":10534,"name":"uint256","nodeType":"ElementaryTypeName","src":"4155:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10536,"length":{"hexValue":"31303030","id":10535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:4:35","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"nodeType":"ArrayTypeName","src":"4155:13:35","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$1000_storage_ptr","typeString":"uint256[1000]"}},"visibility":"private"}],"scope":10539,"src":"898:3287:35","usedErrors":[],"usedEvents":[511]}],"src":"37:4149:35"},"id":35},"contracts/upgradeable/MultiCallerUpgradeable.sol":{"ast":{"absolutePath":"contracts/upgradeable/MultiCallerUpgradeable.sol","exportedSymbols":{"MultiCallerUpgradeable":[10632]},"id":10633,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":10540,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:36"},{"abstract":false,"baseContracts":[],"canonicalName":"MultiCallerUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":10541,"nodeType":"StructuredDocumentation","src":"62:411:36","text":" @title MultiCallerUpgradeable\n @notice Logic is 100% copied from \"@uma/core/contracts/common/implementation/MultiCaller.sol\" but one\n comment is added to clarify why we allow delegatecall() in this contract, which is typically unsafe for use in\n upgradeable implementation contracts.\n @dev See https://docs.openzeppelin.com/upgrades-plugins/1.x/faq#delegatecall-selfdestruct for more details."},"fullyImplemented":true,"id":10632,"linearizedBaseContracts":[10632],"name":"MultiCallerUpgradeable","nameLocation":"483:22:36","nodeType":"ContractDefinition","nodes":[{"body":{"id":10547,"nodeType":"Block","src":"584:24:36","statements":[]},"id":10548,"implemented":true,"kind":"function","modifiers":[],"name":"_validateMulticallData","nameLocation":"521:22:36","nodeType":"FunctionDefinition","parameters":{"id":10545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10544,"mutability":"mutable","name":"data","nameLocation":"561:4:36","nodeType":"VariableDeclaration","scope":10548,"src":"544:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":10542,"name":"bytes","nodeType":"ElementaryTypeName","src":"544:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":10543,"nodeType":"ArrayTypeName","src":"544:7:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"543:23:36"},"returnParameters":{"id":10546,"nodeType":"ParameterList","parameters":[],"src":"584:0:36"},"scope":10632,"src":"512:96:36","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10626,"nodeType":"Block","src":"698:1396:36","statements":[{"expression":{"arguments":[{"id":10558,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10551,"src":"731:4:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"id":10557,"name":"_validateMulticallData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10548,"src":"708:22:36","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr_$returns$__$","typeString":"function (bytes calldata[] calldata)"}},"id":10559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"708:28:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10560,"nodeType":"ExpressionStatement","src":"708:28:36"},{"expression":{"id":10568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10561,"name":"results","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10555,"src":"747:7:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":10565,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10551,"src":"769:4:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":10566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"774:6:36","memberName":"length","nodeType":"MemberAccess","src":"769:11:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"757:11:36","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":10562,"name":"bytes","nodeType":"ElementaryTypeName","src":"761:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":10563,"nodeType":"ArrayTypeName","src":"761:7:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":10567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"757:24:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"747:34:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":10569,"nodeType":"ExpressionStatement","src":"747:34:36"},{"body":{"id":10624,"nodeType":"Block","src":"877:1170:36","statements":[{"assignments":[10582,10584],"declarations":[{"constant":false,"id":10582,"mutability":"mutable","name":"success","nameLocation":"1512:7:36","nodeType":"VariableDeclaration","scope":10624,"src":"1507:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10581,"name":"bool","nodeType":"ElementaryTypeName","src":"1507:4:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":10584,"mutability":"mutable","name":"result","nameLocation":"1534:6:36","nodeType":"VariableDeclaration","scope":10624,"src":"1521:19:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10583,"name":"bytes","nodeType":"ElementaryTypeName","src":"1521:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"documentation":"@custom:oz-upgrades-unsafe-allow delegatecall","id":10594,"initialValue":{"arguments":[{"baseExpression":{"id":10590,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10551,"src":"1571:4:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":10592,"indexExpression":{"id":10591,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10571,"src":"1576:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1571:7:36","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"id":10587,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1552:4:36","typeDescriptions":{"typeIdentifier":"t_contract$_MultiCallerUpgradeable_$10632","typeString":"contract MultiCallerUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MultiCallerUpgradeable_$10632","typeString":"contract MultiCallerUpgradeable"}],"id":10586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1544:7:36","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10585,"name":"address","nodeType":"ElementaryTypeName","src":"1544:7:36","typeDescriptions":{}}},"id":10588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1544:13:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1558:12:36","memberName":"delegatecall","nodeType":"MemberAccess","src":"1544:26:36","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":10593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1544:35:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1506:73:36"},{"condition":{"id":10596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1648:8:36","subExpression":{"id":10595,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10582,"src":"1649:7:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10617,"nodeType":"IfStatement","src":"1644:359:36","trueBody":{"id":10616,"nodeType":"Block","src":"1658:345:36","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10597,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10584,"src":"1760:6:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":10598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1767:6:36","memberName":"length","nodeType":"MemberAccess","src":"1760:13:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3638","id":10599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1776:2:36","typeDescriptions":{"typeIdentifier":"t_rational_68_by_1","typeString":"int_const 68"},"value":"68"},"src":"1760:18:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10604,"nodeType":"IfStatement","src":"1756:32:36","trueBody":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10601,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1780:6:36","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":10602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1780:8:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10603,"nodeType":"ExpressionStatement","src":"1780:8:36"}},{"AST":{"nativeSrc":"1868:67:36","nodeType":"YulBlock","src":"1868:67:36","statements":[{"nativeSrc":"1890:27:36","nodeType":"YulAssignment","src":"1890:27:36","value":{"arguments":[{"name":"result","nativeSrc":"1904:6:36","nodeType":"YulIdentifier","src":"1904:6:36"},{"kind":"number","nativeSrc":"1912:4:36","nodeType":"YulLiteral","src":"1912:4:36","type":"","value":"0x04"}],"functionName":{"name":"add","nativeSrc":"1900:3:36","nodeType":"YulIdentifier","src":"1900:3:36"},"nativeSrc":"1900:17:36","nodeType":"YulFunctionCall","src":"1900:17:36"},"variableNames":[{"name":"result","nativeSrc":"1890:6:36","nodeType":"YulIdentifier","src":"1890:6:36"}]}]},"evmVersion":"shanghai","externalReferences":[{"declaration":10584,"isOffset":false,"isSlot":false,"src":"1890:6:36","valueSize":1},{"declaration":10584,"isOffset":false,"isSlot":false,"src":"1904:6:36","valueSize":1}],"id":10605,"nodeType":"InlineAssembly","src":"1859:76:36"},{"expression":{"arguments":[{"arguments":[{"id":10609,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10584,"src":"1970:6:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":10611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1979:6:36","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":10610,"name":"string","nodeType":"ElementaryTypeName","src":"1979:6:36","typeDescriptions":{}}}],"id":10612,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1978:8:36","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"}],"expression":{"id":10607,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1959:3:36","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1963:6:36","memberName":"decode","nodeType":"MemberAccess","src":"1959:10:36","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":10613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1959:28:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":10606,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1952:6:36","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":10614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1952:36:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10615,"nodeType":"ExpressionStatement","src":"1952:36:36"}]}},{"expression":{"id":10622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10618,"name":"results","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10555,"src":"2017:7:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":10620,"indexExpression":{"id":10619,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10571,"src":"2025:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2017:10:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10621,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10584,"src":"2030:6:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"2017:19:36","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":10623,"nodeType":"ExpressionStatement","src":"2017:19:36"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10574,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10571,"src":"855:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":10575,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10551,"src":"859:4:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":10576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"864:6:36","memberName":"length","nodeType":"MemberAccess","src":"859:11:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"855:15:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10625,"initializationExpression":{"assignments":[10571],"declarations":[{"constant":false,"id":10571,"mutability":"mutable","name":"i","nameLocation":"848:1:36","nodeType":"VariableDeclaration","scope":10625,"src":"840:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10570,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10573,"initialValue":{"hexValue":"30","id":10572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"852:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"840:13:36"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":10579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"872:3:36","subExpression":{"id":10578,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10571,"src":"872:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10580,"nodeType":"ExpressionStatement","src":"872:3:36"},"nodeType":"ForStatement","src":"835:1212:36"}]},"functionSelector":"ac9650d8","id":10627,"implemented":true,"kind":"function","modifiers":[],"name":"multicall","nameLocation":"623:9:36","nodeType":"FunctionDefinition","parameters":{"id":10552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10551,"mutability":"mutable","name":"data","nameLocation":"650:4:36","nodeType":"VariableDeclaration","scope":10627,"src":"633:21:36","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":10549,"name":"bytes","nodeType":"ElementaryTypeName","src":"633:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":10550,"nodeType":"ArrayTypeName","src":"633:7:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"632:23:36"},"returnParameters":{"id":10556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10555,"mutability":"mutable","name":"results","nameLocation":"689:7:36","nodeType":"VariableDeclaration","scope":10627,"src":"674:22:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":10553,"name":"bytes","nodeType":"ElementaryTypeName","src":"674:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":10554,"nodeType":"ArrayTypeName","src":"674:7:36","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"673:24:36"},"scope":10632,"src":"614:1480:36","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"constant":false,"id":10631,"mutability":"mutable","name":"__gap","nameLocation":"2428:5:36","nodeType":"VariableDeclaration","scope":10632,"src":"2406:27:36","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$1000_storage","typeString":"uint256[1000]"},"typeName":{"baseType":{"id":10628,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10630,"length":{"hexValue":"31303030","id":10629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2414:4:36","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"nodeType":"ArrayTypeName","src":"2406:13:36","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$1000_storage_ptr","typeString":"uint256[1000]"}},"visibility":"private"}],"scope":10633,"src":"474:1962:36","usedErrors":[],"usedEvents":[]}],"src":"37:2400:36"},"id":36}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"IERC1967Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":\"IERC1967Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"IERC1822ProxiableUpgradeable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":\"IERC1822ProxiableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ERC1967UpgradeUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":\"ERC1967UpgradeUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"IBeaconUpgradeable":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":\"IBeaconUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d\",\"dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"ReentrancyGuardUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"IERC20Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol":{"IERC20PermitUpgradeable":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":\"IERC20PermitUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce6e5ae4633559c2aad156be884a96f7a9beb8dd31b1b630a6de55972e3af622\",\"dweb:/ipfs/QmQasz4sQoexkrvB7wCQAY6NbMoCtPS7AqomymRoJGYz85\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol":{"SafeERC20Upgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220b4fff70822e4db7057c500d82d4b61715cebf99c8c35292ce4669c272a3fba4e64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 SELFDESTRUCT 0xF7 ADDMOD 0x22 0xE4 0xDB PUSH17 0x57C500D82D4B61715CEBF99C8C35292CE4 PUSH7 0x9C272A3FBA4E64 PUSH20 0x6F6C634300081700330000000000000000000000 ","sourceMap":"734:6366:10:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220b4fff70822e4db7057c500d82d4b61715cebf99c8c35292ce4669c272a3fba4e64736f6c63430008170033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 SELFDESTRUCT 0xF7 ADDMOD 0x22 0xE4 0xDB PUSH17 0x57C500D82D4B61715CEBF99C8C35292CE4 PUSH7 0x9C272A3FBA4E64 PUSH20 0x6F6C634300081700330000000000000000000000 ","sourceMap":"734:6366:10:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":\"SafeERC20Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce6e5ae4633559c2aad156be884a96f7a9beb8dd31b1b630a6de55972e3af622\",\"dweb:/ipfs/QmQasz4sQoexkrvB7wCQAY6NbMoCtPS7AqomymRoJGYz85\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x23b997be73d3dd46885262704f0f8cfc7273fdadfe303d37969a9561373972b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d03ebe5406134f0c4a017dee625ff615031194493bd1e88504e5c8fae55bc166\",\"dweb:/ipfs/QmUZV5bMbgk2PAkV3coouSeSainHN2jhqaQDJaA7hQRyu2\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122034ad361867c496ef943db463133d184b04bd65c69f33537c5c1f1ad1c566b4f864736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0xAD CALLDATASIZE XOR PUSH8 0xC496EF943DB46313 RETURNDATASIZE XOR 0x4B DIV 0xBD PUSH6 0xC69F33537C5C 0x1F BYTE 0xD1 0xC5 PUSH7 0xB4F864736F6C63 NUMBER STOP ADDMOD OR STOP CALLER ","sourceMap":"194:9180:11:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea264697066735822122034ad361867c496ef943db463133d184b04bd65c69f33537c5c1f1ad1c566b4f864736f6c63430008170033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0xAD CALLDATASIZE XOR PUSH8 0xC496EF943DB46313 RETURNDATASIZE XOR 0x4B DIV 0xBD PUSH6 0xC69F33537C5C 0x1F BYTE 0xD1 0xC5 PUSH7 0xB4F864736F6C63 NUMBER STOP ADDMOD OR STOP CALLER ","sourceMap":"194:9180:11:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"StorageSlotUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220bfc92ad8602d831c0d497d1c4058a1ea45cef5984e06aa3a41c481c1f7d7a62e64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0xC9 0x2A 0xD8 PUSH1 0x2D DUP4 SHR 0xD 0x49 PUSH30 0x1C4058A1EA45CEF5984E06AA3A41C481C1F7D7A62E64736F6C6343000817 STOP CALLER ","sourceMap":"1420:2696:13:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220bfc92ad8602d831c0d497d1c4058a1ea45cef5984e06aa3a41c481c1f7d7a62e64736f6c63430008170033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0xC9 0x2A 0xD8 PUSH1 0x2D DUP4 SHR 0xD 0x49 PUSH30 0x1C4058A1EA45CEF5984E06AA3A41C481C1F7D7A62E64736F6C6343000817 STOP CALLER ","sourceMap":"1420:2696:13:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":\"StorageSlotUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"StringsUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220f0ae193b282465af358c1c10b7ff751d7743ac890f7b8f841a1c153e316c218364736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE 0xAE NOT EXTCODESIZE 0x28 0x24 PUSH6 0xAF358C1C10B7 SELFDESTRUCT PUSH22 0x1D7743AC890F7B8F841A1C153E316C218364736F6C63 NUMBER STOP ADDMOD OR STOP CALLER ","sourceMap":"242:2603:14:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220f0ae193b282465af358c1c10b7ff751d7743ac890f7b8f841a1c153e316c218364736f6c63430008170033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE 0xAE NOT EXTCODESIZE 0x28 0x24 PUSH6 0xAF358C1C10B7 SELFDESTRUCT PUSH22 0x1D7743AC890F7B8F841A1C153E316C218364736F6C63 NUMBER STOP ADDMOD OR STOP CALLER ","sourceMap":"242:2603:14:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":\"StringsUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":{"ECDSAUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220b09dfbe2c89be104dbb06c8fc6ae8684693aa741208e49f8e9c5d250f94250ca64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 SWAP14 0xFB 0xE2 0xC8 SWAP12 0xE1 DIV 0xDB 0xB0 PUSH13 0x8FC6AE8684693AA741208E49F8 0xE9 0xC5 0xD2 POP 0xF9 TIMESTAMP POP 0xCA PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"380:8783:15:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220b09dfbe2c89be104dbb06c8fc6ae8684693aa741208e49f8e9c5d250f94250ca64736f6c63430008170033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 SWAP14 0xFB 0xE2 0xC8 SWAP12 0xE1 DIV 0xDB 0xB0 PUSH13 0x8FC6AE8684693AA741208E49F8 0xE9 0xC5 0xD2 POP 0xF9 TIMESTAMP POP 0xCA PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"380:8783:15:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":\"ECDSAUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c\",\"dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"MathUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220a4e61a9fc57e592b131356a53f31b6ad368554e84e767421a81f7edb816d0a8564736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 0xE6 BYTE SWAP16 0xC5 PUSH31 0x592B131356A53F31B6AD368554E84E767421A81F7EDB816D0A8564736F6C63 NUMBER STOP ADDMOD OR STOP CALLER ","sourceMap":"202:12593:16:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220a4e61a9fc57e592b131356a53f31b6ad368554e84e767421a81f7edb816d0a8564736f6c63430008170033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 0xE6 BYTE SWAP16 0xC5 PUSH31 0x592B131356A53F31B6AD368554E84E767421A81F7EDB816D0A8564736F6C63 NUMBER STOP ADDMOD OR STOP CALLER ","sourceMap":"202:12593:16:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":\"MathUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol":{"SignedMathUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212204988608b36c333f9cd1e8ad4e02c7edb31a87ded2129a55bbcb9e71e11bc7e7564736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 DUP9 PUSH1 0x8B CALLDATASIZE 0xC3 CALLER 0xF9 0xCD 0x1E DUP11 0xD4 0xE0 0x2C PUSH31 0xDB31A87DED2129A55BBCB9E71E11BC7E7564736F6C63430008170033000000 ","sourceMap":"215:1058:17:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea26469706673582212204988608b36c333f9cd1e8ad4e02c7edb31a87ded2129a55bbcb9e71e11bc7e7564736f6c63430008170033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 DUP9 PUSH1 0x8B CALLDATASIZE 0xC3 CALLER 0xF9 0xCD 0x1E DUP11 0xD4 0xE0 0x2C PUSH31 0xDB31A87DED2129A55BBCB9E71E11BC7E7564736F6C63430008170033000000 ","sourceMap":"215:1058:17:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":\"SignedMathUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1271.sol":{"IERC1271":{"abi":[{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"magicValue","type":"bytes4"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"isValidSignature(bytes32,bytes)":"1626ba7e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":\"IERC1271\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212200cb1c5c9953ff0352f2fc918f3e69013b10c70e1c5304f8c93a23d100b3c3c2d64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xB1 0xC5 0xC9 SWAP6 EXTCODEHASH CREATE CALLDATALOAD 0x2F 0x2F 0xC9 XOR RETURN 0xE6 SWAP1 SGT 0xB1 0xC PUSH17 0xE1C5304F8C93A23D100B3C3C2D64736F6C PUSH4 0x43000817 STOP CALLER ","sourceMap":"220:2559:20:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea26469706673582212200cb1c5c9953ff0352f2fc918f3e69013b10c70e1c5304f8c93a23d100b3c3c2d64736f6c63430008170033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xB1 0xC5 0xC9 SWAP6 EXTCODEHASH CREATE CALLDATALOAD 0x2F 0x2F 0xC9 XOR RETURN 0xE6 SWAP1 SGT 0xB1 0xC PUSH17 0xE1C5304F8C93A23D100B3C3C2D64736F6C PUSH4 0x43000817 STOP CALLER ","sourceMap":"220:2559:20:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122064c1b142a3b668d7585cc262e49a739b126a70b242b3f3851c5285854681c24a64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0xC1B142A3B6 PUSH9 0xD7585CC262E49A739B SLT PUSH11 0x70B242B3F3851C52858546 DUP2 0xC2 0x4A PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"369:8761:21:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea264697066735822122064c1b142a3b668d7585cc262e49a739b126a70b242b3f3851c5285854681c24a64736f6c63430008170033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0xC1B142A3B6 PUSH9 0xD7585CC262E49A739B SLT PUSH11 0x70B242B3F3851C52858546 DUP2 0xC2 0x4A PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"369:8761:21:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212209b44022892df06f064133bdb76bc5a81a9c8e28ffa64ab501d8496e01cf3fc9c64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 PREVRANDAO MUL 0x28 SWAP3 0xDF MOD CREATE PUSH5 0x133BDB76BC GAS DUP2 0xA9 0xC8 0xE2 DUP16 STATICCALL PUSH5 0xAB501D8496 0xE0 SHR RETURN 0xFC SWAP13 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"802:8819:22:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea26469706673582212209b44022892df06f064133bdb76bc5a81a9c8e28ffa64ab501d8496e01cf3fc9c64736f6c63430008170033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 PREVRANDAO MUL 0x28 SWAP3 0xDF MOD CREATE PUSH5 0x133BDB76BC GAS DUP2 0xA9 0xC8 0xE2 DUP16 STATICCALL PUSH5 0xAB501D8496 0xE0 SHR RETURN 0xFC SWAP13 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"802:8819:22:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates merkle trees that are safe against this attack out of the box.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol":{"SignatureChecker":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212209d329fcfccefc5fb6b9c2d18571899790642ef77def09b856f13282d6469a80c64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 ORIGIN SWAP16 0xCF 0xCC 0xEF 0xC5 0xFB PUSH12 0x9C2D18571899790642EF77DE CREATE SWAP12 DUP6 PUSH16 0x13282D6469A80C64736F6C6343000817 STOP CALLER ","sourceMap":"506:1755:23:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea26469706673582212209d329fcfccefc5fb6b9c2d18571899790642ef77def09b856f13282d6469a80c64736f6c63430008170033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 ORIGIN SWAP16 0xCF 0xCC 0xEF 0xC5 0xFB PUSH12 0x9C2D18571899790642EF77DE CREATE SWAP12 DUP6 PUSH16 0x13282D6469A80C64736F6C6343000817 STOP CALLER ","sourceMap":"506:1755:23:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like Argent and Gnosis Safe. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":\"SignatureChecker\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x3af3ca86df39aac39a0514c84459d691434a108d2151c8ce9d69f32e315cab80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77d1f1cf302cd5e1dfbbb4ce3b281b28e8c52942d4319fce43df2e1b6f02a52d\",\"dweb:/ipfs/QmT6ZXStmK3Knhh9BokeVHQ9HXTBZNgL3Eb1ar1cYg1hWy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212203c8540daf027d27c848414321acbd26de47f4fe2af9d74fd7998be2b9601553964736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY DUP6 BLOCKHASH 0xDA CREATE 0x27 0xD2 PUSH29 0x848414321ACBD26DE47F4FE2AF9D74FD7998BE2B9601553964736F6C63 NUMBER STOP ADDMOD OR STOP CALLER ","sourceMap":"202:12582:24:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea26469706673582212203c8540daf027d27c848414321acbd26de47f4fe2af9d74fd7998be2b9601553964736f6c63430008170033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY DUP6 BLOCKHASH 0xDA CREATE 0x27 0xD2 PUSH29 0x848414321ACBD26DE47F4FE2AF9D74FD7998BE2B9601553964736F6C63 NUMBER STOP ADDMOD OR STOP CALLER ","sourceMap":"202:12582:24:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212206ccf7cf9e35b5b5cf171ad36bff292b3f14e494bde6b0317a1bd616433512eaa64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0xCF7CF9E35B5B5CF171AD36BFF2 SWAP3 0xB3 CALL 0x4E 0x49 0x4B 0xDE PUSH12 0x317A1BD616433512EAA6473 PUSH16 0x6C634300081700330000000000000000 ","sourceMap":"215:1047:25:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea26469706673582212206ccf7cf9e35b5b5cf171ad36bff292b3f14e494bde6b0317a1bd616433512eaa64736f6c63430008170033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0xCF7CF9E35B5B5CF171AD36BFF2 SWAP3 0xB3 CALL 0x4E 0x49 0x4B 0xDE PUSH12 0x317A1BD616433512EAA6473 PUSH16 0x6C634300081700330000000000000000 ","sourceMap":"215:1047:25:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/MerkleLib.sol":{"MerkleLib":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220cd0d3e4fde1e97eec64d8a53394d36c5ae8e1c15030c9a3cb43220a995a14ce964736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xD RETURNDATACOPY 0x4F 0xDE 0x1E SWAP8 0xEE 0xC6 0x4D DUP11 MSTORE8 CODECOPY 0x4D CALLDATASIZE 0xC5 0xAE DUP15 SHR ISZERO SUB 0xC SWAP11 EXTCODECOPY 0xB4 ORIGIN KECCAK256 0xA9 SWAP6 LOG1 0x4C 0xE9 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"345:4692:26:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220cd0d3e4fde1e97eec64d8a53394d36c5ae8e1c15030c9a3cb43220a995a14ce964736f6c63430008170033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xD RETURNDATACOPY 0x4F 0xDE 0x1E SWAP8 0xEE 0xC6 0x4D DUP11 MSTORE8 CODECOPY 0x4D CALLDATASIZE 0xC5 0xAE DUP15 SHR ISZERO SUB 0xC SWAP11 EXTCODECOPY 0xB4 ORIGIN KECCAK256 0xA9 SWAP6 LOG1 0x4C 0xE9 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"345:4692:26:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Library to help with merkle roots, proofs, and claims.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MerkleLib.sol\":\"MerkleLib\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"contracts/MerkleLib.sol\":{\"keccak256\":\"0x8c5c0ae815ea4b121a6afcf163c7b8b0de18212db1228350f89fa5dd0bb54365\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c1eb160f6b614d6721c0ab8e6149ff192cab1768ee266cb1941c5c1a7d304675\",\"dweb:/ipfs/QmYwowK4FzZXwoZS4TvwLQD77Gk66eWKZpg2ETUpXfrN7X\"]},\"contracts/interfaces/HubPoolInterface.sol\":{\"keccak256\":\"0xefd509ab379b94004b5767d67971e5c0bda4ca1e9f376b5aea75a0297b5d7bd6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0b7e509e90bcca9b96bf55e92498b17bbb548359c470b17285740080a6c0d9de\",\"dweb:/ipfs/QmdviQBbB58H9HR3tKQepEuYcMKXZthyTThGXUgQDAC828\"]},\"contracts/interfaces/SpokePoolInterface.sol\":{\"keccak256\":\"0x5089df2f8d40f9afad742d059966a34a42fae5dd61ab9274585d303ca4bb6489\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://46f884dee4c3de680f45f66a5b2a34b41423ac818a736d5c108eb334f0fdf411\",\"dweb:/ipfs/QmdNJ2w2CEGkHv2rS4vYKNNdPjZALtCPJf4sQKzRW3ARzd\"]},\"contracts/interfaces/V3SpokePoolInterface.sol\":{\"keccak256\":\"0xdd33112f0dc8f8462307cda7d7753cb9be49cd209b6520abd69273ac015f7ab6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://211c34424710bc8a4ab41bf00bdd9df32e139642a3007a7bbe1e60020f943d2f\",\"dweb:/ipfs/QmYVM5c84V4iqKy734Sjq4TFKMJyJ3cQLHB2Katz1pTBZz\"]}},\"version\":1}"}},"contracts/SpokePool.sol":{"AcrossMessageHandler":{"abi":[{"inputs":[{"internalType":"address","name":"tokenSent","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bool","name":"fillCompleted","type":"bool"},{"internalType":"address","name":"relayer","type":"address"},{"internalType":"bytes","name":"message","type":"bytes"}],"name":"handleAcrossMessage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenSent","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"relayer","type":"address"},{"internalType":"bytes","name":"message","type":"bytes"}],"name":"handleV3AcrossMessage","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"handleAcrossMessage(address,uint256,bool,address,bytes)":"0ea1f938","handleV3AcrossMessage(address,uint256,address,bytes)":"3a5be8cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenSent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"fillCompleted\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"handleAcrossMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenSent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"handleV3AcrossMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"handleAcrossMessage(address,uint256,bool,address,bytes)\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SpokePool.sol\":\"AcrossMessageHandler\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d\",\"dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce6e5ae4633559c2aad156be884a96f7a9beb8dd31b1b630a6de55972e3af622\",\"dweb:/ipfs/QmQasz4sQoexkrvB7wCQAY6NbMoCtPS7AqomymRoJGYz85\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x23b997be73d3dd46885262704f0f8cfc7273fdadfe303d37969a9561373972b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d03ebe5406134f0c4a017dee625ff615031194493bd1e88504e5c8fae55bc166\",\"dweb:/ipfs/QmUZV5bMbgk2PAkV3coouSeSainHN2jhqaQDJaA7hQRyu2\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c\",\"dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x3af3ca86df39aac39a0514c84459d691434a108d2151c8ce9d69f32e315cab80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77d1f1cf302cd5e1dfbbb4ce3b281b28e8c52942d4319fce43df2e1b6f02a52d\",\"dweb:/ipfs/QmT6ZXStmK3Knhh9BokeVHQ9HXTBZNgL3Eb1ar1cYg1hWy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/MerkleLib.sol\":{\"keccak256\":\"0x8c5c0ae815ea4b121a6afcf163c7b8b0de18212db1228350f89fa5dd0bb54365\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c1eb160f6b614d6721c0ab8e6149ff192cab1768ee266cb1941c5c1a7d304675\",\"dweb:/ipfs/QmYwowK4FzZXwoZS4TvwLQD77Gk66eWKZpg2ETUpXfrN7X\"]},\"contracts/SpokePool.sol\":{\"keccak256\":\"0xff57c2345270680bac0b9e63923771bb18b22cadb068966063186f3484e7dfbf\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d4b378a773e5def3724b183cd1007ff80072736988f7d05490968a4378ec0c8c\",\"dweb:/ipfs/QmQp4rJn1WrDyFAY3xprQN6qzXtKmWfNraVTNmqXY2EWZG\"]},\"contracts/external/interfaces/WETH9Interface.sol\":{\"keccak256\":\"0x3f7892554ec7f54681fdd3cc18a41346c246c9c1afba016c52990ef77741f718\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://76e901f8da798eb2fdef8fd0083a51088103269f08ee751598c5a6eba407785f\",\"dweb:/ipfs/QmcAHbwbwCZd78teaK4cHuAvXq71aWX1r9vTGkSRRBDJV1\"]},\"contracts/interfaces/HubPoolInterface.sol\":{\"keccak256\":\"0xefd509ab379b94004b5767d67971e5c0bda4ca1e9f376b5aea75a0297b5d7bd6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0b7e509e90bcca9b96bf55e92498b17bbb548359c470b17285740080a6c0d9de\",\"dweb:/ipfs/QmdviQBbB58H9HR3tKQepEuYcMKXZthyTThGXUgQDAC828\"]},\"contracts/interfaces/SpokePoolInterface.sol\":{\"keccak256\":\"0x5089df2f8d40f9afad742d059966a34a42fae5dd61ab9274585d303ca4bb6489\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://46f884dee4c3de680f45f66a5b2a34b41423ac818a736d5c108eb334f0fdf411\",\"dweb:/ipfs/QmdNJ2w2CEGkHv2rS4vYKNNdPjZALtCPJf4sQKzRW3ARzd\"]},\"contracts/interfaces/V3SpokePoolInterface.sol\":{\"keccak256\":\"0xdd33112f0dc8f8462307cda7d7753cb9be49cd209b6520abd69273ac015f7ab6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://211c34424710bc8a4ab41bf00bdd9df32e139642a3007a7bbe1e60020f943d2f\",\"dweb:/ipfs/QmYVM5c84V4iqKy734Sjq4TFKMJyJ3cQLHB2Katz1pTBZz\"]},\"contracts/upgradeable/AddressLibUpgradeable.sol\":{\"keccak256\":\"0xa1d6d9ca58e205e006ccc259e5145690677edaa207432d290d5e1b827b5fc689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://395952d23c2b5dee1d77efbbbf42e55dfce42d838b91c72b851786c80e688f5e\",\"dweb:/ipfs/QmQUK3xeSAydtVYRgPmt2FNzXNjbtHmdCVD61mph1tegfg\"]},\"contracts/upgradeable/EIP712CrossChainUpgradeable.sol\":{\"keccak256\":\"0x16181b3f6d12da34b64997235be59ca9e8d189dff99477b0dd828510f1f6e2e6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b4dee85f34d6d6b796943c8ee959abf51b3656d56a24b4f87e4a966aa5f8d4e6\",\"dweb:/ipfs/QmQrc885RFzLDELLHaEm4mPoXKKWw7WumtfwBfkKV5wZxa\"]},\"contracts/upgradeable/MultiCallerUpgradeable.sol\":{\"keccak256\":\"0x5991e43af9a1389be25119b0e38ce974ae5ba9644b0a3833a2ec95d91f792cb9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b64e97cab30636c478421fcdba771f0fdaeaf390d237e311f44ae513215926db\",\"dweb:/ipfs/QmXFDXm8KijimPvnU7V97N1m2H3SUKat7JHFuL7dfTUJtY\"]}},\"version\":1}"},"SpokePool":{"abi":[{"inputs":[],"name":"ClaimedMerkleLeaf","type":"error"},{"inputs":[],"name":"DisabledRoute","type":"error"},{"inputs":[],"name":"ExpiredFillDeadline","type":"error"},{"inputs":[],"name":"InvalidChainId","type":"error"},{"inputs":[],"name":"InvalidExclusiveRelayer","type":"error"},{"inputs":[],"name":"InvalidExclusivityDeadline","type":"error"},{"inputs":[],"name":"InvalidFillDeadline","type":"error"},{"inputs":[],"name":"InvalidMerkleLeaf","type":"error"},{"inputs":[],"name":"InvalidMerkleProof","type":"error"},{"inputs":[],"name":"InvalidPayoutAdjustmentPct","type":"error"},{"inputs":[],"name":"InvalidQuoteTimestamp","type":"error"},{"inputs":[],"name":"InvalidSlowFillRequest","type":"error"},{"inputs":[],"name":"MsgValueDoesNotMatchInputAmount","type":"error"},{"inputs":[],"name":"NoSlowFillsInExclusivityWindow","type":"error"},{"inputs":[],"name":"NotEOA","type":"error"},{"inputs":[],"name":"NotExclusiveRelayer","type":"error"},{"inputs":[],"name":"RelayFilled","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"rootBundleId","type":"uint256"}],"name":"EmergencyDeleteRootBundle","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"originToken","type":"address"},{"indexed":true,"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"enabled","type":"bool"}],"name":"EnabledDepositRoute","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amountToReturn","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"chainId","type":"uint256"},{"indexed":false,"internalType":"uint256[]","name":"refundAmounts","type":"uint256[]"},{"indexed":true,"internalType":"uint32","name":"rootBundleId","type":"uint32"},{"indexed":true,"internalType":"uint32","name":"leafId","type":"uint32"},{"indexed":false,"internalType":"address","name":"l2TokenAddress","type":"address"},{"indexed":false,"internalType":"address[]","name":"refundAddresses","type":"address[]"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"ExecutedRelayerRefundRoot","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalFilledAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fillAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"repaymentChainId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"originChainId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"indexed":false,"internalType":"int64","name":"relayerFeePct","type":"int64"},{"indexed":false,"internalType":"int64","name":"realizedLpFeePct","type":"int64"},{"indexed":true,"internalType":"uint32","name":"depositId","type":"uint32"},{"indexed":false,"internalType":"address","name":"destinationToken","type":"address"},{"indexed":false,"internalType":"address","name":"relayer","type":"address"},{"indexed":true,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"bool","name":"isSlowRelay","type":"bool"},{"internalType":"int256","name":"payoutAdjustmentPct","type":"int256"}],"indexed":false,"internalType":"struct SpokePool.RelayExecutionInfo","name":"updatableRelayData","type":"tuple"}],"name":"FilledRelay","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"inputToken","type":"address"},{"indexed":false,"internalType":"address","name":"outputToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"inputAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outputAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"repaymentChainId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"originChainId","type":"uint256"},{"indexed":true,"internalType":"uint32","name":"depositId","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"indexed":false,"internalType":"address","name":"exclusiveRelayer","type":"address"},{"indexed":true,"internalType":"address","name":"relayer","type":"address"},{"indexed":false,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"},{"components":[{"internalType":"address","name":"updatedRecipient","type":"address"},{"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"internalType":"uint256","name":"updatedOutputAmount","type":"uint256"},{"internalType":"enum V3SpokePoolInterface.FillType","name":"fillType","type":"uint8"}],"indexed":false,"internalType":"struct V3SpokePoolInterface.V3RelayExecutionEventInfo","name":"relayExecutionInfo","type":"tuple"}],"name":"FilledV3Relay","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"originChainId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"indexed":false,"internalType":"int64","name":"relayerFeePct","type":"int64"},{"indexed":true,"internalType":"uint32","name":"depositId","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"quoteTimestamp","type":"uint32"},{"indexed":false,"internalType":"address","name":"originToken","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"}],"name":"FundsDeposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"isPaused","type":"bool"}],"name":"PausedDeposits","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"isPaused","type":"bool"}],"name":"PausedFills","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint32","name":"rootBundleId","type":"uint32"},{"indexed":true,"internalType":"bytes32","name":"relayerRefundRoot","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"slowRelayRoot","type":"bytes32"}],"name":"RelayedRootBundle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"int64","name":"newRelayerFeePct","type":"int64"},{"indexed":true,"internalType":"uint32","name":"depositId","type":"uint32"},{"indexed":true,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"address","name":"updatedRecipient","type":"address"},{"indexed":false,"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"depositorSignature","type":"bytes"}],"name":"RequestedSpeedUpDeposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"updatedOutputAmount","type":"uint256"},{"indexed":true,"internalType":"uint32","name":"depositId","type":"uint32"},{"indexed":true,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"address","name":"updatedRecipient","type":"address"},{"indexed":false,"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"depositorSignature","type":"bytes"}],"name":"RequestedSpeedUpV3Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"inputToken","type":"address"},{"indexed":false,"internalType":"address","name":"outputToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"inputAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outputAmount","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"originChainId","type":"uint256"},{"indexed":true,"internalType":"uint32","name":"depositId","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"indexed":false,"internalType":"address","name":"exclusiveRelayer","type":"address"},{"indexed":false,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"}],"name":"RequestedV3SlowFill","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newHubPool","type":"address"}],"name":"SetHubPool","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAdmin","type":"address"}],"name":"SetXDomainAdmin","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amountToReturn","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"chainId","type":"uint256"},{"indexed":true,"internalType":"uint32","name":"leafId","type":"uint32"},{"indexed":true,"internalType":"address","name":"l2TokenAddress","type":"address"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"TokensBridged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"inputToken","type":"address"},{"indexed":false,"internalType":"address","name":"outputToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"inputAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outputAmount","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"indexed":true,"internalType":"uint32","name":"depositId","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"quoteTimestamp","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"indexed":true,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"address","name":"exclusiveRelayer","type":"address"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"}],"name":"V3FundsDeposited","type":"event"},{"inputs":[],"name":"EMPTY_RELAYER","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EMPTY_REPAYMENT_CHAIN_ID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"INFINITE_FILL_DEADLINE","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_TRANSFER_SIZE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SLOW_FILL_MAX_TOKENS_TO_SEND","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPDATE_DEPOSIT_DETAILS_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPDATE_V3_DEPOSIT_DETAILS_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_initialDepositId","type":"uint32"},{"internalType":"address","name":"_crossDomainAdmin","type":"address"},{"internalType":"address","name":"_hubPool","type":"address"}],"name":"__SpokePool_init","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"chainId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"crossDomainAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"originToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"uint32","name":"quoteTimestamp","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"originToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"uint32","name":"quoteTimestamp","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"depositFor","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"originToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"depositForNow","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"originToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"depositNow","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"depositQuoteTimeBuffer","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"inputToken","type":"address"},{"internalType":"address","name":"outputToken","type":"address"},{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256","name":"outputAmount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"address","name":"exclusiveRelayer","type":"address"},{"internalType":"uint32","name":"quoteTimestamp","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"}],"name":"depositV3","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"rootBundleId","type":"uint256"}],"name":"emergencyDeleteRootBundle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"enabledDepositRoutes","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"rootBundleId","type":"uint32"},{"components":[{"internalType":"uint256","name":"amountToReturn","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"uint256[]","name":"refundAmounts","type":"uint256[]"},{"internalType":"uint32","name":"leafId","type":"uint32"},{"internalType":"address","name":"l2TokenAddress","type":"address"},{"internalType":"address[]","name":"refundAddresses","type":"address[]"}],"internalType":"struct SpokePoolInterface.RelayerRefundLeaf","name":"relayerRefundLeaf","type":"tuple"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"executeRelayerRefundLeaf","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"destinationToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"int64","name":"realizedLpFeePct","type":"int64"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint32","name":"rootBundleId","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"int256","name":"payoutAdjustment","type":"int256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"executeSlowRelayLeaf","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"exclusiveRelayer","type":"address"},{"internalType":"address","name":"inputToken","type":"address"},{"internalType":"address","name":"outputToken","type":"address"},{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256","name":"outputAmount","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"}],"internalType":"struct V3SpokePoolInterface.V3RelayData","name":"relayData","type":"tuple"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"uint256","name":"updatedOutputAmount","type":"uint256"}],"internalType":"struct V3SpokePoolInterface.V3SlowFill","name":"slowFillLeaf","type":"tuple"},{"internalType":"uint32","name":"rootBundleId","type":"uint32"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"executeV3SlowRelayLeaf","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"fillDeadlineBuffer","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"destinationToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"maxTokensToSend","type":"uint256"},{"internalType":"uint256","name":"repaymentChainId","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"int64","name":"realizedLpFeePct","type":"int64"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"fillRelay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"updatedRecipient","type":"address"},{"internalType":"address","name":"destinationToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"maxTokensToSend","type":"uint256"},{"internalType":"uint256","name":"repaymentChainId","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"int64","name":"realizedLpFeePct","type":"int64"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"int64","name":"updatedRelayerFeePct","type":"int64"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"internalType":"bytes","name":"depositorSignature","type":"bytes"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"fillRelayWithUpdatedDeposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"fillStatuses","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"exclusiveRelayer","type":"address"},{"internalType":"address","name":"inputToken","type":"address"},{"internalType":"address","name":"outputToken","type":"address"},{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256","name":"outputAmount","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"}],"internalType":"struct V3SpokePoolInterface.V3RelayData","name":"relayData","type":"tuple"},{"internalType":"uint256","name":"repaymentChainId","type":"uint256"}],"name":"fillV3Relay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"exclusiveRelayer","type":"address"},{"internalType":"address","name":"inputToken","type":"address"},{"internalType":"address","name":"outputToken","type":"address"},{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256","name":"outputAmount","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"}],"internalType":"struct V3SpokePoolInterface.V3RelayData","name":"relayData","type":"tuple"},{"internalType":"uint256","name":"repaymentChainId","type":"uint256"},{"internalType":"uint256","name":"updatedOutputAmount","type":"uint256"},{"internalType":"address","name":"updatedRecipient","type":"address"},{"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"internalType":"bytes","name":"depositorSignature","type":"bytes"}],"name":"fillV3RelayWithUpdatedDeposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getCurrentTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"hubPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"numberOfDeposits","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"pause","type":"bool"}],"name":"pauseDeposits","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"pause","type":"bool"}],"name":"pauseFills","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"pausedDeposits","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pausedFills","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"relayerRefundRoot","type":"bytes32"},{"internalType":"bytes32","name":"slowRelayRoot","type":"bytes32"}],"name":"relayRootBundle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"exclusiveRelayer","type":"address"},{"internalType":"address","name":"inputToken","type":"address"},{"internalType":"address","name":"outputToken","type":"address"},{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256","name":"outputAmount","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"}],"internalType":"struct V3SpokePoolInterface.V3RelayData","name":"relayData","type":"tuple"}],"name":"requestV3SlowFill","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"rootBundles","outputs":[{"internalType":"bytes32","name":"slowRelayRoot","type":"bytes32"},{"internalType":"bytes32","name":"relayerRefundRoot","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newCrossDomainAdmin","type":"address"}],"name":"setCrossDomainAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"originToken","type":"address"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"bool","name":"enabled","type":"bool"}],"name":"setEnableRoute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newHubPool","type":"address"}],"name":"setHubPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"int64","name":"updatedRelayerFeePct","type":"int64"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"address","name":"updatedRecipient","type":"address"},{"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"internalType":"bytes","name":"depositorSignature","type":"bytes"}],"name":"speedUpDeposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint256","name":"updatedOutputAmount","type":"uint256"},{"internalType":"address","name":"updatedRecipient","type":"address"},{"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"internalType":"bytes","name":"depositorSignature","type":"bytes"}],"name":"speedUpV3Deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"wrappedNativeToken","outputs":[{"internalType":"contract WETH9Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"EMPTY_RELAYER()":"6bbbcd2e","EMPTY_REPAYMENT_CHAIN_ID()":"15348e44","INFINITE_FILL_DEADLINE()":"ceb4c987","MAX_TRANSFER_SIZE()":"ddd224f1","SLOW_FILL_MAX_TOKENS_TO_SEND()":"b5e1bf5f","UPDATE_DEPOSIT_DETAILS_HASH()":"a78e4b60","UPDATE_V3_DEPOSIT_DETAILS_HASH()":"2cfc26c5","__SpokePool_init(uint32,address,address)":"979f2bc2","chainId()":"9a8a0592","crossDomainAdmin()":"5285e058","deposit(address,address,uint256,uint256,int64,uint32,bytes,uint256)":"1186ec33","depositFor(address,address,address,uint256,uint256,int64,uint32,bytes,uint256)":"541f4f14","depositForNow(address,address,address,uint256,uint256,int64,bytes,uint256)":"fd7c1054","depositNow(address,address,uint256,uint256,int64,bytes,uint256)":"ae527fbb","depositQuoteTimeBuffer()":"57f6dcb8","depositV3(address,address,address,address,uint256,uint256,uint256,address,uint32,uint32,uint32,bytes)":"7b939232","emergencyDeleteRootBundle(uint256)":"8a7860ce","enabledDepositRoutes(address,uint256)":"5249fef1","executeRelayerRefundLeaf(uint32,(uint256,uint256,uint256[],uint32,address,address[]),bytes32[])":"1b3d5559","executeSlowRelayLeaf(address,address,address,uint256,uint256,int64,int64,uint32,uint32,bytes,int256,bytes32[])":"0c2097f7","executeV3SlowRelayLeaf(((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256,uint256),uint32,bytes32[])":"bbca7db0","fillDeadlineBuffer()":"079bd2c7","fillRelay(address,address,address,uint256,uint256,uint256,uint256,int64,int64,uint32,bytes,uint256)":"44b8be68","fillRelayWithUpdatedDeposit(address,address,address,address,uint256,uint256,uint256,uint256,int64,int64,int64,uint32,bytes,bytes,bytes,uint256)":"5ceaec32","fillStatuses(bytes32)":"c35c83fc","fillV3Relay((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256)":"2e378115","fillV3RelayWithUpdatedDeposit((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256,uint256,address,bytes,bytes)":"ccfa5971","getCurrentTime()":"29cb924d","hubPool()":"e1904402","multicall(bytes[])":"ac9650d8","numberOfDeposits()":"a1244c67","pauseDeposits(bool)":"738b62e5","pauseFills(bool)":"99cc2968","pausedDeposits()":"6068d6cb","pausedFills()":"dda52113","proxiableUUID()":"52d1902d","relayRootBundle(bytes32,bytes32)":"493a4f84","requestV3SlowFill((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes))":"9963e5a8","rootBundles(uint256)":"ee2a53f8","setCrossDomainAdmin(address)":"de7eba78","setEnableRoute(address,uint256,bool)":"272751c7","setHubPool(address)":"1dfb2d02","speedUpDeposit(address,int64,uint32,address,bytes,bytes)":"7e688bba","speedUpV3Deposit(address,uint32,uint256,address,bytes,bytes)":"4e0fb8f5","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286","wrappedNativeToken()":"17fcb39b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ClaimedMerkleLeaf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DisabledRoute\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpiredFillDeadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidChainId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidExclusiveRelayer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidExclusivityDeadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFillDeadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMerkleLeaf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMerkleProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPayoutAdjustmentPct\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQuoteTimestamp\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSlowFillRequest\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MsgValueDoesNotMatchInputAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSlowFillsInExclusivityWindow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEOA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotExclusiveRelayer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RelayFilled\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rootBundleId\",\"type\":\"uint256\"}],\"name\":\"EmergencyDeleteRootBundle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"EnabledDepositRoute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountToReturn\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"refundAmounts\",\"type\":\"uint256[]\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"rootBundleId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"leafId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"l2TokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"refundAddresses\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"ExecutedRelayerRefundRoot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalFilledAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fillAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"realizedLpFeePct\",\"type\":\"int64\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destinationToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"isSlowRelay\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"payoutAdjustmentPct\",\"type\":\"int256\"}],\"indexed\":false,\"internalType\":\"struct SpokePool.RelayExecutionInfo\",\"name\":\"updatableRelayData\",\"type\":\"tuple\"}],\"name\":\"FilledRelay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"updatedOutputAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum V3SpokePoolInterface.FillType\",\"name\":\"fillType\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct V3SpokePoolInterface.V3RelayExecutionEventInfo\",\"name\":\"relayExecutionInfo\",\"type\":\"tuple\"}],\"name\":\"FilledV3Relay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"quoteTimestamp\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"FundsDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"PausedDeposits\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"PausedFills\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"rootBundleId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"relayerRefundRoot\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"slowRelayRoot\",\"type\":\"bytes32\"}],\"name\":\"RelayedRootBundle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"newRelayerFeePct\",\"type\":\"int64\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"}],\"name\":\"RequestedSpeedUpDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updatedOutputAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"}],\"name\":\"RequestedSpeedUpV3Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"RequestedV3SlowFill\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newHubPool\",\"type\":\"address\"}],\"name\":\"SetHubPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"SetXDomainAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountToReturn\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"leafId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"l2TokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"TokensBridged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"quoteTimestamp\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"V3FundsDeposited\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"EMPTY_RELAYER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EMPTY_REPAYMENT_CHAIN_ID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INFINITE_FILL_DEADLINE\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TRANSFER_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SLOW_FILL_MAX_TOKENS_TO_SEND\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPDATE_DEPOSIT_DETAILS_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPDATE_V3_DEPOSIT_DETAILS_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_initialDepositId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_crossDomainAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_hubPool\",\"type\":\"address\"}],\"name\":\"__SpokePool_init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"crossDomainAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"quoteTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"quoteTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"depositFor\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"depositForNow\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"depositNow\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositQuoteTimeBuffer\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"quoteTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"depositV3\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rootBundleId\",\"type\":\"uint256\"}],\"name\":\"emergencyDeleteRootBundle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"enabledDepositRoutes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"rootBundleId\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amountToReturn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"refundAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint32\",\"name\":\"leafId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"l2TokenAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"refundAddresses\",\"type\":\"address[]\"}],\"internalType\":\"struct SpokePoolInterface.RelayerRefundLeaf\",\"name\":\"relayerRefundLeaf\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"executeRelayerRefundLeaf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destinationToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"realizedLpFeePct\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"rootBundleId\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"int256\",\"name\":\"payoutAdjustment\",\"type\":\"int256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"executeSlowRelayLeaf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"internalType\":\"struct V3SpokePoolInterface.V3RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedOutputAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct V3SpokePoolInterface.V3SlowFill\",\"name\":\"slowFillLeaf\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"rootBundleId\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"executeV3SlowRelayLeaf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fillDeadlineBuffer\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destinationToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTokensToSend\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"realizedLpFeePct\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"fillRelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destinationToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTokensToSend\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"realizedLpFeePct\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"updatedRelayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"fillRelayWithUpdatedDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"fillStatuses\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"internalType\":\"struct V3SpokePoolInterface.V3RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"}],\"name\":\"fillV3Relay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"internalType\":\"struct V3SpokePoolInterface.V3RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedOutputAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"}],\"name\":\"fillV3RelayWithUpdatedDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hubPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfDeposits\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"pause\",\"type\":\"bool\"}],\"name\":\"pauseDeposits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"pause\",\"type\":\"bool\"}],\"name\":\"pauseFills\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pausedDeposits\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pausedFills\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"relayerRefundRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"slowRelayRoot\",\"type\":\"bytes32\"}],\"name\":\"relayRootBundle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"internalType\":\"struct V3SpokePoolInterface.V3RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"name\":\"requestV3SlowFill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rootBundles\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"slowRelayRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"relayerRefundRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCrossDomainAdmin\",\"type\":\"address\"}],\"name\":\"setCrossDomainAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setEnableRoute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newHubPool\",\"type\":\"address\"}],\"name\":\"setHubPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"updatedRelayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"}],\"name\":\"speedUpDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"updatedOutputAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"}],\"name\":\"speedUpV3Deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrappedNativeToken\",\"outputs\":[{\"internalType\":\"contract WETH9Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"custom:security-contact\":\"bugs@across.to\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"FilledRelay(uint256,uint256,uint256,uint256,uint256,uint256,int64,int64,uint32,address,address,address,address,bytes,(address,bytes,int64,bool,int256))\":{\"custom:audit\":\"FOLLOWING EVENT TO BE DEPRECATED\"},\"FundsDeposited(uint256,uint256,uint256,int64,uint32,uint32,address,address,address,bytes)\":{\"custom:audit\":\"FOLLOWING EVENT TO BE DEPRECATED\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RequestedSpeedUpDeposit(int64,uint32,address,address,bytes,bytes)\":{\"custom:audit\":\"FOLLOWING EVENT TO BE DEPRECATED\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"__SpokePool_init(uint32,address,address)\":{\"params\":{\"_crossDomainAdmin\":\"Cross domain admin to set. Can be changed by admin.\",\"_hubPool\":\"Hub pool address to set. Can be changed by admin.\",\"_initialDepositId\":\"Starting deposit ID. Set to 0 unless this is a re-deployment in order to mitigate relay hash collisions.\"}},\"chainId()\":{\"details\":\"Some L2s like ZKSync don't support the CHAIN_ID opcode so we allow the implementer to override this.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"deposit(address,address,uint256,uint256,int64,uint32,bytes,uint256)\":{\"details\":\"Produces a V3FundsDeposited event with an infinite expiry, meaning that this deposit can never expire. Moreover, the event's outputToken is set to 0x0 meaning that this deposit can always be slow filled.\",\"params\":{\"amount\":\"Amount of tokens to deposit. Will be amount of tokens to receive less fees.\",\"destinationChainId\":\"Denotes network where user will receive funds from SpokePool by a relayer.\",\"message\":\"Arbitrary data that can be used to pass additional information to the recipient along with the tokens. Note: this is intended to be used to pass along instructions for how a contract should use or allocate the tokens.\",\"originToken\":\"Token to lock into this contract to initiate deposit.\",\"quoteTimestamp\":\"Timestamp used by relayers to compute this deposit's realizedLPFeePct which is paid to LP pool on HubPool.\",\"recipient\":\"Address to receive funds at on destination chain.\",\"relayerFeePct\":\"% of deposit amount taken out to incentivize a fast relayer.\"}},\"depositFor(address,address,address,uint256,uint256,int64,uint32,bytes,uint256)\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"depositForNow(address,address,address,uint256,uint256,int64,bytes,uint256)\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"depositNow(address,address,uint256,uint256,int64,bytes,uint256)\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"depositV3(address,address,address,address,uint256,uint256,uint256,address,uint32,uint32,uint32,bytes)\":{\"details\":\"On the destination chain, the hash of the deposit data will be used to uniquely identify this deposit, so modifying any params in it will result in a different hash and a different deposit. The hash will comprise all parameters to this function along with this chain's chainId(). Relayers are only refunded for filling deposits with deposit hashes that map exactly to the one emitted by this contract.\",\"params\":{\"depositor\":\"The account credited with the deposit who can request to \\\"speed up\\\" this deposit by modifying the output amount, recipient, and message.\",\"destinationChainId\":\"The destination chain identifier. Must be enabled along with the input token as a valid deposit route from this spoke pool or this transaction will revert.\",\"exclusiveRelayer\":\"The relayer that will be exclusively allowed to fill this deposit before the exclusivity deadline timestamp. This must be a valid, non-zero address if the exclusivity deadline is greater than the current block.timestamp. If the exclusivity deadline is < currentTime, then this must be address(0), and vice versa if this is address(0).\",\"exclusivityDeadline\":\"The deadline for the exclusive relayer to fill the deposit. After this destination chain timestamp, anyone can fill this deposit on the destination chain. If exclusiveRelayer is set to address(0), then this also must be set to 0, (and vice versa), otherwise this must be set >= current time.\",\"fillDeadline\":\"The deadline for the relayer to fill the deposit. After this destination chain timestamp, the fill will revert on the destination chain. Must be set between [currentTime, currentTime + fillDeadlineBuffer] where currentTime is block.timestamp on this chain or this transaction will revert.\",\"inputAmount\":\"The amount of input tokens to pull from the caller's account and lock into this contract. This amount will be sent to the relayer on their repayment chain of choice as a refund following an optimistic challenge window in the HubPool, less a system fee.\",\"inputToken\":\"The token pulled from the caller's account and locked into this contract to initiate the deposit. The equivalent of this token on the relayer's repayment chain of choice will be sent as a refund. If this is equal to the wrapped native token then the caller can optionally pass in native token as msg.value, as long as msg.value = inputTokenAmount.\",\"message\":\"The message to send to the recipient on the destination chain if the recipient is a contract. If the message is not empty, the recipient contract must implement handleV3AcrossMessage() or the fill will revert.\",\"outputAmount\":\"The amount of output tokens that the relayer will send to the recipient on the destination.\",\"outputToken\":\"The token that the relayer will send to the recipient on the destination chain. Must be an ERC20.\",\"quoteTimestamp\":\"The HubPool timestamp that is used to determine the system fee paid by the depositor.  This must be set to some time between [currentTime - depositQuoteTimeBuffer, currentTime] where currentTime is block.timestamp on this chain or this transaction will revert.\",\"recipient\":\"The account receiving funds on the destination chain. Can be an EOA or a contract. If the output token is the wrapped native token for the chain, then the recipient will receive native token if an EOA or wrapped native token if a contract.\"}},\"emergencyDeleteRootBundle(uint256)\":{\"params\":{\"rootBundleId\":\"Index of the root bundle that needs to be deleted. Note: this is intentionally a uint256 to ensure that a small input range doesn't limit which indices this method is able to reach.\"}},\"executeRelayerRefundLeaf(uint32,(uint256,uint256,uint256[],uint32,address,address[]),bytes32[])\":{\"params\":{\"proof\":\"Inclusion proof for this leaf in relayer refund root in root bundle.\",\"relayerRefundLeaf\":\"Contains all data necessary to reconstruct leaf contained in root bundle and to refund relayer. This data structure is explained in detail in the SpokePoolInterface.\",\"rootBundleId\":\"Unique ID of root bundle containing relayer refund root that this leaf is contained in.\"}},\"executeSlowRelayLeaf(address,address,address,uint256,uint256,int64,int64,uint32,uint32,bytes,int256,bytes32[])\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"executeV3SlowRelayLeaf(((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256,uint256),uint32,bytes32[])\":{\"details\":\"Executing a slow fill leaf is equivalent to filling the relayData so this function cannot be used to double fill a recipient. The relayData that is filled is included in the slowFillLeaf and is hashed like any other fill sent through fillV3Relay().There is no relayer credited with filling this relay since funds are sent directly out of this contract.\",\"params\":{\"proof\":\"Inclusion proof for this leaf in slow relay root in root bundle.\",\"rootBundleId\":\"Unique ID of root bundle containing slow relay root that this leaf is contained in.\",\"slowFillLeaf\":\"Contains all data necessary to uniquely identify a relay for this chain. This struct is hashed and included in a merkle root that is relayed to all spoke pools. - relayData: struct containing all the data needed to identify the original deposit to be slow filled. - chainId: chain identifier where slow fill leaf should be executed. If this doesn't match this chain's chainId, then this function will revert. - updatedOutputAmount: Amount to be sent to recipient out of this contract's balance. Can be set differently from relayData.outputAmount to charge a different fee because this deposit was \\\"slow\\\" filled. Usually, this will be set higher to reimburse the recipient for waiting for the slow fill.\"}},\"fillRelay(address,address,address,uint256,uint256,uint256,uint256,int64,int64,uint32,bytes,uint256)\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"fillRelayWithUpdatedDeposit(address,address,address,address,uint256,uint256,uint256,uint256,int64,int64,int64,uint32,bytes,bytes,bytes,uint256)\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"fillV3Relay((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256)\":{\"details\":\"The fee paid to relayers and the system should be captured in the spread between output amount and input amount when adjusted to be denominated in the input token. A relayer on the destination chain will send outputAmount of outputTokens to the recipient and receive inputTokens on a repayment chain of their choice. Therefore, the fee should account for destination fee transaction costs, the relayer's opportunity cost of capital while they wait to be refunded following an optimistic challenge window in the HubPool, and a system fee charged to relayers.The hash of the relayData will be used to uniquely identify the deposit to fill, so modifying any params in it will result in a different hash and a different deposit. The hash will comprise all parameters passed to depositV3() on the origin chain along with that chain's chainId(). This chain's chainId() must therefore match the destinationChainId passed into depositV3. Relayers are only refunded for filling deposits with deposit hashes that map exactly to the one emitted by the origin SpokePool therefore the relayer should not modify any params in relayData.Cannot fill more than once. Partial fills are not supported.\",\"params\":{\"relayData\":\"struct containing all the data needed to identify the deposit to be filled. Should match all the same-named parameters emitted in the origin chain V3FundsDeposited event. - depositor: The account credited with the deposit who can request to \\\"speed up\\\" this deposit by modifying the output amount, recipient, and message. - recipient The account receiving funds on this chain. Can be an EOA or a contract. If the output token is the wrapped native token for the chain, then the recipient will receive native token if an EOA or wrapped native token if a contract. - inputToken: The token pulled from the caller's account to initiate the deposit. The equivalent of this token on the repayment chain will be sent as a refund to the caller. - outputToken The token that the caller will send to the recipient on the destination chain. Must be an ERC20. - inputAmount: This amount, less a system fee, will be sent to the caller on their repayment chain of choice as a refund following an optimistic challenge window in the HubPool. - outputAmount: The amount of output tokens that the caller will send to the recipient. - originChainId: The origin chain identifier. - exclusiveRelayer The relayer that will be exclusively allowed to fill this deposit before the exclusivity deadline timestamp. - fillDeadline The deadline for the caller to fill the deposit. After this timestamp, the fill will revert on the destination chain. - exclusivityDeadline: The deadline for the exclusive relayer to fill the deposit. After this timestamp, anyone can fill this deposit. - message The message to send to the recipient if the recipient is a contract that implements a handleV3AcrossMessage() public function\",\"repaymentChainId\":\"Chain of SpokePool where relayer wants to be refunded after the challenge window has passed. Will receive inputAmount of the equivalent token to inputToken on the repayment chain.\"}},\"fillV3RelayWithUpdatedDeposit((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256,uint256,address,bytes,bytes)\":{\"details\":\"Subject to same exclusivity deadline rules as fillV3Relay().\",\"params\":{\"depositorSignature\":\"Signed EIP712 hashstruct containing the deposit ID. Should be signed by the depositor account.\",\"relayData\":\"struct containing all the data needed to identify the deposit to be filled. See fillV3Relay().\",\"repaymentChainId\":\"Chain of SpokePool where relayer wants to be refunded after the challenge window has passed. See fillV3Relay().\",\"updatedMessage\":\"New message to use for this deposit.\",\"updatedOutputAmount\":\"New output amount to use for this deposit.\",\"updatedRecipient\":\"New recipient to use for this deposit.\"}},\"getCurrentTime()\":{\"returns\":{\"_0\":\"uint for the current timestamp.\"}},\"pauseDeposits(bool)\":{\"details\":\"Affects `deposit()` but not `speedUpDeposit()`, so that existing deposits can be sped up and still relayed.\",\"params\":{\"pause\":\"true if the call is meant to pause the system, false if the call is meant to unpause it.\"}},\"pauseFills(bool)\":{\"details\":\"Affects fillRelayWithUpdatedDeposit() and fillRelay().\",\"params\":{\"pause\":\"true if the call is meant to pause the system, false if the call is meant to unpause it.\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"relayRootBundle(bytes32,bytes32)\":{\"params\":{\"relayerRefundRoot\":\"Merkle root containing relayer refund leaves that can be individually executed via executeRelayerRefundLeaf().\",\"slowRelayRoot\":\"Merkle root containing slow relay fulfillment leaves that can be individually executed via executeSlowRelayLeaf().\"}},\"requestV3SlowFill((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes))\":{\"details\":\"Slow fills are not possible unless the input and output tokens are \\\"equivalent\\\", i.e. they route to the same L1 token via PoolRebalanceRoutes.Slow fills are created by inserting slow fill objects into a merkle tree that is included in the next HubPool \\\"root bundle\\\". Once the optimistic challenge window has passed, the HubPool will relay the slow root to this chain via relayRootBundle(). Once the slow root is relayed, the slow fill can be executed by anyone who calls executeV3SlowRelayLeaf().Cannot request a slow fill if the fill deadline has passed.Cannot request a slow fill if the relay has already been filled or a slow fill has already been requested.\",\"params\":{\"relayData\":\"struct containing all the data needed to identify the deposit that should be slow filled. If any of the params are missing or different from the origin chain deposit, then Across will not include a slow fill for the intended deposit.\"}},\"setCrossDomainAdmin(address)\":{\"params\":{\"newCrossDomainAdmin\":\"New cross domain admin.\"}},\"setEnableRoute(address,uint256,bool)\":{\"params\":{\"destinationChainId\":\"Chain ID for where depositor wants to receive funds.\",\"enabled\":\"True to enable deposits, False otherwise.\",\"originToken\":\"Token that depositor can deposit to this contract.\"}},\"setHubPool(address)\":{\"params\":{\"newHubPool\":\"New hub pool.\"}},\"speedUpDeposit(address,int64,uint32,address,bytes,bytes)\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"speedUpV3Deposit(address,uint32,uint256,address,bytes,bytes)\":{\"details\":\"the depositor and depositId must match the params in a V3FundsDeposited event that the depositor wants to speed up. The relayer has the option but not the obligation to use this updated information when filling the deposit via fillV3RelayWithUpdatedDeposit().\",\"params\":{\"depositId\":\"Deposit ID to speed up.\",\"depositor\":\"Depositor that must sign the depositorSignature and was the original depositor.\",\"depositorSignature\":\"Signed EIP712 hashstruct containing the deposit ID. Should be signed by the depositor account. If depositor is a contract, then should implement EIP1271 to sign as a contract. See _verifyUpdateV3DepositMessage() for more details about how this signature should be constructed.\",\"updatedMessage\":\"New message to use for this deposit. Can be modified if the recipient is a contract that expects to receive a message from the relay and for some reason needs to be modified.\",\"updatedOutputAmount\":\"New output amount to use for this deposit. Should be lower than previous value otherwise relayer has no incentive to use this updated value.\",\"updatedRecipient\":\"New recipient to use for this deposit. Can be modified if the recipient is a contract that expects to receive a message from the relay and for some reason needs to be modified.\"}},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"SLOW_FILL_MAX_TOKENS_TO_SEND\":{\"custom:audit\":\"FOLLOWING VARIABLE TO BE DEPRECATED\"},\"UPDATE_DEPOSIT_DETAILS_HASH\":{\"custom:audit\":\"FOLLOWING VARIABLE TO BE DEPRECATED\"},\"depositQuoteTimeBuffer\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"},\"fillDeadlineBuffer\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"},\"wrappedNativeToken\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"title\":\"SpokePool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"__SpokePool_init(uint32,address,address)\":{\"notice\":\"Construct the base SpokePool.\"},\"chainId()\":{\"notice\":\"Returns chain ID for this network.\"},\"deposit(address,address,uint256,uint256,int64,uint32,bytes,uint256)\":{\"notice\":\"Called by user to bridge funds from origin to destination chain. Depositor will effectively lock tokens in this contract and receive a destination token on the destination chain. The origin => destination token mapping is stored on the L1 HubPool.The caller must first approve this contract to spend amount of originToken.The originToken => destinationChainId must be enabled.This method is payable because the caller is able to deposit native token if the originToken is wrappedNativeToken and this function will handle wrapping the native token to wrappedNativeToken.\"},\"depositV3(address,address,address,address,uint256,uint256,uint256,address,uint32,uint32,uint32,bytes)\":{\"notice\":\"Request to bridge input token cross chain to a destination chain and receive a specified amount of output tokens. The fee paid to relayers and the system should be captured in the spread between output amount and input amount when adjusted to be denominated in the input token. A relayer on the destination chain will send outputAmount of outputTokens to the recipient and receive inputTokens on a repayment chain of their choice. Therefore, the fee should account for destination fee transaction costs, the relayer's opportunity cost of capital while they wait to be refunded following an optimistic challenge window in the HubPool, and the system fee that they'll be charged.\"},\"emergencyDeleteRootBundle(uint256)\":{\"notice\":\"This method is intended to only be used in emergencies where a bad root bundle has reached the SpokePool.\"},\"executeRelayerRefundLeaf(uint32,(uint256,uint256,uint256[],uint32,address,address[]),bytes32[])\":{\"notice\":\"Executes a relayer refund leaf stored as part of a root bundle. Will send the relayer the amount they sent to the recipient plus a relayer fee.\"},\"executeV3SlowRelayLeaf(((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256,uint256),uint32,bytes32[])\":{\"notice\":\"Executes a slow relay leaf stored as part of a root bundle relayed by the HubPool.\"},\"fillV3Relay((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256)\":{\"notice\":\"Fulfill request to bridge cross chain by sending specified output tokens to the recipient.\"},\"fillV3RelayWithUpdatedDeposit((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256,uint256,address,bytes,bytes)\":{\"notice\":\"Identical to fillV3Relay except that the relayer wants to use a depositor's updated output amount, recipient, and/or message. The relayer should only use this function if they can supply a message signed by the depositor that contains the fill's matching deposit ID along with updated relay parameters. If the signature can be verified, then this function will emit a FilledV3Event that will be used by the system for refund verification purposes. In otherwords, this function is an alternative way to fill a a deposit than fillV3Relay.\"},\"getCurrentTime()\":{\"notice\":\"Gets the current time.\"},\"pauseDeposits(bool)\":{\"notice\":\"Pauses deposit-related functions. This is intended to be used if this contract is deprecated or when something goes awry.\"},\"pauseFills(bool)\":{\"notice\":\"Pauses fill-related functions. This is intended to be used if this contract is deprecated or when something goes awry.\"},\"relayRootBundle(bytes32,bytes32)\":{\"notice\":\"This method stores a new root bundle in this contract that can be executed to refund relayers, fulfill slow relays, and send funds back to the HubPool on L1. This method can only be called by the admin and is designed to be called as part of a cross-chain message from the HubPool's executeRootBundle method.\"},\"requestV3SlowFill((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes))\":{\"notice\":\"Request Across to send LP funds to this contract to fulfill a slow fill relay for a deposit in the next bundle.\"},\"setCrossDomainAdmin(address)\":{\"notice\":\"Change cross domain admin address. Callable by admin only.\"},\"setEnableRoute(address,uint256,bool)\":{\"notice\":\"Enable/Disable an origin token => destination chain ID route for deposits. Callable by admin only.\"},\"setHubPool(address)\":{\"notice\":\"Change L1 hub pool address. Callable by admin only.\"},\"speedUpV3Deposit(address,uint32,uint256,address,bytes,bytes)\":{\"notice\":\"Depositor can use this function to signal to relayer to use updated output amount, recipient, and/or message.\"}},\"notice\":\"Base contract deployed on source and destination chains enabling depositors to transfer assets from source to destination. Deposit orders are fulfilled by off-chain relayers who also interact with this contract. Deposited tokens are locked on the source chain and relayers send the recipient the desired token currency and amount on the destination chain. Locked source chain tokens are later sent over the canonical token bridge to L1 HubPool. Relayers are refunded with destination tokens out of this contract after another off-chain actor, a \\\"data worker\\\", submits a proof that the relayer correctly submitted a relay on this SpokePool.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SpokePool.sol\":\"SpokePool\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d\",\"dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce6e5ae4633559c2aad156be884a96f7a9beb8dd31b1b630a6de55972e3af622\",\"dweb:/ipfs/QmQasz4sQoexkrvB7wCQAY6NbMoCtPS7AqomymRoJGYz85\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x23b997be73d3dd46885262704f0f8cfc7273fdadfe303d37969a9561373972b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d03ebe5406134f0c4a017dee625ff615031194493bd1e88504e5c8fae55bc166\",\"dweb:/ipfs/QmUZV5bMbgk2PAkV3coouSeSainHN2jhqaQDJaA7hQRyu2\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c\",\"dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x3af3ca86df39aac39a0514c84459d691434a108d2151c8ce9d69f32e315cab80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77d1f1cf302cd5e1dfbbb4ce3b281b28e8c52942d4319fce43df2e1b6f02a52d\",\"dweb:/ipfs/QmT6ZXStmK3Knhh9BokeVHQ9HXTBZNgL3Eb1ar1cYg1hWy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/MerkleLib.sol\":{\"keccak256\":\"0x8c5c0ae815ea4b121a6afcf163c7b8b0de18212db1228350f89fa5dd0bb54365\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c1eb160f6b614d6721c0ab8e6149ff192cab1768ee266cb1941c5c1a7d304675\",\"dweb:/ipfs/QmYwowK4FzZXwoZS4TvwLQD77Gk66eWKZpg2ETUpXfrN7X\"]},\"contracts/SpokePool.sol\":{\"keccak256\":\"0xff57c2345270680bac0b9e63923771bb18b22cadb068966063186f3484e7dfbf\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d4b378a773e5def3724b183cd1007ff80072736988f7d05490968a4378ec0c8c\",\"dweb:/ipfs/QmQp4rJn1WrDyFAY3xprQN6qzXtKmWfNraVTNmqXY2EWZG\"]},\"contracts/external/interfaces/WETH9Interface.sol\":{\"keccak256\":\"0x3f7892554ec7f54681fdd3cc18a41346c246c9c1afba016c52990ef77741f718\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://76e901f8da798eb2fdef8fd0083a51088103269f08ee751598c5a6eba407785f\",\"dweb:/ipfs/QmcAHbwbwCZd78teaK4cHuAvXq71aWX1r9vTGkSRRBDJV1\"]},\"contracts/interfaces/HubPoolInterface.sol\":{\"keccak256\":\"0xefd509ab379b94004b5767d67971e5c0bda4ca1e9f376b5aea75a0297b5d7bd6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0b7e509e90bcca9b96bf55e92498b17bbb548359c470b17285740080a6c0d9de\",\"dweb:/ipfs/QmdviQBbB58H9HR3tKQepEuYcMKXZthyTThGXUgQDAC828\"]},\"contracts/interfaces/SpokePoolInterface.sol\":{\"keccak256\":\"0x5089df2f8d40f9afad742d059966a34a42fae5dd61ab9274585d303ca4bb6489\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://46f884dee4c3de680f45f66a5b2a34b41423ac818a736d5c108eb334f0fdf411\",\"dweb:/ipfs/QmdNJ2w2CEGkHv2rS4vYKNNdPjZALtCPJf4sQKzRW3ARzd\"]},\"contracts/interfaces/V3SpokePoolInterface.sol\":{\"keccak256\":\"0xdd33112f0dc8f8462307cda7d7753cb9be49cd209b6520abd69273ac015f7ab6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://211c34424710bc8a4ab41bf00bdd9df32e139642a3007a7bbe1e60020f943d2f\",\"dweb:/ipfs/QmYVM5c84V4iqKy734Sjq4TFKMJyJ3cQLHB2Katz1pTBZz\"]},\"contracts/upgradeable/AddressLibUpgradeable.sol\":{\"keccak256\":\"0xa1d6d9ca58e205e006ccc259e5145690677edaa207432d290d5e1b827b5fc689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://395952d23c2b5dee1d77efbbbf42e55dfce42d838b91c72b851786c80e688f5e\",\"dweb:/ipfs/QmQUK3xeSAydtVYRgPmt2FNzXNjbtHmdCVD61mph1tegfg\"]},\"contracts/upgradeable/EIP712CrossChainUpgradeable.sol\":{\"keccak256\":\"0x16181b3f6d12da34b64997235be59ca9e8d189dff99477b0dd828510f1f6e2e6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b4dee85f34d6d6b796943c8ee959abf51b3656d56a24b4f87e4a966aa5f8d4e6\",\"dweb:/ipfs/QmQrc885RFzLDELLHaEm4mPoXKKWw7WumtfwBfkKV5wZxa\"]},\"contracts/upgradeable/MultiCallerUpgradeable.sol\":{\"keccak256\":\"0x5991e43af9a1389be25119b0e38ce974ae5ba9644b0a3833a2ec95d91f792cb9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b64e97cab30636c478421fcdba771f0fdaeaf390d237e311f44ae513215926db\",\"dweb:/ipfs/QmXFDXm8KijimPvnU7V97N1m2H3SUKat7JHFuL7dfTUJtY\"]}},\"version\":1}"}},"contracts/external/interfaces/WETH9Interface.sol":{"WETH9Interface":{"abi":[{"inputs":[{"internalType":"address","name":"guy","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"wad","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"guy","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address)":"70a08231","deposit()":"d0e30db0","transfer(address,uint256)":"a9059cbb","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"params\":{\"guy\":\"Address to get balance of.\"},\"returns\":{\"wad\":\"Amount of WETH held by `guy`.\"}},\"deposit()\":{\"details\":\"msg.value is amount of Wrapped Ether to mint/Ether to lock.\"},\"transfer(address,uint256)\":{\"params\":{\"guy\":\"Address to send WETH to.\",\"wad\":\"Amount of WETH to send.\"},\"returns\":{\"_0\":\"ok True if transfer succeeded.\"}},\"withdraw(uint256)\":{\"params\":{\"wad\":\"Amount of WETH to unwrap and send to caller.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address)\":{\"notice\":\"Get balance of WETH held by `guy`.\"},\"deposit()\":{\"notice\":\"Lock native Ether and mint Wrapped Ether ERC20\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer `wad` of WETH from caller to `guy`.\"},\"withdraw(uint256)\":{\"notice\":\"Burn Wrapped Ether and receive native Ether.\"}},\"notice\":\"Interface for the WETH9 contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/external/interfaces/WETH9Interface.sol\":\"WETH9Interface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/external/interfaces/WETH9Interface.sol\":{\"keccak256\":\"0x3f7892554ec7f54681fdd3cc18a41346c246c9c1afba016c52990ef77741f718\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://76e901f8da798eb2fdef8fd0083a51088103269f08ee751598c5a6eba407785f\",\"dweb:/ipfs/QmcAHbwbwCZd78teaK4cHuAvXq71aWX1r9vTGkSRRBDJV1\"]}},\"version\":1}"}},"contracts/interfaces/HubPoolInterface.sol":{"HubPoolInterface":{"abi":[{"inputs":[{"internalType":"address","name":"l1Token","type":"address"},{"internalType":"uint256","name":"l1TokenAmount","type":"uint256"}],"name":"addLiquidity","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"l1Token","type":"address"}],"name":"claimProtocolFeesCaptured","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"l1Token","type":"address"}],"name":"disableL1TokenForLiquidityProvision","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"disputeRootBundle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"emergencyDeleteProposal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"l1Token","type":"address"}],"name":"enableL1TokenForLiquidityProvision","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"l1Token","type":"address"}],"name":"exchangeRateCurrent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"uint256","name":"groupIndex","type":"uint256"},{"internalType":"uint256[]","name":"bundleLpFees","type":"uint256[]"},{"internalType":"int256[]","name":"netSendAmounts","type":"int256[]"},{"internalType":"int256[]","name":"runningBalances","type":"int256[]"},{"internalType":"uint8","name":"leafId","type":"uint8"},{"internalType":"address[]","name":"l1Tokens","type":"address[]"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"executeRootBundle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"l1Token","type":"address"}],"name":"liquidityUtilizationCurrent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"l1Token","type":"address"},{"internalType":"uint256","name":"relayedAmount","type":"uint256"}],"name":"liquidityUtilizationPostRelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"loadEthForL2Calls","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"address","name":"l1Token","type":"address"}],"name":"poolRebalanceRoute","outputs":[{"internalType":"address","name":"destinationToken","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"bundleEvaluationBlockNumbers","type":"uint256[]"},{"internalType":"uint8","name":"poolRebalanceLeafCount","type":"uint8"},{"internalType":"bytes32","name":"poolRebalanceRoot","type":"bytes32"},{"internalType":"bytes32","name":"relayerRefundRoot","type":"bytes32"},{"internalType":"bytes32","name":"slowRelayRoot","type":"bytes32"}],"name":"proposeRootBundle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"bytes","name":"functionData","type":"bytes"}],"name":"relaySpokePoolAdminFunction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"l1Token","type":"address"},{"internalType":"uint256","name":"lpTokenAmount","type":"uint256"},{"internalType":"bool","name":"sendEth","type":"bool"}],"name":"removeLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"newBondToken","type":"address"},{"internalType":"uint256","name":"newBondAmount","type":"uint256"}],"name":"setBond","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"l2ChainId","type":"uint256"},{"internalType":"address","name":"adapter","type":"address"},{"internalType":"address","name":"spokePool","type":"address"}],"name":"setCrossChainContracts","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"address","name":"originToken","type":"address"},{"internalType":"bool","name":"depositsEnabled","type":"bool"}],"name":"setDepositRoute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"newIdentifier","type":"bytes32"}],"name":"setIdentifier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"newLiveness","type":"uint32"}],"name":"setLiveness","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"pause","type":"bool"}],"name":"setPaused","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"address","name":"l1Token","type":"address"},{"internalType":"address","name":"destinationToken","type":"address"}],"name":"setPoolRebalanceRoute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newProtocolFeeCaptureAddress","type":"address"},{"internalType":"uint256","name":"newProtocolFeeCapturePct","type":"uint256"}],"name":"setProtocolFeeCapture","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"l1Token","type":"address"}],"name":"sync","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addLiquidity(address,uint256)":"56688700","claimProtocolFeesCaptured(address)":"2d0f6f84","disableL1TokenForLiquidityProvision(address)":"0c501af9","disputeRootBundle()":"22395aaa","emergencyDeleteProposal()":"625997c0","enableL1TokenForLiquidityProvision(address)":"b60c2d7d","exchangeRateCurrent(address)":"e0f339e3","executeRootBundle(uint256,uint256,uint256[],int256[],int256[],uint8,address[],bytes32[])":"80c09a82","liquidityUtilizationCurrent(address)":"a16fd6e9","liquidityUtilizationPostRelay(address,uint256)":"084d0513","loadEthForL2Calls()":"69b62502","poolRebalanceRoute(uint256,address)":"2d32d557","proposeRootBundle(uint256[],uint8,bytes32,bytes32,bytes32)":"8bda0c00","relaySpokePoolAdminFunction(uint256,bytes)":"dd70e5e8","removeLiquidity(address,uint256,bool)":"0ee28a88","setBond(address,uint256)":"33dc09ca","setCrossChainContracts(uint256,address,address)":"e460e35c","setDepositRoute(uint256,uint256,address,bool)":"56864f38","setIdentifier(bytes32)":"00c99206","setLiveness(uint32)":"cd949995","setPaused(bool)":"16c38b3c","setPoolRebalanceRoute(uint256,address,address)":"10b99527","setProtocolFeeCapture(address,uint256)":"00660b53","sync(address)":"a5841194"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"l1TokenAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"}],\"name\":\"claimProtocolFeesCaptured\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"}],\"name\":\"disableL1TokenForLiquidityProvision\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disputeRootBundle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyDeleteProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"}],\"name\":\"enableL1TokenForLiquidityProvision\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"}],\"name\":\"exchangeRateCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"groupIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"bundleLpFees\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"netSendAmounts\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"runningBalances\",\"type\":\"int256[]\"},{\"internalType\":\"uint8\",\"name\":\"leafId\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"l1Tokens\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"executeRootBundle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"}],\"name\":\"liquidityUtilizationCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"relayedAmount\",\"type\":\"uint256\"}],\"name\":\"liquidityUtilizationPostRelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"loadEthForL2Calls\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"}],\"name\":\"poolRebalanceRoute\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"destinationToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"bundleEvaluationBlockNumbers\",\"type\":\"uint256[]\"},{\"internalType\":\"uint8\",\"name\":\"poolRebalanceLeafCount\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"poolRebalanceRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"relayerRefundRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"slowRelayRoot\",\"type\":\"bytes32\"}],\"name\":\"proposeRootBundle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"functionData\",\"type\":\"bytes\"}],\"name\":\"relaySpokePoolAdminFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lpTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sendEth\",\"type\":\"bool\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"newBondToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newBondAmount\",\"type\":\"uint256\"}],\"name\":\"setBond\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"l2ChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"adapter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spokePool\",\"type\":\"address\"}],\"name\":\"setCrossChainContracts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"depositsEnabled\",\"type\":\"bool\"}],\"name\":\"setDepositRoute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newIdentifier\",\"type\":\"bytes32\"}],\"name\":\"setIdentifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"newLiveness\",\"type\":\"uint32\"}],\"name\":\"setLiveness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"pause\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destinationToken\",\"type\":\"address\"}],\"name\":\"setPoolRebalanceRoute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newProtocolFeeCaptureAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newProtocolFeeCapturePct\",\"type\":\"uint256\"}],\"name\":\"setProtocolFeeCapture\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"}],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Concise list of functions in HubPool implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/HubPoolInterface.sol\":\"HubPoolInterface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"contracts/interfaces/HubPoolInterface.sol\":{\"keccak256\":\"0xefd509ab379b94004b5767d67971e5c0bda4ca1e9f376b5aea75a0297b5d7bd6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0b7e509e90bcca9b96bf55e92498b17bbb548359c470b17285740080a6c0d9de\",\"dweb:/ipfs/QmdviQBbB58H9HR3tKQepEuYcMKXZthyTThGXUgQDAC828\"]}},\"version\":1}"}},"contracts/interfaces/SpokePoolInterface.sol":{"SpokePoolInterface":{"abi":[{"inputs":[],"name":"NotEOA","type":"error"},{"inputs":[],"name":"chainId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"originToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"uint32","name":"quoteTimestamp","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"originToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"uint32","name":"quoteTimestamp","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"depositFor","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"originToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"depositNow","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"rootBundleId","type":"uint256"}],"name":"emergencyDeleteRootBundle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"rootBundleId","type":"uint32"},{"components":[{"internalType":"uint256","name":"amountToReturn","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"uint256[]","name":"refundAmounts","type":"uint256[]"},{"internalType":"uint32","name":"leafId","type":"uint32"},{"internalType":"address","name":"l2TokenAddress","type":"address"},{"internalType":"address[]","name":"refundAddresses","type":"address[]"}],"internalType":"struct SpokePoolInterface.RelayerRefundLeaf","name":"relayerRefundLeaf","type":"tuple"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"executeRelayerRefundLeaf","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"destinationToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"int64","name":"realizedLpFeePct","type":"int64"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint32","name":"rootBundleId","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"int256","name":"payoutAdjustment","type":"int256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"executeSlowRelayLeaf","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"destinationToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"maxTokensToSend","type":"uint256"},{"internalType":"uint256","name":"repaymentChainId","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"int64","name":"realizedLpFeePct","type":"int64"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"fillRelay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"updatedRecipient","type":"address"},{"internalType":"address","name":"destinationToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"maxTokensToSend","type":"uint256"},{"internalType":"uint256","name":"repaymentChainId","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"int64","name":"realizedLpFeePct","type":"int64"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"int64","name":"updatedRelayerFeePct","type":"int64"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"internalType":"bytes","name":"depositorSignature","type":"bytes"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"fillRelayWithUpdatedDeposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"pause","type":"bool"}],"name":"pauseDeposits","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"pause","type":"bool"}],"name":"pauseFills","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"relayerRefundRoot","type":"bytes32"},{"internalType":"bytes32","name":"slowRelayRoot","type":"bytes32"}],"name":"relayRootBundle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newCrossDomainAdmin","type":"address"}],"name":"setCrossDomainAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"originToken","type":"address"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"bool","name":"enable","type":"bool"}],"name":"setEnableRoute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newHubPool","type":"address"}],"name":"setHubPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"int64","name":"updatedRelayerFeePct","type":"int64"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"address","name":"updatedRecipient","type":"address"},{"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"internalType":"bytes","name":"depositorSignature","type":"bytes"}],"name":"speedUpDeposit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"chainId()":"9a8a0592","deposit(address,address,uint256,uint256,int64,uint32,bytes,uint256)":"1186ec33","depositFor(address,address,address,uint256,uint256,int64,uint32,bytes,uint256)":"541f4f14","depositNow(address,address,uint256,uint256,int64,bytes,uint256)":"ae527fbb","emergencyDeleteRootBundle(uint256)":"8a7860ce","executeRelayerRefundLeaf(uint32,(uint256,uint256,uint256[],uint32,address,address[]),bytes32[])":"1b3d5559","executeSlowRelayLeaf(address,address,address,uint256,uint256,int64,int64,uint32,uint32,bytes,int256,bytes32[])":"0c2097f7","fillRelay(address,address,address,uint256,uint256,uint256,uint256,int64,int64,uint32,bytes,uint256)":"44b8be68","fillRelayWithUpdatedDeposit(address,address,address,address,uint256,uint256,uint256,uint256,int64,int64,int64,uint32,bytes,bytes,bytes,uint256)":"5ceaec32","pauseDeposits(bool)":"738b62e5","pauseFills(bool)":"99cc2968","relayRootBundle(bytes32,bytes32)":"493a4f84","setCrossDomainAdmin(address)":"de7eba78","setEnableRoute(address,uint256,bool)":"272751c7","setHubPool(address)":"1dfb2d02","speedUpDeposit(address,int64,uint32,address,bytes,bytes)":"7e688bba"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NotEOA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"quoteTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"quoteTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"depositFor\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"depositNow\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rootBundleId\",\"type\":\"uint256\"}],\"name\":\"emergencyDeleteRootBundle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"rootBundleId\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amountToReturn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"refundAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint32\",\"name\":\"leafId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"l2TokenAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"refundAddresses\",\"type\":\"address[]\"}],\"internalType\":\"struct SpokePoolInterface.RelayerRefundLeaf\",\"name\":\"relayerRefundLeaf\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"executeRelayerRefundLeaf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destinationToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"realizedLpFeePct\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"rootBundleId\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"int256\",\"name\":\"payoutAdjustment\",\"type\":\"int256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"executeSlowRelayLeaf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destinationToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTokensToSend\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"realizedLpFeePct\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"fillRelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destinationToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTokensToSend\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"realizedLpFeePct\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"updatedRelayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"fillRelayWithUpdatedDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"pause\",\"type\":\"bool\"}],\"name\":\"pauseDeposits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"pause\",\"type\":\"bool\"}],\"name\":\"pauseFills\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"relayerRefundRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"slowRelayRoot\",\"type\":\"bytes32\"}],\"name\":\"relayRootBundle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCrossDomainAdmin\",\"type\":\"address\"}],\"name\":\"setCrossDomainAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"setEnableRoute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newHubPool\",\"type\":\"address\"}],\"name\":\"setHubPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"updatedRelayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"}],\"name\":\"speedUpDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"depositFor(address,address,address,uint256,uint256,int64,uint32,bytes,uint256)\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"depositNow(address,address,uint256,uint256,int64,bytes,uint256)\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"executeRelayerRefundLeaf(uint32,(uint256,uint256,uint256[],uint32,address,address[]),bytes32[])\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"executeSlowRelayLeaf(address,address,address,uint256,uint256,int64,int64,uint32,uint32,bytes,int256,bytes32[])\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"fillRelay(address,address,address,uint256,uint256,uint256,uint256,int64,int64,uint32,bytes,uint256)\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"fillRelayWithUpdatedDeposit(address,address,address,address,uint256,uint256,uint256,uint256,int64,int64,int64,uint32,bytes,bytes,bytes,uint256)\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"speedUpDeposit(address,int64,uint32,address,bytes,bytes)\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains common data structures and functions used by all SpokePool implementations.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/SpokePoolInterface.sol\":\"SpokePoolInterface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/SpokePoolInterface.sol\":{\"keccak256\":\"0x5089df2f8d40f9afad742d059966a34a42fae5dd61ab9274585d303ca4bb6489\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://46f884dee4c3de680f45f66a5b2a34b41423ac818a736d5c108eb334f0fdf411\",\"dweb:/ipfs/QmdNJ2w2CEGkHv2rS4vYKNNdPjZALtCPJf4sQKzRW3ARzd\"]}},\"version\":1}"}},"contracts/interfaces/V3SpokePoolInterface.sol":{"V3SpokePoolInterface":{"abi":[{"inputs":[],"name":"ClaimedMerkleLeaf","type":"error"},{"inputs":[],"name":"DisabledRoute","type":"error"},{"inputs":[],"name":"ExpiredFillDeadline","type":"error"},{"inputs":[],"name":"InvalidChainId","type":"error"},{"inputs":[],"name":"InvalidExclusiveRelayer","type":"error"},{"inputs":[],"name":"InvalidExclusivityDeadline","type":"error"},{"inputs":[],"name":"InvalidFillDeadline","type":"error"},{"inputs":[],"name":"InvalidMerkleLeaf","type":"error"},{"inputs":[],"name":"InvalidMerkleProof","type":"error"},{"inputs":[],"name":"InvalidPayoutAdjustmentPct","type":"error"},{"inputs":[],"name":"InvalidQuoteTimestamp","type":"error"},{"inputs":[],"name":"InvalidSlowFillRequest","type":"error"},{"inputs":[],"name":"MsgValueDoesNotMatchInputAmount","type":"error"},{"inputs":[],"name":"NoSlowFillsInExclusivityWindow","type":"error"},{"inputs":[],"name":"NotExclusiveRelayer","type":"error"},{"inputs":[],"name":"RelayFilled","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"inputToken","type":"address"},{"indexed":false,"internalType":"address","name":"outputToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"inputAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outputAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"repaymentChainId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"originChainId","type":"uint256"},{"indexed":true,"internalType":"uint32","name":"depositId","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"indexed":false,"internalType":"address","name":"exclusiveRelayer","type":"address"},{"indexed":true,"internalType":"address","name":"relayer","type":"address"},{"indexed":false,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"},{"components":[{"internalType":"address","name":"updatedRecipient","type":"address"},{"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"internalType":"uint256","name":"updatedOutputAmount","type":"uint256"},{"internalType":"enum V3SpokePoolInterface.FillType","name":"fillType","type":"uint8"}],"indexed":false,"internalType":"struct V3SpokePoolInterface.V3RelayExecutionEventInfo","name":"relayExecutionInfo","type":"tuple"}],"name":"FilledV3Relay","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"updatedOutputAmount","type":"uint256"},{"indexed":true,"internalType":"uint32","name":"depositId","type":"uint32"},{"indexed":true,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"address","name":"updatedRecipient","type":"address"},{"indexed":false,"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"depositorSignature","type":"bytes"}],"name":"RequestedSpeedUpV3Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"inputToken","type":"address"},{"indexed":false,"internalType":"address","name":"outputToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"inputAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outputAmount","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"originChainId","type":"uint256"},{"indexed":true,"internalType":"uint32","name":"depositId","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"indexed":false,"internalType":"address","name":"exclusiveRelayer","type":"address"},{"indexed":false,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"}],"name":"RequestedV3SlowFill","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"inputToken","type":"address"},{"indexed":false,"internalType":"address","name":"outputToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"inputAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outputAmount","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"indexed":true,"internalType":"uint32","name":"depositId","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"quoteTimestamp","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"indexed":true,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"address","name":"exclusiveRelayer","type":"address"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"}],"name":"V3FundsDeposited","type":"event"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"inputToken","type":"address"},{"internalType":"address","name":"outputToken","type":"address"},{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256","name":"outputAmount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"address","name":"exclusiveRelayer","type":"address"},{"internalType":"uint32","name":"quoteTimestamp","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"}],"name":"depositV3","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"exclusiveRelayer","type":"address"},{"internalType":"address","name":"inputToken","type":"address"},{"internalType":"address","name":"outputToken","type":"address"},{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256","name":"outputAmount","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"}],"internalType":"struct V3SpokePoolInterface.V3RelayData","name":"relayData","type":"tuple"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"uint256","name":"updatedOutputAmount","type":"uint256"}],"internalType":"struct V3SpokePoolInterface.V3SlowFill","name":"slowFillLeaf","type":"tuple"},{"internalType":"uint32","name":"rootBundleId","type":"uint32"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"executeV3SlowRelayLeaf","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"exclusiveRelayer","type":"address"},{"internalType":"address","name":"inputToken","type":"address"},{"internalType":"address","name":"outputToken","type":"address"},{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256","name":"outputAmount","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"}],"internalType":"struct V3SpokePoolInterface.V3RelayData","name":"relayData","type":"tuple"},{"internalType":"uint256","name":"repaymentChainId","type":"uint256"}],"name":"fillV3Relay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"exclusiveRelayer","type":"address"},{"internalType":"address","name":"inputToken","type":"address"},{"internalType":"address","name":"outputToken","type":"address"},{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256","name":"outputAmount","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"}],"internalType":"struct V3SpokePoolInterface.V3RelayData","name":"relayData","type":"tuple"},{"internalType":"uint256","name":"repaymentChainId","type":"uint256"},{"internalType":"uint256","name":"updatedOutputAmount","type":"uint256"},{"internalType":"address","name":"updatedRecipient","type":"address"},{"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"internalType":"bytes","name":"depositorSignature","type":"bytes"}],"name":"fillV3RelayWithUpdatedDeposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"exclusiveRelayer","type":"address"},{"internalType":"address","name":"inputToken","type":"address"},{"internalType":"address","name":"outputToken","type":"address"},{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256","name":"outputAmount","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"}],"internalType":"struct V3SpokePoolInterface.V3RelayData","name":"relayData","type":"tuple"}],"name":"requestV3SlowFill","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint256","name":"updatedOutputAmount","type":"uint256"},{"internalType":"address","name":"updatedRecipient","type":"address"},{"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"internalType":"bytes","name":"depositorSignature","type":"bytes"}],"name":"speedUpV3Deposit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"depositV3(address,address,address,address,uint256,uint256,uint256,address,uint32,uint32,uint32,bytes)":"7b939232","executeV3SlowRelayLeaf(((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256,uint256),uint32,bytes32[])":"bbca7db0","fillV3Relay((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256)":"2e378115","fillV3RelayWithUpdatedDeposit((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256,uint256,address,bytes,bytes)":"ccfa5971","requestV3SlowFill((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes))":"9963e5a8","speedUpV3Deposit(address,uint32,uint256,address,bytes,bytes)":"4e0fb8f5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ClaimedMerkleLeaf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DisabledRoute\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpiredFillDeadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidChainId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidExclusiveRelayer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidExclusivityDeadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFillDeadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMerkleLeaf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMerkleProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPayoutAdjustmentPct\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQuoteTimestamp\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSlowFillRequest\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MsgValueDoesNotMatchInputAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSlowFillsInExclusivityWindow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotExclusiveRelayer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RelayFilled\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"updatedOutputAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum V3SpokePoolInterface.FillType\",\"name\":\"fillType\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct V3SpokePoolInterface.V3RelayExecutionEventInfo\",\"name\":\"relayExecutionInfo\",\"type\":\"tuple\"}],\"name\":\"FilledV3Relay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updatedOutputAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"}],\"name\":\"RequestedSpeedUpV3Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"RequestedV3SlowFill\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"quoteTimestamp\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"V3FundsDeposited\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"quoteTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"depositV3\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"internalType\":\"struct V3SpokePoolInterface.V3RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedOutputAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct V3SpokePoolInterface.V3SlowFill\",\"name\":\"slowFillLeaf\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"rootBundleId\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"executeV3SlowRelayLeaf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"internalType\":\"struct V3SpokePoolInterface.V3RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"}],\"name\":\"fillV3Relay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"internalType\":\"struct V3SpokePoolInterface.V3RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedOutputAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"}],\"name\":\"fillV3RelayWithUpdatedDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"internalType\":\"struct V3SpokePoolInterface.V3RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"name\":\"requestV3SlowFill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"updatedOutputAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"}],\"name\":\"speedUpV3Deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/V3SpokePoolInterface.sol\":\"V3SpokePoolInterface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/V3SpokePoolInterface.sol\":{\"keccak256\":\"0xdd33112f0dc8f8462307cda7d7753cb9be49cd209b6520abd69273ac015f7ab6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://211c34424710bc8a4ab41bf00bdd9df32e139642a3007a7bbe1e60020f943d2f\",\"dweb:/ipfs/QmYVM5c84V4iqKy734Sjq4TFKMJyJ3cQLHB2Katz1pTBZz\"]}},\"version\":1}"}},"contracts/test/MockSpokePool.sol":{"MockSpokePool":{"abi":[{"inputs":[{"internalType":"address","name":"_wrappedNativeTokenAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ClaimedMerkleLeaf","type":"error"},{"inputs":[],"name":"DisabledRoute","type":"error"},{"inputs":[],"name":"ExpiredFillDeadline","type":"error"},{"inputs":[],"name":"InvalidChainId","type":"error"},{"inputs":[],"name":"InvalidExclusiveRelayer","type":"error"},{"inputs":[],"name":"InvalidExclusivityDeadline","type":"error"},{"inputs":[],"name":"InvalidFillDeadline","type":"error"},{"inputs":[],"name":"InvalidMerkleLeaf","type":"error"},{"inputs":[],"name":"InvalidMerkleProof","type":"error"},{"inputs":[],"name":"InvalidPayoutAdjustmentPct","type":"error"},{"inputs":[],"name":"InvalidQuoteTimestamp","type":"error"},{"inputs":[],"name":"InvalidSlowFillRequest","type":"error"},{"inputs":[],"name":"MsgValueDoesNotMatchInputAmount","type":"error"},{"inputs":[],"name":"NoSlowFillsInExclusivityWindow","type":"error"},{"inputs":[],"name":"NotEOA","type":"error"},{"inputs":[],"name":"NotExclusiveRelayer","type":"error"},{"inputs":[],"name":"RelayFilled","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"address","name":"token","type":"address"}],"name":"BridgedToHubPool","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"rootBundleId","type":"uint256"}],"name":"EmergencyDeleteRootBundle","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"originToken","type":"address"},{"indexed":true,"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"enabled","type":"bool"}],"name":"EnabledDepositRoute","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amountToReturn","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"chainId","type":"uint256"},{"indexed":false,"internalType":"uint256[]","name":"refundAmounts","type":"uint256[]"},{"indexed":true,"internalType":"uint32","name":"rootBundleId","type":"uint32"},{"indexed":true,"internalType":"uint32","name":"leafId","type":"uint32"},{"indexed":false,"internalType":"address","name":"l2TokenAddress","type":"address"},{"indexed":false,"internalType":"address[]","name":"refundAddresses","type":"address[]"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"ExecutedRelayerRefundRoot","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalFilledAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fillAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"repaymentChainId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"originChainId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"indexed":false,"internalType":"int64","name":"relayerFeePct","type":"int64"},{"indexed":false,"internalType":"int64","name":"realizedLpFeePct","type":"int64"},{"indexed":true,"internalType":"uint32","name":"depositId","type":"uint32"},{"indexed":false,"internalType":"address","name":"destinationToken","type":"address"},{"indexed":false,"internalType":"address","name":"relayer","type":"address"},{"indexed":true,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"bool","name":"isSlowRelay","type":"bool"},{"internalType":"int256","name":"payoutAdjustmentPct","type":"int256"}],"indexed":false,"internalType":"struct SpokePool.RelayExecutionInfo","name":"updatableRelayData","type":"tuple"}],"name":"FilledRelay","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"inputToken","type":"address"},{"indexed":false,"internalType":"address","name":"outputToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"inputAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outputAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"repaymentChainId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"originChainId","type":"uint256"},{"indexed":true,"internalType":"uint32","name":"depositId","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"indexed":false,"internalType":"address","name":"exclusiveRelayer","type":"address"},{"indexed":true,"internalType":"address","name":"relayer","type":"address"},{"indexed":false,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"},{"components":[{"internalType":"address","name":"updatedRecipient","type":"address"},{"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"internalType":"uint256","name":"updatedOutputAmount","type":"uint256"},{"internalType":"enum V3SpokePoolInterface.FillType","name":"fillType","type":"uint8"}],"indexed":false,"internalType":"struct V3SpokePoolInterface.V3RelayExecutionEventInfo","name":"relayExecutionInfo","type":"tuple"}],"name":"FilledV3Relay","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"originChainId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"indexed":false,"internalType":"int64","name":"relayerFeePct","type":"int64"},{"indexed":true,"internalType":"uint32","name":"depositId","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"quoteTimestamp","type":"uint32"},{"indexed":false,"internalType":"address","name":"originToken","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"}],"name":"FundsDeposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"isPaused","type":"bool"}],"name":"PausedDeposits","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"isPaused","type":"bool"}],"name":"PausedFills","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"}],"name":"PreLeafExecuteHook","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint32","name":"rootBundleId","type":"uint32"},{"indexed":true,"internalType":"bytes32","name":"relayerRefundRoot","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"slowRelayRoot","type":"bytes32"}],"name":"RelayedRootBundle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"int64","name":"newRelayerFeePct","type":"int64"},{"indexed":true,"internalType":"uint32","name":"depositId","type":"uint32"},{"indexed":true,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"address","name":"updatedRecipient","type":"address"},{"indexed":false,"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"depositorSignature","type":"bytes"}],"name":"RequestedSpeedUpDeposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"updatedOutputAmount","type":"uint256"},{"indexed":true,"internalType":"uint32","name":"depositId","type":"uint32"},{"indexed":true,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"address","name":"updatedRecipient","type":"address"},{"indexed":false,"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"depositorSignature","type":"bytes"}],"name":"RequestedSpeedUpV3Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"inputToken","type":"address"},{"indexed":false,"internalType":"address","name":"outputToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"inputAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outputAmount","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"originChainId","type":"uint256"},{"indexed":true,"internalType":"uint32","name":"depositId","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"indexed":false,"internalType":"address","name":"exclusiveRelayer","type":"address"},{"indexed":false,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"}],"name":"RequestedV3SlowFill","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newHubPool","type":"address"}],"name":"SetHubPool","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAdmin","type":"address"}],"name":"SetXDomainAdmin","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amountToReturn","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"chainId","type":"uint256"},{"indexed":true,"internalType":"uint32","name":"leafId","type":"uint32"},{"indexed":true,"internalType":"address","name":"l2TokenAddress","type":"address"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"TokensBridged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"inputToken","type":"address"},{"indexed":false,"internalType":"address","name":"outputToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"inputAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outputAmount","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"indexed":true,"internalType":"uint32","name":"depositId","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"quoteTimestamp","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"indexed":true,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"address","name":"exclusiveRelayer","type":"address"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"}],"name":"V3FundsDeposited","type":"event"},{"inputs":[],"name":"EMPTY_RELAYER","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EMPTY_REPAYMENT_CHAIN_ID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"INFINITE_FILL_DEADLINE","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_TRANSFER_SIZE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SLOW_FILL_MAX_TOKENS_TO_SEND","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPDATE_DEPOSIT_DETAILS_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPDATE_V3_DEPOSIT_DETAILS_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_initialDepositId","type":"uint32"},{"internalType":"address","name":"_crossDomainAdmin","type":"address"},{"internalType":"address","name":"_hubPool","type":"address"}],"name":"__SpokePool_init","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"callback","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"chainId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"crossDomainAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"originToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"uint32","name":"quoteTimestamp","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"originToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"uint32","name":"quoteTimestamp","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"depositFor","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"originToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"depositForNow","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"originToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"depositNow","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"depositQuoteTimeBuffer","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"originToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"uint32","name":"quoteTimestamp","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"depositV2","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"inputToken","type":"address"},{"internalType":"address","name":"outputToken","type":"address"},{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256","name":"outputAmount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"address","name":"exclusiveRelayer","type":"address"},{"internalType":"uint32","name":"quoteTimestamp","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"}],"name":"depositV3","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_chainId","type":"uint256"},{"internalType":"uint256","name":"amountToReturn","type":"uint256"},{"internalType":"uint256[]","name":"refundAmounts","type":"uint256[]"},{"internalType":"uint32","name":"leafId","type":"uint32"},{"internalType":"address","name":"l2TokenAddress","type":"address"},{"internalType":"address[]","name":"refundAddresses","type":"address[]"}],"name":"distributeRelayerRefunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"rootBundleId","type":"uint256"}],"name":"emergencyDeleteRootBundle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"enabledDepositRoutes","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"rootBundleId","type":"uint32"},{"components":[{"internalType":"uint256","name":"amountToReturn","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"uint256[]","name":"refundAmounts","type":"uint256[]"},{"internalType":"uint32","name":"leafId","type":"uint32"},{"internalType":"address","name":"l2TokenAddress","type":"address"},{"internalType":"address[]","name":"refundAddresses","type":"address[]"}],"internalType":"struct SpokePoolInterface.RelayerRefundLeaf","name":"relayerRefundLeaf","type":"tuple"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"executeRelayerRefundLeaf","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"destinationToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"int64","name":"realizedLpFeePct","type":"int64"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint32","name":"rootBundleId","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"int256","name":"payoutAdjustment","type":"int256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"executeSlowRelayLeaf","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"exclusiveRelayer","type":"address"},{"internalType":"address","name":"inputToken","type":"address"},{"internalType":"address","name":"outputToken","type":"address"},{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256","name":"outputAmount","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"}],"internalType":"struct V3SpokePoolInterface.V3RelayData","name":"relayData","type":"tuple"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"uint256","name":"updatedOutputAmount","type":"uint256"}],"internalType":"struct V3SpokePoolInterface.V3SlowFill","name":"slowFillLeaf","type":"tuple"},{"internalType":"uint32","name":"rootBundleId","type":"uint32"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"executeV3SlowRelayLeaf","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"fillDeadlineBuffer","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"destinationToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"maxTokensToSend","type":"uint256"},{"internalType":"uint256","name":"repaymentChainId","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"int64","name":"realizedLpFeePct","type":"int64"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"fillRelay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"exclusiveRelayer","type":"address"},{"internalType":"address","name":"inputToken","type":"address"},{"internalType":"address","name":"outputToken","type":"address"},{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256","name":"outputAmount","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"}],"internalType":"struct V3SpokePoolInterface.V3RelayData","name":"relay","type":"tuple"},{"internalType":"bytes32","name":"relayHash","type":"bytes32"},{"internalType":"uint256","name":"updatedOutputAmount","type":"uint256"},{"internalType":"address","name":"updatedRecipient","type":"address"},{"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"internalType":"uint256","name":"repaymentChainId","type":"uint256"}],"internalType":"struct V3SpokePoolInterface.V3RelayExecutionParams","name":"relayExecution","type":"tuple"},{"internalType":"address","name":"relayer","type":"address"},{"internalType":"bool","name":"isSlowFill","type":"bool"}],"name":"fillRelayV3Internal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"updatedRecipient","type":"address"},{"internalType":"address","name":"destinationToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"maxTokensToSend","type":"uint256"},{"internalType":"uint256","name":"repaymentChainId","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"int64","name":"realizedLpFeePct","type":"int64"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"int64","name":"updatedRelayerFeePct","type":"int64"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"internalType":"bytes","name":"depositorSignature","type":"bytes"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"fillRelayWithUpdatedDeposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"fillStatuses","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"exclusiveRelayer","type":"address"},{"internalType":"address","name":"inputToken","type":"address"},{"internalType":"address","name":"outputToken","type":"address"},{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256","name":"outputAmount","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"}],"internalType":"struct V3SpokePoolInterface.V3RelayData","name":"relayData","type":"tuple"},{"internalType":"uint256","name":"repaymentChainId","type":"uint256"}],"name":"fillV3Relay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"exclusiveRelayer","type":"address"},{"internalType":"address","name":"inputToken","type":"address"},{"internalType":"address","name":"outputToken","type":"address"},{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256","name":"outputAmount","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"}],"internalType":"struct V3SpokePoolInterface.V3RelayData","name":"relayData","type":"tuple"},{"internalType":"uint256","name":"repaymentChainId","type":"uint256"},{"internalType":"uint256","name":"updatedOutputAmount","type":"uint256"},{"internalType":"address","name":"updatedRecipient","type":"address"},{"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"internalType":"bytes","name":"depositorSignature","type":"bytes"}],"name":"fillV3RelayWithUpdatedDeposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getCurrentTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"hubPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_initialDepositId","type":"uint32"},{"internalType":"address","name":"_crossDomainAdmin","type":"address"},{"internalType":"address","name":"_hubPool","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"numberOfDeposits","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"pause","type":"bool"}],"name":"pauseDeposits","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"pause","type":"bool"}],"name":"pauseFills","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"pausedDeposits","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pausedFills","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"relayerRefundRoot","type":"bytes32"},{"internalType":"bytes32","name":"slowRelayRoot","type":"bytes32"}],"name":"relayRootBundle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"exclusiveRelayer","type":"address"},{"internalType":"address","name":"inputToken","type":"address"},{"internalType":"address","name":"outputToken","type":"address"},{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256","name":"outputAmount","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"}],"internalType":"struct V3SpokePoolInterface.V3RelayData","name":"relayData","type":"tuple"}],"name":"requestV3SlowFill","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"rootBundles","outputs":[{"internalType":"bytes32","name":"slowRelayRoot","type":"bytes32"},{"internalType":"bytes32","name":"relayerRefundRoot","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_chainId","type":"uint256"}],"name":"setChainId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newCrossDomainAdmin","type":"address"}],"name":"setCrossDomainAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"time","type":"uint256"}],"name":"setCurrentTime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"originToken","type":"address"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"bool","name":"enabled","type":"bool"}],"name":"setEnableRoute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"relayHash","type":"bytes32"},{"internalType":"enum V3SpokePoolInterface.FillType","name":"fillType","type":"uint8"}],"name":"setFillStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newHubPool","type":"address"}],"name":"setHubPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"int64","name":"updatedRelayerFeePct","type":"int64"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"address","name":"updatedRecipient","type":"address"},{"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"internalType":"bytes","name":"depositorSignature","type":"bytes"}],"name":"speedUpDeposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint256","name":"updatedOutputAmount","type":"uint256"},{"internalType":"address","name":"updatedRecipient","type":"address"},{"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"internalType":"bytes","name":"depositorSignature","type":"bytes"}],"name":"speedUpV3Deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"uint256","name":"updatedOutputAmount","type":"uint256"},{"internalType":"address","name":"updatedRecipient","type":"address"},{"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"internalType":"bytes","name":"depositorSignature","type":"bytes"}],"name":"verifyUpdateV3DepositMessage","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[],"name":"wrappedNativeToken","outputs":[{"internalType":"contract WETH9Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"61010034620001aa57601f62005dba38819003918201601f19168301916001600160401b03831184841017620001ae57808492602094604052833981010312620001aa57516001600160a01b03811690819003620001aa573060805260a052610e1060c052617e9060e0525f5460ff8160081c16620001555760ff808216036200011a575b604051615bf79081620001c38239608051818181610d880152818161113c01526112f7015260a05181818161090e0152818161219401528181612f56015281816138ca01528181613fdd01528181614249015281816144ef01528181614ad8015281816153cf01526153f6015260c05181818161145601528181612efb015261387e015260e0518181816103f301526130a40152f35b60ff90811916175f557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a15f62000084565b60405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080604052600436101561001a575b3615610018575f80fd5b005b5f3560e01c8063079bd2c7146103c45780630c2097f7146103bf5780631186ec33146103ba57806315348e441461034757806317fcb39b146103b55780631b3d5559146103b05780631dfb2d02146103ab57806322f8e566146103a6578063272751c7146103a157806329cb924d1461039c5780632cfc26c5146103975780632e378115146103925780633659cfe61461038d57806344b8be6814610388578063493a4f84146103835780634e0fb8f51461037e5780634f1ef286146103795780635249fef1146103745780635285e0581461036f57806352d1902d1461036a578063541f4f141461036557806357f6dcb8146103605780635ceaec321461035b5780635dd36f9c146103565780636068d6cb14610351578063647c576c1461034c5780636bbbcd2e14610347578063715018a614610342578063738b62e51461033d57806374dfa43d146103385780637b939232146103335780637e688bba1461032e57806387c3932d146103295780638a7860ce146103245780638da5cb5b1461031f578063979f2bc21461031a5780639963e5a81461031557806399cc2968146103105780639a8a05921461030b578063a1244c6714610306578063a78e4b6014610301578063ac9650d8146102fc578063ae527fbb146102f7578063b5e1bf5f146102f2578063bbca7db0146102ed578063bdcb53a5146102e8578063bf40f25b146102e3578063c35c83fc146102de578063ccfa5971146102d9578063ceb4c987146102d4578063dda52113146102cf578063ddd224f1146102ca578063de7eba78146102c5578063e1904402146102c0578063e98a5654146102bb578063ee2a53f8146102b6578063ef0e2ff4146102b1578063f2fde38b146102ac5763fd7c10540361000e57612732565b6126a1565b612687565b612649565b61259c565b612573565b612543565b61251a565b6124f4565b6124d6565b612454565b612429565b612367565b612149565b612043565b612019565b611f94565b611eb4565b611db4565b611d8d565b611d6b565b611ced565b611b49565b611a97565b611a6e565b6119f6565b611985565b6118fe565b611855565b6117d3565b611755565b61170c565b6108df565b6115d9565b611581565b611547565b61147a565b61143a565b6113a7565b6112e5565b6112bc565b611262565b6110fb565b610fdd565b610f2e565b610e99565b610d61565b610c37565b610c01565b610be3565b610b45565b610b14565b610adf565b610a07565b6108f9565b6108a3565b61078f565b6103d7565b5f9103126103d357565b5f80fd5b346103d3575f3660031901126103d357602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b6001600160a01b031690565b6001600160a01b038116036103d357565b6004359061044182610423565b565b6024359061044182610423565b6044359061044182610423565b6064359061044182610423565b359061044182610423565b60a435908160070b82036103d357565b60c435908160070b82036103d357565b61010435908160070b82036103d357565b61012435908160070b82036103d357565b61014435908160070b82036103d357565b608435908160070b82036103d357565b63ffffffff8116036103d357565b60e43590610441826104d8565b6101043590610441826104d8565b6101243590610441826104d8565b6101643590610441826104d8565b6101443590610441826104d8565b3590610441826104d8565b634e487b7160e01b5f52604160045260245ffd5b6001600160401b03811161055d57604052565b610536565b606081019081106001600160401b0382111761055d57604052565b608081019081106001600160401b0382111761055d57604052565b60a081019081106001600160401b0382111761055d57604052565b602081019081106001600160401b0382111761055d57604052565b604081019081106001600160401b0382111761055d57604052565b60e081019081106001600160401b0382111761055d57604052565b601f909101601f19168101906001600160401b0382119082101761055d57604052565b6040519060c082016001600160401b0381118382101761055d57604052565b6040519061018082016001600160401b0381118382101761055d57604052565b6040519061014082016001600160401b0381118382101761055d57604052565b604051906104418261057d565b6040519061044182610598565b6001600160401b03811161055d57601f01601f191660200190565b9291926106c7826106a0565b916106d56040519384610604565b8294818452818301116103d3578281602093845f960137010152565b9080601f830112156103d35781602061070c933591016106bb565b90565b6001600160401b03811161055d5760051b60200190565b92916107318261070f565b9161073f6040519384610604565b829481845260208094019160051b81019283116103d357905b8282106107655750505050565b81358152908301908301610758565b9080601f830112156103d35781602061070c93359101610726565b346103d3576101803660031901126103d3576004356107ad81610423565b6107b5610443565b906107be610450565b6107c6610475565b926107cf610485565b6107d76104e6565b6107df6104f3565b6001600160401b0396909290610124358881116103d3576108049036906004016106f1565b94610164359889116103d357610821610018993690600401610774565b97610144359760843592606435926127a3565b6101006003198201126103d35760043561084d81610423565b9160243561085a81610423565b9160443591606435916084358060070b81036103d3579160a43561087d816104d8565b9160c435906001600160401b0382116103d35761089c916004016106f1565b9060e43590565b6108d86108af36610834565b50956108bf959195949294613618565b6108d260ff61086b5460e81c16156128b8565b3361380e565b6001606555005b346103d3575f3660031901126103d35760206040515f8152f35b346103d3575f3660031901126103d3576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b9080601f830112156103d35760209082356109578161070f565b936109656040519586610604565b81855260208086019260051b8201019283116103d357602001905b82821061098e575050505090565b81358152908301908301610980565b9080601f830112156103d35760209082356109b78161070f565b936109c56040519586610604565b81855260208086019260051b8201019283116103d357602001905b8282106109ee575050505090565b83809183356109fc81610423565b8152019101906109e0565b6003196060368201126103d357600435610a20816104d8565b6001600160401b0391602435908382116103d35760c09082360301126103d357610a48610627565b90806004013582526024810135602083015260448101358481116103d357610a76906004369184010161093d565b6040830152610a876064820161052b565b6060830152610a986084820161046a565b608083015260a4810135908482116103d3576004610ab9923692010161099d565b60a08201526044359283116103d357610ad9610018933690600401610774565b916128f6565b346103d35760203660031901126103d3576108d8600435610aff81610423565b610b07614fcd565b610b0f613618565b613b90565b346103d35760203660031901126103d357600435610cbf55005b801515036103d357565b6044359061044182610b2e565b346103d35760603660031901126103d357600435610b6281610423565b602435907f0a21fdd43d0ad0c62689ee7230a47309a050755bcc52eba00310add65297692a602060443592610b9684610b2e565b610b9e614fcd565b610ba6613618565b60018060a01b031692835f5261086d825260405f20855f52825260405f209015159060ff1981541660ff8316179055604051908152a36001606555005b346103d3575f3660031901126103d3576020610cbf54604051908152f35b346103d3575f3660031901126103d35760206040515f80516020615ba28339815191528152f35b90816101809103126103d35790565b346103d35760403660031901126103d3576004356001600160401b0381116103d357610c67903690600401610c28565b610c6f613618565b610c8260ff61086b5460e01c1615612ade565b610c8f6101408201612b19565b63ffffffff610cbf549116101580610d43575b610d3157610d2790610d13610cbf610cba3684612288565b613cda565b9160c0610d0c610cd160208401612b23565b610cdf610160850185612b2d565b939094610cea610627565b97610cf53683612288565b895260208901520135604087015260608601612b5f565b36916106bb565b608082015260243560a08201523390613e25565b6100186001606555565b604051630c3a9b9d60e41b8152600490fd5b50610d5060408201612b23565b6001600160a01b0316331415610ca2565b346103d35760203660031901126103d357600435610d7e81610423565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169190610db730841415612b6e565b610dd35f80516020615b02833981519152938285541614612bbc565b610ddb614fcd565b60405190610de8826105b3565b5f82525f80516020615aa28339815191525460ff1615610e0e5750506100189150615607565b6020600491604094939451928380926352d1902d60e01b825286165afa5f9181610e68575b50610e555760405162461bcd60e51b815280610e51600482016145f0565b0390fd5b61001893610e639114614592565b615522565b610e8b91925060203d602011610e92575b610e838183610604565b810190614583565b905f610e33565b503d610e79565b346103d3576101803660031901126103d357600435610eb781610423565b602435610ec381610423565b604435610ecf81610423565b60e4358060070b81036103d357610ee4610495565b610eec610501565b61014435959092906001600160401b0387116103d357610f136100189736906004016106f1565b94610164359660c4359260a435926084359260643592612c0a565b346103d35760403660031901126103d357602435600435610f4d614fcd565b610f55613618565b61086c8054600160401b81101561055d5763ffffffff9160018201905583610f7c82612628565b5084600182015555167fc86ba04c55bc5eb2f2876b91c438849a296dbec7b08751c3074d92e04f0a77af5f80a46001606555005b9181601f840112156103d3578235916001600160401b0383116103d357602083818601950101116103d357565b346103d35760c03660031901126103d357600435610ffa81610423565b60243590611007826104d8565b60443560643561101681610423565b6001600160401b03916084358381116103d357611037903690600401610fb0565b93909460a4359182116103d3576110df63ffffffff7fb0a29aed3d389a1041194255878b423f7780be3ed2324d4693508c6ff189845e9661107f6110f1953690600401610fb0565b93909961108a613618565b6110b78c8c8b8b611099613397565b6110b06110a7368b8a6106bb565b948c36916106bb565b948c614efa565b60018060a01b0392836040519a8b9a8b521660208a0152608060408a01526080890191612d07565b93868503606088015216981696612d07565b0390a36001606555005b60403660031901126103d35760043561111381610423565b6024356001600160401b0381116103d3576111329036906004016106f1565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811692919061116c30851415612b6e565b6111885f80516020615b02833981519152948286541614612bbc565b611190614fcd565b5f80516020615aa28339815191525460ff16156111b35750506100189150615607565b6020600491604094939451928380926352d1902d60e01b825286165afa5f9181611209575b506111f65760405162461bcd60e51b815280610e51600482016145f0565b610018936112049114614592565b6155c8565b61122391925060203d602011610e9257610e838183610604565b905f6111d8565b6001600160a01b03165f90815261086d6020526040902090565b5f5261087260205260405f2090565b5f5261086e60205260405f2090565b346103d35760403660031901126103d35760043561127f81610423565b60018060a01b03165f5261086d60205260405f206024355f52602052602060ff60405f2054166040519015158152f35b6001600160a01b03169052565b346103d3575f3660031901126103d357610869546040516001600160a01b039091168152602090f35b346103d3575f3660031901126103d3577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003611341576040515f80516020615b028339815191528152602090f35b0390f35b60405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b6064820152608490fd5b6101203660031901126103d3576004356113c081610423565b6024356113cc81610423565b604435906113d982610423565b6113e1610475565b60c435916113ee836104d8565b60e435946001600160401b0386116103d3576114116108d89636906004016106f1565b9461141a613618565b61142d60ff61086b5460e81c16156128b8565b608435926064359261380e565b346103d3575f3660031901126103d357602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346103d3576102003660031901126103d357611494610434565b61149c610443565b906114a5610450565b916114ae61045d565b926114b7610495565b936114c06104a6565b6114c86104b7565b6114d061050f565b6001600160401b0397909290610184358981116103d3576114f59036906004016106f1565b946101a4358a81116103d35761150f9036906004016106f1565b966101c4359a8b116103d35761152c6100189b36906004016106f1565b986101e4359a60e4359360c4359360a4359360843593612d27565b346103d35760403660031901126103d35760243560038110156103d35761156d81612e39565b6004355f5261087260205260405f20555f80f35b346103d3575f3660031901126103d357602060ff61086b5460e81c166040519015158152f35b60609060031901126103d3576004356115bf816104d8565b906024356115cc81610423565b9060443561070c81610423565b346103d3576115e7366115a7565b5f54600881901c60ff16159392908490816116fe575b81156116de575b501561168257611628928461161f600160ff195f5416175f55565b61166b57612e48565b61162e57005b61163c61ff00195f54165f55565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a1005b61167d61010061ff00195f5416175f55565b612e48565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b303b159150816116f0575b505f611604565b6001915060ff16145f6116e9565b600160ff82161091506115fd565b346103d3575f3660031901126103d357611724614fcd565b610c8c80546001600160a01b031981169091555f906001600160a01b03165f80516020615b428339815191528280a3005b346103d35760203660031901126103d3577fe88463c2f254e2b070013a2dc7ee1e099f9bc00534cbdf03af551dc26ae49219602060043561179581610b2e565b61179d614fcd565b6117a5613618565b61086b805460ff60e81b191691151560e881901b60ff60e81b16929092179055604051908152a16001606555005b346103d35760e03660031901126103d3576004356117f081610423565b602435906117fd826104d8565b6084359161180a83610423565b6001600160401b039260a4358481116103d35761182b9036906004016106f1565b9160c4359485116103d3576118476100189536906004016106f1565b936064359160443591614efa565b6101803660031901126103d35760043561186e81610423565b6024359061187b82610423565b60443561188781610423565b6064359061189482610423565b60e4356118a081610423565b610104356118ad816104d8565b61012435916118bb836104d8565b6118c361051d565b61016435979094906001600160401b0389116103d3576118ea610018993690600401610fb0565b98909760c4359360a4359360843593612e8b565b346103d35760c03660031901126103d35760043561191b81610423565b602435908160070b82036103d35760443591611936836104d8565b60643561194281610423565b6001600160401b03936084358581116103d3576119639036906004016106f1565b9260a4359586116103d35761197f6100189636906004016106f1565b946131d8565b346103d35760c03660031901126103d3576001600160401b036044358181116103d3576119b690369060040161093d565b6064356119c2816104d8565b608435906119cf82610423565b60a4359384116103d3576119ea61001894369060040161099d565b92602435600435613aae565b346103d35760203660031901126103d357600435611a12614fcd565b611a1a613618565b611a2381612628565b611a5b576001815f80935501557f3569b846531b754c99cb80df3f49cd72fa6fe106aaee5ab8e0caf35a9d7ce88d5f80a26001606555005b634e487b7160e01b5f525f60045260245ffd5b346103d3575f3660031901126103d357610c8c546040516001600160a01b039091168152602090f35b346103d357610018611ac6610b0f611aae366115a7565b939091611ac160ff5f5460081c166132cd565b61314a565b604051611ad2816105ce565b6009815260208101906820a1a927a9a996ab1960b91b825260405191611af7836105ce565b600583526020830191640312e302e360dc1b8352611b2460ff5f5460081c16611b1f816132cd565b6132cd565b519020915190209061047f5561048055611b3c6150b2565b611b446150c2565b6150dd565b346103d35760203660031901126103d3576004356001600160401b0381116103d357611b79903690600401610c28565b611b81613618565b611b9460ff61086b5460e01c1615612ade565b610140810190611ba382612b19565b610cbf54908163ffffffff8092161015611cdb5761012083019181611bc784612b19565b1610611cc957611bda610cba3685612288565b91611be483611244565b54611cb857611c1c611c167f923794976d026d6b119735adc163cb71decfc903e17c3dc226c00789593c04e194611244565b60019055565b611cab611c2b60608601612b23565b95611c3860808701612b23565b95611c58611c52611c4c6101008401612b19565b95612b19565b92612b19565b611c6460408301612b23565b611c6d83612b23565b90611c7a60208501612b23565b92611c89610160860186612b2d565b9690956040519a8b9a169d60e08201359d60a060c0840135930135918c61332d565b0390a36100186001606555565b604051624be79160e21b8152600490fd5b60405163d642b7d960e01b8152600490fd5b604051630277ae7b60e21b8152600490fd5b346103d35760203660031901126103d3577f2d5b62420992e5a4afce0e77742636ca2608ef58289fd2e1baa5161ef6e7e41e6020600435611d2d81610b2e565b611d35614fcd565b611d3d613618565b61086b805460ff60e01b191691151560e081901b60ff60e01b16929092179055604051908152a16001606555005b346103d3575f3660031901126103d3576020611d85613397565b604051908152f35b346103d3575f3660031901126103d357602063ffffffff61086b5460c01c16604051908152f35b346103d3575f3660031901126103d35760206040515f80516020615b828339815191528152f35b9181601f840112156103d3578235916001600160401b0383116103d3576020808501948460051b0101116103d357565b5f5b838110611e1c5750505f910152565b8181015183820152602001611e0d565b90602091611e4581518092818552858086019101611e0b565b601f01601f1916010190565b6020808201906020835283518092526040830192602060408460051b8301019501935f915b848310611e865750505050505090565b9091929394958480611ea4600193603f198682030187528a51611e2c565b9801930193019194939290611e76565b346103d35760203660031901126103d357600480356001600160401b0381116103d357611ee5903690600401611ddb565b91611eef836133a5565b925f5b818110611f07576040518061133d8782611e51565b5f80611f148385886133ee565b60409391611f26855180938193613409565b0390305af490611f34613416565b9115611f5b575090600191611f4982886134b4565b52611f5481876134b4565b5001611ef2565b848260448151106103d357611f7f8183610e51930151602480918301019101613445565b925162461bcd60e51b815292839283016134a3565b60e03660031901126103d357600435611fac81610423565b602435611fb881610423565b611fc06104c8565b60a43592906001600160401b0384116103d357611fe46108d89436906004016106f1565b9263ffffffff610cbf541692611ff8613618565b61200b60ff61086b5460e81c16156128b8565b60643591604435913361380e565b346103d3575f3660031901126103d3576040516b1d6329f1c35ca4bfabb9f56160281b8152602090f35b346103d3576003196060368201126103d3576004356001600160401b038082116103d3576060823603938401126103d35760243590612081826104d8565b6044359081116103d357612099903690600401611ddb565b9190936120a4613618565b60048401359061018219018112156103d357610d2794612144936120d161213d9360043691890101612288565b956120e76120e26080890151610417565b61366e565b61212b6120f388613cda565b91604461210360208b0151610417565b916101608b015194612113610627565b9b8c5260208c0152013560408a015260608901612b5f565b60808701525f60a08701523691610726565b9083615166565b6140c3565b61215236610834565b509461216096939496613618565b63ffffffff61086b5461217960ff8260e81c16156128b8565b60c01c169561218a611ac188613135565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169590899084168088148061227f575b1561225857506121d59034146134c8565b853b156103d3575f60049660405197888092630d0e30db60e41b825234905af1928315612253575f80516020615b228339815191529661222d9461223a575b505b61221e613397565b94604051968796339c886134cf565b0390a46100186001606555565b8061224761224d9261054a565b806103c9565b5f612214565b61312a565b5f80516020615b22833981519152975061222d949161227a913090339061505c565b612216565b503415156121c4565b9190610180838203126103d35761229d610646565b926122a78161046a565b84526122b56020820161046a565b60208501526122c66040820161046a565b60408501526122d76060820161046a565b60608501526122e86080820161046a565b608085015260a081013560a085015260c081013560c085015260e081013560e085015261010061231981830161052b565b9085015261012061232b81830161052b565b9085015261014061233d81830161052b565b9085015261016091818301356001600160401b0381116103d35761236192016106f1565b90830152565b346103d3576003196060368201126103d357600435906001600160401b03908183116103d35760c09083360301126103d3576123a1610627565b9082600401358181116103d3576123be9060043691860101612288565b825260248301356020830152604483013560408301526123e06064840161046a565b606083015260848301359081116103d3576100189261240760a492600436918401016106f1565b6080840152013560a082015261241b610443565b612423610b38565b91614341565b346103d35760203660031901126103d3576004355f52610872602052602060405f2054604051908152f35b346103d35760c03660031901126103d3576001600160401b036004358181116103d357612485903690600401610c28565b6064359061249282610423565b6084358381116103d3576124aa903690600401610fb0565b9060a4359485116103d3576124c6610018953690600401610fb0565b9490936044359060243590613517565b346103d3575f3660031901126103d357602060405163ffffffff8152f35b346103d3575f3660031901126103d357602060ff61086b5460e01c166040519015158152f35b346103d3575f3660031901126103d3576040516a0c097ce7bc90715b34b9f160241b8152602090f35b346103d35760203660031901126103d3576108d860043561256381610423565b61256b614fcd565b611b44613618565b346103d3575f3660031901126103d35761086a546040516001600160a01b039091168152602090f35b60203660031901126103d3576004356001600160401b0381116103d3575f6125c9819236906004016106f1565b6125d1613618565b60208151910134305af16125e3613416565b90156125f0576001606555005b60405162461bcd60e51b815260206004820152908190610e51906024830190611e2c565b634e487b7160e01b5f52603260045260245ffd5b61086c8054821015612644575f52600360205f20910201905f90565b612614565b346103d35760203660031901126103d35760043561086c548110156103d357612673604091612628565b506001815491015482519182526020820152f35b346103d35760203660031901126103d357600435610cbe55005b346103d35760203660031901126103d3576004356126be81610423565b6126c6614fcd565b6001600160a01b038116156126de5761001890615026565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b6101003660031901126103d35760043561274b81610423565b6024359061275882610423565b60443561276481610423565b61276c610475565b60c435936001600160401b0385116103d35761278f6108d89536906004016106f1565b9363ffffffff610cbf54169361141a613618565b9a9895939097999694926127b5613618565b6127be8361366e565b6127c6613397565b92896127d0610666565b6127db819f82612b5f565b602001906127e891612b5f565b6127f59060408e01612b5f565b60608c015260808b015260a08a015260070b60c089015260070b60e088015263ffffffff1661010087810191909152610120918083890152612835610666565b97885260208801945f8652604089015f9052606089019061285591612b5f565b60808801525f60a08801526b1d6329f1c35ca4bfabb9f56160281b60c08801525f1960e08801526001908701528501528351612890906146d9565b905261289c91836151fd565b6128a58161494b565b6128ae91614dcb565b6104416001606555565b156128bf57565b60405162461bcd60e51b815260206004820152600f60248201526e506175736564206465706f7369747360881b6044820152606490fd5b916128ff613618565b60808201916129116120e28451610417565b60208101918251612920613397565b03612a16576129406129449183600161293889612628565b5001546139af565b1590565b612a04578060607ff8bd640004bcec1b89657020f561d0b070cbdf662d0b158db9dccb0a8301bfab920193612986612980865163ffffffff1690565b87613a40565b6129f78451946129dc6129d58551956129c560408201998a516129ad8d5163ffffffff1690565b6129b78a51610417565b9160a086019b8c5194613aae565b5192519751985163ffffffff1690565b9351610417565b935163ffffffff9485604051968796169a1698339386612a97565b0390a46104416001606555565b60405163582f497d60e11b8152600490fd5b604051633d23e4d160e11b8152600490fd5b9081518082526020808093019301915f5b828110612a47575050505090565b835185529381019392810192600101612a39565b9081518082526020808093019301915f5b828110612a7a575050505090565b83516001600160a01b031685529381019392810192600101612a6c565b93612ab960809493612ad793989798875260a0602088015260a0870190612a28565b6001600160a01b039384166040870152858103606087015290612a5b565b9416910152565b15612ae557565b60405162461bcd60e51b815260206004820152600c60248201526b5061757365642066696c6c7360a01b6044820152606490fd5b3561070c816104d8565b3561070c81610423565b903590601e19813603018212156103d357018035906001600160401b0382116103d3576020019181360383136103d357565b6001600160a01b039091169052565b15612b7557565b60405162461bcd60e51b815260206004820152602c60248201525f80516020615ae283398151915260448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b15612bc357565b60405162461bcd60e51b815260206004820152602c60248201525f80516020615ae283398151915260448201526b6163746976652070726f787960a01b6064820152608490fd5b9a969299939590989799612c1c613618565b61086b5460e01c60ff1615612c3090612ade565b612c38613397565b928a612c42610666565b612c4d819f82612b5f565b60200190612c5a91612b5f565b612c679060408e01612b5f565b60608c015260808b015260a08a015260070b60c0890152600787900b60e08901526101009485890190612c9f919063ffffffff169052565b6101209581878a0152612cb0610666565b9889525f60208a0190815260079890980b60408a0152612cd39060608a01612b5f565b608088015260a087015260c086015260e085015283015f905282015f90528151612cfc906146d9565b90526128a58161494b565b908060209392818452848401375f828201840152601f01601f1916010190565b9d9c9b959e938e9799939b98929b612d3d613618565b61086b5460e01c60ff1615612d5190612ade565b612d59613397565b92612d62610666565b99612d6d908b612b5f565b612d7a9060208b01612b5f565b612d879060408a01612b5f565b60608801526080870189905260a087015260070b60c086015260070b60e085015263ffffffff851661010085810191909152916101209384860152612dca610666565b9485525f60208601908152600789900b6040870152949c898e60600190612df091612b5f565b8d8b608082015260a0015260c08d015260e08c01528a015f905289015f90528851612e1a906146d9565b905261289c96614f69565b634e487b7160e01b5f52602160045260245ffd5b60031115612e4357565b612e25565b612e819291611ac6610b0f92612e6860ff5f5460081c16611b1f816132cd565b612e7133615026565b611ac160ff5f5460081c166132cd565b61044142610cbf55565b979b95999196939b9a949890929a612ea1613618565b612eb460ff61086b5460e81c16156128b8565b612edb612940612ed48d612ec78c61122a565b905f5260205260405f2090565b5460ff1690565b6130e557610cbf549963ffffffff9d8e612ef88d8286169061310b565b907f000000000000000000000000000000000000000000000000000000000000000016106130d3578e8085168d80821092831561309c575b50505061308a578e9b60018060a01b039c8d891690871690818117613054575b5050508b7f0000000000000000000000000000000000000000000000000000000000000000168c8b168181148061304b575b15613031575081340361301f57803b156103d3575f60049160405192838092630d0e30db60e41b825234905af180156122535761300c575b505b61086b5460c01c63ffffffff169e8f612fd490613135565b612fdd9061314a565b6040519c8d9c169f169d612ff19a8c613170565b035f80516020615a8283398151915291a46104416001606555565b806122476130199261054a565b5f612fba565b604051636452a35d60e01b8152600490fd5b90503461301f5781613046913090339061505c565b612fbc565b50341515612f82565b156130785710613066575f8080612f50565b6040516325a63a5b60e01b8152600490fd5b60405163495d907f60e01b8152600490fd5b60405163582e388960e01b8152600490fd5b6130ca9293507f0000000000000000000000000000000000000000000000000000000000000000169061311d565b108f8d81612f30565b60405163f722177f60e01b8152600490fd5b604051632a58c4f360e01b8152600490fd5b634e487b7160e01b5f52601160045260245ffd5b9190820391821161311857565b6130f7565b9190820180921161311857565b6040513d5f823e3d90fd5b63ffffffff8091169081146131185760010190565b61086b805463ffffffff60c01b191660c09290921b63ffffffff60c01b16919091179055565b6001600160a01b03918216815291811660208301526040820192909252606081019290925263ffffffff928316608083015292821660a0820152921660c083015291821660e08201529116610100820152610140610120820181905261070c93910191612d07565b6132819063ffffffff7fa6aa57bd282fc82378458de27be4eadfa791a0c7321c49562eeba8b2643dd5669594979661320e613618565b6132448882888860070b986132346706f05b59d3b2000061322e8c6150a3565b1061328b565b8d61323d613397565b9089614f69565b61326f60018060a01b0391826040519889988952166020880152608060408801526080870190611e2c565b92858403606087015216971695611e2c565b0390a36001606555565b1561329257565b60405162461bcd60e51b8152602060048201526013602482015272496e76616c69642072656c617965722066656560681b6044820152606490fd5b156132d457565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b6001600160a01b03918216815291811660208301526040820192909252606081019290925263ffffffff92831660808301529290911660a082015291811660c083015291821660e08201529116610100820152610140610120820181905261070c93910191612d07565b610cbe548061070c57504690565b906133af8261070f565b6133bc6040519182610604565b82815280926133cd601f199161070f565b01905f5b8281106133dd57505050565b8060606020809385010152016133d1565b90821015612644576134059160051b810190612b2d565b9091565b908092918237015f815290565b3d15613440573d90613427826106a0565b916134356040519384610604565b82523d5f602084013e565b606090565b6020818303126103d3578051906001600160401b0382116103d3570181601f820112156103d3578051613477816106a0565b926134856040519485610604565b818452602082840101116103d35761070c9160208085019101611e0b565b90602061070c928181520190611e2c565b80518210156126445760209160051b010190565b156103d357565b9360e0959361070c98979363ffffffff938752602087015260070b604086015216606084015260018060a01b0380921660808401521660a08201528160c08201520190611e2c565b9490969395613524613618565b61353760ff61086b5460e01c1615612ade565b6135446101408701612b19565b63ffffffff610cbf5491161015806135fa575b610d31576135653687612288565b61356e90613cda565b97613577610627565b986135823689612288565b8a5260208a01526040890184905261359d8560608b01612b5f565b6135a836848a6106bb565b60808a015260a08901526135bb86612b23565b966135c96101008801612b19565b9236906135d5926106bb565b9436906135e1926106bb565b9460e00135906135f096614efa565b336128ae91613e25565b5061360760408701612b23565b6001600160a01b0316331415613557565b600260655414613629576002606555565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b6040516001600160a01b0390911681527f8a5afa2f5694ae60f58fb8f4f1d7408f1cb0aac9ffc67150d46e2c7d1bb911ff90602090a1565b156136ad57565b60405162461bcd60e51b815260206004820152600e60248201526d44697361626c656420726f75746560901b6044820152606490fd5b156136ea57565b60405162461bcd60e51b815260206004820152601060248201526f416d6f756e7420746f6f206c6172676560801b6044820152606490fd5b1561372957565b60405162461bcd60e51b81526020600482015260166024820152750696e76616c69642071756f746554696d657374616d760541b6044820152606490fd5b1561376e57565b60405162461bcd60e51b815260206004820152601b60248201527a1b5cd9cb9d985b1d59481b5d5cdd081b585d18da08185b5bdd5b9d602a1b6044820152606490fd5b929361070c96959192946101409560018060a01b0380951686525f60208701526040860152606085015263ffffffff809116608085015260a08401525f60c08401521660e08201525f610100820152816101208201520190611e2c565b919596939492909261382e613829612ed488612ec78b61122a565b6136a6565b60070b936138476706f05b59d3b2000061322e876150a3565b6138616a0c097ce7bc90715b34b9f160241b8311156136e3565b610cbf54936138a561387b63ffffffff96878c169061310b565b867f0000000000000000000000000000000000000000000000000000000000000000161015613722565b61086b5460c01c63ffffffff16986138bf611ac18b613135565b6001600160a01b03957f00000000000000000000000000000000000000000000000000000000000000008716948a8816808714806139a6575b1561397c5750613909813414613767565b853b156103d3575f60049660405197888092630d0e30db60e41b825234905af18015612253575f80516020615a82833981519152996139649761395392613969575b505b826152bd565b91604051988998169c169a876137b1565b0390a4565b806122476139769261054a565b5f61394b565b61396496505f80516020615a82833981519152996139a183613953933090339061505c565b61394d565b503415156138f8565b61070c9291604051613a3781613a29602082019460208652805160408401526020810151606084015260a06139f4604083015160c06080870152610100860190612a28565b606083015163ffffffff168583015260808301515f196001841b011660c0860152910151838203603f190160e0850152612a5b565b03601f198101835282610604565b519020916152f3565b613a4b600291612628565b500162ffffff8260081c16805f5281602052600160ff60405f205494161b8080941614613a83575f5260205260405f20908154179055565b60405163954476d960e01b8152600490fd5b9081526001600160a01b03909116602082015260400190565b9294939190938051825103613b7e578151915f5b838110613b32575050505082613ad9575b50505050565b63ffffffff81613b0a7f828fc203220356df8f072a91681caee7d5c75095e2a95e80ed5a14b384697f71938661537d565b613b2660405192839260018060a01b0316971695339083613a95565b0390a45f808080613ad3565b80613b3f600192846134b4565b5180613b4d575b5001613ac2565b613b7890613b6b613b5e84886134b4565b516001600160a01b031690565b848060a01b038916615344565b5f613b46565b6040516319a5316760e31b8152600490fd5b6001600160a01b03168015613bd85761086a80546001600160a01b031916821790557f1f17a88f67b0f49060a34bec1a4723a563620e6aa265eb640b5046dcee0759a05f80a2565b60405162461bcd60e51b81526020600482015260146024820152734261642068756220706f6f6c206164647265737360601b6044820152606490fd5b61070c9161018090613c278184516112af565b613c39602084015160208301906112af565b613c4b604084015160408301906112af565b613c5d606084015160608301906112af565b613c6f608084015160808301906112af565b60a083015160a082015260c083015160c082015260e083015160e0820152613ca5610100808501519083019063ffffffff169052565b6101208381015163ffffffff16908201526101408381015163ffffffff16908201528161016080940151938201520190611e2c565b613ce2613397565b613d146040518092613d006020830195604087526060840190613c14565b90604083015203601f198101835282610604565b51902090565b613d2382612e39565b52565b9060018060a01b038251168152606080613d4f6020850151608060208601526080850190611e2c565b9360408101516040850152015191613d6683612e39565b015290565b9a97909695613dda9661070c9d9b9660808e613dcf98613de99e986101809d60018060a01b03998a80921685521660208401526040830152606082015201528c60a063ffffffff8094169101521660c08c01521660e08a01526101008901906112af565b6101208701906112af565b80610140860152840190611e2c565b91610160818403910152613d26565b9061070c949360809360018060a01b03809316845260208401521660408201528160608201520190611e2c565b805191610120830190613e3c825163ffffffff1690565b63ffffffff610cbf54911610611cc95760208301516001613e5c82611244565b54036140bc576001905b6002613e7182611244565b54146140aa57613e8090611244565b600290556060850151613e9290610417565b6080860151613ea090610417565b9260a0870151918660c0890151948960a08301519660e082015197610100830151613ece9063ffffffff1690565b9a5163ffffffff1661014084015163ffffffff16906040850151613ef190610417565b928551613efd90610417565b946020870151613f0c90610417565b9661016001519760608a0151613f2190610417565b996080810151906040015190613f35610686565b9b613f40908d612b5f565b60208c015260408b0152613f579060608b01613d1a565b6040516001600160a01b03909b169e63ffffffff169d9a9b8c9b613f7b9b8d613d6b565b035f80516020615ac283398151915291a46060810151613f9a90610417565b6001600160a01b03811692338414806140a2575b613ad3576080613fbf910151610417565b6040830151909390926080906001600160a01b0380871690869086907f00000000000000000000000000000000000000000000000000000000000000001683036140925750614011913090339061505c565b61401b85846153b4565b0151913b151580614088575b6140315750505050565b803b156103d35761405e935f809460405196879586948593633a5be8cb60e01b8552339160048601613df8565b03925af1801561225357614075575b808080613ad3565b806122476140829261054a565b5f61406d565b5081511515614027565b61409d92339061505c565b61401b565b506001613fae565b604051630479306360e51b8152600490fd5b5f90613e66565b905f825161012081016140da815163ffffffff1690565b63ffffffff610cbf54911610611cc957602085015160026140fa82611244565b54146140aa5761410990611244565b60029055606082015161411b90610417565b608083015161412990610417565b9060a08401519260c0850151918860a0810151938760e0810151956101008201516141579063ffffffff1690565b955163ffffffff1661014083015163ffffffff16604084015161417990610417565b91845161418590610417565b93602086015161419490610417565b9561016001519660608901516141a990610417565b9860808101519060400151906141bd610686565b9a6141c8908c612b5f565b60208b015260408a0152600260608a01526040519d63ffffffff8f9c169d6141f09b8d613d6b565b035f80516020615ac2833981519152905f94a4606084015161421190610417565b6001600160a01b0394909185831691903383148061433a575b61433157608061423b910151610417565b9060408101519687818416917f00000000000000000000000000000000000000000000000000000000000000001682145f1461431a57906080929187614306575b6142879150856153b4565b0151923b1515806142fc575b6142a0575b505050509050565b813b156142f857836142cc959660405196879586948593633a5be8cb60e01b8552339160048601613df8565b03925af18015612253576142e5575b8080808493614298565b806122476142f29261054a565b5f6142db565b8380fd5b5082511515614293565b614313913090339061505c565b5f8861427c565b60809291965061432c90865f98615344565b614287565b50505050509050565b505f61422a565b919082519061012082019061435a825163ffffffff1690565b63ffffffff610cbf54911610611cc95760208501518415614563576002905b600261438482611244565b54146140aa5761439390611244565b6002905560608401516143a590610417565b60808501516143b390610417565b9260a0860151918860c0880151948860a08301519660e0820151976101008301516143e19063ffffffff1690565b9a5163ffffffff1661014084015163ffffffff1690604085015161440490610417565b92855161441090610417565b94602087015161441f90610417565b9661016001519760608a015161443490610417565b996080810151906040015190614448610686565b9b614453908d612b5f565b60208c015260408b015261446a9060608b01613d1a565b6040516001600160a01b03909b169e63ffffffff169d9a9b8c9b61448e9b8d613d6b565b035f80516020615ac283398151915291a460608301516144ad90610417565b906001600160a01b038216903382148061455b575b614554576144d4608080920151610417565b6040860151909590946001600160a01b0380881691879187907f000000000000000000000000000000000000000000000000000000000000000016840361453b575015614527575b61401b9150846153b4565b614534913090339061505c565b5f8561451c565b9061454b5761409d92339061505c565b61409d92615344565b5050505050565b5083156144c2565b600161456e82611244565b540361457d5760015b90614379565b5f614577565b908160209103126103d3575190565b1561459957565b60405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b60809060208152602e60208201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960408201526d6f6e206973206e6f74205555505360901b60608201520190565b61070c91610140906146528184516112af565b614664602084015160208301906112af565b614676604084015160408301906112af565b606083015160608201526080830151608082015260a083015160a08201526146a860c084015160c083019060070b9052565b60e08381015160070b908201526101008381015163ffffffff16908201528161012080940151938201520190611e2c565b604051613d1481613a29602082019460208652604083019061463f565b156146fd57565b60405162461bcd60e51b815260206004820152600c60248201526b696e76616c6964206665657360a01b6044820152606490fd5b1561473857565b60405162461bcd60e51b815260206004820152600c60248201526b1c995b185e48199a5b1b195960a21b6044820152606490fd5b600791820b910b019060016001603f1b0319821260016001603f1b0383131761311857565b1561479857565b60405162461bcd60e51b8152602060048201526019602482015278066696c6c20616d6f756e74207072652066656573206973203603c1b6044820152606490fd5b156147e057565b60405162461bcd60e51b815260206004820152601d60248201527f7061796f757441646a7573746d656e7450637420746f6f20736d616c6c0000006044820152606490fd5b1561482c57565b60405162461bcd60e51b815260206004820152601d60248201527f7061796f757441646a7573746d656e7450637420746f6f206c617267650000006044820152606490fd5b600160ff1b8114613118575f0390565b1561488857565b60405162461bcd60e51b815260206004820152601c60248201527b536f6d65686f7720686974206d6178546f6b656e73546f53656e642160201b6044820152606490fd5b156148d357565b60405162461bcd60e51b815260206004820152601760248201527634b73b30b634b2103932b830bcb6b2b73a1031b430b4b760491b6044820152606490fd5b6001600160a01b039182168152602081019290925291151560408201529116606082015260a06080820181905261070c92910190611e2c565b90815191604081019261498b6706f05b59d3b200008061497d614978614972895160070b90565b60070b90565b6150a3565b109081614cea575b506146f6565b606081016149aa6a0c097ce7bc90715b34b9f160241b825111156136e3565b60208301906149c56149bc8351611253565b54825111614731565b60c08401928351966149f560c08301986149ef6149e38b5160070b90565b845160070b5b9061476c565b90615696565b97614a01891515614791565b614a178451614a108751611253565b549061310b565b898110614ce0575b50614972614a46926149e9614a38614a40945160070b90565b915160070b90565b886152bd565b936101208601805180614c8b575b50505060a08501518786519160a083015114918215614c7d575b50508015614c64575b614a80906148cc565b614a8a8351611253565b614a9588825461311d565b90556060850191614aa68351610417565b926001600160a01b0392338486161480614c4d575b614c4357906040614b399201948785614ad48851610417565b16917f000000000000000000000000000000000000000000000000000000000000000087168303614bfa57505050614b136129406101008a0151151590565b614bdb575b614b3387614b2e614b298451610417565b610417565b6153b4565b51610417565b91823b151580614bcd575b614b52575b50505050505050565b614b64614b6b91608094169451610417565b9451611253565b549051111594015193813b156103d3575f8094614ba0604051978896879586946301d43f2760e31b8652339260048701614912565b03925af1801561225357614bba575b808080808080614b49565b80612247614bc79261054a565b5f614baf565b506080870151511515614b44565b614bf587614bec614b298851610417565b3090339061505c565b614b18565b614c0b6129406101008d0151151590565b15614c3a5750614c359150614c23614b298851610417565b614c2d8451610417565b90339061505c565b614b33565b614c3592615344565b5050505050505050565b50614c5f6129406101008a0151151590565b614abb565b50614a80614c76610100870151151590565b9050614a77565b60600151149050875f614a6e565b95614cc8614cce92614cac614cd89599670de0b6b3a763ffff1913156147d9565b614cc268056bc75e2d6310000082511315614825565b51614871565b906152bd565b9451851115614881565b5f8080614a54565b9850614972614a1f565b9050614d0061497861497260c086015160070b90565b105f614985565b9060018060a01b038251168152608080614d30602085015160a0602086015260a0850190611e2c565b93604081015160070b6040850152606081015115156060850152015191015290565b9a979361070c9c9a95919793614dbc9a979360208e6101809b8152015260408d015260608c015260808b015260070b60a08a015260070b60c089015260018060a01b03928380921660e08a0152166101008801521661012086015280610140860152840190611e2c565b91610160818403910152614d07565b906040820151614ddb9060070b90565b916060810151614dea90610417565b906080810151936101009485830151614e0290151590565b610120928385015192614e13610693565b96614e1e9088612b5f565b602087015260070b60408601521515606085015260808401528151606001516020830151614e4b90611253565b549360a084015193519460808601519560a08101519160e0820151614e709060070b90565b60c083015160070b9a83015163ffffffff169a6040840151614e9190610417565b918451614e9d90610417565b986020860151614eac90610417565b950151956040519a8b9a600160a01b60019003169e63ffffffff169d3396614ed49b8d614d52565b037f8ab9dc6c19fe88e69bc70221b339c84332752fdd49591b7c51e66bae3947b73c91a4565b9392614f6393610441979660208151910120906040519263ffffffff60208501955f80516020615ba28339815191528752166040850152856060850152608084015260018060a01b031660a083015260c082015260c08152614f5b816105e9565b5190206156e4565b90615797565b9392614f6393610441979660208151910120906040519263ffffffff60208501955f80516020615b82833981519152875216604085015285606085015260070b608084015260018060a01b031660a083015260c082015260c08152614f5b816105e9565b610c8c546001600160a01b03163303614fe257565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b610c8c80546001600160a01b039283166001600160a01b0319821681179092559091165f80516020615b428339815191525f80a3565b6040516323b872dd60e01b60208201526001600160a01b0392831660248201529290911660448301526064808301939093529181526104419161509e82610598565b615867565b5f81126150ad5790565b5f0390565b61044160ff5f5460081c166132cd565b6150d660ff5f5460081c16611b1f816132cd565b6001606555565b6001600160a01b031680156151255761086980546001600160a01b031916821790557fa9e8c42c9e7fca7f62755189a16b2f5314d43d8fb24e91ba54e6d65f9314e8495f80a2565b60405162461bcd60e51b81526020600482015260196024820152784261642062726964676520726f75746572206164647265737360381b6044820152606490fd5b91612940906151e6928451615179613397565b613a376151a66040809901519489519461519286610562565b855260208501938452898501958652612628565b50549388519283916151cb6020840196602088525160608d86015260a0850190613c14565b9151606084015251608083015203601f198101835282610604565b6151ed5750565b5163582f497d60e11b8152600490fd5b8051610120909101516040805190949293818601906001600160401b0382118383101761055d576152779561523c928852835260208301938452612628565b505491613a3786518092615262602083019560208752518a80850152608084019061463f565b9051606083015203601f198101835282610604565b1561527f5750565b5162461bcd60e51b815260206004820152601860248201527724b73b30b634b21039b637bb903932b630bc90383937b7b360411b6044820152606490fd5b90670de0b6b3a7640000915f82840392128383128116908484139015161761311857818102918183041490151715613118570490565b929091905f915b845183101561533c5761530d83866134b4565b51908181101561532b575f52602052600160405f205b9201916152fa565b905f52602052600160405f20615323565b915092501490565b60405163a9059cbb60e01b60208201526001600160a01b0390921660248301526044808301939093529181526104419161509e8261057d565b907fb6e6ae61a8fa98a339088353bc7a76c8c580b2efd09210a80bfccabe05d9ae47916153af60405192839283613a95565b0390a1565b6001600160a01b0390811690813b156153f4579061044192917f000000000000000000000000000000000000000000000000000000000000000016615344565b7f000000000000000000000000000000000000000000000000000000000000000016803b156103d3575f8091602460405180948193632e1a7d4d60e01b83528860048401525af1801561225357615513575b508147106154ce575f80809381935af161545e613416565b501561546657565b60405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c20726044820152791958da5c1a595b9d081b585e481a185d99481c995d995c9d195960321b6064820152608490fd5b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606490fd5b61551c9061054a565b5f615446565b9061552c82615607565b6001600160a01b0382165f80516020615b628339815191525f80a28051158015906155c1575b61555a575050565b6155be915f806040519361556d85610562565b602785527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c6020860152660819985a5b195960ca1b6040860152602081519101845af46155b8613416565b9161597f565b50565b505f615552565b906155d282615607565b6001600160a01b0382165f80516020615b628339815191525f80a28051158015906155ff5761555a575050565b506001615552565b803b1561563b575f80516020615b0283398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b670de0b6b3a76400009181830291838304036131185760070b808303925f82128185128116908286139015161761311857146156d0570490565b634e487b7160e01b5f52601260045260245ffd5b60429161047f549061048054906040519160208301937fc2f8787176b8ac6bf7215b4adcc1e069bf4ab82d9ab1df05a57a91d425935b6e85526040840152606083015260808201526080815261573981610598565b519020906040519161190160f01b8352600283015260228201522090565b1561575e57565b60405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b6044820152606490fd5b91906157a3828261594e565b9390926005851015612e435761044194159384615851575b5083156157cb575b505050615757565b5f92935090829160405161580381613a296020820194630b135d3f60e11b998a87526024840152604060448401526064830190611e2c565b51915afa90615810613416565b82615843575b82615826575b50505f80806157c3565b61583b91925060208082518301019101614583565b145f8061581c565b915060208251101591615816565b6001600160a01b0383811691161493505f6157bb565b6040516158be916001600160a01b0316615880826105ce565b5f806020958685527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656487860152868151910182855af16155b8613416565b805182811591821561592e575b50509050156158d75750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b83809293500103126103d35781015161594681610b2e565b80825f6158cb565b9060418151145f146159765761340591602082015190606060408401519301515f1a90615a10565b50505f90600290565b919290156159e15750815115615993575090565b3b1561599c5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156159f45750805190602001fd5b60405162461bcd60e51b8152908190610e5190600483016134a3565b6fa2a8918ca85bafe22016d0b997e4df60600160ff1b038411615a76576020935f9360ff60809460405194855216868401526040830152606082015282805260015afa15612253575f516001600160a01b03811615615a6e57905f90565b505f90600190565b505050505f9060039056fea123dc29aebf7d0c3322c8eeb5b999e859f39937950ed31056532713d0de396f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143571749edf1d5c9599318cdbc4e28a6475d65e87fd3b2ddbe1e9a8d5e7a0f0ff746756e6374696f6e206d7573742062652063616c6c6564207468726f75676820360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcafc4df6845a4ab948b492800d3d8a25d538a102a2bc07cd01f1cfa097fddcff68be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b0e058f05b73c62ee68329d2c67c067aaae9a06503cc306378d144d0f0177882b152eb71524aef34d838ab76573c14b1ebfa5e385d9ab29d7cf5398daa2438bd9a264697066735822122049e5491f22adcf973912094d0ca5bb1293c58685c419a49bd641b2de35fcf04b64736f6c63430008170033","opcodes":"PUSH2 0x100 CALLVALUE PUSH3 0x1AA JUMPI PUSH1 0x1F PUSH3 0x5DBA CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH3 0x1AE JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x1AA JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH3 0x1AA JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH1 0xA0 MSTORE PUSH2 0xE10 PUSH1 0xC0 MSTORE PUSH2 0x7E90 PUSH1 0xE0 MSTORE PUSH0 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND PUSH3 0x155 JUMPI PUSH1 0xFF DUP1 DUP3 AND SUB PUSH3 0x11A JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5BF7 SWAP1 DUP2 PUSH3 0x1C3 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0xD88 ADD MSTORE DUP2 DUP2 PUSH2 0x113C ADD MSTORE PUSH2 0x12F7 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x90E ADD MSTORE DUP2 DUP2 PUSH2 0x2194 ADD MSTORE DUP2 DUP2 PUSH2 0x2F56 ADD MSTORE DUP2 DUP2 PUSH2 0x38CA ADD MSTORE DUP2 DUP2 PUSH2 0x3FDD ADD MSTORE DUP2 DUP2 PUSH2 0x4249 ADD MSTORE DUP2 DUP2 PUSH2 0x44EF ADD MSTORE DUP2 DUP2 PUSH2 0x4AD8 ADD MSTORE DUP2 DUP2 PUSH2 0x53CF ADD MSTORE PUSH2 0x53F6 ADD MSTORE PUSH1 0xC0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x1456 ADD MSTORE DUP2 DUP2 PUSH2 0x2EFB ADD MSTORE PUSH2 0x387E ADD MSTORE PUSH1 0xE0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x3F3 ADD MSTORE PUSH2 0x30A4 ADD MSTORE RETURN JUMPDEST PUSH1 0xFF SWAP1 DUP2 NOT AND OR PUSH0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFF DUP2 MSTORE LOG1 PUSH0 PUSH3 0x84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1A JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x18 JUMPI PUSH0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BD2C7 EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0xC2097F7 EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0x1186EC33 EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x15348E44 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x17FCB39B EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0x1B3D5559 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x1DFB2D02 EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0x22F8E566 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0x272751C7 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x29CB924D EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0x2CFC26C5 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0x2E378115 EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x44B8BE68 EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x493A4F84 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x4E0FB8F5 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x5249FEF1 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x5285E058 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x541F4F14 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x57F6DCB8 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x5CEAEC32 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x5DD36F9C EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x6068D6CB EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x647C576C EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x6BBBCD2E EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x738B62E5 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x74DFA43D EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x7B939232 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x7E688BBA EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x87C3932D EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x8A7860CE EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x979F2BC2 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x9963E5A8 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x99CC2968 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x9A8A0592 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0xA1244C67 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0xA78E4B60 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xAC9650D8 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xAE527FBB EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xB5E1BF5F EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0xBBCA7DB0 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0xBDCB53A5 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xBF40F25B EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xC35C83FC EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xCCFA5971 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xCEB4C987 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xDDA52113 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xDDD224F1 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xDE7EBA78 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xE1904402 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xE98A5654 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xEE2A53F8 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xEF0E2FF4 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2AC JUMPI PUSH4 0xFD7C1054 SUB PUSH2 0xE JUMPI PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x26A1 JUMP JUMPDEST PUSH2 0x2687 JUMP JUMPDEST PUSH2 0x2649 JUMP JUMPDEST PUSH2 0x259C JUMP JUMPDEST PUSH2 0x2573 JUMP JUMPDEST PUSH2 0x2543 JUMP JUMPDEST PUSH2 0x251A JUMP JUMPDEST PUSH2 0x24F4 JUMP JUMPDEST PUSH2 0x24D6 JUMP JUMPDEST PUSH2 0x2454 JUMP JUMPDEST PUSH2 0x2429 JUMP JUMPDEST PUSH2 0x2367 JUMP JUMPDEST PUSH2 0x2149 JUMP JUMPDEST PUSH2 0x2043 JUMP JUMPDEST PUSH2 0x2019 JUMP JUMPDEST PUSH2 0x1F94 JUMP JUMPDEST PUSH2 0x1EB4 JUMP JUMPDEST PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0x1D8D JUMP JUMPDEST PUSH2 0x1D6B JUMP JUMPDEST PUSH2 0x1CED JUMP JUMPDEST PUSH2 0x1B49 JUMP JUMPDEST PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x1A6E JUMP JUMPDEST PUSH2 0x19F6 JUMP JUMPDEST PUSH2 0x1985 JUMP JUMPDEST PUSH2 0x18FE JUMP JUMPDEST PUSH2 0x1855 JUMP JUMPDEST PUSH2 0x17D3 JUMP JUMPDEST PUSH2 0x1755 JUMP JUMPDEST PUSH2 0x170C JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST PUSH2 0x15D9 JUMP JUMPDEST PUSH2 0x1581 JUMP JUMPDEST PUSH2 0x1547 JUMP JUMPDEST PUSH2 0x147A JUMP JUMPDEST PUSH2 0x143A JUMP JUMPDEST PUSH2 0x13A7 JUMP JUMPDEST PUSH2 0x12E5 JUMP JUMPDEST PUSH2 0x12BC JUMP JUMPDEST PUSH2 0x1262 JUMP JUMPDEST PUSH2 0x10FB JUMP JUMPDEST PUSH2 0xFDD JUMP JUMPDEST PUSH2 0xF2E JUMP JUMPDEST PUSH2 0xE99 JUMP JUMPDEST PUSH2 0xD61 JUMP JUMPDEST PUSH2 0xC37 JUMP JUMPDEST PUSH2 0xC01 JUMP JUMPDEST PUSH2 0xBE3 JUMP JUMPDEST PUSH2 0xB45 JUMP JUMPDEST PUSH2 0xB14 JUMP JUMPDEST PUSH2 0xADF JUMP JUMPDEST PUSH2 0xA07 JUMP JUMPDEST PUSH2 0x8F9 JUMP JUMPDEST PUSH2 0x8A3 JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST PUSH0 SWAP2 SUB SLT PUSH2 0x3D3 JUMPI JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x3D3 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x441 DUP3 PUSH2 0x423 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x441 DUP3 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x441 DUP3 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH2 0x441 DUP3 PUSH2 0x423 JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0x441 DUP3 PUSH2 0x423 JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP3 SUB PUSH2 0x3D3 JUMPI JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP3 SUB PUSH2 0x3D3 JUMPI JUMP JUMPDEST PUSH2 0x104 CALLDATALOAD SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP3 SUB PUSH2 0x3D3 JUMPI JUMP JUMPDEST PUSH2 0x124 CALLDATALOAD SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP3 SUB PUSH2 0x3D3 JUMPI JUMP JUMPDEST PUSH2 0x144 CALLDATALOAD SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP3 SUB PUSH2 0x3D3 JUMPI JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP3 SUB PUSH2 0x3D3 JUMPI JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND SUB PUSH2 0x3D3 JUMPI JUMP JUMPDEST PUSH1 0xE4 CALLDATALOAD SWAP1 PUSH2 0x441 DUP3 PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0x104 CALLDATALOAD SWAP1 PUSH2 0x441 DUP3 PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0x124 CALLDATALOAD SWAP1 PUSH2 0x441 DUP3 PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0x164 CALLDATALOAD SWAP1 PUSH2 0x441 DUP3 PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0x144 CALLDATALOAD SWAP1 PUSH2 0x441 DUP3 PUSH2 0x4D8 JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0x441 DUP3 PUSH2 0x4D8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x55D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x536 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x55D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x55D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x55D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x55D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x55D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x55D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x55D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xC0 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x55D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x180 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x55D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x140 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x55D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x441 DUP3 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x441 DUP3 PUSH2 0x598 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x55D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x6C7 DUP3 PUSH2 0x6A0 JUMP JUMPDEST SWAP2 PUSH2 0x6D5 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x604 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x3D3 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x3D3 JUMPI DUP2 PUSH1 0x20 PUSH2 0x70C SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x6BB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x55D JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 PUSH2 0x731 DUP3 PUSH2 0x70F JUMP JUMPDEST SWAP2 PUSH2 0x73F PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x604 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 SWAP5 ADD SWAP2 PUSH1 0x5 SHL DUP2 ADD SWAP3 DUP4 GT PUSH2 0x3D3 JUMPI SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x765 JUMPI POP POP POP POP JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x758 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x3D3 JUMPI DUP2 PUSH1 0x20 PUSH2 0x70C SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x726 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH2 0x180 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x7AD DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x7B5 PUSH2 0x443 JUMP JUMPDEST SWAP1 PUSH2 0x7BE PUSH2 0x450 JUMP JUMPDEST PUSH2 0x7C6 PUSH2 0x475 JUMP JUMPDEST SWAP3 PUSH2 0x7CF PUSH2 0x485 JUMP JUMPDEST PUSH2 0x7D7 PUSH2 0x4E6 JUMP JUMPDEST PUSH2 0x7DF PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP7 SWAP1 SWAP3 SWAP1 PUSH2 0x124 CALLDATALOAD DUP9 DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x804 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP5 PUSH2 0x164 CALLDATALOAD SWAP9 DUP10 GT PUSH2 0x3D3 JUMPI PUSH2 0x821 PUSH2 0x18 SWAP10 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x774 JUMP JUMPDEST SWAP8 PUSH2 0x144 CALLDATALOAD SWAP8 PUSH1 0x84 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH2 0x27A3 JUMP JUMPDEST PUSH2 0x100 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x84D DUP2 PUSH2 0x423 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD PUSH2 0x85A DUP2 PUSH2 0x423 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x84 CALLDATALOAD DUP1 PUSH1 0x7 SIGNEXTEND DUP2 SUB PUSH2 0x3D3 JUMPI SWAP2 PUSH1 0xA4 CALLDATALOAD PUSH2 0x87D DUP2 PUSH2 0x4D8 JUMP JUMPDEST SWAP2 PUSH1 0xC4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3D3 JUMPI PUSH2 0x89C SWAP2 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP1 PUSH1 0xE4 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH2 0x8D8 PUSH2 0x8AF CALLDATASIZE PUSH2 0x834 JUMP JUMPDEST POP SWAP6 PUSH2 0x8BF SWAP6 SWAP2 SWAP6 SWAP5 SWAP3 SWAP5 PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x8D2 PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE8 SHR AND ISZERO PUSH2 0x28B8 JUMP JUMPDEST CALLER PUSH2 0x380E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x20 SWAP1 DUP3 CALLDATALOAD PUSH2 0x957 DUP2 PUSH2 0x70F JUMP JUMPDEST SWAP4 PUSH2 0x965 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x604 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x3D3 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x98E JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x980 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x20 SWAP1 DUP3 CALLDATALOAD PUSH2 0x9B7 DUP2 PUSH2 0x70F JUMP JUMPDEST SWAP4 PUSH2 0x9C5 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x604 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x3D3 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x9EE JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 DUP1 SWAP2 DUP4 CALLDATALOAD PUSH2 0x9FC DUP2 PUSH2 0x423 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x9E0 JUMP JUMPDEST PUSH1 0x3 NOT PUSH1 0x60 CALLDATASIZE DUP3 ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xA20 DUP2 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP4 DUP3 GT PUSH2 0x3D3 JUMPI PUSH1 0xC0 SWAP1 DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x3D3 JUMPI PUSH2 0xA48 PUSH2 0x627 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x4 ADD CALLDATALOAD DUP3 MSTORE PUSH1 0x24 DUP2 ADD CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x44 DUP2 ADD CALLDATALOAD DUP5 DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0xA76 SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP5 ADD ADD PUSH2 0x93D JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0xA87 PUSH1 0x64 DUP3 ADD PUSH2 0x52B JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0xA98 PUSH1 0x84 DUP3 ADD PUSH2 0x46A JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA4 DUP2 ADD CALLDATALOAD SWAP1 DUP5 DUP3 GT PUSH2 0x3D3 JUMPI PUSH1 0x4 PUSH2 0xAB9 SWAP3 CALLDATASIZE SWAP3 ADD ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD SWAP3 DUP4 GT PUSH2 0x3D3 JUMPI PUSH2 0xAD9 PUSH2 0x18 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x774 JUMP JUMPDEST SWAP2 PUSH2 0x28F6 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH2 0x8D8 PUSH1 0x4 CALLDATALOAD PUSH2 0xAFF DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH2 0xB07 PUSH2 0x4FCD JUMP JUMPDEST PUSH2 0xB0F PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x3B90 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xCBF SSTORE STOP JUMPDEST DUP1 ISZERO ISZERO SUB PUSH2 0x3D3 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x441 DUP3 PUSH2 0xB2E JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xB62 DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH32 0xA21FDD43D0AD0C62689EE7230A47309A050755BCC52EBA00310ADD65297692A PUSH1 0x20 PUSH1 0x44 CALLDATALOAD SWAP3 PUSH2 0xB96 DUP5 PUSH2 0xB2E JUMP JUMPDEST PUSH2 0xB9E PUSH2 0x4FCD JUMP JUMPDEST PUSH2 0xBA6 PUSH2 0x3618 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 PUSH0 MSTORE PUSH2 0x86D DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP6 PUSH0 MSTORE DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 ISZERO ISZERO SWAP1 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x20 PUSH2 0xCBF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BA2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST SWAP1 DUP2 PUSH2 0x180 SWAP2 SUB SLT PUSH2 0x3D3 JUMPI SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0xC67 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC28 JUMP JUMPDEST PUSH2 0xC6F PUSH2 0x3618 JUMP JUMPDEST PUSH2 0xC82 PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE0 SHR AND ISZERO PUSH2 0x2ADE JUMP JUMPDEST PUSH2 0xC8F PUSH2 0x140 DUP3 ADD PUSH2 0x2B19 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0xCBF SLOAD SWAP2 AND LT ISZERO DUP1 PUSH2 0xD43 JUMPI JUMPDEST PUSH2 0xD31 JUMPI PUSH2 0xD27 SWAP1 PUSH2 0xD13 PUSH2 0xCBF PUSH2 0xCBA CALLDATASIZE DUP5 PUSH2 0x2288 JUMP JUMPDEST PUSH2 0x3CDA JUMP JUMPDEST SWAP2 PUSH1 0xC0 PUSH2 0xD0C PUSH2 0xCD1 PUSH1 0x20 DUP5 ADD PUSH2 0x2B23 JUMP JUMPDEST PUSH2 0xCDF PUSH2 0x160 DUP6 ADD DUP6 PUSH2 0x2B2D JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH2 0xCEA PUSH2 0x627 JUMP JUMPDEST SWAP8 PUSH2 0xCF5 CALLDATASIZE DUP4 PUSH2 0x2288 JUMP JUMPDEST DUP10 MSTORE PUSH1 0x20 DUP10 ADD MSTORE ADD CALLDATALOAD PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD PUSH2 0x2B5F JUMP JUMPDEST CALLDATASIZE SWAP2 PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE CALLER SWAP1 PUSH2 0x3E25 JUMP JUMPDEST PUSH2 0x18 PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC3A9B9D PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH2 0xD50 PUSH1 0x40 DUP3 ADD PUSH2 0x2B23 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0xCA2 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xD7E DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP2 SWAP1 PUSH2 0xDB7 ADDRESS DUP5 EQ ISZERO PUSH2 0x2B6E JUMP JUMPDEST PUSH2 0xDD3 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 DUP3 DUP6 SLOAD AND EQ PUSH2 0x2BBC JUMP JUMPDEST PUSH2 0xDDB PUSH2 0x4FCD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0xDE8 DUP3 PUSH2 0x5B3 JUMP JUMPDEST PUSH0 DUP3 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5AA2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE0E JUMPI POP POP PUSH2 0x18 SWAP2 POP PUSH2 0x5607 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH1 0x40 SWAP5 SWAP4 SWAP5 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP3 MSTORE DUP7 AND GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0xE68 JUMPI JUMPDEST POP PUSH2 0xE55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xE51 PUSH1 0x4 DUP3 ADD PUSH2 0x45F0 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x18 SWAP4 PUSH2 0xE63 SWAP2 EQ PUSH2 0x4592 JUMP JUMPDEST PUSH2 0x5522 JUMP JUMPDEST PUSH2 0xE8B SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xE92 JUMPI JUMPDEST PUSH2 0xE83 DUP2 DUP4 PUSH2 0x604 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x4583 JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0xE33 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xE79 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH2 0x180 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xEB7 DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0xEC3 DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH2 0xECF DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0xE4 CALLDATALOAD DUP1 PUSH1 0x7 SIGNEXTEND DUP2 SUB PUSH2 0x3D3 JUMPI PUSH2 0xEE4 PUSH2 0x495 JUMP JUMPDEST PUSH2 0xEEC PUSH2 0x501 JUMP JUMPDEST PUSH2 0x144 CALLDATALOAD SWAP6 SWAP1 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 GT PUSH2 0x3D3 JUMPI PUSH2 0xF13 PUSH2 0x18 SWAP8 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP5 PUSH2 0x164 CALLDATALOAD SWAP7 PUSH1 0xC4 CALLDATALOAD SWAP3 PUSH1 0xA4 CALLDATALOAD SWAP3 PUSH1 0x84 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH2 0x2C0A JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0xF4D PUSH2 0x4FCD JUMP JUMPDEST PUSH2 0xF55 PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x86C DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x55D JUMPI PUSH4 0xFFFFFFFF SWAP2 PUSH1 0x1 DUP3 ADD SWAP1 SSTORE DUP4 PUSH2 0xF7C DUP3 PUSH2 0x2628 JUMP JUMPDEST POP DUP5 PUSH1 0x1 DUP3 ADD SSTORE SSTORE AND PUSH32 0xC86BA04C55BC5EB2F2876B91C438849A296DBEC7B08751C3074D92E04F0A77AF PUSH0 DUP1 LOG4 PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x3D3 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x3D3 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x3D3 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xFFA DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1007 DUP3 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH2 0x1016 DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 PUSH1 0x84 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x1037 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xFB0 JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH1 0xA4 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x3D3 JUMPI PUSH2 0x10DF PUSH4 0xFFFFFFFF PUSH32 0xB0A29AED3D389A1041194255878B423F7780BE3ED2324D4693508C6FF189845E SWAP7 PUSH2 0x107F PUSH2 0x10F1 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xFB0 JUMP JUMPDEST SWAP4 SWAP1 SWAP10 PUSH2 0x108A PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x10B7 DUP13 DUP13 DUP12 DUP12 PUSH2 0x1099 PUSH2 0x3397 JUMP JUMPDEST PUSH2 0x10B0 PUSH2 0x10A7 CALLDATASIZE DUP12 DUP11 PUSH2 0x6BB JUMP JUMPDEST SWAP5 DUP13 CALLDATASIZE SWAP2 PUSH2 0x6BB JUMP JUMPDEST SWAP5 DUP13 PUSH2 0x4EFA JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 DUP12 MSTORE AND PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP11 ADD MSTORE PUSH1 0x80 DUP10 ADD SWAP2 PUSH2 0x2D07 JUMP JUMPDEST SWAP4 DUP7 DUP6 SUB PUSH1 0x60 DUP9 ADD MSTORE AND SWAP9 AND SWAP7 PUSH2 0x2D07 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1113 DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x1132 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP3 SWAP2 SWAP1 PUSH2 0x116C ADDRESS DUP6 EQ ISZERO PUSH2 0x2B6E JUMP JUMPDEST PUSH2 0x1188 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 DUP3 DUP7 SLOAD AND EQ PUSH2 0x2BBC JUMP JUMPDEST PUSH2 0x1190 PUSH2 0x4FCD JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5AA2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11B3 JUMPI POP POP PUSH2 0x18 SWAP2 POP PUSH2 0x5607 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH1 0x40 SWAP5 SWAP4 SWAP5 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP3 MSTORE DUP7 AND GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0x1209 JUMPI JUMPDEST POP PUSH2 0x11F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xE51 PUSH1 0x4 DUP3 ADD PUSH2 0x45F0 JUMP JUMPDEST PUSH2 0x18 SWAP4 PUSH2 0x1204 SWAP2 EQ PUSH2 0x4592 JUMP JUMPDEST PUSH2 0x55C8 JUMP JUMPDEST PUSH2 0x1223 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xE92 JUMPI PUSH2 0xE83 DUP2 DUP4 PUSH2 0x604 JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH2 0x86D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH0 MSTORE PUSH2 0x872 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH0 MSTORE PUSH2 0x86E PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x127F DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH2 0x86D PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x24 CALLDATALOAD PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH2 0x869 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x1341 JUMPI PUSH1 0x40 MLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x1B1959081D1A1C9BDD59DA0819195B1959D85D1958D85B1B PUSH1 0x42 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x120 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x13C0 DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x13CC DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x13D9 DUP3 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x13E1 PUSH2 0x475 JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD SWAP2 PUSH2 0x13EE DUP4 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0xE4 CALLDATALOAD SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 GT PUSH2 0x3D3 JUMPI PUSH2 0x1411 PUSH2 0x8D8 SWAP7 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP5 PUSH2 0x141A PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x142D PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE8 SHR AND ISZERO PUSH2 0x28B8 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH2 0x380E JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH2 0x200 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH2 0x1494 PUSH2 0x434 JUMP JUMPDEST PUSH2 0x149C PUSH2 0x443 JUMP JUMPDEST SWAP1 PUSH2 0x14A5 PUSH2 0x450 JUMP JUMPDEST SWAP2 PUSH2 0x14AE PUSH2 0x45D JUMP JUMPDEST SWAP3 PUSH2 0x14B7 PUSH2 0x495 JUMP JUMPDEST SWAP4 PUSH2 0x14C0 PUSH2 0x4A6 JUMP JUMPDEST PUSH2 0x14C8 PUSH2 0x4B7 JUMP JUMPDEST PUSH2 0x14D0 PUSH2 0x50F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP8 SWAP1 SWAP3 SWAP1 PUSH2 0x184 CALLDATALOAD DUP10 DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x14F5 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP5 PUSH2 0x1A4 CALLDATALOAD DUP11 DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x150F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP7 PUSH2 0x1C4 CALLDATALOAD SWAP11 DUP12 GT PUSH2 0x3D3 JUMPI PUSH2 0x152C PUSH2 0x18 SWAP12 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP9 PUSH2 0x1E4 CALLDATALOAD SWAP11 PUSH1 0xE4 CALLDATALOAD SWAP4 PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH1 0x84 CALLDATALOAD SWAP4 PUSH2 0x2D27 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x3D3 JUMPI PUSH2 0x156D DUP2 PUSH2 0x2E39 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH2 0x872 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE8 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x15BF DUP2 PUSH2 0x4D8 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH2 0x15CC DUP2 PUSH2 0x423 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH2 0x70C DUP2 PUSH2 0x423 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH2 0x15E7 CALLDATASIZE PUSH2 0x15A7 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x8 DUP2 SWAP1 SHR PUSH1 0xFF AND ISZERO SWAP4 SWAP3 SWAP1 DUP5 SWAP1 DUP2 PUSH2 0x16FE JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x16DE JUMPI JUMPDEST POP ISZERO PUSH2 0x1682 JUMPI PUSH2 0x1628 SWAP3 DUP5 PUSH2 0x161F PUSH1 0x1 PUSH1 0xFF NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x166B JUMPI PUSH2 0x2E48 JUMP JUMPDEST PUSH2 0x162E JUMPI STOP JUMPDEST PUSH2 0x163C PUSH2 0xFF00 NOT PUSH0 SLOAD AND PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 SWAP1 LOG1 STOP JUMPDEST PUSH2 0x167D PUSH2 0x100 PUSH2 0xFF00 NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x2E48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP DUP2 PUSH2 0x16F0 JUMPI JUMPDEST POP PUSH0 PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP PUSH1 0xFF AND EQ PUSH0 PUSH2 0x16E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF DUP3 AND LT SWAP2 POP PUSH2 0x15FD JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH2 0x1724 PUSH2 0x4FCD JUMP JUMPDEST PUSH2 0xC8C DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B42 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH32 0xE88463C2F254E2B070013A2DC7EE1E099F9BC00534CBDF03AF551DC26AE49219 PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x1795 DUP2 PUSH2 0xB2E JUMP JUMPDEST PUSH2 0x179D PUSH2 0x4FCD JUMP JUMPDEST PUSH2 0x17A5 PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x86B DUP1 SLOAD PUSH1 0xFF PUSH1 0xE8 SHL NOT AND SWAP2 ISZERO ISZERO PUSH1 0xE8 DUP2 SWAP1 SHL PUSH1 0xFF PUSH1 0xE8 SHL AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x17F0 DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x17FD DUP3 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP2 PUSH2 0x180A DUP4 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 PUSH1 0xA4 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x182B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP2 PUSH1 0xC4 CALLDATALOAD SWAP5 DUP6 GT PUSH2 0x3D3 JUMPI PUSH2 0x1847 PUSH2 0x18 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP4 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x4EFA JUMP JUMPDEST PUSH2 0x180 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x186E DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x187B DUP3 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH2 0x1887 DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH2 0x1894 DUP3 PUSH2 0x423 JUMP JUMPDEST PUSH1 0xE4 CALLDATALOAD PUSH2 0x18A0 DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x104 CALLDATALOAD PUSH2 0x18AD DUP2 PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0x124 CALLDATALOAD SWAP2 PUSH2 0x18BB DUP4 PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0x18C3 PUSH2 0x51D JUMP JUMPDEST PUSH2 0x164 CALLDATALOAD SWAP8 SWAP1 SWAP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP10 GT PUSH2 0x3D3 JUMPI PUSH2 0x18EA PUSH2 0x18 SWAP10 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xFB0 JUMP JUMPDEST SWAP9 SWAP1 SWAP8 PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH1 0x84 CALLDATALOAD SWAP4 PUSH2 0x2E8B JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x191B DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP3 SUB PUSH2 0x3D3 JUMPI PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x1936 DUP4 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH2 0x1942 DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 PUSH1 0x84 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x1963 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP3 PUSH1 0xA4 CALLDATALOAD SWAP6 DUP7 GT PUSH2 0x3D3 JUMPI PUSH2 0x197F PUSH2 0x18 SWAP7 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP5 PUSH2 0x31D8 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x19B6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x93D JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH2 0x19C2 DUP2 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP1 PUSH2 0x19CF DUP3 PUSH2 0x423 JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD SWAP4 DUP5 GT PUSH2 0x3D3 JUMPI PUSH2 0x19EA PUSH2 0x18 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x99D JUMP JUMPDEST SWAP3 PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x3AAE JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1A12 PUSH2 0x4FCD JUMP JUMPDEST PUSH2 0x1A1A PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x1A23 DUP2 PUSH2 0x2628 JUMP JUMPDEST PUSH2 0x1A5B JUMPI PUSH1 0x1 DUP2 PUSH0 DUP1 SWAP4 SSTORE ADD SSTORE PUSH32 0x3569B846531B754C99CB80DF3F49CD72FA6FE106AAEE5AB8E0CAF35A9D7CE88D PUSH0 DUP1 LOG2 PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH2 0xC8C SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH2 0x18 PUSH2 0x1AC6 PUSH2 0xB0F PUSH2 0x1AAE CALLDATASIZE PUSH2 0x15A7 JUMP JUMPDEST SWAP4 SWAP1 SWAP2 PUSH2 0x1AC1 PUSH1 0xFF PUSH0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x32CD JUMP JUMPDEST PUSH2 0x314A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AD2 DUP2 PUSH2 0x5CE JUMP JUMPDEST PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 PUSH9 0x20A1A927A9A996AB19 PUSH1 0xB9 SHL DUP3 MSTORE PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1AF7 DUP4 PUSH2 0x5CE JUMP JUMPDEST PUSH1 0x5 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 PUSH5 0x312E302E3 PUSH1 0xDC SHL DUP4 MSTORE PUSH2 0x1B24 PUSH1 0xFF PUSH0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x1B1F DUP2 PUSH2 0x32CD JUMP JUMPDEST PUSH2 0x32CD JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 MLOAD SWAP1 KECCAK256 SWAP1 PUSH2 0x47F SSTORE PUSH2 0x480 SSTORE PUSH2 0x1B3C PUSH2 0x50B2 JUMP JUMPDEST PUSH2 0x1B44 PUSH2 0x50C2 JUMP JUMPDEST PUSH2 0x50DD JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x1B79 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC28 JUMP JUMPDEST PUSH2 0x1B81 PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x1B94 PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE0 SHR AND ISZERO PUSH2 0x2ADE JUMP JUMPDEST PUSH2 0x140 DUP2 ADD SWAP1 PUSH2 0x1BA3 DUP3 PUSH2 0x2B19 JUMP JUMPDEST PUSH2 0xCBF SLOAD SWAP1 DUP2 PUSH4 0xFFFFFFFF DUP1 SWAP3 AND LT ISZERO PUSH2 0x1CDB JUMPI PUSH2 0x120 DUP4 ADD SWAP2 DUP2 PUSH2 0x1BC7 DUP5 PUSH2 0x2B19 JUMP JUMPDEST AND LT PUSH2 0x1CC9 JUMPI PUSH2 0x1BDA PUSH2 0xCBA CALLDATASIZE DUP6 PUSH2 0x2288 JUMP JUMPDEST SWAP2 PUSH2 0x1BE4 DUP4 PUSH2 0x1244 JUMP JUMPDEST SLOAD PUSH2 0x1CB8 JUMPI PUSH2 0x1C1C PUSH2 0x1C16 PUSH32 0x923794976D026D6B119735ADC163CB71DECFC903E17C3DC226C00789593C04E1 SWAP5 PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x1 SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1CAB PUSH2 0x1C2B PUSH1 0x60 DUP7 ADD PUSH2 0x2B23 JUMP JUMPDEST SWAP6 PUSH2 0x1C38 PUSH1 0x80 DUP8 ADD PUSH2 0x2B23 JUMP JUMPDEST SWAP6 PUSH2 0x1C58 PUSH2 0x1C52 PUSH2 0x1C4C PUSH2 0x100 DUP5 ADD PUSH2 0x2B19 JUMP JUMPDEST SWAP6 PUSH2 0x2B19 JUMP JUMPDEST SWAP3 PUSH2 0x2B19 JUMP JUMPDEST PUSH2 0x1C64 PUSH1 0x40 DUP4 ADD PUSH2 0x2B23 JUMP JUMPDEST PUSH2 0x1C6D DUP4 PUSH2 0x2B23 JUMP JUMPDEST SWAP1 PUSH2 0x1C7A PUSH1 0x20 DUP6 ADD PUSH2 0x2B23 JUMP JUMPDEST SWAP3 PUSH2 0x1C89 PUSH2 0x160 DUP7 ADD DUP7 PUSH2 0x2B2D JUMP JUMPDEST SWAP7 SWAP1 SWAP6 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 AND SWAP14 PUSH1 0xE0 DUP3 ADD CALLDATALOAD SWAP14 PUSH1 0xA0 PUSH1 0xC0 DUP5 ADD CALLDATALOAD SWAP4 ADD CALLDATALOAD SWAP2 DUP13 PUSH2 0x332D JUMP JUMPDEST SUB SWAP1 LOG3 PUSH2 0x18 PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x4BE791 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD642B7D9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x277AE7B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH32 0x2D5B62420992E5A4AFCE0E77742636CA2608EF58289FD2E1BAA5161EF6E7E41E PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D2D DUP2 PUSH2 0xB2E JUMP JUMPDEST PUSH2 0x1D35 PUSH2 0x4FCD JUMP JUMPDEST PUSH2 0x1D3D PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x86B DUP1 SLOAD PUSH1 0xFF PUSH1 0xE0 SHL NOT AND SWAP2 ISZERO ISZERO PUSH1 0xE0 DUP2 SWAP1 SHL PUSH1 0xFF PUSH1 0xE0 SHL AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x20 PUSH2 0x1D85 PUSH2 0x3397 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x20 PUSH4 0xFFFFFFFF PUSH2 0x86B SLOAD PUSH1 0xC0 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B82 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x3D3 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x3D3 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x3D3 JUMPI JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1E1C JUMPI POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1E0D JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1E45 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1E0B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD SWAP1 PUSH1 0x20 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP3 PUSH1 0x20 PUSH1 0x40 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x1E86 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x1EA4 PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0x1E2C JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x1E76 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x1EE5 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DDB JUMP JUMPDEST SWAP2 PUSH2 0x1EEF DUP4 PUSH2 0x33A5 JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1F07 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x133D DUP8 DUP3 PUSH2 0x1E51 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1F14 DUP4 DUP6 DUP9 PUSH2 0x33EE JUMP JUMPDEST PUSH1 0x40 SWAP4 SWAP2 PUSH2 0x1F26 DUP6 MLOAD DUP1 SWAP4 DUP2 SWAP4 PUSH2 0x3409 JUMP JUMPDEST SUB SWAP1 ADDRESS GAS DELEGATECALL SWAP1 PUSH2 0x1F34 PUSH2 0x3416 JUMP JUMPDEST SWAP2 ISZERO PUSH2 0x1F5B JUMPI POP SWAP1 PUSH1 0x1 SWAP2 PUSH2 0x1F49 DUP3 DUP9 PUSH2 0x34B4 JUMP JUMPDEST MSTORE PUSH2 0x1F54 DUP2 DUP8 PUSH2 0x34B4 JUMP JUMPDEST POP ADD PUSH2 0x1EF2 JUMP JUMPDEST DUP5 DUP3 PUSH1 0x44 DUP2 MLOAD LT PUSH2 0x3D3 JUMPI PUSH2 0x1F7F DUP2 DUP4 PUSH2 0xE51 SWAP4 ADD MLOAD PUSH1 0x24 DUP1 SWAP2 DUP4 ADD ADD SWAP2 ADD PUSH2 0x3445 JUMP JUMPDEST SWAP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 DUP4 ADD PUSH2 0x34A3 JUMP JUMPDEST PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1FAC DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x1FB8 DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x1FC0 PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x3D3 JUMPI PUSH2 0x1FE4 PUSH2 0x8D8 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP3 PUSH4 0xFFFFFFFF PUSH2 0xCBF SLOAD AND SWAP3 PUSH2 0x1FF8 PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x200B PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE8 SHR AND ISZERO PUSH2 0x28B8 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 CALLER PUSH2 0x380E JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x40 MLOAD PUSH12 0x1D6329F1C35CA4BFABB9F561 PUSH1 0x28 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x3 NOT PUSH1 0x60 CALLDATASIZE DUP3 ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT PUSH2 0x3D3 JUMPI PUSH1 0x60 DUP3 CALLDATASIZE SUB SWAP4 DUP5 ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x2081 DUP3 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x2099 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DDB JUMP JUMPDEST SWAP2 SWAP1 SWAP4 PUSH2 0x20A4 PUSH2 0x3618 JUMP JUMPDEST PUSH1 0x4 DUP5 ADD CALLDATALOAD SWAP1 PUSH2 0x182 NOT ADD DUP2 SLT ISZERO PUSH2 0x3D3 JUMPI PUSH2 0xD27 SWAP5 PUSH2 0x2144 SWAP4 PUSH2 0x20D1 PUSH2 0x213D SWAP4 PUSH1 0x4 CALLDATASIZE SWAP2 DUP10 ADD ADD PUSH2 0x2288 JUMP JUMPDEST SWAP6 PUSH2 0x20E7 PUSH2 0x20E2 PUSH1 0x80 DUP10 ADD MLOAD PUSH2 0x417 JUMP JUMPDEST PUSH2 0x366E JUMP JUMPDEST PUSH2 0x212B PUSH2 0x20F3 DUP9 PUSH2 0x3CDA JUMP JUMPDEST SWAP2 PUSH1 0x44 PUSH2 0x2103 PUSH1 0x20 DUP12 ADD MLOAD PUSH2 0x417 JUMP JUMPDEST SWAP2 PUSH2 0x160 DUP12 ADD MLOAD SWAP5 PUSH2 0x2113 PUSH2 0x627 JUMP JUMPDEST SWAP12 DUP13 MSTORE PUSH1 0x20 DUP13 ADD MSTORE ADD CALLDATALOAD PUSH1 0x40 DUP11 ADD MSTORE PUSH1 0x60 DUP10 ADD PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MSTORE PUSH0 PUSH1 0xA0 DUP8 ADD MSTORE CALLDATASIZE SWAP2 PUSH2 0x726 JUMP JUMPDEST SWAP1 DUP4 PUSH2 0x5166 JUMP JUMPDEST PUSH2 0x40C3 JUMP JUMPDEST PUSH2 0x2152 CALLDATASIZE PUSH2 0x834 JUMP JUMPDEST POP SWAP5 PUSH2 0x2160 SWAP7 SWAP4 SWAP5 SWAP7 PUSH2 0x3618 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0x86B SLOAD PUSH2 0x2179 PUSH1 0xFF DUP3 PUSH1 0xE8 SHR AND ISZERO PUSH2 0x28B8 JUMP JUMPDEST PUSH1 0xC0 SHR AND SWAP6 PUSH2 0x218A PUSH2 0x1AC1 DUP9 PUSH2 0x3135 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP6 SWAP1 DUP10 SWAP1 DUP5 AND DUP1 DUP9 EQ DUP1 PUSH2 0x227F JUMPI JUMPDEST ISZERO PUSH2 0x2258 JUMPI POP PUSH2 0x21D5 SWAP1 CALLVALUE EQ PUSH2 0x34C8 JUMP JUMPDEST DUP6 EXTCODESIZE ISZERO PUSH2 0x3D3 JUMPI PUSH0 PUSH1 0x4 SWAP7 PUSH1 0x40 MLOAD SWAP8 DUP9 DUP1 SWAP3 PUSH4 0xD0E30DB PUSH1 0xE4 SHL DUP3 MSTORE CALLVALUE SWAP1 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x2253 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B22 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 PUSH2 0x222D SWAP5 PUSH2 0x223A JUMPI JUMPDEST POP JUMPDEST PUSH2 0x221E PUSH2 0x3397 JUMP JUMPDEST SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 CALLER SWAP13 DUP9 PUSH2 0x34CF JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x18 PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x2247 PUSH2 0x224D SWAP3 PUSH2 0x54A JUMP JUMPDEST DUP1 PUSH2 0x3C9 JUMP JUMPDEST PUSH0 PUSH2 0x2214 JUMP JUMPDEST PUSH2 0x312A JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B22 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP8 POP PUSH2 0x222D SWAP5 SWAP2 PUSH2 0x227A SWAP2 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x505C JUMP JUMPDEST PUSH2 0x2216 JUMP JUMPDEST POP CALLVALUE ISZERO ISZERO PUSH2 0x21C4 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x180 DUP4 DUP3 SUB SLT PUSH2 0x3D3 JUMPI PUSH2 0x229D PUSH2 0x646 JUMP JUMPDEST SWAP3 PUSH2 0x22A7 DUP2 PUSH2 0x46A JUMP JUMPDEST DUP5 MSTORE PUSH2 0x22B5 PUSH1 0x20 DUP3 ADD PUSH2 0x46A JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x22C6 PUSH1 0x40 DUP3 ADD PUSH2 0x46A JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x22D7 PUSH1 0x60 DUP3 ADD PUSH2 0x46A JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x22E8 PUSH1 0x80 DUP3 ADD PUSH2 0x46A JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD CALLDATALOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD CALLDATALOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD CALLDATALOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 PUSH2 0x2319 DUP2 DUP4 ADD PUSH2 0x52B JUMP JUMPDEST SWAP1 DUP6 ADD MSTORE PUSH2 0x120 PUSH2 0x232B DUP2 DUP4 ADD PUSH2 0x52B JUMP JUMPDEST SWAP1 DUP6 ADD MSTORE PUSH2 0x140 PUSH2 0x233D DUP2 DUP4 ADD PUSH2 0x52B JUMP JUMPDEST SWAP1 DUP6 ADD MSTORE PUSH2 0x160 SWAP2 DUP2 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x2361 SWAP3 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP1 DUP4 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x3 NOT PUSH1 0x60 CALLDATASIZE DUP3 ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP4 GT PUSH2 0x3D3 JUMPI PUSH1 0xC0 SWAP1 DUP4 CALLDATASIZE SUB ADD SLT PUSH2 0x3D3 JUMPI PUSH2 0x23A1 PUSH2 0x627 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x4 ADD CALLDATALOAD DUP2 DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x23BE SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP7 ADD ADD PUSH2 0x2288 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x24 DUP4 ADD CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x44 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x23E0 PUSH1 0x64 DUP5 ADD PUSH2 0x46A JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x84 DUP4 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x18 SWAP3 PUSH2 0x2407 PUSH1 0xA4 SWAP3 PUSH1 0x4 CALLDATASIZE SWAP2 DUP5 ADD ADD PUSH2 0x6F1 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x241B PUSH2 0x443 JUMP JUMPDEST PUSH2 0x2423 PUSH2 0xB38 JUMP JUMPDEST SWAP2 PUSH2 0x4341 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH2 0x872 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x2485 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH2 0x2492 DUP3 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x24AA SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xFB0 JUMP JUMPDEST SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP5 DUP6 GT PUSH2 0x3D3 JUMPI PUSH2 0x24C6 PUSH2 0x18 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xFB0 JUMP JUMPDEST SWAP5 SWAP1 SWAP4 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x3517 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x40 MLOAD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH2 0x8D8 PUSH1 0x4 CALLDATALOAD PUSH2 0x2563 DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x256B PUSH2 0x4FCD JUMP JUMPDEST PUSH2 0x1B44 PUSH2 0x3618 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH2 0x86A SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3D3 JUMPI PUSH0 PUSH2 0x25C9 DUP2 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x25D1 PUSH2 0x3618 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD CALLVALUE ADDRESS GAS CALL PUSH2 0x25E3 PUSH2 0x3416 JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x25F0 JUMPI PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0xE51 SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x1E2C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x86C DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2644 JUMPI PUSH0 MSTORE PUSH1 0x3 PUSH1 0x20 PUSH0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2614 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x86C SLOAD DUP2 LT ISZERO PUSH2 0x3D3 JUMPI PUSH2 0x2673 PUSH1 0x40 SWAP2 PUSH2 0x2628 JUMP JUMPDEST POP PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xCBE SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x26BE DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x26C6 PUSH2 0x4FCD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x26DE JUMPI PUSH2 0x18 SWAP1 PUSH2 0x5026 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x274B DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x2758 DUP3 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH2 0x2764 DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x276C PUSH2 0x475 JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 GT PUSH2 0x3D3 JUMPI PUSH2 0x278F PUSH2 0x8D8 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP4 PUSH4 0xFFFFFFFF PUSH2 0xCBF SLOAD AND SWAP4 PUSH2 0x141A PUSH2 0x3618 JUMP JUMPDEST SWAP11 SWAP9 SWAP6 SWAP4 SWAP1 SWAP8 SWAP10 SWAP7 SWAP5 SWAP3 PUSH2 0x27B5 PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x27BE DUP4 PUSH2 0x366E JUMP JUMPDEST PUSH2 0x27C6 PUSH2 0x3397 JUMP JUMPDEST SWAP3 DUP10 PUSH2 0x27D0 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x27DB DUP2 SWAP16 DUP3 PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 PUSH2 0x27E8 SWAP2 PUSH2 0x2B5F JUMP JUMPDEST PUSH2 0x27F5 SWAP1 PUSH1 0x40 DUP15 ADD PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x80 DUP12 ADD MSTORE PUSH1 0xA0 DUP11 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0xE0 DUP9 ADD MSTORE PUSH4 0xFFFFFFFF AND PUSH2 0x100 DUP8 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x120 SWAP2 DUP1 DUP4 DUP10 ADD MSTORE PUSH2 0x2835 PUSH2 0x666 JUMP JUMPDEST SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP5 PUSH0 DUP7 MSTORE PUSH1 0x40 DUP10 ADD PUSH0 SWAP1 MSTORE PUSH1 0x60 DUP10 ADD SWAP1 PUSH2 0x2855 SWAP2 PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MSTORE PUSH0 PUSH1 0xA0 DUP9 ADD MSTORE PUSH12 0x1D6329F1C35CA4BFABB9F561 PUSH1 0x28 SHL PUSH1 0xC0 DUP9 ADD MSTORE PUSH0 NOT PUSH1 0xE0 DUP9 ADD MSTORE PUSH1 0x1 SWAP1 DUP8 ADD MSTORE DUP6 ADD MSTORE DUP4 MLOAD PUSH2 0x2890 SWAP1 PUSH2 0x46D9 JUMP JUMPDEST SWAP1 MSTORE PUSH2 0x289C SWAP2 DUP4 PUSH2 0x51FD JUMP JUMPDEST PUSH2 0x28A5 DUP2 PUSH2 0x494B JUMP JUMPDEST PUSH2 0x28AE SWAP2 PUSH2 0x4DCB JUMP JUMPDEST PUSH2 0x441 PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST ISZERO PUSH2 0x28BF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x506175736564206465706F73697473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 PUSH2 0x28FF PUSH2 0x3618 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD SWAP2 PUSH2 0x2911 PUSH2 0x20E2 DUP5 MLOAD PUSH2 0x417 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP2 DUP3 MLOAD PUSH2 0x2920 PUSH2 0x3397 JUMP JUMPDEST SUB PUSH2 0x2A16 JUMPI PUSH2 0x2940 PUSH2 0x2944 SWAP2 DUP4 PUSH1 0x1 PUSH2 0x2938 DUP10 PUSH2 0x2628 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x39AF JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2A04 JUMPI DUP1 PUSH1 0x60 PUSH32 0xF8BD640004BCEC1B89657020F561D0B070CBDF662D0B158DB9DCCB0A8301BFAB SWAP3 ADD SWAP4 PUSH2 0x2986 PUSH2 0x2980 DUP7 MLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST DUP8 PUSH2 0x3A40 JUMP JUMPDEST PUSH2 0x29F7 DUP5 MLOAD SWAP5 PUSH2 0x29DC PUSH2 0x29D5 DUP6 MLOAD SWAP6 PUSH2 0x29C5 PUSH1 0x40 DUP3 ADD SWAP10 DUP11 MLOAD PUSH2 0x29AD DUP14 MLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x29B7 DUP11 MLOAD PUSH2 0x417 JUMP JUMPDEST SWAP2 PUSH1 0xA0 DUP7 ADD SWAP12 DUP13 MLOAD SWAP5 PUSH2 0x3AAE JUMP JUMPDEST MLOAD SWAP3 MLOAD SWAP8 MLOAD SWAP9 MLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP4 MLOAD PUSH2 0x417 JUMP JUMPDEST SWAP4 MLOAD PUSH4 0xFFFFFFFF SWAP5 DUP6 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 AND SWAP11 AND SWAP9 CALLER SWAP4 DUP7 PUSH2 0x2A97 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x441 PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x582F497D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3D23E4D1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2A47 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2A39 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2A7A JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2A6C JUMP JUMPDEST SWAP4 PUSH2 0x2AB9 PUSH1 0x80 SWAP5 SWAP4 PUSH2 0x2AD7 SWAP4 SWAP9 SWAP8 SWAP9 DUP8 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0xA0 DUP8 ADD SWAP1 PUSH2 0x2A28 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x40 DUP8 ADD MSTORE DUP6 DUP2 SUB PUSH1 0x60 DUP8 ADD MSTORE SWAP1 PUSH2 0x2A5B JUMP JUMPDEST SWAP5 AND SWAP2 ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0x2AE5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5061757365642066696C6C73 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLDATALOAD PUSH2 0x70C DUP2 PUSH2 0x4D8 JUMP JUMPDEST CALLDATALOAD PUSH2 0x70C DUP2 PUSH2 0x423 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x3D3 JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3D3 JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x3D3 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 MSTORE JUMP JUMPDEST ISZERO PUSH2 0x2B75 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5AE2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2BC3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5AE2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP11 SWAP7 SWAP3 SWAP10 SWAP4 SWAP6 SWAP1 SWAP9 SWAP8 SWAP10 PUSH2 0x2C1C PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x86B SLOAD PUSH1 0xE0 SHR PUSH1 0xFF AND ISZERO PUSH2 0x2C30 SWAP1 PUSH2 0x2ADE JUMP JUMPDEST PUSH2 0x2C38 PUSH2 0x3397 JUMP JUMPDEST SWAP3 DUP11 PUSH2 0x2C42 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x2C4D DUP2 SWAP16 DUP3 PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 PUSH2 0x2C5A SWAP2 PUSH2 0x2B5F JUMP JUMPDEST PUSH2 0x2C67 SWAP1 PUSH1 0x40 DUP15 ADD PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x80 DUP12 ADD MSTORE PUSH1 0xA0 DUP11 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0x7 DUP8 SWAP1 SIGNEXTEND PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 SWAP5 DUP6 DUP10 ADD SWAP1 PUSH2 0x2C9F SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x120 SWAP6 DUP2 DUP8 DUP11 ADD MSTORE PUSH2 0x2CB0 PUSH2 0x666 JUMP JUMPDEST SWAP9 DUP10 MSTORE PUSH0 PUSH1 0x20 DUP11 ADD SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP9 SWAP1 SWAP9 SIGNEXTEND PUSH1 0x40 DUP11 ADD MSTORE PUSH2 0x2CD3 SWAP1 PUSH1 0x60 DUP11 ADD PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD MSTORE DUP4 ADD PUSH0 SWAP1 MSTORE DUP3 ADD PUSH0 SWAP1 MSTORE DUP2 MLOAD PUSH2 0x2CFC SWAP1 PUSH2 0x46D9 JUMP JUMPDEST SWAP1 MSTORE PUSH2 0x28A5 DUP2 PUSH2 0x494B JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP14 SWAP13 SWAP12 SWAP6 SWAP15 SWAP4 DUP15 SWAP8 SWAP10 SWAP4 SWAP12 SWAP9 SWAP3 SWAP12 PUSH2 0x2D3D PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x86B SLOAD PUSH1 0xE0 SHR PUSH1 0xFF AND ISZERO PUSH2 0x2D51 SWAP1 PUSH2 0x2ADE JUMP JUMPDEST PUSH2 0x2D59 PUSH2 0x3397 JUMP JUMPDEST SWAP3 PUSH2 0x2D62 PUSH2 0x666 JUMP JUMPDEST SWAP10 PUSH2 0x2D6D SWAP1 DUP12 PUSH2 0x2B5F JUMP JUMPDEST PUSH2 0x2D7A SWAP1 PUSH1 0x20 DUP12 ADD PUSH2 0x2B5F JUMP JUMPDEST PUSH2 0x2D87 SWAP1 PUSH1 0x40 DUP11 ADD PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0x80 DUP8 ADD DUP10 SWAP1 MSTORE PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0xE0 DUP6 ADD MSTORE PUSH4 0xFFFFFFFF DUP6 AND PUSH2 0x100 DUP6 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 PUSH2 0x120 SWAP4 DUP5 DUP7 ADD MSTORE PUSH2 0x2DCA PUSH2 0x666 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH0 PUSH1 0x20 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x7 DUP10 SWAP1 SIGNEXTEND PUSH1 0x40 DUP8 ADD MSTORE SWAP5 SWAP13 DUP10 DUP15 PUSH1 0x60 ADD SWAP1 PUSH2 0x2DF0 SWAP2 PUSH2 0x2B5F JUMP JUMPDEST DUP14 DUP12 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD MSTORE PUSH1 0xC0 DUP14 ADD MSTORE PUSH1 0xE0 DUP13 ADD MSTORE DUP11 ADD PUSH0 SWAP1 MSTORE DUP10 ADD PUSH0 SWAP1 MSTORE DUP9 MLOAD PUSH2 0x2E1A SWAP1 PUSH2 0x46D9 JUMP JUMPDEST SWAP1 MSTORE PUSH2 0x289C SWAP7 PUSH2 0x4F69 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x3 GT ISZERO PUSH2 0x2E43 JUMPI JUMP JUMPDEST PUSH2 0x2E25 JUMP JUMPDEST PUSH2 0x2E81 SWAP3 SWAP2 PUSH2 0x1AC6 PUSH2 0xB0F SWAP3 PUSH2 0x2E68 PUSH1 0xFF PUSH0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x1B1F DUP2 PUSH2 0x32CD JUMP JUMPDEST PUSH2 0x2E71 CALLER PUSH2 0x5026 JUMP JUMPDEST PUSH2 0x1AC1 PUSH1 0xFF PUSH0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x32CD JUMP JUMPDEST PUSH2 0x441 TIMESTAMP PUSH2 0xCBF SSTORE JUMP JUMPDEST SWAP8 SWAP12 SWAP6 SWAP10 SWAP2 SWAP7 SWAP4 SWAP12 SWAP11 SWAP5 SWAP9 SWAP1 SWAP3 SWAP11 PUSH2 0x2EA1 PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x2EB4 PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE8 SHR AND ISZERO PUSH2 0x28B8 JUMP JUMPDEST PUSH2 0x2EDB PUSH2 0x2940 PUSH2 0x2ED4 DUP14 PUSH2 0x2EC7 DUP13 PUSH2 0x122A JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x30E5 JUMPI PUSH2 0xCBF SLOAD SWAP10 PUSH4 0xFFFFFFFF SWAP14 DUP15 PUSH2 0x2EF8 DUP14 DUP3 DUP7 AND SWAP1 PUSH2 0x310B JUMP JUMPDEST SWAP1 PUSH32 0x0 AND LT PUSH2 0x30D3 JUMPI DUP15 DUP1 DUP6 AND DUP14 DUP1 DUP3 LT SWAP3 DUP4 ISZERO PUSH2 0x309C JUMPI JUMPDEST POP POP POP PUSH2 0x308A JUMPI DUP15 SWAP12 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP13 DUP14 DUP10 AND SWAP1 DUP8 AND SWAP1 DUP2 DUP2 OR PUSH2 0x3054 JUMPI JUMPDEST POP POP POP DUP12 PUSH32 0x0 AND DUP13 DUP12 AND DUP2 DUP2 EQ DUP1 PUSH2 0x304B JUMPI JUMPDEST ISZERO PUSH2 0x3031 JUMPI POP DUP2 CALLVALUE SUB PUSH2 0x301F JUMPI DUP1 EXTCODESIZE ISZERO PUSH2 0x3D3 JUMPI PUSH0 PUSH1 0x4 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0xD0E30DB PUSH1 0xE4 SHL DUP3 MSTORE CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x2253 JUMPI PUSH2 0x300C JUMPI JUMPDEST POP JUMPDEST PUSH2 0x86B SLOAD PUSH1 0xC0 SHR PUSH4 0xFFFFFFFF AND SWAP15 DUP16 PUSH2 0x2FD4 SWAP1 PUSH2 0x3135 JUMP JUMPDEST PUSH2 0x2FDD SWAP1 PUSH2 0x314A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP13 AND SWAP16 AND SWAP14 PUSH2 0x2FF1 SWAP11 DUP13 PUSH2 0x3170 JUMP JUMPDEST SUB PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5A82 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG4 PUSH2 0x441 PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x2247 PUSH2 0x3019 SWAP3 PUSH2 0x54A JUMP JUMPDEST PUSH0 PUSH2 0x2FBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6452A35D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x301F JUMPI DUP2 PUSH2 0x3046 SWAP2 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x505C JUMP JUMPDEST PUSH2 0x2FBC JUMP JUMPDEST POP CALLVALUE ISZERO ISZERO PUSH2 0x2F82 JUMP JUMPDEST ISZERO PUSH2 0x3078 JUMPI LT PUSH2 0x3066 JUMPI PUSH0 DUP1 DUP1 PUSH2 0x2F50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x25A63A5B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x495D907F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x582E3889 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x30CA SWAP3 SWAP4 POP PUSH32 0x0 AND SWAP1 PUSH2 0x311D JUMP JUMPDEST LT DUP16 DUP14 DUP2 PUSH2 0x2F30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF722177F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2A58C4F3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x3118 JUMPI JUMP JUMPDEST PUSH2 0x30F7 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x3118 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP1 SWAP2 AND SWAP1 DUP2 EQ PUSH2 0x3118 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x86B DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xC0 SHL NOT AND PUSH1 0xC0 SWAP3 SWAP1 SWAP3 SHL PUSH4 0xFFFFFFFF PUSH1 0xC0 SHL AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH4 0xFFFFFFFF SWAP3 DUP4 AND PUSH1 0x80 DUP4 ADD MSTORE SWAP3 DUP3 AND PUSH1 0xA0 DUP3 ADD MSTORE SWAP3 AND PUSH1 0xC0 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0xE0 DUP3 ADD MSTORE SWAP2 AND PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x140 PUSH2 0x120 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x70C SWAP4 SWAP2 ADD SWAP2 PUSH2 0x2D07 JUMP JUMPDEST PUSH2 0x3281 SWAP1 PUSH4 0xFFFFFFFF PUSH32 0xA6AA57BD282FC82378458DE27BE4EADFA791A0C7321C49562EEBA8B2643DD566 SWAP6 SWAP5 SWAP8 SWAP7 PUSH2 0x320E PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x3244 DUP9 DUP3 DUP9 DUP9 PUSH1 0x7 SIGNEXTEND SWAP9 PUSH2 0x3234 PUSH8 0x6F05B59D3B20000 PUSH2 0x322E DUP13 PUSH2 0x50A3 JUMP JUMPDEST LT PUSH2 0x328B JUMP JUMPDEST DUP14 PUSH2 0x323D PUSH2 0x3397 JUMP JUMPDEST SWAP1 DUP10 PUSH2 0x4F69 JUMP JUMPDEST PUSH2 0x326F PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 DUP10 MSTORE AND PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x80 DUP8 ADD SWAP1 PUSH2 0x1E2C JUMP JUMPDEST SWAP3 DUP6 DUP5 SUB PUSH1 0x60 DUP8 ADD MSTORE AND SWAP8 AND SWAP6 PUSH2 0x1E2C JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST ISZERO PUSH2 0x3292 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E76616C69642072656C6179657220666565 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x32D4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH4 0xFFFFFFFF SWAP3 DUP4 AND PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0xA0 DUP3 ADD MSTORE SWAP2 DUP2 AND PUSH1 0xC0 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0xE0 DUP3 ADD MSTORE SWAP2 AND PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x140 PUSH2 0x120 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x70C SWAP4 SWAP2 ADD SWAP2 PUSH2 0x2D07 JUMP JUMPDEST PUSH2 0xCBE SLOAD DUP1 PUSH2 0x70C JUMPI POP CHAINID SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x33AF DUP3 PUSH2 0x70F JUMP JUMPDEST PUSH2 0x33BC PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x604 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x33CD PUSH1 0x1F NOT SWAP2 PUSH2 0x70F JUMP JUMPDEST ADD SWAP1 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x33DD JUMPI POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x60 PUSH1 0x20 DUP1 SWAP4 DUP6 ADD ADD MSTORE ADD PUSH2 0x33D1 JUMP JUMPDEST SWAP1 DUP3 LT ISZERO PUSH2 0x2644 JUMPI PUSH2 0x3405 SWAP2 PUSH1 0x5 SHL DUP2 ADD SWAP1 PUSH2 0x2B2D JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP1 DUP1 SWAP3 SWAP2 DUP3 CALLDATACOPY ADD PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x3440 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x3427 DUP3 PUSH2 0x6A0 JUMP JUMPDEST SWAP2 PUSH2 0x3435 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x604 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x3D3 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3D3 JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x3D3 JUMPI DUP1 MLOAD PUSH2 0x3477 DUP2 PUSH2 0x6A0 JUMP JUMPDEST SWAP3 PUSH2 0x3485 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x604 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x3D3 JUMPI PUSH2 0x70C SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x1E0B JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x70C SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x1E2C JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2644 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3D3 JUMPI JUMP JUMPDEST SWAP4 PUSH1 0xE0 SWAP6 SWAP4 PUSH2 0x70C SWAP9 SWAP8 SWAP4 PUSH4 0xFFFFFFFF SWAP4 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0x40 DUP7 ADD MSTORE AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH1 0x80 DUP5 ADD MSTORE AND PUSH1 0xA0 DUP3 ADD MSTORE DUP2 PUSH1 0xC0 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1E2C JUMP JUMPDEST SWAP5 SWAP1 SWAP7 SWAP4 SWAP6 PUSH2 0x3524 PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x3537 PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE0 SHR AND ISZERO PUSH2 0x2ADE JUMP JUMPDEST PUSH2 0x3544 PUSH2 0x140 DUP8 ADD PUSH2 0x2B19 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0xCBF SLOAD SWAP2 AND LT ISZERO DUP1 PUSH2 0x35FA JUMPI JUMPDEST PUSH2 0xD31 JUMPI PUSH2 0x3565 CALLDATASIZE DUP8 PUSH2 0x2288 JUMP JUMPDEST PUSH2 0x356E SWAP1 PUSH2 0x3CDA JUMP JUMPDEST SWAP8 PUSH2 0x3577 PUSH2 0x627 JUMP JUMPDEST SWAP9 PUSH2 0x3582 CALLDATASIZE DUP10 PUSH2 0x2288 JUMP JUMPDEST DUP11 MSTORE PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x40 DUP10 ADD DUP5 SWAP1 MSTORE PUSH2 0x359D DUP6 PUSH1 0x60 DUP12 ADD PUSH2 0x2B5F JUMP JUMPDEST PUSH2 0x35A8 CALLDATASIZE DUP5 DUP11 PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0xA0 DUP10 ADD MSTORE PUSH2 0x35BB DUP7 PUSH2 0x2B23 JUMP JUMPDEST SWAP7 PUSH2 0x35C9 PUSH2 0x100 DUP9 ADD PUSH2 0x2B19 JUMP JUMPDEST SWAP3 CALLDATASIZE SWAP1 PUSH2 0x35D5 SWAP3 PUSH2 0x6BB JUMP JUMPDEST SWAP5 CALLDATASIZE SWAP1 PUSH2 0x35E1 SWAP3 PUSH2 0x6BB JUMP JUMPDEST SWAP5 PUSH1 0xE0 ADD CALLDATALOAD SWAP1 PUSH2 0x35F0 SWAP7 PUSH2 0x4EFA JUMP JUMPDEST CALLER PUSH2 0x28AE SWAP2 PUSH2 0x3E25 JUMP JUMPDEST POP PUSH2 0x3607 PUSH1 0x40 DUP8 ADD PUSH2 0x2B23 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0x3557 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x65 SLOAD EQ PUSH2 0x3629 JUMPI PUSH1 0x2 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH32 0x8A5AFA2F5694AE60F58FB8F4F1D7408F1CB0AAC9FFC67150D46E2C7D1BB911FF SWAP1 PUSH1 0x20 SWAP1 LOG1 JUMP JUMPDEST ISZERO PUSH2 0x36AD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x44697361626C656420726F757465 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x36EA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x416D6F756E7420746F6F206C61726765 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3729 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x696E76616C69642071756F746554696D657374616D7 PUSH1 0x54 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x376E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH27 0x1B5CD9CB9D985B1D59481B5D5CDD081B585D18DA08185B5BDD5B9D PUSH1 0x2A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 SWAP4 PUSH2 0x70C SWAP7 SWAP6 SWAP2 SWAP3 SWAP5 PUSH2 0x140 SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP6 AND DUP7 MSTORE PUSH0 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH4 0xFFFFFFFF DUP1 SWAP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH0 PUSH1 0xC0 DUP5 ADD MSTORE AND PUSH1 0xE0 DUP3 ADD MSTORE PUSH0 PUSH2 0x100 DUP3 ADD MSTORE DUP2 PUSH2 0x120 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1E2C JUMP JUMPDEST SWAP2 SWAP6 SWAP7 SWAP4 SWAP5 SWAP3 SWAP1 SWAP3 PUSH2 0x382E PUSH2 0x3829 PUSH2 0x2ED4 DUP9 PUSH2 0x2EC7 DUP12 PUSH2 0x122A JUMP JUMPDEST PUSH2 0x36A6 JUMP JUMPDEST PUSH1 0x7 SIGNEXTEND SWAP4 PUSH2 0x3847 PUSH8 0x6F05B59D3B20000 PUSH2 0x322E DUP8 PUSH2 0x50A3 JUMP JUMPDEST PUSH2 0x3861 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP4 GT ISZERO PUSH2 0x36E3 JUMP JUMPDEST PUSH2 0xCBF SLOAD SWAP4 PUSH2 0x38A5 PUSH2 0x387B PUSH4 0xFFFFFFFF SWAP7 DUP8 DUP13 AND SWAP1 PUSH2 0x310B JUMP JUMPDEST DUP7 PUSH32 0x0 AND LT ISZERO PUSH2 0x3722 JUMP JUMPDEST PUSH2 0x86B SLOAD PUSH1 0xC0 SHR PUSH4 0xFFFFFFFF AND SWAP9 PUSH2 0x38BF PUSH2 0x1AC1 DUP12 PUSH2 0x3135 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 PUSH32 0x0 DUP8 AND SWAP5 DUP11 DUP9 AND DUP1 DUP8 EQ DUP1 PUSH2 0x39A6 JUMPI JUMPDEST ISZERO PUSH2 0x397C JUMPI POP PUSH2 0x3909 DUP2 CALLVALUE EQ PUSH2 0x3767 JUMP JUMPDEST DUP6 EXTCODESIZE ISZERO PUSH2 0x3D3 JUMPI PUSH0 PUSH1 0x4 SWAP7 PUSH1 0x40 MLOAD SWAP8 DUP9 DUP1 SWAP3 PUSH4 0xD0E30DB PUSH1 0xE4 SHL DUP3 MSTORE CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x2253 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5A82 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP10 PUSH2 0x3964 SWAP8 PUSH2 0x3953 SWAP3 PUSH2 0x3969 JUMPI JUMPDEST POP JUMPDEST DUP3 PUSH2 0x52BD JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 AND SWAP13 AND SWAP11 DUP8 PUSH2 0x37B1 JUMP JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST DUP1 PUSH2 0x2247 PUSH2 0x3976 SWAP3 PUSH2 0x54A JUMP JUMPDEST PUSH0 PUSH2 0x394B JUMP JUMPDEST PUSH2 0x3964 SWAP7 POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5A82 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP10 PUSH2 0x39A1 DUP4 PUSH2 0x3953 SWAP4 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x505C JUMP JUMPDEST PUSH2 0x394D JUMP JUMPDEST POP CALLVALUE ISZERO ISZERO PUSH2 0x38F8 JUMP JUMPDEST PUSH2 0x70C SWAP3 SWAP2 PUSH1 0x40 MLOAD PUSH2 0x3A37 DUP2 PUSH2 0x3A29 PUSH1 0x20 DUP3 ADD SWAP5 PUSH1 0x20 DUP7 MSTORE DUP1 MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0xA0 PUSH2 0x39F4 PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0xC0 PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD SWAP1 PUSH2 0x2A28 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP6 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH0 NOT PUSH1 0x1 DUP5 SHL ADD AND PUSH1 0xC0 DUP7 ADD MSTORE SWAP2 ADD MLOAD DUP4 DUP3 SUB PUSH1 0x3F NOT ADD PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x2A5B JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x604 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 PUSH2 0x52F3 JUMP JUMPDEST PUSH2 0x3A4B PUSH1 0x2 SWAP2 PUSH2 0x2628 JUMP JUMPDEST POP ADD PUSH3 0xFFFFFF DUP3 PUSH1 0x8 SHR AND DUP1 PUSH0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP5 AND SHL DUP1 DUP1 SWAP5 AND EQ PUSH2 0x3A83 JUMPI PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP2 SLOAD OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x954476D9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP5 SWAP4 SWAP2 SWAP1 SWAP4 DUP1 MLOAD DUP3 MLOAD SUB PUSH2 0x3B7E JUMPI DUP2 MLOAD SWAP2 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x3B32 JUMPI POP POP POP POP DUP3 PUSH2 0x3AD9 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 PUSH2 0x3B0A PUSH32 0x828FC203220356DF8F072A91681CAEE7D5C75095E2A95E80ED5A14B384697F71 SWAP4 DUP7 PUSH2 0x537D JUMP JUMPDEST PUSH2 0x3B26 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP8 AND SWAP6 CALLER SWAP1 DUP4 PUSH2 0x3A95 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH0 DUP1 DUP1 DUP1 PUSH2 0x3AD3 JUMP JUMPDEST DUP1 PUSH2 0x3B3F PUSH1 0x1 SWAP3 DUP5 PUSH2 0x34B4 JUMP JUMPDEST MLOAD DUP1 PUSH2 0x3B4D JUMPI JUMPDEST POP ADD PUSH2 0x3AC2 JUMP JUMPDEST PUSH2 0x3B78 SWAP1 PUSH2 0x3B6B PUSH2 0x3B5E DUP5 DUP9 PUSH2 0x34B4 JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH2 0x5344 JUMP JUMPDEST PUSH0 PUSH2 0x3B46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x19A53167 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x3BD8 JUMPI PUSH2 0x86A DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH32 0x1F17A88F67B0F49060A34BEC1A4723A563620E6AA265EB640B5046DCEE0759A0 PUSH0 DUP1 LOG2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4261642068756220706F6F6C2061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x70C SWAP2 PUSH2 0x180 SWAP1 PUSH2 0x3C27 DUP2 DUP5 MLOAD PUSH2 0x12AF JUMP JUMPDEST PUSH2 0x3C39 PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x12AF JUMP JUMPDEST PUSH2 0x3C4B PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x12AF JUMP JUMPDEST PUSH2 0x3C5D PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x12AF JUMP JUMPDEST PUSH2 0x3C6F PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x80 DUP4 ADD SWAP1 PUSH2 0x12AF JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x3CA5 PUSH2 0x100 DUP1 DUP6 ADD MLOAD SWAP1 DUP4 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x120 DUP4 DUP2 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP3 ADD MSTORE PUSH2 0x140 DUP4 DUP2 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP3 ADD MSTORE DUP2 PUSH2 0x160 DUP1 SWAP5 ADD MLOAD SWAP4 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1E2C JUMP JUMPDEST PUSH2 0x3CE2 PUSH2 0x3397 JUMP JUMPDEST PUSH2 0x3D14 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x3D00 PUSH1 0x20 DUP4 ADD SWAP6 PUSH1 0x40 DUP8 MSTORE PUSH1 0x60 DUP5 ADD SWAP1 PUSH2 0x3C14 JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP4 ADD MSTORE SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x604 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x3D23 DUP3 PUSH2 0x2E39 JUMP JUMPDEST MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND DUP2 MSTORE PUSH1 0x60 DUP1 PUSH2 0x3D4F PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x80 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD SWAP1 PUSH2 0x1E2C JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE ADD MLOAD SWAP2 PUSH2 0x3D66 DUP4 PUSH2 0x2E39 JUMP JUMPDEST ADD MSTORE SWAP1 JUMP JUMPDEST SWAP11 SWAP8 SWAP1 SWAP7 SWAP6 PUSH2 0x3DDA SWAP7 PUSH2 0x70C SWAP14 SWAP12 SWAP7 PUSH1 0x80 DUP15 PUSH2 0x3DCF SWAP9 PUSH2 0x3DE9 SWAP15 SWAP9 PUSH2 0x180 SWAP14 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP10 DUP11 DUP1 SWAP3 AND DUP6 MSTORE AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE DUP13 PUSH1 0xA0 PUSH4 0xFFFFFFFF DUP1 SWAP5 AND SWAP2 ADD MSTORE AND PUSH1 0xC0 DUP13 ADD MSTORE AND PUSH1 0xE0 DUP11 ADD MSTORE PUSH2 0x100 DUP10 ADD SWAP1 PUSH2 0x12AF JUMP JUMPDEST PUSH2 0x120 DUP8 ADD SWAP1 PUSH2 0x12AF JUMP JUMPDEST DUP1 PUSH2 0x140 DUP7 ADD MSTORE DUP5 ADD SWAP1 PUSH2 0x1E2C JUMP JUMPDEST SWAP2 PUSH2 0x160 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x3D26 JUMP JUMPDEST SWAP1 PUSH2 0x70C SWAP5 SWAP4 PUSH1 0x80 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE AND PUSH1 0x40 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1E2C JUMP JUMPDEST DUP1 MLOAD SWAP2 PUSH2 0x120 DUP4 ADD SWAP1 PUSH2 0x3E3C DUP3 MLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0xCBF SLOAD SWAP2 AND LT PUSH2 0x1CC9 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 PUSH2 0x3E5C DUP3 PUSH2 0x1244 JUMP JUMPDEST SLOAD SUB PUSH2 0x40BC JUMPI PUSH1 0x1 SWAP1 JUMPDEST PUSH1 0x2 PUSH2 0x3E71 DUP3 PUSH2 0x1244 JUMP JUMPDEST SLOAD EQ PUSH2 0x40AA JUMPI PUSH2 0x3E80 SWAP1 PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x2 SWAP1 SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH2 0x3E92 SWAP1 PUSH2 0x417 JUMP JUMPDEST PUSH1 0x80 DUP7 ADD MLOAD PUSH2 0x3EA0 SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP3 PUSH1 0xA0 DUP8 ADD MLOAD SWAP2 DUP7 PUSH1 0xC0 DUP10 ADD MLOAD SWAP5 DUP10 PUSH1 0xA0 DUP4 ADD MLOAD SWAP7 PUSH1 0xE0 DUP3 ADD MLOAD SWAP8 PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x3ECE SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP11 MLOAD PUSH4 0xFFFFFFFF AND PUSH2 0x140 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x40 DUP6 ADD MLOAD PUSH2 0x3EF1 SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP3 DUP6 MLOAD PUSH2 0x3EFD SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP5 PUSH1 0x20 DUP8 ADD MLOAD PUSH2 0x3F0C SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP7 PUSH2 0x160 ADD MLOAD SWAP8 PUSH1 0x60 DUP11 ADD MLOAD PUSH2 0x3F21 SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP10 PUSH1 0x80 DUP2 ADD MLOAD SWAP1 PUSH1 0x40 ADD MLOAD SWAP1 PUSH2 0x3F35 PUSH2 0x686 JUMP JUMPDEST SWAP12 PUSH2 0x3F40 SWAP1 DUP14 PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x20 DUP13 ADD MSTORE PUSH1 0x40 DUP12 ADD MSTORE PUSH2 0x3F57 SWAP1 PUSH1 0x60 DUP12 ADD PUSH2 0x3D1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP12 AND SWAP15 PUSH4 0xFFFFFFFF AND SWAP14 SWAP11 SWAP12 DUP13 SWAP12 PUSH2 0x3F7B SWAP12 DUP14 PUSH2 0x3D6B JUMP JUMPDEST SUB PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5AC2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG4 PUSH1 0x60 DUP2 ADD MLOAD PUSH2 0x3F9A SWAP1 PUSH2 0x417 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 CALLER DUP5 EQ DUP1 PUSH2 0x40A2 JUMPI JUMPDEST PUSH2 0x3AD3 JUMPI PUSH1 0x80 PUSH2 0x3FBF SWAP2 ADD MLOAD PUSH2 0x417 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD SWAP1 SWAP4 SWAP1 SWAP3 PUSH1 0x80 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH32 0x0 AND DUP4 SUB PUSH2 0x4092 JUMPI POP PUSH2 0x4011 SWAP2 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x505C JUMP JUMPDEST PUSH2 0x401B DUP6 DUP5 PUSH2 0x53B4 JUMP JUMPDEST ADD MLOAD SWAP2 EXTCODESIZE ISZERO ISZERO DUP1 PUSH2 0x4088 JUMPI JUMPDEST PUSH2 0x4031 JUMPI POP POP POP POP JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x3D3 JUMPI PUSH2 0x405E SWAP4 PUSH0 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x3A5BE8CB PUSH1 0xE0 SHL DUP6 MSTORE CALLER SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x3DF8 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x2253 JUMPI PUSH2 0x4075 JUMPI JUMPDEST DUP1 DUP1 DUP1 PUSH2 0x3AD3 JUMP JUMPDEST DUP1 PUSH2 0x2247 PUSH2 0x4082 SWAP3 PUSH2 0x54A JUMP JUMPDEST PUSH0 PUSH2 0x406D JUMP JUMPDEST POP DUP2 MLOAD ISZERO ISZERO PUSH2 0x4027 JUMP JUMPDEST PUSH2 0x409D SWAP3 CALLER SWAP1 PUSH2 0x505C JUMP JUMPDEST PUSH2 0x401B JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x3FAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4793063 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH0 SWAP1 PUSH2 0x3E66 JUMP JUMPDEST SWAP1 PUSH0 DUP3 MLOAD PUSH2 0x120 DUP2 ADD PUSH2 0x40DA DUP2 MLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0xCBF SLOAD SWAP2 AND LT PUSH2 0x1CC9 JUMPI PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x2 PUSH2 0x40FA DUP3 PUSH2 0x1244 JUMP JUMPDEST SLOAD EQ PUSH2 0x40AA JUMPI PUSH2 0x4109 SWAP1 PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x2 SWAP1 SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x411B SWAP1 PUSH2 0x417 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x4129 SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP1 PUSH1 0xA0 DUP5 ADD MLOAD SWAP3 PUSH1 0xC0 DUP6 ADD MLOAD SWAP2 DUP9 PUSH1 0xA0 DUP2 ADD MLOAD SWAP4 DUP8 PUSH1 0xE0 DUP2 ADD MLOAD SWAP6 PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x4157 SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP6 MLOAD PUSH4 0xFFFFFFFF AND PUSH2 0x140 DUP4 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x4179 SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP2 DUP5 MLOAD PUSH2 0x4185 SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP4 PUSH1 0x20 DUP7 ADD MLOAD PUSH2 0x4194 SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP6 PUSH2 0x160 ADD MLOAD SWAP7 PUSH1 0x60 DUP10 ADD MLOAD PUSH2 0x41A9 SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP9 PUSH1 0x80 DUP2 ADD MLOAD SWAP1 PUSH1 0x40 ADD MLOAD SWAP1 PUSH2 0x41BD PUSH2 0x686 JUMP JUMPDEST SWAP11 PUSH2 0x41C8 SWAP1 DUP13 PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x20 DUP12 ADD MSTORE PUSH1 0x40 DUP11 ADD MSTORE PUSH1 0x2 PUSH1 0x60 DUP11 ADD MSTORE PUSH1 0x40 MLOAD SWAP14 PUSH4 0xFFFFFFFF DUP16 SWAP13 AND SWAP14 PUSH2 0x41F0 SWAP12 DUP14 PUSH2 0x3D6B JUMP JUMPDEST SUB PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5AC2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH0 SWAP5 LOG4 PUSH1 0x60 DUP5 ADD MLOAD PUSH2 0x4211 SWAP1 PUSH2 0x417 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP2 DUP6 DUP4 AND SWAP2 SWAP1 CALLER DUP4 EQ DUP1 PUSH2 0x433A JUMPI JUMPDEST PUSH2 0x4331 JUMPI PUSH1 0x80 PUSH2 0x423B SWAP2 ADD MLOAD PUSH2 0x417 JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP2 ADD MLOAD SWAP7 DUP8 DUP2 DUP5 AND SWAP2 PUSH32 0x0 AND DUP3 EQ PUSH0 EQ PUSH2 0x431A JUMPI SWAP1 PUSH1 0x80 SWAP3 SWAP2 DUP8 PUSH2 0x4306 JUMPI JUMPDEST PUSH2 0x4287 SWAP2 POP DUP6 PUSH2 0x53B4 JUMP JUMPDEST ADD MLOAD SWAP3 EXTCODESIZE ISZERO ISZERO DUP1 PUSH2 0x42FC JUMPI JUMPDEST PUSH2 0x42A0 JUMPI JUMPDEST POP POP POP POP SWAP1 POP JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x42F8 JUMPI DUP4 PUSH2 0x42CC SWAP6 SWAP7 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x3A5BE8CB PUSH1 0xE0 SHL DUP6 MSTORE CALLER SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x3DF8 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x2253 JUMPI PUSH2 0x42E5 JUMPI JUMPDEST DUP1 DUP1 DUP1 DUP5 SWAP4 PUSH2 0x4298 JUMP JUMPDEST DUP1 PUSH2 0x2247 PUSH2 0x42F2 SWAP3 PUSH2 0x54A JUMP JUMPDEST PUSH0 PUSH2 0x42DB JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP DUP3 MLOAD ISZERO ISZERO PUSH2 0x4293 JUMP JUMPDEST PUSH2 0x4313 SWAP2 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x505C JUMP JUMPDEST PUSH0 DUP9 PUSH2 0x427C JUMP JUMPDEST PUSH1 0x80 SWAP3 SWAP2 SWAP7 POP PUSH2 0x432C SWAP1 DUP7 PUSH0 SWAP9 PUSH2 0x5344 JUMP JUMPDEST PUSH2 0x4287 JUMP JUMPDEST POP POP POP POP POP SWAP1 POP JUMP JUMPDEST POP PUSH0 PUSH2 0x422A JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP1 PUSH2 0x120 DUP3 ADD SWAP1 PUSH2 0x435A DUP3 MLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0xCBF SLOAD SWAP2 AND LT PUSH2 0x1CC9 JUMPI PUSH1 0x20 DUP6 ADD MLOAD DUP5 ISZERO PUSH2 0x4563 JUMPI PUSH1 0x2 SWAP1 JUMPDEST PUSH1 0x2 PUSH2 0x4384 DUP3 PUSH2 0x1244 JUMP JUMPDEST SLOAD EQ PUSH2 0x40AA JUMPI PUSH2 0x4393 SWAP1 PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x2 SWAP1 SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH2 0x43A5 SWAP1 PUSH2 0x417 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MLOAD PUSH2 0x43B3 SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP3 PUSH1 0xA0 DUP7 ADD MLOAD SWAP2 DUP9 PUSH1 0xC0 DUP9 ADD MLOAD SWAP5 DUP9 PUSH1 0xA0 DUP4 ADD MLOAD SWAP7 PUSH1 0xE0 DUP3 ADD MLOAD SWAP8 PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x43E1 SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP11 MLOAD PUSH4 0xFFFFFFFF AND PUSH2 0x140 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x40 DUP6 ADD MLOAD PUSH2 0x4404 SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP3 DUP6 MLOAD PUSH2 0x4410 SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP5 PUSH1 0x20 DUP8 ADD MLOAD PUSH2 0x441F SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP7 PUSH2 0x160 ADD MLOAD SWAP8 PUSH1 0x60 DUP11 ADD MLOAD PUSH2 0x4434 SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP10 PUSH1 0x80 DUP2 ADD MLOAD SWAP1 PUSH1 0x40 ADD MLOAD SWAP1 PUSH2 0x4448 PUSH2 0x686 JUMP JUMPDEST SWAP12 PUSH2 0x4453 SWAP1 DUP14 PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x20 DUP13 ADD MSTORE PUSH1 0x40 DUP12 ADD MSTORE PUSH2 0x446A SWAP1 PUSH1 0x60 DUP12 ADD PUSH2 0x3D1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP12 AND SWAP15 PUSH4 0xFFFFFFFF AND SWAP14 SWAP11 SWAP12 DUP13 SWAP12 PUSH2 0x448E SWAP12 DUP14 PUSH2 0x3D6B JUMP JUMPDEST SUB PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5AC2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG4 PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x44AD SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 CALLER DUP3 EQ DUP1 PUSH2 0x455B JUMPI JUMPDEST PUSH2 0x4554 JUMPI PUSH2 0x44D4 PUSH1 0x80 DUP1 SWAP3 ADD MLOAD PUSH2 0x417 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD SWAP1 SWAP6 SWAP1 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP2 DUP8 SWAP2 DUP8 SWAP1 PUSH32 0x0 AND DUP5 SUB PUSH2 0x453B JUMPI POP ISZERO PUSH2 0x4527 JUMPI JUMPDEST PUSH2 0x401B SWAP2 POP DUP5 PUSH2 0x53B4 JUMP JUMPDEST PUSH2 0x4534 SWAP2 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x505C JUMP JUMPDEST PUSH0 DUP6 PUSH2 0x451C JUMP JUMPDEST SWAP1 PUSH2 0x454B JUMPI PUSH2 0x409D SWAP3 CALLER SWAP1 PUSH2 0x505C JUMP JUMPDEST PUSH2 0x409D SWAP3 PUSH2 0x5344 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x44C2 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x456E DUP3 PUSH2 0x1244 JUMP JUMPDEST SLOAD SUB PUSH2 0x457D JUMPI PUSH1 0x1 JUMPDEST SWAP1 PUSH2 0x4379 JUMP JUMPDEST PUSH0 PUSH2 0x4577 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x3D3 JUMPI MLOAD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x4599 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x80 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x2E PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH2 0x70C SWAP2 PUSH2 0x140 SWAP1 PUSH2 0x4652 DUP2 DUP5 MLOAD PUSH2 0x12AF JUMP JUMPDEST PUSH2 0x4664 PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x12AF JUMP JUMPDEST PUSH2 0x4676 PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x12AF JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x46A8 PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0xC0 DUP4 ADD SWAP1 PUSH1 0x7 SIGNEXTEND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP4 DUP2 ADD MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 DUP3 ADD MSTORE PUSH2 0x100 DUP4 DUP2 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP3 ADD MSTORE DUP2 PUSH2 0x120 DUP1 SWAP5 ADD MLOAD SWAP4 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1E2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D14 DUP2 PUSH2 0x3A29 PUSH1 0x20 DUP3 ADD SWAP5 PUSH1 0x20 DUP7 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x463F JUMP JUMPDEST ISZERO PUSH2 0x46FD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x696E76616C69642066656573 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4738 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x1C995B185E48199A5B1B1959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x7 SWAP2 DUP3 SIGNEXTEND SWAP2 SIGNEXTEND ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x3F SHL SUB NOT DUP3 SLT PUSH1 0x1 PUSH1 0x1 PUSH1 0x3F SHL SUB DUP4 SGT OR PUSH2 0x3118 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x4798 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x66696C6C20616D6F756E74207072652066656573206973203 PUSH1 0x3C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x47E0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7061796F757441646A7573746D656E7450637420746F6F20736D616C6C000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x482C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7061796F757441646A7573746D656E7450637420746F6F206C61726765000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP2 EQ PUSH2 0x3118 JUMPI PUSH0 SUB SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x4888 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH28 0x536F6D65686F7720686974206D6178546F6B656E73546F53656E6421 PUSH1 0x20 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x48D3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x34B73B30B634B2103932B830BCB6B2B73A1031B430B4B7 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x70C SWAP3 SWAP2 ADD SWAP1 PUSH2 0x1E2C JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 PUSH1 0x40 DUP2 ADD SWAP3 PUSH2 0x498B PUSH8 0x6F05B59D3B20000 DUP1 PUSH2 0x497D PUSH2 0x4978 PUSH2 0x4972 DUP10 MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST PUSH2 0x50A3 JUMP JUMPDEST LT SWAP1 DUP2 PUSH2 0x4CEA JUMPI JUMPDEST POP PUSH2 0x46F6 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x49AA PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 MLOAD GT ISZERO PUSH2 0x36E3 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x49C5 PUSH2 0x49BC DUP4 MLOAD PUSH2 0x1253 JUMP JUMPDEST SLOAD DUP3 MLOAD GT PUSH2 0x4731 JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD SWAP3 DUP4 MLOAD SWAP7 PUSH2 0x49F5 PUSH1 0xC0 DUP4 ADD SWAP9 PUSH2 0x49EF PUSH2 0x49E3 DUP12 MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST DUP5 MLOAD PUSH1 0x7 SIGNEXTEND JUMPDEST SWAP1 PUSH2 0x476C JUMP JUMPDEST SWAP1 PUSH2 0x5696 JUMP JUMPDEST SWAP8 PUSH2 0x4A01 DUP10 ISZERO ISZERO PUSH2 0x4791 JUMP JUMPDEST PUSH2 0x4A17 DUP5 MLOAD PUSH2 0x4A10 DUP8 MLOAD PUSH2 0x1253 JUMP JUMPDEST SLOAD SWAP1 PUSH2 0x310B JUMP JUMPDEST DUP10 DUP2 LT PUSH2 0x4CE0 JUMPI JUMPDEST POP PUSH2 0x4972 PUSH2 0x4A46 SWAP3 PUSH2 0x49E9 PUSH2 0x4A38 PUSH2 0x4A40 SWAP5 MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST SWAP2 MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST DUP9 PUSH2 0x52BD JUMP JUMPDEST SWAP4 PUSH2 0x120 DUP7 ADD DUP1 MLOAD DUP1 PUSH2 0x4C8B JUMPI JUMPDEST POP POP POP PUSH1 0xA0 DUP6 ADD MLOAD DUP8 DUP7 MLOAD SWAP2 PUSH1 0xA0 DUP4 ADD MLOAD EQ SWAP2 DUP3 ISZERO PUSH2 0x4C7D JUMPI JUMPDEST POP POP DUP1 ISZERO PUSH2 0x4C64 JUMPI JUMPDEST PUSH2 0x4A80 SWAP1 PUSH2 0x48CC JUMP JUMPDEST PUSH2 0x4A8A DUP4 MLOAD PUSH2 0x1253 JUMP JUMPDEST PUSH2 0x4A95 DUP9 DUP3 SLOAD PUSH2 0x311D JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x60 DUP6 ADD SWAP2 PUSH2 0x4AA6 DUP4 MLOAD PUSH2 0x417 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 CALLER DUP5 DUP7 AND EQ DUP1 PUSH2 0x4C4D JUMPI JUMPDEST PUSH2 0x4C43 JUMPI SWAP1 PUSH1 0x40 PUSH2 0x4B39 SWAP3 ADD SWAP5 DUP8 DUP6 PUSH2 0x4AD4 DUP9 MLOAD PUSH2 0x417 JUMP JUMPDEST AND SWAP2 PUSH32 0x0 DUP8 AND DUP4 SUB PUSH2 0x4BFA JUMPI POP POP POP PUSH2 0x4B13 PUSH2 0x2940 PUSH2 0x100 DUP11 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x4BDB JUMPI JUMPDEST PUSH2 0x4B33 DUP8 PUSH2 0x4B2E PUSH2 0x4B29 DUP5 MLOAD PUSH2 0x417 JUMP JUMPDEST PUSH2 0x417 JUMP JUMPDEST PUSH2 0x53B4 JUMP JUMPDEST MLOAD PUSH2 0x417 JUMP JUMPDEST SWAP2 DUP3 EXTCODESIZE ISZERO ISZERO DUP1 PUSH2 0x4BCD JUMPI JUMPDEST PUSH2 0x4B52 JUMPI JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4B64 PUSH2 0x4B6B SWAP2 PUSH1 0x80 SWAP5 AND SWAP5 MLOAD PUSH2 0x417 JUMP JUMPDEST SWAP5 MLOAD PUSH2 0x1253 JUMP JUMPDEST SLOAD SWAP1 MLOAD GT ISZERO SWAP5 ADD MLOAD SWAP4 DUP2 EXTCODESIZE ISZERO PUSH2 0x3D3 JUMPI PUSH0 DUP1 SWAP5 PUSH2 0x4BA0 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x1D43F27 PUSH1 0xE3 SHL DUP7 MSTORE CALLER SWAP3 PUSH1 0x4 DUP8 ADD PUSH2 0x4912 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x2253 JUMPI PUSH2 0x4BBA JUMPI JUMPDEST DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x4B49 JUMP JUMPDEST DUP1 PUSH2 0x2247 PUSH2 0x4BC7 SWAP3 PUSH2 0x54A JUMP JUMPDEST PUSH0 PUSH2 0x4BAF JUMP JUMPDEST POP PUSH1 0x80 DUP8 ADD MLOAD MLOAD ISZERO ISZERO PUSH2 0x4B44 JUMP JUMPDEST PUSH2 0x4BF5 DUP8 PUSH2 0x4BEC PUSH2 0x4B29 DUP9 MLOAD PUSH2 0x417 JUMP JUMPDEST ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x505C JUMP JUMPDEST PUSH2 0x4B18 JUMP JUMPDEST PUSH2 0x4C0B PUSH2 0x2940 PUSH2 0x100 DUP14 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x4C3A JUMPI POP PUSH2 0x4C35 SWAP2 POP PUSH2 0x4C23 PUSH2 0x4B29 DUP9 MLOAD PUSH2 0x417 JUMP JUMPDEST PUSH2 0x4C2D DUP5 MLOAD PUSH2 0x417 JUMP JUMPDEST SWAP1 CALLER SWAP1 PUSH2 0x505C JUMP JUMPDEST PUSH2 0x4B33 JUMP JUMPDEST PUSH2 0x4C35 SWAP3 PUSH2 0x5344 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST POP PUSH2 0x4C5F PUSH2 0x2940 PUSH2 0x100 DUP11 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x4ABB JUMP JUMPDEST POP PUSH2 0x4A80 PUSH2 0x4C76 PUSH2 0x100 DUP8 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x4A77 JUMP JUMPDEST PUSH1 0x60 ADD MLOAD EQ SWAP1 POP DUP8 PUSH0 PUSH2 0x4A6E JUMP JUMPDEST SWAP6 PUSH2 0x4CC8 PUSH2 0x4CCE SWAP3 PUSH2 0x4CAC PUSH2 0x4CD8 SWAP6 SWAP10 PUSH8 0xDE0B6B3A763FFFF NOT SGT ISZERO PUSH2 0x47D9 JUMP JUMPDEST PUSH2 0x4CC2 PUSH9 0x56BC75E2D63100000 DUP3 MLOAD SGT ISZERO PUSH2 0x4825 JUMP JUMPDEST MLOAD PUSH2 0x4871 JUMP JUMPDEST SWAP1 PUSH2 0x52BD JUMP JUMPDEST SWAP5 MLOAD DUP6 GT ISZERO PUSH2 0x4881 JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH2 0x4A54 JUMP JUMPDEST SWAP9 POP PUSH2 0x4972 PUSH2 0x4A1F JUMP JUMPDEST SWAP1 POP PUSH2 0x4D00 PUSH2 0x4978 PUSH2 0x4972 PUSH1 0xC0 DUP7 ADD MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST LT PUSH0 PUSH2 0x4985 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND DUP2 MSTORE PUSH1 0x80 DUP1 PUSH2 0x4D30 PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0xA0 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD SWAP1 PUSH2 0x1E2C JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x7 SIGNEXTEND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP11 SWAP8 SWAP4 PUSH2 0x70C SWAP13 SWAP11 SWAP6 SWAP2 SWAP8 SWAP4 PUSH2 0x4DBC SWAP11 SWAP8 SWAP4 PUSH1 0x20 DUP15 PUSH2 0x180 SWAP12 DUP2 MSTORE ADD MSTORE PUSH1 0x40 DUP14 ADD MSTORE PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x80 DUP12 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0xA0 DUP11 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP1 SWAP3 AND PUSH1 0xE0 DUP11 ADD MSTORE AND PUSH2 0x100 DUP9 ADD MSTORE AND PUSH2 0x120 DUP7 ADD MSTORE DUP1 PUSH2 0x140 DUP7 ADD MSTORE DUP5 ADD SWAP1 PUSH2 0x1E2C JUMP JUMPDEST SWAP2 PUSH2 0x160 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x4D07 JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x4DDB SWAP1 PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP2 ADD MLOAD PUSH2 0x4DEA SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP2 ADD MLOAD SWAP4 PUSH2 0x100 SWAP5 DUP6 DUP4 ADD MLOAD PUSH2 0x4E02 SWAP1 ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x120 SWAP3 DUP4 DUP6 ADD MLOAD SWAP3 PUSH2 0x4E13 PUSH2 0x693 JUMP JUMPDEST SWAP7 PUSH2 0x4E1E SWAP1 DUP9 PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0x40 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE DUP2 MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x4E4B SWAP1 PUSH2 0x1253 JUMP JUMPDEST SLOAD SWAP4 PUSH1 0xA0 DUP5 ADD MLOAD SWAP4 MLOAD SWAP5 PUSH1 0x80 DUP7 ADD MLOAD SWAP6 PUSH1 0xA0 DUP2 ADD MLOAD SWAP2 PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x4E70 SWAP1 PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0x7 SIGNEXTEND SWAP11 DUP4 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP11 PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x4E91 SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP2 DUP5 MLOAD PUSH2 0x4E9D SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP9 PUSH1 0x20 DUP7 ADD MLOAD PUSH2 0x4EAC SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP6 ADD MLOAD SWAP6 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB AND SWAP15 PUSH4 0xFFFFFFFF AND SWAP14 CALLER SWAP7 PUSH2 0x4ED4 SWAP12 DUP14 PUSH2 0x4D52 JUMP JUMPDEST SUB PUSH32 0x8AB9DC6C19FE88E69BC70221B339C84332752FDD49591B7C51E66BAE3947B73C SWAP2 LOG4 JUMP JUMPDEST SWAP4 SWAP3 PUSH2 0x4F63 SWAP4 PUSH2 0x441 SWAP8 SWAP7 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH4 0xFFFFFFFF PUSH1 0x20 DUP6 ADD SWAP6 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BA2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 MSTORE AND PUSH1 0x40 DUP6 ADD MSTORE DUP6 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 MSTORE PUSH2 0x4F5B DUP2 PUSH2 0x5E9 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x56E4 JUMP JUMPDEST SWAP1 PUSH2 0x5797 JUMP JUMPDEST SWAP4 SWAP3 PUSH2 0x4F63 SWAP4 PUSH2 0x441 SWAP8 SWAP7 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH4 0xFFFFFFFF PUSH1 0x20 DUP6 ADD SWAP6 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B82 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 MSTORE AND PUSH1 0x40 DUP6 ADD MSTORE DUP6 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 MSTORE PUSH2 0x4F5B DUP2 PUSH2 0x5E9 JUMP JUMPDEST PUSH2 0xC8C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x4FE2 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0xC8C DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B42 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x441 SWAP2 PUSH2 0x509E DUP3 PUSH2 0x598 JUMP JUMPDEST PUSH2 0x5867 JUMP JUMPDEST PUSH0 DUP2 SLT PUSH2 0x50AD JUMPI SWAP1 JUMP JUMPDEST PUSH0 SUB SWAP1 JUMP JUMPDEST PUSH2 0x441 PUSH1 0xFF PUSH0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x32CD JUMP JUMPDEST PUSH2 0x50D6 PUSH1 0xFF PUSH0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x1B1F DUP2 PUSH2 0x32CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x5125 JUMPI PUSH2 0x869 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH32 0xA9E8C42C9E7FCA7F62755189A16B2F5314D43D8FB24E91BA54E6D65F9314E849 PUSH0 DUP1 LOG2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x4261642062726964676520726F757465722061646472657373 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 PUSH2 0x2940 SWAP1 PUSH2 0x51E6 SWAP3 DUP5 MLOAD PUSH2 0x5179 PUSH2 0x3397 JUMP JUMPDEST PUSH2 0x3A37 PUSH2 0x51A6 PUSH1 0x40 DUP1 SWAP10 ADD MLOAD SWAP5 DUP10 MLOAD SWAP5 PUSH2 0x5192 DUP7 PUSH2 0x562 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 DUP5 MSTORE DUP10 DUP6 ADD SWAP6 DUP7 MSTORE PUSH2 0x2628 JUMP JUMPDEST POP SLOAD SWAP4 DUP9 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x51CB PUSH1 0x20 DUP5 ADD SWAP7 PUSH1 0x20 DUP9 MSTORE MLOAD PUSH1 0x60 DUP14 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD SWAP1 PUSH2 0x3C14 JUMP JUMPDEST SWAP2 MLOAD PUSH1 0x60 DUP5 ADD MSTORE MLOAD PUSH1 0x80 DUP4 ADD MSTORE SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x604 JUMP JUMPDEST PUSH2 0x51ED JUMPI POP JUMP JUMPDEST MLOAD PUSH4 0x582F497D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x120 SWAP1 SWAP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP1 SWAP5 SWAP3 SWAP4 DUP2 DUP7 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT DUP4 DUP4 LT OR PUSH2 0x55D JUMPI PUSH2 0x5277 SWAP6 PUSH2 0x523C SWAP3 DUP9 MSTORE DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP4 DUP5 MSTORE PUSH2 0x2628 JUMP JUMPDEST POP SLOAD SWAP2 PUSH2 0x3A37 DUP7 MLOAD DUP1 SWAP3 PUSH2 0x5262 PUSH1 0x20 DUP4 ADD SWAP6 PUSH1 0x20 DUP8 MSTORE MLOAD DUP11 DUP1 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x463F JUMP JUMPDEST SWAP1 MLOAD PUSH1 0x60 DUP4 ADD MSTORE SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x604 JUMP JUMPDEST ISZERO PUSH2 0x527F JUMPI POP JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x24B73B30B634B21039B637BB903932B630BC90383937B7B3 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH0 DUP3 DUP5 SUB SWAP3 SLT DUP4 DUP4 SLT DUP2 AND SWAP1 DUP5 DUP5 SGT SWAP1 ISZERO AND OR PUSH2 0x3118 JUMPI DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x3118 JUMPI DIV SWAP1 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP1 PUSH0 SWAP2 JUMPDEST DUP5 MLOAD DUP4 LT ISZERO PUSH2 0x533C JUMPI PUSH2 0x530D DUP4 DUP7 PUSH2 0x34B4 JUMP JUMPDEST MLOAD SWAP1 DUP2 DUP2 LT ISZERO PUSH2 0x532B JUMPI PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 JUMPDEST SWAP3 ADD SWAP2 PUSH2 0x52FA JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x5323 JUMP JUMPDEST SWAP2 POP SWAP3 POP EQ SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x441 SWAP2 PUSH2 0x509E DUP3 PUSH2 0x57D JUMP JUMPDEST SWAP1 PUSH32 0xB6E6AE61A8FA98A339088353BC7A76C8C580B2EFD09210A80BFCCABE05D9AE47 SWAP2 PUSH2 0x53AF PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x3A95 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x53F4 JUMPI SWAP1 PUSH2 0x441 SWAP3 SWAP2 PUSH32 0x0 AND PUSH2 0x5344 JUMP JUMPDEST PUSH32 0x0 AND DUP1 EXTCODESIZE ISZERO PUSH2 0x3D3 JUMPI PUSH0 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP4 MSTORE DUP9 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x2253 JUMPI PUSH2 0x5513 JUMPI JUMPDEST POP DUP2 SELFBALANCE LT PUSH2 0x54CE JUMPI PUSH0 DUP1 DUP1 SWAP4 DUP2 SWAP4 GAS CALL PUSH2 0x545E PUSH2 0x3416 JUMP JUMPDEST POP ISZERO PUSH2 0x5466 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH26 0x1958DA5C1A595B9D081B585E481A185D99481C995D995C9D1959 PUSH1 0x32 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x551C SWAP1 PUSH2 0x54A JUMP JUMPDEST PUSH0 PUSH2 0x5446 JUMP JUMPDEST SWAP1 PUSH2 0x552C DUP3 PUSH2 0x5607 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B62 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH0 DUP1 LOG2 DUP1 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x55C1 JUMPI JUMPDEST PUSH2 0x555A JUMPI POP POP JUMP JUMPDEST PUSH2 0x55BE SWAP2 PUSH0 DUP1 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x556D DUP6 PUSH2 0x562 JUMP JUMPDEST PUSH1 0x27 DUP6 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP7 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL PUSH2 0x55B8 PUSH2 0x3416 JUMP JUMPDEST SWAP2 PUSH2 0x597F JUMP JUMPDEST POP JUMP JUMPDEST POP PUSH0 PUSH2 0x5552 JUMP JUMPDEST SWAP1 PUSH2 0x55D2 DUP3 PUSH2 0x5607 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B62 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH0 DUP1 LOG2 DUP1 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x55FF JUMPI PUSH2 0x555A JUMPI POP POP JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x5552 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x563B JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP2 DUP2 DUP4 MUL SWAP2 DUP4 DUP4 DIV SUB PUSH2 0x3118 JUMPI PUSH1 0x7 SIGNEXTEND DUP1 DUP4 SUB SWAP3 PUSH0 DUP3 SLT DUP2 DUP6 SLT DUP2 AND SWAP1 DUP3 DUP7 SGT SWAP1 ISZERO AND OR PUSH2 0x3118 JUMPI EQ PUSH2 0x56D0 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x42 SWAP2 PUSH2 0x47F SLOAD SWAP1 PUSH2 0x480 SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 ADD SWAP4 PUSH32 0xC2F8787176B8AC6BF7215B4ADCC1E069BF4AB82D9AB1DF05A57A91D425935B6E DUP6 MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x80 DUP2 MSTORE PUSH2 0x5739 DUP2 PUSH2 0x598 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE KECCAK256 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x575E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x696E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH2 0x57A3 DUP3 DUP3 PUSH2 0x594E JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH1 0x5 DUP6 LT ISZERO PUSH2 0x2E43 JUMPI PUSH2 0x441 SWAP5 ISZERO SWAP4 DUP5 PUSH2 0x5851 JUMPI JUMPDEST POP DUP4 ISZERO PUSH2 0x57CB JUMPI JUMPDEST POP POP POP PUSH2 0x5757 JUMP JUMPDEST PUSH0 SWAP3 SWAP4 POP SWAP1 DUP3 SWAP2 PUSH1 0x40 MLOAD PUSH2 0x5803 DUP2 PUSH2 0x3A29 PUSH1 0x20 DUP3 ADD SWAP5 PUSH4 0xB135D3F PUSH1 0xE1 SHL SWAP10 DUP11 DUP8 MSTORE PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 DUP4 ADD SWAP1 PUSH2 0x1E2C JUMP JUMPDEST MLOAD SWAP2 GAS STATICCALL SWAP1 PUSH2 0x5810 PUSH2 0x3416 JUMP JUMPDEST DUP3 PUSH2 0x5843 JUMPI JUMPDEST DUP3 PUSH2 0x5826 JUMPI JUMPDEST POP POP PUSH0 DUP1 DUP1 PUSH2 0x57C3 JUMP JUMPDEST PUSH2 0x583B SWAP2 SWAP3 POP PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x4583 JUMP JUMPDEST EQ PUSH0 DUP1 PUSH2 0x581C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP3 MLOAD LT ISZERO SWAP2 PUSH2 0x5816 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ SWAP4 POP PUSH0 PUSH2 0x57BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58BE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5880 DUP3 PUSH2 0x5CE JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 SWAP6 DUP7 DUP6 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP8 DUP7 ADD MSTORE DUP7 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL PUSH2 0x55B8 PUSH2 0x3416 JUMP JUMPDEST DUP1 MLOAD DUP3 DUP2 ISZERO SWAP2 DUP3 ISZERO PUSH2 0x592E JUMPI JUMPDEST POP POP SWAP1 POP ISZERO PUSH2 0x58D7 JUMPI POP JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 DUP1 SWAP3 SWAP4 POP ADD SUB SLT PUSH2 0x3D3 JUMPI DUP2 ADD MLOAD PUSH2 0x5946 DUP2 PUSH2 0xB2E JUMP JUMPDEST DUP1 DUP3 PUSH0 PUSH2 0x58CB JUMP JUMPDEST SWAP1 PUSH1 0x41 DUP2 MLOAD EQ PUSH0 EQ PUSH2 0x5976 JUMPI PUSH2 0x3405 SWAP2 PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH0 BYTE SWAP1 PUSH2 0x5A10 JUMP JUMPDEST POP POP PUSH0 SWAP1 PUSH1 0x2 SWAP1 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x59E1 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x5993 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x599C JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x59F4 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH2 0xE51 SWAP1 PUSH1 0x4 DUP4 ADD PUSH2 0x34A3 JUMP JUMPDEST PUSH16 0xA2A8918CA85BAFE22016D0B997E4DF60 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 GT PUSH2 0x5A76 JUMPI PUSH1 0x20 SWAP4 PUSH0 SWAP4 PUSH1 0xFF PUSH1 0x80 SWAP5 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x2253 JUMPI PUSH0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x5A6E JUMPI SWAP1 PUSH0 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP POP PUSH0 SWAP1 PUSH1 0x3 SWAP1 JUMP INVALID LOG1 0x23 0xDC 0x29 0xAE 0xBF PUSH30 0xC3322C8EEB5B999E859F39937950ED31056532713D0DE396F4910FDFA16 INVALID 0xD3 0x26 0xE 0xD0 0xE7 EQ PUSH32 0x7CC6DA11A60208B5B9406D12A635614FFD9143571749EDF1D5C9599318CDBC4E 0x28 0xA6 SELFBALANCE 0x5D PUSH6 0xE87FD3B2DDBE 0x1E SWAP11 DUP14 0x5E PUSH27 0xF0FF746756E6374696F6E206D7573742062652063616C6C656420 PUSH21 0x68726F75676820360894A13BA1A3210667C828492D 0xB9 DUP14 0xCA RETURNDATACOPY KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCAFC4DF6845A4AB948B4928 STOP 0xD3 0xD8 LOG2 0x5D MSTORE8 DUP11 LT 0x2A 0x2B 0xC0 PUSH29 0xD01F1CFA097FDDCFF68BE0079C531659141344CD1FD0A4F28419497F97 0x22 LOG3 0xDA 0xAF 0xE3 0xB4 XOR PUSH16 0x6B6457E0BC7CD75A20EE27FD9ADEBAB3 KECCAK256 COINBASE 0xF7 SSTORE 0x21 0x4D 0xBC PUSH12 0xFFA90CC0225B39DA2E5C2D3B 0xE SDIV DUP16 SDIV 0xB7 EXTCODECOPY PUSH3 0xEE6832 SWAP14 0x2C PUSH8 0xC067AAAE9A06503C 0xC3 MOD CALLDATACOPY DUP14 EQ 0x4D 0xF ADD PUSH24 0x882B152EB71524AEF34D838AB76573C14B1EBFA5E385D9AB 0x29 0xD7 0xCF MSTORE8 SWAP9 0xDA LOG2 NUMBER DUP12 0xD9 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 0xE5 0x49 0x1F 0x22 0xAD 0xCF SWAP8 CODECOPY SLT MULMOD 0x4D 0xC 0xA5 0xBB SLT SWAP4 0xC5 DUP7 DUP6 0xC4 NOT LOG4 SWAP12 0xD6 COINBASE 0xB2 0xDE CALLDATALOAD 0xFC CREATE 0x4B PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"251:5569:32:-:0;;;;;;;;;;;;;-1:-1:-1;;251:5569:32;;;;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;251:5569:32;;;;;;;;1332:4:6;1324:13;;16333:63:27;;675:7:32;16406:48:27;;684:7:32;16464:40:27;;-1:-1:-1;251:5569:32;;;;;;;;;;;;6078:31:5;6074:139;;-1:-1:-1;251:5569:32;;;;;;;;1324:13:6;251:5569:32;;;;;;;;;;;;;;;16333:63:27;251:5569:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16406:48:27;251:5569:32;;;;;;;;;;;;;;;16464:40:27;251:5569:32;;;;;;;;;;;6074:139:5;251:5569:32;;;;;;-1:-1:-1;251:5569:32;6174:28:5;251:5569:32;;;;;;6174:28:5;6074:139;;;251:5569:32;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;;-1:-1:-1;251:5569:32;;;;;;-1:-1:-1;251:5569:32;;;;;-1:-1:-1;251:5569:32"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":969,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":1130,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_address_31334":{"entryPoint":1076,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_31335":{"entryPoint":1091,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_31336":{"entryPoint":1104,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_31381":{"entryPoint":1117,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_addresst_uint256t_uint256t_int64t_uint32t_bytest_uint256":{"entryPoint":2100,"id":null,"parameterSlots":1,"returnSlots":8},"abi_decode_array_address_dyn":{"entryPoint":2461,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_bytes32_dyn":{"entryPoint":1908,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_bytes_calldata_dyn_calldata":{"entryPoint":7643,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_uint256_dyn":{"entryPoint":2365,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_array_bytes32_dyn":{"entryPoint":1830,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":1723,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool":{"entryPoint":2872,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_bytes":{"entryPoint":1777,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes32_fromMemory":{"entryPoint":17795,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":4016,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_int64":{"entryPoint":1141,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_int64_31340":{"entryPoint":1157,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_int64_31364":{"entryPoint":1173,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_int64_31387":{"entryPoint":1190,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_int64_31388":{"entryPoint":1207,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_int64_31427":{"entryPoint":1224,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":13381,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_V3RelayData":{"entryPoint":8840,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_V3RelayData_calldata":{"entryPoint":3112,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint32":{"entryPoint":1323,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint32_31341":{"entryPoint":1254,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint32_31342":{"entryPoint":1267,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint32_31365":{"entryPoint":1281,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint32_31389":{"entryPoint":1295,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint32_31410":{"entryPoint":1309,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint32t_addresst_address":{"entryPoint":5543,"id":null,"parameterSlots":1,"returnSlots":3},"abi_encode_address":{"entryPoint":4783,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_address_uint256_uint256_uint256_uint32_uint32_address_address_address_bytes_struct_V3RelayExecutionEventInfo":{"entryPoint":15723,"id":null,"parameterSlots":13,"returnSlots":1},"abi_encode_address_address_uint256_uint256_uint32_uint32_address_address_address_bytes_calldata":{"entryPoint":13101,"id":null,"parameterSlots":12,"returnSlots":1},"abi_encode_address_address_uint256_uint256_uint32_uint32_rational_by_address_address_bytes":{"entryPoint":14257,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_address_address_uint256_uint256_uint32_uint32_uint32_address_address_bytes_calldata":{"entryPoint":12656,"id":null,"parameterSlots":12,"returnSlots":1},"abi_encode_address_uint256_address_bytes":{"entryPoint":15864,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_address_uint256_bool_address_bytes":{"entryPoint":18706,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":10843,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_bytes_dyn":{"entryPoint":7761,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":10792,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes":{"entryPoint":7724,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_bytes_calldata":{"entryPoint":13321,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_bytes_calldata_ptr":{"entryPoint":11527,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_int64":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string":{"entryPoint":13475,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral_8e8e":{"entryPoint":17904,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_struct_RelayData":{"entryPoint":17983,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_RelayExecutionInfo":{"entryPoint":19719,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_V3RelayData":{"entryPoint":15380,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_V3RelayExecutionEventInfo":{"entryPoint":15654,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_address":{"entryPoint":14997,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint256_array_uint256_dyn_address_array_address_dyn_address":{"entryPoint":10903,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_uint256_uint256_int64_uint32_address_address_bytes":{"entryPoint":13519,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_uint256_uint256_uint256_uint256_uint256_int64_int64_address_address_address_bytes_struct_RelayExecutionInfo":{"entryPoint":19794,"id":null,"parameterSlots":13,"returnSlots":1},"abi_encode_uint32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"access_calldata_tail_bytes_calldata":{"entryPoint":11053,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_and_zero_memory_array_array_bytes_dyn":{"entryPoint":13221,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":1683,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_31347":{"entryPoint":1575,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_31434":{"entryPoint":1606,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_31451":{"entryPoint":1638,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_31616":{"entryPoint":1670,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_bytes32_dyn":{"entryPoint":1807,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":1696,"id":null,"parameterSlots":1,"returnSlots":1},"calldata_array_index_access_bytes_calldata_dyn_calldata":{"entryPoint":13294,"id":null,"parameterSlots":3,"returnSlots":2},"checked_add_int64":{"entryPoint":18284,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256":{"entryPoint":12573,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":12555,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_address":{"entryPoint":1047,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_int64":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":7691,"id":null,"parameterSlots":3,"returnSlots":0},"external_fun_EMPTY_REPAYMENT_CHAIN_ID":{"entryPoint":2271,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_INFINITE_FILL_DEADLINE":{"entryPoint":9430,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_MAX_TRANSFER_SIZE":{"entryPoint":9498,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_SLOW_FILL_MAX_TOKENS_TO_SEND":{"entryPoint":8217,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_SpokePool_init":{"entryPoint":6807,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_UPDATE_DEPOSIT_DETAILS_HASH":{"entryPoint":7604,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_UPDATE_V3_DEPOSIT_DETAILS_HASH":{"entryPoint":3073,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_callback":{"entryPoint":9628,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_chainId":{"entryPoint":7531,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_crossDomainAdmin":{"entryPoint":4796,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_deposit":{"entryPoint":2211,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_depositFor":{"entryPoint":5031,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_depositForNow":{"entryPoint":10034,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_depositNow":{"entryPoint":8084,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_depositQuoteTimeBuffer":{"entryPoint":5178,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_depositV2":{"entryPoint":8521,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_depositV3":{"entryPoint":6229,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_distributeRelayerRefunds":{"entryPoint":6533,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_emergencyDeleteRootBundle":{"entryPoint":6646,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_enabledDepositRoutes":{"entryPoint":4706,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_executeRelayerRefundLeaf":{"entryPoint":2567,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_executeSlowRelayLeaf":{"entryPoint":1935,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_executeV3SlowRelayLeaf":{"entryPoint":8259,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_fillDeadlineBuffer":{"entryPoint":983,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_fillRelay":{"entryPoint":3737,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_fillRelayV3Internal":{"entryPoint":9063,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_fillRelayWithUpdatedDeposit":{"entryPoint":5242,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_fillStatuses":{"entryPoint":9257,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_fillV3Relay":{"entryPoint":3127,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_fillV3RelayWithUpdatedDeposit":{"entryPoint":9300,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getCurrentTime":{"entryPoint":3043,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_hubPool":{"entryPoint":9587,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_initialize":{"entryPoint":5593,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_multicall":{"entryPoint":7860,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_numberOfDeposits":{"entryPoint":7565,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":6766,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_pauseDeposits":{"entryPoint":5973,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_pauseFills":{"entryPoint":7405,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_pausedDeposits":{"entryPoint":5505,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_pausedFills":{"entryPoint":9460,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_proxiableUUID":{"entryPoint":4837,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_relayRootBundle":{"entryPoint":3886,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceOwnership":{"entryPoint":5900,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_requestV3SlowFill":{"entryPoint":6985,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_rootBundles":{"entryPoint":9801,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setChainId":{"entryPoint":9863,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setCrossDomainAdmin":{"entryPoint":9539,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setCurrentTime":{"entryPoint":2836,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setEnableRoute":{"entryPoint":2885,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setFillStatus":{"entryPoint":5447,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setHubPool":{"entryPoint":2783,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_speedUpDeposit":{"entryPoint":6398,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_speedUpV3Deposit":{"entryPoint":4061,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":9889,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_upgradeTo":{"entryPoint":3425,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_upgradeToAndCall":{"entryPoint":4347,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_verifyUpdateV3DepositMessage":{"entryPoint":6099,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_wrappedNativeToken":{"entryPoint":2297,"id":null,"parameterSlots":0,"returnSlots":0},"extract_from_storage_value_offsett_uint32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":13334,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":1540,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_31433":{"entryPoint":1354,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_31625":{"entryPoint":1378,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_49291":{"entryPoint":1405,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_49292":{"entryPoint":1432,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_49293":{"entryPoint":1459,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_49296":{"entryPoint":1486,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_49303":{"entryPoint":1513,"id":null,"parameterSlots":1,"returnSlots":0},"fun_abs":{"entryPoint":20643,"id":5707,"parameterSlots":1,"returnSlots":1},"fun_bridgeTokensToHubPool":{"entryPoint":21373,"id":9935,"parameterSlots":2,"returnSlots":0},"fun_callOptionalReturn":{"entryPoint":22631,"id":1326,"parameterSlots":2,"returnSlots":0},"fun_chainId":{"entryPoint":13207,"id":9959,"parameterSlots":0,"returnSlots":1},"fun_checkOwner":{"entryPoint":20429,"id":68,"parameterSlots":0,"returnSlots":0},"fun_computeAmountPostFees":{"entryPoint":21181,"id":8206,"parameterSlots":2,"returnSlots":1},"fun_computeAmountPreFees":{"entryPoint":22166,"id":8181,"parameterSlots":2,"returnSlots":1},"fun_deposit":{"entryPoint":14350,"id":7699,"parameterSlots":8,"returnSlots":0},"fun_distributeRelayerRefunds":{"entryPoint":15022,"id":7782,"parameterSlots":6,"returnSlots":0},"fun_emitFillRelay":{"entryPoint":19915,"id":8854,"parameterSlots":2,"returnSlots":0},"fun_fillRelay":{"entryPoint":18763,"id":8564,"parameterSlots":1,"returnSlots":1},"fun_fillRelayV3":{"entryPoint":17217,"id":8785,"parameterSlots":3,"returnSlots":0},"fun_fillRelayV3_31352":{"entryPoint":15909,"id":8785,"parameterSlots":2,"returnSlots":0},"fun_fillRelayV3_31430":{"entryPoint":16579,"id":8785,"parameterSlots":1,"returnSlots":0},"fun_getRelayHash":{"entryPoint":18137,"id":8223,"parameterSlots":1,"returnSlots":1},"fun_getV3RelayHash":{"entryPoint":15578,"id":8241,"parameterSlots":1,"returnSlots":1},"fun_hashTypedDataV4":{"entryPoint":22244,"id":10533,"parameterSlots":2,"returnSlots":1},"fun_initialize_inner":{"entryPoint":11848,"id":null,"parameterSlots":3,"returnSlots":0},"fun_nonReentrantAfter":{"entryPoint":null,"id":868,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":13848,"id":860,"parameterSlots":0,"returnSlots":0},"fun_preExecuteLeafHook":{"entryPoint":13934,"id":9921,"parameterSlots":1,"returnSlots":0},"fun_safeTransfer":{"entryPoint":21316,"id":1032,"parameterSlots":3,"returnSlots":0},"fun_safeTransferFrom":{"entryPoint":20572,"id":1059,"parameterSlots":4,"returnSlots":0},"fun_setClaimedLeaf":{"entryPoint":14912,"id":7969,"parameterSlots":2,"returnSlots":0},"fun_setCrossDomainAdmin":{"entryPoint":20701,"id":7899,"parameterSlots":1,"returnSlots":0},"fun_setHubPool":{"entryPoint":15248,"id":7923,"parameterSlots":1,"returnSlots":0},"fun_setImplementation":{"entryPoint":22023,"id":231,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership":{"entryPoint":20518,"id":125,"parameterSlots":1,"returnSlots":0},"fun_tryRecover":{"entryPoint":22862,"id":3844,"parameterSlots":2,"returnSlots":2},"fun_tryRecover_4012":{"entryPoint":23056,"id":4012,"parameterSlots":4,"returnSlots":2},"fun_unwrapwrappedNativeTokenTo":{"entryPoint":21428,"id":8282,"parameterSlots":2,"returnSlots":0},"fun_upgradeToAndCall":{"entryPoint":21794,"id":276,"parameterSlots":2,"returnSlots":0},"fun_upgradeToAndCall_49295":{"entryPoint":21960,"id":276,"parameterSlots":2,"returnSlots":0},"fun_verify":{"entryPoint":21235,"id":4134,"parameterSlots":3,"returnSlots":1},"fun_verifyCallResultFromTarget":{"entryPoint":22911,"id":1660,"parameterSlots":4,"returnSlots":1},"fun_verifyDepositorSignature":{"entryPoint":22423,"id":8080,"parameterSlots":3,"returnSlots":0},"fun_verifyRelayerRefund":{"entryPoint":14767,"id":5769,"parameterSlots":3,"returnSlots":1},"fun_verifySlowFill":{"entryPoint":20989,"id":8116,"parameterSlots":3,"returnSlots":0},"fun_verifyUpdateDepositMessage":{"entryPoint":20329,"id":8013,"parameterSlots":7,"returnSlots":0},"fun_verifyUpdateV3DepositMessage":{"entryPoint":20218,"id":8056,"parameterSlots":7,"returnSlots":0},"fun_verifyV3SlowFill":{"entryPoint":20838,"id":8154,"parameterSlots":3,"returnSlots":0},"increment_uint32":{"entryPoint":12597,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_mapping_uint256_bool_of_address":{"entryPoint":4650,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_bool_of_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_uint256_bool_of_uint256_31420":{"entryPoint":4676,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_bool_of_uint256_31618":{"entryPoint":4691,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_bytes_dyn":{"entryPoint":13492,"id":null,"parameterSlots":2,"returnSlots":1},"modifier_nonReentrant":{"entryPoint":12760,"id":845,"parameterSlots":6,"returnSlots":0},"modifier_nonReentrant_6767":{"entryPoint":11915,"id":845,"parameterSlots":13,"returnSlots":0},"modifier_nonReentrant_6975":{"entryPoint":11274,"id":845,"parameterSlots":12,"returnSlots":0},"modifier_nonReentrant_7069":{"entryPoint":11559,"id":845,"parameterSlots":16,"returnSlots":0},"modifier_nonReentrant_7209":{"entryPoint":13591,"id":845,"parameterSlots":8,"returnSlots":0},"modifier_nonReentrant_7382":{"entryPoint":10147,"id":845,"parameterSlots":12,"returnSlots":0},"modifier_nonReentrant_7475":{"entryPoint":10486,"id":845,"parameterSlots":3,"returnSlots":0},"modifier_onlyInitializing":{"entryPoint":20674,"id":610,"parameterSlots":0,"returnSlots":0},"modifier_onlyInitializing_680":{"entryPoint":20658,"id":610,"parameterSlots":0,"returnSlots":0},"negate_int256":{"entryPoint":18545,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":12535,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":11813,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":9748,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1334,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_calldatat_address":{"entryPoint":11043,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_uint32":{"entryPoint":11033,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper":{"entryPoint":13512,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral":{"entryPoint":14051,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_12a1":{"entryPoint":22359,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_365e":{"entryPoint":18393,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_36e1":{"entryPoint":11118,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_42de":{"entryPoint":18321,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_4877":{"entryPoint":10974,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_52f1":{"entryPoint":11196,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_76b6":{"entryPoint":17810,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_7740":{"entryPoint":14114,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_7816":{"entryPoint":18561,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_783e":{"entryPoint":18225,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_9339":{"entryPoint":13990,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_97c8":{"entryPoint":18166,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d688":{"entryPoint":13005,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d8a4":{"entryPoint":12939,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d990":{"entryPoint":18636,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_db49":{"entryPoint":10424,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_f00d":{"entryPoint":18469,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_f307":{"entryPoint":14183,"id":null,"parameterSlots":1,"returnSlots":0},"revert_forward":{"entryPoint":12586,"id":null,"parameterSlots":0,"returnSlots":0},"storage_array_index_access_struct_RootBundle__dyn":{"entryPoint":9768,"id":null,"parameterSlots":1,"returnSlots":2},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offsett_bool_to_bool_31394":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_31424":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_31615":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint32_to_uint32":{"entryPoint":12618,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint8_to_uint8":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"validator_assert_enum_FillType":{"entryPoint":11833,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_address":{"entryPoint":1059,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":2862,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint32":{"entryPoint":1240,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_address":{"entryPoint":11103,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_bool_31454":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_enum_FillType":{"entryPoint":15642,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_enum_FillType_49300":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_int64":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"696":[{"length":32,"start":3464},{"length":32,"start":4412},{"length":32,"start":4855}],"6055":[{"length":32,"start":2318},{"length":32,"start":8596},{"length":32,"start":12118},{"length":32,"start":14538},{"length":32,"start":16349},{"length":32,"start":16969},{"length":32,"start":17647},{"length":32,"start":19160},{"length":32,"start":21455},{"length":32,"start":21494}],"6058":[{"length":32,"start":5206},{"length":32,"start":12027},{"length":32,"start":14462}],"6061":[{"length":32,"start":1011},{"length":32,"start":12452}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1A JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x18 JUMPI PUSH0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BD2C7 EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0xC2097F7 EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0x1186EC33 EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x15348E44 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x17FCB39B EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0x1B3D5559 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x1DFB2D02 EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0x22F8E566 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0x272751C7 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x29CB924D EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0x2CFC26C5 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0x2E378115 EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x44B8BE68 EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x493A4F84 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x4E0FB8F5 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x5249FEF1 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x5285E058 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x541F4F14 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x57F6DCB8 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x5CEAEC32 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x5DD36F9C EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x6068D6CB EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x647C576C EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x6BBBCD2E EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x738B62E5 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x74DFA43D EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x7B939232 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x7E688BBA EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x87C3932D EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x8A7860CE EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x979F2BC2 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x9963E5A8 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x99CC2968 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x9A8A0592 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0xA1244C67 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0xA78E4B60 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xAC9650D8 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xAE527FBB EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xB5E1BF5F EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0xBBCA7DB0 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0xBDCB53A5 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xBF40F25B EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xC35C83FC EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xCCFA5971 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xCEB4C987 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xDDA52113 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xDDD224F1 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xDE7EBA78 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xE1904402 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xE98A5654 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xEE2A53F8 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xEF0E2FF4 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2AC JUMPI PUSH4 0xFD7C1054 SUB PUSH2 0xE JUMPI PUSH2 0x2732 JUMP JUMPDEST PUSH2 0x26A1 JUMP JUMPDEST PUSH2 0x2687 JUMP JUMPDEST PUSH2 0x2649 JUMP JUMPDEST PUSH2 0x259C JUMP JUMPDEST PUSH2 0x2573 JUMP JUMPDEST PUSH2 0x2543 JUMP JUMPDEST PUSH2 0x251A JUMP JUMPDEST PUSH2 0x24F4 JUMP JUMPDEST PUSH2 0x24D6 JUMP JUMPDEST PUSH2 0x2454 JUMP JUMPDEST PUSH2 0x2429 JUMP JUMPDEST PUSH2 0x2367 JUMP JUMPDEST PUSH2 0x2149 JUMP JUMPDEST PUSH2 0x2043 JUMP JUMPDEST PUSH2 0x2019 JUMP JUMPDEST PUSH2 0x1F94 JUMP JUMPDEST PUSH2 0x1EB4 JUMP JUMPDEST PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0x1D8D JUMP JUMPDEST PUSH2 0x1D6B JUMP JUMPDEST PUSH2 0x1CED JUMP JUMPDEST PUSH2 0x1B49 JUMP JUMPDEST PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x1A6E JUMP JUMPDEST PUSH2 0x19F6 JUMP JUMPDEST PUSH2 0x1985 JUMP JUMPDEST PUSH2 0x18FE JUMP JUMPDEST PUSH2 0x1855 JUMP JUMPDEST PUSH2 0x17D3 JUMP JUMPDEST PUSH2 0x1755 JUMP JUMPDEST PUSH2 0x170C JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST PUSH2 0x15D9 JUMP JUMPDEST PUSH2 0x1581 JUMP JUMPDEST PUSH2 0x1547 JUMP JUMPDEST PUSH2 0x147A JUMP JUMPDEST PUSH2 0x143A JUMP JUMPDEST PUSH2 0x13A7 JUMP JUMPDEST PUSH2 0x12E5 JUMP JUMPDEST PUSH2 0x12BC JUMP JUMPDEST PUSH2 0x1262 JUMP JUMPDEST PUSH2 0x10FB JUMP JUMPDEST PUSH2 0xFDD JUMP JUMPDEST PUSH2 0xF2E JUMP JUMPDEST PUSH2 0xE99 JUMP JUMPDEST PUSH2 0xD61 JUMP JUMPDEST PUSH2 0xC37 JUMP JUMPDEST PUSH2 0xC01 JUMP JUMPDEST PUSH2 0xBE3 JUMP JUMPDEST PUSH2 0xB45 JUMP JUMPDEST PUSH2 0xB14 JUMP JUMPDEST PUSH2 0xADF JUMP JUMPDEST PUSH2 0xA07 JUMP JUMPDEST PUSH2 0x8F9 JUMP JUMPDEST PUSH2 0x8A3 JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST PUSH0 SWAP2 SUB SLT PUSH2 0x3D3 JUMPI JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x3D3 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x441 DUP3 PUSH2 0x423 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x441 DUP3 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x441 DUP3 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH2 0x441 DUP3 PUSH2 0x423 JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0x441 DUP3 PUSH2 0x423 JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP3 SUB PUSH2 0x3D3 JUMPI JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP3 SUB PUSH2 0x3D3 JUMPI JUMP JUMPDEST PUSH2 0x104 CALLDATALOAD SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP3 SUB PUSH2 0x3D3 JUMPI JUMP JUMPDEST PUSH2 0x124 CALLDATALOAD SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP3 SUB PUSH2 0x3D3 JUMPI JUMP JUMPDEST PUSH2 0x144 CALLDATALOAD SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP3 SUB PUSH2 0x3D3 JUMPI JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP3 SUB PUSH2 0x3D3 JUMPI JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND SUB PUSH2 0x3D3 JUMPI JUMP JUMPDEST PUSH1 0xE4 CALLDATALOAD SWAP1 PUSH2 0x441 DUP3 PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0x104 CALLDATALOAD SWAP1 PUSH2 0x441 DUP3 PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0x124 CALLDATALOAD SWAP1 PUSH2 0x441 DUP3 PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0x164 CALLDATALOAD SWAP1 PUSH2 0x441 DUP3 PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0x144 CALLDATALOAD SWAP1 PUSH2 0x441 DUP3 PUSH2 0x4D8 JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0x441 DUP3 PUSH2 0x4D8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x55D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x536 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x55D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x55D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x55D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x55D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x55D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x55D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x55D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xC0 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x55D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x180 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x55D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x140 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x55D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x441 DUP3 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x441 DUP3 PUSH2 0x598 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x55D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x6C7 DUP3 PUSH2 0x6A0 JUMP JUMPDEST SWAP2 PUSH2 0x6D5 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x604 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x3D3 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x3D3 JUMPI DUP2 PUSH1 0x20 PUSH2 0x70C SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x6BB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x55D JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 PUSH2 0x731 DUP3 PUSH2 0x70F JUMP JUMPDEST SWAP2 PUSH2 0x73F PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x604 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 SWAP5 ADD SWAP2 PUSH1 0x5 SHL DUP2 ADD SWAP3 DUP4 GT PUSH2 0x3D3 JUMPI SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x765 JUMPI POP POP POP POP JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x758 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x3D3 JUMPI DUP2 PUSH1 0x20 PUSH2 0x70C SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x726 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH2 0x180 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x7AD DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x7B5 PUSH2 0x443 JUMP JUMPDEST SWAP1 PUSH2 0x7BE PUSH2 0x450 JUMP JUMPDEST PUSH2 0x7C6 PUSH2 0x475 JUMP JUMPDEST SWAP3 PUSH2 0x7CF PUSH2 0x485 JUMP JUMPDEST PUSH2 0x7D7 PUSH2 0x4E6 JUMP JUMPDEST PUSH2 0x7DF PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP7 SWAP1 SWAP3 SWAP1 PUSH2 0x124 CALLDATALOAD DUP9 DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x804 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP5 PUSH2 0x164 CALLDATALOAD SWAP9 DUP10 GT PUSH2 0x3D3 JUMPI PUSH2 0x821 PUSH2 0x18 SWAP10 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x774 JUMP JUMPDEST SWAP8 PUSH2 0x144 CALLDATALOAD SWAP8 PUSH1 0x84 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH2 0x27A3 JUMP JUMPDEST PUSH2 0x100 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x84D DUP2 PUSH2 0x423 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD PUSH2 0x85A DUP2 PUSH2 0x423 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x84 CALLDATALOAD DUP1 PUSH1 0x7 SIGNEXTEND DUP2 SUB PUSH2 0x3D3 JUMPI SWAP2 PUSH1 0xA4 CALLDATALOAD PUSH2 0x87D DUP2 PUSH2 0x4D8 JUMP JUMPDEST SWAP2 PUSH1 0xC4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3D3 JUMPI PUSH2 0x89C SWAP2 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP1 PUSH1 0xE4 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH2 0x8D8 PUSH2 0x8AF CALLDATASIZE PUSH2 0x834 JUMP JUMPDEST POP SWAP6 PUSH2 0x8BF SWAP6 SWAP2 SWAP6 SWAP5 SWAP3 SWAP5 PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x8D2 PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE8 SHR AND ISZERO PUSH2 0x28B8 JUMP JUMPDEST CALLER PUSH2 0x380E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x20 SWAP1 DUP3 CALLDATALOAD PUSH2 0x957 DUP2 PUSH2 0x70F JUMP JUMPDEST SWAP4 PUSH2 0x965 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x604 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x3D3 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x98E JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x980 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x20 SWAP1 DUP3 CALLDATALOAD PUSH2 0x9B7 DUP2 PUSH2 0x70F JUMP JUMPDEST SWAP4 PUSH2 0x9C5 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x604 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x3D3 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x9EE JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 DUP1 SWAP2 DUP4 CALLDATALOAD PUSH2 0x9FC DUP2 PUSH2 0x423 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x9E0 JUMP JUMPDEST PUSH1 0x3 NOT PUSH1 0x60 CALLDATASIZE DUP3 ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xA20 DUP2 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP4 DUP3 GT PUSH2 0x3D3 JUMPI PUSH1 0xC0 SWAP1 DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x3D3 JUMPI PUSH2 0xA48 PUSH2 0x627 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x4 ADD CALLDATALOAD DUP3 MSTORE PUSH1 0x24 DUP2 ADD CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x44 DUP2 ADD CALLDATALOAD DUP5 DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0xA76 SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP5 ADD ADD PUSH2 0x93D JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0xA87 PUSH1 0x64 DUP3 ADD PUSH2 0x52B JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0xA98 PUSH1 0x84 DUP3 ADD PUSH2 0x46A JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA4 DUP2 ADD CALLDATALOAD SWAP1 DUP5 DUP3 GT PUSH2 0x3D3 JUMPI PUSH1 0x4 PUSH2 0xAB9 SWAP3 CALLDATASIZE SWAP3 ADD ADD PUSH2 0x99D JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD SWAP3 DUP4 GT PUSH2 0x3D3 JUMPI PUSH2 0xAD9 PUSH2 0x18 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x774 JUMP JUMPDEST SWAP2 PUSH2 0x28F6 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH2 0x8D8 PUSH1 0x4 CALLDATALOAD PUSH2 0xAFF DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH2 0xB07 PUSH2 0x4FCD JUMP JUMPDEST PUSH2 0xB0F PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x3B90 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xCBF SSTORE STOP JUMPDEST DUP1 ISZERO ISZERO SUB PUSH2 0x3D3 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x441 DUP3 PUSH2 0xB2E JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xB62 DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH32 0xA21FDD43D0AD0C62689EE7230A47309A050755BCC52EBA00310ADD65297692A PUSH1 0x20 PUSH1 0x44 CALLDATALOAD SWAP3 PUSH2 0xB96 DUP5 PUSH2 0xB2E JUMP JUMPDEST PUSH2 0xB9E PUSH2 0x4FCD JUMP JUMPDEST PUSH2 0xBA6 PUSH2 0x3618 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 PUSH0 MSTORE PUSH2 0x86D DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP6 PUSH0 MSTORE DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 ISZERO ISZERO SWAP1 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x20 PUSH2 0xCBF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BA2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST SWAP1 DUP2 PUSH2 0x180 SWAP2 SUB SLT PUSH2 0x3D3 JUMPI SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0xC67 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC28 JUMP JUMPDEST PUSH2 0xC6F PUSH2 0x3618 JUMP JUMPDEST PUSH2 0xC82 PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE0 SHR AND ISZERO PUSH2 0x2ADE JUMP JUMPDEST PUSH2 0xC8F PUSH2 0x140 DUP3 ADD PUSH2 0x2B19 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0xCBF SLOAD SWAP2 AND LT ISZERO DUP1 PUSH2 0xD43 JUMPI JUMPDEST PUSH2 0xD31 JUMPI PUSH2 0xD27 SWAP1 PUSH2 0xD13 PUSH2 0xCBF PUSH2 0xCBA CALLDATASIZE DUP5 PUSH2 0x2288 JUMP JUMPDEST PUSH2 0x3CDA JUMP JUMPDEST SWAP2 PUSH1 0xC0 PUSH2 0xD0C PUSH2 0xCD1 PUSH1 0x20 DUP5 ADD PUSH2 0x2B23 JUMP JUMPDEST PUSH2 0xCDF PUSH2 0x160 DUP6 ADD DUP6 PUSH2 0x2B2D JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH2 0xCEA PUSH2 0x627 JUMP JUMPDEST SWAP8 PUSH2 0xCF5 CALLDATASIZE DUP4 PUSH2 0x2288 JUMP JUMPDEST DUP10 MSTORE PUSH1 0x20 DUP10 ADD MSTORE ADD CALLDATALOAD PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD PUSH2 0x2B5F JUMP JUMPDEST CALLDATASIZE SWAP2 PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE CALLER SWAP1 PUSH2 0x3E25 JUMP JUMPDEST PUSH2 0x18 PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC3A9B9D PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH2 0xD50 PUSH1 0x40 DUP3 ADD PUSH2 0x2B23 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0xCA2 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xD7E DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP2 SWAP1 PUSH2 0xDB7 ADDRESS DUP5 EQ ISZERO PUSH2 0x2B6E JUMP JUMPDEST PUSH2 0xDD3 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 DUP3 DUP6 SLOAD AND EQ PUSH2 0x2BBC JUMP JUMPDEST PUSH2 0xDDB PUSH2 0x4FCD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0xDE8 DUP3 PUSH2 0x5B3 JUMP JUMPDEST PUSH0 DUP3 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5AA2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE0E JUMPI POP POP PUSH2 0x18 SWAP2 POP PUSH2 0x5607 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH1 0x40 SWAP5 SWAP4 SWAP5 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP3 MSTORE DUP7 AND GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0xE68 JUMPI JUMPDEST POP PUSH2 0xE55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xE51 PUSH1 0x4 DUP3 ADD PUSH2 0x45F0 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x18 SWAP4 PUSH2 0xE63 SWAP2 EQ PUSH2 0x4592 JUMP JUMPDEST PUSH2 0x5522 JUMP JUMPDEST PUSH2 0xE8B SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xE92 JUMPI JUMPDEST PUSH2 0xE83 DUP2 DUP4 PUSH2 0x604 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x4583 JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0xE33 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xE79 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH2 0x180 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xEB7 DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0xEC3 DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH2 0xECF DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0xE4 CALLDATALOAD DUP1 PUSH1 0x7 SIGNEXTEND DUP2 SUB PUSH2 0x3D3 JUMPI PUSH2 0xEE4 PUSH2 0x495 JUMP JUMPDEST PUSH2 0xEEC PUSH2 0x501 JUMP JUMPDEST PUSH2 0x144 CALLDATALOAD SWAP6 SWAP1 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 GT PUSH2 0x3D3 JUMPI PUSH2 0xF13 PUSH2 0x18 SWAP8 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP5 PUSH2 0x164 CALLDATALOAD SWAP7 PUSH1 0xC4 CALLDATALOAD SWAP3 PUSH1 0xA4 CALLDATALOAD SWAP3 PUSH1 0x84 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH2 0x2C0A JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0xF4D PUSH2 0x4FCD JUMP JUMPDEST PUSH2 0xF55 PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x86C DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x55D JUMPI PUSH4 0xFFFFFFFF SWAP2 PUSH1 0x1 DUP3 ADD SWAP1 SSTORE DUP4 PUSH2 0xF7C DUP3 PUSH2 0x2628 JUMP JUMPDEST POP DUP5 PUSH1 0x1 DUP3 ADD SSTORE SSTORE AND PUSH32 0xC86BA04C55BC5EB2F2876B91C438849A296DBEC7B08751C3074D92E04F0A77AF PUSH0 DUP1 LOG4 PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x3D3 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x3D3 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x3D3 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xFFA DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1007 DUP3 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH2 0x1016 DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 PUSH1 0x84 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x1037 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xFB0 JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH1 0xA4 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x3D3 JUMPI PUSH2 0x10DF PUSH4 0xFFFFFFFF PUSH32 0xB0A29AED3D389A1041194255878B423F7780BE3ED2324D4693508C6FF189845E SWAP7 PUSH2 0x107F PUSH2 0x10F1 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xFB0 JUMP JUMPDEST SWAP4 SWAP1 SWAP10 PUSH2 0x108A PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x10B7 DUP13 DUP13 DUP12 DUP12 PUSH2 0x1099 PUSH2 0x3397 JUMP JUMPDEST PUSH2 0x10B0 PUSH2 0x10A7 CALLDATASIZE DUP12 DUP11 PUSH2 0x6BB JUMP JUMPDEST SWAP5 DUP13 CALLDATASIZE SWAP2 PUSH2 0x6BB JUMP JUMPDEST SWAP5 DUP13 PUSH2 0x4EFA JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 DUP12 MSTORE AND PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP11 ADD MSTORE PUSH1 0x80 DUP10 ADD SWAP2 PUSH2 0x2D07 JUMP JUMPDEST SWAP4 DUP7 DUP6 SUB PUSH1 0x60 DUP9 ADD MSTORE AND SWAP9 AND SWAP7 PUSH2 0x2D07 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1113 DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x1132 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP3 SWAP2 SWAP1 PUSH2 0x116C ADDRESS DUP6 EQ ISZERO PUSH2 0x2B6E JUMP JUMPDEST PUSH2 0x1188 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 DUP3 DUP7 SLOAD AND EQ PUSH2 0x2BBC JUMP JUMPDEST PUSH2 0x1190 PUSH2 0x4FCD JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5AA2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11B3 JUMPI POP POP PUSH2 0x18 SWAP2 POP PUSH2 0x5607 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH1 0x40 SWAP5 SWAP4 SWAP5 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP3 MSTORE DUP7 AND GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0x1209 JUMPI JUMPDEST POP PUSH2 0x11F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xE51 PUSH1 0x4 DUP3 ADD PUSH2 0x45F0 JUMP JUMPDEST PUSH2 0x18 SWAP4 PUSH2 0x1204 SWAP2 EQ PUSH2 0x4592 JUMP JUMPDEST PUSH2 0x55C8 JUMP JUMPDEST PUSH2 0x1223 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xE92 JUMPI PUSH2 0xE83 DUP2 DUP4 PUSH2 0x604 JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH2 0x86D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH0 MSTORE PUSH2 0x872 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH0 MSTORE PUSH2 0x86E PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x127F DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH2 0x86D PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x24 CALLDATALOAD PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH2 0x869 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x1341 JUMPI PUSH1 0x40 MLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x1B1959081D1A1C9BDD59DA0819195B1959D85D1958D85B1B PUSH1 0x42 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x120 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x13C0 DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x13CC DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x13D9 DUP3 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x13E1 PUSH2 0x475 JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD SWAP2 PUSH2 0x13EE DUP4 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0xE4 CALLDATALOAD SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 GT PUSH2 0x3D3 JUMPI PUSH2 0x1411 PUSH2 0x8D8 SWAP7 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP5 PUSH2 0x141A PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x142D PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE8 SHR AND ISZERO PUSH2 0x28B8 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH2 0x380E JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH2 0x200 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH2 0x1494 PUSH2 0x434 JUMP JUMPDEST PUSH2 0x149C PUSH2 0x443 JUMP JUMPDEST SWAP1 PUSH2 0x14A5 PUSH2 0x450 JUMP JUMPDEST SWAP2 PUSH2 0x14AE PUSH2 0x45D JUMP JUMPDEST SWAP3 PUSH2 0x14B7 PUSH2 0x495 JUMP JUMPDEST SWAP4 PUSH2 0x14C0 PUSH2 0x4A6 JUMP JUMPDEST PUSH2 0x14C8 PUSH2 0x4B7 JUMP JUMPDEST PUSH2 0x14D0 PUSH2 0x50F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP8 SWAP1 SWAP3 SWAP1 PUSH2 0x184 CALLDATALOAD DUP10 DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x14F5 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP5 PUSH2 0x1A4 CALLDATALOAD DUP11 DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x150F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP7 PUSH2 0x1C4 CALLDATALOAD SWAP11 DUP12 GT PUSH2 0x3D3 JUMPI PUSH2 0x152C PUSH2 0x18 SWAP12 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP9 PUSH2 0x1E4 CALLDATALOAD SWAP11 PUSH1 0xE4 CALLDATALOAD SWAP4 PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH1 0x84 CALLDATALOAD SWAP4 PUSH2 0x2D27 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x3D3 JUMPI PUSH2 0x156D DUP2 PUSH2 0x2E39 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH2 0x872 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE8 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x15BF DUP2 PUSH2 0x4D8 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH2 0x15CC DUP2 PUSH2 0x423 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH2 0x70C DUP2 PUSH2 0x423 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH2 0x15E7 CALLDATASIZE PUSH2 0x15A7 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x8 DUP2 SWAP1 SHR PUSH1 0xFF AND ISZERO SWAP4 SWAP3 SWAP1 DUP5 SWAP1 DUP2 PUSH2 0x16FE JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x16DE JUMPI JUMPDEST POP ISZERO PUSH2 0x1682 JUMPI PUSH2 0x1628 SWAP3 DUP5 PUSH2 0x161F PUSH1 0x1 PUSH1 0xFF NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x166B JUMPI PUSH2 0x2E48 JUMP JUMPDEST PUSH2 0x162E JUMPI STOP JUMPDEST PUSH2 0x163C PUSH2 0xFF00 NOT PUSH0 SLOAD AND PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 SWAP1 LOG1 STOP JUMPDEST PUSH2 0x167D PUSH2 0x100 PUSH2 0xFF00 NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x2E48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP DUP2 PUSH2 0x16F0 JUMPI JUMPDEST POP PUSH0 PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP PUSH1 0xFF AND EQ PUSH0 PUSH2 0x16E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF DUP3 AND LT SWAP2 POP PUSH2 0x15FD JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH2 0x1724 PUSH2 0x4FCD JUMP JUMPDEST PUSH2 0xC8C DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B42 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH32 0xE88463C2F254E2B070013A2DC7EE1E099F9BC00534CBDF03AF551DC26AE49219 PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x1795 DUP2 PUSH2 0xB2E JUMP JUMPDEST PUSH2 0x179D PUSH2 0x4FCD JUMP JUMPDEST PUSH2 0x17A5 PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x86B DUP1 SLOAD PUSH1 0xFF PUSH1 0xE8 SHL NOT AND SWAP2 ISZERO ISZERO PUSH1 0xE8 DUP2 SWAP1 SHL PUSH1 0xFF PUSH1 0xE8 SHL AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x17F0 DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x17FD DUP3 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP2 PUSH2 0x180A DUP4 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 PUSH1 0xA4 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x182B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP2 PUSH1 0xC4 CALLDATALOAD SWAP5 DUP6 GT PUSH2 0x3D3 JUMPI PUSH2 0x1847 PUSH2 0x18 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP4 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x4EFA JUMP JUMPDEST PUSH2 0x180 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x186E DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x187B DUP3 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH2 0x1887 DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH2 0x1894 DUP3 PUSH2 0x423 JUMP JUMPDEST PUSH1 0xE4 CALLDATALOAD PUSH2 0x18A0 DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x104 CALLDATALOAD PUSH2 0x18AD DUP2 PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0x124 CALLDATALOAD SWAP2 PUSH2 0x18BB DUP4 PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0x18C3 PUSH2 0x51D JUMP JUMPDEST PUSH2 0x164 CALLDATALOAD SWAP8 SWAP1 SWAP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP10 GT PUSH2 0x3D3 JUMPI PUSH2 0x18EA PUSH2 0x18 SWAP10 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xFB0 JUMP JUMPDEST SWAP9 SWAP1 SWAP8 PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH1 0x84 CALLDATALOAD SWAP4 PUSH2 0x2E8B JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x191B DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP3 SUB PUSH2 0x3D3 JUMPI PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x1936 DUP4 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH2 0x1942 DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 PUSH1 0x84 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x1963 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP3 PUSH1 0xA4 CALLDATALOAD SWAP6 DUP7 GT PUSH2 0x3D3 JUMPI PUSH2 0x197F PUSH2 0x18 SWAP7 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP5 PUSH2 0x31D8 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x19B6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x93D JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH2 0x19C2 DUP2 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP1 PUSH2 0x19CF DUP3 PUSH2 0x423 JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD SWAP4 DUP5 GT PUSH2 0x3D3 JUMPI PUSH2 0x19EA PUSH2 0x18 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x99D JUMP JUMPDEST SWAP3 PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x3AAE JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1A12 PUSH2 0x4FCD JUMP JUMPDEST PUSH2 0x1A1A PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x1A23 DUP2 PUSH2 0x2628 JUMP JUMPDEST PUSH2 0x1A5B JUMPI PUSH1 0x1 DUP2 PUSH0 DUP1 SWAP4 SSTORE ADD SSTORE PUSH32 0x3569B846531B754C99CB80DF3F49CD72FA6FE106AAEE5AB8E0CAF35A9D7CE88D PUSH0 DUP1 LOG2 PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH2 0xC8C SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH2 0x18 PUSH2 0x1AC6 PUSH2 0xB0F PUSH2 0x1AAE CALLDATASIZE PUSH2 0x15A7 JUMP JUMPDEST SWAP4 SWAP1 SWAP2 PUSH2 0x1AC1 PUSH1 0xFF PUSH0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x32CD JUMP JUMPDEST PUSH2 0x314A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AD2 DUP2 PUSH2 0x5CE JUMP JUMPDEST PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 PUSH9 0x20A1A927A9A996AB19 PUSH1 0xB9 SHL DUP3 MSTORE PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1AF7 DUP4 PUSH2 0x5CE JUMP JUMPDEST PUSH1 0x5 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 PUSH5 0x312E302E3 PUSH1 0xDC SHL DUP4 MSTORE PUSH2 0x1B24 PUSH1 0xFF PUSH0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x1B1F DUP2 PUSH2 0x32CD JUMP JUMPDEST PUSH2 0x32CD JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 MLOAD SWAP1 KECCAK256 SWAP1 PUSH2 0x47F SSTORE PUSH2 0x480 SSTORE PUSH2 0x1B3C PUSH2 0x50B2 JUMP JUMPDEST PUSH2 0x1B44 PUSH2 0x50C2 JUMP JUMPDEST PUSH2 0x50DD JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x1B79 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC28 JUMP JUMPDEST PUSH2 0x1B81 PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x1B94 PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE0 SHR AND ISZERO PUSH2 0x2ADE JUMP JUMPDEST PUSH2 0x140 DUP2 ADD SWAP1 PUSH2 0x1BA3 DUP3 PUSH2 0x2B19 JUMP JUMPDEST PUSH2 0xCBF SLOAD SWAP1 DUP2 PUSH4 0xFFFFFFFF DUP1 SWAP3 AND LT ISZERO PUSH2 0x1CDB JUMPI PUSH2 0x120 DUP4 ADD SWAP2 DUP2 PUSH2 0x1BC7 DUP5 PUSH2 0x2B19 JUMP JUMPDEST AND LT PUSH2 0x1CC9 JUMPI PUSH2 0x1BDA PUSH2 0xCBA CALLDATASIZE DUP6 PUSH2 0x2288 JUMP JUMPDEST SWAP2 PUSH2 0x1BE4 DUP4 PUSH2 0x1244 JUMP JUMPDEST SLOAD PUSH2 0x1CB8 JUMPI PUSH2 0x1C1C PUSH2 0x1C16 PUSH32 0x923794976D026D6B119735ADC163CB71DECFC903E17C3DC226C00789593C04E1 SWAP5 PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x1 SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1CAB PUSH2 0x1C2B PUSH1 0x60 DUP7 ADD PUSH2 0x2B23 JUMP JUMPDEST SWAP6 PUSH2 0x1C38 PUSH1 0x80 DUP8 ADD PUSH2 0x2B23 JUMP JUMPDEST SWAP6 PUSH2 0x1C58 PUSH2 0x1C52 PUSH2 0x1C4C PUSH2 0x100 DUP5 ADD PUSH2 0x2B19 JUMP JUMPDEST SWAP6 PUSH2 0x2B19 JUMP JUMPDEST SWAP3 PUSH2 0x2B19 JUMP JUMPDEST PUSH2 0x1C64 PUSH1 0x40 DUP4 ADD PUSH2 0x2B23 JUMP JUMPDEST PUSH2 0x1C6D DUP4 PUSH2 0x2B23 JUMP JUMPDEST SWAP1 PUSH2 0x1C7A PUSH1 0x20 DUP6 ADD PUSH2 0x2B23 JUMP JUMPDEST SWAP3 PUSH2 0x1C89 PUSH2 0x160 DUP7 ADD DUP7 PUSH2 0x2B2D JUMP JUMPDEST SWAP7 SWAP1 SWAP6 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 AND SWAP14 PUSH1 0xE0 DUP3 ADD CALLDATALOAD SWAP14 PUSH1 0xA0 PUSH1 0xC0 DUP5 ADD CALLDATALOAD SWAP4 ADD CALLDATALOAD SWAP2 DUP13 PUSH2 0x332D JUMP JUMPDEST SUB SWAP1 LOG3 PUSH2 0x18 PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x4BE791 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD642B7D9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x277AE7B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH32 0x2D5B62420992E5A4AFCE0E77742636CA2608EF58289FD2E1BAA5161EF6E7E41E PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D2D DUP2 PUSH2 0xB2E JUMP JUMPDEST PUSH2 0x1D35 PUSH2 0x4FCD JUMP JUMPDEST PUSH2 0x1D3D PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x86B DUP1 SLOAD PUSH1 0xFF PUSH1 0xE0 SHL NOT AND SWAP2 ISZERO ISZERO PUSH1 0xE0 DUP2 SWAP1 SHL PUSH1 0xFF PUSH1 0xE0 SHL AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x20 PUSH2 0x1D85 PUSH2 0x3397 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x20 PUSH4 0xFFFFFFFF PUSH2 0x86B SLOAD PUSH1 0xC0 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B82 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x3D3 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x3D3 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x3D3 JUMPI JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1E1C JUMPI POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1E0D JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1E45 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1E0B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD SWAP1 PUSH1 0x20 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP3 PUSH1 0x20 PUSH1 0x40 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x1E86 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x1EA4 PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0x1E2C JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x1E76 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x1EE5 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DDB JUMP JUMPDEST SWAP2 PUSH2 0x1EEF DUP4 PUSH2 0x33A5 JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1F07 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x133D DUP8 DUP3 PUSH2 0x1E51 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1F14 DUP4 DUP6 DUP9 PUSH2 0x33EE JUMP JUMPDEST PUSH1 0x40 SWAP4 SWAP2 PUSH2 0x1F26 DUP6 MLOAD DUP1 SWAP4 DUP2 SWAP4 PUSH2 0x3409 JUMP JUMPDEST SUB SWAP1 ADDRESS GAS DELEGATECALL SWAP1 PUSH2 0x1F34 PUSH2 0x3416 JUMP JUMPDEST SWAP2 ISZERO PUSH2 0x1F5B JUMPI POP SWAP1 PUSH1 0x1 SWAP2 PUSH2 0x1F49 DUP3 DUP9 PUSH2 0x34B4 JUMP JUMPDEST MSTORE PUSH2 0x1F54 DUP2 DUP8 PUSH2 0x34B4 JUMP JUMPDEST POP ADD PUSH2 0x1EF2 JUMP JUMPDEST DUP5 DUP3 PUSH1 0x44 DUP2 MLOAD LT PUSH2 0x3D3 JUMPI PUSH2 0x1F7F DUP2 DUP4 PUSH2 0xE51 SWAP4 ADD MLOAD PUSH1 0x24 DUP1 SWAP2 DUP4 ADD ADD SWAP2 ADD PUSH2 0x3445 JUMP JUMPDEST SWAP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 DUP4 ADD PUSH2 0x34A3 JUMP JUMPDEST PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1FAC DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x1FB8 DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x1FC0 PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x3D3 JUMPI PUSH2 0x1FE4 PUSH2 0x8D8 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP3 PUSH4 0xFFFFFFFF PUSH2 0xCBF SLOAD AND SWAP3 PUSH2 0x1FF8 PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x200B PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE8 SHR AND ISZERO PUSH2 0x28B8 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 CALLER PUSH2 0x380E JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x40 MLOAD PUSH12 0x1D6329F1C35CA4BFABB9F561 PUSH1 0x28 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x3 NOT PUSH1 0x60 CALLDATASIZE DUP3 ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT PUSH2 0x3D3 JUMPI PUSH1 0x60 DUP3 CALLDATASIZE SUB SWAP4 DUP5 ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x2081 DUP3 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x2099 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DDB JUMP JUMPDEST SWAP2 SWAP1 SWAP4 PUSH2 0x20A4 PUSH2 0x3618 JUMP JUMPDEST PUSH1 0x4 DUP5 ADD CALLDATALOAD SWAP1 PUSH2 0x182 NOT ADD DUP2 SLT ISZERO PUSH2 0x3D3 JUMPI PUSH2 0xD27 SWAP5 PUSH2 0x2144 SWAP4 PUSH2 0x20D1 PUSH2 0x213D SWAP4 PUSH1 0x4 CALLDATASIZE SWAP2 DUP10 ADD ADD PUSH2 0x2288 JUMP JUMPDEST SWAP6 PUSH2 0x20E7 PUSH2 0x20E2 PUSH1 0x80 DUP10 ADD MLOAD PUSH2 0x417 JUMP JUMPDEST PUSH2 0x366E JUMP JUMPDEST PUSH2 0x212B PUSH2 0x20F3 DUP9 PUSH2 0x3CDA JUMP JUMPDEST SWAP2 PUSH1 0x44 PUSH2 0x2103 PUSH1 0x20 DUP12 ADD MLOAD PUSH2 0x417 JUMP JUMPDEST SWAP2 PUSH2 0x160 DUP12 ADD MLOAD SWAP5 PUSH2 0x2113 PUSH2 0x627 JUMP JUMPDEST SWAP12 DUP13 MSTORE PUSH1 0x20 DUP13 ADD MSTORE ADD CALLDATALOAD PUSH1 0x40 DUP11 ADD MSTORE PUSH1 0x60 DUP10 ADD PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MSTORE PUSH0 PUSH1 0xA0 DUP8 ADD MSTORE CALLDATASIZE SWAP2 PUSH2 0x726 JUMP JUMPDEST SWAP1 DUP4 PUSH2 0x5166 JUMP JUMPDEST PUSH2 0x40C3 JUMP JUMPDEST PUSH2 0x2152 CALLDATASIZE PUSH2 0x834 JUMP JUMPDEST POP SWAP5 PUSH2 0x2160 SWAP7 SWAP4 SWAP5 SWAP7 PUSH2 0x3618 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0x86B SLOAD PUSH2 0x2179 PUSH1 0xFF DUP3 PUSH1 0xE8 SHR AND ISZERO PUSH2 0x28B8 JUMP JUMPDEST PUSH1 0xC0 SHR AND SWAP6 PUSH2 0x218A PUSH2 0x1AC1 DUP9 PUSH2 0x3135 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP6 SWAP1 DUP10 SWAP1 DUP5 AND DUP1 DUP9 EQ DUP1 PUSH2 0x227F JUMPI JUMPDEST ISZERO PUSH2 0x2258 JUMPI POP PUSH2 0x21D5 SWAP1 CALLVALUE EQ PUSH2 0x34C8 JUMP JUMPDEST DUP6 EXTCODESIZE ISZERO PUSH2 0x3D3 JUMPI PUSH0 PUSH1 0x4 SWAP7 PUSH1 0x40 MLOAD SWAP8 DUP9 DUP1 SWAP3 PUSH4 0xD0E30DB PUSH1 0xE4 SHL DUP3 MSTORE CALLVALUE SWAP1 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x2253 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B22 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 PUSH2 0x222D SWAP5 PUSH2 0x223A JUMPI JUMPDEST POP JUMPDEST PUSH2 0x221E PUSH2 0x3397 JUMP JUMPDEST SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 CALLER SWAP13 DUP9 PUSH2 0x34CF JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x18 PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x2247 PUSH2 0x224D SWAP3 PUSH2 0x54A JUMP JUMPDEST DUP1 PUSH2 0x3C9 JUMP JUMPDEST PUSH0 PUSH2 0x2214 JUMP JUMPDEST PUSH2 0x312A JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B22 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP8 POP PUSH2 0x222D SWAP5 SWAP2 PUSH2 0x227A SWAP2 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x505C JUMP JUMPDEST PUSH2 0x2216 JUMP JUMPDEST POP CALLVALUE ISZERO ISZERO PUSH2 0x21C4 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x180 DUP4 DUP3 SUB SLT PUSH2 0x3D3 JUMPI PUSH2 0x229D PUSH2 0x646 JUMP JUMPDEST SWAP3 PUSH2 0x22A7 DUP2 PUSH2 0x46A JUMP JUMPDEST DUP5 MSTORE PUSH2 0x22B5 PUSH1 0x20 DUP3 ADD PUSH2 0x46A JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x22C6 PUSH1 0x40 DUP3 ADD PUSH2 0x46A JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x22D7 PUSH1 0x60 DUP3 ADD PUSH2 0x46A JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x22E8 PUSH1 0x80 DUP3 ADD PUSH2 0x46A JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD CALLDATALOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD CALLDATALOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD CALLDATALOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 PUSH2 0x2319 DUP2 DUP4 ADD PUSH2 0x52B JUMP JUMPDEST SWAP1 DUP6 ADD MSTORE PUSH2 0x120 PUSH2 0x232B DUP2 DUP4 ADD PUSH2 0x52B JUMP JUMPDEST SWAP1 DUP6 ADD MSTORE PUSH2 0x140 PUSH2 0x233D DUP2 DUP4 ADD PUSH2 0x52B JUMP JUMPDEST SWAP1 DUP6 ADD MSTORE PUSH2 0x160 SWAP2 DUP2 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x2361 SWAP3 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP1 DUP4 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x3 NOT PUSH1 0x60 CALLDATASIZE DUP3 ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP4 GT PUSH2 0x3D3 JUMPI PUSH1 0xC0 SWAP1 DUP4 CALLDATASIZE SUB ADD SLT PUSH2 0x3D3 JUMPI PUSH2 0x23A1 PUSH2 0x627 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x4 ADD CALLDATALOAD DUP2 DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x23BE SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP7 ADD ADD PUSH2 0x2288 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x24 DUP4 ADD CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x44 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x23E0 PUSH1 0x64 DUP5 ADD PUSH2 0x46A JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x84 DUP4 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x18 SWAP3 PUSH2 0x2407 PUSH1 0xA4 SWAP3 PUSH1 0x4 CALLDATASIZE SWAP2 DUP5 ADD ADD PUSH2 0x6F1 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x241B PUSH2 0x443 JUMP JUMPDEST PUSH2 0x2423 PUSH2 0xB38 JUMP JUMPDEST SWAP2 PUSH2 0x4341 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH2 0x872 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x2485 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH2 0x2492 DUP3 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x3D3 JUMPI PUSH2 0x24AA SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xFB0 JUMP JUMPDEST SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP5 DUP6 GT PUSH2 0x3D3 JUMPI PUSH2 0x24C6 PUSH2 0x18 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xFB0 JUMP JUMPDEST SWAP5 SWAP1 SWAP4 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x3517 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x40 MLOAD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH2 0x8D8 PUSH1 0x4 CALLDATALOAD PUSH2 0x2563 DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x256B PUSH2 0x4FCD JUMP JUMPDEST PUSH2 0x1B44 PUSH2 0x3618 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH2 0x86A SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3D3 JUMPI PUSH0 PUSH2 0x25C9 DUP2 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x25D1 PUSH2 0x3618 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD CALLVALUE ADDRESS GAS CALL PUSH2 0x25E3 PUSH2 0x3416 JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x25F0 JUMPI PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0xE51 SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x1E2C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x86C DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2644 JUMPI PUSH0 MSTORE PUSH1 0x3 PUSH1 0x20 PUSH0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2614 JUMP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x86C SLOAD DUP2 LT ISZERO PUSH2 0x3D3 JUMPI PUSH2 0x2673 PUSH1 0x40 SWAP2 PUSH2 0x2628 JUMP JUMPDEST POP PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xCBE SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x26BE DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x26C6 PUSH2 0x4FCD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x26DE JUMPI PUSH2 0x18 SWAP1 PUSH2 0x5026 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x274B DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x2758 DUP3 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH2 0x2764 DUP2 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x276C PUSH2 0x475 JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 GT PUSH2 0x3D3 JUMPI PUSH2 0x278F PUSH2 0x8D8 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP4 PUSH4 0xFFFFFFFF PUSH2 0xCBF SLOAD AND SWAP4 PUSH2 0x141A PUSH2 0x3618 JUMP JUMPDEST SWAP11 SWAP9 SWAP6 SWAP4 SWAP1 SWAP8 SWAP10 SWAP7 SWAP5 SWAP3 PUSH2 0x27B5 PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x27BE DUP4 PUSH2 0x366E JUMP JUMPDEST PUSH2 0x27C6 PUSH2 0x3397 JUMP JUMPDEST SWAP3 DUP10 PUSH2 0x27D0 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x27DB DUP2 SWAP16 DUP3 PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 PUSH2 0x27E8 SWAP2 PUSH2 0x2B5F JUMP JUMPDEST PUSH2 0x27F5 SWAP1 PUSH1 0x40 DUP15 ADD PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x80 DUP12 ADD MSTORE PUSH1 0xA0 DUP11 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0xE0 DUP9 ADD MSTORE PUSH4 0xFFFFFFFF AND PUSH2 0x100 DUP8 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x120 SWAP2 DUP1 DUP4 DUP10 ADD MSTORE PUSH2 0x2835 PUSH2 0x666 JUMP JUMPDEST SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP5 PUSH0 DUP7 MSTORE PUSH1 0x40 DUP10 ADD PUSH0 SWAP1 MSTORE PUSH1 0x60 DUP10 ADD SWAP1 PUSH2 0x2855 SWAP2 PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MSTORE PUSH0 PUSH1 0xA0 DUP9 ADD MSTORE PUSH12 0x1D6329F1C35CA4BFABB9F561 PUSH1 0x28 SHL PUSH1 0xC0 DUP9 ADD MSTORE PUSH0 NOT PUSH1 0xE0 DUP9 ADD MSTORE PUSH1 0x1 SWAP1 DUP8 ADD MSTORE DUP6 ADD MSTORE DUP4 MLOAD PUSH2 0x2890 SWAP1 PUSH2 0x46D9 JUMP JUMPDEST SWAP1 MSTORE PUSH2 0x289C SWAP2 DUP4 PUSH2 0x51FD JUMP JUMPDEST PUSH2 0x28A5 DUP2 PUSH2 0x494B JUMP JUMPDEST PUSH2 0x28AE SWAP2 PUSH2 0x4DCB JUMP JUMPDEST PUSH2 0x441 PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST ISZERO PUSH2 0x28BF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x506175736564206465706F73697473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 PUSH2 0x28FF PUSH2 0x3618 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD SWAP2 PUSH2 0x2911 PUSH2 0x20E2 DUP5 MLOAD PUSH2 0x417 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP2 DUP3 MLOAD PUSH2 0x2920 PUSH2 0x3397 JUMP JUMPDEST SUB PUSH2 0x2A16 JUMPI PUSH2 0x2940 PUSH2 0x2944 SWAP2 DUP4 PUSH1 0x1 PUSH2 0x2938 DUP10 PUSH2 0x2628 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x39AF JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2A04 JUMPI DUP1 PUSH1 0x60 PUSH32 0xF8BD640004BCEC1B89657020F561D0B070CBDF662D0B158DB9DCCB0A8301BFAB SWAP3 ADD SWAP4 PUSH2 0x2986 PUSH2 0x2980 DUP7 MLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST DUP8 PUSH2 0x3A40 JUMP JUMPDEST PUSH2 0x29F7 DUP5 MLOAD SWAP5 PUSH2 0x29DC PUSH2 0x29D5 DUP6 MLOAD SWAP6 PUSH2 0x29C5 PUSH1 0x40 DUP3 ADD SWAP10 DUP11 MLOAD PUSH2 0x29AD DUP14 MLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x29B7 DUP11 MLOAD PUSH2 0x417 JUMP JUMPDEST SWAP2 PUSH1 0xA0 DUP7 ADD SWAP12 DUP13 MLOAD SWAP5 PUSH2 0x3AAE JUMP JUMPDEST MLOAD SWAP3 MLOAD SWAP8 MLOAD SWAP9 MLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP4 MLOAD PUSH2 0x417 JUMP JUMPDEST SWAP4 MLOAD PUSH4 0xFFFFFFFF SWAP5 DUP6 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 AND SWAP11 AND SWAP9 CALLER SWAP4 DUP7 PUSH2 0x2A97 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x441 PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x582F497D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3D23E4D1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2A47 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2A39 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2A7A JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2A6C JUMP JUMPDEST SWAP4 PUSH2 0x2AB9 PUSH1 0x80 SWAP5 SWAP4 PUSH2 0x2AD7 SWAP4 SWAP9 SWAP8 SWAP9 DUP8 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0xA0 DUP8 ADD SWAP1 PUSH2 0x2A28 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x40 DUP8 ADD MSTORE DUP6 DUP2 SUB PUSH1 0x60 DUP8 ADD MSTORE SWAP1 PUSH2 0x2A5B JUMP JUMPDEST SWAP5 AND SWAP2 ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0x2AE5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5061757365642066696C6C73 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLDATALOAD PUSH2 0x70C DUP2 PUSH2 0x4D8 JUMP JUMPDEST CALLDATALOAD PUSH2 0x70C DUP2 PUSH2 0x423 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x3D3 JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3D3 JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x3D3 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 MSTORE JUMP JUMPDEST ISZERO PUSH2 0x2B75 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5AE2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2BC3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5AE2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP11 SWAP7 SWAP3 SWAP10 SWAP4 SWAP6 SWAP1 SWAP9 SWAP8 SWAP10 PUSH2 0x2C1C PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x86B SLOAD PUSH1 0xE0 SHR PUSH1 0xFF AND ISZERO PUSH2 0x2C30 SWAP1 PUSH2 0x2ADE JUMP JUMPDEST PUSH2 0x2C38 PUSH2 0x3397 JUMP JUMPDEST SWAP3 DUP11 PUSH2 0x2C42 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x2C4D DUP2 SWAP16 DUP3 PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 PUSH2 0x2C5A SWAP2 PUSH2 0x2B5F JUMP JUMPDEST PUSH2 0x2C67 SWAP1 PUSH1 0x40 DUP15 ADD PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x80 DUP12 ADD MSTORE PUSH1 0xA0 DUP11 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0x7 DUP8 SWAP1 SIGNEXTEND PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 SWAP5 DUP6 DUP10 ADD SWAP1 PUSH2 0x2C9F SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x120 SWAP6 DUP2 DUP8 DUP11 ADD MSTORE PUSH2 0x2CB0 PUSH2 0x666 JUMP JUMPDEST SWAP9 DUP10 MSTORE PUSH0 PUSH1 0x20 DUP11 ADD SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP9 SWAP1 SWAP9 SIGNEXTEND PUSH1 0x40 DUP11 ADD MSTORE PUSH2 0x2CD3 SWAP1 PUSH1 0x60 DUP11 ADD PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD MSTORE DUP4 ADD PUSH0 SWAP1 MSTORE DUP3 ADD PUSH0 SWAP1 MSTORE DUP2 MLOAD PUSH2 0x2CFC SWAP1 PUSH2 0x46D9 JUMP JUMPDEST SWAP1 MSTORE PUSH2 0x28A5 DUP2 PUSH2 0x494B JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP14 SWAP13 SWAP12 SWAP6 SWAP15 SWAP4 DUP15 SWAP8 SWAP10 SWAP4 SWAP12 SWAP9 SWAP3 SWAP12 PUSH2 0x2D3D PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x86B SLOAD PUSH1 0xE0 SHR PUSH1 0xFF AND ISZERO PUSH2 0x2D51 SWAP1 PUSH2 0x2ADE JUMP JUMPDEST PUSH2 0x2D59 PUSH2 0x3397 JUMP JUMPDEST SWAP3 PUSH2 0x2D62 PUSH2 0x666 JUMP JUMPDEST SWAP10 PUSH2 0x2D6D SWAP1 DUP12 PUSH2 0x2B5F JUMP JUMPDEST PUSH2 0x2D7A SWAP1 PUSH1 0x20 DUP12 ADD PUSH2 0x2B5F JUMP JUMPDEST PUSH2 0x2D87 SWAP1 PUSH1 0x40 DUP11 ADD PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0x80 DUP8 ADD DUP10 SWAP1 MSTORE PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0xE0 DUP6 ADD MSTORE PUSH4 0xFFFFFFFF DUP6 AND PUSH2 0x100 DUP6 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 PUSH2 0x120 SWAP4 DUP5 DUP7 ADD MSTORE PUSH2 0x2DCA PUSH2 0x666 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH0 PUSH1 0x20 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x7 DUP10 SWAP1 SIGNEXTEND PUSH1 0x40 DUP8 ADD MSTORE SWAP5 SWAP13 DUP10 DUP15 PUSH1 0x60 ADD SWAP1 PUSH2 0x2DF0 SWAP2 PUSH2 0x2B5F JUMP JUMPDEST DUP14 DUP12 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD MSTORE PUSH1 0xC0 DUP14 ADD MSTORE PUSH1 0xE0 DUP13 ADD MSTORE DUP11 ADD PUSH0 SWAP1 MSTORE DUP10 ADD PUSH0 SWAP1 MSTORE DUP9 MLOAD PUSH2 0x2E1A SWAP1 PUSH2 0x46D9 JUMP JUMPDEST SWAP1 MSTORE PUSH2 0x289C SWAP7 PUSH2 0x4F69 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x3 GT ISZERO PUSH2 0x2E43 JUMPI JUMP JUMPDEST PUSH2 0x2E25 JUMP JUMPDEST PUSH2 0x2E81 SWAP3 SWAP2 PUSH2 0x1AC6 PUSH2 0xB0F SWAP3 PUSH2 0x2E68 PUSH1 0xFF PUSH0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x1B1F DUP2 PUSH2 0x32CD JUMP JUMPDEST PUSH2 0x2E71 CALLER PUSH2 0x5026 JUMP JUMPDEST PUSH2 0x1AC1 PUSH1 0xFF PUSH0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x32CD JUMP JUMPDEST PUSH2 0x441 TIMESTAMP PUSH2 0xCBF SSTORE JUMP JUMPDEST SWAP8 SWAP12 SWAP6 SWAP10 SWAP2 SWAP7 SWAP4 SWAP12 SWAP11 SWAP5 SWAP9 SWAP1 SWAP3 SWAP11 PUSH2 0x2EA1 PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x2EB4 PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE8 SHR AND ISZERO PUSH2 0x28B8 JUMP JUMPDEST PUSH2 0x2EDB PUSH2 0x2940 PUSH2 0x2ED4 DUP14 PUSH2 0x2EC7 DUP13 PUSH2 0x122A JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x30E5 JUMPI PUSH2 0xCBF SLOAD SWAP10 PUSH4 0xFFFFFFFF SWAP14 DUP15 PUSH2 0x2EF8 DUP14 DUP3 DUP7 AND SWAP1 PUSH2 0x310B JUMP JUMPDEST SWAP1 PUSH32 0x0 AND LT PUSH2 0x30D3 JUMPI DUP15 DUP1 DUP6 AND DUP14 DUP1 DUP3 LT SWAP3 DUP4 ISZERO PUSH2 0x309C JUMPI JUMPDEST POP POP POP PUSH2 0x308A JUMPI DUP15 SWAP12 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP13 DUP14 DUP10 AND SWAP1 DUP8 AND SWAP1 DUP2 DUP2 OR PUSH2 0x3054 JUMPI JUMPDEST POP POP POP DUP12 PUSH32 0x0 AND DUP13 DUP12 AND DUP2 DUP2 EQ DUP1 PUSH2 0x304B JUMPI JUMPDEST ISZERO PUSH2 0x3031 JUMPI POP DUP2 CALLVALUE SUB PUSH2 0x301F JUMPI DUP1 EXTCODESIZE ISZERO PUSH2 0x3D3 JUMPI PUSH0 PUSH1 0x4 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0xD0E30DB PUSH1 0xE4 SHL DUP3 MSTORE CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x2253 JUMPI PUSH2 0x300C JUMPI JUMPDEST POP JUMPDEST PUSH2 0x86B SLOAD PUSH1 0xC0 SHR PUSH4 0xFFFFFFFF AND SWAP15 DUP16 PUSH2 0x2FD4 SWAP1 PUSH2 0x3135 JUMP JUMPDEST PUSH2 0x2FDD SWAP1 PUSH2 0x314A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP13 AND SWAP16 AND SWAP14 PUSH2 0x2FF1 SWAP11 DUP13 PUSH2 0x3170 JUMP JUMPDEST SUB PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5A82 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG4 PUSH2 0x441 PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x2247 PUSH2 0x3019 SWAP3 PUSH2 0x54A JUMP JUMPDEST PUSH0 PUSH2 0x2FBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6452A35D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x301F JUMPI DUP2 PUSH2 0x3046 SWAP2 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x505C JUMP JUMPDEST PUSH2 0x2FBC JUMP JUMPDEST POP CALLVALUE ISZERO ISZERO PUSH2 0x2F82 JUMP JUMPDEST ISZERO PUSH2 0x3078 JUMPI LT PUSH2 0x3066 JUMPI PUSH0 DUP1 DUP1 PUSH2 0x2F50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x25A63A5B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x495D907F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x582E3889 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x30CA SWAP3 SWAP4 POP PUSH32 0x0 AND SWAP1 PUSH2 0x311D JUMP JUMPDEST LT DUP16 DUP14 DUP2 PUSH2 0x2F30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF722177F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2A58C4F3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x3118 JUMPI JUMP JUMPDEST PUSH2 0x30F7 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x3118 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP1 SWAP2 AND SWAP1 DUP2 EQ PUSH2 0x3118 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x86B DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xC0 SHL NOT AND PUSH1 0xC0 SWAP3 SWAP1 SWAP3 SHL PUSH4 0xFFFFFFFF PUSH1 0xC0 SHL AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH4 0xFFFFFFFF SWAP3 DUP4 AND PUSH1 0x80 DUP4 ADD MSTORE SWAP3 DUP3 AND PUSH1 0xA0 DUP3 ADD MSTORE SWAP3 AND PUSH1 0xC0 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0xE0 DUP3 ADD MSTORE SWAP2 AND PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x140 PUSH2 0x120 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x70C SWAP4 SWAP2 ADD SWAP2 PUSH2 0x2D07 JUMP JUMPDEST PUSH2 0x3281 SWAP1 PUSH4 0xFFFFFFFF PUSH32 0xA6AA57BD282FC82378458DE27BE4EADFA791A0C7321C49562EEBA8B2643DD566 SWAP6 SWAP5 SWAP8 SWAP7 PUSH2 0x320E PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x3244 DUP9 DUP3 DUP9 DUP9 PUSH1 0x7 SIGNEXTEND SWAP9 PUSH2 0x3234 PUSH8 0x6F05B59D3B20000 PUSH2 0x322E DUP13 PUSH2 0x50A3 JUMP JUMPDEST LT PUSH2 0x328B JUMP JUMPDEST DUP14 PUSH2 0x323D PUSH2 0x3397 JUMP JUMPDEST SWAP1 DUP10 PUSH2 0x4F69 JUMP JUMPDEST PUSH2 0x326F PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 DUP10 MSTORE AND PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x80 DUP8 ADD SWAP1 PUSH2 0x1E2C JUMP JUMPDEST SWAP3 DUP6 DUP5 SUB PUSH1 0x60 DUP8 ADD MSTORE AND SWAP8 AND SWAP6 PUSH2 0x1E2C JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST ISZERO PUSH2 0x3292 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E76616C69642072656C6179657220666565 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x32D4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH4 0xFFFFFFFF SWAP3 DUP4 AND PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0xA0 DUP3 ADD MSTORE SWAP2 DUP2 AND PUSH1 0xC0 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0xE0 DUP3 ADD MSTORE SWAP2 AND PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x140 PUSH2 0x120 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x70C SWAP4 SWAP2 ADD SWAP2 PUSH2 0x2D07 JUMP JUMPDEST PUSH2 0xCBE SLOAD DUP1 PUSH2 0x70C JUMPI POP CHAINID SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x33AF DUP3 PUSH2 0x70F JUMP JUMPDEST PUSH2 0x33BC PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x604 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x33CD PUSH1 0x1F NOT SWAP2 PUSH2 0x70F JUMP JUMPDEST ADD SWAP1 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x33DD JUMPI POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x60 PUSH1 0x20 DUP1 SWAP4 DUP6 ADD ADD MSTORE ADD PUSH2 0x33D1 JUMP JUMPDEST SWAP1 DUP3 LT ISZERO PUSH2 0x2644 JUMPI PUSH2 0x3405 SWAP2 PUSH1 0x5 SHL DUP2 ADD SWAP1 PUSH2 0x2B2D JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP1 DUP1 SWAP3 SWAP2 DUP3 CALLDATACOPY ADD PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x3440 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x3427 DUP3 PUSH2 0x6A0 JUMP JUMPDEST SWAP2 PUSH2 0x3435 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x604 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x3D3 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3D3 JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x3D3 JUMPI DUP1 MLOAD PUSH2 0x3477 DUP2 PUSH2 0x6A0 JUMP JUMPDEST SWAP3 PUSH2 0x3485 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x604 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x3D3 JUMPI PUSH2 0x70C SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x1E0B JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x70C SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x1E2C JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2644 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3D3 JUMPI JUMP JUMPDEST SWAP4 PUSH1 0xE0 SWAP6 SWAP4 PUSH2 0x70C SWAP9 SWAP8 SWAP4 PUSH4 0xFFFFFFFF SWAP4 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0x40 DUP7 ADD MSTORE AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH1 0x80 DUP5 ADD MSTORE AND PUSH1 0xA0 DUP3 ADD MSTORE DUP2 PUSH1 0xC0 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1E2C JUMP JUMPDEST SWAP5 SWAP1 SWAP7 SWAP4 SWAP6 PUSH2 0x3524 PUSH2 0x3618 JUMP JUMPDEST PUSH2 0x3537 PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE0 SHR AND ISZERO PUSH2 0x2ADE JUMP JUMPDEST PUSH2 0x3544 PUSH2 0x140 DUP8 ADD PUSH2 0x2B19 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0xCBF SLOAD SWAP2 AND LT ISZERO DUP1 PUSH2 0x35FA JUMPI JUMPDEST PUSH2 0xD31 JUMPI PUSH2 0x3565 CALLDATASIZE DUP8 PUSH2 0x2288 JUMP JUMPDEST PUSH2 0x356E SWAP1 PUSH2 0x3CDA JUMP JUMPDEST SWAP8 PUSH2 0x3577 PUSH2 0x627 JUMP JUMPDEST SWAP9 PUSH2 0x3582 CALLDATASIZE DUP10 PUSH2 0x2288 JUMP JUMPDEST DUP11 MSTORE PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x40 DUP10 ADD DUP5 SWAP1 MSTORE PUSH2 0x359D DUP6 PUSH1 0x60 DUP12 ADD PUSH2 0x2B5F JUMP JUMPDEST PUSH2 0x35A8 CALLDATASIZE DUP5 DUP11 PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0xA0 DUP10 ADD MSTORE PUSH2 0x35BB DUP7 PUSH2 0x2B23 JUMP JUMPDEST SWAP7 PUSH2 0x35C9 PUSH2 0x100 DUP9 ADD PUSH2 0x2B19 JUMP JUMPDEST SWAP3 CALLDATASIZE SWAP1 PUSH2 0x35D5 SWAP3 PUSH2 0x6BB JUMP JUMPDEST SWAP5 CALLDATASIZE SWAP1 PUSH2 0x35E1 SWAP3 PUSH2 0x6BB JUMP JUMPDEST SWAP5 PUSH1 0xE0 ADD CALLDATALOAD SWAP1 PUSH2 0x35F0 SWAP7 PUSH2 0x4EFA JUMP JUMPDEST CALLER PUSH2 0x28AE SWAP2 PUSH2 0x3E25 JUMP JUMPDEST POP PUSH2 0x3607 PUSH1 0x40 DUP8 ADD PUSH2 0x2B23 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0x3557 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x65 SLOAD EQ PUSH2 0x3629 JUMPI PUSH1 0x2 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH32 0x8A5AFA2F5694AE60F58FB8F4F1D7408F1CB0AAC9FFC67150D46E2C7D1BB911FF SWAP1 PUSH1 0x20 SWAP1 LOG1 JUMP JUMPDEST ISZERO PUSH2 0x36AD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x44697361626C656420726F757465 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x36EA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x416D6F756E7420746F6F206C61726765 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3729 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x696E76616C69642071756F746554696D657374616D7 PUSH1 0x54 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x376E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH27 0x1B5CD9CB9D985B1D59481B5D5CDD081B585D18DA08185B5BDD5B9D PUSH1 0x2A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 SWAP4 PUSH2 0x70C SWAP7 SWAP6 SWAP2 SWAP3 SWAP5 PUSH2 0x140 SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP6 AND DUP7 MSTORE PUSH0 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH4 0xFFFFFFFF DUP1 SWAP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH0 PUSH1 0xC0 DUP5 ADD MSTORE AND PUSH1 0xE0 DUP3 ADD MSTORE PUSH0 PUSH2 0x100 DUP3 ADD MSTORE DUP2 PUSH2 0x120 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1E2C JUMP JUMPDEST SWAP2 SWAP6 SWAP7 SWAP4 SWAP5 SWAP3 SWAP1 SWAP3 PUSH2 0x382E PUSH2 0x3829 PUSH2 0x2ED4 DUP9 PUSH2 0x2EC7 DUP12 PUSH2 0x122A JUMP JUMPDEST PUSH2 0x36A6 JUMP JUMPDEST PUSH1 0x7 SIGNEXTEND SWAP4 PUSH2 0x3847 PUSH8 0x6F05B59D3B20000 PUSH2 0x322E DUP8 PUSH2 0x50A3 JUMP JUMPDEST PUSH2 0x3861 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP4 GT ISZERO PUSH2 0x36E3 JUMP JUMPDEST PUSH2 0xCBF SLOAD SWAP4 PUSH2 0x38A5 PUSH2 0x387B PUSH4 0xFFFFFFFF SWAP7 DUP8 DUP13 AND SWAP1 PUSH2 0x310B JUMP JUMPDEST DUP7 PUSH32 0x0 AND LT ISZERO PUSH2 0x3722 JUMP JUMPDEST PUSH2 0x86B SLOAD PUSH1 0xC0 SHR PUSH4 0xFFFFFFFF AND SWAP9 PUSH2 0x38BF PUSH2 0x1AC1 DUP12 PUSH2 0x3135 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 PUSH32 0x0 DUP8 AND SWAP5 DUP11 DUP9 AND DUP1 DUP8 EQ DUP1 PUSH2 0x39A6 JUMPI JUMPDEST ISZERO PUSH2 0x397C JUMPI POP PUSH2 0x3909 DUP2 CALLVALUE EQ PUSH2 0x3767 JUMP JUMPDEST DUP6 EXTCODESIZE ISZERO PUSH2 0x3D3 JUMPI PUSH0 PUSH1 0x4 SWAP7 PUSH1 0x40 MLOAD SWAP8 DUP9 DUP1 SWAP3 PUSH4 0xD0E30DB PUSH1 0xE4 SHL DUP3 MSTORE CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x2253 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5A82 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP10 PUSH2 0x3964 SWAP8 PUSH2 0x3953 SWAP3 PUSH2 0x3969 JUMPI JUMPDEST POP JUMPDEST DUP3 PUSH2 0x52BD JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 AND SWAP13 AND SWAP11 DUP8 PUSH2 0x37B1 JUMP JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST DUP1 PUSH2 0x2247 PUSH2 0x3976 SWAP3 PUSH2 0x54A JUMP JUMPDEST PUSH0 PUSH2 0x394B JUMP JUMPDEST PUSH2 0x3964 SWAP7 POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5A82 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP10 PUSH2 0x39A1 DUP4 PUSH2 0x3953 SWAP4 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x505C JUMP JUMPDEST PUSH2 0x394D JUMP JUMPDEST POP CALLVALUE ISZERO ISZERO PUSH2 0x38F8 JUMP JUMPDEST PUSH2 0x70C SWAP3 SWAP2 PUSH1 0x40 MLOAD PUSH2 0x3A37 DUP2 PUSH2 0x3A29 PUSH1 0x20 DUP3 ADD SWAP5 PUSH1 0x20 DUP7 MSTORE DUP1 MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0xA0 PUSH2 0x39F4 PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0xC0 PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD SWAP1 PUSH2 0x2A28 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP6 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH0 NOT PUSH1 0x1 DUP5 SHL ADD AND PUSH1 0xC0 DUP7 ADD MSTORE SWAP2 ADD MLOAD DUP4 DUP3 SUB PUSH1 0x3F NOT ADD PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x2A5B JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x604 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 PUSH2 0x52F3 JUMP JUMPDEST PUSH2 0x3A4B PUSH1 0x2 SWAP2 PUSH2 0x2628 JUMP JUMPDEST POP ADD PUSH3 0xFFFFFF DUP3 PUSH1 0x8 SHR AND DUP1 PUSH0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP5 AND SHL DUP1 DUP1 SWAP5 AND EQ PUSH2 0x3A83 JUMPI PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP2 SLOAD OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x954476D9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP5 SWAP4 SWAP2 SWAP1 SWAP4 DUP1 MLOAD DUP3 MLOAD SUB PUSH2 0x3B7E JUMPI DUP2 MLOAD SWAP2 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x3B32 JUMPI POP POP POP POP DUP3 PUSH2 0x3AD9 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 PUSH2 0x3B0A PUSH32 0x828FC203220356DF8F072A91681CAEE7D5C75095E2A95E80ED5A14B384697F71 SWAP4 DUP7 PUSH2 0x537D JUMP JUMPDEST PUSH2 0x3B26 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP8 AND SWAP6 CALLER SWAP1 DUP4 PUSH2 0x3A95 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH0 DUP1 DUP1 DUP1 PUSH2 0x3AD3 JUMP JUMPDEST DUP1 PUSH2 0x3B3F PUSH1 0x1 SWAP3 DUP5 PUSH2 0x34B4 JUMP JUMPDEST MLOAD DUP1 PUSH2 0x3B4D JUMPI JUMPDEST POP ADD PUSH2 0x3AC2 JUMP JUMPDEST PUSH2 0x3B78 SWAP1 PUSH2 0x3B6B PUSH2 0x3B5E DUP5 DUP9 PUSH2 0x34B4 JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH2 0x5344 JUMP JUMPDEST PUSH0 PUSH2 0x3B46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x19A53167 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x3BD8 JUMPI PUSH2 0x86A DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH32 0x1F17A88F67B0F49060A34BEC1A4723A563620E6AA265EB640B5046DCEE0759A0 PUSH0 DUP1 LOG2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4261642068756220706F6F6C2061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x70C SWAP2 PUSH2 0x180 SWAP1 PUSH2 0x3C27 DUP2 DUP5 MLOAD PUSH2 0x12AF JUMP JUMPDEST PUSH2 0x3C39 PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x12AF JUMP JUMPDEST PUSH2 0x3C4B PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x12AF JUMP JUMPDEST PUSH2 0x3C5D PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x12AF JUMP JUMPDEST PUSH2 0x3C6F PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x80 DUP4 ADD SWAP1 PUSH2 0x12AF JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x3CA5 PUSH2 0x100 DUP1 DUP6 ADD MLOAD SWAP1 DUP4 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x120 DUP4 DUP2 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP3 ADD MSTORE PUSH2 0x140 DUP4 DUP2 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP3 ADD MSTORE DUP2 PUSH2 0x160 DUP1 SWAP5 ADD MLOAD SWAP4 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1E2C JUMP JUMPDEST PUSH2 0x3CE2 PUSH2 0x3397 JUMP JUMPDEST PUSH2 0x3D14 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x3D00 PUSH1 0x20 DUP4 ADD SWAP6 PUSH1 0x40 DUP8 MSTORE PUSH1 0x60 DUP5 ADD SWAP1 PUSH2 0x3C14 JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP4 ADD MSTORE SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x604 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x3D23 DUP3 PUSH2 0x2E39 JUMP JUMPDEST MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND DUP2 MSTORE PUSH1 0x60 DUP1 PUSH2 0x3D4F PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x80 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD SWAP1 PUSH2 0x1E2C JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE ADD MLOAD SWAP2 PUSH2 0x3D66 DUP4 PUSH2 0x2E39 JUMP JUMPDEST ADD MSTORE SWAP1 JUMP JUMPDEST SWAP11 SWAP8 SWAP1 SWAP7 SWAP6 PUSH2 0x3DDA SWAP7 PUSH2 0x70C SWAP14 SWAP12 SWAP7 PUSH1 0x80 DUP15 PUSH2 0x3DCF SWAP9 PUSH2 0x3DE9 SWAP15 SWAP9 PUSH2 0x180 SWAP14 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP10 DUP11 DUP1 SWAP3 AND DUP6 MSTORE AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE DUP13 PUSH1 0xA0 PUSH4 0xFFFFFFFF DUP1 SWAP5 AND SWAP2 ADD MSTORE AND PUSH1 0xC0 DUP13 ADD MSTORE AND PUSH1 0xE0 DUP11 ADD MSTORE PUSH2 0x100 DUP10 ADD SWAP1 PUSH2 0x12AF JUMP JUMPDEST PUSH2 0x120 DUP8 ADD SWAP1 PUSH2 0x12AF JUMP JUMPDEST DUP1 PUSH2 0x140 DUP7 ADD MSTORE DUP5 ADD SWAP1 PUSH2 0x1E2C JUMP JUMPDEST SWAP2 PUSH2 0x160 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x3D26 JUMP JUMPDEST SWAP1 PUSH2 0x70C SWAP5 SWAP4 PUSH1 0x80 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE AND PUSH1 0x40 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1E2C JUMP JUMPDEST DUP1 MLOAD SWAP2 PUSH2 0x120 DUP4 ADD SWAP1 PUSH2 0x3E3C DUP3 MLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0xCBF SLOAD SWAP2 AND LT PUSH2 0x1CC9 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 PUSH2 0x3E5C DUP3 PUSH2 0x1244 JUMP JUMPDEST SLOAD SUB PUSH2 0x40BC JUMPI PUSH1 0x1 SWAP1 JUMPDEST PUSH1 0x2 PUSH2 0x3E71 DUP3 PUSH2 0x1244 JUMP JUMPDEST SLOAD EQ PUSH2 0x40AA JUMPI PUSH2 0x3E80 SWAP1 PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x2 SWAP1 SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH2 0x3E92 SWAP1 PUSH2 0x417 JUMP JUMPDEST PUSH1 0x80 DUP7 ADD MLOAD PUSH2 0x3EA0 SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP3 PUSH1 0xA0 DUP8 ADD MLOAD SWAP2 DUP7 PUSH1 0xC0 DUP10 ADD MLOAD SWAP5 DUP10 PUSH1 0xA0 DUP4 ADD MLOAD SWAP7 PUSH1 0xE0 DUP3 ADD MLOAD SWAP8 PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x3ECE SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP11 MLOAD PUSH4 0xFFFFFFFF AND PUSH2 0x140 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x40 DUP6 ADD MLOAD PUSH2 0x3EF1 SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP3 DUP6 MLOAD PUSH2 0x3EFD SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP5 PUSH1 0x20 DUP8 ADD MLOAD PUSH2 0x3F0C SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP7 PUSH2 0x160 ADD MLOAD SWAP8 PUSH1 0x60 DUP11 ADD MLOAD PUSH2 0x3F21 SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP10 PUSH1 0x80 DUP2 ADD MLOAD SWAP1 PUSH1 0x40 ADD MLOAD SWAP1 PUSH2 0x3F35 PUSH2 0x686 JUMP JUMPDEST SWAP12 PUSH2 0x3F40 SWAP1 DUP14 PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x20 DUP13 ADD MSTORE PUSH1 0x40 DUP12 ADD MSTORE PUSH2 0x3F57 SWAP1 PUSH1 0x60 DUP12 ADD PUSH2 0x3D1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP12 AND SWAP15 PUSH4 0xFFFFFFFF AND SWAP14 SWAP11 SWAP12 DUP13 SWAP12 PUSH2 0x3F7B SWAP12 DUP14 PUSH2 0x3D6B JUMP JUMPDEST SUB PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5AC2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG4 PUSH1 0x60 DUP2 ADD MLOAD PUSH2 0x3F9A SWAP1 PUSH2 0x417 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 CALLER DUP5 EQ DUP1 PUSH2 0x40A2 JUMPI JUMPDEST PUSH2 0x3AD3 JUMPI PUSH1 0x80 PUSH2 0x3FBF SWAP2 ADD MLOAD PUSH2 0x417 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD SWAP1 SWAP4 SWAP1 SWAP3 PUSH1 0x80 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH32 0x0 AND DUP4 SUB PUSH2 0x4092 JUMPI POP PUSH2 0x4011 SWAP2 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x505C JUMP JUMPDEST PUSH2 0x401B DUP6 DUP5 PUSH2 0x53B4 JUMP JUMPDEST ADD MLOAD SWAP2 EXTCODESIZE ISZERO ISZERO DUP1 PUSH2 0x4088 JUMPI JUMPDEST PUSH2 0x4031 JUMPI POP POP POP POP JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x3D3 JUMPI PUSH2 0x405E SWAP4 PUSH0 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x3A5BE8CB PUSH1 0xE0 SHL DUP6 MSTORE CALLER SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x3DF8 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x2253 JUMPI PUSH2 0x4075 JUMPI JUMPDEST DUP1 DUP1 DUP1 PUSH2 0x3AD3 JUMP JUMPDEST DUP1 PUSH2 0x2247 PUSH2 0x4082 SWAP3 PUSH2 0x54A JUMP JUMPDEST PUSH0 PUSH2 0x406D JUMP JUMPDEST POP DUP2 MLOAD ISZERO ISZERO PUSH2 0x4027 JUMP JUMPDEST PUSH2 0x409D SWAP3 CALLER SWAP1 PUSH2 0x505C JUMP JUMPDEST PUSH2 0x401B JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x3FAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4793063 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH0 SWAP1 PUSH2 0x3E66 JUMP JUMPDEST SWAP1 PUSH0 DUP3 MLOAD PUSH2 0x120 DUP2 ADD PUSH2 0x40DA DUP2 MLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0xCBF SLOAD SWAP2 AND LT PUSH2 0x1CC9 JUMPI PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x2 PUSH2 0x40FA DUP3 PUSH2 0x1244 JUMP JUMPDEST SLOAD EQ PUSH2 0x40AA JUMPI PUSH2 0x4109 SWAP1 PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x2 SWAP1 SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x411B SWAP1 PUSH2 0x417 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x4129 SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP1 PUSH1 0xA0 DUP5 ADD MLOAD SWAP3 PUSH1 0xC0 DUP6 ADD MLOAD SWAP2 DUP9 PUSH1 0xA0 DUP2 ADD MLOAD SWAP4 DUP8 PUSH1 0xE0 DUP2 ADD MLOAD SWAP6 PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x4157 SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP6 MLOAD PUSH4 0xFFFFFFFF AND PUSH2 0x140 DUP4 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x4179 SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP2 DUP5 MLOAD PUSH2 0x4185 SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP4 PUSH1 0x20 DUP7 ADD MLOAD PUSH2 0x4194 SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP6 PUSH2 0x160 ADD MLOAD SWAP7 PUSH1 0x60 DUP10 ADD MLOAD PUSH2 0x41A9 SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP9 PUSH1 0x80 DUP2 ADD MLOAD SWAP1 PUSH1 0x40 ADD MLOAD SWAP1 PUSH2 0x41BD PUSH2 0x686 JUMP JUMPDEST SWAP11 PUSH2 0x41C8 SWAP1 DUP13 PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x20 DUP12 ADD MSTORE PUSH1 0x40 DUP11 ADD MSTORE PUSH1 0x2 PUSH1 0x60 DUP11 ADD MSTORE PUSH1 0x40 MLOAD SWAP14 PUSH4 0xFFFFFFFF DUP16 SWAP13 AND SWAP14 PUSH2 0x41F0 SWAP12 DUP14 PUSH2 0x3D6B JUMP JUMPDEST SUB PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5AC2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH0 SWAP5 LOG4 PUSH1 0x60 DUP5 ADD MLOAD PUSH2 0x4211 SWAP1 PUSH2 0x417 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP2 DUP6 DUP4 AND SWAP2 SWAP1 CALLER DUP4 EQ DUP1 PUSH2 0x433A JUMPI JUMPDEST PUSH2 0x4331 JUMPI PUSH1 0x80 PUSH2 0x423B SWAP2 ADD MLOAD PUSH2 0x417 JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP2 ADD MLOAD SWAP7 DUP8 DUP2 DUP5 AND SWAP2 PUSH32 0x0 AND DUP3 EQ PUSH0 EQ PUSH2 0x431A JUMPI SWAP1 PUSH1 0x80 SWAP3 SWAP2 DUP8 PUSH2 0x4306 JUMPI JUMPDEST PUSH2 0x4287 SWAP2 POP DUP6 PUSH2 0x53B4 JUMP JUMPDEST ADD MLOAD SWAP3 EXTCODESIZE ISZERO ISZERO DUP1 PUSH2 0x42FC JUMPI JUMPDEST PUSH2 0x42A0 JUMPI JUMPDEST POP POP POP POP SWAP1 POP JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x42F8 JUMPI DUP4 PUSH2 0x42CC SWAP6 SWAP7 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x3A5BE8CB PUSH1 0xE0 SHL DUP6 MSTORE CALLER SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x3DF8 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x2253 JUMPI PUSH2 0x42E5 JUMPI JUMPDEST DUP1 DUP1 DUP1 DUP5 SWAP4 PUSH2 0x4298 JUMP JUMPDEST DUP1 PUSH2 0x2247 PUSH2 0x42F2 SWAP3 PUSH2 0x54A JUMP JUMPDEST PUSH0 PUSH2 0x42DB JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP DUP3 MLOAD ISZERO ISZERO PUSH2 0x4293 JUMP JUMPDEST PUSH2 0x4313 SWAP2 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x505C JUMP JUMPDEST PUSH0 DUP9 PUSH2 0x427C JUMP JUMPDEST PUSH1 0x80 SWAP3 SWAP2 SWAP7 POP PUSH2 0x432C SWAP1 DUP7 PUSH0 SWAP9 PUSH2 0x5344 JUMP JUMPDEST PUSH2 0x4287 JUMP JUMPDEST POP POP POP POP POP SWAP1 POP JUMP JUMPDEST POP PUSH0 PUSH2 0x422A JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP1 PUSH2 0x120 DUP3 ADD SWAP1 PUSH2 0x435A DUP3 MLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0xCBF SLOAD SWAP2 AND LT PUSH2 0x1CC9 JUMPI PUSH1 0x20 DUP6 ADD MLOAD DUP5 ISZERO PUSH2 0x4563 JUMPI PUSH1 0x2 SWAP1 JUMPDEST PUSH1 0x2 PUSH2 0x4384 DUP3 PUSH2 0x1244 JUMP JUMPDEST SLOAD EQ PUSH2 0x40AA JUMPI PUSH2 0x4393 SWAP1 PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x2 SWAP1 SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH2 0x43A5 SWAP1 PUSH2 0x417 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MLOAD PUSH2 0x43B3 SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP3 PUSH1 0xA0 DUP7 ADD MLOAD SWAP2 DUP9 PUSH1 0xC0 DUP9 ADD MLOAD SWAP5 DUP9 PUSH1 0xA0 DUP4 ADD MLOAD SWAP7 PUSH1 0xE0 DUP3 ADD MLOAD SWAP8 PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x43E1 SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP11 MLOAD PUSH4 0xFFFFFFFF AND PUSH2 0x140 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x40 DUP6 ADD MLOAD PUSH2 0x4404 SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP3 DUP6 MLOAD PUSH2 0x4410 SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP5 PUSH1 0x20 DUP8 ADD MLOAD PUSH2 0x441F SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP7 PUSH2 0x160 ADD MLOAD SWAP8 PUSH1 0x60 DUP11 ADD MLOAD PUSH2 0x4434 SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP10 PUSH1 0x80 DUP2 ADD MLOAD SWAP1 PUSH1 0x40 ADD MLOAD SWAP1 PUSH2 0x4448 PUSH2 0x686 JUMP JUMPDEST SWAP12 PUSH2 0x4453 SWAP1 DUP14 PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x20 DUP13 ADD MSTORE PUSH1 0x40 DUP12 ADD MSTORE PUSH2 0x446A SWAP1 PUSH1 0x60 DUP12 ADD PUSH2 0x3D1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP12 AND SWAP15 PUSH4 0xFFFFFFFF AND SWAP14 SWAP11 SWAP12 DUP13 SWAP12 PUSH2 0x448E SWAP12 DUP14 PUSH2 0x3D6B JUMP JUMPDEST SUB PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5AC2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG4 PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x44AD SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 CALLER DUP3 EQ DUP1 PUSH2 0x455B JUMPI JUMPDEST PUSH2 0x4554 JUMPI PUSH2 0x44D4 PUSH1 0x80 DUP1 SWAP3 ADD MLOAD PUSH2 0x417 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD SWAP1 SWAP6 SWAP1 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP2 DUP8 SWAP2 DUP8 SWAP1 PUSH32 0x0 AND DUP5 SUB PUSH2 0x453B JUMPI POP ISZERO PUSH2 0x4527 JUMPI JUMPDEST PUSH2 0x401B SWAP2 POP DUP5 PUSH2 0x53B4 JUMP JUMPDEST PUSH2 0x4534 SWAP2 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x505C JUMP JUMPDEST PUSH0 DUP6 PUSH2 0x451C JUMP JUMPDEST SWAP1 PUSH2 0x454B JUMPI PUSH2 0x409D SWAP3 CALLER SWAP1 PUSH2 0x505C JUMP JUMPDEST PUSH2 0x409D SWAP3 PUSH2 0x5344 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x44C2 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x456E DUP3 PUSH2 0x1244 JUMP JUMPDEST SLOAD SUB PUSH2 0x457D JUMPI PUSH1 0x1 JUMPDEST SWAP1 PUSH2 0x4379 JUMP JUMPDEST PUSH0 PUSH2 0x4577 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x3D3 JUMPI MLOAD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x4599 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x80 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x2E PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH2 0x70C SWAP2 PUSH2 0x140 SWAP1 PUSH2 0x4652 DUP2 DUP5 MLOAD PUSH2 0x12AF JUMP JUMPDEST PUSH2 0x4664 PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x12AF JUMP JUMPDEST PUSH2 0x4676 PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x12AF JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x46A8 PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0xC0 DUP4 ADD SWAP1 PUSH1 0x7 SIGNEXTEND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP4 DUP2 ADD MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 DUP3 ADD MSTORE PUSH2 0x100 DUP4 DUP2 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP3 ADD MSTORE DUP2 PUSH2 0x120 DUP1 SWAP5 ADD MLOAD SWAP4 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1E2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D14 DUP2 PUSH2 0x3A29 PUSH1 0x20 DUP3 ADD SWAP5 PUSH1 0x20 DUP7 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x463F JUMP JUMPDEST ISZERO PUSH2 0x46FD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x696E76616C69642066656573 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4738 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x1C995B185E48199A5B1B1959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x7 SWAP2 DUP3 SIGNEXTEND SWAP2 SIGNEXTEND ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x3F SHL SUB NOT DUP3 SLT PUSH1 0x1 PUSH1 0x1 PUSH1 0x3F SHL SUB DUP4 SGT OR PUSH2 0x3118 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x4798 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x66696C6C20616D6F756E74207072652066656573206973203 PUSH1 0x3C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x47E0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7061796F757441646A7573746D656E7450637420746F6F20736D616C6C000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x482C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7061796F757441646A7573746D656E7450637420746F6F206C61726765000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP2 EQ PUSH2 0x3118 JUMPI PUSH0 SUB SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x4888 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH28 0x536F6D65686F7720686974206D6178546F6B656E73546F53656E6421 PUSH1 0x20 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x48D3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x34B73B30B634B2103932B830BCB6B2B73A1031B430B4B7 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x70C SWAP3 SWAP2 ADD SWAP1 PUSH2 0x1E2C JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 PUSH1 0x40 DUP2 ADD SWAP3 PUSH2 0x498B PUSH8 0x6F05B59D3B20000 DUP1 PUSH2 0x497D PUSH2 0x4978 PUSH2 0x4972 DUP10 MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST PUSH2 0x50A3 JUMP JUMPDEST LT SWAP1 DUP2 PUSH2 0x4CEA JUMPI JUMPDEST POP PUSH2 0x46F6 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x49AA PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 MLOAD GT ISZERO PUSH2 0x36E3 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x49C5 PUSH2 0x49BC DUP4 MLOAD PUSH2 0x1253 JUMP JUMPDEST SLOAD DUP3 MLOAD GT PUSH2 0x4731 JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD SWAP3 DUP4 MLOAD SWAP7 PUSH2 0x49F5 PUSH1 0xC0 DUP4 ADD SWAP9 PUSH2 0x49EF PUSH2 0x49E3 DUP12 MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST DUP5 MLOAD PUSH1 0x7 SIGNEXTEND JUMPDEST SWAP1 PUSH2 0x476C JUMP JUMPDEST SWAP1 PUSH2 0x5696 JUMP JUMPDEST SWAP8 PUSH2 0x4A01 DUP10 ISZERO ISZERO PUSH2 0x4791 JUMP JUMPDEST PUSH2 0x4A17 DUP5 MLOAD PUSH2 0x4A10 DUP8 MLOAD PUSH2 0x1253 JUMP JUMPDEST SLOAD SWAP1 PUSH2 0x310B JUMP JUMPDEST DUP10 DUP2 LT PUSH2 0x4CE0 JUMPI JUMPDEST POP PUSH2 0x4972 PUSH2 0x4A46 SWAP3 PUSH2 0x49E9 PUSH2 0x4A38 PUSH2 0x4A40 SWAP5 MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST SWAP2 MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST DUP9 PUSH2 0x52BD JUMP JUMPDEST SWAP4 PUSH2 0x120 DUP7 ADD DUP1 MLOAD DUP1 PUSH2 0x4C8B JUMPI JUMPDEST POP POP POP PUSH1 0xA0 DUP6 ADD MLOAD DUP8 DUP7 MLOAD SWAP2 PUSH1 0xA0 DUP4 ADD MLOAD EQ SWAP2 DUP3 ISZERO PUSH2 0x4C7D JUMPI JUMPDEST POP POP DUP1 ISZERO PUSH2 0x4C64 JUMPI JUMPDEST PUSH2 0x4A80 SWAP1 PUSH2 0x48CC JUMP JUMPDEST PUSH2 0x4A8A DUP4 MLOAD PUSH2 0x1253 JUMP JUMPDEST PUSH2 0x4A95 DUP9 DUP3 SLOAD PUSH2 0x311D JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x60 DUP6 ADD SWAP2 PUSH2 0x4AA6 DUP4 MLOAD PUSH2 0x417 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 CALLER DUP5 DUP7 AND EQ DUP1 PUSH2 0x4C4D JUMPI JUMPDEST PUSH2 0x4C43 JUMPI SWAP1 PUSH1 0x40 PUSH2 0x4B39 SWAP3 ADD SWAP5 DUP8 DUP6 PUSH2 0x4AD4 DUP9 MLOAD PUSH2 0x417 JUMP JUMPDEST AND SWAP2 PUSH32 0x0 DUP8 AND DUP4 SUB PUSH2 0x4BFA JUMPI POP POP POP PUSH2 0x4B13 PUSH2 0x2940 PUSH2 0x100 DUP11 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x4BDB JUMPI JUMPDEST PUSH2 0x4B33 DUP8 PUSH2 0x4B2E PUSH2 0x4B29 DUP5 MLOAD PUSH2 0x417 JUMP JUMPDEST PUSH2 0x417 JUMP JUMPDEST PUSH2 0x53B4 JUMP JUMPDEST MLOAD PUSH2 0x417 JUMP JUMPDEST SWAP2 DUP3 EXTCODESIZE ISZERO ISZERO DUP1 PUSH2 0x4BCD JUMPI JUMPDEST PUSH2 0x4B52 JUMPI JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4B64 PUSH2 0x4B6B SWAP2 PUSH1 0x80 SWAP5 AND SWAP5 MLOAD PUSH2 0x417 JUMP JUMPDEST SWAP5 MLOAD PUSH2 0x1253 JUMP JUMPDEST SLOAD SWAP1 MLOAD GT ISZERO SWAP5 ADD MLOAD SWAP4 DUP2 EXTCODESIZE ISZERO PUSH2 0x3D3 JUMPI PUSH0 DUP1 SWAP5 PUSH2 0x4BA0 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x1D43F27 PUSH1 0xE3 SHL DUP7 MSTORE CALLER SWAP3 PUSH1 0x4 DUP8 ADD PUSH2 0x4912 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x2253 JUMPI PUSH2 0x4BBA JUMPI JUMPDEST DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x4B49 JUMP JUMPDEST DUP1 PUSH2 0x2247 PUSH2 0x4BC7 SWAP3 PUSH2 0x54A JUMP JUMPDEST PUSH0 PUSH2 0x4BAF JUMP JUMPDEST POP PUSH1 0x80 DUP8 ADD MLOAD MLOAD ISZERO ISZERO PUSH2 0x4B44 JUMP JUMPDEST PUSH2 0x4BF5 DUP8 PUSH2 0x4BEC PUSH2 0x4B29 DUP9 MLOAD PUSH2 0x417 JUMP JUMPDEST ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x505C JUMP JUMPDEST PUSH2 0x4B18 JUMP JUMPDEST PUSH2 0x4C0B PUSH2 0x2940 PUSH2 0x100 DUP14 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x4C3A JUMPI POP PUSH2 0x4C35 SWAP2 POP PUSH2 0x4C23 PUSH2 0x4B29 DUP9 MLOAD PUSH2 0x417 JUMP JUMPDEST PUSH2 0x4C2D DUP5 MLOAD PUSH2 0x417 JUMP JUMPDEST SWAP1 CALLER SWAP1 PUSH2 0x505C JUMP JUMPDEST PUSH2 0x4B33 JUMP JUMPDEST PUSH2 0x4C35 SWAP3 PUSH2 0x5344 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST POP PUSH2 0x4C5F PUSH2 0x2940 PUSH2 0x100 DUP11 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x4ABB JUMP JUMPDEST POP PUSH2 0x4A80 PUSH2 0x4C76 PUSH2 0x100 DUP8 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x4A77 JUMP JUMPDEST PUSH1 0x60 ADD MLOAD EQ SWAP1 POP DUP8 PUSH0 PUSH2 0x4A6E JUMP JUMPDEST SWAP6 PUSH2 0x4CC8 PUSH2 0x4CCE SWAP3 PUSH2 0x4CAC PUSH2 0x4CD8 SWAP6 SWAP10 PUSH8 0xDE0B6B3A763FFFF NOT SGT ISZERO PUSH2 0x47D9 JUMP JUMPDEST PUSH2 0x4CC2 PUSH9 0x56BC75E2D63100000 DUP3 MLOAD SGT ISZERO PUSH2 0x4825 JUMP JUMPDEST MLOAD PUSH2 0x4871 JUMP JUMPDEST SWAP1 PUSH2 0x52BD JUMP JUMPDEST SWAP5 MLOAD DUP6 GT ISZERO PUSH2 0x4881 JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH2 0x4A54 JUMP JUMPDEST SWAP9 POP PUSH2 0x4972 PUSH2 0x4A1F JUMP JUMPDEST SWAP1 POP PUSH2 0x4D00 PUSH2 0x4978 PUSH2 0x4972 PUSH1 0xC0 DUP7 ADD MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST LT PUSH0 PUSH2 0x4985 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND DUP2 MSTORE PUSH1 0x80 DUP1 PUSH2 0x4D30 PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0xA0 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD SWAP1 PUSH2 0x1E2C JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x7 SIGNEXTEND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP11 SWAP8 SWAP4 PUSH2 0x70C SWAP13 SWAP11 SWAP6 SWAP2 SWAP8 SWAP4 PUSH2 0x4DBC SWAP11 SWAP8 SWAP4 PUSH1 0x20 DUP15 PUSH2 0x180 SWAP12 DUP2 MSTORE ADD MSTORE PUSH1 0x40 DUP14 ADD MSTORE PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x80 DUP12 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0xA0 DUP11 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP1 SWAP3 AND PUSH1 0xE0 DUP11 ADD MSTORE AND PUSH2 0x100 DUP9 ADD MSTORE AND PUSH2 0x120 DUP7 ADD MSTORE DUP1 PUSH2 0x140 DUP7 ADD MSTORE DUP5 ADD SWAP1 PUSH2 0x1E2C JUMP JUMPDEST SWAP2 PUSH2 0x160 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x4D07 JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x4DDB SWAP1 PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP2 ADD MLOAD PUSH2 0x4DEA SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP2 ADD MLOAD SWAP4 PUSH2 0x100 SWAP5 DUP6 DUP4 ADD MLOAD PUSH2 0x4E02 SWAP1 ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x120 SWAP3 DUP4 DUP6 ADD MLOAD SWAP3 PUSH2 0x4E13 PUSH2 0x693 JUMP JUMPDEST SWAP7 PUSH2 0x4E1E SWAP1 DUP9 PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0x40 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE DUP2 MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x4E4B SWAP1 PUSH2 0x1253 JUMP JUMPDEST SLOAD SWAP4 PUSH1 0xA0 DUP5 ADD MLOAD SWAP4 MLOAD SWAP5 PUSH1 0x80 DUP7 ADD MLOAD SWAP6 PUSH1 0xA0 DUP2 ADD MLOAD SWAP2 PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x4E70 SWAP1 PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0x7 SIGNEXTEND SWAP11 DUP4 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP11 PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x4E91 SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP2 DUP5 MLOAD PUSH2 0x4E9D SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP9 PUSH1 0x20 DUP7 ADD MLOAD PUSH2 0x4EAC SWAP1 PUSH2 0x417 JUMP JUMPDEST SWAP6 ADD MLOAD SWAP6 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB AND SWAP15 PUSH4 0xFFFFFFFF AND SWAP14 CALLER SWAP7 PUSH2 0x4ED4 SWAP12 DUP14 PUSH2 0x4D52 JUMP JUMPDEST SUB PUSH32 0x8AB9DC6C19FE88E69BC70221B339C84332752FDD49591B7C51E66BAE3947B73C SWAP2 LOG4 JUMP JUMPDEST SWAP4 SWAP3 PUSH2 0x4F63 SWAP4 PUSH2 0x441 SWAP8 SWAP7 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH4 0xFFFFFFFF PUSH1 0x20 DUP6 ADD SWAP6 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BA2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 MSTORE AND PUSH1 0x40 DUP6 ADD MSTORE DUP6 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 MSTORE PUSH2 0x4F5B DUP2 PUSH2 0x5E9 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x56E4 JUMP JUMPDEST SWAP1 PUSH2 0x5797 JUMP JUMPDEST SWAP4 SWAP3 PUSH2 0x4F63 SWAP4 PUSH2 0x441 SWAP8 SWAP7 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH4 0xFFFFFFFF PUSH1 0x20 DUP6 ADD SWAP6 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B82 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 MSTORE AND PUSH1 0x40 DUP6 ADD MSTORE DUP6 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 MSTORE PUSH2 0x4F5B DUP2 PUSH2 0x5E9 JUMP JUMPDEST PUSH2 0xC8C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x4FE2 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0xC8C DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B42 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x441 SWAP2 PUSH2 0x509E DUP3 PUSH2 0x598 JUMP JUMPDEST PUSH2 0x5867 JUMP JUMPDEST PUSH0 DUP2 SLT PUSH2 0x50AD JUMPI SWAP1 JUMP JUMPDEST PUSH0 SUB SWAP1 JUMP JUMPDEST PUSH2 0x441 PUSH1 0xFF PUSH0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x32CD JUMP JUMPDEST PUSH2 0x50D6 PUSH1 0xFF PUSH0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x1B1F DUP2 PUSH2 0x32CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x5125 JUMPI PUSH2 0x869 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH32 0xA9E8C42C9E7FCA7F62755189A16B2F5314D43D8FB24E91BA54E6D65F9314E849 PUSH0 DUP1 LOG2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x4261642062726964676520726F757465722061646472657373 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 PUSH2 0x2940 SWAP1 PUSH2 0x51E6 SWAP3 DUP5 MLOAD PUSH2 0x5179 PUSH2 0x3397 JUMP JUMPDEST PUSH2 0x3A37 PUSH2 0x51A6 PUSH1 0x40 DUP1 SWAP10 ADD MLOAD SWAP5 DUP10 MLOAD SWAP5 PUSH2 0x5192 DUP7 PUSH2 0x562 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 DUP5 MSTORE DUP10 DUP6 ADD SWAP6 DUP7 MSTORE PUSH2 0x2628 JUMP JUMPDEST POP SLOAD SWAP4 DUP9 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x51CB PUSH1 0x20 DUP5 ADD SWAP7 PUSH1 0x20 DUP9 MSTORE MLOAD PUSH1 0x60 DUP14 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD SWAP1 PUSH2 0x3C14 JUMP JUMPDEST SWAP2 MLOAD PUSH1 0x60 DUP5 ADD MSTORE MLOAD PUSH1 0x80 DUP4 ADD MSTORE SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x604 JUMP JUMPDEST PUSH2 0x51ED JUMPI POP JUMP JUMPDEST MLOAD PUSH4 0x582F497D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x120 SWAP1 SWAP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP1 SWAP5 SWAP3 SWAP4 DUP2 DUP7 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT DUP4 DUP4 LT OR PUSH2 0x55D JUMPI PUSH2 0x5277 SWAP6 PUSH2 0x523C SWAP3 DUP9 MSTORE DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP4 DUP5 MSTORE PUSH2 0x2628 JUMP JUMPDEST POP SLOAD SWAP2 PUSH2 0x3A37 DUP7 MLOAD DUP1 SWAP3 PUSH2 0x5262 PUSH1 0x20 DUP4 ADD SWAP6 PUSH1 0x20 DUP8 MSTORE MLOAD DUP11 DUP1 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x463F JUMP JUMPDEST SWAP1 MLOAD PUSH1 0x60 DUP4 ADD MSTORE SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x604 JUMP JUMPDEST ISZERO PUSH2 0x527F JUMPI POP JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x24B73B30B634B21039B637BB903932B630BC90383937B7B3 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH0 DUP3 DUP5 SUB SWAP3 SLT DUP4 DUP4 SLT DUP2 AND SWAP1 DUP5 DUP5 SGT SWAP1 ISZERO AND OR PUSH2 0x3118 JUMPI DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x3118 JUMPI DIV SWAP1 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP1 PUSH0 SWAP2 JUMPDEST DUP5 MLOAD DUP4 LT ISZERO PUSH2 0x533C JUMPI PUSH2 0x530D DUP4 DUP7 PUSH2 0x34B4 JUMP JUMPDEST MLOAD SWAP1 DUP2 DUP2 LT ISZERO PUSH2 0x532B JUMPI PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 JUMPDEST SWAP3 ADD SWAP2 PUSH2 0x52FA JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x5323 JUMP JUMPDEST SWAP2 POP SWAP3 POP EQ SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x441 SWAP2 PUSH2 0x509E DUP3 PUSH2 0x57D JUMP JUMPDEST SWAP1 PUSH32 0xB6E6AE61A8FA98A339088353BC7A76C8C580B2EFD09210A80BFCCABE05D9AE47 SWAP2 PUSH2 0x53AF PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x3A95 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x53F4 JUMPI SWAP1 PUSH2 0x441 SWAP3 SWAP2 PUSH32 0x0 AND PUSH2 0x5344 JUMP JUMPDEST PUSH32 0x0 AND DUP1 EXTCODESIZE ISZERO PUSH2 0x3D3 JUMPI PUSH0 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP4 MSTORE DUP9 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x2253 JUMPI PUSH2 0x5513 JUMPI JUMPDEST POP DUP2 SELFBALANCE LT PUSH2 0x54CE JUMPI PUSH0 DUP1 DUP1 SWAP4 DUP2 SWAP4 GAS CALL PUSH2 0x545E PUSH2 0x3416 JUMP JUMPDEST POP ISZERO PUSH2 0x5466 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH26 0x1958DA5C1A595B9D081B585E481A185D99481C995D995C9D1959 PUSH1 0x32 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x551C SWAP1 PUSH2 0x54A JUMP JUMPDEST PUSH0 PUSH2 0x5446 JUMP JUMPDEST SWAP1 PUSH2 0x552C DUP3 PUSH2 0x5607 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B62 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH0 DUP1 LOG2 DUP1 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x55C1 JUMPI JUMPDEST PUSH2 0x555A JUMPI POP POP JUMP JUMPDEST PUSH2 0x55BE SWAP2 PUSH0 DUP1 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x556D DUP6 PUSH2 0x562 JUMP JUMPDEST PUSH1 0x27 DUP6 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP7 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL PUSH2 0x55B8 PUSH2 0x3416 JUMP JUMPDEST SWAP2 PUSH2 0x597F JUMP JUMPDEST POP JUMP JUMPDEST POP PUSH0 PUSH2 0x5552 JUMP JUMPDEST SWAP1 PUSH2 0x55D2 DUP3 PUSH2 0x5607 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B62 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH0 DUP1 LOG2 DUP1 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x55FF JUMPI PUSH2 0x555A JUMPI POP POP JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x5552 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x563B JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP2 DUP2 DUP4 MUL SWAP2 DUP4 DUP4 DIV SUB PUSH2 0x3118 JUMPI PUSH1 0x7 SIGNEXTEND DUP1 DUP4 SUB SWAP3 PUSH0 DUP3 SLT DUP2 DUP6 SLT DUP2 AND SWAP1 DUP3 DUP7 SGT SWAP1 ISZERO AND OR PUSH2 0x3118 JUMPI EQ PUSH2 0x56D0 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x42 SWAP2 PUSH2 0x47F SLOAD SWAP1 PUSH2 0x480 SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 ADD SWAP4 PUSH32 0xC2F8787176B8AC6BF7215B4ADCC1E069BF4AB82D9AB1DF05A57A91D425935B6E DUP6 MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x80 DUP2 MSTORE PUSH2 0x5739 DUP2 PUSH2 0x598 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE KECCAK256 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x575E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x696E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH2 0x57A3 DUP3 DUP3 PUSH2 0x594E JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH1 0x5 DUP6 LT ISZERO PUSH2 0x2E43 JUMPI PUSH2 0x441 SWAP5 ISZERO SWAP4 DUP5 PUSH2 0x5851 JUMPI JUMPDEST POP DUP4 ISZERO PUSH2 0x57CB JUMPI JUMPDEST POP POP POP PUSH2 0x5757 JUMP JUMPDEST PUSH0 SWAP3 SWAP4 POP SWAP1 DUP3 SWAP2 PUSH1 0x40 MLOAD PUSH2 0x5803 DUP2 PUSH2 0x3A29 PUSH1 0x20 DUP3 ADD SWAP5 PUSH4 0xB135D3F PUSH1 0xE1 SHL SWAP10 DUP11 DUP8 MSTORE PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 DUP4 ADD SWAP1 PUSH2 0x1E2C JUMP JUMPDEST MLOAD SWAP2 GAS STATICCALL SWAP1 PUSH2 0x5810 PUSH2 0x3416 JUMP JUMPDEST DUP3 PUSH2 0x5843 JUMPI JUMPDEST DUP3 PUSH2 0x5826 JUMPI JUMPDEST POP POP PUSH0 DUP1 DUP1 PUSH2 0x57C3 JUMP JUMPDEST PUSH2 0x583B SWAP2 SWAP3 POP PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x4583 JUMP JUMPDEST EQ PUSH0 DUP1 PUSH2 0x581C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP3 MLOAD LT ISZERO SWAP2 PUSH2 0x5816 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ SWAP4 POP PUSH0 PUSH2 0x57BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58BE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5880 DUP3 PUSH2 0x5CE JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 SWAP6 DUP7 DUP6 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP8 DUP7 ADD MSTORE DUP7 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL PUSH2 0x55B8 PUSH2 0x3416 JUMP JUMPDEST DUP1 MLOAD DUP3 DUP2 ISZERO SWAP2 DUP3 ISZERO PUSH2 0x592E JUMPI JUMPDEST POP POP SWAP1 POP ISZERO PUSH2 0x58D7 JUMPI POP JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 DUP1 SWAP3 SWAP4 POP ADD SUB SLT PUSH2 0x3D3 JUMPI DUP2 ADD MLOAD PUSH2 0x5946 DUP2 PUSH2 0xB2E JUMP JUMPDEST DUP1 DUP3 PUSH0 PUSH2 0x58CB JUMP JUMPDEST SWAP1 PUSH1 0x41 DUP2 MLOAD EQ PUSH0 EQ PUSH2 0x5976 JUMPI PUSH2 0x3405 SWAP2 PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH0 BYTE SWAP1 PUSH2 0x5A10 JUMP JUMPDEST POP POP PUSH0 SWAP1 PUSH1 0x2 SWAP1 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x59E1 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x5993 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x599C JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x59F4 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH2 0xE51 SWAP1 PUSH1 0x4 DUP4 ADD PUSH2 0x34A3 JUMP JUMPDEST PUSH16 0xA2A8918CA85BAFE22016D0B997E4DF60 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 GT PUSH2 0x5A76 JUMPI PUSH1 0x20 SWAP4 PUSH0 SWAP4 PUSH1 0xFF PUSH1 0x80 SWAP5 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x2253 JUMPI PUSH0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x5A6E JUMPI SWAP1 PUSH0 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP POP PUSH0 SWAP1 PUSH1 0x3 SWAP1 JUMP INVALID LOG1 0x23 0xDC 0x29 0xAE 0xBF PUSH30 0xC3322C8EEB5B999E859F39937950ED31056532713D0DE396F4910FDFA16 INVALID 0xD3 0x26 0xE 0xD0 0xE7 EQ PUSH32 0x7CC6DA11A60208B5B9406D12A635614FFD9143571749EDF1D5C9599318CDBC4E 0x28 0xA6 SELFBALANCE 0x5D PUSH6 0xE87FD3B2DDBE 0x1E SWAP11 DUP14 0x5E PUSH27 0xF0FF746756E6374696F6E206D7573742062652063616C6C656420 PUSH21 0x68726F75676820360894A13BA1A3210667C828492D 0xB9 DUP14 0xCA RETURNDATACOPY KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCAFC4DF6845A4AB948B4928 STOP 0xD3 0xD8 LOG2 0x5D MSTORE8 DUP11 LT 0x2A 0x2B 0xC0 PUSH29 0xD01F1CFA097FDDCFF68BE0079C531659141344CD1FD0A4F28419497F97 0x22 LOG3 0xDA 0xAF 0xE3 0xB4 XOR PUSH16 0x6B6457E0BC7CD75A20EE27FD9ADEBAB3 KECCAK256 COINBASE 0xF7 SSTORE 0x21 0x4D 0xBC PUSH12 0xFFA90CC0225B39DA2E5C2D3B 0xE SDIV DUP16 SDIV 0xB7 EXTCODECOPY PUSH3 0xEE6832 SWAP14 0x2C PUSH8 0xC067AAAE9A06503C 0xC3 MOD CALLDATACOPY DUP14 EQ 0x4D 0xF ADD PUSH24 0x882B152EB71524AEF34D838AB76573C14B1EBFA5E385D9AB 0x29 0xD7 0xCF MSTORE8 SWAP9 0xDA LOG2 NUMBER DUP12 0xD9 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 0xE5 0x49 0x1F 0x22 0xAD 0xCF SWAP8 CODECOPY SLT MULMOD 0x4D 0xC 0xA5 0xBB SLT SWAP4 0xC5 DUP7 DUP6 0xC4 NOT LOG4 SWAP12 0xD6 COINBASE 0xB2 0xDE CALLDATALOAD 0xFC CREATE 0x4B PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"251:5569:32:-:0;;;;;;;;;-1:-1:-1;251:5569:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;251:5569:32;;;;;;;;8088:42:27;251:5569:32;;;;;-1:-1:-1;;;;;251:5569:32;;:::o;:::-;-1:-1:-1;;;;;251:5569:32;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;251:5569:32;;;;;;:::o;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;;;;251:5569:32;;;;;;;:::o;:::-;99935:21:27;251:5569:32;;;;;-1:-1:-1;;;;;251:5569:32;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;251:5569:32;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;251:5569:32;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;251:5569:32;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;251:5569:32;;;;;;;:::o;:::-;;;;;-1:-1:-1;;251:5569:32;;;;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;;;;;251:5569:32;;;;;;-1:-1:-1;;251:5569:32;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;251:5569:32;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;-1:-1:-1;;;;;251:5569:32;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;251:5569:32;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;65863:836:27;251:5569:32;;;;;;:::i;:::-;;;;;;;;;;65863:836:27;;:::i;251:5569:32:-;;-1:-1:-1;;251:5569:32;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;251:5569:32;;;;;;;;;:::i;:::-;;;;;:::o;:::-;25055:7:27;251:5569:32;;;:::i;:::-;2471:103:7;;;;;;;;;;:::i;:::-;17815:43:27;251:5569:32;17824:14:27;251:5569:32;;;;17823:15:27;17815:43;:::i;:::-;24876:10;25055:7;:::i;:::-;1787:1:7;3053:22;251:5569:32;;;;;;;;-1:-1:-1;;251:5569:32;;;;;;;;;;;;;;;;;-1:-1:-1;;251:5569:32;;;;;;7550:50:27;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;251:5569:32;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;69866:1492:27;251:5569:32;;;;;;:::i;:::-;69866:1492:27;;:::i;251:5569:32:-;;;;;;-1:-1:-1;;251:5569:32;;;;19835:10:27;251:5569:32;;;;;:::i;:::-;1303:62:0;;:::i;:::-;2471:103:7;;:::i;:::-;19835:10:27;:::i;251:5569:32:-;;;;;;-1:-1:-1;;251:5569:32;;;;;;1131:18;251:5569;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;251:5569:32;;;;;;;;;:::i;:::-;;;;20460:61:27;251:5569:32;;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;2471:103:7;;:::i;:::-;251:5569:32;;;;;;;;-1:-1:-1;251:5569:32;20382:20:27;251:5569:32;;;-1:-1:-1;251:5569:32;;-1:-1:-1;251:5569:32;;;;-1:-1:-1;251:5569:32;;;;;;;;;;;;;;;;;;;;;20460:61:27;1787:1:7;3053:22;251:5569:32;;;;;;;;-1:-1:-1;;251:5569:32;;;;;2924:11;251:5569;;;;;;;;;;;;;-1:-1:-1;;251:5569:32;;;;;;;-1:-1:-1;;;;;;;;;;;251:5569:32;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;251:5569:32;;;;;;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;:::i;:::-;2471:103:7;;:::i;:::-;17917:37:27;251:5569:32;17926:11:27;251:5569:32;;;;17925:12:27;17917:37;:::i;:::-;58352:29;;;;;:::i;:::-;251:5569:32;2924:11;251:5569;;;58352:49:27;;:93;;;251:5569:32;58348:152:27;;58927:5;251:5569:32;;58635:26:27;251:5569:32;;;;:::i;:::-;58635:26:27;:::i;:::-;58750:19;58696:22;58557:318;58750:19;251:5569:32;58750:19:27;;;:::i;:::-;58799:17;;;;;;:::i;:::-;251:5569:32;;;;;:::i;:::-;;;;;;:::i;:::-;;;;58557:318:27;;251:5569:32;58696:22:27;251:5569:32;;58557:318:27;;251:5569:32;58557:318:27;;;;:::i;:::-;251:5569:32;;;:::i;:::-;58557:318:27;;;251:5569:32;;;58557:318:27;;;251:5569:32;58915:10:27;58927:5;;:::i;:::-;2536:1:7;1787;3053:22;251:5569:32;2873:209:7;58348:152:27;251:5569:32;;-1:-1:-1;;;58468:21:27;;251:5569:32;;58468:21:27;58352:93;58405:26;;251:5569:32;58405:26:27;;;:::i;:::-;-1:-1:-1;;;;;251:5569:32;58435:10:27;58405:40;;58352:93;;251:5569:32;;;;;;-1:-1:-1;;251:5569:32;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1898:6:6;251:5569:32;;;;1873:80:6;1889:4;1881:23;;;1873:80;:::i;:::-;1963:87;-1:-1:-1;;;;;;;;;;;251:5569:32;;;;;1971:30:6;1963:87;:::i;:::-;1303:62:0;;:::i;:::-;251:5569:32;;;;;;:::i;:::-;-1:-1:-1;251:5569:32;;-1:-1:-1;;;;;;;;;;;251:5569:32;;;971:66:3;;;3330:17;;;;;;:::i;3232:526::-;251:5569:32;;;;;;;;;;;;;;;3383:63:3;;251:5569:32;;3383:63:3;;-1:-1:-1;;3383:63:3;;;3232:526;-1:-1:-1;3379:302:3;;251:5569:32;;-1:-1:-1;;;3610:56:3;;251:5569:32;3610:56:3;251:5569:32;3610:56:3;;;:::i;:::-;;;;3379:302;3737:9;3496:28;3488:82;3496:28;;3488:82;:::i;:::-;3737:9;:::i;3383:63::-;;;;;251:5569:32;3383:63:3;251:5569:32;3383:63:3;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;251:5569:32;;;;;;-1:-1:-1;;251:5569:32;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;251:5569:32;;;;;48452:1866:27;251:5569:32;;;;;;:::i;:::-;;;;;;;;;;;;;;;;48452:1866:27;;:::i;251:5569:32:-;;;;;;-1:-1:-1;;251:5569:32;;;;;;;;1303:62:0;;:::i;:::-;2471:103:7;;:::i;:::-;21341:11:27;251:5569:32;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;;;;;:::i;:::-;21430:28:27;;251:5569:32;21430:28:27;;251:5569:32;;;21543:65:27;-1:-1:-1;21543:65:27;;251:5569:32;3053:22:7;251:5569:32;;;;;;;;;;;;;;;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;251:5569:32;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;45948:204:27;251:5569:32;;;;;;;;;:::i;:::-;2471:103:7;;;;;:::i;:::-;45509:231:27;45598:9;;;;;;:::i;:::-;251:5569:32;;;;;;:::i;:::-;;;;;;:::i;:::-;45509:231:27;;;:::i;:::-;251:5569:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;45948:204:27;;;1787:1:7;3053:22;251:5569:32;;;;;-1:-1:-1;;251:5569:32;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1898:6:6;251:5569:32;;;;;1873:80:6;1889:4;1881:23;;;1873:80;:::i;:::-;1963:87;-1:-1:-1;;;;;;;;;;;251:5569:32;;;;;1971:30:6;1963:87;:::i;:::-;1303:62:0;;:::i;:::-;-1:-1:-1;;;;;;;;;;;251:5569:32;;;971:66:3;;;3330:17;;;;;;:::i;3232:526::-;3383:63;251:5569:32;;;;;;;;;;;;;;3383:63:3;;251:5569:32;;3383:63:3;;;;;;;3232:526;-1:-1:-1;3379:302:3;;251:5569:32;;-1:-1:-1;;;3610:56:3;;251:5569:32;3610:56:3;251:5569:32;3610:56:3;;;:::i;3379:302::-;3737:9;3496:28;3488:82;3496:28;;3488:82;:::i;:::-;3737:9;:::i;3383:63::-;;;;;;;;;;;;;;;:::i;:::-;;;;;251:5569:32;-1:-1:-1;;;;;251:5569:32;;;;;39482:20:27;251:5569:32;;;;;;:::o;:::-;;;63494:12:27;251:5569:32;;;;;;:::o;:::-;;;90291:21:27;251:5569:32;;;;;;:::o;:::-;;;;;;-1:-1:-1;;251:5569:32;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;251:5569:32;4190:72:27;251:5569:32;;;-1:-1:-1;251:5569:32;;;-1:-1:-1;251:5569:32;;;;;;-1:-1:-1;251:5569:32;;;;;;;;;;;;-1:-1:-1;;;;;251:5569:32;;;:::o;:::-;;;;;;-1:-1:-1;;251:5569:32;;;;2838:31:27;251:5569:32;;;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;;;;-1:-1:-1;;251:5569:32;;;;2333:6:6;-1:-1:-1;;;;;251:5569:32;2324:4:6;2316:23;251:5569:32;;;;-1:-1:-1;;;;;;;;;;;251:5569:32;;;;;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;-1:-1:-1;;251:5569:32;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;251:5569:32;;;;;27361:7:27;251:5569:32;;;;;;:::i;:::-;2471:103:7;;;:::i;:::-;17815:43:27;251:5569:32;17824:14:27;251:5569:32;;;;17823:15:27;17815:43;:::i;:::-;251:5569:32;;;;;27361:7:27;;:::i;251:5569:32:-;;;;;;-1:-1:-1;;251:5569:32;;;;;;;;7851:46:27;251:5569:32;;;;;;;;;;-1:-1:-1;;251:5569:32;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;52413:1971:27;251:5569:32;;;;;;:::i;:::-;;;;;;;;;;;;;;;;52413:1971:27;;:::i;251:5569:32:-;;;;;;-1:-1:-1;;251:5569:32;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;251:5569:32;2786:12;251:5569;;;-1:-1:-1;251:5569:32;;-1:-1:-1;251:5569:32;;;;;;;;-1:-1:-1;;251:5569:32;;;;;;3914:26:27;251:5569:32;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;3302:13:5;251:5569:32;;;;;;;3301:14:5;;251:5569:32;;3301:14:5;;;3347:34;;251:5569:32;3346:108:5;;;;251:5569:32;;;;;3636:1:5;3536:16;;;251:5569:32;;;3302:13:5;251:5569:32;;;3302:13:5;251:5569:32;;3536:16:5;3562:65;;3636:1;:::i;:::-;3647:99;;251:5569:32;3647:99:5;3681:21;251:5569:32;;3302:13:5;251:5569:32;;3302:13:5;251:5569:32;;3681:21:5;251:5569:32;;3551:1:5;251:5569:32;;3721:14:5;;251:5569:32;;3721:14:5;251:5569:32;3562:65:5;3596:20;251:5569:32;;;3302:13:5;251:5569:32;;;3302:13:5;251:5569:32;;3596:20:5;3636:1;:::i;251:5569:32:-;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;3346:108:5;3426:4;1713:19:11;:23;;-1:-1:-1;1713:23:11;3387:66:5;;3346:108;;;;;3387:66;3452:1;251:5569:32;;;;3436:17:5;3387:66;;;3347:34;3380:1;251:5569:32;;;3365:16:5;;-1:-1:-1;3347:34:5;;251:5569:32;;;;;;-1:-1:-1;;251:5569:32;;;;1303:62:0;;:::i;:::-;2758:6;251:5569:32;;-1:-1:-1;;;;;;251:5569:32;;;;;;;-1:-1:-1;;;;;251:5569:32;-1:-1:-1;;;;;;;;;;;251:5569:32;;2806:40:0;251:5569:32;;;;;;;-1:-1:-1;;251:5569:32;;;;18790:21:27;251:5569:32;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;2471:103:7;;:::i;:::-;18753:22:27;251:5569:32;;-1:-1:-1;;;;251:5569:32;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;18790:21:27;1787:1:7;3053:22;251:5569:32;;;;;;;;-1:-1:-1;;251:5569:32;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2089:18;251:5569;;;;;;:::i;:::-;;;;;;;2089:18;;:::i;251:5569::-;;;-1:-1:-1;;251:5569:32;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;251:5569:32;;;;;38783:4925:27;251:5569:32;;;;;;:::i;:::-;;;;;;;;;;;;38783:4925:27;;:::i;251:5569:32:-;;;;;;-1:-1:-1;;251:5569:32;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;33253:1008:27;251:5569:32;;;;;;:::i;:::-;33253:1008:27;;:::i;251:5569:32:-;;;;;;-1:-1:-1;;251:5569:32;;;;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1507:15;251:5569;;;;;;:::i;:::-;;;;;;1507:15;:::i;251:5569::-;;;;;;-1:-1:-1;;251:5569:32;;;;;;1303:62:0;;:::i;:::-;2471:103:7;;:::i;:::-;22562:25:27;;;:::i;:::-;251:5569:32;;;;-1:-1:-1;251:5569:32;;;;;22602:39:27;-1:-1:-1;22602:39:27;;251:5569:32;3053:22:7;251:5569:32;;;;;;-1:-1:-1;251:5569:32;-1:-1:-1;251:5569:32;;;-1:-1:-1;251:5569:32;;;;;;;-1:-1:-1;;251:5569:32;;;;1513:6:0;251:5569:32;;;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;;17292:8:27;17072:36;17252:17;251:5569:32;;;:::i;:::-;;;;5366:69:5;251:5569:32;5374:13:5;251:5569:32;;;;5366:69:5;:::i;:::-;17072:36:27;:::i;:::-;251:5569:32;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;251:5569:32;;5366:69:5;251:5569:32;5374:13:5;251:5569:32;;;;5366:69:5;;;:::i;:::-;;:::i;:::-;251:5569:32;2092:22:35;;251:5569:32;;2148:25:35;;251:5569:32;2183:25:35;251:5569:32;2218:31:35;251:5569:32;1042:67:6;;:::i;:::-;1868:111:7;;:::i;:::-;17252:17:27;:::i;251:5569:32:-;;;;;;-1:-1:-1;;251:5569:32;;;;;;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;:::i;:::-;2471:103:7;;:::i;:::-;17917:37:27;251:5569:32;17926:11:27;251:5569:32;;;;17925:12:27;17917:37;:::i;:::-;63224:29;;;;;;;:::i;:::-;2924:11:32;251:5569;;;;;;;63224:49:27;;63220:119;;63352:22;;;;;;;;:::i;:::-;251:5569:32;63352:41:27;63348:75;;63454:26;251:5569:32;;;;:::i;63454:26:27:-;63494:23;;;;:::i;:::-;251:5569:32;63490:92:27;;63592:63;:23;63671:455;63592:23;;:::i;:::-;63626:28;251:5569:32;;;63592:63:27;63671:455;63704:20;;;;;:::i;:::-;63738:21;;;;;;:::i;:::-;63881:19;63950:29;63914:22;63881:19;;;;;:::i;:::-;63914:22;;:::i;:::-;63950:29;;:::i;:::-;63993:26;;;;;:::i;:::-;64033:19;;;:::i;:::-;64066;;251:5569:32;64066:19:27;;;:::i;:::-;64099:17;;;;;;;:::i;:::-;251:5569:32;;;63993:26:27;251:5569:32;;;;;63844:23:27;251:5569:32;63844:23:27;;251:5569:32;63808:22:27;63773:21;63808:22;;;251:5569:32;63773:21:27;;251:5569:32;63671:455:27;;;:::i;:::-;;;;2536:1:7;1787;3053:22;251:5569:32;2873:209:7;63490:92:27;251:5569:32;;-1:-1:-1;;;63558:24:27;;251:5569:32;;63558:24:27;63348:75;251:5569:32;;-1:-1:-1;;;63402:21:27;;251:5569:32;;63402:21:27;63220:119;251:5569:32;;-1:-1:-1;;;63296:32:27;;251:5569:32;;63296:32:27;251:5569:32;;;;;;-1:-1:-1;;251:5569:32;;;;19272:18:27;251:5569:32;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;2471:103:7;;:::i;:::-;19238:19:27;251:5569:32;;-1:-1:-1;;;;251:5569:32;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;19272:18:27;1787:1:7;3053:22;251:5569:32;;;;;;;;-1:-1:-1;;251:5569:32;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;251:5569:32;;;;;;3800:30:27;251:5569:32;;;;;;;;;;;;;;;;-1:-1:-1;;251:5569:32;;;;;;;-1:-1:-1;;;;;;;;;;;251:5569:32;;;;;;;;;;;;;;;;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;251:5569:32;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;251:5569:32;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;251:5569:32;;;;;;;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;:::i;:::-;757:24:36;;;;:::i;:::-;840:13;-1:-1:-1;855:15:36;;;;;;251:5569:32;;;;;;;:::i;872:3:36:-;-1:-1:-1;1571:7:36;;;;;;:::i;:::-;251:5569:32;;;;;;;;;;;:::i;:::-;1544:35:36;1552:4;;1544:35;;;;;:::i;:::-;1648:8;;1644:359;;2017:19;;251:5569:32;2017:19:36;;;;;:::i;:::-;;;;;;:::i;:::-;;251:5569:32;840:13:36;;1644:359;251:5569:32;;1776:2:36;251:5569:32;;1760:18:36;1756:32;;1959:28;1859:76;;1952:36;1859:76;;251:5569:32;1959:28:36;;;;;;;;;:::i;:::-;251:5569:32;;-1:-1:-1;;;1952:36:36;;251:5569:32;;;1952:36:36;;;:::i;251:5569:32:-;;;-1:-1:-1;;251:5569:32;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;-1:-1:-1;;;;;251:5569:32;;;;;25055:7:27;251:5569:32;;;;;;:::i;:::-;;;2924:11;251:5569;;2471:103:7;;;:::i;:::-;17815:43:27;251:5569:32;17824:14:27;251:5569:32;;;;17823:15:27;17815:43;:::i;:::-;251:5569:32;;;;;24876:10:27;;25055:7;:::i;251:5569:32:-;;;;;;-1:-1:-1;;251:5569:32;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;;;-1:-1:-1;;251:5569:32;;;;;;;;;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;2471:103:7;;;;;:::i;:::-;251:5569:32;;;;;-1:-1:-1;;251:5569:32;;;;;;69257:4:27;251:5569:32;69088:54:27;251:5569:32;;;;;;;;;;;:::i;:::-;68452:21:27;;251:5569:32;68452:21:27;;;251:5569:32;;:::i;:::-;68452:21:27;:::i;:::-;68699:378;68777:26;;;:::i;:::-;68902:19;251:5569:32;;;68902:19:27;;251:5569:32;;:::i;:::-;68951:17:27;;;;;251:5569:32;;;:::i;:::-;;;;;68699:378:27;;251:5569:32;68838:32:27;251:5569:32;;68699:378:27;;251:5569:32;;68699:378:27;;;:::i;:::-;68452:21;68699:378;;251:5569:32;-1:-1:-1;68699:378:27;;;251:5569:32;;;;:::i;:::-;69088:54:27;;;:::i;:::-;69257:4;:::i;251:5569:32:-;;;;:::i;:::-;2471:103:7;;;;;;;;:::i;:::-;251:5569:32;17824:14:27;251:5569:32;17815:43:27;251:5569:32;;;;;17823:15:27;17815:43;:::i;:::-;251:5569:32;;;4661:18;;;;;:::i;:::-;-1:-1:-1;;;;;4948:18:32;251:5569;;;;4948:18;;251:5569;;4925:42;;;;:59;;251:5569;4921:601;;;5008:9;5000:28;5008:9;;:19;5000:28;:::i;:::-;5042:48;;;;;-1:-1:-1;251:5569:32;;;;;;;;;;;5042:48;;5008:9;5042:48;;;;;;;;-1:-1:-1;;;;;;;;;;;5042:48:32;5538:273;5042:48;;;4921:601;;;5586:9;;:::i;:::-;251:5569;;;5770:10;;;;5538:273;;;:::i;:::-;;;;2536:1:7;1787;3053:22;251:5569:32;2873:209:7;5042:48:32;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;4921:601::-;-1:-1:-1;;;;;;;;;;;5508:4:32;;5538:273;5508:4;;5515:6;5508:4;;5488:10;;5515:6;;:::i;:::-;4921:601;;4925:59;4971:9;;:13;;4925:59;;251:5569;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;251:5569:32;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;-1:-1:-1;;251:5569:32;;;;;;;;;;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;2330:10;251:5569;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;2330:10;;:::i;251:5569::-;;;;;;-1:-1:-1;;251:5569:32;;;;;;-1:-1:-1;251:5569:32;6318:47:27;251:5569:32;;;;-1:-1:-1;251:5569:32;;;;;;;;;;;;;;-1:-1:-1;;251:5569:32;;;;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;60239:1329:27;251:5569:32;;;;;;:::i;:::-;;;;;;;;;60239:1329:27;;:::i;251:5569:32:-;;;;;;-1:-1:-1;;251:5569:32;;;;;;;10312:16:27;251:5569:32;;;;;;;;;-1:-1:-1;;251:5569:32;;;;;;3885:23:27;251:5569:32;;;;;;;;;;;;;;;;;;-1:-1:-1;;251:5569:32;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;-1:-1:-1;;251:5569:32;;;;19579:19:27;251:5569:32;;;;;:::i;:::-;1303:62:0;;:::i;:::-;2471:103:7;;:::i;251:5569:32:-;;;;;;-1:-1:-1;;251:5569:32;;;;3021:22:27;251:5569:32;;;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;-1:-1:-1;;251:5569:32;;;;;;-1:-1:-1;;;;;251:5569:32;;;;-1:-1:-1;251:5569:32;;;;;;;;:::i;:::-;2471:103:7;;:::i;:::-;251:5569:32;2607:44;;;;2634:9;2615:4;2607:44;;;;:::i;:::-;251:5569;;;;1787:1:7;3053:22;251:5569:32;;;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;21341:11:27;251:5569:32;;;;;;;-1:-1:-1;251:5569:32;;;-1:-1:-1;251:5569:32;;;;;-1:-1:-1;251:5569:32;:::o;:::-;;:::i;:::-;;;;;;-1:-1:-1;;251:5569:32;;;;;;4039:31:27;251:5569:32;4039:31:27;;;;;;251:5569:32;4039:31:27;;:::i;:::-;251:5569:32;4039:31:27;251:5569:32;;4039:31:27;;251:5569:32;;;;;;;;;;;;;;;;;-1:-1:-1;;251:5569:32;;;;;;3601:19;251:5569;;;;;;;;-1:-1:-1;;251:5569:32;;;;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;-1:-1:-1;;;;;251:5569:32;;2402:22:0;251:5569:32;;2496:8:0;;;:::i;251:5569:32:-;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;-1:-1:-1;;251:5569:32;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;;;;251:5569:32;;;;;27361:7:27;251:5569:32;;;;;;:::i;:::-;;;2924:11;251:5569;;2471:103:7;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;66312:16:27;;;:::i;:::-;66497:9;;:::i;:::-;251:5569:32;;;;:::i;:::-;77997:476:27;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;251:5569:32;77997:476:27;;;251:5569:32;77997:476:27;;;251:5569:32;;;77997:476:27;;;251:5569:32;;;77997:476:27;;;251:5569:32;;;77997:476:27;;;;251:5569:32;;;;77997:476:27;;;;;;251:5569:32;;;:::i;:::-;;;;77997:476:27;77961:888;;251:5569:32;77997:476:27;251:5569:32;;77997:476:27;77961:888;;77997:476;251:5569:32;;77997:476:27;77961:888;;;;;;:::i;:::-;77997:476;77961:888;;251:5569:32;77997:476:27;;77961:888;;251:5569:32;-1:-1:-1;;;77997:476:27;77961:888;;251:5569:32;-1:-1:-1;;77997:476:27;77961:888;;251:5569:32;78739:4:27;77961:888;;;251:5569:32;77961:888:27;;251:5569:32;78900:20:27;;78886:35;;;:::i;:::-;251:5569:32;;78978:5:27;;;;:::i;:::-;79351:26;;;:::i;:::-;79756:17;;;:::i;:::-;2536:1:7;1787;3053:22;251:5569:32;2873:209:7;251:5569:32;;;;:::o;:::-;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;2471:103:7;;;;:::i;:::-;70113:32:27;;;251:5569:32;70113:32:27;251:5569:32;;;;:::i;70113:32:27:-;70161:25;;;251:5569:32;;;70190:9:27;;:::i;:::-;70161:38;70157:67;;70490:85;70489:86;70267:25;;70520:28;70267:25;;;:::i;:::-;70520:28;;251:5569:32;70490:85:27;:::i;:::-;70489:86;;251:5569:32;70489:86:27;70485:131;;70657:24;;71005:346;70657:24;;251:5569:32;70657:24:27;251:5569:32;;;;;;;;70657:24:27;;:::i;:::-;71005:346;251:5569:32;;;;;;;70817:31:27;70946:33;70817:31;;;;;;251:5569:32;;;;;;;;;;;;:::i;:::-;70946:33:27;;;;;;;;;:::i;:::-;251:5569:32;;;71129:31:27;;251:5569:32;;;;;;;;;;:::i;:::-;71284:33:27;;251:5569:32;;;70817:31:27;251:5569:32;;;;;;;71331:10:27;;71005:346;;;:::i;:::-;;;;2536:1:7;1787;3053:22;251:5569:32;2873:209:7;70485:131:27;251:5569:32;;-1:-1:-1;;;70596:20:27;;;;;70157:67;251:5569:32;;-1:-1:-1;;;70208:16:27;;;;;251:5569:32;;;;;;;;;;;;;;;-1:-1:-1;251:5569:32;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;251:5569:32;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;251:5569:32;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;251:5569:32;;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;251:5569:32;;;;-1:-1:-1;;;251:5569:32;;;;;;;2471:103:7;;;;;;;;;;;;;:::i;:::-;17926:11:27;251:5569:32;;;;;17925:12:27;17917:37;;;:::i;:::-;49693:9;;:::i;:::-;251:5569:32;;;;:::i;:::-;49284:467:27;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;251:5569:32;49284:467:27;;;251:5569:32;49284:467:27;;;251:5569:32;;;49284:467:27;;;251:5569:32;;;;;;49284:467:27;;251:5569:32;49284:467:27;;;;;;;;251:5569:32;;;;;;49284:467:27;;;;;;;251:5569:32;;;:::i;:::-;;;;-1:-1:-1;49284:467:27;49248:867;;251:5569:32;;;;;;;;49284:467:27;49248:867;;251:5569:32;49248:867:27;;49284:467;49248:867;;;:::i;:::-;49284:467;49248:867;;251:5569:32;49284:467:27;49248:867;;251:5569:32;49284:467:27;49248:867;;251:5569:32;;49248:867:27;;251:5569:32;49248:867:27;;-1:-1:-1;251:5569:32;;49248:867:27;;-1:-1:-1;251:5569:32;;50166:20:27;;50152:35;;;:::i;:::-;251:5569:32;;50226:26:27;;;:::i;251:5569:32:-;;;;;;;;;;;;;-1:-1:-1;251:5569:32;;;;;;;;-1:-1:-1;;251:5569:32;;;;:::o;2471:103:7:-;;;;;;;;;;;;;;;;;:::i;:::-;17926:11:27;251:5569:32;;;;;17925:12:27;17917:37;;;:::i;:::-;53494:9;;:::i;:::-;251:5569:32;;;:::i;:::-;53085:467:27;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;251:5569:32;53085:467:27;;;251:5569:32;;;53085:467:27;;;251:5569:32;;;53085:467:27;;;251:5569:32;;;;53085:467:27;;251:5569:32;;;;53085:467:27;;;;251:5569:32;;;;53085:467:27;;;;;;251:5569:32;;;:::i;:::-;;;;-1:-1:-1;53085:467:27;53049:888;;251:5569:32;;;;;;;53085:467:27;53049:888;;251:5569:32;;;53049:888:27;251:5569:32;53085:467:27;53049:888;;;;;:::i;:::-;;;53085:467;53049:888;;251:5569:32;53085:467:27;53049:888;251:5569:32;53085:467:27;53049:888;;251:5569:32;;53049:888:27;;251:5569:32;53049:888:27;;-1:-1:-1;251:5569:32;;53049:888:27;;-1:-1:-1;251:5569:32;;53988:20:27;;53974:35;;;:::i;:::-;251:5569:32;;54226:18:27;;;:::i;251:5569:32:-;;;;;;;;;;;;;;-1:-1:-1;251:5569:32;;;:::o;:::-;;:::i;741:327::-;17292:8:27;741:327:32;;17072:36:27;17252:17;741:327:32;5366:69:5;251:5569:32;5374:13:5;251:5569:32;;;;5366:69:5;;;:::i;:::-;1195:12:0;929:10:12;1195:12:0;:::i;:::-;5366:69:5;251:5569:32;5374:13:5;251:5569:32;;;;5366:69:5;:::i;17292:8:27:-;991:29:32;1005:15;991:29;251:5569;;2471:103:7;;;;;;;;;;;;;;;;;:::i;:::-;17815:43:27;251:5569:32;17824:14:27;251:5569:32;;;;17823:15:27;17815:43;:::i;:::-;39481:53;39482:52;;:32;;;;:::i;:::-;251:5569:32;;;;;;;;;;39482:52:27;251:5569:32;;;;;39481:53:27;39477:81;;2924:11:32;251:5569;;;;;40277:28:27;251:5569:32;;;;40277:28:27;;:::i;:::-;40308:22;;251:5569:32;-1:-1:-1;40273:89:27;;251:5569:32;;;;41020:26:27;;;;:77;;;;;2471:103:7;41016:111:27;;;;;251:5569:32;;;;;;;;;;;;;;41498:56:27;;;;41494:441;;2471:103:7;42421:18:27;;;;;251:5569:32;;;;42399:41:27;;;:58;;;2471:103:7;42395:824:27;;;42477:9;;;:24;42473:70;;42557:48;;;;;-1:-1:-1;42557:48:27;251:5569:32;;;;;;;;;;42557:48:27;;42477:9;42557:48;;;;;;;;;42395:824;;;17824:14;251:5569:32;;;;;43489:18:27;;;;;:::i;:::-;;;;:::i;:::-;251:5569:32;;;;;;;;43234:467:27;;;;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;43234:467:27;;2536:1:7;1787;3053:22;251:5569:32;2873:209:7;42557:48:27;;;;;;:::i;:::-;;;;42473:70;251:5569:32;;-1:-1:-1;;;42510:33:27;;;;;42395:824;43052:9;;;43048:60;;43189:4;43196:11;43189:4;;43169:10;;43196:11;;:::i;:::-;42395:824;;42399:58;42444:9;;:13;;42399:58;;41494:441;41718:30;41714:68;;41854:33;41850:74;;41494:441;;;;;41850:74;251:5569:32;;-1:-1:-1;;;41896:28:27;;;;;41714:68;251:5569:32;;-1:-1:-1;;;41757:25:27;;;;;41016:111;251:5569:32;;-1:-1:-1;;;41106:21:27;;;;;41020:77;41065:32;41079:18;;;;251:5569:32;41065:32:27;;:::i;:::-;-1:-1:-1;41020:77:27;;;;;40273:89;251:5569:32;;-1:-1:-1;;;40339:23:27;;;;;39477:81;251:5569:32;;-1:-1:-1;;;39543:15:27;;;;;251:5569:32;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;17072:36:27;251:5569:32;;-1:-1:-1;;;;251:5569:32;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;:::o;:::-;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2471:103:7:-;251:5569:32;2471:103:7;251:5569:32;34051:203:27;2471:103:7;;;;;;:::i;:::-;33813:18:27;251:5569:32;;;;;;33531:36:27;33523:77;33570:6;33531:36;;;:::i;:::-;:45;33523:77;:::i;:::-;33698:9;;;:::i;:::-;33813:18;;;:::i;:::-;251:5569:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;34051:203:27;;;1787:1:7;3053:22;251:5569:32;2471:103:7:o;251:5569:32:-;;;;:::o;:::-;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3310:230::-;3491:8;251:5569;3491:13;;;71760::27;;3310:230:32;:::o;251:5569::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;251:5569:32;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;251:5569:32;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2471:103:7:-;;;;;;;;:::i;:::-;17917:37:27;251:5569:32;17926:11:27;251:5569:32;;;;17925:12:27;17917:37;:::i;:::-;60713:29;;;;;:::i;:::-;251:5569:32;2924:11;251:5569;;;60713:49:27;;:93;;;2471:103:7;60709:152:27;;251:5569:32;;;;:::i;:::-;60996:26:27;;;:::i;:::-;251:5569:32;;;:::i;:::-;;;;;;:::i;:::-;;;60918:309:27;;;251:5569:32;60918:309:27;;;251:5569:32;;;60918:309:27;;;;;;:::i;:::-;251:5569:32;;;;;:::i;:::-;60918:309:27;;;251:5569:32;60918:309:27;;;251:5569:32;61281:19:27;;;:::i;:::-;61314;;;;;;:::i;:::-;251:5569:32;;;;;;:::i;:::-;;;;;;;:::i;:::-;61347:23:27;251:5569:32;61347:23:27;251:5569:32;61238:265:27;;;;:::i;:::-;61543:10;61555:5;;;:::i;60713:93::-;60766:26;;;;;;:::i;:::-;-1:-1:-1;;;;;251:5569:32;60796:10:27;60766:40;;60713:93;;2580:287:7;1830:1;2712:7;251:5569:32;2712:19:7;1830:1;;;2712:7;251:5569:32;2580:287:7:o;1830:1::-;251:5569:32;;-1:-1:-1;;;1830:1:7;;;;;;;;;;;251:5569:32;1830:1:7;251:5569:32;;;1830:1:7;;;;2948:109:32;251:5569;;-1:-1:-1;;;;;251:5569:32;;;;;3025:25;;251:5569;;3025:25;2948:109::o;251:5569::-;;;;:::o;:::-;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;72171:3967:27:-;;;;;;;;;72495:80;72503:53;;:33;;;;:::i;:53::-;72495:80;:::i;:::-;251:5569:32;;72683:29:27;72675:70;72715:6;72683:29;;;:::i;72675:70::-;72755:56;-1:-1:-1;;;72763:27:27;;;72755:56;:::i;:::-;2924:11:32;251:5569;;73461:94:27;73469:33;251:5569:32;;;;;73469:33:27;;:::i;:::-;73506:22;;251:5569:32;-1:-1:-1;73469:59:27;73461:94;:::i;:::-;73677:18;251:5569:32;;;;;73677:18:27;;;;;:::i;:::-;-1:-1:-1;;;;;251:5569:32;73964:18:27;251:5569:32;;;;;;73941:42:27;;;;:59;;72171:3967;73937:632;;;74024:9;74016:59;74024:9;;:19;74016:59;:::i;:::-;74089:48;;;;;-1:-1:-1;74089:48:27;251:5569:32;;;;;;;;;;74089:48:27;;74024:9;74089:48;;;;;;;-1:-1:-1;;;;;;;;;;;74089:48:27;74585:1546;74089:48;75137:45;74089:48;;;73937:632;;;75137:45;;:::i;:::-;251:5569:32;;;;;;;;;74585:1546:27;;;:::i;:::-;;;;72171:3967::o;74089:48::-;;;;;;:::i;:::-;;;;73937:632;74585:1546;74555:4;;-1:-1:-1;;;;;;;;;;;74555:4:27;74562:6;74555:4;75137:45;74555:4;;74535:10;;74562:6;;:::i;:::-;73937:632;;73941:59;73987:9;;:13;;73941:59;;1299:264:26;1494:62;1299:264;;251:5569:32;;1536:18:26;;251:5569:32;1536:18:26;;;251:5569:32;1536:18:26;251:5569:32;;;;;;;;1536:18:26;251:5569:32;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;251:5569:32;;;;;;;;;;;;;;;-1:-1:-1;;251:5569:32;;;;;;:::i;:::-;1536:18:26;251:5569:32;;1536:18:26;;;;;;:::i;:::-;251:5569:32;1526:29:26;;1494:62;;:::i;80775:469:27:-;80887:25;81014:24;80775:469;80887:25;:::i;:::-;81014:24;;251:5569:32;;;;;;-1:-1:-1;251:5569:32;;;;3384:1:26;251:5569:32;;-1:-1:-1;251:5569:32;;;;;3422:18:26;;;;:26;80990:85:27;;-1:-1:-1;251:5569:32;;;;-1:-1:-1;251:5569:32;;;;3907:56:26;251:5569:32;;80775:469:27:o;80990:85::-;251:5569:32;;-1:-1:-1;;;81056:19:27;;;;;251:5569:32;;;;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;:::o;76144:1154:27:-;;;;;;;251:5569:32;;;;76403:46:27;76399:78;;251:5569:32;;76744:13:27;-1:-1:-1;76759:10:27;;;;;;77098:18;;;;;77094:198;;76739:199;76144:1154;;;;:::o;77094:198::-;251:5569:32;77171:14:27;;77206:75;77171:14;;;:::i;:::-;77206:75;251:5569:32;;;;;;;;;;;;;77270:10:27;;77206:75;;;:::i;:::-;;;;77094:198;;;;;;76771:3;76807:16;;251:5569:32;76807:16:27;;;:::i;:::-;251:5569:32;76841:10:27;76837:90;;76771:3;;251:5569:32;76744:13:27;;76837:90;76920:6;76900:18;;;;;;:::i;:::-;251:5569:32;-1:-1:-1;;;;;251:5569:32;;;76900:18:27;251:5569:32;;;;;;;76920:6:27;:::i;:::-;76837:90;;;76399:78;251:5569:32;;-1:-1:-1;;;76458:19:27;;;;;80048:191;-1:-1:-1;;;;;251:5569:32;80116:24:27;;251:5569:32;;80175:20:27;251:5569:32;;-1:-1:-1;;;;;;251:5569:32;;;;;80210:22:27;-1:-1:-1;;80210:22:27;80048:191::o;251:5569:32:-;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;87786:153:27:-;87921:9;;:::i;:::-;87899:32;251:5569:32;;87899:32:27;;251:5569:32;87899:32:27;;;251:5569:32;;;;;;;;;:::i;:::-;;;;;;87899:32:27;251:5569:32;;87899:32:27;;;;;;:::i;:::-;251:5569:32;87889:43:27;;87786:153;:::o;251:5569:32:-;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;97697:5398:27:-;97879:20;;97914:22;;;;251:5569:32;;;;;;;;;;2924:11;251:5569;;;97914:41:27;97910:75;;98016:24;;;251:5569:32;98834:28:27;98784:38;;;:::i;:::-;251:5569:32;98784:79:27;:167;;98834:28;98784:167;;99617:17;99582:23;;;:::i;:::-;251:5569:32;99582:53:27;99578:79;;99667:23;;;:::i;:::-;99617:17;251:5569:32;;99901:20:27;;;251:5569:32;;;;:::i;:::-;99935:21:27;;;251:5569:32;;;;:::i;:::-;99970:21:27;;;;251:5569:32;100005:22:27;;;;;251:5569:32;100041:31:27;;99970:21;100041:31;;251:5569:32;100086:23:27;;;;251:5569:32;100123:19:27;;;;251:5569:32;;;;;;;;;;;;100192:29:27;;;251:5569:32;;;100235:26:27;;;;251:5569:32;;;;:::i;:::-;;;;;;;:::i;:::-;100329:19:27;98016:24;100329:19;;251:5569:32;;;;:::i;:::-;100362:17:27;;;;100455:31;99901:20;100455:31;;251:5569:32;;;;:::i;:::-;100520:29:27;99935:21;100520:29;;;100588:34;100235:26;100588:34;251:5569:32;;;;:::i;:::-;100393:280:27;;;;;:::i;:::-;98016:24;100393:280;;251:5569:32;100235:26:27;100393:280;;251:5569:32;100393:280:27;;99901:20;100393:280;;;:::i;:::-;100235:26;251:5569:32;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;99874:809:27;;251:5569:32;99874:809:27;:::i;:::-;;-1:-1:-1;;;;;;;;;;;99874:809:27;;99901:20;100455:31;;251:5569:32;;;;:::i;:::-;-1:-1:-1;;;;;251:5569:32;;;101246:10:27;:29;;;:44;;98784:167;101242:57;;99935:21;251:5569:32;99935:21:27;;251:5569:32;;:::i;:::-;100235:26:27;100588:34;;251:5569:32;100588:34:27;;251:5569:32;;99935:21:27;;-1:-1:-1;;;;;251:5569:32;;;;;;;;101539:18:27;251:5569:32;101516:42:27;;251:5569:32;;102199:4:27;102206:12;102199:4;;101246:10;;102206:12;;:::i;:::-;102287;;;;:::i;:::-;100520:29;102770;1713:19:11;;:23;;102813:57:27;;;101512:1218;102809:280;;97697:5398;;;;:::o;102809:280::-;102886:192;;;;;;251:5569:32;98604:361:27;251:5569:32;;100235:26:27;251:5569:32;;;;;;;;;;;102886:192:27;;101246:10;102886:192;;;;;:::i;:::-;;;;;;;;;;;102809:280;;;;;;102886:192;;;;;;:::i;:::-;;;;102813:57;251:5569:32;;;102845:25:27;;102813:57;;101512:1218;102613:12;101246:10;;102613:12;;:::i;:::-;101512:1218;;101246:44;;98834:28;101246:44;;99578:79;251:5569:32;;-1:-1:-1;;;99644:13:27;;;;;98784:167;98604:361;98784:167;;;97697:5398;;251:5569:32;97879:20:27;;97914:22;;;251:5569:32;;;;;;;;;2924:11;251:5569;;;97914:41:27;97910:75;;98016:24;;;251:5569:32;98629:17:27;99582:23;;;:::i;:::-;251:5569:32;99582:53:27;99578:79;;99667:23;;;:::i;:::-;99617:17;251:5569:32;;99901:20:27;;;251:5569:32;;;;:::i;:::-;99935:21:27;;;251:5569:32;;;;:::i;:::-;99970:21:27;;;;251:5569:32;100005:22:27;;;;251:5569:32;100041:31:27;;99970:21;100041:31;;251:5569:32;100086:23:27;;;;;251:5569:32;100123:19:27;;;;251:5569:32;;;;;;;;;;;;100192:29:27;;;251:5569:32;;;100235:26:27;;;251:5569:32;;;;:::i;:::-;;;;;;;:::i;:::-;100329:19:27;98016:24;100329:19;;251:5569:32;;;;:::i;:::-;100362:17:27;;;;100455:31;99901:20;100455:31;;251:5569:32;;;;:::i;:::-;100520:29:27;99935:21;100520:29;;;100588:34;100235:26;100588:34;251:5569:32;;;;:::i;:::-;100393:280:27;;;;;:::i;:::-;98016:24;100393:280;;251:5569:32;100235:26:27;100393:280;;251:5569:32;98629:17:27;99901:20;100393:280;;251:5569:32;100235:26:27;251:5569:32;;;;;;99874:809:27;;;;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;99874:809:27;251:5569:32;99874:809:27;;99901:20;100455:31;;251:5569:32;;;;:::i;:::-;-1:-1:-1;;;;;251:5569:32;;;;;;;;101246:10:27;:29;;;:44;;97697:5398;101242:57;;99935:21;251:5569:32;99935:21:27;;251:5569:32;;:::i;:::-;100588:34:27;100235:26;100588:34;;251:5569:32;;;;;;101539:18:27;;251:5569:32;101516:42:27;;101512:1218;251:5569:32;;;102114:105:27;99935:21;102114:105;;;;;101512:1218;102287:12;;;;;:::i;:::-;100520:29;102770;1713:19:11;;:23;;102813:57:27;;;101512:1218;102809:280;;101512:1218;97697:5398;;;;;;:::o;102809:280::-;102886:192;;;;;251:5569:32;102886:192:27;251:5569:32;;100235:26:27;251:5569:32;;;;;;;;;;;102886:192:27;;101246:10;102886:192;;;;;:::i;:::-;;;;;;;;;;;102809:280;;;;;;;;102886:192;;;;;;:::i;:::-;;;;;251:5569:32;;;102813:57:27;251:5569:32;;;102845:25:27;;102813:57;;102114:105;102206:12;102199:4;;101246:10;;102206:12;;:::i;:::-;102114:105;;;;101512:1218;99935:21;102519:200;;;;102706:12;102519:200;;251:5569:32;102706:12:27;;:::i;:::-;101512:1218;;101242:57;101292:7;;;;;;;:::o;101246:44::-;;251:5569:32;101246:44:27;;97697:5398;;;97879:20;;97914:22;;;;251:5569:32;;;;;;;;;;2924:11;251:5569;;;97914:41:27;97910:75;;98016:24;;;251:5569:32;98604:361:27;;;;98629:17;98604:361;;99617:17;99582:23;;;:::i;:::-;251:5569:32;99582:53:27;99578:79;;99667:23;;;:::i;:::-;99617:17;251:5569:32;;99901:20:27;;;251:5569:32;;;;:::i;:::-;99935:21:27;;;251:5569:32;;;;:::i;:::-;99970:21:27;;;;251:5569:32;100005:22:27;;;;;251:5569:32;100041:31:27;;99970:21;100041:31;;251:5569:32;100086:23:27;;;;251:5569:32;100123:19:27;;;;251:5569:32;;;;;;;;;;;;100192:29:27;;;251:5569:32;;;100235:26:27;;;;251:5569:32;;;;:::i;:::-;;;;;;;:::i;:::-;100329:19:27;98016:24;100329:19;;251:5569:32;;;;:::i;:::-;100362:17:27;;;;100455:31;99901:20;100455:31;;251:5569:32;;;;:::i;:::-;100520:29:27;99935:21;100520:29;;;100588:34;100235:26;100588:34;251:5569:32;;;;:::i;:::-;100393:280:27;;;;;:::i;:::-;98016:24;100393:280;;251:5569:32;100235:26:27;100393:280;;251:5569:32;100393:280:27;;99901:20;100393:280;;;:::i;:::-;100235:26;251:5569:32;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;99874:809:27;;251:5569:32;99874:809:27;:::i;:::-;;-1:-1:-1;;;;;;;;;;;99874:809:27;;99901:20;100455:31;;251:5569:32;;;;:::i;:::-;;-1:-1:-1;;;;;251:5569:32;;;101246:10:27;:29;;;:44;;98604:361;101242:57;;251:5569:32;99935:21:27;;;;251:5569:32;;:::i;:::-;100235:26:27;100588:34;;251:5569:32;100588:34:27;;251:5569:32;;-1:-1:-1;;;;;251:5569:32;;;;;;;;101539:18:27;251:5569:32;101516:42:27;;251:5569:32;;102118:11:27;;102114:105;;101512:1218;102287:12;;;;;:::i;102114:105::-;102206:12;102199:4;;101246:10;;102206:12;;:::i;:::-;102114:105;;;;101512:1218;102523:11;;;102613:12;101246:10;;102613:12;;:::i;102519:200::-;102706:12;;;:::i;101242:57::-;101292:7;;;;;:::o;101246:44::-;101279:11;;;101246:44;;98604:361;98834:28;98784:38;;;:::i;:::-;251:5569:32;98784:79:27;:167;;98834:28;98784:167;98604:361;;;98784:167;-1:-1:-1;98784:167:27;;971:66:3;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;251:5569:32;;-1:-1:-1;;;971:66:3;;;;;;;;;;;251:5569:32;971:66:3;251:5569:32;;;971:66:3;-1:-1:-1;;;971:66:3;;;;;;;;;;;;;;;;;251:5569:32;971:66:3;251:5569:32;;;971:66:3;-1:-1:-1;;;971:66:3;;;;;;:::o;251:5569:32:-;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;87623:157:27:-;251:5569:32;;87751:21:27;;251:5569:32;87751:21:27;;;251:5569:32;87751:21:27;251:5569:32;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;251:5569:32;;-1:-1:-1;;;;;251:5569:32;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;;-1:-1:-1;;;;;251:5569:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;89297:8220:27:-;;89439:20;;89808:35;;;;89847:6;89772:190;89847:6;251:5569:32;89793:51:27;;251:5569:32;;;;;;;;;;;;89793:51:27;;:::i;:::-;:60;:131;;;;89297:8220;89772:190;;:::i;:::-;89981:16;;;89973:66;8181:4;;;251:5569:32;;89981:37:27;;89973:66;:::i;:::-;90313:24;;;251:5569:32;90283:91:27;90291:47;251:5569:32;;90291:47:27;:::i;:::-;251:5569:32;;;-1:-1:-1;90283:91:27;:::i;:::-;90974:30;;;251:5569:32;;;91019:26:27;90939:155;90974:30;91019:26;;251:5569:32;91019:64:27;251:5569:32;;;;;;;;;;;;;91019:64:27;;:::i;:::-;90939:155;;:::i;:::-;91235:21;91227:59;91235:21;;;91227:59;:::i;:::-;91507:66;251:5569:32;;91526:47:27;251:5569:32;;91526:47:27;:::i;:::-;251:5569:32;91507:66:27;;:::i;:::-;91587:42;;;91583:115;;89297:8220;251:5569:32;92102:64:27;92035:141;251:5569:32;;;92035:141:27;251:5569:32;;;;;;;;;;;;;92035:141:27;;;:::i;:::-;92280:34;;;;251:5569:32;;92280:39:27;92276:1272;;89297:8220;94187:31;;;;;;251:5569:32;94222:20:27;;;:39;94187:31;94222:39;;251:5569:32;94187:74:27;94292:66;;;;;89297:8220;94292:93;;;;;;89297:8220;94271:163;;;:::i;:::-;94769:47;251:5569:32;;94769:47:27;:::i;:::-;:68;251:5569:32;;;94769:68:27;:::i;:::-;251:5569:32;;89981:16:27;95346:31;;251:5569:32;;;;;:::i;:::-;;-1:-1:-1;;;;;251:5569:32;95332:10:27;251:5569:32;;;95332:45:27;;:73;;89297:8220;95328:103;;95529:26;89808:35;251:5569:32;95529:26:27;;251:5569:32;;;;;;;:::i;:::-;;;95567:18:27;251:5569:32;;95529:57:27;;251:5569:32;;96147:23:27;;;96146:24;251:5569:32;96147:23:27;;;251:5569:32;;;;;96146:24:27;96142:149;;95525:1536;96375:12;251:5569:32;96333:40:27;251:5569:32;;;;:::i;:::-;96333:40:27;:::i;:::-;96375:12;:::i;:::-;251:5569:32;;:::i;:::-;1713:19:11;;;:23;;97075:88:27;;;95525:1536;97071:440;;95525:1536;89297:8220;;;;;;;:::o;97071:440::-;251:5569:32;97344:47:27;251:5569:32;97457:29:27;251:5569:32;;;;;:::i;:::-;;;97344:47:27;:::i;:::-;251:5569:32;;;-1:-1:-1;97344:67:27;97457:29;;;97179:321;;;;;;-1:-1:-1;251:5569:32;;97179:321:27;89808:35;251:5569:32;;;;;;;;;;;97179:321:27;;95332:10;97179:321;;;;;:::i;:::-;;;;;;;;;;;97071:440;;;;;;;;;97179:321;;;;;;:::i;:::-;;;;97075:88;97123:29;;;;;251:5569:32;97123:40:27;;97075:88;;96142:149;96278:12;251:5569:32;96188:45:27;251:5569:32;;;;:::i;96188:45:27:-;96271:4;95332:10;;96278:12;;:::i;:::-;96142:149;;95525:1536;96611:24;251:5569:32;96612:23:27;;;251:5569:32;;;;;96611:24:27;96612:23;;;251:5569:32;96822:12:27;251:5569:32;;96653:45:27;251:5569:32;;;;:::i;96653:45:27:-;251:5569:32;;;;:::i;:::-;95332:10:27;;96822:12;;:::i;:::-;95525:1536;;96607:443;97020:12;;;:::i;95328:103::-;95407:24;;;;;;;;:::o;95332:73::-;95382:23;95381:24;251:5569:32;95382:23:27;;;251:5569:32;;;;;95381:24:27;95332:73;;94292:93;94362:23;94271:163;251:5569:32;94362:23:27;;;251:5569:32;;;;;;94292:93:27;;;;:66;89981:16;94310:27;251:5569:32;94310:48:27;;-1:-1:-1;94292:66:27;;;;92276:1272;92684:5;93220:35;93183:73;92684:5;92638:85;93450:87;92684:5;;;;-1:-1:-1;92646:43:27;92638:85;:::i;:::-;92955:86;93001:6;251:5569:32;;92963:44:27;;92955:86;:::i;:::-;251:5569:32;93220:35:27;:::i;:::-;93183:73;;:::i;:::-;251:5569:32;;93458:46:27;;;93450:87;:::i;:::-;92276:1272;;;;;91583:115;91645:42;-1:-1:-1;92102:64:27;91583:115;;89793:131;89888:26;;89873:42;;251:5569:32;89888:26:27;;;251:5569:32;;;;;89873:42:27;:51;89793:131;;;251:5569:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;103159:1179:27:-;;103362:35;;;251:5569:32;;;;;;;;103422:31:27;;;;251:5569:32;;;;:::i;:::-;103476:29:27;;;;;103532:23;;;;;;251:5569:32;;;;;;;;103590:34:27;;;;;251:5569:32;;;;:::i;:::-;103314:321:27;;;;;:::i;:::-;;;;251:5569:32;;;103362:35:27;103314:321;;251:5569:32;;;103422:31:27;103314:321;;251:5569:32;103476:29:27;103314:321;;251:5569:32;103676:20:27;;103422:31;103676:27;251:5569:32;103314:321:27;103739:24;;251:5569:32;103717:47:27;;;:::i;:::-;251:5569:32;103809:31:27;251:5569:32;103809:31:27;;251:5569:32;103854:20:27;;:34;103476:29;103854:34;;251:5569:32;103902:39:27;251:5569:32;103902:39:27;;251:5569:32;103955:34:27;;;;251:5569:32;;;;;;;;104003:37:27;;;251:5569:32;;;104054:30:27;;;251:5569:32;;;104098:37:27;103362:35;104098:37;;251:5569:32;;;;:::i;:::-;;;;;;;:::i;:::-;104217:30:27;103314:321;104217:30;;251:5569:32;;;;:::i;:::-;104261:28:27;;;251:5569:32;103362:35:27;251:5569:32;;;;;;;;;;;;;;104149:10:27;;103651:680;;;;;:::i;:::-;;;;;103159:1179::o;82962:1653::-;;;83912:605;82962:1653;84589:18;82962:1653;;251:5569:32;;;;;84308:25:27;251:5569:32;;;84079:272:27;251:5569:32;;84079:272:27;;251:5569:32;-1:-1:-1;;;;;;;;;;;251:5569:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;84079:272:27;;;;;:::i;:::-;251:5569:32;84052:313:27;;83912:605;:::i;:::-;84589:18;;:::i;81308:1648::-;;;82255:603;81308:1648;82930:18;81308:1648;;251:5569:32;;;;;82649:25:27;251:5569:32;;;82422:270:27;251:5569:32;;82422:270:27;;251:5569:32;-1:-1:-1;;;;;;;;;;;251:5569:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;82422:270:27;;;;;:::i;1599:130:0:-;1513:6;251:5569:32;-1:-1:-1;;;;;251:5569:32;929:10:12;1662:23:0;251:5569:32;;1599:130:0:o;251:5569:32:-;;;;3610:56:3;;;251:5569:32;;;;;;;;;;;;;;;;;;2666:187:0;2758:6;251:5569:32;;-1:-1:-1;;;;;251:5569:32;;;-1:-1:-1;;;;;;251:5569:32;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;2806:40:0;2666:187::o;1421:214:10:-;251:5569:32;;-1:-1:-1;;;1559:68:10;;;;-1:-1:-1;;;;;251:5569:32;;;1559:68:10;;;251:5569:32;;;;;;;;;;;;;;;;;1559:68:10;;;;;;251:5569:32;1559:68:10;:::i;:::-;;:::i;1047:213:25:-;1232:1;1227:6;;1232:1;;1047:213;:::o;1227:15::-;1232:1;251:5569:32;1047:213:25;:::o;5328:125:5:-;5366:69;251:5569:32;5374:13:5;251:5569:32;;;;5366:69:5;:::i;5328:125::-;5366:69;251:5569:32;5374:13:5;251:5569:32;;;;5366:69:5;;;:::i;:::-;1787:1:7;3053:22;251:5569:32;5328:125:5:o;79787:255:27:-;-1:-1:-1;;;;;251:5569:32;79873:33:27;;251:5569:32;;79946:38:27;251:5569:32;;-1:-1:-1;;;;;;251:5569:32;;;;;79999:36:27;-1:-1:-1;;79999:36:27;79787:255::o;251:5569:32:-;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;86624:529:27;;2491:76:26;86624:529:27;87008:97;86624:529;86861:20;;86904:9;;:::i;:::-;2533:32:26;87048:25:27;86948:34;;;;251:5569:32;;;;;;;;:::i;:::-;;;86825:168:27;;;251:5569:32;;;86825:168:27;;;251:5569:32;;;87048:25:27;:::i;:::-;251:5569:32;;;;;2533:32:26;;;251:5569:32;86825:168:27;2533:32:26;;251:5569:32;86825:168:27;251:5569:32;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;2533:32:26;-1:-1:-1;;2533:32:26;;;;;;:::i;87008:97:27:-;87004:142;;86624:529;:::o;87004:142::-;251:5569:32;-1:-1:-1;;;87126:20:27;;;;;86112:506;86335:20;;86390:34;;;;251:5569:32;;;;;;86335:20:27;;251:5569:32;;;;-1:-1:-1;;;;;251:5569:32;;;;;;;;2189:76:26;251:5569:32;86504:25:27;251:5569:32;;;;;86301:134:27;;;251:5569:32;;;86504:25:27;:::i;:::-;251:5569:32;;;2231:32:26;251:5569:32;;2231:32:26;;251:5569:32;86301:134:27;2231:32:26;;251:5569:32;86301:134:27;251:5569:32;;;;;;;;;;;;;:::i;:::-;;;;;;;2231:32:26;251:5569:32;;2231:32:26;;;;;;:::i;2189:76::-;251:5569:32;;;86112:506:27;:::o;251:5569:32:-;;-1:-1:-1;;;251:5569:32;;86301:134:27;251:5569:32;;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;87391:168:27;;87528:4;251:5569:32;-1:-1:-1;251:5569:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;87391:168:27;:::o;1156:154:22:-;;;;2078:13;-1:-1:-1;2073:116:22;2111:3;251:5569:32;;2093:16:22;;;;;2169:8;;;;:::i;:::-;251:5569:32;;9294:5:22;;;;;;-1:-1:-1;9494:119:22;;;251:5569:32;9494:119:22;-1:-1:-1;9494:119:22;9294:51;2111:3;251:5569:32;2078:13:22;;;9294:51;9494:119;-1:-1:-1;9494:119:22;;;251:5569:32;9494:119:22;-1:-1:-1;9494:119:22;9294:51;;2093:16;;;;;1270:33;1156:154;:::o;996:186:10:-;251:5569:32;;-1:-1:-1;;;1116:58:10;;;;-1:-1:-1;;;;;251:5569:32;;;1116:58:10;;;251:5569:32;;;;;;;;;1116:58:10;;;;;;251:5569:32;1116:58:10;:::i;3063:134:32:-;;3159:31;3063:134;3159:31;251:5569;;3159:31;;;;;:::i;:::-;;;;3063:134::o;88076:347:27:-;-1:-1:-1;;;;;251:5569:32;;;;1713:19:11;;:23;88172:24:27;;88238:18;88212:71;88238:18;;;251:5569:32;88212:71:27;:::i;88168:249::-;88314:18;251:5569:32;88314:35:27;;;;;;251:5569:32;;;;;;;;;;;;88314:35:27;;;;;;251:5569:32;88314:35:27;;;;;;;;88168:249;3167:21:34;;;:31;251:5569:32;;88314:35:27;3262::34;;;;;;;;;:::i;:::-;;251:5569:32;;;88076:347:27:o;251:5569:32:-;;;-1:-1:-1;;;251:5569:32;;;88314:35:27;251:5569:32;;;;;;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;-1:-1:-1;;;251:5569:32;;;88314:35:27;251:5569:32;;;;;;;;;;;;;;;;88314:35:27;;;;:::i;:::-;;;;2372:276:3;;2171:17;;;:::i;:::-;-1:-1:-1;;;;;251:5569:32;;-1:-1:-1;;;;;;;;;;;;;2204:27:3;251:5569:32;;2523:15:3;;;:28;;;2372:276;2519:123;;2372:276;;:::o;2519:123::-;7318:69:11;251:5569:32;-1:-1:-1;251:5569:32;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;7276:25:11;;;;;;;;;:::i;:::-;7318:69;;:::i;:::-;;2372:276:3:o;2523:28::-;;-1:-1:-1;2523:28:3;;2372:276;;2171:17;;;:::i;:::-;-1:-1:-1;;;;;251:5569:32;;-1:-1:-1;;;;;;;;;;;2204:27:3;;;251:5569:32;;2523:15:3;;;:28;;;2519:123;;2372:276;;:::o;2523:28::-;;4109:4:6;2523:28:3;;1699:281;1713:19:11;;:23;251:5569:32;;-1:-1:-1;;;;;;;;;;;251:5569:32;;-1:-1:-1;;;;;;251:5569:32;-1:-1:-1;;;;;251:5569:32;;;;;;;;;1699:281:3:o;251:5569:32:-;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;87217:168:27;87328:4;251:5569:32;;;;;;;;;;;;;;;;;-1:-1:-1;251:5569:32;;;;;;;;;;;;;;;;;;;;;87217:168:27;:::o;251:5569:32:-;;;;-1:-1:-1;251:5569:32;;;;;-1:-1:-1;251:5569:32;3630:212:35;8529:231:15;3630:212:35;2624:12;251:5569:32;;2638:15:35;251:5569:32;;;;2601:68:35;;;;251:5569:32;1121:69:35;251:5569:32;;;1121:69:35;;251:5569:32;1121:69:35;;;251:5569:32;1121:69:35;;;251:5569:32;1121:69:35;2601:68;;;;;:::i;:::-;251:5569:32;2591:79:35;;8529:231:15;251:5569:32;8529:231:15;;-1:-1:-1;;;8529:231:15;;;;;;;;;;;3630:212:35;:::o;251:5569:32:-;;;;:::o;:::-;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;;;85080:968:27;;;1184:33:23;;;;:::i;:::-;251:5569:32;;;;;;;;;86004:37:27;1247:35:23;;:58;;;;85080:968:27;1246:127:23;;;;;85080:968:27;86004:37;;;;:::i;1246:127:23:-;-1:-1:-1;251:5569:32;;;;;;;;2014:75:23;;251:5569:32;2014:75:23;;;2037:34;;;;2014:75;;;;;;;251:5569:32;;;;;;;;;;;:::i;2014:75:23:-;1983:116;;;;;;;:::i;:::-;2117:42;;;1246:127;2117:134;;;1246:127;;;;;;;;2117:134;2175:29;251:5569:32;;;2014:75:23;251:5569:32;;;2175:29:23;;;;;;:::i;:::-;:76;2117:134;;;;:42;251:5569:32;;2014:75:23;251:5569:32;;2140:19:23;;2117:42;;;1247:58;-1:-1:-1;;;;;251:5569:32;;;;;1286:19:23;;-1:-1:-1;1247:58:23;;;5328:653:10;251:5569:32;;5546:69:11;;-1:-1:-1;;;;;251:5569:32;;;;:::i;:::-;-1:-1:-1;251:5569:32;;;;;;;;;;;5498:31:11;;;;;;;;;;;:::i;5546:69::-;251:5569:32;;5871:22:10;;;:56;;;;;5328:653;251:5569:32;;;;;;;5328:653:10;:::o;251:5569:32:-;;;;;3610:56:3;;;;251:5569:32;;;;;;;;;;;;;;;;-1:-1:-1;;;251:5569:32;;;;;5871:56:10;5897:30;;;;;;251:5569:32;;;;5897:30:10;;251:5569:32;;;;:::i;:::-;5871:56:10;;;;;2145:730:21;;2283:2;251:5569:32;;2263:22:21;2259:610;2283:2;;;2746:25;2546:180;;;;;;;;;;;;;;-1:-1:-1;2546:180:21;2746:25;;:::i;2259:610::-;2802:56;;2818:1;2802:56;2822:35;2802:56;:::o;7682:628:11:-;;;;7886:418;;;251:5569:32;;;7917:22:11;7913:286;;8212:17;;:::o;7913:286::-;1713:19;:23;251:5569:32;;8212:17:11;:::o;251:5569:32:-;;;-1:-1:-1;;;251:5569:32;;;;;;;;;;;;;;;;;;;;7886:418:11;251:5569:32;;;;-1:-1:-1;8991:21:11;:17;;9163:142;;;;;;;8987:379;251:5569:32;;-1:-1:-1;;;9335:20:11;;251:5569:32;;;9335:20:11;;;;;;:::i;5009:1456:21:-;-1:-1:-1;;;;;6008:79:21;;6004:161;;251:5569:32;;-1:-1:-1;251:5569:32;;;;;;;;;;;;;;;;;;;;;;6276:24:21;;;;;;;;;-1:-1:-1;6276:24:21;-1:-1:-1;;;;;251:5569:32;;6314:20:21;6310:101;;6421:37;-1:-1:-1;5009:1456:21;:::o;6310:101::-;6350:50;-1:-1:-1;6350:50:21;6276:24;6350:50;:::o;6004:161::-;6103:51;;;;6119:1;6103:51;6123:30;6103:51;:::o"},"methodIdentifiers":{"EMPTY_RELAYER()":"6bbbcd2e","EMPTY_REPAYMENT_CHAIN_ID()":"15348e44","INFINITE_FILL_DEADLINE()":"ceb4c987","MAX_TRANSFER_SIZE()":"ddd224f1","SLOW_FILL_MAX_TOKENS_TO_SEND()":"b5e1bf5f","UPDATE_DEPOSIT_DETAILS_HASH()":"a78e4b60","UPDATE_V3_DEPOSIT_DETAILS_HASH()":"2cfc26c5","__SpokePool_init(uint32,address,address)":"979f2bc2","callback(bytes)":"e98a5654","chainId()":"9a8a0592","crossDomainAdmin()":"5285e058","deposit(address,address,uint256,uint256,int64,uint32,bytes,uint256)":"1186ec33","depositFor(address,address,address,uint256,uint256,int64,uint32,bytes,uint256)":"541f4f14","depositForNow(address,address,address,uint256,uint256,int64,bytes,uint256)":"fd7c1054","depositNow(address,address,uint256,uint256,int64,bytes,uint256)":"ae527fbb","depositQuoteTimeBuffer()":"57f6dcb8","depositV2(address,address,uint256,uint256,int64,uint32,bytes,uint256)":"bdcb53a5","depositV3(address,address,address,address,uint256,uint256,uint256,address,uint32,uint32,uint32,bytes)":"7b939232","distributeRelayerRefunds(uint256,uint256,uint256[],uint32,address,address[])":"87c3932d","emergencyDeleteRootBundle(uint256)":"8a7860ce","enabledDepositRoutes(address,uint256)":"5249fef1","executeRelayerRefundLeaf(uint32,(uint256,uint256,uint256[],uint32,address,address[]),bytes32[])":"1b3d5559","executeSlowRelayLeaf(address,address,address,uint256,uint256,int64,int64,uint32,uint32,bytes,int256,bytes32[])":"0c2097f7","executeV3SlowRelayLeaf(((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256,uint256),uint32,bytes32[])":"bbca7db0","fillDeadlineBuffer()":"079bd2c7","fillRelay(address,address,address,uint256,uint256,uint256,uint256,int64,int64,uint32,bytes,uint256)":"44b8be68","fillRelayV3Internal(((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),bytes32,uint256,address,bytes,uint256),address,bool)":"bf40f25b","fillRelayWithUpdatedDeposit(address,address,address,address,uint256,uint256,uint256,uint256,int64,int64,int64,uint32,bytes,bytes,bytes,uint256)":"5ceaec32","fillStatuses(bytes32)":"c35c83fc","fillV3Relay((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256)":"2e378115","fillV3RelayWithUpdatedDeposit((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256,uint256,address,bytes,bytes)":"ccfa5971","getCurrentTime()":"29cb924d","hubPool()":"e1904402","initialize(uint32,address,address)":"647c576c","multicall(bytes[])":"ac9650d8","numberOfDeposits()":"a1244c67","owner()":"8da5cb5b","pauseDeposits(bool)":"738b62e5","pauseFills(bool)":"99cc2968","pausedDeposits()":"6068d6cb","pausedFills()":"dda52113","proxiableUUID()":"52d1902d","relayRootBundle(bytes32,bytes32)":"493a4f84","renounceOwnership()":"715018a6","requestV3SlowFill((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes))":"9963e5a8","rootBundles(uint256)":"ee2a53f8","setChainId(uint256)":"ef0e2ff4","setCrossDomainAdmin(address)":"de7eba78","setCurrentTime(uint256)":"22f8e566","setEnableRoute(address,uint256,bool)":"272751c7","setFillStatus(bytes32,uint8)":"5dd36f9c","setHubPool(address)":"1dfb2d02","speedUpDeposit(address,int64,uint32,address,bytes,bytes)":"7e688bba","speedUpV3Deposit(address,uint32,uint256,address,bytes,bytes)":"4e0fb8f5","transferOwnership(address)":"f2fde38b","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286","verifyUpdateV3DepositMessage(address,uint32,uint256,uint256,address,bytes,bytes)":"74dfa43d","wrappedNativeToken()":"17fcb39b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wrappedNativeTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ClaimedMerkleLeaf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DisabledRoute\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpiredFillDeadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidChainId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidExclusiveRelayer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidExclusivityDeadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFillDeadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMerkleLeaf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMerkleProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPayoutAdjustmentPct\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQuoteTimestamp\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSlowFillRequest\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MsgValueDoesNotMatchInputAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSlowFillsInExclusivityWindow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEOA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotExclusiveRelayer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RelayFilled\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"BridgedToHubPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rootBundleId\",\"type\":\"uint256\"}],\"name\":\"EmergencyDeleteRootBundle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"EnabledDepositRoute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountToReturn\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"refundAmounts\",\"type\":\"uint256[]\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"rootBundleId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"leafId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"l2TokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"refundAddresses\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"ExecutedRelayerRefundRoot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalFilledAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fillAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"realizedLpFeePct\",\"type\":\"int64\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destinationToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"isSlowRelay\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"payoutAdjustmentPct\",\"type\":\"int256\"}],\"indexed\":false,\"internalType\":\"struct SpokePool.RelayExecutionInfo\",\"name\":\"updatableRelayData\",\"type\":\"tuple\"}],\"name\":\"FilledRelay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"updatedOutputAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum V3SpokePoolInterface.FillType\",\"name\":\"fillType\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct V3SpokePoolInterface.V3RelayExecutionEventInfo\",\"name\":\"relayExecutionInfo\",\"type\":\"tuple\"}],\"name\":\"FilledV3Relay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"quoteTimestamp\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"FundsDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"PausedDeposits\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"PausedFills\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"PreLeafExecuteHook\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"rootBundleId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"relayerRefundRoot\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"slowRelayRoot\",\"type\":\"bytes32\"}],\"name\":\"RelayedRootBundle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"newRelayerFeePct\",\"type\":\"int64\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"}],\"name\":\"RequestedSpeedUpDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updatedOutputAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"}],\"name\":\"RequestedSpeedUpV3Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"RequestedV3SlowFill\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newHubPool\",\"type\":\"address\"}],\"name\":\"SetHubPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"SetXDomainAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountToReturn\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"leafId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"l2TokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"TokensBridged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"quoteTimestamp\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"V3FundsDeposited\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"EMPTY_RELAYER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EMPTY_REPAYMENT_CHAIN_ID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INFINITE_FILL_DEADLINE\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TRANSFER_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SLOW_FILL_MAX_TOKENS_TO_SEND\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPDATE_DEPOSIT_DETAILS_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPDATE_V3_DEPOSIT_DETAILS_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_initialDepositId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_crossDomainAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_hubPool\",\"type\":\"address\"}],\"name\":\"__SpokePool_init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"callback\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"crossDomainAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"quoteTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"quoteTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"depositFor\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"depositForNow\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"depositNow\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositQuoteTimeBuffer\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"quoteTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"depositV2\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"quoteTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"depositV3\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountToReturn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"refundAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint32\",\"name\":\"leafId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"l2TokenAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"refundAddresses\",\"type\":\"address[]\"}],\"name\":\"distributeRelayerRefunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rootBundleId\",\"type\":\"uint256\"}],\"name\":\"emergencyDeleteRootBundle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"enabledDepositRoutes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"rootBundleId\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amountToReturn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"refundAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint32\",\"name\":\"leafId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"l2TokenAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"refundAddresses\",\"type\":\"address[]\"}],\"internalType\":\"struct SpokePoolInterface.RelayerRefundLeaf\",\"name\":\"relayerRefundLeaf\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"executeRelayerRefundLeaf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destinationToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"realizedLpFeePct\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"rootBundleId\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"int256\",\"name\":\"payoutAdjustment\",\"type\":\"int256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"executeSlowRelayLeaf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"internalType\":\"struct V3SpokePoolInterface.V3RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedOutputAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct V3SpokePoolInterface.V3SlowFill\",\"name\":\"slowFillLeaf\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"rootBundleId\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"executeV3SlowRelayLeaf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fillDeadlineBuffer\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destinationToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTokensToSend\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"realizedLpFeePct\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"fillRelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"internalType\":\"struct V3SpokePoolInterface.V3RelayData\",\"name\":\"relay\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"relayHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"updatedOutputAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"}],\"internalType\":\"struct V3SpokePoolInterface.V3RelayExecutionParams\",\"name\":\"relayExecution\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isSlowFill\",\"type\":\"bool\"}],\"name\":\"fillRelayV3Internal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destinationToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTokensToSend\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"realizedLpFeePct\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"updatedRelayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"fillRelayWithUpdatedDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"fillStatuses\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"internalType\":\"struct V3SpokePoolInterface.V3RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"}],\"name\":\"fillV3Relay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"internalType\":\"struct V3SpokePoolInterface.V3RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedOutputAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"}],\"name\":\"fillV3RelayWithUpdatedDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hubPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_initialDepositId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_crossDomainAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_hubPool\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfDeposits\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"pause\",\"type\":\"bool\"}],\"name\":\"pauseDeposits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"pause\",\"type\":\"bool\"}],\"name\":\"pauseFills\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pausedDeposits\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pausedFills\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"relayerRefundRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"slowRelayRoot\",\"type\":\"bytes32\"}],\"name\":\"relayRootBundle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"internalType\":\"struct V3SpokePoolInterface.V3RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"name\":\"requestV3SlowFill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rootBundles\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"slowRelayRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"relayerRefundRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"}],\"name\":\"setChainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCrossDomainAdmin\",\"type\":\"address\"}],\"name\":\"setCrossDomainAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setCurrentTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setEnableRoute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"relayHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum V3SpokePoolInterface.FillType\",\"name\":\"fillType\",\"type\":\"uint8\"}],\"name\":\"setFillStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newHubPool\",\"type\":\"address\"}],\"name\":\"setHubPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"updatedRelayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"}],\"name\":\"speedUpDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"updatedOutputAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"}],\"name\":\"speedUpV3Deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedOutputAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"}],\"name\":\"verifyUpdateV3DepositMessage\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrappedNativeToken\",\"outputs\":[{\"internalType\":\"contract WETH9Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"FilledRelay(uint256,uint256,uint256,uint256,uint256,uint256,int64,int64,uint32,address,address,address,address,bytes,(address,bytes,int64,bool,int256))\":{\"custom:audit\":\"FOLLOWING EVENT TO BE DEPRECATED\"},\"FundsDeposited(uint256,uint256,uint256,int64,uint32,uint32,address,address,address,bytes)\":{\"custom:audit\":\"FOLLOWING EVENT TO BE DEPRECATED\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RequestedSpeedUpDeposit(int64,uint32,address,address,bytes,bytes)\":{\"custom:audit\":\"FOLLOWING EVENT TO BE DEPRECATED\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"__SpokePool_init(uint32,address,address)\":{\"params\":{\"_crossDomainAdmin\":\"Cross domain admin to set. Can be changed by admin.\",\"_hubPool\":\"Hub pool address to set. Can be changed by admin.\",\"_initialDepositId\":\"Starting deposit ID. Set to 0 unless this is a re-deployment in order to mitigate relay hash collisions.\"}},\"chainId()\":{\"details\":\"Some L2s like ZKSync don't support the CHAIN_ID opcode so we allow the implementer to override this.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"deposit(address,address,uint256,uint256,int64,uint32,bytes,uint256)\":{\"details\":\"Produces a V3FundsDeposited event with an infinite expiry, meaning that this deposit can never expire. Moreover, the event's outputToken is set to 0x0 meaning that this deposit can always be slow filled.\",\"params\":{\"amount\":\"Amount of tokens to deposit. Will be amount of tokens to receive less fees.\",\"destinationChainId\":\"Denotes network where user will receive funds from SpokePool by a relayer.\",\"message\":\"Arbitrary data that can be used to pass additional information to the recipient along with the tokens. Note: this is intended to be used to pass along instructions for how a contract should use or allocate the tokens.\",\"originToken\":\"Token to lock into this contract to initiate deposit.\",\"quoteTimestamp\":\"Timestamp used by relayers to compute this deposit's realizedLPFeePct which is paid to LP pool on HubPool.\",\"recipient\":\"Address to receive funds at on destination chain.\",\"relayerFeePct\":\"% of deposit amount taken out to incentivize a fast relayer.\"}},\"depositFor(address,address,address,uint256,uint256,int64,uint32,bytes,uint256)\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"depositForNow(address,address,address,uint256,uint256,int64,bytes,uint256)\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"depositNow(address,address,uint256,uint256,int64,bytes,uint256)\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"depositV3(address,address,address,address,uint256,uint256,uint256,address,uint32,uint32,uint32,bytes)\":{\"details\":\"On the destination chain, the hash of the deposit data will be used to uniquely identify this deposit, so modifying any params in it will result in a different hash and a different deposit. The hash will comprise all parameters to this function along with this chain's chainId(). Relayers are only refunded for filling deposits with deposit hashes that map exactly to the one emitted by this contract.\",\"params\":{\"depositor\":\"The account credited with the deposit who can request to \\\"speed up\\\" this deposit by modifying the output amount, recipient, and message.\",\"destinationChainId\":\"The destination chain identifier. Must be enabled along with the input token as a valid deposit route from this spoke pool or this transaction will revert.\",\"exclusiveRelayer\":\"The relayer that will be exclusively allowed to fill this deposit before the exclusivity deadline timestamp. This must be a valid, non-zero address if the exclusivity deadline is greater than the current block.timestamp. If the exclusivity deadline is < currentTime, then this must be address(0), and vice versa if this is address(0).\",\"exclusivityDeadline\":\"The deadline for the exclusive relayer to fill the deposit. After this destination chain timestamp, anyone can fill this deposit on the destination chain. If exclusiveRelayer is set to address(0), then this also must be set to 0, (and vice versa), otherwise this must be set >= current time.\",\"fillDeadline\":\"The deadline for the relayer to fill the deposit. After this destination chain timestamp, the fill will revert on the destination chain. Must be set between [currentTime, currentTime + fillDeadlineBuffer] where currentTime is block.timestamp on this chain or this transaction will revert.\",\"inputAmount\":\"The amount of input tokens to pull from the caller's account and lock into this contract. This amount will be sent to the relayer on their repayment chain of choice as a refund following an optimistic challenge window in the HubPool, less a system fee.\",\"inputToken\":\"The token pulled from the caller's account and locked into this contract to initiate the deposit. The equivalent of this token on the relayer's repayment chain of choice will be sent as a refund. If this is equal to the wrapped native token then the caller can optionally pass in native token as msg.value, as long as msg.value = inputTokenAmount.\",\"message\":\"The message to send to the recipient on the destination chain if the recipient is a contract. If the message is not empty, the recipient contract must implement handleV3AcrossMessage() or the fill will revert.\",\"outputAmount\":\"The amount of output tokens that the relayer will send to the recipient on the destination.\",\"outputToken\":\"The token that the relayer will send to the recipient on the destination chain. Must be an ERC20.\",\"quoteTimestamp\":\"The HubPool timestamp that is used to determine the system fee paid by the depositor.  This must be set to some time between [currentTime - depositQuoteTimeBuffer, currentTime] where currentTime is block.timestamp on this chain or this transaction will revert.\",\"recipient\":\"The account receiving funds on the destination chain. Can be an EOA or a contract. If the output token is the wrapped native token for the chain, then the recipient will receive native token if an EOA or wrapped native token if a contract.\"}},\"emergencyDeleteRootBundle(uint256)\":{\"params\":{\"rootBundleId\":\"Index of the root bundle that needs to be deleted. Note: this is intentionally a uint256 to ensure that a small input range doesn't limit which indices this method is able to reach.\"}},\"executeRelayerRefundLeaf(uint32,(uint256,uint256,uint256[],uint32,address,address[]),bytes32[])\":{\"params\":{\"proof\":\"Inclusion proof for this leaf in relayer refund root in root bundle.\",\"relayerRefundLeaf\":\"Contains all data necessary to reconstruct leaf contained in root bundle and to refund relayer. This data structure is explained in detail in the SpokePoolInterface.\",\"rootBundleId\":\"Unique ID of root bundle containing relayer refund root that this leaf is contained in.\"}},\"executeSlowRelayLeaf(address,address,address,uint256,uint256,int64,int64,uint32,uint32,bytes,int256,bytes32[])\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"executeV3SlowRelayLeaf(((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256,uint256),uint32,bytes32[])\":{\"details\":\"Executing a slow fill leaf is equivalent to filling the relayData so this function cannot be used to double fill a recipient. The relayData that is filled is included in the slowFillLeaf and is hashed like any other fill sent through fillV3Relay().There is no relayer credited with filling this relay since funds are sent directly out of this contract.\",\"params\":{\"proof\":\"Inclusion proof for this leaf in slow relay root in root bundle.\",\"rootBundleId\":\"Unique ID of root bundle containing slow relay root that this leaf is contained in.\",\"slowFillLeaf\":\"Contains all data necessary to uniquely identify a relay for this chain. This struct is hashed and included in a merkle root that is relayed to all spoke pools. - relayData: struct containing all the data needed to identify the original deposit to be slow filled. - chainId: chain identifier where slow fill leaf should be executed. If this doesn't match this chain's chainId, then this function will revert. - updatedOutputAmount: Amount to be sent to recipient out of this contract's balance. Can be set differently from relayData.outputAmount to charge a different fee because this deposit was \\\"slow\\\" filled. Usually, this will be set higher to reimburse the recipient for waiting for the slow fill.\"}},\"fillRelay(address,address,address,uint256,uint256,uint256,uint256,int64,int64,uint32,bytes,uint256)\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"fillRelayWithUpdatedDeposit(address,address,address,address,uint256,uint256,uint256,uint256,int64,int64,int64,uint32,bytes,bytes,bytes,uint256)\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"fillV3Relay((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256)\":{\"details\":\"The fee paid to relayers and the system should be captured in the spread between output amount and input amount when adjusted to be denominated in the input token. A relayer on the destination chain will send outputAmount of outputTokens to the recipient and receive inputTokens on a repayment chain of their choice. Therefore, the fee should account for destination fee transaction costs, the relayer's opportunity cost of capital while they wait to be refunded following an optimistic challenge window in the HubPool, and a system fee charged to relayers.The hash of the relayData will be used to uniquely identify the deposit to fill, so modifying any params in it will result in a different hash and a different deposit. The hash will comprise all parameters passed to depositV3() on the origin chain along with that chain's chainId(). This chain's chainId() must therefore match the destinationChainId passed into depositV3. Relayers are only refunded for filling deposits with deposit hashes that map exactly to the one emitted by the origin SpokePool therefore the relayer should not modify any params in relayData.Cannot fill more than once. Partial fills are not supported.\",\"params\":{\"relayData\":\"struct containing all the data needed to identify the deposit to be filled. Should match all the same-named parameters emitted in the origin chain V3FundsDeposited event. - depositor: The account credited with the deposit who can request to \\\"speed up\\\" this deposit by modifying the output amount, recipient, and message. - recipient The account receiving funds on this chain. Can be an EOA or a contract. If the output token is the wrapped native token for the chain, then the recipient will receive native token if an EOA or wrapped native token if a contract. - inputToken: The token pulled from the caller's account to initiate the deposit. The equivalent of this token on the repayment chain will be sent as a refund to the caller. - outputToken The token that the caller will send to the recipient on the destination chain. Must be an ERC20. - inputAmount: This amount, less a system fee, will be sent to the caller on their repayment chain of choice as a refund following an optimistic challenge window in the HubPool. - outputAmount: The amount of output tokens that the caller will send to the recipient. - originChainId: The origin chain identifier. - exclusiveRelayer The relayer that will be exclusively allowed to fill this deposit before the exclusivity deadline timestamp. - fillDeadline The deadline for the caller to fill the deposit. After this timestamp, the fill will revert on the destination chain. - exclusivityDeadline: The deadline for the exclusive relayer to fill the deposit. After this timestamp, anyone can fill this deposit. - message The message to send to the recipient if the recipient is a contract that implements a handleV3AcrossMessage() public function\",\"repaymentChainId\":\"Chain of SpokePool where relayer wants to be refunded after the challenge window has passed. Will receive inputAmount of the equivalent token to inputToken on the repayment chain.\"}},\"fillV3RelayWithUpdatedDeposit((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256,uint256,address,bytes,bytes)\":{\"details\":\"Subject to same exclusivity deadline rules as fillV3Relay().\",\"params\":{\"depositorSignature\":\"Signed EIP712 hashstruct containing the deposit ID. Should be signed by the depositor account.\",\"relayData\":\"struct containing all the data needed to identify the deposit to be filled. See fillV3Relay().\",\"repaymentChainId\":\"Chain of SpokePool where relayer wants to be refunded after the challenge window has passed. See fillV3Relay().\",\"updatedMessage\":\"New message to use for this deposit.\",\"updatedOutputAmount\":\"New output amount to use for this deposit.\",\"updatedRecipient\":\"New recipient to use for this deposit.\"}},\"getCurrentTime()\":{\"returns\":{\"_0\":\"uint for the current timestamp.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pauseDeposits(bool)\":{\"details\":\"Affects `deposit()` but not `speedUpDeposit()`, so that existing deposits can be sped up and still relayed.\",\"params\":{\"pause\":\"true if the call is meant to pause the system, false if the call is meant to unpause it.\"}},\"pauseFills(bool)\":{\"details\":\"Affects fillRelayWithUpdatedDeposit() and fillRelay().\",\"params\":{\"pause\":\"true if the call is meant to pause the system, false if the call is meant to unpause it.\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"relayRootBundle(bytes32,bytes32)\":{\"params\":{\"relayerRefundRoot\":\"Merkle root containing relayer refund leaves that can be individually executed via executeRelayerRefundLeaf().\",\"slowRelayRoot\":\"Merkle root containing slow relay fulfillment leaves that can be individually executed via executeSlowRelayLeaf().\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"requestV3SlowFill((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes))\":{\"details\":\"Slow fills are not possible unless the input and output tokens are \\\"equivalent\\\", i.e. they route to the same L1 token via PoolRebalanceRoutes.Slow fills are created by inserting slow fill objects into a merkle tree that is included in the next HubPool \\\"root bundle\\\". Once the optimistic challenge window has passed, the HubPool will relay the slow root to this chain via relayRootBundle(). Once the slow root is relayed, the slow fill can be executed by anyone who calls executeV3SlowRelayLeaf().Cannot request a slow fill if the fill deadline has passed.Cannot request a slow fill if the relay has already been filled or a slow fill has already been requested.\",\"params\":{\"relayData\":\"struct containing all the data needed to identify the deposit that should be slow filled. If any of the params are missing or different from the origin chain deposit, then Across will not include a slow fill for the intended deposit.\"}},\"setCrossDomainAdmin(address)\":{\"params\":{\"newCrossDomainAdmin\":\"New cross domain admin.\"}},\"setEnableRoute(address,uint256,bool)\":{\"params\":{\"destinationChainId\":\"Chain ID for where depositor wants to receive funds.\",\"enabled\":\"True to enable deposits, False otherwise.\",\"originToken\":\"Token that depositor can deposit to this contract.\"}},\"setHubPool(address)\":{\"params\":{\"newHubPool\":\"New hub pool.\"}},\"speedUpDeposit(address,int64,uint32,address,bytes,bytes)\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"speedUpV3Deposit(address,uint32,uint256,address,bytes,bytes)\":{\"details\":\"the depositor and depositId must match the params in a V3FundsDeposited event that the depositor wants to speed up. The relayer has the option but not the obligation to use this updated information when filling the deposit via fillV3RelayWithUpdatedDeposit().\",\"params\":{\"depositId\":\"Deposit ID to speed up.\",\"depositor\":\"Depositor that must sign the depositorSignature and was the original depositor.\",\"depositorSignature\":\"Signed EIP712 hashstruct containing the deposit ID. Should be signed by the depositor account. If depositor is a contract, then should implement EIP1271 to sign as a contract. See _verifyUpdateV3DepositMessage() for more details about how this signature should be constructed.\",\"updatedMessage\":\"New message to use for this deposit. Can be modified if the recipient is a contract that expects to receive a message from the relay and for some reason needs to be modified.\",\"updatedOutputAmount\":\"New output amount to use for this deposit. Should be lower than previous value otherwise relayer has no incentive to use this updated value.\",\"updatedRecipient\":\"New recipient to use for this deposit. Can be modified if the recipient is a contract that expects to receive a message from the relay and for some reason needs to be modified.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"MockSpokePool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"__SpokePool_init(uint32,address,address)\":{\"notice\":\"Construct the base SpokePool.\"},\"chainId()\":{\"notice\":\"Returns chain ID for this network.\"},\"deposit(address,address,uint256,uint256,int64,uint32,bytes,uint256)\":{\"notice\":\"Called by user to bridge funds from origin to destination chain. Depositor will effectively lock tokens in this contract and receive a destination token on the destination chain. The origin => destination token mapping is stored on the L1 HubPool.The caller must first approve this contract to spend amount of originToken.The originToken => destinationChainId must be enabled.This method is payable because the caller is able to deposit native token if the originToken is wrappedNativeToken and this function will handle wrapping the native token to wrappedNativeToken.\"},\"depositV3(address,address,address,address,uint256,uint256,uint256,address,uint32,uint32,uint32,bytes)\":{\"notice\":\"Request to bridge input token cross chain to a destination chain and receive a specified amount of output tokens. The fee paid to relayers and the system should be captured in the spread between output amount and input amount when adjusted to be denominated in the input token. A relayer on the destination chain will send outputAmount of outputTokens to the recipient and receive inputTokens on a repayment chain of their choice. Therefore, the fee should account for destination fee transaction costs, the relayer's opportunity cost of capital while they wait to be refunded following an optimistic challenge window in the HubPool, and the system fee that they'll be charged.\"},\"emergencyDeleteRootBundle(uint256)\":{\"notice\":\"This method is intended to only be used in emergencies where a bad root bundle has reached the SpokePool.\"},\"executeRelayerRefundLeaf(uint32,(uint256,uint256,uint256[],uint32,address,address[]),bytes32[])\":{\"notice\":\"Executes a relayer refund leaf stored as part of a root bundle. Will send the relayer the amount they sent to the recipient plus a relayer fee.\"},\"executeV3SlowRelayLeaf(((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256,uint256),uint32,bytes32[])\":{\"notice\":\"Executes a slow relay leaf stored as part of a root bundle relayed by the HubPool.\"},\"fillV3Relay((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256)\":{\"notice\":\"Fulfill request to bridge cross chain by sending specified output tokens to the recipient.\"},\"fillV3RelayWithUpdatedDeposit((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256,uint256,address,bytes,bytes)\":{\"notice\":\"Identical to fillV3Relay except that the relayer wants to use a depositor's updated output amount, recipient, and/or message. The relayer should only use this function if they can supply a message signed by the depositor that contains the fill's matching deposit ID along with updated relay parameters. If the signature can be verified, then this function will emit a FilledV3Event that will be used by the system for refund verification purposes. In otherwords, this function is an alternative way to fill a a deposit than fillV3Relay.\"},\"getCurrentTime()\":{\"notice\":\"Gets the current time.\"},\"pauseDeposits(bool)\":{\"notice\":\"Pauses deposit-related functions. This is intended to be used if this contract is deprecated or when something goes awry.\"},\"pauseFills(bool)\":{\"notice\":\"Pauses fill-related functions. This is intended to be used if this contract is deprecated or when something goes awry.\"},\"relayRootBundle(bytes32,bytes32)\":{\"notice\":\"This method stores a new root bundle in this contract that can be executed to refund relayers, fulfill slow relays, and send funds back to the HubPool on L1. This method can only be called by the admin and is designed to be called as part of a cross-chain message from the HubPool's executeRootBundle method.\"},\"requestV3SlowFill((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes))\":{\"notice\":\"Request Across to send LP funds to this contract to fulfill a slow fill relay for a deposit in the next bundle.\"},\"setCrossDomainAdmin(address)\":{\"notice\":\"Change cross domain admin address. Callable by admin only.\"},\"setEnableRoute(address,uint256,bool)\":{\"notice\":\"Enable/Disable an origin token => destination chain ID route for deposits. Callable by admin only.\"},\"setHubPool(address)\":{\"notice\":\"Change L1 hub pool address. Callable by admin only.\"},\"speedUpV3Deposit(address,uint32,uint256,address,bytes,bytes)\":{\"notice\":\"Depositor can use this function to signal to relayer to use updated output amount, recipient, and/or message.\"}},\"notice\":\"Implements abstract contract for testing.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/MockSpokePool.sol\":\"MockSpokePool\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d\",\"dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce6e5ae4633559c2aad156be884a96f7a9beb8dd31b1b630a6de55972e3af622\",\"dweb:/ipfs/QmQasz4sQoexkrvB7wCQAY6NbMoCtPS7AqomymRoJGYz85\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x23b997be73d3dd46885262704f0f8cfc7273fdadfe303d37969a9561373972b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d03ebe5406134f0c4a017dee625ff615031194493bd1e88504e5c8fae55bc166\",\"dweb:/ipfs/QmUZV5bMbgk2PAkV3coouSeSainHN2jhqaQDJaA7hQRyu2\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c\",\"dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x3af3ca86df39aac39a0514c84459d691434a108d2151c8ce9d69f32e315cab80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77d1f1cf302cd5e1dfbbb4ce3b281b28e8c52942d4319fce43df2e1b6f02a52d\",\"dweb:/ipfs/QmT6ZXStmK3Knhh9BokeVHQ9HXTBZNgL3Eb1ar1cYg1hWy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/MerkleLib.sol\":{\"keccak256\":\"0x8c5c0ae815ea4b121a6afcf163c7b8b0de18212db1228350f89fa5dd0bb54365\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c1eb160f6b614d6721c0ab8e6149ff192cab1768ee266cb1941c5c1a7d304675\",\"dweb:/ipfs/QmYwowK4FzZXwoZS4TvwLQD77Gk66eWKZpg2ETUpXfrN7X\"]},\"contracts/SpokePool.sol\":{\"keccak256\":\"0xff57c2345270680bac0b9e63923771bb18b22cadb068966063186f3484e7dfbf\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d4b378a773e5def3724b183cd1007ff80072736988f7d05490968a4378ec0c8c\",\"dweb:/ipfs/QmQp4rJn1WrDyFAY3xprQN6qzXtKmWfNraVTNmqXY2EWZG\"]},\"contracts/external/interfaces/WETH9Interface.sol\":{\"keccak256\":\"0x3f7892554ec7f54681fdd3cc18a41346c246c9c1afba016c52990ef77741f718\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://76e901f8da798eb2fdef8fd0083a51088103269f08ee751598c5a6eba407785f\",\"dweb:/ipfs/QmcAHbwbwCZd78teaK4cHuAvXq71aWX1r9vTGkSRRBDJV1\"]},\"contracts/interfaces/HubPoolInterface.sol\":{\"keccak256\":\"0xefd509ab379b94004b5767d67971e5c0bda4ca1e9f376b5aea75a0297b5d7bd6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0b7e509e90bcca9b96bf55e92498b17bbb548359c470b17285740080a6c0d9de\",\"dweb:/ipfs/QmdviQBbB58H9HR3tKQepEuYcMKXZthyTThGXUgQDAC828\"]},\"contracts/interfaces/SpokePoolInterface.sol\":{\"keccak256\":\"0x5089df2f8d40f9afad742d059966a34a42fae5dd61ab9274585d303ca4bb6489\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://46f884dee4c3de680f45f66a5b2a34b41423ac818a736d5c108eb334f0fdf411\",\"dweb:/ipfs/QmdNJ2w2CEGkHv2rS4vYKNNdPjZALtCPJf4sQKzRW3ARzd\"]},\"contracts/interfaces/V3SpokePoolInterface.sol\":{\"keccak256\":\"0xdd33112f0dc8f8462307cda7d7753cb9be49cd209b6520abd69273ac015f7ab6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://211c34424710bc8a4ab41bf00bdd9df32e139642a3007a7bbe1e60020f943d2f\",\"dweb:/ipfs/QmYVM5c84V4iqKy734Sjq4TFKMJyJ3cQLHB2Katz1pTBZz\"]},\"contracts/test/MockSpokePool.sol\":{\"keccak256\":\"0x724e68d1f2bc513e8b36c9c224260dfc749bd6d3909c97332217229721314866\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://2ab1434f257e967cab31452ac749b6a1517013fdee96cd376a1b95dc330669d7\",\"dweb:/ipfs/Qmd2c6UZd1RSdZ7c11cfb6rPprXgLxX1B4jsedPfNu7quz\"]},\"contracts/upgradeable/AddressLibUpgradeable.sol\":{\"keccak256\":\"0xa1d6d9ca58e205e006ccc259e5145690677edaa207432d290d5e1b827b5fc689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://395952d23c2b5dee1d77efbbbf42e55dfce42d838b91c72b851786c80e688f5e\",\"dweb:/ipfs/QmQUK3xeSAydtVYRgPmt2FNzXNjbtHmdCVD61mph1tegfg\"]},\"contracts/upgradeable/EIP712CrossChainUpgradeable.sol\":{\"keccak256\":\"0x16181b3f6d12da34b64997235be59ca9e8d189dff99477b0dd828510f1f6e2e6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b4dee85f34d6d6b796943c8ee959abf51b3656d56a24b4f87e4a966aa5f8d4e6\",\"dweb:/ipfs/QmQrc885RFzLDELLHaEm4mPoXKKWw7WumtfwBfkKV5wZxa\"]},\"contracts/upgradeable/MultiCallerUpgradeable.sol\":{\"keccak256\":\"0x5991e43af9a1389be25119b0e38ce974ae5ba9644b0a3833a2ec95d91f792cb9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b64e97cab30636c478421fcdba771f0fdaeaf390d237e311f44ae513215926db\",\"dweb:/ipfs/QmXFDXm8KijimPvnU7V97N1m2H3SUKat7JHFuL7dfTUJtY\"]}},\"version\":1}"}},"contracts/test/MockSpokePoolV2.sol":{"MockSpokePoolV2":{"abi":[{"inputs":[{"internalType":"address","name":"_wrappedNativeTokenAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ClaimedMerkleLeaf","type":"error"},{"inputs":[],"name":"DisabledRoute","type":"error"},{"inputs":[],"name":"ExpiredFillDeadline","type":"error"},{"inputs":[],"name":"InvalidChainId","type":"error"},{"inputs":[],"name":"InvalidExclusiveRelayer","type":"error"},{"inputs":[],"name":"InvalidExclusivityDeadline","type":"error"},{"inputs":[],"name":"InvalidFillDeadline","type":"error"},{"inputs":[],"name":"InvalidMerkleLeaf","type":"error"},{"inputs":[],"name":"InvalidMerkleProof","type":"error"},{"inputs":[],"name":"InvalidPayoutAdjustmentPct","type":"error"},{"inputs":[],"name":"InvalidQuoteTimestamp","type":"error"},{"inputs":[],"name":"InvalidSlowFillRequest","type":"error"},{"inputs":[],"name":"MsgValueDoesNotMatchInputAmount","type":"error"},{"inputs":[],"name":"NoSlowFillsInExclusivityWindow","type":"error"},{"inputs":[],"name":"NotEOA","type":"error"},{"inputs":[],"name":"NotExclusiveRelayer","type":"error"},{"inputs":[],"name":"RelayFilled","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"address","name":"token","type":"address"}],"name":"BridgedToHubPool","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"rootBundleId","type":"uint256"}],"name":"EmergencyDeleteRootBundle","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"originToken","type":"address"},{"indexed":true,"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"enabled","type":"bool"}],"name":"EnabledDepositRoute","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amountToReturn","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"chainId","type":"uint256"},{"indexed":false,"internalType":"uint256[]","name":"refundAmounts","type":"uint256[]"},{"indexed":true,"internalType":"uint32","name":"rootBundleId","type":"uint32"},{"indexed":true,"internalType":"uint32","name":"leafId","type":"uint32"},{"indexed":false,"internalType":"address","name":"l2TokenAddress","type":"address"},{"indexed":false,"internalType":"address[]","name":"refundAddresses","type":"address[]"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"ExecutedRelayerRefundRoot","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalFilledAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fillAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"repaymentChainId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"originChainId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"indexed":false,"internalType":"int64","name":"relayerFeePct","type":"int64"},{"indexed":false,"internalType":"int64","name":"realizedLpFeePct","type":"int64"},{"indexed":true,"internalType":"uint32","name":"depositId","type":"uint32"},{"indexed":false,"internalType":"address","name":"destinationToken","type":"address"},{"indexed":false,"internalType":"address","name":"relayer","type":"address"},{"indexed":true,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"bool","name":"isSlowRelay","type":"bool"},{"internalType":"int256","name":"payoutAdjustmentPct","type":"int256"}],"indexed":false,"internalType":"struct SpokePool.RelayExecutionInfo","name":"updatableRelayData","type":"tuple"}],"name":"FilledRelay","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"inputToken","type":"address"},{"indexed":false,"internalType":"address","name":"outputToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"inputAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outputAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"repaymentChainId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"originChainId","type":"uint256"},{"indexed":true,"internalType":"uint32","name":"depositId","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"indexed":false,"internalType":"address","name":"exclusiveRelayer","type":"address"},{"indexed":true,"internalType":"address","name":"relayer","type":"address"},{"indexed":false,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"},{"components":[{"internalType":"address","name":"updatedRecipient","type":"address"},{"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"internalType":"uint256","name":"updatedOutputAmount","type":"uint256"},{"internalType":"enum V3SpokePoolInterface.FillType","name":"fillType","type":"uint8"}],"indexed":false,"internalType":"struct V3SpokePoolInterface.V3RelayExecutionEventInfo","name":"relayExecutionInfo","type":"tuple"}],"name":"FilledV3Relay","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"originChainId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"indexed":false,"internalType":"int64","name":"relayerFeePct","type":"int64"},{"indexed":true,"internalType":"uint32","name":"depositId","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"quoteTimestamp","type":"uint32"},{"indexed":false,"internalType":"address","name":"originToken","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"}],"name":"FundsDeposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"value","type":"bool"}],"name":"NewEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"isPaused","type":"bool"}],"name":"PausedDeposits","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"isPaused","type":"bool"}],"name":"PausedFills","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"}],"name":"PreLeafExecuteHook","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint32","name":"rootBundleId","type":"uint32"},{"indexed":true,"internalType":"bytes32","name":"relayerRefundRoot","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"slowRelayRoot","type":"bytes32"}],"name":"RelayedRootBundle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"int64","name":"newRelayerFeePct","type":"int64"},{"indexed":true,"internalType":"uint32","name":"depositId","type":"uint32"},{"indexed":true,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"address","name":"updatedRecipient","type":"address"},{"indexed":false,"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"depositorSignature","type":"bytes"}],"name":"RequestedSpeedUpDeposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"updatedOutputAmount","type":"uint256"},{"indexed":true,"internalType":"uint32","name":"depositId","type":"uint32"},{"indexed":true,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"address","name":"updatedRecipient","type":"address"},{"indexed":false,"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"depositorSignature","type":"bytes"}],"name":"RequestedSpeedUpV3Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"inputToken","type":"address"},{"indexed":false,"internalType":"address","name":"outputToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"inputAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outputAmount","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"originChainId","type":"uint256"},{"indexed":true,"internalType":"uint32","name":"depositId","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"indexed":false,"internalType":"address","name":"exclusiveRelayer","type":"address"},{"indexed":false,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"}],"name":"RequestedV3SlowFill","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newHubPool","type":"address"}],"name":"SetHubPool","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newAdmin","type":"address"}],"name":"SetXDomainAdmin","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amountToReturn","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"chainId","type":"uint256"},{"indexed":true,"internalType":"uint32","name":"leafId","type":"uint32"},{"indexed":true,"internalType":"address","name":"l2TokenAddress","type":"address"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"TokensBridged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"inputToken","type":"address"},{"indexed":false,"internalType":"address","name":"outputToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"inputAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outputAmount","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"indexed":true,"internalType":"uint32","name":"depositId","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"quoteTimestamp","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"indexed":true,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"address","name":"exclusiveRelayer","type":"address"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"}],"name":"V3FundsDeposited","type":"event"},{"inputs":[],"name":"EMPTY_RELAYER","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"EMPTY_REPAYMENT_CHAIN_ID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"INFINITE_FILL_DEADLINE","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_TRANSFER_SIZE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SLOW_FILL_MAX_TOKENS_TO_SEND","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPDATE_DEPOSIT_DETAILS_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPDATE_V3_DEPOSIT_DETAILS_HASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_initialDepositId","type":"uint32"},{"internalType":"address","name":"_crossDomainAdmin","type":"address"},{"internalType":"address","name":"_hubPool","type":"address"}],"name":"__SpokePool_init","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"callback","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"chainId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"crossDomainAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"originToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"uint32","name":"quoteTimestamp","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"originToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"uint32","name":"quoteTimestamp","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"depositFor","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"originToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"depositForNow","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"originToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"depositNow","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"depositQuoteTimeBuffer","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"originToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"uint32","name":"quoteTimestamp","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"depositV2","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"inputToken","type":"address"},{"internalType":"address","name":"outputToken","type":"address"},{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256","name":"outputAmount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"address","name":"exclusiveRelayer","type":"address"},{"internalType":"uint32","name":"quoteTimestamp","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"}],"name":"depositV3","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_chainId","type":"uint256"},{"internalType":"uint256","name":"amountToReturn","type":"uint256"},{"internalType":"uint256[]","name":"refundAmounts","type":"uint256[]"},{"internalType":"uint32","name":"leafId","type":"uint32"},{"internalType":"address","name":"l2TokenAddress","type":"address"},{"internalType":"address[]","name":"refundAddresses","type":"address[]"}],"name":"distributeRelayerRefunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"rootBundleId","type":"uint256"}],"name":"emergencyDeleteRootBundle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"emitEvent","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"enabledDepositRoutes","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"rootBundleId","type":"uint32"},{"components":[{"internalType":"uint256","name":"amountToReturn","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"uint256[]","name":"refundAmounts","type":"uint256[]"},{"internalType":"uint32","name":"leafId","type":"uint32"},{"internalType":"address","name":"l2TokenAddress","type":"address"},{"internalType":"address[]","name":"refundAddresses","type":"address[]"}],"internalType":"struct SpokePoolInterface.RelayerRefundLeaf","name":"relayerRefundLeaf","type":"tuple"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"executeRelayerRefundLeaf","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"destinationToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"int64","name":"realizedLpFeePct","type":"int64"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint32","name":"rootBundleId","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"int256","name":"payoutAdjustment","type":"int256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"executeSlowRelayLeaf","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"exclusiveRelayer","type":"address"},{"internalType":"address","name":"inputToken","type":"address"},{"internalType":"address","name":"outputToken","type":"address"},{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256","name":"outputAmount","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"}],"internalType":"struct V3SpokePoolInterface.V3RelayData","name":"relayData","type":"tuple"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"uint256","name":"updatedOutputAmount","type":"uint256"}],"internalType":"struct V3SpokePoolInterface.V3SlowFill","name":"slowFillLeaf","type":"tuple"},{"internalType":"uint32","name":"rootBundleId","type":"uint32"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"executeV3SlowRelayLeaf","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"fillDeadlineBuffer","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"destinationToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"maxTokensToSend","type":"uint256"},{"internalType":"uint256","name":"repaymentChainId","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"int64","name":"realizedLpFeePct","type":"int64"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"fillRelay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"exclusiveRelayer","type":"address"},{"internalType":"address","name":"inputToken","type":"address"},{"internalType":"address","name":"outputToken","type":"address"},{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256","name":"outputAmount","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"}],"internalType":"struct V3SpokePoolInterface.V3RelayData","name":"relay","type":"tuple"},{"internalType":"bytes32","name":"relayHash","type":"bytes32"},{"internalType":"uint256","name":"updatedOutputAmount","type":"uint256"},{"internalType":"address","name":"updatedRecipient","type":"address"},{"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"internalType":"uint256","name":"repaymentChainId","type":"uint256"}],"internalType":"struct V3SpokePoolInterface.V3RelayExecutionParams","name":"relayExecution","type":"tuple"},{"internalType":"address","name":"relayer","type":"address"},{"internalType":"bool","name":"isSlowFill","type":"bool"}],"name":"fillRelayV3Internal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"updatedRecipient","type":"address"},{"internalType":"address","name":"destinationToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"maxTokensToSend","type":"uint256"},{"internalType":"uint256","name":"repaymentChainId","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"int64","name":"realizedLpFeePct","type":"int64"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"int64","name":"updatedRelayerFeePct","type":"int64"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"internalType":"bytes","name":"depositorSignature","type":"bytes"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"fillRelayWithUpdatedDeposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"fillStatuses","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"exclusiveRelayer","type":"address"},{"internalType":"address","name":"inputToken","type":"address"},{"internalType":"address","name":"outputToken","type":"address"},{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256","name":"outputAmount","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"}],"internalType":"struct V3SpokePoolInterface.V3RelayData","name":"relayData","type":"tuple"},{"internalType":"uint256","name":"repaymentChainId","type":"uint256"}],"name":"fillV3Relay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"exclusiveRelayer","type":"address"},{"internalType":"address","name":"inputToken","type":"address"},{"internalType":"address","name":"outputToken","type":"address"},{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256","name":"outputAmount","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"}],"internalType":"struct V3SpokePoolInterface.V3RelayData","name":"relayData","type":"tuple"},{"internalType":"uint256","name":"repaymentChainId","type":"uint256"},{"internalType":"uint256","name":"updatedOutputAmount","type":"uint256"},{"internalType":"address","name":"updatedRecipient","type":"address"},{"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"internalType":"bytes","name":"depositorSignature","type":"bytes"}],"name":"fillV3RelayWithUpdatedDeposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getCurrentTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"hubPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_initialDepositId","type":"uint32"},{"internalType":"address","name":"_crossDomainAdmin","type":"address"},{"internalType":"address","name":"_hubPool","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"numberOfDeposits","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"pause","type":"bool"}],"name":"pauseDeposits","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"pause","type":"bool"}],"name":"pauseFills","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"pausedDeposits","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pausedFills","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_hubPool","type":"address"}],"name":"reinitialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"relayerRefundRoot","type":"bytes32"},{"internalType":"bytes32","name":"slowRelayRoot","type":"bytes32"}],"name":"relayRootBundle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"exclusiveRelayer","type":"address"},{"internalType":"address","name":"inputToken","type":"address"},{"internalType":"address","name":"outputToken","type":"address"},{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256","name":"outputAmount","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"}],"internalType":"struct V3SpokePoolInterface.V3RelayData","name":"relayData","type":"tuple"}],"name":"requestV3SlowFill","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"rootBundles","outputs":[{"internalType":"bytes32","name":"slowRelayRoot","type":"bytes32"},{"internalType":"bytes32","name":"relayerRefundRoot","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_chainId","type":"uint256"}],"name":"setChainId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newCrossDomainAdmin","type":"address"}],"name":"setCrossDomainAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"time","type":"uint256"}],"name":"setCurrentTime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"originToken","type":"address"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"bool","name":"enabled","type":"bool"}],"name":"setEnableRoute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"relayHash","type":"bytes32"},{"internalType":"enum V3SpokePoolInterface.FillType","name":"fillType","type":"uint8"}],"name":"setFillStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newHubPool","type":"address"}],"name":"setHubPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"int64","name":"updatedRelayerFeePct","type":"int64"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"address","name":"updatedRecipient","type":"address"},{"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"internalType":"bytes","name":"depositorSignature","type":"bytes"}],"name":"speedUpDeposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint256","name":"updatedOutputAmount","type":"uint256"},{"internalType":"address","name":"updatedRecipient","type":"address"},{"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"internalType":"bytes","name":"depositorSignature","type":"bytes"}],"name":"speedUpV3Deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"uint256","name":"updatedOutputAmount","type":"uint256"},{"internalType":"address","name":"updatedRecipient","type":"address"},{"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"internalType":"bytes","name":"depositorSignature","type":"bytes"}],"name":"verifyUpdateV3DepositMessage","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[],"name":"wrappedNativeToken","outputs":[{"internalType":"contract WETH9Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"61010034620001aa57601f62005e9338819003918201601f19168301916001600160401b03831184841017620001ae57808492602094604052833981010312620001aa57516001600160a01b03811690819003620001aa573060805260a052610e1060c052617e9060e0525f5460ff8160081c16620001555760ff808216036200011a575b604051615cd09081620001c38239608051818181610da80152818161115c0152611317015260a05181818161092e015281816121710152818161300f015281816139830152818161409601528181614302015281816145a801528181614b910152818161548801526154af015260c05181818161147601528181612fb40152613937015260e051818181610413015261315d0152f35b60ff90811916175f557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a15f62000084565b60405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080604052600436101561001a575b3615610018575f80fd5b005b5f3560e01c8063079bd2c7146103e45780630c2097f7146103df5780631186ec33146103da57806315348e441461036757806317fcb39b146103d55780631b3d5559146103d05780631dfb2d02146103cb57806322f8e566146103c6578063272751c7146103c157806329cb924d146103bc5780632cfc26c5146103b75780632e378115146103b25780633659cfe6146103ad57806344b8be68146103a8578063493a4f84146103a35780634e0fb8f51461039e5780634f1ef286146103995780635249fef1146103945780635285e0581461038f57806352d1902d1461038a578063541f4f141461038557806357f6dcb8146103805780635ceaec321461037b5780635dd36f9c146103765780636068d6cb14610371578063647c576c1461036c5780636bbbcd2e14610367578063715018a614610362578063738b62e51461035d57806374dfa43d146103585780637b0cb839146103535780637b9392321461034e5780637e688bba1461034957806387c3932d146103445780638a7860ce1461033f5780638da5cb5b1461033a578063979f2bc2146103355780639963e5a81461033057806399cc29681461032b5780639a8a059214610326578063a1244c6714610321578063a78e4b601461031c578063ac9650d814610317578063ae527fbb14610312578063b5e1bf5f1461030d578063bbca7db014610308578063bdcb53a514610303578063bf40f25b146102fe578063c35c83fc146102f9578063ccfa5971146102f4578063ceb4c987146102ef578063dda52113146102ea578063ddd224f1146102e5578063de7eba78146102e0578063e1904402146102db578063e98a5654146102d6578063ee2a53f8146102d1578063ef0e2ff4146102cc578063f2fde38b146102c7578063f7e7d1fd146102c25763fd7c10540361000e57612788565b61270f565b61267e565b612664565b612626565b612579565b612550565b612520565b6124f7565b6124d1565b6124b3565b612431565b612406565b612344565b612126565b612020565b611ff6565b611f71565b611e91565b611d91565b611d6a565b611d48565b611cca565b611b26565b611a74565b611a4b565b6119d3565b611962565b6118db565b611832565b6117f5565b611773565b6116f5565b6116ac565b6108ff565b6115f9565b6115a1565b611567565b61149a565b61145a565b6113c7565b611305565b6112dc565b611282565b61111b565b610ffd565b610f4e565b610eb9565b610d81565b610c57565b610c21565b610c03565b610b65565b610b34565b610aff565b610a27565b610919565b6108c3565b6107af565b6103f7565b5f9103126103f357565b5f80fd5b346103f3575f3660031901126103f357602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b6001600160a01b031690565b6001600160a01b038116036103f357565b6004359061046182610443565b565b6024359061046182610443565b6044359061046182610443565b6064359061046182610443565b359061046182610443565b60a435908160070b82036103f357565b60c435908160070b82036103f357565b61010435908160070b82036103f357565b61012435908160070b82036103f357565b61014435908160070b82036103f357565b608435908160070b82036103f357565b63ffffffff8116036103f357565b60e43590610461826104f8565b6101043590610461826104f8565b6101243590610461826104f8565b6101643590610461826104f8565b6101443590610461826104f8565b3590610461826104f8565b634e487b7160e01b5f52604160045260245ffd5b6001600160401b03811161057d57604052565b610556565b606081019081106001600160401b0382111761057d57604052565b608081019081106001600160401b0382111761057d57604052565b60a081019081106001600160401b0382111761057d57604052565b602081019081106001600160401b0382111761057d57604052565b604081019081106001600160401b0382111761057d57604052565b60e081019081106001600160401b0382111761057d57604052565b601f909101601f19168101906001600160401b0382119082101761057d57604052565b6040519060c082016001600160401b0381118382101761057d57604052565b6040519061018082016001600160401b0381118382101761057d57604052565b6040519061014082016001600160401b0381118382101761057d57604052565b604051906104618261059d565b60405190610461826105b8565b6001600160401b03811161057d57601f01601f191660200190565b9291926106e7826106c0565b916106f56040519384610624565b8294818452818301116103f3578281602093845f960137010152565b9080601f830112156103f35781602061072c933591016106db565b90565b6001600160401b03811161057d5760051b60200190565b92916107518261072f565b9161075f6040519384610624565b829481845260208094019160051b81019283116103f357905b8282106107855750505050565b81358152908301908301610778565b9080601f830112156103f35781602061072c93359101610746565b346103f3576101803660031901126103f3576004356107cd81610443565b6107d5610463565b906107de610470565b6107e6610495565b926107ef6104a5565b6107f7610506565b6107ff610513565b6001600160401b0396909290610124358881116103f357610824903690600401610711565b94610164359889116103f357610841610018993690600401610794565b97610144359760843592606435926127f9565b6101006003198201126103f35760043561086d81610443565b9160243561087a81610443565b9160443591606435916084358060070b81036103f3579160a43561089d816104f8565b9160c435906001600160401b0382116103f3576108bc91600401610711565b9060e43590565b6108f86108cf36610854565b50956108df9591959492946136d1565b6108f260ff61086b5460e81c161561290e565b336138c7565b6001606555005b346103f3575f3660031901126103f35760206040515f8152f35b346103f3575f3660031901126103f3576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b9080601f830112156103f35760209082356109778161072f565b936109856040519586610624565b81855260208086019260051b8201019283116103f357602001905b8282106109ae575050505090565b813581529083019083016109a0565b9080601f830112156103f35760209082356109d78161072f565b936109e56040519586610624565b81855260208086019260051b8201019283116103f357602001905b828210610a0e575050505090565b8380918335610a1c81610443565b815201910190610a00565b6003196060368201126103f357600435610a40816104f8565b6001600160401b0391602435908382116103f35760c09082360301126103f357610a68610647565b90806004013582526024810135602083015260448101358481116103f357610a96906004369184010161095d565b6040830152610aa76064820161054b565b6060830152610ab86084820161048a565b608083015260a4810135908482116103f3576004610ad992369201016109bd565b60a08201526044359283116103f357610af9610018933690600401610794565b9161294c565b346103f35760203660031901126103f3576108f8600435610b1f81610443565b610b27615086565b610b2f6136d1565b613c49565b346103f35760203660031901126103f357600435610cbf55005b801515036103f357565b6044359061046182610b4e565b346103f35760603660031901126103f357600435610b8281610443565b602435907f0a21fdd43d0ad0c62689ee7230a47309a050755bcc52eba00310add65297692a602060443592610bb684610b4e565b610bbe615086565b610bc66136d1565b60018060a01b031692835f5261086d825260405f20855f52825260405f209015159060ff1981541660ff8316179055604051908152a36001606555005b346103f3575f3660031901126103f3576020610cbf54604051908152f35b346103f3575f3660031901126103f35760206040515f80516020615c7b8339815191528152f35b90816101809103126103f35790565b346103f35760403660031901126103f3576004356001600160401b0381116103f357610c87903690600401610c48565b610c8f6136d1565b610ca260ff61086b5460e01c1615612b34565b610caf6101408201612b6f565b63ffffffff610cbf549116101580610d63575b610d5157610d4790610d33610cdf610cda3684612265565b613d93565b9160c0610d2c610cf160208401612b79565b610cff610160850185612b83565b939094610d0a610647565b97610d153683612265565b895260208901520135604087015260608601612bb5565b36916106db565b608082015260243560a08201523390613ede565b6100186001606555565b604051630c3a9b9d60e41b8152600490fd5b50610d7060408201612b79565b6001600160a01b0316331415610cc2565b346103f35760203660031901126103f357600435610d9e81610443565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169190610dd730841415612bc4565b610df35f80516020615bbb833981519152938285541614612c12565b610dfb615086565b60405190610e08826105d3565b5f82525f80516020615b5b8339815191525460ff1615610e2e57505061001891506156c0565b6020600491604094939451928380926352d1902d60e01b825286165afa5f9181610e88575b50610e755760405162461bcd60e51b815280610e71600482016146a9565b0390fd5b61001893610e83911461464b565b6155db565b610eab91925060203d602011610eb2575b610ea38183610624565b81019061463c565b905f610e53565b503d610e99565b346103f3576101803660031901126103f357600435610ed781610443565b602435610ee381610443565b604435610eef81610443565b60e4358060070b81036103f357610f046104b5565b610f0c610521565b61014435959092906001600160401b0387116103f357610f33610018973690600401610711565b94610164359660c4359260a435926084359260643592612c60565b346103f35760403660031901126103f357602435600435610f6d615086565b610f756136d1565b61086c8054600160401b81101561057d5763ffffffff9160018201905583610f9c82612605565b5084600182015555167fc86ba04c55bc5eb2f2876b91c438849a296dbec7b08751c3074d92e04f0a77af5f80a46001606555005b9181601f840112156103f3578235916001600160401b0383116103f357602083818601950101116103f357565b346103f35760c03660031901126103f35760043561101a81610443565b60243590611027826104f8565b60443560643561103681610443565b6001600160401b03916084358381116103f357611057903690600401610fd0565b93909460a4359182116103f3576110ff63ffffffff7fb0a29aed3d389a1041194255878b423f7780be3ed2324d4693508c6ff189845e9661109f611111953690600401610fd0565b9390996110aa6136d1565b6110d78c8c8b8b6110b9613450565b6110d06110c7368b8a6106db565b948c36916106db565b948c614fb3565b60018060a01b0392836040519a8b9a8b521660208a0152608060408a01526080890191612d5d565b93868503606088015216981696612d5d565b0390a36001606555005b60403660031901126103f35760043561113381610443565b6024356001600160401b0381116103f357611152903690600401610711565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811692919061118c30851415612bc4565b6111a85f80516020615bbb833981519152948286541614612c12565b6111b0615086565b5f80516020615b5b8339815191525460ff16156111d357505061001891506156c0565b6020600491604094939451928380926352d1902d60e01b825286165afa5f9181611229575b506112165760405162461bcd60e51b815280610e71600482016146a9565b61001893611224911461464b565b615681565b61124391925060203d602011610eb257610ea38183610624565b905f6111f8565b6001600160a01b03165f90815261086d6020526040902090565b5f5261087260205260405f2090565b5f5261086e60205260405f2090565b346103f35760403660031901126103f35760043561129f81610443565b60018060a01b03165f5261086d60205260405f206024355f52602052602060ff60405f2054166040519015158152f35b6001600160a01b03169052565b346103f3575f3660031901126103f357610869546040516001600160a01b039091168152602090f35b346103f3575f3660031901126103f3577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003611361576040515f80516020615bbb8339815191528152602090f35b0390f35b60405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b6064820152608490fd5b6101203660031901126103f3576004356113e081610443565b6024356113ec81610443565b604435906113f982610443565b611401610495565b60c4359161140e836104f8565b60e435946001600160401b0386116103f3576114316108f8963690600401610711565b9461143a6136d1565b61144d60ff61086b5460e81c161561290e565b60843592606435926138c7565b346103f3575f3660031901126103f357602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346103f3576102003660031901126103f3576114b4610454565b6114bc610463565b906114c5610470565b916114ce61047d565b926114d76104b5565b936114e06104c6565b6114e86104d7565b6114f061052f565b6001600160401b0397909290610184358981116103f357611515903690600401610711565b946101a4358a81116103f35761152f903690600401610711565b966101c4359a8b116103f35761154c6100189b3690600401610711565b986101e4359a60e4359360c4359360a4359360843593612d7d565b346103f35760403660031901126103f35760243560038110156103f35761158d81612e8f565b6004355f5261087260205260405f20555f80f35b346103f3575f3660031901126103f357602060ff61086b5460e81c166040519015158152f35b60609060031901126103f3576004356115df816104f8565b906024356115ec81610443565b9060443561072c81610443565b346103f357600161164361160c366115c7565b915f5460ff8160081c1615958691829788936116a0575b801561168a575b61163390612e9e565b60ff1916175f5561167357612f01565b61164957005b61165761ff00195f54165f55565b604051600181525f80516020615bfb83398151915290602090a1005b61168561010061ff00195f5416175f55565b612f01565b50303b15801561162a575060ff8116821461162a565b508160ff821610611623565b346103f3575f3660031901126103f3576116c4615086565b610c8c80546001600160a01b031981169091555f906001600160a01b03165f80516020615c1b8339815191528280a3005b346103f35760203660031901126103f3577fe88463c2f254e2b070013a2dc7ee1e099f9bc00534cbdf03af551dc26ae49219602060043561173581610b4e565b61173d615086565b6117456136d1565b61086b805460ff60e81b191691151560e881901b60ff60e81b16929092179055604051908152a16001606555005b346103f35760e03660031901126103f35760043561179081610443565b6024359061179d826104f8565b608435916117aa83610443565b6001600160401b039260a4358481116103f3576117cb903690600401610711565b9160c4359485116103f3576117e7610018953690600401610711565b936064359160443591614fb3565b346103f3575f3660031901126103f3577fc40e7ebe8d73fd5a0cb54204770418c5a137493f190ccec1bb558170cd0bf49a602060405160018152a1005b6101803660031901126103f35760043561184b81610443565b6024359061185882610443565b60443561186481610443565b6064359061187182610443565b60e43561187d81610443565b6101043561188a816104f8565b6101243591611898836104f8565b6118a061053d565b61016435979094906001600160401b0389116103f3576118c7610018993690600401610fd0565b98909760c4359360a4359360843593612f44565b346103f35760c03660031901126103f3576004356118f881610443565b602435908160070b82036103f35760443591611913836104f8565b60643561191f81610443565b6001600160401b03936084358581116103f357611940903690600401610711565b9260a4359586116103f35761195c610018963690600401610711565b94613291565b346103f35760c03660031901126103f3576001600160401b036044358181116103f35761199390369060040161095d565b60643561199f816104f8565b608435906119ac82610443565b60a4359384116103f3576119c76100189436906004016109bd565b92602435600435613b67565b346103f35760203660031901126103f3576004356119ef615086565b6119f76136d1565b611a0081612605565b611a38576001815f80935501557f3569b846531b754c99cb80df3f49cd72fa6fe106aaee5ab8e0caf35a9d7ce88d5f80a26001606555005b634e487b7160e01b5f525f60045260245ffd5b346103f3575f3660031901126103f357610c8c546040516001600160a01b039091168152602090f35b346103f357610018611aa3610b2f611a8b366115c7565b939091611a9e60ff5f5460081c16613386565b613203565b604051611aaf816105ee565b6009815260208101906820a1a927a9a996ab1960b91b825260405191611ad4836105ee565b600583526020830191640312e302e360dc1b8352611b0160ff5f5460081c16611afc81613386565b613386565b519020915190209061047f5561048055611b1961516b565b611b2161517b565b615196565b346103f35760203660031901126103f3576004356001600160401b0381116103f357611b56903690600401610c48565b611b5e6136d1565b611b7160ff61086b5460e01c1615612b34565b610140810190611b8082612b6f565b610cbf54908163ffffffff8092161015611cb85761012083019181611ba484612b6f565b1610611ca657611bb7610cda3685612265565b91611bc183611264565b54611c9557611bf9611bf37f923794976d026d6b119735adc163cb71decfc903e17c3dc226c00789593c04e194611264565b60019055565b611c88611c0860608601612b79565b95611c1560808701612b79565b95611c35611c2f611c296101008401612b6f565b95612b6f565b92612b6f565b611c4160408301612b79565b611c4a83612b79565b90611c5760208501612b79565b92611c66610160860186612b83565b9690956040519a8b9a169d60e08201359d60a060c0840135930135918c6133e6565b0390a36100186001606555565b604051624be79160e21b8152600490fd5b60405163d642b7d960e01b8152600490fd5b604051630277ae7b60e21b8152600490fd5b346103f35760203660031901126103f3577f2d5b62420992e5a4afce0e77742636ca2608ef58289fd2e1baa5161ef6e7e41e6020600435611d0a81610b4e565b611d12615086565b611d1a6136d1565b61086b805460ff60e01b191691151560e081901b60ff60e01b16929092179055604051908152a16001606555005b346103f3575f3660031901126103f3576020611d62613450565b604051908152f35b346103f3575f3660031901126103f357602063ffffffff61086b5460c01c16604051908152f35b346103f3575f3660031901126103f35760206040515f80516020615c5b8339815191528152f35b9181601f840112156103f3578235916001600160401b0383116103f3576020808501948460051b0101116103f357565b5f5b838110611df95750505f910152565b8181015183820152602001611dea565b90602091611e2281518092818552858086019101611de8565b601f01601f1916010190565b6020808201906020835283518092526040830192602060408460051b8301019501935f915b848310611e635750505050505090565b9091929394958480611e81600193603f198682030187528a51611e09565b9801930193019194939290611e53565b346103f35760203660031901126103f357600480356001600160401b0381116103f357611ec2903690600401611db8565b91611ecc8361345e565b925f5b818110611ee4576040518061135d8782611e2e565b5f80611ef18385886134a7565b60409391611f038551809381936134c2565b0390305af490611f116134cf565b9115611f38575090600191611f26828861356d565b52611f31818761356d565b5001611ecf565b848260448151106103f357611f5c8183610e719301516024809183010191016134fe565b925162461bcd60e51b8152928392830161355c565b60e03660031901126103f357600435611f8981610443565b602435611f9581610443565b611f9d6104e8565b60a43592906001600160401b0384116103f357611fc16108f8943690600401610711565b9263ffffffff610cbf541692611fd56136d1565b611fe860ff61086b5460e81c161561290e565b6064359160443591336138c7565b346103f3575f3660031901126103f3576040516b1d6329f1c35ca4bfabb9f56160281b8152602090f35b346103f3576003196060368201126103f3576004356001600160401b038082116103f3576060823603938401126103f3576024359061205e826104f8565b6044359081116103f357612076903690600401611db8565b9190936120816136d1565b60048401359061018219018112156103f357610d4794612121936120ae61211a9360043691890101612265565b956120c46120bf6080890151610437565b613727565b6121086120d088613d93565b9160446120e060208b0151610437565b916101608b0151946120f0610647565b9b8c5260208c0152013560408a015260608901612bb5565b60808701525f60a08701523691610746565b908361521f565b61417c565b61212f36610854565b509461213d969394966136d1565b63ffffffff61086b5461215660ff8260e81c161561290e565b60c01c1695612167611a9e886131ee565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169590899084168088148061225c575b1561223557506121b2903414613581565b853b156103f3575f60049660405197888092630d0e30db60e41b825234905af1928315612230575f80516020615bdb8339815191529661220a94612217575b505b6121fb613450565b94604051968796339c88613588565b0390a46100186001606555565b8061222461222a9261056a565b806103e9565b5f6121f1565b6131e3565b5f80516020615bdb833981519152975061220a94916122579130903390615115565b6121f3565b503415156121a1565b9190610180838203126103f35761227a610666565b926122848161048a565b84526122926020820161048a565b60208501526122a36040820161048a565b60408501526122b46060820161048a565b60608501526122c56080820161048a565b608085015260a081013560a085015260c081013560c085015260e081013560e08501526101006122f681830161054b565b9085015261012061230881830161054b565b9085015261014061231a81830161054b565b9085015261016091818301356001600160401b0381116103f35761233e9201610711565b90830152565b346103f3576003196060368201126103f357600435906001600160401b03908183116103f35760c09083360301126103f35761237e610647565b9082600401358181116103f35761239b9060043691860101612265565b825260248301356020830152604483013560408301526123bd6064840161048a565b606083015260848301359081116103f357610018926123e460a49260043691840101610711565b6080840152013560a08201526123f8610463565b612400610b58565b916143fa565b346103f35760203660031901126103f3576004355f52610872602052602060405f2054604051908152f35b346103f35760c03660031901126103f3576001600160401b036004358181116103f357612462903690600401610c48565b6064359061246f82610443565b6084358381116103f357612487903690600401610fd0565b9060a4359485116103f3576124a3610018953690600401610fd0565b94909360443590602435906135d0565b346103f3575f3660031901126103f357602060405163ffffffff8152f35b346103f3575f3660031901126103f357602060ff61086b5460e01c166040519015158152f35b346103f3575f3660031901126103f3576040516a0c097ce7bc90715b34b9f160241b8152602090f35b346103f35760203660031901126103f3576108f860043561254081610443565b612548615086565b611b216136d1565b346103f3575f3660031901126103f35761086a546040516001600160a01b039091168152602090f35b60203660031901126103f3576004356001600160401b0381116103f3575f6125a681923690600401610711565b6125ae6136d1565b60208151910134305af16125c06134cf565b90156125cd576001606555005b60405162461bcd60e51b815260206004820152908190610e71906024830190611e09565b634e487b7160e01b5f52603260045260245ffd5b61086c8054821015612621575f52600360205f20910201905f90565b6125f1565b346103f35760203660031901126103f35760043561086c548110156103f357612650604091612605565b506001815491015482519182526020820152f35b346103f35760203660031901126103f357600435610cbe55005b346103f35760203660031901126103f35760043561269b81610443565b6126a3615086565b6001600160a01b038116156126bb57610018906150df565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b346103f35760203660031901126103f35761275860043561272f81610443565b6101025f5460ff8160081c16158061277b575b61274b90612e9e565b61ffff1916175f55613c49565b61ff00195f54165f555f80516020615bfb833981519152602060405160028152a1005b50600260ff821610612742565b6101003660031901126103f3576004356127a181610443565b602435906127ae82610443565b6044356127ba81610443565b6127c2610495565b60c435936001600160401b0385116103f3576127e56108f8953690600401610711565b9363ffffffff610cbf54169361143a6136d1565b9a98959390979996949261280b6136d1565b61281483613727565b61281c613450565b9289612826610686565b612831819f82612bb5565b6020019061283e91612bb5565b61284b9060408e01612bb5565b60608c015260808b015260a08a015260070b60c089015260070b60e088015263ffffffff166101008781019190915261012091808389015261288b610686565b97885260208801945f8652604089015f905260608901906128ab91612bb5565b60808801525f60a08801526b1d6329f1c35ca4bfabb9f56160281b60c08801525f1960e088015260019087015285015283516128e690614792565b90526128f291836152b6565b6128fb81614a04565b61290491614e84565b6104616001606555565b1561291557565b60405162461bcd60e51b815260206004820152600f60248201526e506175736564206465706f7369747360881b6044820152606490fd5b916129556136d1565b60808201916129676120bf8451610437565b60208101918251612976613450565b03612a6c5761299661299a9183600161298e89612605565b500154613a68565b1590565b612a5a578060607ff8bd640004bcec1b89657020f561d0b070cbdf662d0b158db9dccb0a8301bfab9201936129dc6129d6865163ffffffff1690565b87613af9565b612a4d845194612a32612a2b855195612a1b60408201998a51612a038d5163ffffffff1690565b612a0d8a51610437565b9160a086019b8c5194613b67565b5192519751985163ffffffff1690565b9351610437565b935163ffffffff9485604051968796169a1698339386612aed565b0390a46104616001606555565b60405163582f497d60e11b8152600490fd5b604051633d23e4d160e11b8152600490fd5b9081518082526020808093019301915f5b828110612a9d575050505090565b835185529381019392810192600101612a8f565b9081518082526020808093019301915f5b828110612ad0575050505090565b83516001600160a01b031685529381019392810192600101612ac2565b93612b0f60809493612b2d93989798875260a0602088015260a0870190612a7e565b6001600160a01b039384166040870152858103606087015290612ab1565b9416910152565b15612b3b57565b60405162461bcd60e51b815260206004820152600c60248201526b5061757365642066696c6c7360a01b6044820152606490fd5b3561072c816104f8565b3561072c81610443565b903590601e19813603018212156103f357018035906001600160401b0382116103f3576020019181360383136103f357565b6001600160a01b039091169052565b15612bcb57565b60405162461bcd60e51b815260206004820152602c60248201525f80516020615b9b83398151915260448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b15612c1957565b60405162461bcd60e51b815260206004820152602c60248201525f80516020615b9b83398151915260448201526b6163746976652070726f787960a01b6064820152608490fd5b9a969299939590989799612c726136d1565b61086b5460e01c60ff1615612c8690612b34565b612c8e613450565b928a612c98610686565b612ca3819f82612bb5565b60200190612cb091612bb5565b612cbd9060408e01612bb5565b60608c015260808b015260a08a015260070b60c0890152600787900b60e08901526101009485890190612cf5919063ffffffff169052565b6101209581878a0152612d06610686565b9889525f60208a0190815260079890980b60408a0152612d299060608a01612bb5565b608088015260a087015260c086015260e085015283015f905282015f90528151612d5290614792565b90526128fb81614a04565b908060209392818452848401375f828201840152601f01601f1916010190565b9d9c9b959e938e9799939b98929b612d936136d1565b61086b5460e01c60ff1615612da790612b34565b612daf613450565b92612db8610686565b99612dc3908b612bb5565b612dd09060208b01612bb5565b612ddd9060408a01612bb5565b60608801526080870189905260a087015260070b60c086015260070b60e085015263ffffffff851661010085810191909152916101209384860152612e20610686565b9485525f60208601908152600789900b6040870152949c898e60600190612e4691612bb5565b8d8b608082015260a0015260c08d015260e08c01528a015f905289015f90528851612e7090614792565b90526128f296615022565b634e487b7160e01b5f52602160045260245ffd5b60031115612e9957565b612e7b565b15612ea557565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b612f3a9291611aa3610b2f92612f2160ff5f5460081c16611afc81613386565b612f2a336150df565b611a9e60ff5f5460081c16613386565b61046142610cbf55565b979b95999196939b9a949890929a612f5a6136d1565b612f6d60ff61086b5460e81c161561290e565b612f94612996612f8d8d612f808c61124a565b905f5260205260405f2090565b5460ff1690565b61319e57610cbf549963ffffffff9d8e612fb18d828616906131c4565b907f0000000000000000000000000000000000000000000000000000000000000000161061318c578e8085168d808210928315613155575b505050613143578e9b60018060a01b039c8d89169087169081811761310d575b5050508b7f0000000000000000000000000000000000000000000000000000000000000000168c8b1681811480613104575b156130ea57508134036130d857803b156103f3575f60049160405192838092630d0e30db60e41b825234905af18015612230576130c5575b505b61086b5460c01c63ffffffff169e8f61308d906131ee565b61309690613203565b6040519c8d9c169f169d6130aa9a8c613229565b035f80516020615b3b83398151915291a46104616001606555565b806122246130d29261056a565b5f613073565b604051636452a35d60e01b8152600490fd5b9050346130d857816130ff9130903390615115565b613075565b5034151561303b565b15613131571061311f575f8080613009565b6040516325a63a5b60e01b8152600490fd5b60405163495d907f60e01b8152600490fd5b60405163582e388960e01b8152600490fd5b6131839293507f000000000000000000000000000000000000000000000000000000000000000016906131d6565b108f8d81612fe9565b60405163f722177f60e01b8152600490fd5b604051632a58c4f360e01b8152600490fd5b634e487b7160e01b5f52601160045260245ffd5b919082039182116131d157565b6131b0565b919082018092116131d157565b6040513d5f823e3d90fd5b63ffffffff8091169081146131d15760010190565b61086b805463ffffffff60c01b191660c09290921b63ffffffff60c01b16919091179055565b6001600160a01b03918216815291811660208301526040820192909252606081019290925263ffffffff928316608083015292821660a0820152921660c083015291821660e08201529116610100820152610140610120820181905261072c93910191612d5d565b61333a9063ffffffff7fa6aa57bd282fc82378458de27be4eadfa791a0c7321c49562eeba8b2643dd566959497966132c76136d1565b6132fd8882888860070b986132ed6706f05b59d3b200006132e78c61515c565b10613344565b8d6132f6613450565b9089615022565b61332860018060a01b0391826040519889988952166020880152608060408801526080870190611e09565b92858403606087015216971695611e09565b0390a36001606555565b1561334b57565b60405162461bcd60e51b8152602060048201526013602482015272496e76616c69642072656c617965722066656560681b6044820152606490fd5b1561338d57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b6001600160a01b03918216815291811660208301526040820192909252606081019290925263ffffffff92831660808301529290911660a082015291811660c083015291821660e08201529116610100820152610140610120820181905261072c93910191612d5d565b610cbe548061072c57504690565b906134688261072f565b6134756040519182610624565b8281528092613486601f199161072f565b01905f5b82811061349657505050565b80606060208093850101520161348a565b90821015612621576134be9160051b810190612b83565b9091565b908092918237015f815290565b3d156134f9573d906134e0826106c0565b916134ee6040519384610624565b82523d5f602084013e565b606090565b6020818303126103f3578051906001600160401b0382116103f3570181601f820112156103f3578051613530816106c0565b9261353e6040519485610624565b818452602082840101116103f35761072c9160208085019101611de8565b90602061072c928181520190611e09565b80518210156126215760209160051b010190565b156103f357565b9360e0959361072c98979363ffffffff938752602087015260070b604086015216606084015260018060a01b0380921660808401521660a08201528160c08201520190611e09565b94909693956135dd6136d1565b6135f060ff61086b5460e01c1615612b34565b6135fd6101408701612b6f565b63ffffffff610cbf5491161015806136b3575b610d515761361e3687612265565b61362790613d93565b97613630610647565b9861363b3689612265565b8a5260208a0152604089018490526136568560608b01612bb5565b61366136848a6106db565b60808a015260a089015261367486612b79565b966136826101008801612b6f565b92369061368e926106db565b94369061369a926106db565b9460e00135906136a996614fb3565b3361290491613ede565b506136c060408701612b79565b6001600160a01b0316331415613610565b6002606554146136e2576002606555565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b6040516001600160a01b0390911681527f8a5afa2f5694ae60f58fb8f4f1d7408f1cb0aac9ffc67150d46e2c7d1bb911ff90602090a1565b1561376657565b60405162461bcd60e51b815260206004820152600e60248201526d44697361626c656420726f75746560901b6044820152606490fd5b156137a357565b60405162461bcd60e51b815260206004820152601060248201526f416d6f756e7420746f6f206c6172676560801b6044820152606490fd5b156137e257565b60405162461bcd60e51b81526020600482015260166024820152750696e76616c69642071756f746554696d657374616d760541b6044820152606490fd5b1561382757565b60405162461bcd60e51b815260206004820152601b60248201527a1b5cd9cb9d985b1d59481b5d5cdd081b585d18da08185b5bdd5b9d602a1b6044820152606490fd5b929361072c96959192946101409560018060a01b0380951686525f60208701526040860152606085015263ffffffff809116608085015260a08401525f60c08401521660e08201525f610100820152816101208201520190611e09565b91959693949290926138e76138e2612f8d88612f808b61124a565b61375f565b60070b936139006706f05b59d3b200006132e78761515c565b61391a6a0c097ce7bc90715b34b9f160241b83111561379c565b610cbf549361395e61393463ffffffff96878c16906131c4565b867f00000000000000000000000000000000000000000000000000000000000000001610156137db565b61086b5460c01c63ffffffff1698613978611a9e8b6131ee565b6001600160a01b03957f00000000000000000000000000000000000000000000000000000000000000008716948a881680871480613a5f575b15613a3557506139c2813414613820565b853b156103f3575f60049660405197888092630d0e30db60e41b825234905af18015612230575f80516020615b3b83398151915299613a1d97613a0c92613a22575b505b82615376565b91604051988998169c169a8761386a565b0390a4565b80612224613a2f9261056a565b5f613a04565b613a1d96505f80516020615b3b83398151915299613a5a83613a0c9330903390615115565b613a06565b503415156139b1565b61072c9291604051613af081613ae2602082019460208652805160408401526020810151606084015260a0613aad604083015160c06080870152610100860190612a7e565b606083015163ffffffff168583015260808301515f196001841b011660c0860152910151838203603f190160e0850152612ab1565b03601f198101835282610624565b519020916153ac565b613b04600291612605565b500162ffffff8260081c16805f5281602052600160ff60405f205494161b8080941614613b3c575f5260205260405f20908154179055565b60405163954476d960e01b8152600490fd5b9081526001600160a01b03909116602082015260400190565b9294939190938051825103613c37578151915f5b838110613beb575050505082613b92575b50505050565b63ffffffff81613bc37f828fc203220356df8f072a91681caee7d5c75095e2a95e80ed5a14b384697f719386615436565b613bdf60405192839260018060a01b0316971695339083613b4e565b0390a45f808080613b8c565b80613bf86001928461356d565b5180613c06575b5001613b7b565b613c3190613c24613c17848861356d565b516001600160a01b031690565b848060a01b0389166153fd565b5f613bff565b6040516319a5316760e31b8152600490fd5b6001600160a01b03168015613c915761086a80546001600160a01b031916821790557f1f17a88f67b0f49060a34bec1a4723a563620e6aa265eb640b5046dcee0759a05f80a2565b60405162461bcd60e51b81526020600482015260146024820152734261642068756220706f6f6c206164647265737360601b6044820152606490fd5b61072c9161018090613ce08184516112cf565b613cf2602084015160208301906112cf565b613d04604084015160408301906112cf565b613d16606084015160608301906112cf565b613d28608084015160808301906112cf565b60a083015160a082015260c083015160c082015260e083015160e0820152613d5e610100808501519083019063ffffffff169052565b6101208381015163ffffffff16908201526101408381015163ffffffff16908201528161016080940151938201520190611e09565b613d9b613450565b613dcd6040518092613db96020830195604087526060840190613ccd565b90604083015203601f198101835282610624565b51902090565b613ddc82612e8f565b52565b9060018060a01b038251168152606080613e086020850151608060208601526080850190611e09565b9360408101516040850152015191613e1f83612e8f565b015290565b9a97909695613e939661072c9d9b9660808e613e8898613ea29e986101809d60018060a01b03998a80921685521660208401526040830152606082015201528c60a063ffffffff8094169101521660c08c01521660e08a01526101008901906112cf565b6101208701906112cf565b80610140860152840190611e09565b91610160818403910152613ddf565b9061072c949360809360018060a01b03809316845260208401521660408201528160608201520190611e09565b805191610120830190613ef5825163ffffffff1690565b63ffffffff610cbf54911610611ca65760208301516001613f1582611264565b5403614175576001905b6002613f2a82611264565b541461416357613f3990611264565b600290556060850151613f4b90610437565b6080860151613f5990610437565b9260a0870151918660c0890151948960a08301519660e082015197610100830151613f879063ffffffff1690565b9a5163ffffffff1661014084015163ffffffff16906040850151613faa90610437565b928551613fb690610437565b946020870151613fc590610437565b9661016001519760608a0151613fda90610437565b996080810151906040015190613fee6106a6565b9b613ff9908d612bb5565b60208c015260408b01526140109060608b01613dd3565b6040516001600160a01b03909b169e63ffffffff169d9a9b8c9b6140349b8d613e24565b035f80516020615b7b83398151915291a4606081015161405390610437565b6001600160a01b038116923384148061415b575b613b8c576080614078910151610437565b6040830151909390926080906001600160a01b0380871690869086907f000000000000000000000000000000000000000000000000000000000000000016830361414b57506140ca9130903390615115565b6140d4858461546d565b0151913b151580614141575b6140ea5750505050565b803b156103f357614117935f809460405196879586948593633a5be8cb60e01b8552339160048601613eb1565b03925af180156122305761412e575b808080613b8c565b8061222461413b9261056a565b5f614126565b50815115156140e0565b614156923390615115565b6140d4565b506001614067565b604051630479306360e51b8152600490fd5b5f90613f1f565b905f82516101208101614193815163ffffffff1690565b63ffffffff610cbf54911610611ca657602085015160026141b382611264565b5414614163576141c290611264565b6002905560608201516141d490610437565b60808301516141e290610437565b9060a08401519260c0850151918860a0810151938760e0810151956101008201516142109063ffffffff1690565b955163ffffffff1661014083015163ffffffff16604084015161423290610437565b91845161423e90610437565b93602086015161424d90610437565b95610160015196606089015161426290610437565b9860808101519060400151906142766106a6565b9a614281908c612bb5565b60208b015260408a0152600260608a01526040519d63ffffffff8f9c169d6142a99b8d613e24565b035f80516020615b7b833981519152905f94a460608401516142ca90610437565b6001600160a01b039490918583169190338314806143f3575b6143ea5760806142f4910151610437565b9060408101519687818416917f00000000000000000000000000000000000000000000000000000000000000001682145f146143d3579060809291876143bf575b61434091508561546d565b0151923b1515806143b5575b614359575b505050509050565b813b156143b15783614385959660405196879586948593633a5be8cb60e01b8552339160048601613eb1565b03925af180156122305761439e575b8080808493614351565b806122246143ab9261056a565b5f614394565b8380fd5b508251151561434c565b6143cc9130903390615115565b5f88614335565b6080929196506143e590865f986153fd565b614340565b50505050509050565b505f6142e3565b9190825190610120820190614413825163ffffffff1690565b63ffffffff610cbf54911610611ca6576020850151841561461c576002905b600261443d82611264565b54146141635761444c90611264565b60029055606084015161445e90610437565b608085015161446c90610437565b9260a0860151918860c0880151948860a08301519660e08201519761010083015161449a9063ffffffff1690565b9a5163ffffffff1661014084015163ffffffff169060408501516144bd90610437565b9285516144c990610437565b9460208701516144d890610437565b9661016001519760608a01516144ed90610437565b9960808101519060400151906145016106a6565b9b61450c908d612bb5565b60208c015260408b01526145239060608b01613dd3565b6040516001600160a01b03909b169e63ffffffff169d9a9b8c9b6145479b8d613e24565b035f80516020615b7b83398151915291a4606083015161456690610437565b906001600160a01b0382169033821480614614575b61460d5761458d608080920151610437565b6040860151909590946001600160a01b0380881691879187907f00000000000000000000000000000000000000000000000000000000000000001684036145f45750156145e0575b6140d491508461546d565b6145ed9130903390615115565b5f856145d5565b9061460457614156923390615115565b614156926153fd565b5050505050565b50831561457b565b600161462782611264565b54036146365760015b90614432565b5f614630565b908160209103126103f3575190565b1561465257565b60405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b60809060208152602e60208201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960408201526d6f6e206973206e6f74205555505360901b60608201520190565b61072c916101409061470b8184516112cf565b61471d602084015160208301906112cf565b61472f604084015160408301906112cf565b606083015160608201526080830151608082015260a083015160a082015261476160c084015160c083019060070b9052565b60e08381015160070b908201526101008381015163ffffffff16908201528161012080940151938201520190611e09565b604051613dcd81613ae260208201946020865260408301906146f8565b156147b657565b60405162461bcd60e51b815260206004820152600c60248201526b696e76616c6964206665657360a01b6044820152606490fd5b156147f157565b60405162461bcd60e51b815260206004820152600c60248201526b1c995b185e48199a5b1b195960a21b6044820152606490fd5b600791820b910b019060016001603f1b0319821260016001603f1b038313176131d157565b1561485157565b60405162461bcd60e51b8152602060048201526019602482015278066696c6c20616d6f756e74207072652066656573206973203603c1b6044820152606490fd5b1561489957565b60405162461bcd60e51b815260206004820152601d60248201527f7061796f757441646a7573746d656e7450637420746f6f20736d616c6c0000006044820152606490fd5b156148e557565b60405162461bcd60e51b815260206004820152601d60248201527f7061796f757441646a7573746d656e7450637420746f6f206c617267650000006044820152606490fd5b600160ff1b81146131d1575f0390565b1561494157565b60405162461bcd60e51b815260206004820152601c60248201527b536f6d65686f7720686974206d6178546f6b656e73546f53656e642160201b6044820152606490fd5b1561498c57565b60405162461bcd60e51b815260206004820152601760248201527634b73b30b634b2103932b830bcb6b2b73a1031b430b4b760491b6044820152606490fd5b6001600160a01b039182168152602081019290925291151560408201529116606082015260a06080820181905261072c92910190611e09565b908151916040810192614a446706f05b59d3b2000080614a36614a31614a2b895160070b90565b60070b90565b61515c565b109081614da3575b506147af565b60608101614a636a0c097ce7bc90715b34b9f160241b8251111561379c565b6020830190614a7e614a758351611273565b548251116147ea565b60c0840192835196614aae60c0830198614aa8614a9c8b5160070b90565b845160070b5b90614825565b9061574f565b97614aba89151561484a565b614ad08451614ac98751611273565b54906131c4565b898110614d99575b50614a2b614aff92614aa2614af1614af9945160070b90565b915160070b90565b88615376565b936101208601805180614d44575b50505060a08501518786519160a083015114918215614d36575b50508015614d1d575b614b3990614985565b614b438351611273565b614b4e8882546131d6565b90556060850191614b5f8351610437565b926001600160a01b0392338486161480614d06575b614cfc57906040614bf29201948785614b8d8851610437565b16917f000000000000000000000000000000000000000000000000000000000000000087168303614cb357505050614bcc6129966101008a0151151590565b614c94575b614bec87614be7614be28451610437565b610437565b61546d565b51610437565b91823b151580614c86575b614c0b575b50505050505050565b614c1d614c2491608094169451610437565b9451611273565b549051111594015193813b156103f3575f8094614c59604051978896879586946301d43f2760e31b86523392600487016149cb565b03925af1801561223057614c73575b808080808080614c02565b80612224614c809261056a565b5f614c68565b506080870151511515614bfd565b614cae87614ca5614be28851610437565b30903390615115565b614bd1565b614cc46129966101008d0151151590565b15614cf35750614cee9150614cdc614be28851610437565b614ce68451610437565b903390615115565b614bec565b614cee926153fd565b5050505050505050565b50614d186129966101008a0151151590565b614b74565b50614b39614d2f610100870151151590565b9050614b30565b60600151149050875f614b27565b95614d81614d8792614d65614d919599670de0b6b3a763ffff191315614892565b614d7b68056bc75e2d63100000825113156148de565b5161492a565b90615376565b945185111561493a565b5f8080614b0d565b9850614a2b614ad8565b9050614db9614a31614a2b60c086015160070b90565b105f614a3e565b9060018060a01b038251168152608080614de9602085015160a0602086015260a0850190611e09565b93604081015160070b6040850152606081015115156060850152015191015290565b9a979361072c9c9a95919793614e759a979360208e6101809b8152015260408d015260608c015260808b015260070b60a08a015260070b60c089015260018060a01b03928380921660e08a0152166101008801521661012086015280610140860152840190611e09565b91610160818403910152614dc0565b906040820151614e949060070b90565b916060810151614ea390610437565b906080810151936101009485830151614ebb90151590565b610120928385015192614ecc6106b3565b96614ed79088612bb5565b602087015260070b60408601521515606085015260808401528151606001516020830151614f0490611273565b549360a084015193519460808601519560a08101519160e0820151614f299060070b90565b60c083015160070b9a83015163ffffffff169a6040840151614f4a90610437565b918451614f5690610437565b986020860151614f6590610437565b950151956040519a8b9a600160a01b60019003169e63ffffffff169d3396614f8d9b8d614e0b565b037f8ab9dc6c19fe88e69bc70221b339c84332752fdd49591b7c51e66bae3947b73c91a4565b939261501c93610461979660208151910120906040519263ffffffff60208501955f80516020615c7b8339815191528752166040850152856060850152608084015260018060a01b031660a083015260c082015260c0815261501481610609565b51902061579d565b90615850565b939261501c93610461979660208151910120906040519263ffffffff60208501955f80516020615c5b833981519152875216604085015285606085015260070b608084015260018060a01b031660a083015260c082015260c0815261501481610609565b610c8c546001600160a01b0316330361509b57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b610c8c80546001600160a01b039283166001600160a01b0319821681179092559091165f80516020615c1b8339815191525f80a3565b6040516323b872dd60e01b60208201526001600160a01b03928316602482015292909116604483015260648083019390935291815261046191615157826105b8565b615920565b5f81126151665790565b5f0390565b61046160ff5f5460081c16613386565b61518f60ff5f5460081c16611afc81613386565b6001606555565b6001600160a01b031680156151de5761086980546001600160a01b031916821790557fa9e8c42c9e7fca7f62755189a16b2f5314d43d8fb24e91ba54e6d65f9314e8495f80a2565b60405162461bcd60e51b81526020600482015260196024820152784261642062726964676520726f75746572206164647265737360381b6044820152606490fd5b916129969061529f928451615232613450565b613af061525f6040809901519489519461524b86610582565b855260208501938452898501958652612605565b50549388519283916152846020840196602088525160608d86015260a0850190613ccd565b9151606084015251608083015203601f198101835282610624565b6152a65750565b5163582f497d60e11b8152600490fd5b8051610120909101516040805190949293818601906001600160401b0382118383101761057d57615330956152f5928852835260208301938452612605565b505491613af08651809261531b602083019560208752518a8085015260808401906146f8565b9051606083015203601f198101835282610624565b156153385750565b5162461bcd60e51b815260206004820152601860248201527724b73b30b634b21039b637bb903932b630bc90383937b7b360411b6044820152606490fd5b90670de0b6b3a7640000915f8284039212838312811690848413901516176131d1578181029181830414901517156131d1570490565b929091905f915b84518310156153f5576153c6838661356d565b5190818110156153e4575f52602052600160405f205b9201916153b3565b905f52602052600160405f206153dc565b915092501490565b60405163a9059cbb60e01b60208201526001600160a01b039092166024830152604480830193909352918152610461916151578261059d565b907fb6e6ae61a8fa98a339088353bc7a76c8c580b2efd09210a80bfccabe05d9ae479161546860405192839283613b4e565b0390a1565b6001600160a01b0390811690813b156154ad579061046192917f0000000000000000000000000000000000000000000000000000000000000000166153fd565b7f000000000000000000000000000000000000000000000000000000000000000016803b156103f3575f8091602460405180948193632e1a7d4d60e01b83528860048401525af18015612230576155cc575b50814710615587575f80809381935af16155176134cf565b501561551f57565b60405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c20726044820152791958da5c1a595b9d081b585e481a185d99481c995d995c9d195960321b6064820152608490fd5b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606490fd5b6155d59061056a565b5f6154ff565b906155e5826156c0565b6001600160a01b0382165f80516020615c3b8339815191525f80a280511580159061567a575b615613575050565b615677915f806040519361562685610582565b602785527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c6020860152660819985a5b195960ca1b6040860152602081519101845af46156716134cf565b91615a38565b50565b505f61560b565b9061568b826156c0565b6001600160a01b0382165f80516020615c3b8339815191525f80a28051158015906156b857615613575050565b50600161560b565b803b156156f4575f80516020615bbb83398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b670de0b6b3a76400009181830291838304036131d15760070b808303925f8212818512811690828613901516176131d15714615789570490565b634e487b7160e01b5f52601260045260245ffd5b60429161047f549061048054906040519160208301937fc2f8787176b8ac6bf7215b4adcc1e069bf4ab82d9ab1df05a57a91d425935b6e8552604084015260608301526080820152608081526157f2816105b8565b519020906040519161190160f01b8352600283015260228201522090565b1561581757565b60405162461bcd60e51b8152602060048201526011602482015270696e76616c6964207369676e617475726560781b6044820152606490fd5b919061585c8282615a07565b9390926005851015612e99576104619415938461590a575b508315615884575b505050615810565b5f9293509082916040516158bc81613ae26020820194630b135d3f60e11b998a87526024840152604060448401526064830190611e09565b51915afa906158c96134cf565b826158fc575b826158df575b50505f808061587c565b6158f49192506020808251830101910161463c565b145f806158d5565b9150602082511015916158cf565b6001600160a01b0383811691161493505f615874565b604051615977916001600160a01b0316615939826105ee565b5f806020958685527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656487860152868151910182855af16156716134cf565b80518281159182156159e7575b50509050156159905750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b83809293500103126103f3578101516159ff81610b4e565b80825f615984565b9060418151145f14615a2f576134be91602082015190606060408401519301515f1a90615ac9565b50505f90600290565b91929015615a9a5750815115615a4c575090565b3b15615a555790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015615aad5750805190602001fd5b60405162461bcd60e51b8152908190610e71906004830161355c565b6fa2a8918ca85bafe22016d0b997e4df60600160ff1b038411615b2f576020935f9360ff60809460405194855216868401526040830152606082015282805260015afa15612230575f516001600160a01b03811615615b2757905f90565b505f90600190565b505050505f9060039056fea123dc29aebf7d0c3322c8eeb5b999e859f39937950ed31056532713d0de396f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143571749edf1d5c9599318cdbc4e28a6475d65e87fd3b2ddbe1e9a8d5e7a0f0ff746756e6374696f6e206d7573742062652063616c6c6564207468726f75676820360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcafc4df6845a4ab948b492800d3d8a25d538a102a2bc07cd01f1cfa097fddcff67f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024988be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b0e058f05b73c62ee68329d2c67c067aaae9a06503cc306378d144d0f0177882b152eb71524aef34d838ab76573c14b1ebfa5e385d9ab29d7cf5398daa2438bd9a2646970667358221220e391f28ed2d4084472b1f9d2eeef3fb0f6c373292c70fadc94746abdaca9c57364736f6c63430008170033","opcodes":"PUSH2 0x100 CALLVALUE PUSH3 0x1AA JUMPI PUSH1 0x1F PUSH3 0x5E93 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH3 0x1AE JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x1AA JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH3 0x1AA JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH1 0xA0 MSTORE PUSH2 0xE10 PUSH1 0xC0 MSTORE PUSH2 0x7E90 PUSH1 0xE0 MSTORE PUSH0 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND PUSH3 0x155 JUMPI PUSH1 0xFF DUP1 DUP3 AND SUB PUSH3 0x11A JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CD0 SWAP1 DUP2 PUSH3 0x1C3 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0xDA8 ADD MSTORE DUP2 DUP2 PUSH2 0x115C ADD MSTORE PUSH2 0x1317 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x92E ADD MSTORE DUP2 DUP2 PUSH2 0x2171 ADD MSTORE DUP2 DUP2 PUSH2 0x300F ADD MSTORE DUP2 DUP2 PUSH2 0x3983 ADD MSTORE DUP2 DUP2 PUSH2 0x4096 ADD MSTORE DUP2 DUP2 PUSH2 0x4302 ADD MSTORE DUP2 DUP2 PUSH2 0x45A8 ADD MSTORE DUP2 DUP2 PUSH2 0x4B91 ADD MSTORE DUP2 DUP2 PUSH2 0x5488 ADD MSTORE PUSH2 0x54AF ADD MSTORE PUSH1 0xC0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x1476 ADD MSTORE DUP2 DUP2 PUSH2 0x2FB4 ADD MSTORE PUSH2 0x3937 ADD MSTORE PUSH1 0xE0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x413 ADD MSTORE PUSH2 0x315D ADD MSTORE RETURN JUMPDEST PUSH1 0xFF SWAP1 DUP2 NOT AND OR PUSH0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFF DUP2 MSTORE LOG1 PUSH0 PUSH3 0x84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1A JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x18 JUMPI PUSH0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BD2C7 EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0xC2097F7 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0x1186EC33 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0x15348E44 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x17FCB39B EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0x1B3D5559 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0x1DFB2D02 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x22F8E566 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x272751C7 EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0x29CB924D EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0x2CFC26C5 EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0x2E378115 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x44B8BE68 EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x493A4F84 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0x4E0FB8F5 EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x5249FEF1 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x5285E058 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0x541F4F14 EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0x57F6DCB8 EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x5CEAEC32 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x5DD36F9C EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x6068D6CB EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x647C576C EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x6BBBCD2E EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x738B62E5 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x74DFA43D EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x7B0CB839 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x7B939232 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x7E688BBA EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x87C3932D EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x8A7860CE EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x979F2BC2 EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0x9963E5A8 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x99CC2968 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x9A8A0592 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xA1244C67 EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0xA78E4B60 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xAC9650D8 EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xAE527FBB EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0xB5E1BF5F EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xBBCA7DB0 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xBDCB53A5 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0xBF40F25B EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xC35C83FC EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xCCFA5971 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0xCEB4C987 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xDDA52113 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0xDDD224F1 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0xDE7EBA78 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xE1904402 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xE98A5654 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xEE2A53F8 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xEF0E2FF4 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0xF7E7D1FD EQ PUSH2 0x2C2 JUMPI PUSH4 0xFD7C1054 SUB PUSH2 0xE JUMPI PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x270F JUMP JUMPDEST PUSH2 0x267E JUMP JUMPDEST PUSH2 0x2664 JUMP JUMPDEST PUSH2 0x2626 JUMP JUMPDEST PUSH2 0x2579 JUMP JUMPDEST PUSH2 0x2550 JUMP JUMPDEST PUSH2 0x2520 JUMP JUMPDEST PUSH2 0x24F7 JUMP JUMPDEST PUSH2 0x24D1 JUMP JUMPDEST PUSH2 0x24B3 JUMP JUMPDEST PUSH2 0x2431 JUMP JUMPDEST PUSH2 0x2406 JUMP JUMPDEST PUSH2 0x2344 JUMP JUMPDEST PUSH2 0x2126 JUMP JUMPDEST PUSH2 0x2020 JUMP JUMPDEST PUSH2 0x1FF6 JUMP JUMPDEST PUSH2 0x1F71 JUMP JUMPDEST PUSH2 0x1E91 JUMP JUMPDEST PUSH2 0x1D91 JUMP JUMPDEST PUSH2 0x1D6A JUMP JUMPDEST PUSH2 0x1D48 JUMP JUMPDEST PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0x1B26 JUMP JUMPDEST PUSH2 0x1A74 JUMP JUMPDEST PUSH2 0x1A4B JUMP JUMPDEST PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x1962 JUMP JUMPDEST PUSH2 0x18DB JUMP JUMPDEST PUSH2 0x1832 JUMP JUMPDEST PUSH2 0x17F5 JUMP JUMPDEST PUSH2 0x1773 JUMP JUMPDEST PUSH2 0x16F5 JUMP JUMPDEST PUSH2 0x16AC JUMP JUMPDEST PUSH2 0x8FF JUMP JUMPDEST PUSH2 0x15F9 JUMP JUMPDEST PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x1567 JUMP JUMPDEST PUSH2 0x149A JUMP JUMPDEST PUSH2 0x145A JUMP JUMPDEST PUSH2 0x13C7 JUMP JUMPDEST PUSH2 0x1305 JUMP JUMPDEST PUSH2 0x12DC JUMP JUMPDEST PUSH2 0x1282 JUMP JUMPDEST PUSH2 0x111B JUMP JUMPDEST PUSH2 0xFFD JUMP JUMPDEST PUSH2 0xF4E JUMP JUMPDEST PUSH2 0xEB9 JUMP JUMPDEST PUSH2 0xD81 JUMP JUMPDEST PUSH2 0xC57 JUMP JUMPDEST PUSH2 0xC21 JUMP JUMPDEST PUSH2 0xC03 JUMP JUMPDEST PUSH2 0xB65 JUMP JUMPDEST PUSH2 0xB34 JUMP JUMPDEST PUSH2 0xAFF JUMP JUMPDEST PUSH2 0xA27 JUMP JUMPDEST PUSH2 0x919 JUMP JUMPDEST PUSH2 0x8C3 JUMP JUMPDEST PUSH2 0x7AF JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST PUSH0 SWAP2 SUB SLT PUSH2 0x3F3 JUMPI JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x3F3 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x461 DUP3 PUSH2 0x443 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x461 DUP3 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x461 DUP3 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH2 0x461 DUP3 PUSH2 0x443 JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0x461 DUP3 PUSH2 0x443 JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP3 SUB PUSH2 0x3F3 JUMPI JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP3 SUB PUSH2 0x3F3 JUMPI JUMP JUMPDEST PUSH2 0x104 CALLDATALOAD SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP3 SUB PUSH2 0x3F3 JUMPI JUMP JUMPDEST PUSH2 0x124 CALLDATALOAD SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP3 SUB PUSH2 0x3F3 JUMPI JUMP JUMPDEST PUSH2 0x144 CALLDATALOAD SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP3 SUB PUSH2 0x3F3 JUMPI JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP3 SUB PUSH2 0x3F3 JUMPI JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND SUB PUSH2 0x3F3 JUMPI JUMP JUMPDEST PUSH1 0xE4 CALLDATALOAD SWAP1 PUSH2 0x461 DUP3 PUSH2 0x4F8 JUMP JUMPDEST PUSH2 0x104 CALLDATALOAD SWAP1 PUSH2 0x461 DUP3 PUSH2 0x4F8 JUMP JUMPDEST PUSH2 0x124 CALLDATALOAD SWAP1 PUSH2 0x461 DUP3 PUSH2 0x4F8 JUMP JUMPDEST PUSH2 0x164 CALLDATALOAD SWAP1 PUSH2 0x461 DUP3 PUSH2 0x4F8 JUMP JUMPDEST PUSH2 0x144 CALLDATALOAD SWAP1 PUSH2 0x461 DUP3 PUSH2 0x4F8 JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0x461 DUP3 PUSH2 0x4F8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x57D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x556 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x57D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x57D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x57D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x57D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x57D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x57D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x57D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xC0 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x57D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x180 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x57D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x140 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x57D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x461 DUP3 PUSH2 0x59D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x461 DUP3 PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x57D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x6E7 DUP3 PUSH2 0x6C0 JUMP JUMPDEST SWAP2 PUSH2 0x6F5 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x624 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x3F3 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x3F3 JUMPI DUP2 PUSH1 0x20 PUSH2 0x72C SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x6DB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x57D JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 PUSH2 0x751 DUP3 PUSH2 0x72F JUMP JUMPDEST SWAP2 PUSH2 0x75F PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x624 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 SWAP5 ADD SWAP2 PUSH1 0x5 SHL DUP2 ADD SWAP3 DUP4 GT PUSH2 0x3F3 JUMPI SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x785 JUMPI POP POP POP POP JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x778 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x3F3 JUMPI DUP2 PUSH1 0x20 PUSH2 0x72C SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x746 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH2 0x180 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x7CD DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH2 0x7D5 PUSH2 0x463 JUMP JUMPDEST SWAP1 PUSH2 0x7DE PUSH2 0x470 JUMP JUMPDEST PUSH2 0x7E6 PUSH2 0x495 JUMP JUMPDEST SWAP3 PUSH2 0x7EF PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x7F7 PUSH2 0x506 JUMP JUMPDEST PUSH2 0x7FF PUSH2 0x513 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP7 SWAP1 SWAP3 SWAP1 PUSH2 0x124 CALLDATALOAD DUP9 DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x824 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST SWAP5 PUSH2 0x164 CALLDATALOAD SWAP9 DUP10 GT PUSH2 0x3F3 JUMPI PUSH2 0x841 PUSH2 0x18 SWAP10 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x794 JUMP JUMPDEST SWAP8 PUSH2 0x144 CALLDATALOAD SWAP8 PUSH1 0x84 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0x100 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x86D DUP2 PUSH2 0x443 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD PUSH2 0x87A DUP2 PUSH2 0x443 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x84 CALLDATALOAD DUP1 PUSH1 0x7 SIGNEXTEND DUP2 SUB PUSH2 0x3F3 JUMPI SWAP2 PUSH1 0xA4 CALLDATALOAD PUSH2 0x89D DUP2 PUSH2 0x4F8 JUMP JUMPDEST SWAP2 PUSH1 0xC4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3F3 JUMPI PUSH2 0x8BC SWAP2 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST SWAP1 PUSH1 0xE4 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH2 0x8F8 PUSH2 0x8CF CALLDATASIZE PUSH2 0x854 JUMP JUMPDEST POP SWAP6 PUSH2 0x8DF SWAP6 SWAP2 SWAP6 SWAP5 SWAP3 SWAP5 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x8F2 PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE8 SHR AND ISZERO PUSH2 0x290E JUMP JUMPDEST CALLER PUSH2 0x38C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x20 SWAP1 DUP3 CALLDATALOAD PUSH2 0x977 DUP2 PUSH2 0x72F JUMP JUMPDEST SWAP4 PUSH2 0x985 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x624 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x3F3 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x9AE JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x9A0 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x20 SWAP1 DUP3 CALLDATALOAD PUSH2 0x9D7 DUP2 PUSH2 0x72F JUMP JUMPDEST SWAP4 PUSH2 0x9E5 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x624 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x3F3 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xA0E JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 DUP1 SWAP2 DUP4 CALLDATALOAD PUSH2 0xA1C DUP2 PUSH2 0x443 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x3 NOT PUSH1 0x60 CALLDATASIZE DUP3 ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xA40 DUP2 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP4 DUP3 GT PUSH2 0x3F3 JUMPI PUSH1 0xC0 SWAP1 DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x3F3 JUMPI PUSH2 0xA68 PUSH2 0x647 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x4 ADD CALLDATALOAD DUP3 MSTORE PUSH1 0x24 DUP2 ADD CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x44 DUP2 ADD CALLDATALOAD DUP5 DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0xA96 SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP5 ADD ADD PUSH2 0x95D JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0xAA7 PUSH1 0x64 DUP3 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0xAB8 PUSH1 0x84 DUP3 ADD PUSH2 0x48A JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA4 DUP2 ADD CALLDATALOAD SWAP1 DUP5 DUP3 GT PUSH2 0x3F3 JUMPI PUSH1 0x4 PUSH2 0xAD9 SWAP3 CALLDATASIZE SWAP3 ADD ADD PUSH2 0x9BD JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD SWAP3 DUP4 GT PUSH2 0x3F3 JUMPI PUSH2 0xAF9 PUSH2 0x18 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x794 JUMP JUMPDEST SWAP2 PUSH2 0x294C JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH2 0x8F8 PUSH1 0x4 CALLDATALOAD PUSH2 0xB1F DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH2 0xB27 PUSH2 0x5086 JUMP JUMPDEST PUSH2 0xB2F PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x3C49 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xCBF SSTORE STOP JUMPDEST DUP1 ISZERO ISZERO SUB PUSH2 0x3F3 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x461 DUP3 PUSH2 0xB4E JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xB82 DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH32 0xA21FDD43D0AD0C62689EE7230A47309A050755BCC52EBA00310ADD65297692A PUSH1 0x20 PUSH1 0x44 CALLDATALOAD SWAP3 PUSH2 0xBB6 DUP5 PUSH2 0xB4E JUMP JUMPDEST PUSH2 0xBBE PUSH2 0x5086 JUMP JUMPDEST PUSH2 0xBC6 PUSH2 0x36D1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 PUSH0 MSTORE PUSH2 0x86D DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP6 PUSH0 MSTORE DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 ISZERO ISZERO SWAP1 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x20 PUSH2 0xCBF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5C7B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST SWAP1 DUP2 PUSH2 0x180 SWAP2 SUB SLT PUSH2 0x3F3 JUMPI SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0xC87 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC48 JUMP JUMPDEST PUSH2 0xC8F PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0xCA2 PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE0 SHR AND ISZERO PUSH2 0x2B34 JUMP JUMPDEST PUSH2 0xCAF PUSH2 0x140 DUP3 ADD PUSH2 0x2B6F JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0xCBF SLOAD SWAP2 AND LT ISZERO DUP1 PUSH2 0xD63 JUMPI JUMPDEST PUSH2 0xD51 JUMPI PUSH2 0xD47 SWAP1 PUSH2 0xD33 PUSH2 0xCDF PUSH2 0xCDA CALLDATASIZE DUP5 PUSH2 0x2265 JUMP JUMPDEST PUSH2 0x3D93 JUMP JUMPDEST SWAP2 PUSH1 0xC0 PUSH2 0xD2C PUSH2 0xCF1 PUSH1 0x20 DUP5 ADD PUSH2 0x2B79 JUMP JUMPDEST PUSH2 0xCFF PUSH2 0x160 DUP6 ADD DUP6 PUSH2 0x2B83 JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH2 0xD0A PUSH2 0x647 JUMP JUMPDEST SWAP8 PUSH2 0xD15 CALLDATASIZE DUP4 PUSH2 0x2265 JUMP JUMPDEST DUP10 MSTORE PUSH1 0x20 DUP10 ADD MSTORE ADD CALLDATALOAD PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD PUSH2 0x2BB5 JUMP JUMPDEST CALLDATASIZE SWAP2 PUSH2 0x6DB JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE CALLER SWAP1 PUSH2 0x3EDE JUMP JUMPDEST PUSH2 0x18 PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC3A9B9D PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH2 0xD70 PUSH1 0x40 DUP3 ADD PUSH2 0x2B79 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0xCC2 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xD9E DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP2 SWAP1 PUSH2 0xDD7 ADDRESS DUP5 EQ ISZERO PUSH2 0x2BC4 JUMP JUMPDEST PUSH2 0xDF3 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 DUP3 DUP6 SLOAD AND EQ PUSH2 0x2C12 JUMP JUMPDEST PUSH2 0xDFB PUSH2 0x5086 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0xE08 DUP3 PUSH2 0x5D3 JUMP JUMPDEST PUSH0 DUP3 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE2E JUMPI POP POP PUSH2 0x18 SWAP2 POP PUSH2 0x56C0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH1 0x40 SWAP5 SWAP4 SWAP5 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP3 MSTORE DUP7 AND GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0xE88 JUMPI JUMPDEST POP PUSH2 0xE75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xE71 PUSH1 0x4 DUP3 ADD PUSH2 0x46A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x18 SWAP4 PUSH2 0xE83 SWAP2 EQ PUSH2 0x464B JUMP JUMPDEST PUSH2 0x55DB JUMP JUMPDEST PUSH2 0xEAB SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xEB2 JUMPI JUMPDEST PUSH2 0xEA3 DUP2 DUP4 PUSH2 0x624 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x463C JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0xE53 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xE99 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH2 0x180 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xED7 DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0xEE3 DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH2 0xEEF DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0xE4 CALLDATALOAD DUP1 PUSH1 0x7 SIGNEXTEND DUP2 SUB PUSH2 0x3F3 JUMPI PUSH2 0xF04 PUSH2 0x4B5 JUMP JUMPDEST PUSH2 0xF0C PUSH2 0x521 JUMP JUMPDEST PUSH2 0x144 CALLDATALOAD SWAP6 SWAP1 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 GT PUSH2 0x3F3 JUMPI PUSH2 0xF33 PUSH2 0x18 SWAP8 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST SWAP5 PUSH2 0x164 CALLDATALOAD SWAP7 PUSH1 0xC4 CALLDATALOAD SWAP3 PUSH1 0xA4 CALLDATALOAD SWAP3 PUSH1 0x84 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH2 0x2C60 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0xF6D PUSH2 0x5086 JUMP JUMPDEST PUSH2 0xF75 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x86C DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x57D JUMPI PUSH4 0xFFFFFFFF SWAP2 PUSH1 0x1 DUP3 ADD SWAP1 SSTORE DUP4 PUSH2 0xF9C DUP3 PUSH2 0x2605 JUMP JUMPDEST POP DUP5 PUSH1 0x1 DUP3 ADD SSTORE SSTORE AND PUSH32 0xC86BA04C55BC5EB2F2876B91C438849A296DBEC7B08751C3074D92E04F0A77AF PUSH0 DUP1 LOG4 PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x3F3 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x3F3 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x3F3 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x101A DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1027 DUP3 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH2 0x1036 DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 PUSH1 0x84 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x1057 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH1 0xA4 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x3F3 JUMPI PUSH2 0x10FF PUSH4 0xFFFFFFFF PUSH32 0xB0A29AED3D389A1041194255878B423F7780BE3ED2324D4693508C6FF189845E SWAP7 PUSH2 0x109F PUSH2 0x1111 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP4 SWAP1 SWAP10 PUSH2 0x10AA PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x10D7 DUP13 DUP13 DUP12 DUP12 PUSH2 0x10B9 PUSH2 0x3450 JUMP JUMPDEST PUSH2 0x10D0 PUSH2 0x10C7 CALLDATASIZE DUP12 DUP11 PUSH2 0x6DB JUMP JUMPDEST SWAP5 DUP13 CALLDATASIZE SWAP2 PUSH2 0x6DB JUMP JUMPDEST SWAP5 DUP13 PUSH2 0x4FB3 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 DUP12 MSTORE AND PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP11 ADD MSTORE PUSH1 0x80 DUP10 ADD SWAP2 PUSH2 0x2D5D JUMP JUMPDEST SWAP4 DUP7 DUP6 SUB PUSH1 0x60 DUP9 ADD MSTORE AND SWAP9 AND SWAP7 PUSH2 0x2D5D JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1133 DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x1152 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP3 SWAP2 SWAP1 PUSH2 0x118C ADDRESS DUP6 EQ ISZERO PUSH2 0x2BC4 JUMP JUMPDEST PUSH2 0x11A8 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 DUP3 DUP7 SLOAD AND EQ PUSH2 0x2C12 JUMP JUMPDEST PUSH2 0x11B0 PUSH2 0x5086 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11D3 JUMPI POP POP PUSH2 0x18 SWAP2 POP PUSH2 0x56C0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH1 0x40 SWAP5 SWAP4 SWAP5 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP3 MSTORE DUP7 AND GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0x1229 JUMPI JUMPDEST POP PUSH2 0x1216 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xE71 PUSH1 0x4 DUP3 ADD PUSH2 0x46A9 JUMP JUMPDEST PUSH2 0x18 SWAP4 PUSH2 0x1224 SWAP2 EQ PUSH2 0x464B JUMP JUMPDEST PUSH2 0x5681 JUMP JUMPDEST PUSH2 0x1243 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xEB2 JUMPI PUSH2 0xEA3 DUP2 DUP4 PUSH2 0x624 JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH2 0x86D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH0 MSTORE PUSH2 0x872 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH0 MSTORE PUSH2 0x86E PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x129F DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH2 0x86D PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x24 CALLDATALOAD PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH2 0x869 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x1361 JUMPI PUSH1 0x40 MLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x1B1959081D1A1C9BDD59DA0819195B1959D85D1958D85B1B PUSH1 0x42 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x120 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x13E0 DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x13EC DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x13F9 DUP3 PUSH2 0x443 JUMP JUMPDEST PUSH2 0x1401 PUSH2 0x495 JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD SWAP2 PUSH2 0x140E DUP4 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0xE4 CALLDATALOAD SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 GT PUSH2 0x3F3 JUMPI PUSH2 0x1431 PUSH2 0x8F8 SWAP7 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST SWAP5 PUSH2 0x143A PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x144D PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE8 SHR AND ISZERO PUSH2 0x290E JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH2 0x38C7 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH2 0x200 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH2 0x14B4 PUSH2 0x454 JUMP JUMPDEST PUSH2 0x14BC PUSH2 0x463 JUMP JUMPDEST SWAP1 PUSH2 0x14C5 PUSH2 0x470 JUMP JUMPDEST SWAP2 PUSH2 0x14CE PUSH2 0x47D JUMP JUMPDEST SWAP3 PUSH2 0x14D7 PUSH2 0x4B5 JUMP JUMPDEST SWAP4 PUSH2 0x14E0 PUSH2 0x4C6 JUMP JUMPDEST PUSH2 0x14E8 PUSH2 0x4D7 JUMP JUMPDEST PUSH2 0x14F0 PUSH2 0x52F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP8 SWAP1 SWAP3 SWAP1 PUSH2 0x184 CALLDATALOAD DUP10 DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x1515 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST SWAP5 PUSH2 0x1A4 CALLDATALOAD DUP11 DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x152F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST SWAP7 PUSH2 0x1C4 CALLDATALOAD SWAP11 DUP12 GT PUSH2 0x3F3 JUMPI PUSH2 0x154C PUSH2 0x18 SWAP12 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST SWAP9 PUSH2 0x1E4 CALLDATALOAD SWAP11 PUSH1 0xE4 CALLDATALOAD SWAP4 PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH1 0x84 CALLDATALOAD SWAP4 PUSH2 0x2D7D JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x3F3 JUMPI PUSH2 0x158D DUP2 PUSH2 0x2E8F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH2 0x872 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE8 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x15DF DUP2 PUSH2 0x4F8 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH2 0x15EC DUP2 PUSH2 0x443 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH2 0x72C DUP2 PUSH2 0x443 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x1 PUSH2 0x1643 PUSH2 0x160C CALLDATASIZE PUSH2 0x15C7 JUMP JUMPDEST SWAP2 PUSH0 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO SWAP6 DUP7 SWAP2 DUP3 SWAP8 DUP9 SWAP4 PUSH2 0x16A0 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x168A JUMPI JUMPDEST PUSH2 0x1633 SWAP1 PUSH2 0x2E9E JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH0 SSTORE PUSH2 0x1673 JUMPI PUSH2 0x2F01 JUMP JUMPDEST PUSH2 0x1649 JUMPI STOP JUMPDEST PUSH2 0x1657 PUSH2 0xFF00 NOT PUSH0 SLOAD AND PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 LOG1 STOP JUMPDEST PUSH2 0x1685 PUSH2 0x100 PUSH2 0xFF00 NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x2F01 JUMP JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x162A JUMPI POP PUSH1 0xFF DUP2 AND DUP3 EQ PUSH2 0x162A JUMP JUMPDEST POP DUP2 PUSH1 0xFF DUP3 AND LT PUSH2 0x1623 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH2 0x16C4 PUSH2 0x5086 JUMP JUMPDEST PUSH2 0xC8C DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5C1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH32 0xE88463C2F254E2B070013A2DC7EE1E099F9BC00534CBDF03AF551DC26AE49219 PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x1735 DUP2 PUSH2 0xB4E JUMP JUMPDEST PUSH2 0x173D PUSH2 0x5086 JUMP JUMPDEST PUSH2 0x1745 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x86B DUP1 SLOAD PUSH1 0xFF PUSH1 0xE8 SHL NOT AND SWAP2 ISZERO ISZERO PUSH1 0xE8 DUP2 SWAP1 SHL PUSH1 0xFF PUSH1 0xE8 SHL AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1790 DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x179D DUP3 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP2 PUSH2 0x17AA DUP4 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 PUSH1 0xA4 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x17CB SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST SWAP2 PUSH1 0xC4 CALLDATALOAD SWAP5 DUP6 GT PUSH2 0x3F3 JUMPI PUSH2 0x17E7 PUSH2 0x18 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST SWAP4 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x4FB3 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH32 0xC40E7EBE8D73FD5A0CB54204770418C5A137493F190CCEC1BB558170CD0BF49A PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH2 0x180 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x184B DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1858 DUP3 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH2 0x1864 DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH2 0x1871 DUP3 PUSH2 0x443 JUMP JUMPDEST PUSH1 0xE4 CALLDATALOAD PUSH2 0x187D DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH2 0x104 CALLDATALOAD PUSH2 0x188A DUP2 PUSH2 0x4F8 JUMP JUMPDEST PUSH2 0x124 CALLDATALOAD SWAP2 PUSH2 0x1898 DUP4 PUSH2 0x4F8 JUMP JUMPDEST PUSH2 0x18A0 PUSH2 0x53D JUMP JUMPDEST PUSH2 0x164 CALLDATALOAD SWAP8 SWAP1 SWAP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP10 GT PUSH2 0x3F3 JUMPI PUSH2 0x18C7 PUSH2 0x18 SWAP10 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP9 SWAP1 SWAP8 PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH1 0x84 CALLDATALOAD SWAP4 PUSH2 0x2F44 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x18F8 DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP3 SUB PUSH2 0x3F3 JUMPI PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x1913 DUP4 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH2 0x191F DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 PUSH1 0x84 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x1940 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST SWAP3 PUSH1 0xA4 CALLDATALOAD SWAP6 DUP7 GT PUSH2 0x3F3 JUMPI PUSH2 0x195C PUSH2 0x18 SWAP7 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST SWAP5 PUSH2 0x3291 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x1993 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x95D JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH2 0x199F DUP2 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP1 PUSH2 0x19AC DUP3 PUSH2 0x443 JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD SWAP4 DUP5 GT PUSH2 0x3F3 JUMPI PUSH2 0x19C7 PUSH2 0x18 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x9BD JUMP JUMPDEST SWAP3 PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x3B67 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x19EF PUSH2 0x5086 JUMP JUMPDEST PUSH2 0x19F7 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x1A00 DUP2 PUSH2 0x2605 JUMP JUMPDEST PUSH2 0x1A38 JUMPI PUSH1 0x1 DUP2 PUSH0 DUP1 SWAP4 SSTORE ADD SSTORE PUSH32 0x3569B846531B754C99CB80DF3F49CD72FA6FE106AAEE5AB8E0CAF35A9D7CE88D PUSH0 DUP1 LOG2 PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH2 0xC8C SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH2 0x18 PUSH2 0x1AA3 PUSH2 0xB2F PUSH2 0x1A8B CALLDATASIZE PUSH2 0x15C7 JUMP JUMPDEST SWAP4 SWAP1 SWAP2 PUSH2 0x1A9E PUSH1 0xFF PUSH0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x3386 JUMP JUMPDEST PUSH2 0x3203 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AAF DUP2 PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 PUSH9 0x20A1A927A9A996AB19 PUSH1 0xB9 SHL DUP3 MSTORE PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1AD4 DUP4 PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x5 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 PUSH5 0x312E302E3 PUSH1 0xDC SHL DUP4 MSTORE PUSH2 0x1B01 PUSH1 0xFF PUSH0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x1AFC DUP2 PUSH2 0x3386 JUMP JUMPDEST PUSH2 0x3386 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 MLOAD SWAP1 KECCAK256 SWAP1 PUSH2 0x47F SSTORE PUSH2 0x480 SSTORE PUSH2 0x1B19 PUSH2 0x516B JUMP JUMPDEST PUSH2 0x1B21 PUSH2 0x517B JUMP JUMPDEST PUSH2 0x5196 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x1B56 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC48 JUMP JUMPDEST PUSH2 0x1B5E PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x1B71 PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE0 SHR AND ISZERO PUSH2 0x2B34 JUMP JUMPDEST PUSH2 0x140 DUP2 ADD SWAP1 PUSH2 0x1B80 DUP3 PUSH2 0x2B6F JUMP JUMPDEST PUSH2 0xCBF SLOAD SWAP1 DUP2 PUSH4 0xFFFFFFFF DUP1 SWAP3 AND LT ISZERO PUSH2 0x1CB8 JUMPI PUSH2 0x120 DUP4 ADD SWAP2 DUP2 PUSH2 0x1BA4 DUP5 PUSH2 0x2B6F JUMP JUMPDEST AND LT PUSH2 0x1CA6 JUMPI PUSH2 0x1BB7 PUSH2 0xCDA CALLDATASIZE DUP6 PUSH2 0x2265 JUMP JUMPDEST SWAP2 PUSH2 0x1BC1 DUP4 PUSH2 0x1264 JUMP JUMPDEST SLOAD PUSH2 0x1C95 JUMPI PUSH2 0x1BF9 PUSH2 0x1BF3 PUSH32 0x923794976D026D6B119735ADC163CB71DECFC903E17C3DC226C00789593C04E1 SWAP5 PUSH2 0x1264 JUMP JUMPDEST PUSH1 0x1 SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1C88 PUSH2 0x1C08 PUSH1 0x60 DUP7 ADD PUSH2 0x2B79 JUMP JUMPDEST SWAP6 PUSH2 0x1C15 PUSH1 0x80 DUP8 ADD PUSH2 0x2B79 JUMP JUMPDEST SWAP6 PUSH2 0x1C35 PUSH2 0x1C2F PUSH2 0x1C29 PUSH2 0x100 DUP5 ADD PUSH2 0x2B6F JUMP JUMPDEST SWAP6 PUSH2 0x2B6F JUMP JUMPDEST SWAP3 PUSH2 0x2B6F JUMP JUMPDEST PUSH2 0x1C41 PUSH1 0x40 DUP4 ADD PUSH2 0x2B79 JUMP JUMPDEST PUSH2 0x1C4A DUP4 PUSH2 0x2B79 JUMP JUMPDEST SWAP1 PUSH2 0x1C57 PUSH1 0x20 DUP6 ADD PUSH2 0x2B79 JUMP JUMPDEST SWAP3 PUSH2 0x1C66 PUSH2 0x160 DUP7 ADD DUP7 PUSH2 0x2B83 JUMP JUMPDEST SWAP7 SWAP1 SWAP6 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 AND SWAP14 PUSH1 0xE0 DUP3 ADD CALLDATALOAD SWAP14 PUSH1 0xA0 PUSH1 0xC0 DUP5 ADD CALLDATALOAD SWAP4 ADD CALLDATALOAD SWAP2 DUP13 PUSH2 0x33E6 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH2 0x18 PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x4BE791 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD642B7D9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x277AE7B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH32 0x2D5B62420992E5A4AFCE0E77742636CA2608EF58289FD2E1BAA5161EF6E7E41E PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D0A DUP2 PUSH2 0xB4E JUMP JUMPDEST PUSH2 0x1D12 PUSH2 0x5086 JUMP JUMPDEST PUSH2 0x1D1A PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x86B DUP1 SLOAD PUSH1 0xFF PUSH1 0xE0 SHL NOT AND SWAP2 ISZERO ISZERO PUSH1 0xE0 DUP2 SWAP1 SHL PUSH1 0xFF PUSH1 0xE0 SHL AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x20 PUSH2 0x1D62 PUSH2 0x3450 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x20 PUSH4 0xFFFFFFFF PUSH2 0x86B SLOAD PUSH1 0xC0 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5C5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x3F3 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x3F3 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x3F3 JUMPI JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1DF9 JUMPI POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DEA JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1E22 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1DE8 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD SWAP1 PUSH1 0x20 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP3 PUSH1 0x20 PUSH1 0x40 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x1E63 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x1E81 PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0x1E09 JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x1EC2 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DB8 JUMP JUMPDEST SWAP2 PUSH2 0x1ECC DUP4 PUSH2 0x345E JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1EE4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x135D DUP8 DUP3 PUSH2 0x1E2E JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1EF1 DUP4 DUP6 DUP9 PUSH2 0x34A7 JUMP JUMPDEST PUSH1 0x40 SWAP4 SWAP2 PUSH2 0x1F03 DUP6 MLOAD DUP1 SWAP4 DUP2 SWAP4 PUSH2 0x34C2 JUMP JUMPDEST SUB SWAP1 ADDRESS GAS DELEGATECALL SWAP1 PUSH2 0x1F11 PUSH2 0x34CF JUMP JUMPDEST SWAP2 ISZERO PUSH2 0x1F38 JUMPI POP SWAP1 PUSH1 0x1 SWAP2 PUSH2 0x1F26 DUP3 DUP9 PUSH2 0x356D JUMP JUMPDEST MSTORE PUSH2 0x1F31 DUP2 DUP8 PUSH2 0x356D JUMP JUMPDEST POP ADD PUSH2 0x1ECF JUMP JUMPDEST DUP5 DUP3 PUSH1 0x44 DUP2 MLOAD LT PUSH2 0x3F3 JUMPI PUSH2 0x1F5C DUP2 DUP4 PUSH2 0xE71 SWAP4 ADD MLOAD PUSH1 0x24 DUP1 SWAP2 DUP4 ADD ADD SWAP2 ADD PUSH2 0x34FE JUMP JUMPDEST SWAP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 DUP4 ADD PUSH2 0x355C JUMP JUMPDEST PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1F89 DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x1F95 DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH2 0x1F9D PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x3F3 JUMPI PUSH2 0x1FC1 PUSH2 0x8F8 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST SWAP3 PUSH4 0xFFFFFFFF PUSH2 0xCBF SLOAD AND SWAP3 PUSH2 0x1FD5 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x1FE8 PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE8 SHR AND ISZERO PUSH2 0x290E JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 CALLER PUSH2 0x38C7 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x40 MLOAD PUSH12 0x1D6329F1C35CA4BFABB9F561 PUSH1 0x28 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x3 NOT PUSH1 0x60 CALLDATASIZE DUP3 ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT PUSH2 0x3F3 JUMPI PUSH1 0x60 DUP3 CALLDATASIZE SUB SWAP4 DUP5 ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x205E DUP3 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x2076 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DB8 JUMP JUMPDEST SWAP2 SWAP1 SWAP4 PUSH2 0x2081 PUSH2 0x36D1 JUMP JUMPDEST PUSH1 0x4 DUP5 ADD CALLDATALOAD SWAP1 PUSH2 0x182 NOT ADD DUP2 SLT ISZERO PUSH2 0x3F3 JUMPI PUSH2 0xD47 SWAP5 PUSH2 0x2121 SWAP4 PUSH2 0x20AE PUSH2 0x211A SWAP4 PUSH1 0x4 CALLDATASIZE SWAP2 DUP10 ADD ADD PUSH2 0x2265 JUMP JUMPDEST SWAP6 PUSH2 0x20C4 PUSH2 0x20BF PUSH1 0x80 DUP10 ADD MLOAD PUSH2 0x437 JUMP JUMPDEST PUSH2 0x3727 JUMP JUMPDEST PUSH2 0x2108 PUSH2 0x20D0 DUP9 PUSH2 0x3D93 JUMP JUMPDEST SWAP2 PUSH1 0x44 PUSH2 0x20E0 PUSH1 0x20 DUP12 ADD MLOAD PUSH2 0x437 JUMP JUMPDEST SWAP2 PUSH2 0x160 DUP12 ADD MLOAD SWAP5 PUSH2 0x20F0 PUSH2 0x647 JUMP JUMPDEST SWAP12 DUP13 MSTORE PUSH1 0x20 DUP13 ADD MSTORE ADD CALLDATALOAD PUSH1 0x40 DUP11 ADD MSTORE PUSH1 0x60 DUP10 ADD PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MSTORE PUSH0 PUSH1 0xA0 DUP8 ADD MSTORE CALLDATASIZE SWAP2 PUSH2 0x746 JUMP JUMPDEST SWAP1 DUP4 PUSH2 0x521F JUMP JUMPDEST PUSH2 0x417C JUMP JUMPDEST PUSH2 0x212F CALLDATASIZE PUSH2 0x854 JUMP JUMPDEST POP SWAP5 PUSH2 0x213D SWAP7 SWAP4 SWAP5 SWAP7 PUSH2 0x36D1 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0x86B SLOAD PUSH2 0x2156 PUSH1 0xFF DUP3 PUSH1 0xE8 SHR AND ISZERO PUSH2 0x290E JUMP JUMPDEST PUSH1 0xC0 SHR AND SWAP6 PUSH2 0x2167 PUSH2 0x1A9E DUP9 PUSH2 0x31EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP6 SWAP1 DUP10 SWAP1 DUP5 AND DUP1 DUP9 EQ DUP1 PUSH2 0x225C JUMPI JUMPDEST ISZERO PUSH2 0x2235 JUMPI POP PUSH2 0x21B2 SWAP1 CALLVALUE EQ PUSH2 0x3581 JUMP JUMPDEST DUP6 EXTCODESIZE ISZERO PUSH2 0x3F3 JUMPI PUSH0 PUSH1 0x4 SWAP7 PUSH1 0x40 MLOAD SWAP8 DUP9 DUP1 SWAP3 PUSH4 0xD0E30DB PUSH1 0xE4 SHL DUP3 MSTORE CALLVALUE SWAP1 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x2230 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BDB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 PUSH2 0x220A SWAP5 PUSH2 0x2217 JUMPI JUMPDEST POP JUMPDEST PUSH2 0x21FB PUSH2 0x3450 JUMP JUMPDEST SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 CALLER SWAP13 DUP9 PUSH2 0x3588 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x18 PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x2224 PUSH2 0x222A SWAP3 PUSH2 0x56A JUMP JUMPDEST DUP1 PUSH2 0x3E9 JUMP JUMPDEST PUSH0 PUSH2 0x21F1 JUMP JUMPDEST PUSH2 0x31E3 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BDB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP8 POP PUSH2 0x220A SWAP5 SWAP2 PUSH2 0x2257 SWAP2 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x5115 JUMP JUMPDEST PUSH2 0x21F3 JUMP JUMPDEST POP CALLVALUE ISZERO ISZERO PUSH2 0x21A1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x180 DUP4 DUP3 SUB SLT PUSH2 0x3F3 JUMPI PUSH2 0x227A PUSH2 0x666 JUMP JUMPDEST SWAP3 PUSH2 0x2284 DUP2 PUSH2 0x48A JUMP JUMPDEST DUP5 MSTORE PUSH2 0x2292 PUSH1 0x20 DUP3 ADD PUSH2 0x48A JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x22A3 PUSH1 0x40 DUP3 ADD PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x22B4 PUSH1 0x60 DUP3 ADD PUSH2 0x48A JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x22C5 PUSH1 0x80 DUP3 ADD PUSH2 0x48A JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD CALLDATALOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD CALLDATALOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD CALLDATALOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 PUSH2 0x22F6 DUP2 DUP4 ADD PUSH2 0x54B JUMP JUMPDEST SWAP1 DUP6 ADD MSTORE PUSH2 0x120 PUSH2 0x2308 DUP2 DUP4 ADD PUSH2 0x54B JUMP JUMPDEST SWAP1 DUP6 ADD MSTORE PUSH2 0x140 PUSH2 0x231A DUP2 DUP4 ADD PUSH2 0x54B JUMP JUMPDEST SWAP1 DUP6 ADD MSTORE PUSH2 0x160 SWAP2 DUP2 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x233E SWAP3 ADD PUSH2 0x711 JUMP JUMPDEST SWAP1 DUP4 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x3 NOT PUSH1 0x60 CALLDATASIZE DUP3 ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP4 GT PUSH2 0x3F3 JUMPI PUSH1 0xC0 SWAP1 DUP4 CALLDATASIZE SUB ADD SLT PUSH2 0x3F3 JUMPI PUSH2 0x237E PUSH2 0x647 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x4 ADD CALLDATALOAD DUP2 DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x239B SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP7 ADD ADD PUSH2 0x2265 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x24 DUP4 ADD CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x44 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x23BD PUSH1 0x64 DUP5 ADD PUSH2 0x48A JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x84 DUP4 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x18 SWAP3 PUSH2 0x23E4 PUSH1 0xA4 SWAP3 PUSH1 0x4 CALLDATASIZE SWAP2 DUP5 ADD ADD PUSH2 0x711 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x23F8 PUSH2 0x463 JUMP JUMPDEST PUSH2 0x2400 PUSH2 0xB58 JUMP JUMPDEST SWAP2 PUSH2 0x43FA JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH2 0x872 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x2462 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC48 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH2 0x246F DUP3 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x2487 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP5 DUP6 GT PUSH2 0x3F3 JUMPI PUSH2 0x24A3 PUSH2 0x18 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP5 SWAP1 SWAP4 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x35D0 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x40 MLOAD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH2 0x8F8 PUSH1 0x4 CALLDATALOAD PUSH2 0x2540 DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH2 0x2548 PUSH2 0x5086 JUMP JUMPDEST PUSH2 0x1B21 PUSH2 0x36D1 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH2 0x86A SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3F3 JUMPI PUSH0 PUSH2 0x25A6 DUP2 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST PUSH2 0x25AE PUSH2 0x36D1 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD CALLVALUE ADDRESS GAS CALL PUSH2 0x25C0 PUSH2 0x34CF JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x25CD JUMPI PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0xE71 SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x1E09 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x86C DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2621 JUMPI PUSH0 MSTORE PUSH1 0x3 PUSH1 0x20 PUSH0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x25F1 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x86C SLOAD DUP2 LT ISZERO PUSH2 0x3F3 JUMPI PUSH2 0x2650 PUSH1 0x40 SWAP2 PUSH2 0x2605 JUMP JUMPDEST POP PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xCBE SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x269B DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH2 0x26A3 PUSH2 0x5086 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x26BB JUMPI PUSH2 0x18 SWAP1 PUSH2 0x50DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH2 0x2758 PUSH1 0x4 CALLDATALOAD PUSH2 0x272F DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH2 0x102 PUSH0 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO DUP1 PUSH2 0x277B JUMPI JUMPDEST PUSH2 0x274B SWAP1 PUSH2 0x2E9E JUMP JUMPDEST PUSH2 0xFFFF NOT AND OR PUSH0 SSTORE PUSH2 0x3C49 JUMP JUMPDEST PUSH2 0xFF00 NOT PUSH0 SLOAD AND PUSH0 SSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x2 DUP2 MSTORE LOG1 STOP JUMPDEST POP PUSH1 0x2 PUSH1 0xFF DUP3 AND LT PUSH2 0x2742 JUMP JUMPDEST PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x27A1 DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x27AE DUP3 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH2 0x27BA DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH2 0x27C2 PUSH2 0x495 JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 GT PUSH2 0x3F3 JUMPI PUSH2 0x27E5 PUSH2 0x8F8 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST SWAP4 PUSH4 0xFFFFFFFF PUSH2 0xCBF SLOAD AND SWAP4 PUSH2 0x143A PUSH2 0x36D1 JUMP JUMPDEST SWAP11 SWAP9 SWAP6 SWAP4 SWAP1 SWAP8 SWAP10 SWAP7 SWAP5 SWAP3 PUSH2 0x280B PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x2814 DUP4 PUSH2 0x3727 JUMP JUMPDEST PUSH2 0x281C PUSH2 0x3450 JUMP JUMPDEST SWAP3 DUP10 PUSH2 0x2826 PUSH2 0x686 JUMP JUMPDEST PUSH2 0x2831 DUP2 SWAP16 DUP3 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 PUSH2 0x283E SWAP2 PUSH2 0x2BB5 JUMP JUMPDEST PUSH2 0x284B SWAP1 PUSH1 0x40 DUP15 ADD PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x80 DUP12 ADD MSTORE PUSH1 0xA0 DUP11 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0xE0 DUP9 ADD MSTORE PUSH4 0xFFFFFFFF AND PUSH2 0x100 DUP8 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x120 SWAP2 DUP1 DUP4 DUP10 ADD MSTORE PUSH2 0x288B PUSH2 0x686 JUMP JUMPDEST SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP5 PUSH0 DUP7 MSTORE PUSH1 0x40 DUP10 ADD PUSH0 SWAP1 MSTORE PUSH1 0x60 DUP10 ADD SWAP1 PUSH2 0x28AB SWAP2 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MSTORE PUSH0 PUSH1 0xA0 DUP9 ADD MSTORE PUSH12 0x1D6329F1C35CA4BFABB9F561 PUSH1 0x28 SHL PUSH1 0xC0 DUP9 ADD MSTORE PUSH0 NOT PUSH1 0xE0 DUP9 ADD MSTORE PUSH1 0x1 SWAP1 DUP8 ADD MSTORE DUP6 ADD MSTORE DUP4 MLOAD PUSH2 0x28E6 SWAP1 PUSH2 0x4792 JUMP JUMPDEST SWAP1 MSTORE PUSH2 0x28F2 SWAP2 DUP4 PUSH2 0x52B6 JUMP JUMPDEST PUSH2 0x28FB DUP2 PUSH2 0x4A04 JUMP JUMPDEST PUSH2 0x2904 SWAP2 PUSH2 0x4E84 JUMP JUMPDEST PUSH2 0x461 PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST ISZERO PUSH2 0x2915 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x506175736564206465706F73697473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 PUSH2 0x2955 PUSH2 0x36D1 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD SWAP2 PUSH2 0x2967 PUSH2 0x20BF DUP5 MLOAD PUSH2 0x437 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP2 DUP3 MLOAD PUSH2 0x2976 PUSH2 0x3450 JUMP JUMPDEST SUB PUSH2 0x2A6C JUMPI PUSH2 0x2996 PUSH2 0x299A SWAP2 DUP4 PUSH1 0x1 PUSH2 0x298E DUP10 PUSH2 0x2605 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x3A68 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2A5A JUMPI DUP1 PUSH1 0x60 PUSH32 0xF8BD640004BCEC1B89657020F561D0B070CBDF662D0B158DB9DCCB0A8301BFAB SWAP3 ADD SWAP4 PUSH2 0x29DC PUSH2 0x29D6 DUP7 MLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST DUP8 PUSH2 0x3AF9 JUMP JUMPDEST PUSH2 0x2A4D DUP5 MLOAD SWAP5 PUSH2 0x2A32 PUSH2 0x2A2B DUP6 MLOAD SWAP6 PUSH2 0x2A1B PUSH1 0x40 DUP3 ADD SWAP10 DUP11 MLOAD PUSH2 0x2A03 DUP14 MLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2A0D DUP11 MLOAD PUSH2 0x437 JUMP JUMPDEST SWAP2 PUSH1 0xA0 DUP7 ADD SWAP12 DUP13 MLOAD SWAP5 PUSH2 0x3B67 JUMP JUMPDEST MLOAD SWAP3 MLOAD SWAP8 MLOAD SWAP9 MLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP4 MLOAD PUSH2 0x437 JUMP JUMPDEST SWAP4 MLOAD PUSH4 0xFFFFFFFF SWAP5 DUP6 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 AND SWAP11 AND SWAP9 CALLER SWAP4 DUP7 PUSH2 0x2AED JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x461 PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x582F497D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3D23E4D1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2A9D JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2A8F JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2AD0 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2AC2 JUMP JUMPDEST SWAP4 PUSH2 0x2B0F PUSH1 0x80 SWAP5 SWAP4 PUSH2 0x2B2D SWAP4 SWAP9 SWAP8 SWAP9 DUP8 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0xA0 DUP8 ADD SWAP1 PUSH2 0x2A7E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x40 DUP8 ADD MSTORE DUP6 DUP2 SUB PUSH1 0x60 DUP8 ADD MSTORE SWAP1 PUSH2 0x2AB1 JUMP JUMPDEST SWAP5 AND SWAP2 ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0x2B3B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5061757365642066696C6C73 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLDATALOAD PUSH2 0x72C DUP2 PUSH2 0x4F8 JUMP JUMPDEST CALLDATALOAD PUSH2 0x72C DUP2 PUSH2 0x443 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x3F3 JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3F3 JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x3F3 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 MSTORE JUMP JUMPDEST ISZERO PUSH2 0x2BCB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B9B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2C19 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B9B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP11 SWAP7 SWAP3 SWAP10 SWAP4 SWAP6 SWAP1 SWAP9 SWAP8 SWAP10 PUSH2 0x2C72 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x86B SLOAD PUSH1 0xE0 SHR PUSH1 0xFF AND ISZERO PUSH2 0x2C86 SWAP1 PUSH2 0x2B34 JUMP JUMPDEST PUSH2 0x2C8E PUSH2 0x3450 JUMP JUMPDEST SWAP3 DUP11 PUSH2 0x2C98 PUSH2 0x686 JUMP JUMPDEST PUSH2 0x2CA3 DUP2 SWAP16 DUP3 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 PUSH2 0x2CB0 SWAP2 PUSH2 0x2BB5 JUMP JUMPDEST PUSH2 0x2CBD SWAP1 PUSH1 0x40 DUP15 ADD PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x80 DUP12 ADD MSTORE PUSH1 0xA0 DUP11 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0x7 DUP8 SWAP1 SIGNEXTEND PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 SWAP5 DUP6 DUP10 ADD SWAP1 PUSH2 0x2CF5 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x120 SWAP6 DUP2 DUP8 DUP11 ADD MSTORE PUSH2 0x2D06 PUSH2 0x686 JUMP JUMPDEST SWAP9 DUP10 MSTORE PUSH0 PUSH1 0x20 DUP11 ADD SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP9 SWAP1 SWAP9 SIGNEXTEND PUSH1 0x40 DUP11 ADD MSTORE PUSH2 0x2D29 SWAP1 PUSH1 0x60 DUP11 ADD PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD MSTORE DUP4 ADD PUSH0 SWAP1 MSTORE DUP3 ADD PUSH0 SWAP1 MSTORE DUP2 MLOAD PUSH2 0x2D52 SWAP1 PUSH2 0x4792 JUMP JUMPDEST SWAP1 MSTORE PUSH2 0x28FB DUP2 PUSH2 0x4A04 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP14 SWAP13 SWAP12 SWAP6 SWAP15 SWAP4 DUP15 SWAP8 SWAP10 SWAP4 SWAP12 SWAP9 SWAP3 SWAP12 PUSH2 0x2D93 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x86B SLOAD PUSH1 0xE0 SHR PUSH1 0xFF AND ISZERO PUSH2 0x2DA7 SWAP1 PUSH2 0x2B34 JUMP JUMPDEST PUSH2 0x2DAF PUSH2 0x3450 JUMP JUMPDEST SWAP3 PUSH2 0x2DB8 PUSH2 0x686 JUMP JUMPDEST SWAP10 PUSH2 0x2DC3 SWAP1 DUP12 PUSH2 0x2BB5 JUMP JUMPDEST PUSH2 0x2DD0 SWAP1 PUSH1 0x20 DUP12 ADD PUSH2 0x2BB5 JUMP JUMPDEST PUSH2 0x2DDD SWAP1 PUSH1 0x40 DUP11 ADD PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0x80 DUP8 ADD DUP10 SWAP1 MSTORE PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0xE0 DUP6 ADD MSTORE PUSH4 0xFFFFFFFF DUP6 AND PUSH2 0x100 DUP6 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 PUSH2 0x120 SWAP4 DUP5 DUP7 ADD MSTORE PUSH2 0x2E20 PUSH2 0x686 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH0 PUSH1 0x20 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x7 DUP10 SWAP1 SIGNEXTEND PUSH1 0x40 DUP8 ADD MSTORE SWAP5 SWAP13 DUP10 DUP15 PUSH1 0x60 ADD SWAP1 PUSH2 0x2E46 SWAP2 PUSH2 0x2BB5 JUMP JUMPDEST DUP14 DUP12 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD MSTORE PUSH1 0xC0 DUP14 ADD MSTORE PUSH1 0xE0 DUP13 ADD MSTORE DUP11 ADD PUSH0 SWAP1 MSTORE DUP10 ADD PUSH0 SWAP1 MSTORE DUP9 MLOAD PUSH2 0x2E70 SWAP1 PUSH2 0x4792 JUMP JUMPDEST SWAP1 MSTORE PUSH2 0x28F2 SWAP7 PUSH2 0x5022 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x3 GT ISZERO PUSH2 0x2E99 JUMPI JUMP JUMPDEST PUSH2 0x2E7B JUMP JUMPDEST ISZERO PUSH2 0x2EA5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x2F3A SWAP3 SWAP2 PUSH2 0x1AA3 PUSH2 0xB2F SWAP3 PUSH2 0x2F21 PUSH1 0xFF PUSH0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x1AFC DUP2 PUSH2 0x3386 JUMP JUMPDEST PUSH2 0x2F2A CALLER PUSH2 0x50DF JUMP JUMPDEST PUSH2 0x1A9E PUSH1 0xFF PUSH0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x3386 JUMP JUMPDEST PUSH2 0x461 TIMESTAMP PUSH2 0xCBF SSTORE JUMP JUMPDEST SWAP8 SWAP12 SWAP6 SWAP10 SWAP2 SWAP7 SWAP4 SWAP12 SWAP11 SWAP5 SWAP9 SWAP1 SWAP3 SWAP11 PUSH2 0x2F5A PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x2F6D PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE8 SHR AND ISZERO PUSH2 0x290E JUMP JUMPDEST PUSH2 0x2F94 PUSH2 0x2996 PUSH2 0x2F8D DUP14 PUSH2 0x2F80 DUP13 PUSH2 0x124A JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x319E JUMPI PUSH2 0xCBF SLOAD SWAP10 PUSH4 0xFFFFFFFF SWAP14 DUP15 PUSH2 0x2FB1 DUP14 DUP3 DUP7 AND SWAP1 PUSH2 0x31C4 JUMP JUMPDEST SWAP1 PUSH32 0x0 AND LT PUSH2 0x318C JUMPI DUP15 DUP1 DUP6 AND DUP14 DUP1 DUP3 LT SWAP3 DUP4 ISZERO PUSH2 0x3155 JUMPI JUMPDEST POP POP POP PUSH2 0x3143 JUMPI DUP15 SWAP12 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP13 DUP14 DUP10 AND SWAP1 DUP8 AND SWAP1 DUP2 DUP2 OR PUSH2 0x310D JUMPI JUMPDEST POP POP POP DUP12 PUSH32 0x0 AND DUP13 DUP12 AND DUP2 DUP2 EQ DUP1 PUSH2 0x3104 JUMPI JUMPDEST ISZERO PUSH2 0x30EA JUMPI POP DUP2 CALLVALUE SUB PUSH2 0x30D8 JUMPI DUP1 EXTCODESIZE ISZERO PUSH2 0x3F3 JUMPI PUSH0 PUSH1 0x4 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0xD0E30DB PUSH1 0xE4 SHL DUP3 MSTORE CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x2230 JUMPI PUSH2 0x30C5 JUMPI JUMPDEST POP JUMPDEST PUSH2 0x86B SLOAD PUSH1 0xC0 SHR PUSH4 0xFFFFFFFF AND SWAP15 DUP16 PUSH2 0x308D SWAP1 PUSH2 0x31EE JUMP JUMPDEST PUSH2 0x3096 SWAP1 PUSH2 0x3203 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP13 AND SWAP16 AND SWAP14 PUSH2 0x30AA SWAP11 DUP13 PUSH2 0x3229 JUMP JUMPDEST SUB PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG4 PUSH2 0x461 PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x2224 PUSH2 0x30D2 SWAP3 PUSH2 0x56A JUMP JUMPDEST PUSH0 PUSH2 0x3073 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6452A35D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x30D8 JUMPI DUP2 PUSH2 0x30FF SWAP2 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x5115 JUMP JUMPDEST PUSH2 0x3075 JUMP JUMPDEST POP CALLVALUE ISZERO ISZERO PUSH2 0x303B JUMP JUMPDEST ISZERO PUSH2 0x3131 JUMPI LT PUSH2 0x311F JUMPI PUSH0 DUP1 DUP1 PUSH2 0x3009 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x25A63A5B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x495D907F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x582E3889 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x3183 SWAP3 SWAP4 POP PUSH32 0x0 AND SWAP1 PUSH2 0x31D6 JUMP JUMPDEST LT DUP16 DUP14 DUP2 PUSH2 0x2FE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF722177F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2A58C4F3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x31D1 JUMPI JUMP JUMPDEST PUSH2 0x31B0 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x31D1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP1 SWAP2 AND SWAP1 DUP2 EQ PUSH2 0x31D1 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x86B DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xC0 SHL NOT AND PUSH1 0xC0 SWAP3 SWAP1 SWAP3 SHL PUSH4 0xFFFFFFFF PUSH1 0xC0 SHL AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH4 0xFFFFFFFF SWAP3 DUP4 AND PUSH1 0x80 DUP4 ADD MSTORE SWAP3 DUP3 AND PUSH1 0xA0 DUP3 ADD MSTORE SWAP3 AND PUSH1 0xC0 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0xE0 DUP3 ADD MSTORE SWAP2 AND PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x140 PUSH2 0x120 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x72C SWAP4 SWAP2 ADD SWAP2 PUSH2 0x2D5D JUMP JUMPDEST PUSH2 0x333A SWAP1 PUSH4 0xFFFFFFFF PUSH32 0xA6AA57BD282FC82378458DE27BE4EADFA791A0C7321C49562EEBA8B2643DD566 SWAP6 SWAP5 SWAP8 SWAP7 PUSH2 0x32C7 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x32FD DUP9 DUP3 DUP9 DUP9 PUSH1 0x7 SIGNEXTEND SWAP9 PUSH2 0x32ED PUSH8 0x6F05B59D3B20000 PUSH2 0x32E7 DUP13 PUSH2 0x515C JUMP JUMPDEST LT PUSH2 0x3344 JUMP JUMPDEST DUP14 PUSH2 0x32F6 PUSH2 0x3450 JUMP JUMPDEST SWAP1 DUP10 PUSH2 0x5022 JUMP JUMPDEST PUSH2 0x3328 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 DUP10 MSTORE AND PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x80 DUP8 ADD SWAP1 PUSH2 0x1E09 JUMP JUMPDEST SWAP3 DUP6 DUP5 SUB PUSH1 0x60 DUP8 ADD MSTORE AND SWAP8 AND SWAP6 PUSH2 0x1E09 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST ISZERO PUSH2 0x334B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E76616C69642072656C6179657220666565 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x338D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH4 0xFFFFFFFF SWAP3 DUP4 AND PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0xA0 DUP3 ADD MSTORE SWAP2 DUP2 AND PUSH1 0xC0 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0xE0 DUP3 ADD MSTORE SWAP2 AND PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x140 PUSH2 0x120 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x72C SWAP4 SWAP2 ADD SWAP2 PUSH2 0x2D5D JUMP JUMPDEST PUSH2 0xCBE SLOAD DUP1 PUSH2 0x72C JUMPI POP CHAINID SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3468 DUP3 PUSH2 0x72F JUMP JUMPDEST PUSH2 0x3475 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x624 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x3486 PUSH1 0x1F NOT SWAP2 PUSH2 0x72F JUMP JUMPDEST ADD SWAP1 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x3496 JUMPI POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x60 PUSH1 0x20 DUP1 SWAP4 DUP6 ADD ADD MSTORE ADD PUSH2 0x348A JUMP JUMPDEST SWAP1 DUP3 LT ISZERO PUSH2 0x2621 JUMPI PUSH2 0x34BE SWAP2 PUSH1 0x5 SHL DUP2 ADD SWAP1 PUSH2 0x2B83 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP1 DUP1 SWAP3 SWAP2 DUP3 CALLDATACOPY ADD PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x34F9 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x34E0 DUP3 PUSH2 0x6C0 JUMP JUMPDEST SWAP2 PUSH2 0x34EE PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x624 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x3F3 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3F3 JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x3F3 JUMPI DUP1 MLOAD PUSH2 0x3530 DUP2 PUSH2 0x6C0 JUMP JUMPDEST SWAP3 PUSH2 0x353E PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x624 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x3F3 JUMPI PUSH2 0x72C SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x1DE8 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x72C SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x1E09 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2621 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3F3 JUMPI JUMP JUMPDEST SWAP4 PUSH1 0xE0 SWAP6 SWAP4 PUSH2 0x72C SWAP9 SWAP8 SWAP4 PUSH4 0xFFFFFFFF SWAP4 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0x40 DUP7 ADD MSTORE AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH1 0x80 DUP5 ADD MSTORE AND PUSH1 0xA0 DUP3 ADD MSTORE DUP2 PUSH1 0xC0 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1E09 JUMP JUMPDEST SWAP5 SWAP1 SWAP7 SWAP4 SWAP6 PUSH2 0x35DD PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x35F0 PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE0 SHR AND ISZERO PUSH2 0x2B34 JUMP JUMPDEST PUSH2 0x35FD PUSH2 0x140 DUP8 ADD PUSH2 0x2B6F JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0xCBF SLOAD SWAP2 AND LT ISZERO DUP1 PUSH2 0x36B3 JUMPI JUMPDEST PUSH2 0xD51 JUMPI PUSH2 0x361E CALLDATASIZE DUP8 PUSH2 0x2265 JUMP JUMPDEST PUSH2 0x3627 SWAP1 PUSH2 0x3D93 JUMP JUMPDEST SWAP8 PUSH2 0x3630 PUSH2 0x647 JUMP JUMPDEST SWAP9 PUSH2 0x363B CALLDATASIZE DUP10 PUSH2 0x2265 JUMP JUMPDEST DUP11 MSTORE PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x40 DUP10 ADD DUP5 SWAP1 MSTORE PUSH2 0x3656 DUP6 PUSH1 0x60 DUP12 ADD PUSH2 0x2BB5 JUMP JUMPDEST PUSH2 0x3661 CALLDATASIZE DUP5 DUP11 PUSH2 0x6DB JUMP JUMPDEST PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0xA0 DUP10 ADD MSTORE PUSH2 0x3674 DUP7 PUSH2 0x2B79 JUMP JUMPDEST SWAP7 PUSH2 0x3682 PUSH2 0x100 DUP9 ADD PUSH2 0x2B6F JUMP JUMPDEST SWAP3 CALLDATASIZE SWAP1 PUSH2 0x368E SWAP3 PUSH2 0x6DB JUMP JUMPDEST SWAP5 CALLDATASIZE SWAP1 PUSH2 0x369A SWAP3 PUSH2 0x6DB JUMP JUMPDEST SWAP5 PUSH1 0xE0 ADD CALLDATALOAD SWAP1 PUSH2 0x36A9 SWAP7 PUSH2 0x4FB3 JUMP JUMPDEST CALLER PUSH2 0x2904 SWAP2 PUSH2 0x3EDE JUMP JUMPDEST POP PUSH2 0x36C0 PUSH1 0x40 DUP8 ADD PUSH2 0x2B79 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0x3610 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x65 SLOAD EQ PUSH2 0x36E2 JUMPI PUSH1 0x2 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH32 0x8A5AFA2F5694AE60F58FB8F4F1D7408F1CB0AAC9FFC67150D46E2C7D1BB911FF SWAP1 PUSH1 0x20 SWAP1 LOG1 JUMP JUMPDEST ISZERO PUSH2 0x3766 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x44697361626C656420726F757465 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x37A3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x416D6F756E7420746F6F206C61726765 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x37E2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x696E76616C69642071756F746554696D657374616D7 PUSH1 0x54 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3827 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH27 0x1B5CD9CB9D985B1D59481B5D5CDD081B585D18DA08185B5BDD5B9D PUSH1 0x2A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 SWAP4 PUSH2 0x72C SWAP7 SWAP6 SWAP2 SWAP3 SWAP5 PUSH2 0x140 SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP6 AND DUP7 MSTORE PUSH0 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH4 0xFFFFFFFF DUP1 SWAP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH0 PUSH1 0xC0 DUP5 ADD MSTORE AND PUSH1 0xE0 DUP3 ADD MSTORE PUSH0 PUSH2 0x100 DUP3 ADD MSTORE DUP2 PUSH2 0x120 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1E09 JUMP JUMPDEST SWAP2 SWAP6 SWAP7 SWAP4 SWAP5 SWAP3 SWAP1 SWAP3 PUSH2 0x38E7 PUSH2 0x38E2 PUSH2 0x2F8D DUP9 PUSH2 0x2F80 DUP12 PUSH2 0x124A JUMP JUMPDEST PUSH2 0x375F JUMP JUMPDEST PUSH1 0x7 SIGNEXTEND SWAP4 PUSH2 0x3900 PUSH8 0x6F05B59D3B20000 PUSH2 0x32E7 DUP8 PUSH2 0x515C JUMP JUMPDEST PUSH2 0x391A PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP4 GT ISZERO PUSH2 0x379C JUMP JUMPDEST PUSH2 0xCBF SLOAD SWAP4 PUSH2 0x395E PUSH2 0x3934 PUSH4 0xFFFFFFFF SWAP7 DUP8 DUP13 AND SWAP1 PUSH2 0x31C4 JUMP JUMPDEST DUP7 PUSH32 0x0 AND LT ISZERO PUSH2 0x37DB JUMP JUMPDEST PUSH2 0x86B SLOAD PUSH1 0xC0 SHR PUSH4 0xFFFFFFFF AND SWAP9 PUSH2 0x3978 PUSH2 0x1A9E DUP12 PUSH2 0x31EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 PUSH32 0x0 DUP8 AND SWAP5 DUP11 DUP9 AND DUP1 DUP8 EQ DUP1 PUSH2 0x3A5F JUMPI JUMPDEST ISZERO PUSH2 0x3A35 JUMPI POP PUSH2 0x39C2 DUP2 CALLVALUE EQ PUSH2 0x3820 JUMP JUMPDEST DUP6 EXTCODESIZE ISZERO PUSH2 0x3F3 JUMPI PUSH0 PUSH1 0x4 SWAP7 PUSH1 0x40 MLOAD SWAP8 DUP9 DUP1 SWAP3 PUSH4 0xD0E30DB PUSH1 0xE4 SHL DUP3 MSTORE CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x2230 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP10 PUSH2 0x3A1D SWAP8 PUSH2 0x3A0C SWAP3 PUSH2 0x3A22 JUMPI JUMPDEST POP JUMPDEST DUP3 PUSH2 0x5376 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 AND SWAP13 AND SWAP11 DUP8 PUSH2 0x386A JUMP JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST DUP1 PUSH2 0x2224 PUSH2 0x3A2F SWAP3 PUSH2 0x56A JUMP JUMPDEST PUSH0 PUSH2 0x3A04 JUMP JUMPDEST PUSH2 0x3A1D SWAP7 POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP10 PUSH2 0x3A5A DUP4 PUSH2 0x3A0C SWAP4 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x5115 JUMP JUMPDEST PUSH2 0x3A06 JUMP JUMPDEST POP CALLVALUE ISZERO ISZERO PUSH2 0x39B1 JUMP JUMPDEST PUSH2 0x72C SWAP3 SWAP2 PUSH1 0x40 MLOAD PUSH2 0x3AF0 DUP2 PUSH2 0x3AE2 PUSH1 0x20 DUP3 ADD SWAP5 PUSH1 0x20 DUP7 MSTORE DUP1 MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0xA0 PUSH2 0x3AAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0xC0 PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD SWAP1 PUSH2 0x2A7E JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP6 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH0 NOT PUSH1 0x1 DUP5 SHL ADD AND PUSH1 0xC0 DUP7 ADD MSTORE SWAP2 ADD MLOAD DUP4 DUP3 SUB PUSH1 0x3F NOT ADD PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x2AB1 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x624 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 PUSH2 0x53AC JUMP JUMPDEST PUSH2 0x3B04 PUSH1 0x2 SWAP2 PUSH2 0x2605 JUMP JUMPDEST POP ADD PUSH3 0xFFFFFF DUP3 PUSH1 0x8 SHR AND DUP1 PUSH0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP5 AND SHL DUP1 DUP1 SWAP5 AND EQ PUSH2 0x3B3C JUMPI PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP2 SLOAD OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x954476D9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP5 SWAP4 SWAP2 SWAP1 SWAP4 DUP1 MLOAD DUP3 MLOAD SUB PUSH2 0x3C37 JUMPI DUP2 MLOAD SWAP2 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x3BEB JUMPI POP POP POP POP DUP3 PUSH2 0x3B92 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 PUSH2 0x3BC3 PUSH32 0x828FC203220356DF8F072A91681CAEE7D5C75095E2A95E80ED5A14B384697F71 SWAP4 DUP7 PUSH2 0x5436 JUMP JUMPDEST PUSH2 0x3BDF PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP8 AND SWAP6 CALLER SWAP1 DUP4 PUSH2 0x3B4E JUMP JUMPDEST SUB SWAP1 LOG4 PUSH0 DUP1 DUP1 DUP1 PUSH2 0x3B8C JUMP JUMPDEST DUP1 PUSH2 0x3BF8 PUSH1 0x1 SWAP3 DUP5 PUSH2 0x356D JUMP JUMPDEST MLOAD DUP1 PUSH2 0x3C06 JUMPI JUMPDEST POP ADD PUSH2 0x3B7B JUMP JUMPDEST PUSH2 0x3C31 SWAP1 PUSH2 0x3C24 PUSH2 0x3C17 DUP5 DUP9 PUSH2 0x356D JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH2 0x53FD JUMP JUMPDEST PUSH0 PUSH2 0x3BFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x19A53167 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x3C91 JUMPI PUSH2 0x86A DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH32 0x1F17A88F67B0F49060A34BEC1A4723A563620E6AA265EB640B5046DCEE0759A0 PUSH0 DUP1 LOG2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4261642068756220706F6F6C2061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x72C SWAP2 PUSH2 0x180 SWAP1 PUSH2 0x3CE0 DUP2 DUP5 MLOAD PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x3CF2 PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x3D04 PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x3D16 PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x3D28 PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x80 DUP4 ADD SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x3D5E PUSH2 0x100 DUP1 DUP6 ADD MLOAD SWAP1 DUP4 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x120 DUP4 DUP2 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP3 ADD MSTORE PUSH2 0x140 DUP4 DUP2 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP3 ADD MSTORE DUP2 PUSH2 0x160 DUP1 SWAP5 ADD MLOAD SWAP4 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1E09 JUMP JUMPDEST PUSH2 0x3D9B PUSH2 0x3450 JUMP JUMPDEST PUSH2 0x3DCD PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x3DB9 PUSH1 0x20 DUP4 ADD SWAP6 PUSH1 0x40 DUP8 MSTORE PUSH1 0x60 DUP5 ADD SWAP1 PUSH2 0x3CCD JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP4 ADD MSTORE SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x624 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x3DDC DUP3 PUSH2 0x2E8F JUMP JUMPDEST MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND DUP2 MSTORE PUSH1 0x60 DUP1 PUSH2 0x3E08 PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x80 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD SWAP1 PUSH2 0x1E09 JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE ADD MLOAD SWAP2 PUSH2 0x3E1F DUP4 PUSH2 0x2E8F JUMP JUMPDEST ADD MSTORE SWAP1 JUMP JUMPDEST SWAP11 SWAP8 SWAP1 SWAP7 SWAP6 PUSH2 0x3E93 SWAP7 PUSH2 0x72C SWAP14 SWAP12 SWAP7 PUSH1 0x80 DUP15 PUSH2 0x3E88 SWAP9 PUSH2 0x3EA2 SWAP15 SWAP9 PUSH2 0x180 SWAP14 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP10 DUP11 DUP1 SWAP3 AND DUP6 MSTORE AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE DUP13 PUSH1 0xA0 PUSH4 0xFFFFFFFF DUP1 SWAP5 AND SWAP2 ADD MSTORE AND PUSH1 0xC0 DUP13 ADD MSTORE AND PUSH1 0xE0 DUP11 ADD MSTORE PUSH2 0x100 DUP10 ADD SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x120 DUP8 ADD SWAP1 PUSH2 0x12CF JUMP JUMPDEST DUP1 PUSH2 0x140 DUP7 ADD MSTORE DUP5 ADD SWAP1 PUSH2 0x1E09 JUMP JUMPDEST SWAP2 PUSH2 0x160 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x3DDF JUMP JUMPDEST SWAP1 PUSH2 0x72C SWAP5 SWAP4 PUSH1 0x80 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE AND PUSH1 0x40 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1E09 JUMP JUMPDEST DUP1 MLOAD SWAP2 PUSH2 0x120 DUP4 ADD SWAP1 PUSH2 0x3EF5 DUP3 MLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0xCBF SLOAD SWAP2 AND LT PUSH2 0x1CA6 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 PUSH2 0x3F15 DUP3 PUSH2 0x1264 JUMP JUMPDEST SLOAD SUB PUSH2 0x4175 JUMPI PUSH1 0x1 SWAP1 JUMPDEST PUSH1 0x2 PUSH2 0x3F2A DUP3 PUSH2 0x1264 JUMP JUMPDEST SLOAD EQ PUSH2 0x4163 JUMPI PUSH2 0x3F39 SWAP1 PUSH2 0x1264 JUMP JUMPDEST PUSH1 0x2 SWAP1 SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH2 0x3F4B SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x80 DUP7 ADD MLOAD PUSH2 0x3F59 SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP3 PUSH1 0xA0 DUP8 ADD MLOAD SWAP2 DUP7 PUSH1 0xC0 DUP10 ADD MLOAD SWAP5 DUP10 PUSH1 0xA0 DUP4 ADD MLOAD SWAP7 PUSH1 0xE0 DUP3 ADD MLOAD SWAP8 PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x3F87 SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP11 MLOAD PUSH4 0xFFFFFFFF AND PUSH2 0x140 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x40 DUP6 ADD MLOAD PUSH2 0x3FAA SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP3 DUP6 MLOAD PUSH2 0x3FB6 SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP5 PUSH1 0x20 DUP8 ADD MLOAD PUSH2 0x3FC5 SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP7 PUSH2 0x160 ADD MLOAD SWAP8 PUSH1 0x60 DUP11 ADD MLOAD PUSH2 0x3FDA SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP10 PUSH1 0x80 DUP2 ADD MLOAD SWAP1 PUSH1 0x40 ADD MLOAD SWAP1 PUSH2 0x3FEE PUSH2 0x6A6 JUMP JUMPDEST SWAP12 PUSH2 0x3FF9 SWAP1 DUP14 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x20 DUP13 ADD MSTORE PUSH1 0x40 DUP12 ADD MSTORE PUSH2 0x4010 SWAP1 PUSH1 0x60 DUP12 ADD PUSH2 0x3DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP12 AND SWAP15 PUSH4 0xFFFFFFFF AND SWAP14 SWAP11 SWAP12 DUP13 SWAP12 PUSH2 0x4034 SWAP12 DUP14 PUSH2 0x3E24 JUMP JUMPDEST SUB PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B7B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG4 PUSH1 0x60 DUP2 ADD MLOAD PUSH2 0x4053 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 CALLER DUP5 EQ DUP1 PUSH2 0x415B JUMPI JUMPDEST PUSH2 0x3B8C JUMPI PUSH1 0x80 PUSH2 0x4078 SWAP2 ADD MLOAD PUSH2 0x437 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD SWAP1 SWAP4 SWAP1 SWAP3 PUSH1 0x80 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH32 0x0 AND DUP4 SUB PUSH2 0x414B JUMPI POP PUSH2 0x40CA SWAP2 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x5115 JUMP JUMPDEST PUSH2 0x40D4 DUP6 DUP5 PUSH2 0x546D JUMP JUMPDEST ADD MLOAD SWAP2 EXTCODESIZE ISZERO ISZERO DUP1 PUSH2 0x4141 JUMPI JUMPDEST PUSH2 0x40EA JUMPI POP POP POP POP JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x3F3 JUMPI PUSH2 0x4117 SWAP4 PUSH0 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x3A5BE8CB PUSH1 0xE0 SHL DUP6 MSTORE CALLER SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x3EB1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x2230 JUMPI PUSH2 0x412E JUMPI JUMPDEST DUP1 DUP1 DUP1 PUSH2 0x3B8C JUMP JUMPDEST DUP1 PUSH2 0x2224 PUSH2 0x413B SWAP3 PUSH2 0x56A JUMP JUMPDEST PUSH0 PUSH2 0x4126 JUMP JUMPDEST POP DUP2 MLOAD ISZERO ISZERO PUSH2 0x40E0 JUMP JUMPDEST PUSH2 0x4156 SWAP3 CALLER SWAP1 PUSH2 0x5115 JUMP JUMPDEST PUSH2 0x40D4 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x4067 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4793063 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH0 SWAP1 PUSH2 0x3F1F JUMP JUMPDEST SWAP1 PUSH0 DUP3 MLOAD PUSH2 0x120 DUP2 ADD PUSH2 0x4193 DUP2 MLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0xCBF SLOAD SWAP2 AND LT PUSH2 0x1CA6 JUMPI PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x2 PUSH2 0x41B3 DUP3 PUSH2 0x1264 JUMP JUMPDEST SLOAD EQ PUSH2 0x4163 JUMPI PUSH2 0x41C2 SWAP1 PUSH2 0x1264 JUMP JUMPDEST PUSH1 0x2 SWAP1 SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x41D4 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x41E2 SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP1 PUSH1 0xA0 DUP5 ADD MLOAD SWAP3 PUSH1 0xC0 DUP6 ADD MLOAD SWAP2 DUP9 PUSH1 0xA0 DUP2 ADD MLOAD SWAP4 DUP8 PUSH1 0xE0 DUP2 ADD MLOAD SWAP6 PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x4210 SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP6 MLOAD PUSH4 0xFFFFFFFF AND PUSH2 0x140 DUP4 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x4232 SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP2 DUP5 MLOAD PUSH2 0x423E SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP4 PUSH1 0x20 DUP7 ADD MLOAD PUSH2 0x424D SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP6 PUSH2 0x160 ADD MLOAD SWAP7 PUSH1 0x60 DUP10 ADD MLOAD PUSH2 0x4262 SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP9 PUSH1 0x80 DUP2 ADD MLOAD SWAP1 PUSH1 0x40 ADD MLOAD SWAP1 PUSH2 0x4276 PUSH2 0x6A6 JUMP JUMPDEST SWAP11 PUSH2 0x4281 SWAP1 DUP13 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x20 DUP12 ADD MSTORE PUSH1 0x40 DUP11 ADD MSTORE PUSH1 0x2 PUSH1 0x60 DUP11 ADD MSTORE PUSH1 0x40 MLOAD SWAP14 PUSH4 0xFFFFFFFF DUP16 SWAP13 AND SWAP14 PUSH2 0x42A9 SWAP12 DUP14 PUSH2 0x3E24 JUMP JUMPDEST SUB PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B7B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH0 SWAP5 LOG4 PUSH1 0x60 DUP5 ADD MLOAD PUSH2 0x42CA SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP2 DUP6 DUP4 AND SWAP2 SWAP1 CALLER DUP4 EQ DUP1 PUSH2 0x43F3 JUMPI JUMPDEST PUSH2 0x43EA JUMPI PUSH1 0x80 PUSH2 0x42F4 SWAP2 ADD MLOAD PUSH2 0x437 JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP2 ADD MLOAD SWAP7 DUP8 DUP2 DUP5 AND SWAP2 PUSH32 0x0 AND DUP3 EQ PUSH0 EQ PUSH2 0x43D3 JUMPI SWAP1 PUSH1 0x80 SWAP3 SWAP2 DUP8 PUSH2 0x43BF JUMPI JUMPDEST PUSH2 0x4340 SWAP2 POP DUP6 PUSH2 0x546D JUMP JUMPDEST ADD MLOAD SWAP3 EXTCODESIZE ISZERO ISZERO DUP1 PUSH2 0x43B5 JUMPI JUMPDEST PUSH2 0x4359 JUMPI JUMPDEST POP POP POP POP SWAP1 POP JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x43B1 JUMPI DUP4 PUSH2 0x4385 SWAP6 SWAP7 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x3A5BE8CB PUSH1 0xE0 SHL DUP6 MSTORE CALLER SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x3EB1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x2230 JUMPI PUSH2 0x439E JUMPI JUMPDEST DUP1 DUP1 DUP1 DUP5 SWAP4 PUSH2 0x4351 JUMP JUMPDEST DUP1 PUSH2 0x2224 PUSH2 0x43AB SWAP3 PUSH2 0x56A JUMP JUMPDEST PUSH0 PUSH2 0x4394 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP DUP3 MLOAD ISZERO ISZERO PUSH2 0x434C JUMP JUMPDEST PUSH2 0x43CC SWAP2 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x5115 JUMP JUMPDEST PUSH0 DUP9 PUSH2 0x4335 JUMP JUMPDEST PUSH1 0x80 SWAP3 SWAP2 SWAP7 POP PUSH2 0x43E5 SWAP1 DUP7 PUSH0 SWAP9 PUSH2 0x53FD JUMP JUMPDEST PUSH2 0x4340 JUMP JUMPDEST POP POP POP POP POP SWAP1 POP JUMP JUMPDEST POP PUSH0 PUSH2 0x42E3 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP1 PUSH2 0x120 DUP3 ADD SWAP1 PUSH2 0x4413 DUP3 MLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0xCBF SLOAD SWAP2 AND LT PUSH2 0x1CA6 JUMPI PUSH1 0x20 DUP6 ADD MLOAD DUP5 ISZERO PUSH2 0x461C JUMPI PUSH1 0x2 SWAP1 JUMPDEST PUSH1 0x2 PUSH2 0x443D DUP3 PUSH2 0x1264 JUMP JUMPDEST SLOAD EQ PUSH2 0x4163 JUMPI PUSH2 0x444C SWAP1 PUSH2 0x1264 JUMP JUMPDEST PUSH1 0x2 SWAP1 SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH2 0x445E SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MLOAD PUSH2 0x446C SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP3 PUSH1 0xA0 DUP7 ADD MLOAD SWAP2 DUP9 PUSH1 0xC0 DUP9 ADD MLOAD SWAP5 DUP9 PUSH1 0xA0 DUP4 ADD MLOAD SWAP7 PUSH1 0xE0 DUP3 ADD MLOAD SWAP8 PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x449A SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP11 MLOAD PUSH4 0xFFFFFFFF AND PUSH2 0x140 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x40 DUP6 ADD MLOAD PUSH2 0x44BD SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP3 DUP6 MLOAD PUSH2 0x44C9 SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP5 PUSH1 0x20 DUP8 ADD MLOAD PUSH2 0x44D8 SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP7 PUSH2 0x160 ADD MLOAD SWAP8 PUSH1 0x60 DUP11 ADD MLOAD PUSH2 0x44ED SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP10 PUSH1 0x80 DUP2 ADD MLOAD SWAP1 PUSH1 0x40 ADD MLOAD SWAP1 PUSH2 0x4501 PUSH2 0x6A6 JUMP JUMPDEST SWAP12 PUSH2 0x450C SWAP1 DUP14 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x20 DUP13 ADD MSTORE PUSH1 0x40 DUP12 ADD MSTORE PUSH2 0x4523 SWAP1 PUSH1 0x60 DUP12 ADD PUSH2 0x3DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP12 AND SWAP15 PUSH4 0xFFFFFFFF AND SWAP14 SWAP11 SWAP12 DUP13 SWAP12 PUSH2 0x4547 SWAP12 DUP14 PUSH2 0x3E24 JUMP JUMPDEST SUB PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B7B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG4 PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x4566 SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 CALLER DUP3 EQ DUP1 PUSH2 0x4614 JUMPI JUMPDEST PUSH2 0x460D JUMPI PUSH2 0x458D PUSH1 0x80 DUP1 SWAP3 ADD MLOAD PUSH2 0x437 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD SWAP1 SWAP6 SWAP1 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP2 DUP8 SWAP2 DUP8 SWAP1 PUSH32 0x0 AND DUP5 SUB PUSH2 0x45F4 JUMPI POP ISZERO PUSH2 0x45E0 JUMPI JUMPDEST PUSH2 0x40D4 SWAP2 POP DUP5 PUSH2 0x546D JUMP JUMPDEST PUSH2 0x45ED SWAP2 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x5115 JUMP JUMPDEST PUSH0 DUP6 PUSH2 0x45D5 JUMP JUMPDEST SWAP1 PUSH2 0x4604 JUMPI PUSH2 0x4156 SWAP3 CALLER SWAP1 PUSH2 0x5115 JUMP JUMPDEST PUSH2 0x4156 SWAP3 PUSH2 0x53FD JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x457B JUMP JUMPDEST PUSH1 0x1 PUSH2 0x4627 DUP3 PUSH2 0x1264 JUMP JUMPDEST SLOAD SUB PUSH2 0x4636 JUMPI PUSH1 0x1 JUMPDEST SWAP1 PUSH2 0x4432 JUMP JUMPDEST PUSH0 PUSH2 0x4630 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x3F3 JUMPI MLOAD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x4652 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x80 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x2E PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH2 0x72C SWAP2 PUSH2 0x140 SWAP1 PUSH2 0x470B DUP2 DUP5 MLOAD PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x471D PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x472F PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x4761 PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0xC0 DUP4 ADD SWAP1 PUSH1 0x7 SIGNEXTEND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP4 DUP2 ADD MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 DUP3 ADD MSTORE PUSH2 0x100 DUP4 DUP2 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP3 ADD MSTORE DUP2 PUSH2 0x120 DUP1 SWAP5 ADD MLOAD SWAP4 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1E09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DCD DUP2 PUSH2 0x3AE2 PUSH1 0x20 DUP3 ADD SWAP5 PUSH1 0x20 DUP7 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x46F8 JUMP JUMPDEST ISZERO PUSH2 0x47B6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x696E76616C69642066656573 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x47F1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x1C995B185E48199A5B1B1959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x7 SWAP2 DUP3 SIGNEXTEND SWAP2 SIGNEXTEND ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x3F SHL SUB NOT DUP3 SLT PUSH1 0x1 PUSH1 0x1 PUSH1 0x3F SHL SUB DUP4 SGT OR PUSH2 0x31D1 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x4851 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x66696C6C20616D6F756E74207072652066656573206973203 PUSH1 0x3C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4899 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7061796F757441646A7573746D656E7450637420746F6F20736D616C6C000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x48E5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7061796F757441646A7573746D656E7450637420746F6F206C61726765000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP2 EQ PUSH2 0x31D1 JUMPI PUSH0 SUB SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x4941 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH28 0x536F6D65686F7720686974206D6178546F6B656E73546F53656E6421 PUSH1 0x20 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x498C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x34B73B30B634B2103932B830BCB6B2B73A1031B430B4B7 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x72C SWAP3 SWAP2 ADD SWAP1 PUSH2 0x1E09 JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 PUSH1 0x40 DUP2 ADD SWAP3 PUSH2 0x4A44 PUSH8 0x6F05B59D3B20000 DUP1 PUSH2 0x4A36 PUSH2 0x4A31 PUSH2 0x4A2B DUP10 MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST PUSH2 0x515C JUMP JUMPDEST LT SWAP1 DUP2 PUSH2 0x4DA3 JUMPI JUMPDEST POP PUSH2 0x47AF JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x4A63 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 MLOAD GT ISZERO PUSH2 0x379C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x4A7E PUSH2 0x4A75 DUP4 MLOAD PUSH2 0x1273 JUMP JUMPDEST SLOAD DUP3 MLOAD GT PUSH2 0x47EA JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD SWAP3 DUP4 MLOAD SWAP7 PUSH2 0x4AAE PUSH1 0xC0 DUP4 ADD SWAP9 PUSH2 0x4AA8 PUSH2 0x4A9C DUP12 MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST DUP5 MLOAD PUSH1 0x7 SIGNEXTEND JUMPDEST SWAP1 PUSH2 0x4825 JUMP JUMPDEST SWAP1 PUSH2 0x574F JUMP JUMPDEST SWAP8 PUSH2 0x4ABA DUP10 ISZERO ISZERO PUSH2 0x484A JUMP JUMPDEST PUSH2 0x4AD0 DUP5 MLOAD PUSH2 0x4AC9 DUP8 MLOAD PUSH2 0x1273 JUMP JUMPDEST SLOAD SWAP1 PUSH2 0x31C4 JUMP JUMPDEST DUP10 DUP2 LT PUSH2 0x4D99 JUMPI JUMPDEST POP PUSH2 0x4A2B PUSH2 0x4AFF SWAP3 PUSH2 0x4AA2 PUSH2 0x4AF1 PUSH2 0x4AF9 SWAP5 MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST SWAP2 MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST DUP9 PUSH2 0x5376 JUMP JUMPDEST SWAP4 PUSH2 0x120 DUP7 ADD DUP1 MLOAD DUP1 PUSH2 0x4D44 JUMPI JUMPDEST POP POP POP PUSH1 0xA0 DUP6 ADD MLOAD DUP8 DUP7 MLOAD SWAP2 PUSH1 0xA0 DUP4 ADD MLOAD EQ SWAP2 DUP3 ISZERO PUSH2 0x4D36 JUMPI JUMPDEST POP POP DUP1 ISZERO PUSH2 0x4D1D JUMPI JUMPDEST PUSH2 0x4B39 SWAP1 PUSH2 0x4985 JUMP JUMPDEST PUSH2 0x4B43 DUP4 MLOAD PUSH2 0x1273 JUMP JUMPDEST PUSH2 0x4B4E DUP9 DUP3 SLOAD PUSH2 0x31D6 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x60 DUP6 ADD SWAP2 PUSH2 0x4B5F DUP4 MLOAD PUSH2 0x437 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 CALLER DUP5 DUP7 AND EQ DUP1 PUSH2 0x4D06 JUMPI JUMPDEST PUSH2 0x4CFC JUMPI SWAP1 PUSH1 0x40 PUSH2 0x4BF2 SWAP3 ADD SWAP5 DUP8 DUP6 PUSH2 0x4B8D DUP9 MLOAD PUSH2 0x437 JUMP JUMPDEST AND SWAP2 PUSH32 0x0 DUP8 AND DUP4 SUB PUSH2 0x4CB3 JUMPI POP POP POP PUSH2 0x4BCC PUSH2 0x2996 PUSH2 0x100 DUP11 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x4C94 JUMPI JUMPDEST PUSH2 0x4BEC DUP8 PUSH2 0x4BE7 PUSH2 0x4BE2 DUP5 MLOAD PUSH2 0x437 JUMP JUMPDEST PUSH2 0x437 JUMP JUMPDEST PUSH2 0x546D JUMP JUMPDEST MLOAD PUSH2 0x437 JUMP JUMPDEST SWAP2 DUP3 EXTCODESIZE ISZERO ISZERO DUP1 PUSH2 0x4C86 JUMPI JUMPDEST PUSH2 0x4C0B JUMPI JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4C1D PUSH2 0x4C24 SWAP2 PUSH1 0x80 SWAP5 AND SWAP5 MLOAD PUSH2 0x437 JUMP JUMPDEST SWAP5 MLOAD PUSH2 0x1273 JUMP JUMPDEST SLOAD SWAP1 MLOAD GT ISZERO SWAP5 ADD MLOAD SWAP4 DUP2 EXTCODESIZE ISZERO PUSH2 0x3F3 JUMPI PUSH0 DUP1 SWAP5 PUSH2 0x4C59 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x1D43F27 PUSH1 0xE3 SHL DUP7 MSTORE CALLER SWAP3 PUSH1 0x4 DUP8 ADD PUSH2 0x49CB JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x2230 JUMPI PUSH2 0x4C73 JUMPI JUMPDEST DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x4C02 JUMP JUMPDEST DUP1 PUSH2 0x2224 PUSH2 0x4C80 SWAP3 PUSH2 0x56A JUMP JUMPDEST PUSH0 PUSH2 0x4C68 JUMP JUMPDEST POP PUSH1 0x80 DUP8 ADD MLOAD MLOAD ISZERO ISZERO PUSH2 0x4BFD JUMP JUMPDEST PUSH2 0x4CAE DUP8 PUSH2 0x4CA5 PUSH2 0x4BE2 DUP9 MLOAD PUSH2 0x437 JUMP JUMPDEST ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x5115 JUMP JUMPDEST PUSH2 0x4BD1 JUMP JUMPDEST PUSH2 0x4CC4 PUSH2 0x2996 PUSH2 0x100 DUP14 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x4CF3 JUMPI POP PUSH2 0x4CEE SWAP2 POP PUSH2 0x4CDC PUSH2 0x4BE2 DUP9 MLOAD PUSH2 0x437 JUMP JUMPDEST PUSH2 0x4CE6 DUP5 MLOAD PUSH2 0x437 JUMP JUMPDEST SWAP1 CALLER SWAP1 PUSH2 0x5115 JUMP JUMPDEST PUSH2 0x4BEC JUMP JUMPDEST PUSH2 0x4CEE SWAP3 PUSH2 0x53FD JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST POP PUSH2 0x4D18 PUSH2 0x2996 PUSH2 0x100 DUP11 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x4B74 JUMP JUMPDEST POP PUSH2 0x4B39 PUSH2 0x4D2F PUSH2 0x100 DUP8 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x4B30 JUMP JUMPDEST PUSH1 0x60 ADD MLOAD EQ SWAP1 POP DUP8 PUSH0 PUSH2 0x4B27 JUMP JUMPDEST SWAP6 PUSH2 0x4D81 PUSH2 0x4D87 SWAP3 PUSH2 0x4D65 PUSH2 0x4D91 SWAP6 SWAP10 PUSH8 0xDE0B6B3A763FFFF NOT SGT ISZERO PUSH2 0x4892 JUMP JUMPDEST PUSH2 0x4D7B PUSH9 0x56BC75E2D63100000 DUP3 MLOAD SGT ISZERO PUSH2 0x48DE JUMP JUMPDEST MLOAD PUSH2 0x492A JUMP JUMPDEST SWAP1 PUSH2 0x5376 JUMP JUMPDEST SWAP5 MLOAD DUP6 GT ISZERO PUSH2 0x493A JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH2 0x4B0D JUMP JUMPDEST SWAP9 POP PUSH2 0x4A2B PUSH2 0x4AD8 JUMP JUMPDEST SWAP1 POP PUSH2 0x4DB9 PUSH2 0x4A31 PUSH2 0x4A2B PUSH1 0xC0 DUP7 ADD MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST LT PUSH0 PUSH2 0x4A3E JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND DUP2 MSTORE PUSH1 0x80 DUP1 PUSH2 0x4DE9 PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0xA0 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD SWAP1 PUSH2 0x1E09 JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x7 SIGNEXTEND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP11 SWAP8 SWAP4 PUSH2 0x72C SWAP13 SWAP11 SWAP6 SWAP2 SWAP8 SWAP4 PUSH2 0x4E75 SWAP11 SWAP8 SWAP4 PUSH1 0x20 DUP15 PUSH2 0x180 SWAP12 DUP2 MSTORE ADD MSTORE PUSH1 0x40 DUP14 ADD MSTORE PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x80 DUP12 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0xA0 DUP11 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP1 SWAP3 AND PUSH1 0xE0 DUP11 ADD MSTORE AND PUSH2 0x100 DUP9 ADD MSTORE AND PUSH2 0x120 DUP7 ADD MSTORE DUP1 PUSH2 0x140 DUP7 ADD MSTORE DUP5 ADD SWAP1 PUSH2 0x1E09 JUMP JUMPDEST SWAP2 PUSH2 0x160 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x4DC0 JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x4E94 SWAP1 PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP2 ADD MLOAD PUSH2 0x4EA3 SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP2 ADD MLOAD SWAP4 PUSH2 0x100 SWAP5 DUP6 DUP4 ADD MLOAD PUSH2 0x4EBB SWAP1 ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x120 SWAP3 DUP4 DUP6 ADD MLOAD SWAP3 PUSH2 0x4ECC PUSH2 0x6B3 JUMP JUMPDEST SWAP7 PUSH2 0x4ED7 SWAP1 DUP9 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0x40 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE DUP2 MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x4F04 SWAP1 PUSH2 0x1273 JUMP JUMPDEST SLOAD SWAP4 PUSH1 0xA0 DUP5 ADD MLOAD SWAP4 MLOAD SWAP5 PUSH1 0x80 DUP7 ADD MLOAD SWAP6 PUSH1 0xA0 DUP2 ADD MLOAD SWAP2 PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x4F29 SWAP1 PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0x7 SIGNEXTEND SWAP11 DUP4 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP11 PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x4F4A SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP2 DUP5 MLOAD PUSH2 0x4F56 SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP9 PUSH1 0x20 DUP7 ADD MLOAD PUSH2 0x4F65 SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP6 ADD MLOAD SWAP6 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB AND SWAP15 PUSH4 0xFFFFFFFF AND SWAP14 CALLER SWAP7 PUSH2 0x4F8D SWAP12 DUP14 PUSH2 0x4E0B JUMP JUMPDEST SUB PUSH32 0x8AB9DC6C19FE88E69BC70221B339C84332752FDD49591B7C51E66BAE3947B73C SWAP2 LOG4 JUMP JUMPDEST SWAP4 SWAP3 PUSH2 0x501C SWAP4 PUSH2 0x461 SWAP8 SWAP7 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH4 0xFFFFFFFF PUSH1 0x20 DUP6 ADD SWAP6 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5C7B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 MSTORE AND PUSH1 0x40 DUP6 ADD MSTORE DUP6 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 MSTORE PUSH2 0x5014 DUP2 PUSH2 0x609 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x579D JUMP JUMPDEST SWAP1 PUSH2 0x5850 JUMP JUMPDEST SWAP4 SWAP3 PUSH2 0x501C SWAP4 PUSH2 0x461 SWAP8 SWAP7 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH4 0xFFFFFFFF PUSH1 0x20 DUP6 ADD SWAP6 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5C5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 MSTORE AND PUSH1 0x40 DUP6 ADD MSTORE DUP6 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 MSTORE PUSH2 0x5014 DUP2 PUSH2 0x609 JUMP JUMPDEST PUSH2 0xC8C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x509B JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0xC8C DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5C1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x461 SWAP2 PUSH2 0x5157 DUP3 PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x5920 JUMP JUMPDEST PUSH0 DUP2 SLT PUSH2 0x5166 JUMPI SWAP1 JUMP JUMPDEST PUSH0 SUB SWAP1 JUMP JUMPDEST PUSH2 0x461 PUSH1 0xFF PUSH0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x3386 JUMP JUMPDEST PUSH2 0x518F PUSH1 0xFF PUSH0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x1AFC DUP2 PUSH2 0x3386 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x51DE JUMPI PUSH2 0x869 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH32 0xA9E8C42C9E7FCA7F62755189A16B2F5314D43D8FB24E91BA54E6D65F9314E849 PUSH0 DUP1 LOG2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x4261642062726964676520726F757465722061646472657373 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 PUSH2 0x2996 SWAP1 PUSH2 0x529F SWAP3 DUP5 MLOAD PUSH2 0x5232 PUSH2 0x3450 JUMP JUMPDEST PUSH2 0x3AF0 PUSH2 0x525F PUSH1 0x40 DUP1 SWAP10 ADD MLOAD SWAP5 DUP10 MLOAD SWAP5 PUSH2 0x524B DUP7 PUSH2 0x582 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 DUP5 MSTORE DUP10 DUP6 ADD SWAP6 DUP7 MSTORE PUSH2 0x2605 JUMP JUMPDEST POP SLOAD SWAP4 DUP9 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x5284 PUSH1 0x20 DUP5 ADD SWAP7 PUSH1 0x20 DUP9 MSTORE MLOAD PUSH1 0x60 DUP14 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD SWAP1 PUSH2 0x3CCD JUMP JUMPDEST SWAP2 MLOAD PUSH1 0x60 DUP5 ADD MSTORE MLOAD PUSH1 0x80 DUP4 ADD MSTORE SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x624 JUMP JUMPDEST PUSH2 0x52A6 JUMPI POP JUMP JUMPDEST MLOAD PUSH4 0x582F497D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x120 SWAP1 SWAP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP1 SWAP5 SWAP3 SWAP4 DUP2 DUP7 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT DUP4 DUP4 LT OR PUSH2 0x57D JUMPI PUSH2 0x5330 SWAP6 PUSH2 0x52F5 SWAP3 DUP9 MSTORE DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP4 DUP5 MSTORE PUSH2 0x2605 JUMP JUMPDEST POP SLOAD SWAP2 PUSH2 0x3AF0 DUP7 MLOAD DUP1 SWAP3 PUSH2 0x531B PUSH1 0x20 DUP4 ADD SWAP6 PUSH1 0x20 DUP8 MSTORE MLOAD DUP11 DUP1 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x46F8 JUMP JUMPDEST SWAP1 MLOAD PUSH1 0x60 DUP4 ADD MSTORE SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x624 JUMP JUMPDEST ISZERO PUSH2 0x5338 JUMPI POP JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x24B73B30B634B21039B637BB903932B630BC90383937B7B3 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH0 DUP3 DUP5 SUB SWAP3 SLT DUP4 DUP4 SLT DUP2 AND SWAP1 DUP5 DUP5 SGT SWAP1 ISZERO AND OR PUSH2 0x31D1 JUMPI DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x31D1 JUMPI DIV SWAP1 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP1 PUSH0 SWAP2 JUMPDEST DUP5 MLOAD DUP4 LT ISZERO PUSH2 0x53F5 JUMPI PUSH2 0x53C6 DUP4 DUP7 PUSH2 0x356D JUMP JUMPDEST MLOAD SWAP1 DUP2 DUP2 LT ISZERO PUSH2 0x53E4 JUMPI PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 JUMPDEST SWAP3 ADD SWAP2 PUSH2 0x53B3 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x53DC JUMP JUMPDEST SWAP2 POP SWAP3 POP EQ SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x461 SWAP2 PUSH2 0x5157 DUP3 PUSH2 0x59D JUMP JUMPDEST SWAP1 PUSH32 0xB6E6AE61A8FA98A339088353BC7A76C8C580B2EFD09210A80BFCCABE05D9AE47 SWAP2 PUSH2 0x5468 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x3B4E JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x54AD JUMPI SWAP1 PUSH2 0x461 SWAP3 SWAP2 PUSH32 0x0 AND PUSH2 0x53FD JUMP JUMPDEST PUSH32 0x0 AND DUP1 EXTCODESIZE ISZERO PUSH2 0x3F3 JUMPI PUSH0 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP4 MSTORE DUP9 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x2230 JUMPI PUSH2 0x55CC JUMPI JUMPDEST POP DUP2 SELFBALANCE LT PUSH2 0x5587 JUMPI PUSH0 DUP1 DUP1 SWAP4 DUP2 SWAP4 GAS CALL PUSH2 0x5517 PUSH2 0x34CF JUMP JUMPDEST POP ISZERO PUSH2 0x551F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH26 0x1958DA5C1A595B9D081B585E481A185D99481C995D995C9D1959 PUSH1 0x32 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x55D5 SWAP1 PUSH2 0x56A JUMP JUMPDEST PUSH0 PUSH2 0x54FF JUMP JUMPDEST SWAP1 PUSH2 0x55E5 DUP3 PUSH2 0x56C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5C3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH0 DUP1 LOG2 DUP1 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x567A JUMPI JUMPDEST PUSH2 0x5613 JUMPI POP POP JUMP JUMPDEST PUSH2 0x5677 SWAP2 PUSH0 DUP1 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x5626 DUP6 PUSH2 0x582 JUMP JUMPDEST PUSH1 0x27 DUP6 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP7 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL PUSH2 0x5671 PUSH2 0x34CF JUMP JUMPDEST SWAP2 PUSH2 0x5A38 JUMP JUMPDEST POP JUMP JUMPDEST POP PUSH0 PUSH2 0x560B JUMP JUMPDEST SWAP1 PUSH2 0x568B DUP3 PUSH2 0x56C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5C3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH0 DUP1 LOG2 DUP1 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x56B8 JUMPI PUSH2 0x5613 JUMPI POP POP JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x560B JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x56F4 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP2 DUP2 DUP4 MUL SWAP2 DUP4 DUP4 DIV SUB PUSH2 0x31D1 JUMPI PUSH1 0x7 SIGNEXTEND DUP1 DUP4 SUB SWAP3 PUSH0 DUP3 SLT DUP2 DUP6 SLT DUP2 AND SWAP1 DUP3 DUP7 SGT SWAP1 ISZERO AND OR PUSH2 0x31D1 JUMPI EQ PUSH2 0x5789 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x42 SWAP2 PUSH2 0x47F SLOAD SWAP1 PUSH2 0x480 SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 ADD SWAP4 PUSH32 0xC2F8787176B8AC6BF7215B4ADCC1E069BF4AB82D9AB1DF05A57A91D425935B6E DUP6 MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x80 DUP2 MSTORE PUSH2 0x57F2 DUP2 PUSH2 0x5B8 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE KECCAK256 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x5817 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x696E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH2 0x585C DUP3 DUP3 PUSH2 0x5A07 JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH1 0x5 DUP6 LT ISZERO PUSH2 0x2E99 JUMPI PUSH2 0x461 SWAP5 ISZERO SWAP4 DUP5 PUSH2 0x590A JUMPI JUMPDEST POP DUP4 ISZERO PUSH2 0x5884 JUMPI JUMPDEST POP POP POP PUSH2 0x5810 JUMP JUMPDEST PUSH0 SWAP3 SWAP4 POP SWAP1 DUP3 SWAP2 PUSH1 0x40 MLOAD PUSH2 0x58BC DUP2 PUSH2 0x3AE2 PUSH1 0x20 DUP3 ADD SWAP5 PUSH4 0xB135D3F PUSH1 0xE1 SHL SWAP10 DUP11 DUP8 MSTORE PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 DUP4 ADD SWAP1 PUSH2 0x1E09 JUMP JUMPDEST MLOAD SWAP2 GAS STATICCALL SWAP1 PUSH2 0x58C9 PUSH2 0x34CF JUMP JUMPDEST DUP3 PUSH2 0x58FC JUMPI JUMPDEST DUP3 PUSH2 0x58DF JUMPI JUMPDEST POP POP PUSH0 DUP1 DUP1 PUSH2 0x587C JUMP JUMPDEST PUSH2 0x58F4 SWAP2 SWAP3 POP PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x463C JUMP JUMPDEST EQ PUSH0 DUP1 PUSH2 0x58D5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP3 MLOAD LT ISZERO SWAP2 PUSH2 0x58CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ SWAP4 POP PUSH0 PUSH2 0x5874 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5977 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5939 DUP3 PUSH2 0x5EE JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 SWAP6 DUP7 DUP6 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP8 DUP7 ADD MSTORE DUP7 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL PUSH2 0x5671 PUSH2 0x34CF JUMP JUMPDEST DUP1 MLOAD DUP3 DUP2 ISZERO SWAP2 DUP3 ISZERO PUSH2 0x59E7 JUMPI JUMPDEST POP POP SWAP1 POP ISZERO PUSH2 0x5990 JUMPI POP JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 DUP1 SWAP3 SWAP4 POP ADD SUB SLT PUSH2 0x3F3 JUMPI DUP2 ADD MLOAD PUSH2 0x59FF DUP2 PUSH2 0xB4E JUMP JUMPDEST DUP1 DUP3 PUSH0 PUSH2 0x5984 JUMP JUMPDEST SWAP1 PUSH1 0x41 DUP2 MLOAD EQ PUSH0 EQ PUSH2 0x5A2F JUMPI PUSH2 0x34BE SWAP2 PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH0 BYTE SWAP1 PUSH2 0x5AC9 JUMP JUMPDEST POP POP PUSH0 SWAP1 PUSH1 0x2 SWAP1 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x5A9A JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x5A4C JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x5A55 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x5AAD JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH2 0xE71 SWAP1 PUSH1 0x4 DUP4 ADD PUSH2 0x355C JUMP JUMPDEST PUSH16 0xA2A8918CA85BAFE22016D0B997E4DF60 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 GT PUSH2 0x5B2F JUMPI PUSH1 0x20 SWAP4 PUSH0 SWAP4 PUSH1 0xFF PUSH1 0x80 SWAP5 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x2230 JUMPI PUSH0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x5B27 JUMPI SWAP1 PUSH0 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP POP PUSH0 SWAP1 PUSH1 0x3 SWAP1 JUMP INVALID LOG1 0x23 0xDC 0x29 0xAE 0xBF PUSH30 0xC3322C8EEB5B999E859F39937950ED31056532713D0DE396F4910FDFA16 INVALID 0xD3 0x26 0xE 0xD0 0xE7 EQ PUSH32 0x7CC6DA11A60208B5B9406D12A635614FFD9143571749EDF1D5C9599318CDBC4E 0x28 0xA6 SELFBALANCE 0x5D PUSH6 0xE87FD3B2DDBE 0x1E SWAP11 DUP14 0x5E PUSH27 0xF0FF746756E6374696F6E206D7573742062652063616C6C656420 PUSH21 0x68726F75676820360894A13BA1A3210667C828492D 0xB9 DUP14 0xCA RETURNDATACOPY KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCAFC4DF6845A4AB948B4928 STOP 0xD3 0xD8 LOG2 0x5D MSTORE8 DUP11 LT 0x2A 0x2B 0xC0 PUSH29 0xD01F1CFA097FDDCFF67F26B83FF96E1F2B6A682F133852F6798A09C465 0xDA SWAP6 SWAP3 EQ PUSH1 0xCE 0xFB CODESIZE SELFBALANCE BLOCKHASH 0x24 SWAP9 DUP12 0xE0 SMOD SWAP13 MSTORE8 AND MSIZE EQ SGT PREVRANDAO 0xCD 0x1F 0xD0 LOG4 CALLCODE DUP5 NOT 0x49 PUSH32 0x9722A3DAAFE3B4186F6B6457E0BC7CD75A20EE27FD9ADEBAB32041F755214DBC PUSH12 0xFFA90CC0225B39DA2E5C2D3B 0xE SDIV DUP16 SDIV 0xB7 EXTCODECOPY PUSH3 0xEE6832 SWAP14 0x2C PUSH8 0xC067AAAE9A06503C 0xC3 MOD CALLDATACOPY DUP14 EQ 0x4D 0xF ADD PUSH24 0x882B152EB71524AEF34D838AB76573C14B1EBFA5E385D9AB 0x29 0xD7 0xCF MSTORE8 SWAP9 0xDA LOG2 NUMBER DUP12 0xD9 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 SWAP2 CALLCODE DUP15 0xD2 0xD4 ADDMOD PREVRANDAO PUSH19 0xB1F9D2EEEF3FB0F6C373292C70FADC94746ABD 0xAC 0xA9 0xC5 PUSH20 0x64736F6C63430008170033000000000000000000 ","sourceMap":"237:721:33:-:0;;;;;;;;;;;;;-1:-1:-1;;237:721:33;;;;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;237:721:33;;;;;;;;1332:4:6;1324:13;;16333:63:27;;675:7:32;16406:48:27;;684:7:32;16464:40:27;;-1:-1:-1;237:721:33;;;;;;;;;;;;6078:31:5;6074:139;;-1:-1:-1;237:721:33;;;;;;;;1324:13:6;237:721:33;;;;;;;;;;;;;;;16333:63:27;237:721:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16406:48:27;237:721:33;;;;;;;;;;;;;;;16464:40:27;237:721:33;;;;;;;;;;;6074:139:5;237:721:33;;;;;;-1:-1:-1;237:721:33;6174:28:5;237:721:33;;;;;;6174:28:5;6074:139;;;237:721:33;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;;;;;;-1:-1:-1;;;237:721:33;;;;;;;;-1:-1:-1;237:721:33;;;;;;-1:-1:-1;237:721:33;;;;;-1:-1:-1;237:721:33"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":1001,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":1162,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_address_31754":{"entryPoint":1108,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_31755":{"entryPoint":1123,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_31756":{"entryPoint":1136,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_31801":{"entryPoint":1149,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_addresst_uint256t_uint256t_int64t_uint32t_bytest_uint256":{"entryPoint":2132,"id":null,"parameterSlots":1,"returnSlots":8},"abi_decode_array_address_dyn":{"entryPoint":2493,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_bytes32_dyn":{"entryPoint":1940,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_bytes_calldata_dyn_calldata":{"entryPoint":7608,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_uint256_dyn":{"entryPoint":2397,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_array_bytes32_dyn":{"entryPoint":1862,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":1755,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool":{"entryPoint":2904,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_bytes":{"entryPoint":1809,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes32_fromMemory":{"entryPoint":17980,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":4048,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_int64":{"entryPoint":1205,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_int64_31759":{"entryPoint":1173,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_int64_31760":{"entryPoint":1189,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_int64_31807":{"entryPoint":1222,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_int64_31808":{"entryPoint":1239,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_int64_31847":{"entryPoint":1256,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":13566,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_V3RelayData":{"entryPoint":8805,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_V3RelayData_calldata":{"entryPoint":3144,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint32":{"entryPoint":1355,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint32_31761":{"entryPoint":1286,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint32_31762":{"entryPoint":1299,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint32_31785":{"entryPoint":1313,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint32_31809":{"entryPoint":1327,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint32_31830":{"entryPoint":1341,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint32t_addresst_address":{"entryPoint":5575,"id":null,"parameterSlots":1,"returnSlots":3},"abi_encode_address":{"entryPoint":4815,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_address_uint256_uint256_uint256_uint32_uint32_address_address_address_bytes_struct_V3RelayExecutionEventInfo":{"entryPoint":15908,"id":null,"parameterSlots":13,"returnSlots":1},"abi_encode_address_address_uint256_uint256_uint32_uint32_address_address_address_bytes_calldata":{"entryPoint":13286,"id":null,"parameterSlots":12,"returnSlots":1},"abi_encode_address_address_uint256_uint256_uint32_uint32_rational_by_address_address_bytes":{"entryPoint":14442,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_address_address_uint256_uint256_uint32_uint32_uint32_address_address_bytes_calldata":{"entryPoint":12841,"id":null,"parameterSlots":12,"returnSlots":1},"abi_encode_address_uint256_address_bytes":{"entryPoint":16049,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_address_uint256_bool_address_bytes":{"entryPoint":18891,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":10929,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_bytes_dyn":{"entryPoint":7726,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":10878,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes":{"entryPoint":7689,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_bytes_calldata":{"entryPoint":13506,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_bytes_calldata_ptr":{"entryPoint":11613,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_int64":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string":{"entryPoint":13660,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral_8e8e":{"entryPoint":18089,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_struct_RelayData":{"entryPoint":18168,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_RelayExecutionInfo":{"entryPoint":19904,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_V3RelayData":{"entryPoint":15565,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_V3RelayExecutionEventInfo":{"entryPoint":15839,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_address":{"entryPoint":15182,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint256_array_uint256_dyn_address_array_address_dyn_address":{"entryPoint":10989,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_uint256_uint256_int64_uint32_address_address_bytes":{"entryPoint":13704,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_uint256_uint256_uint256_uint256_uint256_int64_int64_address_address_address_bytes_struct_RelayExecutionInfo":{"entryPoint":19979,"id":null,"parameterSlots":13,"returnSlots":1},"abi_encode_uint32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"access_calldata_tail_bytes_calldata":{"entryPoint":11139,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_and_zero_memory_array_array_bytes_dyn":{"entryPoint":13406,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":1607,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_31854":{"entryPoint":1638,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_31873":{"entryPoint":1670,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_32042":{"entryPoint":1702,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_32049":{"entryPoint":1715,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_bytes32_dyn":{"entryPoint":1839,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":1728,"id":null,"parameterSlots":1,"returnSlots":1},"calldata_array_index_access_bytes_calldata_dyn_calldata":{"entryPoint":13479,"id":null,"parameterSlots":3,"returnSlots":2},"checked_add_int64":{"entryPoint":18469,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256":{"entryPoint":12758,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":12740,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_address":{"entryPoint":1079,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_int64":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":7656,"id":null,"parameterSlots":3,"returnSlots":0},"external_fun_EMPTY_REPAYMENT_CHAIN_ID":{"entryPoint":2303,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_INFINITE_FILL_DEADLINE":{"entryPoint":9395,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_MAX_TRANSFER_SIZE":{"entryPoint":9463,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_SLOW_FILL_MAX_TOKENS_TO_SEND":{"entryPoint":8182,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_SpokePool_init":{"entryPoint":6772,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_UPDATE_DEPOSIT_DETAILS_HASH":{"entryPoint":7569,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_UPDATE_V3_DEPOSIT_DETAILS_HASH":{"entryPoint":3105,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_callback":{"entryPoint":9593,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_chainId":{"entryPoint":7496,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_crossDomainAdmin":{"entryPoint":4828,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_deposit":{"entryPoint":2243,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_depositFor":{"entryPoint":5063,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_depositForNow":{"entryPoint":10120,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_depositNow":{"entryPoint":8049,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_depositQuoteTimeBuffer":{"entryPoint":5210,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_depositV2":{"entryPoint":8486,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_depositV3":{"entryPoint":6194,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_distributeRelayerRefunds":{"entryPoint":6498,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_emergencyDeleteRootBundle":{"entryPoint":6611,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_emitEvent":{"entryPoint":6133,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_enabledDepositRoutes":{"entryPoint":4738,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_executeRelayerRefundLeaf":{"entryPoint":2599,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_executeSlowRelayLeaf":{"entryPoint":1967,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_executeV3SlowRelayLeaf":{"entryPoint":8224,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_fillDeadlineBuffer":{"entryPoint":1015,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_fillRelay":{"entryPoint":3769,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_fillRelayV3Internal":{"entryPoint":9028,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_fillRelayWithUpdatedDeposit":{"entryPoint":5274,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_fillStatuses":{"entryPoint":9222,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_fillV3Relay":{"entryPoint":3159,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_fillV3RelayWithUpdatedDeposit":{"entryPoint":9265,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getCurrentTime":{"entryPoint":3075,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_hubPool":{"entryPoint":9552,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_initialize":{"entryPoint":5625,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_multicall":{"entryPoint":7825,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_numberOfDeposits":{"entryPoint":7530,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":6731,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_pauseDeposits":{"entryPoint":5877,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_pauseFills":{"entryPoint":7370,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_pausedDeposits":{"entryPoint":5537,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_pausedFills":{"entryPoint":9425,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_proxiableUUID":{"entryPoint":4869,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_reinitialize":{"entryPoint":9999,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_relayRootBundle":{"entryPoint":3918,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceOwnership":{"entryPoint":5804,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_requestV3SlowFill":{"entryPoint":6950,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_rootBundles":{"entryPoint":9766,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setChainId":{"entryPoint":9828,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setCrossDomainAdmin":{"entryPoint":9504,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setCurrentTime":{"entryPoint":2868,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setEnableRoute":{"entryPoint":2917,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setFillStatus":{"entryPoint":5479,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setHubPool":{"entryPoint":2815,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_speedUpDeposit":{"entryPoint":6363,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_speedUpV3Deposit":{"entryPoint":4093,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":9854,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_upgradeTo":{"entryPoint":3457,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_upgradeToAndCall":{"entryPoint":4379,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_verifyUpdateV3DepositMessage":{"entryPoint":6003,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_wrappedNativeToken":{"entryPoint":2329,"id":null,"parameterSlots":0,"returnSlots":0},"extract_from_storage_value_offsett_uint32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":13519,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":1572,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_31853":{"entryPoint":1386,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_32051":{"entryPoint":1410,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_49901":{"entryPoint":1437,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_49902":{"entryPoint":1464,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_49903":{"entryPoint":1491,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_49906":{"entryPoint":1518,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_49913":{"entryPoint":1545,"id":null,"parameterSlots":1,"returnSlots":0},"fun_abs":{"entryPoint":20828,"id":5707,"parameterSlots":1,"returnSlots":1},"fun_bridgeTokensToHubPool":{"entryPoint":21558,"id":9935,"parameterSlots":2,"returnSlots":0},"fun_callOptionalReturn":{"entryPoint":22816,"id":1326,"parameterSlots":2,"returnSlots":0},"fun_chainId":{"entryPoint":13392,"id":9959,"parameterSlots":0,"returnSlots":1},"fun_checkOwner":{"entryPoint":20614,"id":68,"parameterSlots":0,"returnSlots":0},"fun_computeAmountPostFees":{"entryPoint":21366,"id":8206,"parameterSlots":2,"returnSlots":1},"fun_computeAmountPreFees":{"entryPoint":22351,"id":8181,"parameterSlots":2,"returnSlots":1},"fun_deposit":{"entryPoint":14535,"id":7699,"parameterSlots":8,"returnSlots":0},"fun_distributeRelayerRefunds":{"entryPoint":15207,"id":7782,"parameterSlots":6,"returnSlots":0},"fun_emitFillRelay":{"entryPoint":20100,"id":8854,"parameterSlots":2,"returnSlots":0},"fun_fillRelay":{"entryPoint":18948,"id":8564,"parameterSlots":1,"returnSlots":1},"fun_fillRelayV3":{"entryPoint":17402,"id":8785,"parameterSlots":3,"returnSlots":0},"fun_fillRelayV3_31772":{"entryPoint":16094,"id":8785,"parameterSlots":2,"returnSlots":0},"fun_fillRelayV3_31850":{"entryPoint":16764,"id":8785,"parameterSlots":1,"returnSlots":0},"fun_getRelayHash":{"entryPoint":18322,"id":8223,"parameterSlots":1,"returnSlots":1},"fun_getV3RelayHash":{"entryPoint":15763,"id":8241,"parameterSlots":1,"returnSlots":1},"fun_hashTypedDataV4":{"entryPoint":22429,"id":10533,"parameterSlots":2,"returnSlots":1},"fun_initialize_inner":{"entryPoint":12033,"id":null,"parameterSlots":3,"returnSlots":0},"fun_nonReentrantAfter":{"entryPoint":null,"id":868,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":14033,"id":860,"parameterSlots":0,"returnSlots":0},"fun_preExecuteLeafHook":{"entryPoint":14119,"id":9921,"parameterSlots":1,"returnSlots":0},"fun_safeTransfer":{"entryPoint":21501,"id":1032,"parameterSlots":3,"returnSlots":0},"fun_safeTransferFrom":{"entryPoint":20757,"id":1059,"parameterSlots":4,"returnSlots":0},"fun_setClaimedLeaf":{"entryPoint":15097,"id":7969,"parameterSlots":2,"returnSlots":0},"fun_setCrossDomainAdmin":{"entryPoint":20886,"id":7899,"parameterSlots":1,"returnSlots":0},"fun_setHubPool":{"entryPoint":15433,"id":7923,"parameterSlots":1,"returnSlots":0},"fun_setImplementation":{"entryPoint":22208,"id":231,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership":{"entryPoint":20703,"id":125,"parameterSlots":1,"returnSlots":0},"fun_tryRecover":{"entryPoint":23047,"id":3844,"parameterSlots":2,"returnSlots":2},"fun_tryRecover_4012":{"entryPoint":23241,"id":4012,"parameterSlots":4,"returnSlots":2},"fun_unwrapwrappedNativeTokenTo":{"entryPoint":21613,"id":8282,"parameterSlots":2,"returnSlots":0},"fun_upgradeToAndCall":{"entryPoint":21979,"id":276,"parameterSlots":2,"returnSlots":0},"fun_upgradeToAndCall_49905":{"entryPoint":22145,"id":276,"parameterSlots":2,"returnSlots":0},"fun_verify":{"entryPoint":21420,"id":4134,"parameterSlots":3,"returnSlots":1},"fun_verifyCallResultFromTarget":{"entryPoint":23096,"id":1660,"parameterSlots":4,"returnSlots":1},"fun_verifyDepositorSignature":{"entryPoint":22608,"id":8080,"parameterSlots":3,"returnSlots":0},"fun_verifyRelayerRefund":{"entryPoint":14952,"id":5769,"parameterSlots":3,"returnSlots":1},"fun_verifySlowFill":{"entryPoint":21174,"id":8116,"parameterSlots":3,"returnSlots":0},"fun_verifyUpdateDepositMessage":{"entryPoint":20514,"id":8013,"parameterSlots":7,"returnSlots":0},"fun_verifyUpdateV3DepositMessage":{"entryPoint":20403,"id":8056,"parameterSlots":7,"returnSlots":0},"fun_verifyV3SlowFill":{"entryPoint":21023,"id":8154,"parameterSlots":3,"returnSlots":0},"increment_uint32":{"entryPoint":12782,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_mapping_uint256_bool_of_address":{"entryPoint":4682,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_bool_of_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_uint256_bool_of_uint256_31840":{"entryPoint":4708,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_bool_of_uint256_32044":{"entryPoint":4723,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_bytes_dyn":{"entryPoint":13677,"id":null,"parameterSlots":2,"returnSlots":1},"modifier_nonReentrant":{"entryPoint":12945,"id":845,"parameterSlots":6,"returnSlots":0},"modifier_nonReentrant_6767":{"entryPoint":12100,"id":845,"parameterSlots":13,"returnSlots":0},"modifier_nonReentrant_6975":{"entryPoint":11360,"id":845,"parameterSlots":12,"returnSlots":0},"modifier_nonReentrant_7069":{"entryPoint":11645,"id":845,"parameterSlots":16,"returnSlots":0},"modifier_nonReentrant_7209":{"entryPoint":13776,"id":845,"parameterSlots":8,"returnSlots":0},"modifier_nonReentrant_7382":{"entryPoint":10233,"id":845,"parameterSlots":12,"returnSlots":0},"modifier_nonReentrant_7475":{"entryPoint":10572,"id":845,"parameterSlots":3,"returnSlots":0},"modifier_onlyInitializing":{"entryPoint":20859,"id":610,"parameterSlots":0,"returnSlots":0},"modifier_onlyInitializing_680":{"entryPoint":20843,"id":610,"parameterSlots":0,"returnSlots":0},"negate_int256":{"entryPoint":18730,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":12720,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":11899,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":9713,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1366,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_calldatat_address":{"entryPoint":11129,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_uint32":{"entryPoint":11119,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper":{"entryPoint":13697,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral":{"entryPoint":14236,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_12a1":{"entryPoint":22544,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_365e":{"entryPoint":18578,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_36e1":{"entryPoint":11204,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_42de":{"entryPoint":18506,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_4877":{"entryPoint":11060,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_52f1":{"entryPoint":11282,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_76b6":{"entryPoint":17995,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_7740":{"entryPoint":14299,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_7816":{"entryPoint":18746,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_783e":{"entryPoint":18410,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_7a2a":{"entryPoint":11934,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_9339":{"entryPoint":14175,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_97c8":{"entryPoint":18351,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d688":{"entryPoint":13190,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d8a4":{"entryPoint":13124,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d990":{"entryPoint":18821,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_db49":{"entryPoint":10510,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_f00d":{"entryPoint":18654,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_f307":{"entryPoint":14368,"id":null,"parameterSlots":1,"returnSlots":0},"revert_forward":{"entryPoint":12771,"id":null,"parameterSlots":0,"returnSlots":0},"storage_array_index_access_struct_RootBundle__dyn":{"entryPoint":9733,"id":null,"parameterSlots":1,"returnSlots":2},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offsett_bool_to_bool_31815":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_31844":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_31943":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint32_to_uint32":{"entryPoint":12803,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_enum_FillType":{"entryPoint":11919,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_address":{"entryPoint":1091,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":2894,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint32":{"entryPoint":1272,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_address":{"entryPoint":11189,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_bool_31876":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_enum_FillType":{"entryPoint":15827,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_enum_FillType_49910":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_int64":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"696":[{"length":32,"start":3496},{"length":32,"start":4444},{"length":32,"start":4887}],"6055":[{"length":32,"start":2350},{"length":32,"start":8561},{"length":32,"start":12303},{"length":32,"start":14723},{"length":32,"start":16534},{"length":32,"start":17154},{"length":32,"start":17832},{"length":32,"start":19345},{"length":32,"start":21640},{"length":32,"start":21679}],"6058":[{"length":32,"start":5238},{"length":32,"start":12212},{"length":32,"start":14647}],"6061":[{"length":32,"start":1043},{"length":32,"start":12637}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1A JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x18 JUMPI PUSH0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BD2C7 EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0xC2097F7 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0x1186EC33 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0x15348E44 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x17FCB39B EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0x1B3D5559 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0x1DFB2D02 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x22F8E566 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x272751C7 EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0x29CB924D EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0x2CFC26C5 EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0x2E378115 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x44B8BE68 EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x493A4F84 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0x4E0FB8F5 EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x5249FEF1 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x5285E058 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0x541F4F14 EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0x57F6DCB8 EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x5CEAEC32 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x5DD36F9C EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x6068D6CB EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x647C576C EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x6BBBCD2E EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x738B62E5 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x74DFA43D EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x7B0CB839 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x7B939232 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x7E688BBA EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x87C3932D EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x8A7860CE EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x979F2BC2 EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0x9963E5A8 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x99CC2968 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x9A8A0592 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xA1244C67 EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0xA78E4B60 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xAC9650D8 EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xAE527FBB EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0xB5E1BF5F EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xBBCA7DB0 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xBDCB53A5 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0xBF40F25B EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xC35C83FC EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xCCFA5971 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0xCEB4C987 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xDDA52113 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0xDDD224F1 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0xDE7EBA78 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xE1904402 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xE98A5654 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xEE2A53F8 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xEF0E2FF4 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0xF7E7D1FD EQ PUSH2 0x2C2 JUMPI PUSH4 0xFD7C1054 SUB PUSH2 0xE JUMPI PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x270F JUMP JUMPDEST PUSH2 0x267E JUMP JUMPDEST PUSH2 0x2664 JUMP JUMPDEST PUSH2 0x2626 JUMP JUMPDEST PUSH2 0x2579 JUMP JUMPDEST PUSH2 0x2550 JUMP JUMPDEST PUSH2 0x2520 JUMP JUMPDEST PUSH2 0x24F7 JUMP JUMPDEST PUSH2 0x24D1 JUMP JUMPDEST PUSH2 0x24B3 JUMP JUMPDEST PUSH2 0x2431 JUMP JUMPDEST PUSH2 0x2406 JUMP JUMPDEST PUSH2 0x2344 JUMP JUMPDEST PUSH2 0x2126 JUMP JUMPDEST PUSH2 0x2020 JUMP JUMPDEST PUSH2 0x1FF6 JUMP JUMPDEST PUSH2 0x1F71 JUMP JUMPDEST PUSH2 0x1E91 JUMP JUMPDEST PUSH2 0x1D91 JUMP JUMPDEST PUSH2 0x1D6A JUMP JUMPDEST PUSH2 0x1D48 JUMP JUMPDEST PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0x1B26 JUMP JUMPDEST PUSH2 0x1A74 JUMP JUMPDEST PUSH2 0x1A4B JUMP JUMPDEST PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x1962 JUMP JUMPDEST PUSH2 0x18DB JUMP JUMPDEST PUSH2 0x1832 JUMP JUMPDEST PUSH2 0x17F5 JUMP JUMPDEST PUSH2 0x1773 JUMP JUMPDEST PUSH2 0x16F5 JUMP JUMPDEST PUSH2 0x16AC JUMP JUMPDEST PUSH2 0x8FF JUMP JUMPDEST PUSH2 0x15F9 JUMP JUMPDEST PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x1567 JUMP JUMPDEST PUSH2 0x149A JUMP JUMPDEST PUSH2 0x145A JUMP JUMPDEST PUSH2 0x13C7 JUMP JUMPDEST PUSH2 0x1305 JUMP JUMPDEST PUSH2 0x12DC JUMP JUMPDEST PUSH2 0x1282 JUMP JUMPDEST PUSH2 0x111B JUMP JUMPDEST PUSH2 0xFFD JUMP JUMPDEST PUSH2 0xF4E JUMP JUMPDEST PUSH2 0xEB9 JUMP JUMPDEST PUSH2 0xD81 JUMP JUMPDEST PUSH2 0xC57 JUMP JUMPDEST PUSH2 0xC21 JUMP JUMPDEST PUSH2 0xC03 JUMP JUMPDEST PUSH2 0xB65 JUMP JUMPDEST PUSH2 0xB34 JUMP JUMPDEST PUSH2 0xAFF JUMP JUMPDEST PUSH2 0xA27 JUMP JUMPDEST PUSH2 0x919 JUMP JUMPDEST PUSH2 0x8C3 JUMP JUMPDEST PUSH2 0x7AF JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST PUSH0 SWAP2 SUB SLT PUSH2 0x3F3 JUMPI JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x3F3 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x461 DUP3 PUSH2 0x443 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x461 DUP3 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x461 DUP3 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH2 0x461 DUP3 PUSH2 0x443 JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0x461 DUP3 PUSH2 0x443 JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP3 SUB PUSH2 0x3F3 JUMPI JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP3 SUB PUSH2 0x3F3 JUMPI JUMP JUMPDEST PUSH2 0x104 CALLDATALOAD SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP3 SUB PUSH2 0x3F3 JUMPI JUMP JUMPDEST PUSH2 0x124 CALLDATALOAD SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP3 SUB PUSH2 0x3F3 JUMPI JUMP JUMPDEST PUSH2 0x144 CALLDATALOAD SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP3 SUB PUSH2 0x3F3 JUMPI JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP3 SUB PUSH2 0x3F3 JUMPI JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND SUB PUSH2 0x3F3 JUMPI JUMP JUMPDEST PUSH1 0xE4 CALLDATALOAD SWAP1 PUSH2 0x461 DUP3 PUSH2 0x4F8 JUMP JUMPDEST PUSH2 0x104 CALLDATALOAD SWAP1 PUSH2 0x461 DUP3 PUSH2 0x4F8 JUMP JUMPDEST PUSH2 0x124 CALLDATALOAD SWAP1 PUSH2 0x461 DUP3 PUSH2 0x4F8 JUMP JUMPDEST PUSH2 0x164 CALLDATALOAD SWAP1 PUSH2 0x461 DUP3 PUSH2 0x4F8 JUMP JUMPDEST PUSH2 0x144 CALLDATALOAD SWAP1 PUSH2 0x461 DUP3 PUSH2 0x4F8 JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0x461 DUP3 PUSH2 0x4F8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x57D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x556 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x57D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x57D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x57D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x57D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x57D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x57D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x57D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xC0 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x57D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x180 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x57D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x140 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x57D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x461 DUP3 PUSH2 0x59D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x461 DUP3 PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x57D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x6E7 DUP3 PUSH2 0x6C0 JUMP JUMPDEST SWAP2 PUSH2 0x6F5 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x624 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x3F3 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x3F3 JUMPI DUP2 PUSH1 0x20 PUSH2 0x72C SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x6DB JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x57D JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 PUSH2 0x751 DUP3 PUSH2 0x72F JUMP JUMPDEST SWAP2 PUSH2 0x75F PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x624 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 SWAP5 ADD SWAP2 PUSH1 0x5 SHL DUP2 ADD SWAP3 DUP4 GT PUSH2 0x3F3 JUMPI SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x785 JUMPI POP POP POP POP JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x778 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x3F3 JUMPI DUP2 PUSH1 0x20 PUSH2 0x72C SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x746 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH2 0x180 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x7CD DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH2 0x7D5 PUSH2 0x463 JUMP JUMPDEST SWAP1 PUSH2 0x7DE PUSH2 0x470 JUMP JUMPDEST PUSH2 0x7E6 PUSH2 0x495 JUMP JUMPDEST SWAP3 PUSH2 0x7EF PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x7F7 PUSH2 0x506 JUMP JUMPDEST PUSH2 0x7FF PUSH2 0x513 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP7 SWAP1 SWAP3 SWAP1 PUSH2 0x124 CALLDATALOAD DUP9 DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x824 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST SWAP5 PUSH2 0x164 CALLDATALOAD SWAP9 DUP10 GT PUSH2 0x3F3 JUMPI PUSH2 0x841 PUSH2 0x18 SWAP10 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x794 JUMP JUMPDEST SWAP8 PUSH2 0x144 CALLDATALOAD SWAP8 PUSH1 0x84 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0x100 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x86D DUP2 PUSH2 0x443 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD PUSH2 0x87A DUP2 PUSH2 0x443 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x84 CALLDATALOAD DUP1 PUSH1 0x7 SIGNEXTEND DUP2 SUB PUSH2 0x3F3 JUMPI SWAP2 PUSH1 0xA4 CALLDATALOAD PUSH2 0x89D DUP2 PUSH2 0x4F8 JUMP JUMPDEST SWAP2 PUSH1 0xC4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3F3 JUMPI PUSH2 0x8BC SWAP2 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST SWAP1 PUSH1 0xE4 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH2 0x8F8 PUSH2 0x8CF CALLDATASIZE PUSH2 0x854 JUMP JUMPDEST POP SWAP6 PUSH2 0x8DF SWAP6 SWAP2 SWAP6 SWAP5 SWAP3 SWAP5 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x8F2 PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE8 SHR AND ISZERO PUSH2 0x290E JUMP JUMPDEST CALLER PUSH2 0x38C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x20 SWAP1 DUP3 CALLDATALOAD PUSH2 0x977 DUP2 PUSH2 0x72F JUMP JUMPDEST SWAP4 PUSH2 0x985 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x624 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x3F3 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x9AE JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x9A0 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x20 SWAP1 DUP3 CALLDATALOAD PUSH2 0x9D7 DUP2 PUSH2 0x72F JUMP JUMPDEST SWAP4 PUSH2 0x9E5 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x624 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x3F3 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xA0E JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 DUP1 SWAP2 DUP4 CALLDATALOAD PUSH2 0xA1C DUP2 PUSH2 0x443 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x3 NOT PUSH1 0x60 CALLDATASIZE DUP3 ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xA40 DUP2 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP4 DUP3 GT PUSH2 0x3F3 JUMPI PUSH1 0xC0 SWAP1 DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x3F3 JUMPI PUSH2 0xA68 PUSH2 0x647 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x4 ADD CALLDATALOAD DUP3 MSTORE PUSH1 0x24 DUP2 ADD CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x44 DUP2 ADD CALLDATALOAD DUP5 DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0xA96 SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP5 ADD ADD PUSH2 0x95D JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0xAA7 PUSH1 0x64 DUP3 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0xAB8 PUSH1 0x84 DUP3 ADD PUSH2 0x48A JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA4 DUP2 ADD CALLDATALOAD SWAP1 DUP5 DUP3 GT PUSH2 0x3F3 JUMPI PUSH1 0x4 PUSH2 0xAD9 SWAP3 CALLDATASIZE SWAP3 ADD ADD PUSH2 0x9BD JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD SWAP3 DUP4 GT PUSH2 0x3F3 JUMPI PUSH2 0xAF9 PUSH2 0x18 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x794 JUMP JUMPDEST SWAP2 PUSH2 0x294C JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH2 0x8F8 PUSH1 0x4 CALLDATALOAD PUSH2 0xB1F DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH2 0xB27 PUSH2 0x5086 JUMP JUMPDEST PUSH2 0xB2F PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x3C49 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xCBF SSTORE STOP JUMPDEST DUP1 ISZERO ISZERO SUB PUSH2 0x3F3 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x461 DUP3 PUSH2 0xB4E JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xB82 DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH32 0xA21FDD43D0AD0C62689EE7230A47309A050755BCC52EBA00310ADD65297692A PUSH1 0x20 PUSH1 0x44 CALLDATALOAD SWAP3 PUSH2 0xBB6 DUP5 PUSH2 0xB4E JUMP JUMPDEST PUSH2 0xBBE PUSH2 0x5086 JUMP JUMPDEST PUSH2 0xBC6 PUSH2 0x36D1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 PUSH0 MSTORE PUSH2 0x86D DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP6 PUSH0 MSTORE DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 ISZERO ISZERO SWAP1 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x20 PUSH2 0xCBF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5C7B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST SWAP1 DUP2 PUSH2 0x180 SWAP2 SUB SLT PUSH2 0x3F3 JUMPI SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0xC87 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC48 JUMP JUMPDEST PUSH2 0xC8F PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0xCA2 PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE0 SHR AND ISZERO PUSH2 0x2B34 JUMP JUMPDEST PUSH2 0xCAF PUSH2 0x140 DUP3 ADD PUSH2 0x2B6F JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0xCBF SLOAD SWAP2 AND LT ISZERO DUP1 PUSH2 0xD63 JUMPI JUMPDEST PUSH2 0xD51 JUMPI PUSH2 0xD47 SWAP1 PUSH2 0xD33 PUSH2 0xCDF PUSH2 0xCDA CALLDATASIZE DUP5 PUSH2 0x2265 JUMP JUMPDEST PUSH2 0x3D93 JUMP JUMPDEST SWAP2 PUSH1 0xC0 PUSH2 0xD2C PUSH2 0xCF1 PUSH1 0x20 DUP5 ADD PUSH2 0x2B79 JUMP JUMPDEST PUSH2 0xCFF PUSH2 0x160 DUP6 ADD DUP6 PUSH2 0x2B83 JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH2 0xD0A PUSH2 0x647 JUMP JUMPDEST SWAP8 PUSH2 0xD15 CALLDATASIZE DUP4 PUSH2 0x2265 JUMP JUMPDEST DUP10 MSTORE PUSH1 0x20 DUP10 ADD MSTORE ADD CALLDATALOAD PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD PUSH2 0x2BB5 JUMP JUMPDEST CALLDATASIZE SWAP2 PUSH2 0x6DB JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE CALLER SWAP1 PUSH2 0x3EDE JUMP JUMPDEST PUSH2 0x18 PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC3A9B9D PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH2 0xD70 PUSH1 0x40 DUP3 ADD PUSH2 0x2B79 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0xCC2 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xD9E DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP2 SWAP1 PUSH2 0xDD7 ADDRESS DUP5 EQ ISZERO PUSH2 0x2BC4 JUMP JUMPDEST PUSH2 0xDF3 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 DUP3 DUP6 SLOAD AND EQ PUSH2 0x2C12 JUMP JUMPDEST PUSH2 0xDFB PUSH2 0x5086 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0xE08 DUP3 PUSH2 0x5D3 JUMP JUMPDEST PUSH0 DUP3 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE2E JUMPI POP POP PUSH2 0x18 SWAP2 POP PUSH2 0x56C0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH1 0x40 SWAP5 SWAP4 SWAP5 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP3 MSTORE DUP7 AND GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0xE88 JUMPI JUMPDEST POP PUSH2 0xE75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xE71 PUSH1 0x4 DUP3 ADD PUSH2 0x46A9 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x18 SWAP4 PUSH2 0xE83 SWAP2 EQ PUSH2 0x464B JUMP JUMPDEST PUSH2 0x55DB JUMP JUMPDEST PUSH2 0xEAB SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xEB2 JUMPI JUMPDEST PUSH2 0xEA3 DUP2 DUP4 PUSH2 0x624 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x463C JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0xE53 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xE99 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH2 0x180 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xED7 DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0xEE3 DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH2 0xEEF DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0xE4 CALLDATALOAD DUP1 PUSH1 0x7 SIGNEXTEND DUP2 SUB PUSH2 0x3F3 JUMPI PUSH2 0xF04 PUSH2 0x4B5 JUMP JUMPDEST PUSH2 0xF0C PUSH2 0x521 JUMP JUMPDEST PUSH2 0x144 CALLDATALOAD SWAP6 SWAP1 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 GT PUSH2 0x3F3 JUMPI PUSH2 0xF33 PUSH2 0x18 SWAP8 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST SWAP5 PUSH2 0x164 CALLDATALOAD SWAP7 PUSH1 0xC4 CALLDATALOAD SWAP3 PUSH1 0xA4 CALLDATALOAD SWAP3 PUSH1 0x84 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH2 0x2C60 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0xF6D PUSH2 0x5086 JUMP JUMPDEST PUSH2 0xF75 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x86C DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x57D JUMPI PUSH4 0xFFFFFFFF SWAP2 PUSH1 0x1 DUP3 ADD SWAP1 SSTORE DUP4 PUSH2 0xF9C DUP3 PUSH2 0x2605 JUMP JUMPDEST POP DUP5 PUSH1 0x1 DUP3 ADD SSTORE SSTORE AND PUSH32 0xC86BA04C55BC5EB2F2876B91C438849A296DBEC7B08751C3074D92E04F0A77AF PUSH0 DUP1 LOG4 PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x3F3 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x3F3 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x3F3 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x101A DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1027 DUP3 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH2 0x1036 DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 PUSH1 0x84 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x1057 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH1 0xA4 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x3F3 JUMPI PUSH2 0x10FF PUSH4 0xFFFFFFFF PUSH32 0xB0A29AED3D389A1041194255878B423F7780BE3ED2324D4693508C6FF189845E SWAP7 PUSH2 0x109F PUSH2 0x1111 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP4 SWAP1 SWAP10 PUSH2 0x10AA PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x10D7 DUP13 DUP13 DUP12 DUP12 PUSH2 0x10B9 PUSH2 0x3450 JUMP JUMPDEST PUSH2 0x10D0 PUSH2 0x10C7 CALLDATASIZE DUP12 DUP11 PUSH2 0x6DB JUMP JUMPDEST SWAP5 DUP13 CALLDATASIZE SWAP2 PUSH2 0x6DB JUMP JUMPDEST SWAP5 DUP13 PUSH2 0x4FB3 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 DUP12 MSTORE AND PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP11 ADD MSTORE PUSH1 0x80 DUP10 ADD SWAP2 PUSH2 0x2D5D JUMP JUMPDEST SWAP4 DUP7 DUP6 SUB PUSH1 0x60 DUP9 ADD MSTORE AND SWAP9 AND SWAP7 PUSH2 0x2D5D JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1133 DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x1152 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP3 SWAP2 SWAP1 PUSH2 0x118C ADDRESS DUP6 EQ ISZERO PUSH2 0x2BC4 JUMP JUMPDEST PUSH2 0x11A8 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 DUP3 DUP7 SLOAD AND EQ PUSH2 0x2C12 JUMP JUMPDEST PUSH2 0x11B0 PUSH2 0x5086 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11D3 JUMPI POP POP PUSH2 0x18 SWAP2 POP PUSH2 0x56C0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH1 0x40 SWAP5 SWAP4 SWAP5 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP3 MSTORE DUP7 AND GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0x1229 JUMPI JUMPDEST POP PUSH2 0x1216 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xE71 PUSH1 0x4 DUP3 ADD PUSH2 0x46A9 JUMP JUMPDEST PUSH2 0x18 SWAP4 PUSH2 0x1224 SWAP2 EQ PUSH2 0x464B JUMP JUMPDEST PUSH2 0x5681 JUMP JUMPDEST PUSH2 0x1243 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xEB2 JUMPI PUSH2 0xEA3 DUP2 DUP4 PUSH2 0x624 JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH2 0x86D PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH0 MSTORE PUSH2 0x872 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH0 MSTORE PUSH2 0x86E PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x129F DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH2 0x86D PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x24 CALLDATALOAD PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH2 0x869 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x1361 JUMPI PUSH1 0x40 MLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x1B1959081D1A1C9BDD59DA0819195B1959D85D1958D85B1B PUSH1 0x42 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x120 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x13E0 DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x13EC DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x13F9 DUP3 PUSH2 0x443 JUMP JUMPDEST PUSH2 0x1401 PUSH2 0x495 JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD SWAP2 PUSH2 0x140E DUP4 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0xE4 CALLDATALOAD SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 GT PUSH2 0x3F3 JUMPI PUSH2 0x1431 PUSH2 0x8F8 SWAP7 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST SWAP5 PUSH2 0x143A PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x144D PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE8 SHR AND ISZERO PUSH2 0x290E JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH2 0x38C7 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH2 0x200 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH2 0x14B4 PUSH2 0x454 JUMP JUMPDEST PUSH2 0x14BC PUSH2 0x463 JUMP JUMPDEST SWAP1 PUSH2 0x14C5 PUSH2 0x470 JUMP JUMPDEST SWAP2 PUSH2 0x14CE PUSH2 0x47D JUMP JUMPDEST SWAP3 PUSH2 0x14D7 PUSH2 0x4B5 JUMP JUMPDEST SWAP4 PUSH2 0x14E0 PUSH2 0x4C6 JUMP JUMPDEST PUSH2 0x14E8 PUSH2 0x4D7 JUMP JUMPDEST PUSH2 0x14F0 PUSH2 0x52F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP8 SWAP1 SWAP3 SWAP1 PUSH2 0x184 CALLDATALOAD DUP10 DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x1515 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST SWAP5 PUSH2 0x1A4 CALLDATALOAD DUP11 DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x152F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST SWAP7 PUSH2 0x1C4 CALLDATALOAD SWAP11 DUP12 GT PUSH2 0x3F3 JUMPI PUSH2 0x154C PUSH2 0x18 SWAP12 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST SWAP9 PUSH2 0x1E4 CALLDATALOAD SWAP11 PUSH1 0xE4 CALLDATALOAD SWAP4 PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH1 0x84 CALLDATALOAD SWAP4 PUSH2 0x2D7D JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x3F3 JUMPI PUSH2 0x158D DUP2 PUSH2 0x2E8F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH2 0x872 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE8 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x15DF DUP2 PUSH2 0x4F8 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH2 0x15EC DUP2 PUSH2 0x443 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH2 0x72C DUP2 PUSH2 0x443 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x1 PUSH2 0x1643 PUSH2 0x160C CALLDATASIZE PUSH2 0x15C7 JUMP JUMPDEST SWAP2 PUSH0 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO SWAP6 DUP7 SWAP2 DUP3 SWAP8 DUP9 SWAP4 PUSH2 0x16A0 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x168A JUMPI JUMPDEST PUSH2 0x1633 SWAP1 PUSH2 0x2E9E JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH0 SSTORE PUSH2 0x1673 JUMPI PUSH2 0x2F01 JUMP JUMPDEST PUSH2 0x1649 JUMPI STOP JUMPDEST PUSH2 0x1657 PUSH2 0xFF00 NOT PUSH0 SLOAD AND PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 LOG1 STOP JUMPDEST PUSH2 0x1685 PUSH2 0x100 PUSH2 0xFF00 NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x2F01 JUMP JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x162A JUMPI POP PUSH1 0xFF DUP2 AND DUP3 EQ PUSH2 0x162A JUMP JUMPDEST POP DUP2 PUSH1 0xFF DUP3 AND LT PUSH2 0x1623 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH2 0x16C4 PUSH2 0x5086 JUMP JUMPDEST PUSH2 0xC8C DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5C1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH32 0xE88463C2F254E2B070013A2DC7EE1E099F9BC00534CBDF03AF551DC26AE49219 PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x1735 DUP2 PUSH2 0xB4E JUMP JUMPDEST PUSH2 0x173D PUSH2 0x5086 JUMP JUMPDEST PUSH2 0x1745 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x86B DUP1 SLOAD PUSH1 0xFF PUSH1 0xE8 SHL NOT AND SWAP2 ISZERO ISZERO PUSH1 0xE8 DUP2 SWAP1 SHL PUSH1 0xFF PUSH1 0xE8 SHL AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1790 DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x179D DUP3 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP2 PUSH2 0x17AA DUP4 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 PUSH1 0xA4 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x17CB SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST SWAP2 PUSH1 0xC4 CALLDATALOAD SWAP5 DUP6 GT PUSH2 0x3F3 JUMPI PUSH2 0x17E7 PUSH2 0x18 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST SWAP4 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x4FB3 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH32 0xC40E7EBE8D73FD5A0CB54204770418C5A137493F190CCEC1BB558170CD0BF49A PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH2 0x180 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x184B DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1858 DUP3 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH2 0x1864 DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH2 0x1871 DUP3 PUSH2 0x443 JUMP JUMPDEST PUSH1 0xE4 CALLDATALOAD PUSH2 0x187D DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH2 0x104 CALLDATALOAD PUSH2 0x188A DUP2 PUSH2 0x4F8 JUMP JUMPDEST PUSH2 0x124 CALLDATALOAD SWAP2 PUSH2 0x1898 DUP4 PUSH2 0x4F8 JUMP JUMPDEST PUSH2 0x18A0 PUSH2 0x53D JUMP JUMPDEST PUSH2 0x164 CALLDATALOAD SWAP8 SWAP1 SWAP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP10 GT PUSH2 0x3F3 JUMPI PUSH2 0x18C7 PUSH2 0x18 SWAP10 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP9 SWAP1 SWAP8 PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH1 0x84 CALLDATALOAD SWAP4 PUSH2 0x2F44 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x18F8 DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 PUSH1 0x7 SIGNEXTEND DUP3 SUB PUSH2 0x3F3 JUMPI PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x1913 DUP4 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH2 0x191F DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 PUSH1 0x84 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x1940 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST SWAP3 PUSH1 0xA4 CALLDATALOAD SWAP6 DUP7 GT PUSH2 0x3F3 JUMPI PUSH2 0x195C PUSH2 0x18 SWAP7 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST SWAP5 PUSH2 0x3291 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x1993 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x95D JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH2 0x199F DUP2 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP1 PUSH2 0x19AC DUP3 PUSH2 0x443 JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD SWAP4 DUP5 GT PUSH2 0x3F3 JUMPI PUSH2 0x19C7 PUSH2 0x18 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x9BD JUMP JUMPDEST SWAP3 PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x3B67 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x19EF PUSH2 0x5086 JUMP JUMPDEST PUSH2 0x19F7 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x1A00 DUP2 PUSH2 0x2605 JUMP JUMPDEST PUSH2 0x1A38 JUMPI PUSH1 0x1 DUP2 PUSH0 DUP1 SWAP4 SSTORE ADD SSTORE PUSH32 0x3569B846531B754C99CB80DF3F49CD72FA6FE106AAEE5AB8E0CAF35A9D7CE88D PUSH0 DUP1 LOG2 PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH2 0xC8C SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH2 0x18 PUSH2 0x1AA3 PUSH2 0xB2F PUSH2 0x1A8B CALLDATASIZE PUSH2 0x15C7 JUMP JUMPDEST SWAP4 SWAP1 SWAP2 PUSH2 0x1A9E PUSH1 0xFF PUSH0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x3386 JUMP JUMPDEST PUSH2 0x3203 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AAF DUP2 PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 PUSH9 0x20A1A927A9A996AB19 PUSH1 0xB9 SHL DUP3 MSTORE PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1AD4 DUP4 PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x5 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 PUSH5 0x312E302E3 PUSH1 0xDC SHL DUP4 MSTORE PUSH2 0x1B01 PUSH1 0xFF PUSH0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x1AFC DUP2 PUSH2 0x3386 JUMP JUMPDEST PUSH2 0x3386 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 MLOAD SWAP1 KECCAK256 SWAP1 PUSH2 0x47F SSTORE PUSH2 0x480 SSTORE PUSH2 0x1B19 PUSH2 0x516B JUMP JUMPDEST PUSH2 0x1B21 PUSH2 0x517B JUMP JUMPDEST PUSH2 0x5196 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x1B56 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC48 JUMP JUMPDEST PUSH2 0x1B5E PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x1B71 PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE0 SHR AND ISZERO PUSH2 0x2B34 JUMP JUMPDEST PUSH2 0x140 DUP2 ADD SWAP1 PUSH2 0x1B80 DUP3 PUSH2 0x2B6F JUMP JUMPDEST PUSH2 0xCBF SLOAD SWAP1 DUP2 PUSH4 0xFFFFFFFF DUP1 SWAP3 AND LT ISZERO PUSH2 0x1CB8 JUMPI PUSH2 0x120 DUP4 ADD SWAP2 DUP2 PUSH2 0x1BA4 DUP5 PUSH2 0x2B6F JUMP JUMPDEST AND LT PUSH2 0x1CA6 JUMPI PUSH2 0x1BB7 PUSH2 0xCDA CALLDATASIZE DUP6 PUSH2 0x2265 JUMP JUMPDEST SWAP2 PUSH2 0x1BC1 DUP4 PUSH2 0x1264 JUMP JUMPDEST SLOAD PUSH2 0x1C95 JUMPI PUSH2 0x1BF9 PUSH2 0x1BF3 PUSH32 0x923794976D026D6B119735ADC163CB71DECFC903E17C3DC226C00789593C04E1 SWAP5 PUSH2 0x1264 JUMP JUMPDEST PUSH1 0x1 SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1C88 PUSH2 0x1C08 PUSH1 0x60 DUP7 ADD PUSH2 0x2B79 JUMP JUMPDEST SWAP6 PUSH2 0x1C15 PUSH1 0x80 DUP8 ADD PUSH2 0x2B79 JUMP JUMPDEST SWAP6 PUSH2 0x1C35 PUSH2 0x1C2F PUSH2 0x1C29 PUSH2 0x100 DUP5 ADD PUSH2 0x2B6F JUMP JUMPDEST SWAP6 PUSH2 0x2B6F JUMP JUMPDEST SWAP3 PUSH2 0x2B6F JUMP JUMPDEST PUSH2 0x1C41 PUSH1 0x40 DUP4 ADD PUSH2 0x2B79 JUMP JUMPDEST PUSH2 0x1C4A DUP4 PUSH2 0x2B79 JUMP JUMPDEST SWAP1 PUSH2 0x1C57 PUSH1 0x20 DUP6 ADD PUSH2 0x2B79 JUMP JUMPDEST SWAP3 PUSH2 0x1C66 PUSH2 0x160 DUP7 ADD DUP7 PUSH2 0x2B83 JUMP JUMPDEST SWAP7 SWAP1 SWAP6 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 AND SWAP14 PUSH1 0xE0 DUP3 ADD CALLDATALOAD SWAP14 PUSH1 0xA0 PUSH1 0xC0 DUP5 ADD CALLDATALOAD SWAP4 ADD CALLDATALOAD SWAP2 DUP13 PUSH2 0x33E6 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH2 0x18 PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x4BE791 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD642B7D9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x277AE7B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH32 0x2D5B62420992E5A4AFCE0E77742636CA2608EF58289FD2E1BAA5161EF6E7E41E PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D0A DUP2 PUSH2 0xB4E JUMP JUMPDEST PUSH2 0x1D12 PUSH2 0x5086 JUMP JUMPDEST PUSH2 0x1D1A PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x86B DUP1 SLOAD PUSH1 0xFF PUSH1 0xE0 SHL NOT AND SWAP2 ISZERO ISZERO PUSH1 0xE0 DUP2 SWAP1 SHL PUSH1 0xFF PUSH1 0xE0 SHL AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x20 PUSH2 0x1D62 PUSH2 0x3450 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x20 PUSH4 0xFFFFFFFF PUSH2 0x86B SLOAD PUSH1 0xC0 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5C5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x3F3 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x3F3 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x3F3 JUMPI JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1DF9 JUMPI POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DEA JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1E22 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1DE8 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD SWAP1 PUSH1 0x20 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP3 PUSH1 0x20 PUSH1 0x40 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x1E63 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x1E81 PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0x1E09 JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x1EC2 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DB8 JUMP JUMPDEST SWAP2 PUSH2 0x1ECC DUP4 PUSH2 0x345E JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1EE4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x135D DUP8 DUP3 PUSH2 0x1E2E JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1EF1 DUP4 DUP6 DUP9 PUSH2 0x34A7 JUMP JUMPDEST PUSH1 0x40 SWAP4 SWAP2 PUSH2 0x1F03 DUP6 MLOAD DUP1 SWAP4 DUP2 SWAP4 PUSH2 0x34C2 JUMP JUMPDEST SUB SWAP1 ADDRESS GAS DELEGATECALL SWAP1 PUSH2 0x1F11 PUSH2 0x34CF JUMP JUMPDEST SWAP2 ISZERO PUSH2 0x1F38 JUMPI POP SWAP1 PUSH1 0x1 SWAP2 PUSH2 0x1F26 DUP3 DUP9 PUSH2 0x356D JUMP JUMPDEST MSTORE PUSH2 0x1F31 DUP2 DUP8 PUSH2 0x356D JUMP JUMPDEST POP ADD PUSH2 0x1ECF JUMP JUMPDEST DUP5 DUP3 PUSH1 0x44 DUP2 MLOAD LT PUSH2 0x3F3 JUMPI PUSH2 0x1F5C DUP2 DUP4 PUSH2 0xE71 SWAP4 ADD MLOAD PUSH1 0x24 DUP1 SWAP2 DUP4 ADD ADD SWAP2 ADD PUSH2 0x34FE JUMP JUMPDEST SWAP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 DUP4 ADD PUSH2 0x355C JUMP JUMPDEST PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1F89 DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x1F95 DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH2 0x1F9D PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x3F3 JUMPI PUSH2 0x1FC1 PUSH2 0x8F8 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST SWAP3 PUSH4 0xFFFFFFFF PUSH2 0xCBF SLOAD AND SWAP3 PUSH2 0x1FD5 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x1FE8 PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE8 SHR AND ISZERO PUSH2 0x290E JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 CALLER PUSH2 0x38C7 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x40 MLOAD PUSH12 0x1D6329F1C35CA4BFABB9F561 PUSH1 0x28 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x3 NOT PUSH1 0x60 CALLDATASIZE DUP3 ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT PUSH2 0x3F3 JUMPI PUSH1 0x60 DUP3 CALLDATASIZE SUB SWAP4 DUP5 ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x205E DUP3 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x2076 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DB8 JUMP JUMPDEST SWAP2 SWAP1 SWAP4 PUSH2 0x2081 PUSH2 0x36D1 JUMP JUMPDEST PUSH1 0x4 DUP5 ADD CALLDATALOAD SWAP1 PUSH2 0x182 NOT ADD DUP2 SLT ISZERO PUSH2 0x3F3 JUMPI PUSH2 0xD47 SWAP5 PUSH2 0x2121 SWAP4 PUSH2 0x20AE PUSH2 0x211A SWAP4 PUSH1 0x4 CALLDATASIZE SWAP2 DUP10 ADD ADD PUSH2 0x2265 JUMP JUMPDEST SWAP6 PUSH2 0x20C4 PUSH2 0x20BF PUSH1 0x80 DUP10 ADD MLOAD PUSH2 0x437 JUMP JUMPDEST PUSH2 0x3727 JUMP JUMPDEST PUSH2 0x2108 PUSH2 0x20D0 DUP9 PUSH2 0x3D93 JUMP JUMPDEST SWAP2 PUSH1 0x44 PUSH2 0x20E0 PUSH1 0x20 DUP12 ADD MLOAD PUSH2 0x437 JUMP JUMPDEST SWAP2 PUSH2 0x160 DUP12 ADD MLOAD SWAP5 PUSH2 0x20F0 PUSH2 0x647 JUMP JUMPDEST SWAP12 DUP13 MSTORE PUSH1 0x20 DUP13 ADD MSTORE ADD CALLDATALOAD PUSH1 0x40 DUP11 ADD MSTORE PUSH1 0x60 DUP10 ADD PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MSTORE PUSH0 PUSH1 0xA0 DUP8 ADD MSTORE CALLDATASIZE SWAP2 PUSH2 0x746 JUMP JUMPDEST SWAP1 DUP4 PUSH2 0x521F JUMP JUMPDEST PUSH2 0x417C JUMP JUMPDEST PUSH2 0x212F CALLDATASIZE PUSH2 0x854 JUMP JUMPDEST POP SWAP5 PUSH2 0x213D SWAP7 SWAP4 SWAP5 SWAP7 PUSH2 0x36D1 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0x86B SLOAD PUSH2 0x2156 PUSH1 0xFF DUP3 PUSH1 0xE8 SHR AND ISZERO PUSH2 0x290E JUMP JUMPDEST PUSH1 0xC0 SHR AND SWAP6 PUSH2 0x2167 PUSH2 0x1A9E DUP9 PUSH2 0x31EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP6 SWAP1 DUP10 SWAP1 DUP5 AND DUP1 DUP9 EQ DUP1 PUSH2 0x225C JUMPI JUMPDEST ISZERO PUSH2 0x2235 JUMPI POP PUSH2 0x21B2 SWAP1 CALLVALUE EQ PUSH2 0x3581 JUMP JUMPDEST DUP6 EXTCODESIZE ISZERO PUSH2 0x3F3 JUMPI PUSH0 PUSH1 0x4 SWAP7 PUSH1 0x40 MLOAD SWAP8 DUP9 DUP1 SWAP3 PUSH4 0xD0E30DB PUSH1 0xE4 SHL DUP3 MSTORE CALLVALUE SWAP1 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x2230 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BDB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 PUSH2 0x220A SWAP5 PUSH2 0x2217 JUMPI JUMPDEST POP JUMPDEST PUSH2 0x21FB PUSH2 0x3450 JUMP JUMPDEST SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 CALLER SWAP13 DUP9 PUSH2 0x3588 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x18 PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x2224 PUSH2 0x222A SWAP3 PUSH2 0x56A JUMP JUMPDEST DUP1 PUSH2 0x3E9 JUMP JUMPDEST PUSH0 PUSH2 0x21F1 JUMP JUMPDEST PUSH2 0x31E3 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BDB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP8 POP PUSH2 0x220A SWAP5 SWAP2 PUSH2 0x2257 SWAP2 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x5115 JUMP JUMPDEST PUSH2 0x21F3 JUMP JUMPDEST POP CALLVALUE ISZERO ISZERO PUSH2 0x21A1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x180 DUP4 DUP3 SUB SLT PUSH2 0x3F3 JUMPI PUSH2 0x227A PUSH2 0x666 JUMP JUMPDEST SWAP3 PUSH2 0x2284 DUP2 PUSH2 0x48A JUMP JUMPDEST DUP5 MSTORE PUSH2 0x2292 PUSH1 0x20 DUP3 ADD PUSH2 0x48A JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x22A3 PUSH1 0x40 DUP3 ADD PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x22B4 PUSH1 0x60 DUP3 ADD PUSH2 0x48A JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x22C5 PUSH1 0x80 DUP3 ADD PUSH2 0x48A JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD CALLDATALOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD CALLDATALOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD CALLDATALOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 PUSH2 0x22F6 DUP2 DUP4 ADD PUSH2 0x54B JUMP JUMPDEST SWAP1 DUP6 ADD MSTORE PUSH2 0x120 PUSH2 0x2308 DUP2 DUP4 ADD PUSH2 0x54B JUMP JUMPDEST SWAP1 DUP6 ADD MSTORE PUSH2 0x140 PUSH2 0x231A DUP2 DUP4 ADD PUSH2 0x54B JUMP JUMPDEST SWAP1 DUP6 ADD MSTORE PUSH2 0x160 SWAP2 DUP2 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x233E SWAP3 ADD PUSH2 0x711 JUMP JUMPDEST SWAP1 DUP4 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x3 NOT PUSH1 0x60 CALLDATASIZE DUP3 ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP4 GT PUSH2 0x3F3 JUMPI PUSH1 0xC0 SWAP1 DUP4 CALLDATASIZE SUB ADD SLT PUSH2 0x3F3 JUMPI PUSH2 0x237E PUSH2 0x647 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x4 ADD CALLDATALOAD DUP2 DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x239B SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP7 ADD ADD PUSH2 0x2265 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x24 DUP4 ADD CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x44 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x23BD PUSH1 0x64 DUP5 ADD PUSH2 0x48A JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x84 DUP4 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x18 SWAP3 PUSH2 0x23E4 PUSH1 0xA4 SWAP3 PUSH1 0x4 CALLDATASIZE SWAP2 DUP5 ADD ADD PUSH2 0x711 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x23F8 PUSH2 0x463 JUMP JUMPDEST PUSH2 0x2400 PUSH2 0xB58 JUMP JUMPDEST SWAP2 PUSH2 0x43FA JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH2 0x872 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x2462 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xC48 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH2 0x246F DUP3 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x3F3 JUMPI PUSH2 0x2487 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP5 DUP6 GT PUSH2 0x3F3 JUMPI PUSH2 0x24A3 PUSH2 0x18 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xFD0 JUMP JUMPDEST SWAP5 SWAP1 SWAP4 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x35D0 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x40 MLOAD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH2 0x8F8 PUSH1 0x4 CALLDATALOAD PUSH2 0x2540 DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH2 0x2548 PUSH2 0x5086 JUMP JUMPDEST PUSH2 0x1B21 PUSH2 0x36D1 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH2 0x86A SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3F3 JUMPI PUSH0 PUSH2 0x25A6 DUP2 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST PUSH2 0x25AE PUSH2 0x36D1 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD CALLVALUE ADDRESS GAS CALL PUSH2 0x25C0 PUSH2 0x34CF JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x25CD JUMPI PUSH1 0x1 PUSH1 0x65 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0xE71 SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x1E09 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x86C DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2621 JUMPI PUSH0 MSTORE PUSH1 0x3 PUSH1 0x20 PUSH0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x25F1 JUMP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x86C SLOAD DUP2 LT ISZERO PUSH2 0x3F3 JUMPI PUSH2 0x2650 PUSH1 0x40 SWAP2 PUSH2 0x2605 JUMP JUMPDEST POP PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xCBE SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x269B DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH2 0x26A3 PUSH2 0x5086 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x26BB JUMPI PUSH2 0x18 SWAP1 PUSH2 0x50DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3F3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH2 0x2758 PUSH1 0x4 CALLDATALOAD PUSH2 0x272F DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH2 0x102 PUSH0 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO DUP1 PUSH2 0x277B JUMPI JUMPDEST PUSH2 0x274B SWAP1 PUSH2 0x2E9E JUMP JUMPDEST PUSH2 0xFFFF NOT AND OR PUSH0 SSTORE PUSH2 0x3C49 JUMP JUMPDEST PUSH2 0xFF00 NOT PUSH0 SLOAD AND PUSH0 SSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x2 DUP2 MSTORE LOG1 STOP JUMPDEST POP PUSH1 0x2 PUSH1 0xFF DUP3 AND LT PUSH2 0x2742 JUMP JUMPDEST PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3F3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x27A1 DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x27AE DUP3 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH2 0x27BA DUP2 PUSH2 0x443 JUMP JUMPDEST PUSH2 0x27C2 PUSH2 0x495 JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 GT PUSH2 0x3F3 JUMPI PUSH2 0x27E5 PUSH2 0x8F8 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x711 JUMP JUMPDEST SWAP4 PUSH4 0xFFFFFFFF PUSH2 0xCBF SLOAD AND SWAP4 PUSH2 0x143A PUSH2 0x36D1 JUMP JUMPDEST SWAP11 SWAP9 SWAP6 SWAP4 SWAP1 SWAP8 SWAP10 SWAP7 SWAP5 SWAP3 PUSH2 0x280B PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x2814 DUP4 PUSH2 0x3727 JUMP JUMPDEST PUSH2 0x281C PUSH2 0x3450 JUMP JUMPDEST SWAP3 DUP10 PUSH2 0x2826 PUSH2 0x686 JUMP JUMPDEST PUSH2 0x2831 DUP2 SWAP16 DUP3 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 PUSH2 0x283E SWAP2 PUSH2 0x2BB5 JUMP JUMPDEST PUSH2 0x284B SWAP1 PUSH1 0x40 DUP15 ADD PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x80 DUP12 ADD MSTORE PUSH1 0xA0 DUP11 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0xE0 DUP9 ADD MSTORE PUSH4 0xFFFFFFFF AND PUSH2 0x100 DUP8 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x120 SWAP2 DUP1 DUP4 DUP10 ADD MSTORE PUSH2 0x288B PUSH2 0x686 JUMP JUMPDEST SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP5 PUSH0 DUP7 MSTORE PUSH1 0x40 DUP10 ADD PUSH0 SWAP1 MSTORE PUSH1 0x60 DUP10 ADD SWAP1 PUSH2 0x28AB SWAP2 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MSTORE PUSH0 PUSH1 0xA0 DUP9 ADD MSTORE PUSH12 0x1D6329F1C35CA4BFABB9F561 PUSH1 0x28 SHL PUSH1 0xC0 DUP9 ADD MSTORE PUSH0 NOT PUSH1 0xE0 DUP9 ADD MSTORE PUSH1 0x1 SWAP1 DUP8 ADD MSTORE DUP6 ADD MSTORE DUP4 MLOAD PUSH2 0x28E6 SWAP1 PUSH2 0x4792 JUMP JUMPDEST SWAP1 MSTORE PUSH2 0x28F2 SWAP2 DUP4 PUSH2 0x52B6 JUMP JUMPDEST PUSH2 0x28FB DUP2 PUSH2 0x4A04 JUMP JUMPDEST PUSH2 0x2904 SWAP2 PUSH2 0x4E84 JUMP JUMPDEST PUSH2 0x461 PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST ISZERO PUSH2 0x2915 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x506175736564206465706F73697473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 PUSH2 0x2955 PUSH2 0x36D1 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD SWAP2 PUSH2 0x2967 PUSH2 0x20BF DUP5 MLOAD PUSH2 0x437 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP2 DUP3 MLOAD PUSH2 0x2976 PUSH2 0x3450 JUMP JUMPDEST SUB PUSH2 0x2A6C JUMPI PUSH2 0x2996 PUSH2 0x299A SWAP2 DUP4 PUSH1 0x1 PUSH2 0x298E DUP10 PUSH2 0x2605 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x3A68 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2A5A JUMPI DUP1 PUSH1 0x60 PUSH32 0xF8BD640004BCEC1B89657020F561D0B070CBDF662D0B158DB9DCCB0A8301BFAB SWAP3 ADD SWAP4 PUSH2 0x29DC PUSH2 0x29D6 DUP7 MLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST DUP8 PUSH2 0x3AF9 JUMP JUMPDEST PUSH2 0x2A4D DUP5 MLOAD SWAP5 PUSH2 0x2A32 PUSH2 0x2A2B DUP6 MLOAD SWAP6 PUSH2 0x2A1B PUSH1 0x40 DUP3 ADD SWAP10 DUP11 MLOAD PUSH2 0x2A03 DUP14 MLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2A0D DUP11 MLOAD PUSH2 0x437 JUMP JUMPDEST SWAP2 PUSH1 0xA0 DUP7 ADD SWAP12 DUP13 MLOAD SWAP5 PUSH2 0x3B67 JUMP JUMPDEST MLOAD SWAP3 MLOAD SWAP8 MLOAD SWAP9 MLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP4 MLOAD PUSH2 0x437 JUMP JUMPDEST SWAP4 MLOAD PUSH4 0xFFFFFFFF SWAP5 DUP6 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 AND SWAP11 AND SWAP9 CALLER SWAP4 DUP7 PUSH2 0x2AED JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x461 PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x582F497D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3D23E4D1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2A9D JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2A8F JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2AD0 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2AC2 JUMP JUMPDEST SWAP4 PUSH2 0x2B0F PUSH1 0x80 SWAP5 SWAP4 PUSH2 0x2B2D SWAP4 SWAP9 SWAP8 SWAP9 DUP8 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0xA0 DUP8 ADD SWAP1 PUSH2 0x2A7E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x40 DUP8 ADD MSTORE DUP6 DUP2 SUB PUSH1 0x60 DUP8 ADD MSTORE SWAP1 PUSH2 0x2AB1 JUMP JUMPDEST SWAP5 AND SWAP2 ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0x2B3B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5061757365642066696C6C73 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLDATALOAD PUSH2 0x72C DUP2 PUSH2 0x4F8 JUMP JUMPDEST CALLDATALOAD PUSH2 0x72C DUP2 PUSH2 0x443 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x3F3 JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3F3 JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x3F3 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 MSTORE JUMP JUMPDEST ISZERO PUSH2 0x2BCB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B9B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2C19 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B9B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP11 SWAP7 SWAP3 SWAP10 SWAP4 SWAP6 SWAP1 SWAP9 SWAP8 SWAP10 PUSH2 0x2C72 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x86B SLOAD PUSH1 0xE0 SHR PUSH1 0xFF AND ISZERO PUSH2 0x2C86 SWAP1 PUSH2 0x2B34 JUMP JUMPDEST PUSH2 0x2C8E PUSH2 0x3450 JUMP JUMPDEST SWAP3 DUP11 PUSH2 0x2C98 PUSH2 0x686 JUMP JUMPDEST PUSH2 0x2CA3 DUP2 SWAP16 DUP3 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 PUSH2 0x2CB0 SWAP2 PUSH2 0x2BB5 JUMP JUMPDEST PUSH2 0x2CBD SWAP1 PUSH1 0x40 DUP15 ADD PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x80 DUP12 ADD MSTORE PUSH1 0xA0 DUP11 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0x7 DUP8 SWAP1 SIGNEXTEND PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 SWAP5 DUP6 DUP10 ADD SWAP1 PUSH2 0x2CF5 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x120 SWAP6 DUP2 DUP8 DUP11 ADD MSTORE PUSH2 0x2D06 PUSH2 0x686 JUMP JUMPDEST SWAP9 DUP10 MSTORE PUSH0 PUSH1 0x20 DUP11 ADD SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP9 SWAP1 SWAP9 SIGNEXTEND PUSH1 0x40 DUP11 ADD MSTORE PUSH2 0x2D29 SWAP1 PUSH1 0x60 DUP11 ADD PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD MSTORE DUP4 ADD PUSH0 SWAP1 MSTORE DUP3 ADD PUSH0 SWAP1 MSTORE DUP2 MLOAD PUSH2 0x2D52 SWAP1 PUSH2 0x4792 JUMP JUMPDEST SWAP1 MSTORE PUSH2 0x28FB DUP2 PUSH2 0x4A04 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP14 SWAP13 SWAP12 SWAP6 SWAP15 SWAP4 DUP15 SWAP8 SWAP10 SWAP4 SWAP12 SWAP9 SWAP3 SWAP12 PUSH2 0x2D93 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x86B SLOAD PUSH1 0xE0 SHR PUSH1 0xFF AND ISZERO PUSH2 0x2DA7 SWAP1 PUSH2 0x2B34 JUMP JUMPDEST PUSH2 0x2DAF PUSH2 0x3450 JUMP JUMPDEST SWAP3 PUSH2 0x2DB8 PUSH2 0x686 JUMP JUMPDEST SWAP10 PUSH2 0x2DC3 SWAP1 DUP12 PUSH2 0x2BB5 JUMP JUMPDEST PUSH2 0x2DD0 SWAP1 PUSH1 0x20 DUP12 ADD PUSH2 0x2BB5 JUMP JUMPDEST PUSH2 0x2DDD SWAP1 PUSH1 0x40 DUP11 ADD PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0x80 DUP8 ADD DUP10 SWAP1 MSTORE PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0xE0 DUP6 ADD MSTORE PUSH4 0xFFFFFFFF DUP6 AND PUSH2 0x100 DUP6 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 PUSH2 0x120 SWAP4 DUP5 DUP7 ADD MSTORE PUSH2 0x2E20 PUSH2 0x686 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH0 PUSH1 0x20 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x7 DUP10 SWAP1 SIGNEXTEND PUSH1 0x40 DUP8 ADD MSTORE SWAP5 SWAP13 DUP10 DUP15 PUSH1 0x60 ADD SWAP1 PUSH2 0x2E46 SWAP2 PUSH2 0x2BB5 JUMP JUMPDEST DUP14 DUP12 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD MSTORE PUSH1 0xC0 DUP14 ADD MSTORE PUSH1 0xE0 DUP13 ADD MSTORE DUP11 ADD PUSH0 SWAP1 MSTORE DUP10 ADD PUSH0 SWAP1 MSTORE DUP9 MLOAD PUSH2 0x2E70 SWAP1 PUSH2 0x4792 JUMP JUMPDEST SWAP1 MSTORE PUSH2 0x28F2 SWAP7 PUSH2 0x5022 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x3 GT ISZERO PUSH2 0x2E99 JUMPI JUMP JUMPDEST PUSH2 0x2E7B JUMP JUMPDEST ISZERO PUSH2 0x2EA5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x2F3A SWAP3 SWAP2 PUSH2 0x1AA3 PUSH2 0xB2F SWAP3 PUSH2 0x2F21 PUSH1 0xFF PUSH0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x1AFC DUP2 PUSH2 0x3386 JUMP JUMPDEST PUSH2 0x2F2A CALLER PUSH2 0x50DF JUMP JUMPDEST PUSH2 0x1A9E PUSH1 0xFF PUSH0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x3386 JUMP JUMPDEST PUSH2 0x461 TIMESTAMP PUSH2 0xCBF SSTORE JUMP JUMPDEST SWAP8 SWAP12 SWAP6 SWAP10 SWAP2 SWAP7 SWAP4 SWAP12 SWAP11 SWAP5 SWAP9 SWAP1 SWAP3 SWAP11 PUSH2 0x2F5A PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x2F6D PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE8 SHR AND ISZERO PUSH2 0x290E JUMP JUMPDEST PUSH2 0x2F94 PUSH2 0x2996 PUSH2 0x2F8D DUP14 PUSH2 0x2F80 DUP13 PUSH2 0x124A JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x319E JUMPI PUSH2 0xCBF SLOAD SWAP10 PUSH4 0xFFFFFFFF SWAP14 DUP15 PUSH2 0x2FB1 DUP14 DUP3 DUP7 AND SWAP1 PUSH2 0x31C4 JUMP JUMPDEST SWAP1 PUSH32 0x0 AND LT PUSH2 0x318C JUMPI DUP15 DUP1 DUP6 AND DUP14 DUP1 DUP3 LT SWAP3 DUP4 ISZERO PUSH2 0x3155 JUMPI JUMPDEST POP POP POP PUSH2 0x3143 JUMPI DUP15 SWAP12 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP13 DUP14 DUP10 AND SWAP1 DUP8 AND SWAP1 DUP2 DUP2 OR PUSH2 0x310D JUMPI JUMPDEST POP POP POP DUP12 PUSH32 0x0 AND DUP13 DUP12 AND DUP2 DUP2 EQ DUP1 PUSH2 0x3104 JUMPI JUMPDEST ISZERO PUSH2 0x30EA JUMPI POP DUP2 CALLVALUE SUB PUSH2 0x30D8 JUMPI DUP1 EXTCODESIZE ISZERO PUSH2 0x3F3 JUMPI PUSH0 PUSH1 0x4 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0xD0E30DB PUSH1 0xE4 SHL DUP3 MSTORE CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x2230 JUMPI PUSH2 0x30C5 JUMPI JUMPDEST POP JUMPDEST PUSH2 0x86B SLOAD PUSH1 0xC0 SHR PUSH4 0xFFFFFFFF AND SWAP15 DUP16 PUSH2 0x308D SWAP1 PUSH2 0x31EE JUMP JUMPDEST PUSH2 0x3096 SWAP1 PUSH2 0x3203 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP13 AND SWAP16 AND SWAP14 PUSH2 0x30AA SWAP11 DUP13 PUSH2 0x3229 JUMP JUMPDEST SUB PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG4 PUSH2 0x461 PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x2224 PUSH2 0x30D2 SWAP3 PUSH2 0x56A JUMP JUMPDEST PUSH0 PUSH2 0x3073 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6452A35D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x30D8 JUMPI DUP2 PUSH2 0x30FF SWAP2 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x5115 JUMP JUMPDEST PUSH2 0x3075 JUMP JUMPDEST POP CALLVALUE ISZERO ISZERO PUSH2 0x303B JUMP JUMPDEST ISZERO PUSH2 0x3131 JUMPI LT PUSH2 0x311F JUMPI PUSH0 DUP1 DUP1 PUSH2 0x3009 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x25A63A5B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x495D907F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x582E3889 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x3183 SWAP3 SWAP4 POP PUSH32 0x0 AND SWAP1 PUSH2 0x31D6 JUMP JUMPDEST LT DUP16 DUP14 DUP2 PUSH2 0x2FE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF722177F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2A58C4F3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x31D1 JUMPI JUMP JUMPDEST PUSH2 0x31B0 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x31D1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP1 SWAP2 AND SWAP1 DUP2 EQ PUSH2 0x31D1 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x86B DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xC0 SHL NOT AND PUSH1 0xC0 SWAP3 SWAP1 SWAP3 SHL PUSH4 0xFFFFFFFF PUSH1 0xC0 SHL AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH4 0xFFFFFFFF SWAP3 DUP4 AND PUSH1 0x80 DUP4 ADD MSTORE SWAP3 DUP3 AND PUSH1 0xA0 DUP3 ADD MSTORE SWAP3 AND PUSH1 0xC0 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0xE0 DUP3 ADD MSTORE SWAP2 AND PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x140 PUSH2 0x120 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x72C SWAP4 SWAP2 ADD SWAP2 PUSH2 0x2D5D JUMP JUMPDEST PUSH2 0x333A SWAP1 PUSH4 0xFFFFFFFF PUSH32 0xA6AA57BD282FC82378458DE27BE4EADFA791A0C7321C49562EEBA8B2643DD566 SWAP6 SWAP5 SWAP8 SWAP7 PUSH2 0x32C7 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x32FD DUP9 DUP3 DUP9 DUP9 PUSH1 0x7 SIGNEXTEND SWAP9 PUSH2 0x32ED PUSH8 0x6F05B59D3B20000 PUSH2 0x32E7 DUP13 PUSH2 0x515C JUMP JUMPDEST LT PUSH2 0x3344 JUMP JUMPDEST DUP14 PUSH2 0x32F6 PUSH2 0x3450 JUMP JUMPDEST SWAP1 DUP10 PUSH2 0x5022 JUMP JUMPDEST PUSH2 0x3328 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 DUP10 MSTORE AND PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x80 DUP8 ADD SWAP1 PUSH2 0x1E09 JUMP JUMPDEST SWAP3 DUP6 DUP5 SUB PUSH1 0x60 DUP8 ADD MSTORE AND SWAP8 AND SWAP6 PUSH2 0x1E09 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST ISZERO PUSH2 0x334B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E76616C69642072656C6179657220666565 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x338D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH4 0xFFFFFFFF SWAP3 DUP4 AND PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0xA0 DUP3 ADD MSTORE SWAP2 DUP2 AND PUSH1 0xC0 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0xE0 DUP3 ADD MSTORE SWAP2 AND PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x140 PUSH2 0x120 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x72C SWAP4 SWAP2 ADD SWAP2 PUSH2 0x2D5D JUMP JUMPDEST PUSH2 0xCBE SLOAD DUP1 PUSH2 0x72C JUMPI POP CHAINID SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x3468 DUP3 PUSH2 0x72F JUMP JUMPDEST PUSH2 0x3475 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x624 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x3486 PUSH1 0x1F NOT SWAP2 PUSH2 0x72F JUMP JUMPDEST ADD SWAP1 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x3496 JUMPI POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x60 PUSH1 0x20 DUP1 SWAP4 DUP6 ADD ADD MSTORE ADD PUSH2 0x348A JUMP JUMPDEST SWAP1 DUP3 LT ISZERO PUSH2 0x2621 JUMPI PUSH2 0x34BE SWAP2 PUSH1 0x5 SHL DUP2 ADD SWAP1 PUSH2 0x2B83 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP1 DUP1 SWAP3 SWAP2 DUP3 CALLDATACOPY ADD PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x34F9 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x34E0 DUP3 PUSH2 0x6C0 JUMP JUMPDEST SWAP2 PUSH2 0x34EE PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x624 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x3F3 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3F3 JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x3F3 JUMPI DUP1 MLOAD PUSH2 0x3530 DUP2 PUSH2 0x6C0 JUMP JUMPDEST SWAP3 PUSH2 0x353E PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x624 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x3F3 JUMPI PUSH2 0x72C SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x1DE8 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x72C SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x1E09 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2621 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3F3 JUMPI JUMP JUMPDEST SWAP4 PUSH1 0xE0 SWAP6 SWAP4 PUSH2 0x72C SWAP9 SWAP8 SWAP4 PUSH4 0xFFFFFFFF SWAP4 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0x40 DUP7 ADD MSTORE AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH1 0x80 DUP5 ADD MSTORE AND PUSH1 0xA0 DUP3 ADD MSTORE DUP2 PUSH1 0xC0 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1E09 JUMP JUMPDEST SWAP5 SWAP1 SWAP7 SWAP4 SWAP6 PUSH2 0x35DD PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x35F0 PUSH1 0xFF PUSH2 0x86B SLOAD PUSH1 0xE0 SHR AND ISZERO PUSH2 0x2B34 JUMP JUMPDEST PUSH2 0x35FD PUSH2 0x140 DUP8 ADD PUSH2 0x2B6F JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0xCBF SLOAD SWAP2 AND LT ISZERO DUP1 PUSH2 0x36B3 JUMPI JUMPDEST PUSH2 0xD51 JUMPI PUSH2 0x361E CALLDATASIZE DUP8 PUSH2 0x2265 JUMP JUMPDEST PUSH2 0x3627 SWAP1 PUSH2 0x3D93 JUMP JUMPDEST SWAP8 PUSH2 0x3630 PUSH2 0x647 JUMP JUMPDEST SWAP9 PUSH2 0x363B CALLDATASIZE DUP10 PUSH2 0x2265 JUMP JUMPDEST DUP11 MSTORE PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x40 DUP10 ADD DUP5 SWAP1 MSTORE PUSH2 0x3656 DUP6 PUSH1 0x60 DUP12 ADD PUSH2 0x2BB5 JUMP JUMPDEST PUSH2 0x3661 CALLDATASIZE DUP5 DUP11 PUSH2 0x6DB JUMP JUMPDEST PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0xA0 DUP10 ADD MSTORE PUSH2 0x3674 DUP7 PUSH2 0x2B79 JUMP JUMPDEST SWAP7 PUSH2 0x3682 PUSH2 0x100 DUP9 ADD PUSH2 0x2B6F JUMP JUMPDEST SWAP3 CALLDATASIZE SWAP1 PUSH2 0x368E SWAP3 PUSH2 0x6DB JUMP JUMPDEST SWAP5 CALLDATASIZE SWAP1 PUSH2 0x369A SWAP3 PUSH2 0x6DB JUMP JUMPDEST SWAP5 PUSH1 0xE0 ADD CALLDATALOAD SWAP1 PUSH2 0x36A9 SWAP7 PUSH2 0x4FB3 JUMP JUMPDEST CALLER PUSH2 0x2904 SWAP2 PUSH2 0x3EDE JUMP JUMPDEST POP PUSH2 0x36C0 PUSH1 0x40 DUP8 ADD PUSH2 0x2B79 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0x3610 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x65 SLOAD EQ PUSH2 0x36E2 JUMPI PUSH1 0x2 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH32 0x8A5AFA2F5694AE60F58FB8F4F1D7408F1CB0AAC9FFC67150D46E2C7D1BB911FF SWAP1 PUSH1 0x20 SWAP1 LOG1 JUMP JUMPDEST ISZERO PUSH2 0x3766 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x44697361626C656420726F757465 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x37A3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x416D6F756E7420746F6F206C61726765 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x37E2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x696E76616C69642071756F746554696D657374616D7 PUSH1 0x54 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3827 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH27 0x1B5CD9CB9D985B1D59481B5D5CDD081B585D18DA08185B5BDD5B9D PUSH1 0x2A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 SWAP4 PUSH2 0x72C SWAP7 SWAP6 SWAP2 SWAP3 SWAP5 PUSH2 0x140 SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP6 AND DUP7 MSTORE PUSH0 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH4 0xFFFFFFFF DUP1 SWAP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH0 PUSH1 0xC0 DUP5 ADD MSTORE AND PUSH1 0xE0 DUP3 ADD MSTORE PUSH0 PUSH2 0x100 DUP3 ADD MSTORE DUP2 PUSH2 0x120 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1E09 JUMP JUMPDEST SWAP2 SWAP6 SWAP7 SWAP4 SWAP5 SWAP3 SWAP1 SWAP3 PUSH2 0x38E7 PUSH2 0x38E2 PUSH2 0x2F8D DUP9 PUSH2 0x2F80 DUP12 PUSH2 0x124A JUMP JUMPDEST PUSH2 0x375F JUMP JUMPDEST PUSH1 0x7 SIGNEXTEND SWAP4 PUSH2 0x3900 PUSH8 0x6F05B59D3B20000 PUSH2 0x32E7 DUP8 PUSH2 0x515C JUMP JUMPDEST PUSH2 0x391A PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP4 GT ISZERO PUSH2 0x379C JUMP JUMPDEST PUSH2 0xCBF SLOAD SWAP4 PUSH2 0x395E PUSH2 0x3934 PUSH4 0xFFFFFFFF SWAP7 DUP8 DUP13 AND SWAP1 PUSH2 0x31C4 JUMP JUMPDEST DUP7 PUSH32 0x0 AND LT ISZERO PUSH2 0x37DB JUMP JUMPDEST PUSH2 0x86B SLOAD PUSH1 0xC0 SHR PUSH4 0xFFFFFFFF AND SWAP9 PUSH2 0x3978 PUSH2 0x1A9E DUP12 PUSH2 0x31EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 PUSH32 0x0 DUP8 AND SWAP5 DUP11 DUP9 AND DUP1 DUP8 EQ DUP1 PUSH2 0x3A5F JUMPI JUMPDEST ISZERO PUSH2 0x3A35 JUMPI POP PUSH2 0x39C2 DUP2 CALLVALUE EQ PUSH2 0x3820 JUMP JUMPDEST DUP6 EXTCODESIZE ISZERO PUSH2 0x3F3 JUMPI PUSH0 PUSH1 0x4 SWAP7 PUSH1 0x40 MLOAD SWAP8 DUP9 DUP1 SWAP3 PUSH4 0xD0E30DB PUSH1 0xE4 SHL DUP3 MSTORE CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x2230 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP10 PUSH2 0x3A1D SWAP8 PUSH2 0x3A0C SWAP3 PUSH2 0x3A22 JUMPI JUMPDEST POP JUMPDEST DUP3 PUSH2 0x5376 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 AND SWAP13 AND SWAP11 DUP8 PUSH2 0x386A JUMP JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST DUP1 PUSH2 0x2224 PUSH2 0x3A2F SWAP3 PUSH2 0x56A JUMP JUMPDEST PUSH0 PUSH2 0x3A04 JUMP JUMPDEST PUSH2 0x3A1D SWAP7 POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP10 PUSH2 0x3A5A DUP4 PUSH2 0x3A0C SWAP4 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x5115 JUMP JUMPDEST PUSH2 0x3A06 JUMP JUMPDEST POP CALLVALUE ISZERO ISZERO PUSH2 0x39B1 JUMP JUMPDEST PUSH2 0x72C SWAP3 SWAP2 PUSH1 0x40 MLOAD PUSH2 0x3AF0 DUP2 PUSH2 0x3AE2 PUSH1 0x20 DUP3 ADD SWAP5 PUSH1 0x20 DUP7 MSTORE DUP1 MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0xA0 PUSH2 0x3AAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0xC0 PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD SWAP1 PUSH2 0x2A7E JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP6 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH0 NOT PUSH1 0x1 DUP5 SHL ADD AND PUSH1 0xC0 DUP7 ADD MSTORE SWAP2 ADD MLOAD DUP4 DUP3 SUB PUSH1 0x3F NOT ADD PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x2AB1 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x624 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 PUSH2 0x53AC JUMP JUMPDEST PUSH2 0x3B04 PUSH1 0x2 SWAP2 PUSH2 0x2605 JUMP JUMPDEST POP ADD PUSH3 0xFFFFFF DUP3 PUSH1 0x8 SHR AND DUP1 PUSH0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP5 AND SHL DUP1 DUP1 SWAP5 AND EQ PUSH2 0x3B3C JUMPI PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP2 SLOAD OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x954476D9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP5 SWAP4 SWAP2 SWAP1 SWAP4 DUP1 MLOAD DUP3 MLOAD SUB PUSH2 0x3C37 JUMPI DUP2 MLOAD SWAP2 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x3BEB JUMPI POP POP POP POP DUP3 PUSH2 0x3B92 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 PUSH2 0x3BC3 PUSH32 0x828FC203220356DF8F072A91681CAEE7D5C75095E2A95E80ED5A14B384697F71 SWAP4 DUP7 PUSH2 0x5436 JUMP JUMPDEST PUSH2 0x3BDF PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP8 AND SWAP6 CALLER SWAP1 DUP4 PUSH2 0x3B4E JUMP JUMPDEST SUB SWAP1 LOG4 PUSH0 DUP1 DUP1 DUP1 PUSH2 0x3B8C JUMP JUMPDEST DUP1 PUSH2 0x3BF8 PUSH1 0x1 SWAP3 DUP5 PUSH2 0x356D JUMP JUMPDEST MLOAD DUP1 PUSH2 0x3C06 JUMPI JUMPDEST POP ADD PUSH2 0x3B7B JUMP JUMPDEST PUSH2 0x3C31 SWAP1 PUSH2 0x3C24 PUSH2 0x3C17 DUP5 DUP9 PUSH2 0x356D JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH2 0x53FD JUMP JUMPDEST PUSH0 PUSH2 0x3BFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x19A53167 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x3C91 JUMPI PUSH2 0x86A DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH32 0x1F17A88F67B0F49060A34BEC1A4723A563620E6AA265EB640B5046DCEE0759A0 PUSH0 DUP1 LOG2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4261642068756220706F6F6C2061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x72C SWAP2 PUSH2 0x180 SWAP1 PUSH2 0x3CE0 DUP2 DUP5 MLOAD PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x3CF2 PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x3D04 PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x3D16 PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x3D28 PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x80 DUP4 ADD SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x3D5E PUSH2 0x100 DUP1 DUP6 ADD MLOAD SWAP1 DUP4 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x120 DUP4 DUP2 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP3 ADD MSTORE PUSH2 0x140 DUP4 DUP2 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP3 ADD MSTORE DUP2 PUSH2 0x160 DUP1 SWAP5 ADD MLOAD SWAP4 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1E09 JUMP JUMPDEST PUSH2 0x3D9B PUSH2 0x3450 JUMP JUMPDEST PUSH2 0x3DCD PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x3DB9 PUSH1 0x20 DUP4 ADD SWAP6 PUSH1 0x40 DUP8 MSTORE PUSH1 0x60 DUP5 ADD SWAP1 PUSH2 0x3CCD JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP4 ADD MSTORE SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x624 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x3DDC DUP3 PUSH2 0x2E8F JUMP JUMPDEST MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND DUP2 MSTORE PUSH1 0x60 DUP1 PUSH2 0x3E08 PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x80 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD SWAP1 PUSH2 0x1E09 JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE ADD MLOAD SWAP2 PUSH2 0x3E1F DUP4 PUSH2 0x2E8F JUMP JUMPDEST ADD MSTORE SWAP1 JUMP JUMPDEST SWAP11 SWAP8 SWAP1 SWAP7 SWAP6 PUSH2 0x3E93 SWAP7 PUSH2 0x72C SWAP14 SWAP12 SWAP7 PUSH1 0x80 DUP15 PUSH2 0x3E88 SWAP9 PUSH2 0x3EA2 SWAP15 SWAP9 PUSH2 0x180 SWAP14 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP10 DUP11 DUP1 SWAP3 AND DUP6 MSTORE AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE DUP13 PUSH1 0xA0 PUSH4 0xFFFFFFFF DUP1 SWAP5 AND SWAP2 ADD MSTORE AND PUSH1 0xC0 DUP13 ADD MSTORE AND PUSH1 0xE0 DUP11 ADD MSTORE PUSH2 0x100 DUP10 ADD SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x120 DUP8 ADD SWAP1 PUSH2 0x12CF JUMP JUMPDEST DUP1 PUSH2 0x140 DUP7 ADD MSTORE DUP5 ADD SWAP1 PUSH2 0x1E09 JUMP JUMPDEST SWAP2 PUSH2 0x160 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x3DDF JUMP JUMPDEST SWAP1 PUSH2 0x72C SWAP5 SWAP4 PUSH1 0x80 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE AND PUSH1 0x40 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1E09 JUMP JUMPDEST DUP1 MLOAD SWAP2 PUSH2 0x120 DUP4 ADD SWAP1 PUSH2 0x3EF5 DUP3 MLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0xCBF SLOAD SWAP2 AND LT PUSH2 0x1CA6 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 PUSH2 0x3F15 DUP3 PUSH2 0x1264 JUMP JUMPDEST SLOAD SUB PUSH2 0x4175 JUMPI PUSH1 0x1 SWAP1 JUMPDEST PUSH1 0x2 PUSH2 0x3F2A DUP3 PUSH2 0x1264 JUMP JUMPDEST SLOAD EQ PUSH2 0x4163 JUMPI PUSH2 0x3F39 SWAP1 PUSH2 0x1264 JUMP JUMPDEST PUSH1 0x2 SWAP1 SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH2 0x3F4B SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x80 DUP7 ADD MLOAD PUSH2 0x3F59 SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP3 PUSH1 0xA0 DUP8 ADD MLOAD SWAP2 DUP7 PUSH1 0xC0 DUP10 ADD MLOAD SWAP5 DUP10 PUSH1 0xA0 DUP4 ADD MLOAD SWAP7 PUSH1 0xE0 DUP3 ADD MLOAD SWAP8 PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x3F87 SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP11 MLOAD PUSH4 0xFFFFFFFF AND PUSH2 0x140 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x40 DUP6 ADD MLOAD PUSH2 0x3FAA SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP3 DUP6 MLOAD PUSH2 0x3FB6 SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP5 PUSH1 0x20 DUP8 ADD MLOAD PUSH2 0x3FC5 SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP7 PUSH2 0x160 ADD MLOAD SWAP8 PUSH1 0x60 DUP11 ADD MLOAD PUSH2 0x3FDA SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP10 PUSH1 0x80 DUP2 ADD MLOAD SWAP1 PUSH1 0x40 ADD MLOAD SWAP1 PUSH2 0x3FEE PUSH2 0x6A6 JUMP JUMPDEST SWAP12 PUSH2 0x3FF9 SWAP1 DUP14 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x20 DUP13 ADD MSTORE PUSH1 0x40 DUP12 ADD MSTORE PUSH2 0x4010 SWAP1 PUSH1 0x60 DUP12 ADD PUSH2 0x3DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP12 AND SWAP15 PUSH4 0xFFFFFFFF AND SWAP14 SWAP11 SWAP12 DUP13 SWAP12 PUSH2 0x4034 SWAP12 DUP14 PUSH2 0x3E24 JUMP JUMPDEST SUB PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B7B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG4 PUSH1 0x60 DUP2 ADD MLOAD PUSH2 0x4053 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 CALLER DUP5 EQ DUP1 PUSH2 0x415B JUMPI JUMPDEST PUSH2 0x3B8C JUMPI PUSH1 0x80 PUSH2 0x4078 SWAP2 ADD MLOAD PUSH2 0x437 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD SWAP1 SWAP4 SWAP1 SWAP3 PUSH1 0x80 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH32 0x0 AND DUP4 SUB PUSH2 0x414B JUMPI POP PUSH2 0x40CA SWAP2 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x5115 JUMP JUMPDEST PUSH2 0x40D4 DUP6 DUP5 PUSH2 0x546D JUMP JUMPDEST ADD MLOAD SWAP2 EXTCODESIZE ISZERO ISZERO DUP1 PUSH2 0x4141 JUMPI JUMPDEST PUSH2 0x40EA JUMPI POP POP POP POP JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x3F3 JUMPI PUSH2 0x4117 SWAP4 PUSH0 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x3A5BE8CB PUSH1 0xE0 SHL DUP6 MSTORE CALLER SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x3EB1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x2230 JUMPI PUSH2 0x412E JUMPI JUMPDEST DUP1 DUP1 DUP1 PUSH2 0x3B8C JUMP JUMPDEST DUP1 PUSH2 0x2224 PUSH2 0x413B SWAP3 PUSH2 0x56A JUMP JUMPDEST PUSH0 PUSH2 0x4126 JUMP JUMPDEST POP DUP2 MLOAD ISZERO ISZERO PUSH2 0x40E0 JUMP JUMPDEST PUSH2 0x4156 SWAP3 CALLER SWAP1 PUSH2 0x5115 JUMP JUMPDEST PUSH2 0x40D4 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x4067 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4793063 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH0 SWAP1 PUSH2 0x3F1F JUMP JUMPDEST SWAP1 PUSH0 DUP3 MLOAD PUSH2 0x120 DUP2 ADD PUSH2 0x4193 DUP2 MLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0xCBF SLOAD SWAP2 AND LT PUSH2 0x1CA6 JUMPI PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x2 PUSH2 0x41B3 DUP3 PUSH2 0x1264 JUMP JUMPDEST SLOAD EQ PUSH2 0x4163 JUMPI PUSH2 0x41C2 SWAP1 PUSH2 0x1264 JUMP JUMPDEST PUSH1 0x2 SWAP1 SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x41D4 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x41E2 SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP1 PUSH1 0xA0 DUP5 ADD MLOAD SWAP3 PUSH1 0xC0 DUP6 ADD MLOAD SWAP2 DUP9 PUSH1 0xA0 DUP2 ADD MLOAD SWAP4 DUP8 PUSH1 0xE0 DUP2 ADD MLOAD SWAP6 PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x4210 SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP6 MLOAD PUSH4 0xFFFFFFFF AND PUSH2 0x140 DUP4 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x4232 SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP2 DUP5 MLOAD PUSH2 0x423E SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP4 PUSH1 0x20 DUP7 ADD MLOAD PUSH2 0x424D SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP6 PUSH2 0x160 ADD MLOAD SWAP7 PUSH1 0x60 DUP10 ADD MLOAD PUSH2 0x4262 SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP9 PUSH1 0x80 DUP2 ADD MLOAD SWAP1 PUSH1 0x40 ADD MLOAD SWAP1 PUSH2 0x4276 PUSH2 0x6A6 JUMP JUMPDEST SWAP11 PUSH2 0x4281 SWAP1 DUP13 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x20 DUP12 ADD MSTORE PUSH1 0x40 DUP11 ADD MSTORE PUSH1 0x2 PUSH1 0x60 DUP11 ADD MSTORE PUSH1 0x40 MLOAD SWAP14 PUSH4 0xFFFFFFFF DUP16 SWAP13 AND SWAP14 PUSH2 0x42A9 SWAP12 DUP14 PUSH2 0x3E24 JUMP JUMPDEST SUB PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B7B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH0 SWAP5 LOG4 PUSH1 0x60 DUP5 ADD MLOAD PUSH2 0x42CA SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP2 DUP6 DUP4 AND SWAP2 SWAP1 CALLER DUP4 EQ DUP1 PUSH2 0x43F3 JUMPI JUMPDEST PUSH2 0x43EA JUMPI PUSH1 0x80 PUSH2 0x42F4 SWAP2 ADD MLOAD PUSH2 0x437 JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP2 ADD MLOAD SWAP7 DUP8 DUP2 DUP5 AND SWAP2 PUSH32 0x0 AND DUP3 EQ PUSH0 EQ PUSH2 0x43D3 JUMPI SWAP1 PUSH1 0x80 SWAP3 SWAP2 DUP8 PUSH2 0x43BF JUMPI JUMPDEST PUSH2 0x4340 SWAP2 POP DUP6 PUSH2 0x546D JUMP JUMPDEST ADD MLOAD SWAP3 EXTCODESIZE ISZERO ISZERO DUP1 PUSH2 0x43B5 JUMPI JUMPDEST PUSH2 0x4359 JUMPI JUMPDEST POP POP POP POP SWAP1 POP JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x43B1 JUMPI DUP4 PUSH2 0x4385 SWAP6 SWAP7 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x3A5BE8CB PUSH1 0xE0 SHL DUP6 MSTORE CALLER SWAP2 PUSH1 0x4 DUP7 ADD PUSH2 0x3EB1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x2230 JUMPI PUSH2 0x439E JUMPI JUMPDEST DUP1 DUP1 DUP1 DUP5 SWAP4 PUSH2 0x4351 JUMP JUMPDEST DUP1 PUSH2 0x2224 PUSH2 0x43AB SWAP3 PUSH2 0x56A JUMP JUMPDEST PUSH0 PUSH2 0x4394 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP DUP3 MLOAD ISZERO ISZERO PUSH2 0x434C JUMP JUMPDEST PUSH2 0x43CC SWAP2 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x5115 JUMP JUMPDEST PUSH0 DUP9 PUSH2 0x4335 JUMP JUMPDEST PUSH1 0x80 SWAP3 SWAP2 SWAP7 POP PUSH2 0x43E5 SWAP1 DUP7 PUSH0 SWAP9 PUSH2 0x53FD JUMP JUMPDEST PUSH2 0x4340 JUMP JUMPDEST POP POP POP POP POP SWAP1 POP JUMP JUMPDEST POP PUSH0 PUSH2 0x42E3 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP1 PUSH2 0x120 DUP3 ADD SWAP1 PUSH2 0x4413 DUP3 MLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH2 0xCBF SLOAD SWAP2 AND LT PUSH2 0x1CA6 JUMPI PUSH1 0x20 DUP6 ADD MLOAD DUP5 ISZERO PUSH2 0x461C JUMPI PUSH1 0x2 SWAP1 JUMPDEST PUSH1 0x2 PUSH2 0x443D DUP3 PUSH2 0x1264 JUMP JUMPDEST SLOAD EQ PUSH2 0x4163 JUMPI PUSH2 0x444C SWAP1 PUSH2 0x1264 JUMP JUMPDEST PUSH1 0x2 SWAP1 SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH2 0x445E SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MLOAD PUSH2 0x446C SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP3 PUSH1 0xA0 DUP7 ADD MLOAD SWAP2 DUP9 PUSH1 0xC0 DUP9 ADD MLOAD SWAP5 DUP9 PUSH1 0xA0 DUP4 ADD MLOAD SWAP7 PUSH1 0xE0 DUP3 ADD MLOAD SWAP8 PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x449A SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP11 MLOAD PUSH4 0xFFFFFFFF AND PUSH2 0x140 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x40 DUP6 ADD MLOAD PUSH2 0x44BD SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP3 DUP6 MLOAD PUSH2 0x44C9 SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP5 PUSH1 0x20 DUP8 ADD MLOAD PUSH2 0x44D8 SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP7 PUSH2 0x160 ADD MLOAD SWAP8 PUSH1 0x60 DUP11 ADD MLOAD PUSH2 0x44ED SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP10 PUSH1 0x80 DUP2 ADD MLOAD SWAP1 PUSH1 0x40 ADD MLOAD SWAP1 PUSH2 0x4501 PUSH2 0x6A6 JUMP JUMPDEST SWAP12 PUSH2 0x450C SWAP1 DUP14 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x20 DUP13 ADD MSTORE PUSH1 0x40 DUP12 ADD MSTORE PUSH2 0x4523 SWAP1 PUSH1 0x60 DUP12 ADD PUSH2 0x3DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP12 AND SWAP15 PUSH4 0xFFFFFFFF AND SWAP14 SWAP11 SWAP12 DUP13 SWAP12 PUSH2 0x4547 SWAP12 DUP14 PUSH2 0x3E24 JUMP JUMPDEST SUB PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5B7B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG4 PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x4566 SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 CALLER DUP3 EQ DUP1 PUSH2 0x4614 JUMPI JUMPDEST PUSH2 0x460D JUMPI PUSH2 0x458D PUSH1 0x80 DUP1 SWAP3 ADD MLOAD PUSH2 0x437 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD SWAP1 SWAP6 SWAP1 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP2 DUP8 SWAP2 DUP8 SWAP1 PUSH32 0x0 AND DUP5 SUB PUSH2 0x45F4 JUMPI POP ISZERO PUSH2 0x45E0 JUMPI JUMPDEST PUSH2 0x40D4 SWAP2 POP DUP5 PUSH2 0x546D JUMP JUMPDEST PUSH2 0x45ED SWAP2 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x5115 JUMP JUMPDEST PUSH0 DUP6 PUSH2 0x45D5 JUMP JUMPDEST SWAP1 PUSH2 0x4604 JUMPI PUSH2 0x4156 SWAP3 CALLER SWAP1 PUSH2 0x5115 JUMP JUMPDEST PUSH2 0x4156 SWAP3 PUSH2 0x53FD JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x457B JUMP JUMPDEST PUSH1 0x1 PUSH2 0x4627 DUP3 PUSH2 0x1264 JUMP JUMPDEST SLOAD SUB PUSH2 0x4636 JUMPI PUSH1 0x1 JUMPDEST SWAP1 PUSH2 0x4432 JUMP JUMPDEST PUSH0 PUSH2 0x4630 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x3F3 JUMPI MLOAD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x4652 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x80 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x2E PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH2 0x72C SWAP2 PUSH2 0x140 SWAP1 PUSH2 0x470B DUP2 DUP5 MLOAD PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x471D PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x472F PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x4761 PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0xC0 DUP4 ADD SWAP1 PUSH1 0x7 SIGNEXTEND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP4 DUP2 ADD MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 DUP3 ADD MSTORE PUSH2 0x100 DUP4 DUP2 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP3 ADD MSTORE DUP2 PUSH2 0x120 DUP1 SWAP5 ADD MLOAD SWAP4 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1E09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DCD DUP2 PUSH2 0x3AE2 PUSH1 0x20 DUP3 ADD SWAP5 PUSH1 0x20 DUP7 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x46F8 JUMP JUMPDEST ISZERO PUSH2 0x47B6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x696E76616C69642066656573 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x47F1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x1C995B185E48199A5B1B1959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x7 SWAP2 DUP3 SIGNEXTEND SWAP2 SIGNEXTEND ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x3F SHL SUB NOT DUP3 SLT PUSH1 0x1 PUSH1 0x1 PUSH1 0x3F SHL SUB DUP4 SGT OR PUSH2 0x31D1 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x4851 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x66696C6C20616D6F756E74207072652066656573206973203 PUSH1 0x3C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4899 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7061796F757441646A7573746D656E7450637420746F6F20736D616C6C000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x48E5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7061796F757441646A7573746D656E7450637420746F6F206C61726765000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP2 EQ PUSH2 0x31D1 JUMPI PUSH0 SUB SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x4941 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH28 0x536F6D65686F7720686974206D6178546F6B656E73546F53656E6421 PUSH1 0x20 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x498C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x34B73B30B634B2103932B830BCB6B2B73A1031B430B4B7 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x72C SWAP3 SWAP2 ADD SWAP1 PUSH2 0x1E09 JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 PUSH1 0x40 DUP2 ADD SWAP3 PUSH2 0x4A44 PUSH8 0x6F05B59D3B20000 DUP1 PUSH2 0x4A36 PUSH2 0x4A31 PUSH2 0x4A2B DUP10 MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST PUSH2 0x515C JUMP JUMPDEST LT SWAP1 DUP2 PUSH2 0x4DA3 JUMPI JUMPDEST POP PUSH2 0x47AF JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0x4A63 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP3 MLOAD GT ISZERO PUSH2 0x379C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x4A7E PUSH2 0x4A75 DUP4 MLOAD PUSH2 0x1273 JUMP JUMPDEST SLOAD DUP3 MLOAD GT PUSH2 0x47EA JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD SWAP3 DUP4 MLOAD SWAP7 PUSH2 0x4AAE PUSH1 0xC0 DUP4 ADD SWAP9 PUSH2 0x4AA8 PUSH2 0x4A9C DUP12 MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST DUP5 MLOAD PUSH1 0x7 SIGNEXTEND JUMPDEST SWAP1 PUSH2 0x4825 JUMP JUMPDEST SWAP1 PUSH2 0x574F JUMP JUMPDEST SWAP8 PUSH2 0x4ABA DUP10 ISZERO ISZERO PUSH2 0x484A JUMP JUMPDEST PUSH2 0x4AD0 DUP5 MLOAD PUSH2 0x4AC9 DUP8 MLOAD PUSH2 0x1273 JUMP JUMPDEST SLOAD SWAP1 PUSH2 0x31C4 JUMP JUMPDEST DUP10 DUP2 LT PUSH2 0x4D99 JUMPI JUMPDEST POP PUSH2 0x4A2B PUSH2 0x4AFF SWAP3 PUSH2 0x4AA2 PUSH2 0x4AF1 PUSH2 0x4AF9 SWAP5 MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST SWAP2 MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST DUP9 PUSH2 0x5376 JUMP JUMPDEST SWAP4 PUSH2 0x120 DUP7 ADD DUP1 MLOAD DUP1 PUSH2 0x4D44 JUMPI JUMPDEST POP POP POP PUSH1 0xA0 DUP6 ADD MLOAD DUP8 DUP7 MLOAD SWAP2 PUSH1 0xA0 DUP4 ADD MLOAD EQ SWAP2 DUP3 ISZERO PUSH2 0x4D36 JUMPI JUMPDEST POP POP DUP1 ISZERO PUSH2 0x4D1D JUMPI JUMPDEST PUSH2 0x4B39 SWAP1 PUSH2 0x4985 JUMP JUMPDEST PUSH2 0x4B43 DUP4 MLOAD PUSH2 0x1273 JUMP JUMPDEST PUSH2 0x4B4E DUP9 DUP3 SLOAD PUSH2 0x31D6 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x60 DUP6 ADD SWAP2 PUSH2 0x4B5F DUP4 MLOAD PUSH2 0x437 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 CALLER DUP5 DUP7 AND EQ DUP1 PUSH2 0x4D06 JUMPI JUMPDEST PUSH2 0x4CFC JUMPI SWAP1 PUSH1 0x40 PUSH2 0x4BF2 SWAP3 ADD SWAP5 DUP8 DUP6 PUSH2 0x4B8D DUP9 MLOAD PUSH2 0x437 JUMP JUMPDEST AND SWAP2 PUSH32 0x0 DUP8 AND DUP4 SUB PUSH2 0x4CB3 JUMPI POP POP POP PUSH2 0x4BCC PUSH2 0x2996 PUSH2 0x100 DUP11 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x4C94 JUMPI JUMPDEST PUSH2 0x4BEC DUP8 PUSH2 0x4BE7 PUSH2 0x4BE2 DUP5 MLOAD PUSH2 0x437 JUMP JUMPDEST PUSH2 0x437 JUMP JUMPDEST PUSH2 0x546D JUMP JUMPDEST MLOAD PUSH2 0x437 JUMP JUMPDEST SWAP2 DUP3 EXTCODESIZE ISZERO ISZERO DUP1 PUSH2 0x4C86 JUMPI JUMPDEST PUSH2 0x4C0B JUMPI JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4C1D PUSH2 0x4C24 SWAP2 PUSH1 0x80 SWAP5 AND SWAP5 MLOAD PUSH2 0x437 JUMP JUMPDEST SWAP5 MLOAD PUSH2 0x1273 JUMP JUMPDEST SLOAD SWAP1 MLOAD GT ISZERO SWAP5 ADD MLOAD SWAP4 DUP2 EXTCODESIZE ISZERO PUSH2 0x3F3 JUMPI PUSH0 DUP1 SWAP5 PUSH2 0x4C59 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x1D43F27 PUSH1 0xE3 SHL DUP7 MSTORE CALLER SWAP3 PUSH1 0x4 DUP8 ADD PUSH2 0x49CB JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x2230 JUMPI PUSH2 0x4C73 JUMPI JUMPDEST DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x4C02 JUMP JUMPDEST DUP1 PUSH2 0x2224 PUSH2 0x4C80 SWAP3 PUSH2 0x56A JUMP JUMPDEST PUSH0 PUSH2 0x4C68 JUMP JUMPDEST POP PUSH1 0x80 DUP8 ADD MLOAD MLOAD ISZERO ISZERO PUSH2 0x4BFD JUMP JUMPDEST PUSH2 0x4CAE DUP8 PUSH2 0x4CA5 PUSH2 0x4BE2 DUP9 MLOAD PUSH2 0x437 JUMP JUMPDEST ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x5115 JUMP JUMPDEST PUSH2 0x4BD1 JUMP JUMPDEST PUSH2 0x4CC4 PUSH2 0x2996 PUSH2 0x100 DUP14 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x4CF3 JUMPI POP PUSH2 0x4CEE SWAP2 POP PUSH2 0x4CDC PUSH2 0x4BE2 DUP9 MLOAD PUSH2 0x437 JUMP JUMPDEST PUSH2 0x4CE6 DUP5 MLOAD PUSH2 0x437 JUMP JUMPDEST SWAP1 CALLER SWAP1 PUSH2 0x5115 JUMP JUMPDEST PUSH2 0x4BEC JUMP JUMPDEST PUSH2 0x4CEE SWAP3 PUSH2 0x53FD JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST POP PUSH2 0x4D18 PUSH2 0x2996 PUSH2 0x100 DUP11 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x4B74 JUMP JUMPDEST POP PUSH2 0x4B39 PUSH2 0x4D2F PUSH2 0x100 DUP8 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x4B30 JUMP JUMPDEST PUSH1 0x60 ADD MLOAD EQ SWAP1 POP DUP8 PUSH0 PUSH2 0x4B27 JUMP JUMPDEST SWAP6 PUSH2 0x4D81 PUSH2 0x4D87 SWAP3 PUSH2 0x4D65 PUSH2 0x4D91 SWAP6 SWAP10 PUSH8 0xDE0B6B3A763FFFF NOT SGT ISZERO PUSH2 0x4892 JUMP JUMPDEST PUSH2 0x4D7B PUSH9 0x56BC75E2D63100000 DUP3 MLOAD SGT ISZERO PUSH2 0x48DE JUMP JUMPDEST MLOAD PUSH2 0x492A JUMP JUMPDEST SWAP1 PUSH2 0x5376 JUMP JUMPDEST SWAP5 MLOAD DUP6 GT ISZERO PUSH2 0x493A JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH2 0x4B0D JUMP JUMPDEST SWAP9 POP PUSH2 0x4A2B PUSH2 0x4AD8 JUMP JUMPDEST SWAP1 POP PUSH2 0x4DB9 PUSH2 0x4A31 PUSH2 0x4A2B PUSH1 0xC0 DUP7 ADD MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST LT PUSH0 PUSH2 0x4A3E JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND DUP2 MSTORE PUSH1 0x80 DUP1 PUSH2 0x4DE9 PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0xA0 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD SWAP1 PUSH2 0x1E09 JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x7 SIGNEXTEND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP11 SWAP8 SWAP4 PUSH2 0x72C SWAP13 SWAP11 SWAP6 SWAP2 SWAP8 SWAP4 PUSH2 0x4E75 SWAP11 SWAP8 SWAP4 PUSH1 0x20 DUP15 PUSH2 0x180 SWAP12 DUP2 MSTORE ADD MSTORE PUSH1 0x40 DUP14 ADD MSTORE PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x80 DUP12 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0xA0 DUP11 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP1 SWAP3 AND PUSH1 0xE0 DUP11 ADD MSTORE AND PUSH2 0x100 DUP9 ADD MSTORE AND PUSH2 0x120 DUP7 ADD MSTORE DUP1 PUSH2 0x140 DUP7 ADD MSTORE DUP5 ADD SWAP1 PUSH2 0x1E09 JUMP JUMPDEST SWAP2 PUSH2 0x160 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x4DC0 JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x4E94 SWAP1 PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP2 ADD MLOAD PUSH2 0x4EA3 SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP2 ADD MLOAD SWAP4 PUSH2 0x100 SWAP5 DUP6 DUP4 ADD MLOAD PUSH2 0x4EBB SWAP1 ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x120 SWAP3 DUP4 DUP6 ADD MLOAD SWAP3 PUSH2 0x4ECC PUSH2 0x6B3 JUMP JUMPDEST SWAP7 PUSH2 0x4ED7 SWAP1 DUP9 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0x40 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE DUP2 MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x4F04 SWAP1 PUSH2 0x1273 JUMP JUMPDEST SLOAD SWAP4 PUSH1 0xA0 DUP5 ADD MLOAD SWAP4 MLOAD SWAP5 PUSH1 0x80 DUP7 ADD MLOAD SWAP6 PUSH1 0xA0 DUP2 ADD MLOAD SWAP2 PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x4F29 SWAP1 PUSH1 0x7 SIGNEXTEND SWAP1 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0x7 SIGNEXTEND SWAP11 DUP4 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP11 PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x4F4A SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP2 DUP5 MLOAD PUSH2 0x4F56 SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP9 PUSH1 0x20 DUP7 ADD MLOAD PUSH2 0x4F65 SWAP1 PUSH2 0x437 JUMP JUMPDEST SWAP6 ADD MLOAD SWAP6 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB AND SWAP15 PUSH4 0xFFFFFFFF AND SWAP14 CALLER SWAP7 PUSH2 0x4F8D SWAP12 DUP14 PUSH2 0x4E0B JUMP JUMPDEST SUB PUSH32 0x8AB9DC6C19FE88E69BC70221B339C84332752FDD49591B7C51E66BAE3947B73C SWAP2 LOG4 JUMP JUMPDEST SWAP4 SWAP3 PUSH2 0x501C SWAP4 PUSH2 0x461 SWAP8 SWAP7 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH4 0xFFFFFFFF PUSH1 0x20 DUP6 ADD SWAP6 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5C7B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 MSTORE AND PUSH1 0x40 DUP6 ADD MSTORE DUP6 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 MSTORE PUSH2 0x5014 DUP2 PUSH2 0x609 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x579D JUMP JUMPDEST SWAP1 PUSH2 0x5850 JUMP JUMPDEST SWAP4 SWAP3 PUSH2 0x501C SWAP4 PUSH2 0x461 SWAP8 SWAP7 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH4 0xFFFFFFFF PUSH1 0x20 DUP6 ADD SWAP6 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5C5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP8 MSTORE AND PUSH1 0x40 DUP6 ADD MSTORE DUP6 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 MSTORE PUSH2 0x5014 DUP2 PUSH2 0x609 JUMP JUMPDEST PUSH2 0xC8C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x509B JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0xC8C DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5C1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x461 SWAP2 PUSH2 0x5157 DUP3 PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x5920 JUMP JUMPDEST PUSH0 DUP2 SLT PUSH2 0x5166 JUMPI SWAP1 JUMP JUMPDEST PUSH0 SUB SWAP1 JUMP JUMPDEST PUSH2 0x461 PUSH1 0xFF PUSH0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x3386 JUMP JUMPDEST PUSH2 0x518F PUSH1 0xFF PUSH0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x1AFC DUP2 PUSH2 0x3386 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x51DE JUMPI PUSH2 0x869 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH32 0xA9E8C42C9E7FCA7F62755189A16B2F5314D43D8FB24E91BA54E6D65F9314E849 PUSH0 DUP1 LOG2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x4261642062726964676520726F757465722061646472657373 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 PUSH2 0x2996 SWAP1 PUSH2 0x529F SWAP3 DUP5 MLOAD PUSH2 0x5232 PUSH2 0x3450 JUMP JUMPDEST PUSH2 0x3AF0 PUSH2 0x525F PUSH1 0x40 DUP1 SWAP10 ADD MLOAD SWAP5 DUP10 MLOAD SWAP5 PUSH2 0x524B DUP7 PUSH2 0x582 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 DUP5 MSTORE DUP10 DUP6 ADD SWAP6 DUP7 MSTORE PUSH2 0x2605 JUMP JUMPDEST POP SLOAD SWAP4 DUP9 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x5284 PUSH1 0x20 DUP5 ADD SWAP7 PUSH1 0x20 DUP9 MSTORE MLOAD PUSH1 0x60 DUP14 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD SWAP1 PUSH2 0x3CCD JUMP JUMPDEST SWAP2 MLOAD PUSH1 0x60 DUP5 ADD MSTORE MLOAD PUSH1 0x80 DUP4 ADD MSTORE SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x624 JUMP JUMPDEST PUSH2 0x52A6 JUMPI POP JUMP JUMPDEST MLOAD PUSH4 0x582F497D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x120 SWAP1 SWAP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP1 SWAP5 SWAP3 SWAP4 DUP2 DUP7 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT DUP4 DUP4 LT OR PUSH2 0x57D JUMPI PUSH2 0x5330 SWAP6 PUSH2 0x52F5 SWAP3 DUP9 MSTORE DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP4 DUP5 MSTORE PUSH2 0x2605 JUMP JUMPDEST POP SLOAD SWAP2 PUSH2 0x3AF0 DUP7 MLOAD DUP1 SWAP3 PUSH2 0x531B PUSH1 0x20 DUP4 ADD SWAP6 PUSH1 0x20 DUP8 MSTORE MLOAD DUP11 DUP1 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x46F8 JUMP JUMPDEST SWAP1 MLOAD PUSH1 0x60 DUP4 ADD MSTORE SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x624 JUMP JUMPDEST ISZERO PUSH2 0x5338 JUMPI POP JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x24B73B30B634B21039B637BB903932B630BC90383937B7B3 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH0 DUP3 DUP5 SUB SWAP3 SLT DUP4 DUP4 SLT DUP2 AND SWAP1 DUP5 DUP5 SGT SWAP1 ISZERO AND OR PUSH2 0x31D1 JUMPI DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x31D1 JUMPI DIV SWAP1 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP1 PUSH0 SWAP2 JUMPDEST DUP5 MLOAD DUP4 LT ISZERO PUSH2 0x53F5 JUMPI PUSH2 0x53C6 DUP4 DUP7 PUSH2 0x356D JUMP JUMPDEST MLOAD SWAP1 DUP2 DUP2 LT ISZERO PUSH2 0x53E4 JUMPI PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 JUMPDEST SWAP3 ADD SWAP2 PUSH2 0x53B3 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x53DC JUMP JUMPDEST SWAP2 POP SWAP3 POP EQ SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x461 SWAP2 PUSH2 0x5157 DUP3 PUSH2 0x59D JUMP JUMPDEST SWAP1 PUSH32 0xB6E6AE61A8FA98A339088353BC7A76C8C580B2EFD09210A80BFCCABE05D9AE47 SWAP2 PUSH2 0x5468 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x3B4E JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x54AD JUMPI SWAP1 PUSH2 0x461 SWAP3 SWAP2 PUSH32 0x0 AND PUSH2 0x53FD JUMP JUMPDEST PUSH32 0x0 AND DUP1 EXTCODESIZE ISZERO PUSH2 0x3F3 JUMPI PUSH0 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP4 MSTORE DUP9 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x2230 JUMPI PUSH2 0x55CC JUMPI JUMPDEST POP DUP2 SELFBALANCE LT PUSH2 0x5587 JUMPI PUSH0 DUP1 DUP1 SWAP4 DUP2 SWAP4 GAS CALL PUSH2 0x5517 PUSH2 0x34CF JUMP JUMPDEST POP ISZERO PUSH2 0x551F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH26 0x1958DA5C1A595B9D081B585E481A185D99481C995D995C9D1959 PUSH1 0x32 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x55D5 SWAP1 PUSH2 0x56A JUMP JUMPDEST PUSH0 PUSH2 0x54FF JUMP JUMPDEST SWAP1 PUSH2 0x55E5 DUP3 PUSH2 0x56C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5C3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH0 DUP1 LOG2 DUP1 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x567A JUMPI JUMPDEST PUSH2 0x5613 JUMPI POP POP JUMP JUMPDEST PUSH2 0x5677 SWAP2 PUSH0 DUP1 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x5626 DUP6 PUSH2 0x582 JUMP JUMPDEST PUSH1 0x27 DUP6 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP7 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL PUSH2 0x5671 PUSH2 0x34CF JUMP JUMPDEST SWAP2 PUSH2 0x5A38 JUMP JUMPDEST POP JUMP JUMPDEST POP PUSH0 PUSH2 0x560B JUMP JUMPDEST SWAP1 PUSH2 0x568B DUP3 PUSH2 0x56C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5C3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH0 DUP1 LOG2 DUP1 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x56B8 JUMPI PUSH2 0x5613 JUMPI POP POP JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x560B JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x56F4 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x5BBB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP2 DUP2 DUP4 MUL SWAP2 DUP4 DUP4 DIV SUB PUSH2 0x31D1 JUMPI PUSH1 0x7 SIGNEXTEND DUP1 DUP4 SUB SWAP3 PUSH0 DUP3 SLT DUP2 DUP6 SLT DUP2 AND SWAP1 DUP3 DUP7 SGT SWAP1 ISZERO AND OR PUSH2 0x31D1 JUMPI EQ PUSH2 0x5789 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x42 SWAP2 PUSH2 0x47F SLOAD SWAP1 PUSH2 0x480 SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 ADD SWAP4 PUSH32 0xC2F8787176B8AC6BF7215B4ADCC1E069BF4AB82D9AB1DF05A57A91D425935B6E DUP6 MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x80 DUP2 MSTORE PUSH2 0x57F2 DUP2 PUSH2 0x5B8 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE KECCAK256 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x5817 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x696E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH2 0x585C DUP3 DUP3 PUSH2 0x5A07 JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH1 0x5 DUP6 LT ISZERO PUSH2 0x2E99 JUMPI PUSH2 0x461 SWAP5 ISZERO SWAP4 DUP5 PUSH2 0x590A JUMPI JUMPDEST POP DUP4 ISZERO PUSH2 0x5884 JUMPI JUMPDEST POP POP POP PUSH2 0x5810 JUMP JUMPDEST PUSH0 SWAP3 SWAP4 POP SWAP1 DUP3 SWAP2 PUSH1 0x40 MLOAD PUSH2 0x58BC DUP2 PUSH2 0x3AE2 PUSH1 0x20 DUP3 ADD SWAP5 PUSH4 0xB135D3F PUSH1 0xE1 SHL SWAP10 DUP11 DUP8 MSTORE PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 DUP4 ADD SWAP1 PUSH2 0x1E09 JUMP JUMPDEST MLOAD SWAP2 GAS STATICCALL SWAP1 PUSH2 0x58C9 PUSH2 0x34CF JUMP JUMPDEST DUP3 PUSH2 0x58FC JUMPI JUMPDEST DUP3 PUSH2 0x58DF JUMPI JUMPDEST POP POP PUSH0 DUP1 DUP1 PUSH2 0x587C JUMP JUMPDEST PUSH2 0x58F4 SWAP2 SWAP3 POP PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x463C JUMP JUMPDEST EQ PUSH0 DUP1 PUSH2 0x58D5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP3 MLOAD LT ISZERO SWAP2 PUSH2 0x58CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ SWAP4 POP PUSH0 PUSH2 0x5874 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5977 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5939 DUP3 PUSH2 0x5EE JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 SWAP6 DUP7 DUP6 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP8 DUP7 ADD MSTORE DUP7 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL PUSH2 0x5671 PUSH2 0x34CF JUMP JUMPDEST DUP1 MLOAD DUP3 DUP2 ISZERO SWAP2 DUP3 ISZERO PUSH2 0x59E7 JUMPI JUMPDEST POP POP SWAP1 POP ISZERO PUSH2 0x5990 JUMPI POP JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 DUP1 SWAP3 SWAP4 POP ADD SUB SLT PUSH2 0x3F3 JUMPI DUP2 ADD MLOAD PUSH2 0x59FF DUP2 PUSH2 0xB4E JUMP JUMPDEST DUP1 DUP3 PUSH0 PUSH2 0x5984 JUMP JUMPDEST SWAP1 PUSH1 0x41 DUP2 MLOAD EQ PUSH0 EQ PUSH2 0x5A2F JUMPI PUSH2 0x34BE SWAP2 PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH0 BYTE SWAP1 PUSH2 0x5AC9 JUMP JUMPDEST POP POP PUSH0 SWAP1 PUSH1 0x2 SWAP1 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x5A9A JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x5A4C JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x5A55 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x5AAD JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH2 0xE71 SWAP1 PUSH1 0x4 DUP4 ADD PUSH2 0x355C JUMP JUMPDEST PUSH16 0xA2A8918CA85BAFE22016D0B997E4DF60 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 GT PUSH2 0x5B2F JUMPI PUSH1 0x20 SWAP4 PUSH0 SWAP4 PUSH1 0xFF PUSH1 0x80 SWAP5 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x2230 JUMPI PUSH0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x5B27 JUMPI SWAP1 PUSH0 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP POP PUSH0 SWAP1 PUSH1 0x3 SWAP1 JUMP INVALID LOG1 0x23 0xDC 0x29 0xAE 0xBF PUSH30 0xC3322C8EEB5B999E859F39937950ED31056532713D0DE396F4910FDFA16 INVALID 0xD3 0x26 0xE 0xD0 0xE7 EQ PUSH32 0x7CC6DA11A60208B5B9406D12A635614FFD9143571749EDF1D5C9599318CDBC4E 0x28 0xA6 SELFBALANCE 0x5D PUSH6 0xE87FD3B2DDBE 0x1E SWAP11 DUP14 0x5E PUSH27 0xF0FF746756E6374696F6E206D7573742062652063616C6C656420 PUSH21 0x68726F75676820360894A13BA1A3210667C828492D 0xB9 DUP14 0xCA RETURNDATACOPY KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCAFC4DF6845A4AB948B4928 STOP 0xD3 0xD8 LOG2 0x5D MSTORE8 DUP11 LT 0x2A 0x2B 0xC0 PUSH29 0xD01F1CFA097FDDCFF67F26B83FF96E1F2B6A682F133852F6798A09C465 0xDA SWAP6 SWAP3 EQ PUSH1 0xCE 0xFB CODESIZE SELFBALANCE BLOCKHASH 0x24 SWAP9 DUP12 0xE0 SMOD SWAP13 MSTORE8 AND MSIZE EQ SGT PREVRANDAO 0xCD 0x1F 0xD0 LOG4 CALLCODE DUP5 NOT 0x49 PUSH32 0x9722A3DAAFE3B4186F6B6457E0BC7CD75A20EE27FD9ADEBAB32041F755214DBC PUSH12 0xFFA90CC0225B39DA2E5C2D3B 0xE SDIV DUP16 SDIV 0xB7 EXTCODECOPY PUSH3 0xEE6832 SWAP14 0x2C PUSH8 0xC067AAAE9A06503C 0xC3 MOD CALLDATACOPY DUP14 EQ 0x4D 0xF ADD PUSH24 0x882B152EB71524AEF34D838AB76573C14B1EBFA5E385D9AB 0x29 0xD7 0xCF MSTORE8 SWAP9 0xDA LOG2 NUMBER DUP12 0xD9 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 SWAP2 CALLCODE DUP15 0xD2 0xD4 ADDMOD PREVRANDAO PUSH19 0xB1F9D2EEEF3FB0F6C373292C70FADC94746ABD 0xAC 0xA9 0xC5 PUSH20 0x64736F6C63430008170033000000000000000000 ","sourceMap":"237:721:33:-:0;;;;;;;;;-1:-1:-1;237:721:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;237:721:33;;;;;;;;8088:42:27;237:721:33;;;;;-1:-1:-1;;;;;237:721:33;;:::o;:::-;-1:-1:-1;;;;;237:721:33;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;237:721:33;;;;;;:::o;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;;;;237:721:33;;;;;;;:::o;:::-;99935:21:27;237:721:33;;;;;-1:-1:-1;;;;;237:721:33;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;237:721:33;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;237:721:33;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;237:721:33;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;237:721:33;;;;;;;:::o;:::-;;;;;-1:-1:-1;;237:721:33;;;;-1:-1:-1;;;;;237:721:33;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;237:721:33;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;237:721:33;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;237:721:33;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;;;;;237:721:33;;;;;;-1:-1:-1;;237:721:33;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;237:721:33;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;-1:-1:-1;;;;;237:721:33;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;237:721:33;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;65863:836:27;237:721:33;;;;;;:::i;:::-;;;;;;;;;;65863:836:27;;:::i;237:721:33:-;;-1:-1:-1;;237:721:33;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;237:721:33;;;;;;;;;:::i;:::-;;;;;:::o;:::-;25055:7:27;237:721:33;;;:::i;:::-;2471:103:7;;;;;;;;;;:::i;:::-;17815:43:27;237:721:33;17824:14:27;237:721:33;;;;17823:15:27;17815:43;:::i;:::-;24876:10;25055:7;:::i;:::-;1787:1:7;3053:22;237:721:33;;;;;;;;-1:-1:-1;;237:721:33;;;;;;;;;;;;;;;;;-1:-1:-1;;237:721:33;;;;;;7550:50:27;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;237:721:33;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;69866:1492:27;237:721:33;;;;;;:::i;:::-;69866:1492:27;;:::i;237:721:33:-;;;;;;-1:-1:-1;;237:721:33;;;;19835:10:27;237:721:33;;;;;:::i;:::-;1303:62:0;;:::i;:::-;2471:103:7;;:::i;:::-;19835:10:27;:::i;237:721:33:-;;;;;;-1:-1:-1;;237:721:33;;;;;;1131:18:32;237:721:33;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;237:721:33;;;;;;;;;:::i;:::-;;;;20460:61:27;237:721:33;;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;2471:103:7;;:::i;:::-;237:721:33;;;;;;;;-1:-1:-1;237:721:33;20382:20:27;237:721:33;;;-1:-1:-1;237:721:33;;-1:-1:-1;237:721:33;;;;-1:-1:-1;237:721:33;;;;;;;;;;;;;;;;;;;;;20460:61:27;1787:1:7;3053:22;237:721:33;;;;;;;;-1:-1:-1;;237:721:33;;;;;2924:11:32;237:721:33;;;;;;;;;;;;;-1:-1:-1;;237:721:33;;;;;;;-1:-1:-1;;;;;;;;;;;237:721:33;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;237:721:33;;;;;;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;:::i;:::-;2471:103:7;;:::i;:::-;17917:37:27;237:721:33;17926:11:27;237:721:33;;;;17925:12:27;17917:37;:::i;:::-;58352:29;;;;;:::i;:::-;237:721:33;2924:11:32;237:721:33;;;58352:49:27;;:93;;;237:721:33;58348:152:27;;58927:5;237:721:33;;58635:26:27;237:721:33;;;;:::i;:::-;58635:26:27;:::i;:::-;58750:19;58696:22;58557:318;58750:19;237:721:33;58750:19:27;;;:::i;:::-;58799:17;;;;;;:::i;:::-;237:721:33;;;;;:::i;:::-;;;;;;:::i;:::-;;;;58557:318:27;;237:721:33;58696:22:27;237:721:33;;58557:318:27;;237:721:33;58557:318:27;;;;:::i;:::-;237:721:33;;;:::i;:::-;58557:318:27;;;237:721:33;;;58557:318:27;;;237:721:33;58915:10:27;58927:5;;:::i;:::-;2536:1:7;1787;3053:22;237:721:33;2873:209:7;58348:152:27;237:721:33;;-1:-1:-1;;;58468:21:27;;237:721:33;;58468:21:27;58352:93;58405:26;;237:721:33;58405:26:27;;;:::i;:::-;-1:-1:-1;;;;;237:721:33;58435:10:27;58405:40;;58352:93;;237:721:33;;;;;;-1:-1:-1;;237:721:33;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1898:6:6;237:721:33;;;;1873:80:6;1889:4;1881:23;;;1873:80;:::i;:::-;1963:87;-1:-1:-1;;;;;;;;;;;237:721:33;;;;;1971:30:6;1963:87;:::i;:::-;1303:62:0;;:::i;:::-;237:721:33;;;;;;:::i;:::-;-1:-1:-1;237:721:33;;-1:-1:-1;;;;;;;;;;;237:721:33;;;971:66:3;;;3330:17;;;;;;:::i;3232:526::-;237:721:33;;;;;;;;;;;;;;;3383:63:3;;237:721:33;;3383:63:3;;-1:-1:-1;;3383:63:3;;;3232:526;-1:-1:-1;3379:302:3;;237:721:33;;-1:-1:-1;;;3610:56:3;;237:721:33;3610:56:3;237:721:33;3610:56:3;;;:::i;:::-;;;;3379:302;3737:9;3496:28;3488:82;3496:28;;3488:82;:::i;:::-;3737:9;:::i;3383:63::-;;;;;237:721:33;3383:63:3;237:721:33;3383:63:3;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;237:721:33;;;;;;-1:-1:-1;;237:721:33;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;237:721:33;;;;;48452:1866:27;237:721:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;48452:1866:27;;:::i;237:721:33:-;;;;;;-1:-1:-1;;237:721:33;;;;;;;;1303:62:0;;:::i;:::-;2471:103:7;;:::i;:::-;21341:11:27;237:721:33;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;;;;;:::i;:::-;21430:28:27;;237:721:33;21430:28:27;;237:721:33;;;21543:65:27;-1:-1:-1;21543:65:27;;237:721:33;3053:22:7;237:721:33;;;;;;;;;;;;;;;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;237:721:33;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;45948:204:27;237:721:33;;;;;;;;;:::i;:::-;2471:103:7;;;;;:::i;:::-;45509:231:27;45598:9;;;;;;:::i;:::-;237:721:33;;;;;;:::i;:::-;;;;;;:::i;:::-;45509:231:27;;;:::i;:::-;237:721:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;45948:204:27;;;1787:1:7;3053:22;237:721:33;;;;;-1:-1:-1;;237:721:33;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1898:6:6;237:721:33;;;;;1873:80:6;1889:4;1881:23;;;1873:80;:::i;:::-;1963:87;-1:-1:-1;;;;;;;;;;;237:721:33;;;;;1971:30:6;1963:87;:::i;:::-;1303:62:0;;:::i;:::-;-1:-1:-1;;;;;;;;;;;237:721:33;;;971:66:3;;;3330:17;;;;;;:::i;3232:526::-;3383:63;237:721:33;;;;;;;;;;;;;;3383:63:3;;237:721:33;;3383:63:3;;;;;;;3232:526;-1:-1:-1;3379:302:3;;237:721:33;;-1:-1:-1;;;3610:56:3;;237:721:33;3610:56:3;237:721:33;3610:56:3;;;:::i;3379:302::-;3737:9;3496:28;3488:82;3496:28;;3488:82;:::i;:::-;3737:9;:::i;3383:63::-;;;;;;;;;;;;;;;:::i;:::-;;;;;237:721:33;-1:-1:-1;;;;;237:721:33;;;;;39482:20:27;237:721:33;;;;;;:::o;:::-;;;63494:12:27;237:721:33;;;;;;:::o;:::-;;;90291:21:27;237:721:33;;;;;;:::o;:::-;;;;;;-1:-1:-1;;237:721:33;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;237:721:33;4190:72:27;237:721:33;;;-1:-1:-1;237:721:33;;;-1:-1:-1;237:721:33;;;;;;-1:-1:-1;237:721:33;;;;;;;;;;;;-1:-1:-1;;;;;237:721:33;;;:::o;:::-;;;;;;-1:-1:-1;;237:721:33;;;;2838:31:27;237:721:33;;;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;;;;-1:-1:-1;;237:721:33;;;;2333:6:6;-1:-1:-1;;;;;237:721:33;2324:4:6;2316:23;237:721:33;;;;-1:-1:-1;;;;;;;;;;;237:721:33;;;;;;;;;;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;;;;;;-1:-1:-1;;;237:721:33;;;;;;;;;;-1:-1:-1;;237:721:33;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;237:721:33;;;;;27361:7:27;237:721:33;;;;;;:::i;:::-;2471:103:7;;;:::i;:::-;17815:43:27;237:721:33;17824:14:27;237:721:33;;;;17823:15:27;17815:43;:::i;:::-;237:721:33;;;;;27361:7:27;;:::i;237:721:33:-;;;;;;-1:-1:-1;;237:721:33;;;;;;;;7851:46:27;237:721:33;;;;;;;;;;-1:-1:-1;;237:721:33;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;52413:1971:27;237:721:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;52413:1971:27;;:::i;237:721:33:-;;;;;;-1:-1:-1;;237:721:33;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;237:721:33;2786:12:32;237:721:33;;;-1:-1:-1;237:721:33;;-1:-1:-1;237:721:33;;;;;;;;-1:-1:-1;;237:721:33;;;;;;3914:26:27;237:721:33;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;3636:1:5;237:721:33;;;:::i;:::-;;3302:13:5;237:721:33;;;;;;3301:14:5;3347:34;;;;;;;;;237:721:33;3346:108:5;;;;237:721:33;3325:201:5;;;:::i;:::-;-1:-1:-1;;237:721:33;;3302:13:5;237:721:33;3562:65:5;;3636:1;:::i;:::-;3647:99;;237:721:33;3647:99:5;3681:21;237:721:33;;3302:13:5;237:721:33;;3302:13:5;237:721:33;;3681:21:5;237:721:33;;3551:1:5;237:721:33;;-1:-1:-1;;;;;;;;;;;3721:14:5;237:721:33;;3721:14:5;237:721:33;3562:65:5;3596:20;237:721:33;;;3302:13:5;237:721:33;;;3302:13:5;237:721:33;;3596:20:5;3636:1;:::i;3346:108::-;3426:4;;1713:19:11;:23;3387:66:5;;3346:108;3387:66;-1:-1:-1;237:721:33;;;3436:17:5;;3346:108;;3347:34;237:721:33;;;;;3365:16:5;3347:34;;237:721:33;;;;;;-1:-1:-1;;237:721:33;;;;1303:62:0;;:::i;:::-;2758:6;237:721:33;;-1:-1:-1;;;;;;237:721:33;;;;;;;-1:-1:-1;;;;;237:721:33;-1:-1:-1;;;;;;;;;;;237:721:33;;2806:40:0;237:721:33;;;;;;;-1:-1:-1;;237:721:33;;;;18790:21:27;237:721:33;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;2471:103:7;;:::i;:::-;18753:22:27;237:721:33;;-1:-1:-1;;;;237:721:33;;;;;;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;18790:21:27;1787:1:7;3053:22;237:721:33;;;;;;;;-1:-1:-1;;237:721:33;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2089:18:32;237:721:33;;;;;;:::i;:::-;;;;;;;2089:18:32;;:::i;237:721:33:-;;;;;;-1:-1:-1;;237:721:33;;;;935:14;237:721;;;944:4;237:721;;935:14;237:721;;;;-1:-1:-1;;237:721:33;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;237:721:33;;;;;38783:4925:27;237:721:33;;;;;;:::i;:::-;;;;;;;;;;;;38783:4925:27;;:::i;237:721:33:-;;;;;;-1:-1:-1;;237:721:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;33253:1008:27;237:721:33;;;;;;:::i;:::-;33253:1008:27;;:::i;237:721:33:-;;;;;;-1:-1:-1;;237:721:33;;;;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1507:15:32;237:721:33;;;;;;:::i;:::-;;;;;;1507:15:32;:::i;237:721:33:-;;;;;;-1:-1:-1;;237:721:33;;;;;;1303:62:0;;:::i;:::-;2471:103:7;;:::i;:::-;22562:25:27;;;:::i;:::-;237:721:33;;;;-1:-1:-1;237:721:33;;;;;22602:39:27;-1:-1:-1;22602:39:27;;237:721:33;3053:22:7;237:721:33;;;;;;-1:-1:-1;237:721:33;-1:-1:-1;237:721:33;;;-1:-1:-1;237:721:33;;;;;;;-1:-1:-1;;237:721:33;;;;1513:6:0;237:721:33;;;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;;17292:8:27;17072:36;17252:17;237:721:33;;;:::i;:::-;;;;5366:69:5;237:721:33;5374:13:5;237:721:33;;;;5366:69:5;:::i;:::-;17072:36:27;:::i;:::-;237:721:33;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;237:721:33;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;237:721:33;;5366:69:5;237:721:33;5374:13:5;237:721:33;;;;5366:69:5;;;:::i;:::-;;:::i;:::-;237:721:33;2092:22:35;;237:721:33;;2148:25:35;;237:721:33;2183:25:35;237:721:33;2218:31:35;237:721:33;1042:67:6;;:::i;:::-;1868:111:7;;:::i;:::-;17252:17:27;:::i;237:721:33:-;;;;;;-1:-1:-1;;237:721:33;;;;;;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;:::i;:::-;2471:103:7;;:::i;:::-;17917:37:27;237:721:33;17926:11:27;237:721:33;;;;17925:12:27;17917:37;:::i;:::-;63224:29;;;;;;;:::i;:::-;2924:11:32;237:721:33;;;;;;;63224:49:27;;63220:119;;63352:22;;;;;;;;:::i;:::-;237:721:33;63352:41:27;63348:75;;63454:26;237:721:33;;;;:::i;63454:26:27:-;63494:23;;;;:::i;:::-;237:721:33;63490:92:27;;63592:63;:23;63671:455;63592:23;;:::i;:::-;63626:28;237:721:33;;;63592:63:27;63671:455;63704:20;;;;;:::i;:::-;63738:21;;;;;;:::i;:::-;63881:19;63950:29;63914:22;63881:19;;;;;:::i;:::-;63914:22;;:::i;:::-;63950:29;;:::i;:::-;63993:26;;;;;:::i;:::-;64033:19;;;:::i;:::-;64066;;237:721:33;64066:19:27;;;:::i;:::-;64099:17;;;;;;;:::i;:::-;237:721:33;;;63993:26:27;237:721:33;;;;;63844:23:27;237:721:33;63844:23:27;;237:721:33;63808:22:27;63773:21;63808:22;;;237:721:33;63773:21:27;;237:721:33;63671:455:27;;;:::i;:::-;;;;2536:1:7;1787;3053:22;237:721:33;2873:209:7;63490:92:27;237:721:33;;-1:-1:-1;;;63558:24:27;;237:721:33;;63558:24:27;63348:75;237:721:33;;-1:-1:-1;;;63402:21:27;;237:721:33;;63402:21:27;63220:119;237:721:33;;-1:-1:-1;;;63296:32:27;;237:721:33;;63296:32:27;237:721:33;;;;;;-1:-1:-1;;237:721:33;;;;19272:18:27;237:721:33;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;2471:103:7;;:::i;:::-;19238:19:27;237:721:33;;-1:-1:-1;;;;237:721:33;;;;;;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;19272:18:27;1787:1:7;3053:22;237:721:33;;;;;;;;-1:-1:-1;;237:721:33;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;237:721:33;;;;;;3800:30:27;237:721:33;;;;;;;;;;;;;;;;-1:-1:-1;;237:721:33;;;;;;;-1:-1:-1;;;;;;;;;;;237:721:33;;;;;;;;;;;;;;;;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;237:721:33;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;237:721:33;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;237:721:33;;;;;;;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;:::i;:::-;757:24:36;;;;:::i;:::-;840:13;-1:-1:-1;855:15:36;;;;;;237:721:33;;;;;;;:::i;872:3:36:-;-1:-1:-1;1571:7:36;;;;;;:::i;:::-;237:721:33;;;;;;;;;;;:::i;:::-;1544:35:36;1552:4;;1544:35;;;;;:::i;:::-;1648:8;;1644:359;;2017:19;;237:721:33;2017:19:36;;;;;:::i;:::-;;;;;;:::i;:::-;;237:721:33;840:13:36;;1644:359;237:721:33;;1776:2:36;237:721:33;;1760:18:36;1756:32;;1959:28;1859:76;;1952:36;1859:76;;237:721:33;1959:28:36;;;;;;;;;:::i;:::-;237:721:33;;-1:-1:-1;;;1952:36:36;;237:721:33;;;1952:36:36;;;:::i;237:721:33:-;;;-1:-1:-1;;237:721:33;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;-1:-1:-1;;;;;237:721:33;;;;;25055:7:27;237:721:33;;;;;;:::i;:::-;;;2924:11:32;237:721:33;;2471:103:7;;;:::i;:::-;17815:43:27;237:721:33;17824:14:27;237:721:33;;;;17823:15:27;17815:43;:::i;:::-;237:721:33;;;;;24876:10:27;;25055:7;:::i;237:721:33:-;;;;;;-1:-1:-1;;237:721:33;;;;;;-1:-1:-1;;;237:721:33;;;;;;;;;-1:-1:-1;;237:721:33;;;;;;;;;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;2471:103:7;;;;;:::i;:::-;237:721:33;;;;;-1:-1:-1;;237:721:33;;;;;;69257:4:27;237:721:33;69088:54:27;237:721:33;;;;;;;;;;;:::i;:::-;68452:21:27;;237:721:33;68452:21:27;;;237:721:33;;:::i;:::-;68452:21:27;:::i;:::-;68699:378;68777:26;;;:::i;:::-;68902:19;237:721:33;;;68902:19:27;;237:721:33;;:::i;:::-;68951:17:27;;;;;237:721:33;;;:::i;:::-;;;;;68699:378:27;;237:721:33;68838:32:27;237:721:33;;68699:378:27;;237:721:33;;68699:378:27;;;:::i;:::-;68452:21;68699:378;;237:721:33;-1:-1:-1;68699:378:27;;;237:721:33;;;;:::i;:::-;69088:54:27;;;:::i;:::-;69257:4;:::i;237:721:33:-;;;;:::i;:::-;2471:103:7;;;;;;;;:::i;:::-;237:721:33;17824:14:27;237:721:33;17815:43:27;237:721:33;;;;;17823:15:27;17815:43;:::i;:::-;237:721:33;;;4661:18:32;;;;;:::i;:::-;-1:-1:-1;;;;;4948:18:32;237:721:33;;;;4948:18:32;;237:721:33;;4925:42:32;;;;:59;;237:721:33;4921:601:32;;;5008:9;5000:28;5008:9;;:19;5000:28;:::i;:::-;5042:48;;;;;-1:-1:-1;237:721:33;;;;;;;;;;;5042:48:32;;5008:9;5042:48;;;;;;;;-1:-1:-1;;;;;;;;;;;5042:48:32;5538:273;5042:48;;;4921:601;;;5586:9;;:::i;:::-;237:721:33;;;5770:10:32;;;;5538:273;;;:::i;:::-;;;;2536:1:7;1787;3053:22;237:721:33;2873:209:7;5042:48:32;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;4921:601::-;-1:-1:-1;;;;;;;;;;;5508:4:32;;5538:273;5508:4;;5515:6;5508:4;;5488:10;;5515:6;;:::i;:::-;4921:601;;4925:59;4971:9;;:13;;4925:59;;237:721:33;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;237:721:33;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;-1:-1:-1;;237:721:33;;;;;;;;;;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;2330:10:32;237:721:33;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;2330:10:32;;:::i;237:721:33:-;;;;;;-1:-1:-1;;237:721:33;;;;;;-1:-1:-1;237:721:33;6318:47:27;237:721:33;;;;-1:-1:-1;237:721:33;;;;;;;;;;;;;;-1:-1:-1;;237:721:33;;;;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;60239:1329:27;237:721:33;;;;;;:::i;:::-;;;;;;;;;60239:1329:27;;:::i;237:721:33:-;;;;;;-1:-1:-1;;237:721:33;;;;;;;10312:16:27;237:721:33;;;;;;;;;-1:-1:-1;;237:721:33;;;;;;3885:23:27;237:721:33;;;;;;;;;;;;;;;;;;-1:-1:-1;;237:721:33;;;;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;-1:-1:-1;;237:721:33;;;;19579:19:27;237:721:33;;;;;:::i;:::-;1303:62:0;;:::i;:::-;2471:103:7;;:::i;237:721:33:-;;;;;;-1:-1:-1;;237:721:33;;;;3021:22:27;237:721:33;;;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;-1:-1:-1;;237:721:33;;;;;;-1:-1:-1;;;;;237:721:33;;;;-1:-1:-1;237:721:33;;;;;;;;:::i;:::-;2471:103:7;;:::i;:::-;237:721:33;2607:44:32;;;;2634:9;2615:4;2607:44;;;;:::i;:::-;237:721:33;;;;1787:1:7;3053:22;237:721:33;;;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;21341:11:27;237:721:33;;;;;;;-1:-1:-1;237:721:33;;;-1:-1:-1;237:721:33;;;;;-1:-1:-1;237:721:33;:::o;:::-;;:::i;:::-;;;;;;-1:-1:-1;;237:721:33;;;;;;4039:31:27;237:721:33;4039:31:27;;;;;;237:721:33;4039:31:27;;:::i;:::-;237:721:33;4039:31:27;237:721:33;;4039:31:27;;237:721:33;;;;;;;;;;;;;;;;;-1:-1:-1;;237:721:33;;;;;;3601:19:32;237:721:33;;;;;;;;-1:-1:-1;;237:721:33;;;;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;-1:-1:-1;;;;;237:721:33;;2402:22:0;237:721:33;;2496:8:0;;;:::i;237:721:33:-;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;;;;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;;-1:-1:-1;;237:721:33;;;;19835:10:27;237:721:33;;;;;:::i;:::-;;-1:-1:-1;237:721:33;;;;;;4881:14:5;:40;;;237:721:33;4873:99:5;;;:::i;:::-;-1:-1:-1;;237:721:33;;-1:-1:-1;237:721:33;19835:10:27;:::i;:::-;237:721:33;;-1:-1:-1;237:721:33;;-1:-1:-1;237:721:33;-1:-1:-1;;;;;;;;;;;237:721:33;;;;;;5091:20:5;237:721:33;4881:40:5;-1:-1:-1;778:1:33;237:721;;;4899:22:5;4881:40;;237:721:33;;;-1:-1:-1;;237:721:33;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;;;;237:721:33;;;;;27361:7:27;237:721:33;;;;;;:::i;:::-;;;2924:11:32;237:721:33;;2471:103:7;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;66312:16:27;;;:::i;:::-;66497:9;;:::i;:::-;237:721:33;;;;:::i;:::-;77997:476:27;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;237:721:33;77997:476:27;;;237:721:33;77997:476:27;;;237:721:33;;;77997:476:27;;;237:721:33;;;77997:476:27;;;237:721:33;;;77997:476:27;;;;237:721:33;;;;77997:476:27;;;;;;237:721:33;;;:::i;:::-;;;;77997:476:27;77961:888;;237:721:33;77997:476:27;237:721:33;;77997:476:27;77961:888;;77997:476;237:721:33;;77997:476:27;77961:888;;;;;;:::i;:::-;77997:476;77961:888;;237:721:33;77997:476:27;;77961:888;;237:721:33;-1:-1:-1;;;77997:476:27;77961:888;;237:721:33;-1:-1:-1;;77997:476:27;77961:888;;237:721:33;78739:4:27;77961:888;;;237:721:33;77961:888:27;;237:721:33;78900:20:27;;78886:35;;;:::i;:::-;237:721:33;;78978:5:27;;;;:::i;:::-;79351:26;;;:::i;:::-;79756:17;;;:::i;:::-;2536:1:7;1787;3053:22;237:721:33;2873:209:7;237:721:33;;;;:::o;:::-;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;-1:-1:-1;;;237:721:33;;;;;;;2471:103:7;;;;:::i;:::-;70113:32:27;;;237:721:33;70113:32:27;237:721:33;;;;:::i;70113:32:27:-;70161:25;;;237:721:33;;;70190:9:27;;:::i;:::-;70161:38;70157:67;;70490:85;70489:86;70267:25;;70520:28;70267:25;;;:::i;:::-;70520:28;;237:721:33;70490:85:27;:::i;:::-;70489:86;;237:721:33;70489:86:27;70485:131;;70657:24;;71005:346;70657:24;;237:721:33;70657:24:27;237:721:33;;;;;;;;70657:24:27;;:::i;:::-;71005:346;237:721:33;;;;;;;70817:31:27;70946:33;70817:31;;;;;;237:721:33;;;;;;;;;;;;:::i;:::-;70946:33:27;;;;;;;;;:::i;:::-;237:721:33;;;71129:31:27;;237:721:33;;;;;;;;;;:::i;:::-;71284:33:27;;237:721:33;;;70817:31:27;237:721:33;;;;;;;71331:10:27;;71005:346;;;:::i;:::-;;;;2536:1:7;1787;3053:22;237:721:33;2873:209:7;70485:131:27;237:721:33;;-1:-1:-1;;;70596:20:27;;;;;70157:67;237:721:33;;-1:-1:-1;;;70208:16:27;;;;;237:721:33;;;;;;;;;;;;;;;-1:-1:-1;237:721:33;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;237:721:33;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;237:721:33;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;237:721:33;;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;237:721:33;;;;-1:-1:-1;;;237:721:33;;;;;;;2471:103:7;;;;;;;;;;;;;:::i;:::-;17926:11:27;237:721:33;;;;;17925:12:27;17917:37;;;:::i;:::-;49693:9;;:::i;:::-;237:721:33;;;;:::i;:::-;49284:467:27;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;237:721:33;49284:467:27;;;237:721:33;49284:467:27;;;237:721:33;;;49284:467:27;;;237:721:33;;;;;;49284:467:27;;237:721:33;49284:467:27;;;;;;;;237:721:33;;;;;;49284:467:27;;;;;;;237:721:33;;;:::i;:::-;;;;-1:-1:-1;49284:467:27;49248:867;;237:721:33;;;;;;;;49284:467:27;49248:867;;237:721:33;49248:867:27;;49284:467;49248:867;;;:::i;:::-;49284:467;49248:867;;237:721:33;49284:467:27;49248:867;;237:721:33;49284:467:27;49248:867;;237:721:33;;49248:867:27;;237:721:33;49248:867:27;;-1:-1:-1;237:721:33;;49248:867:27;;-1:-1:-1;237:721:33;;50166:20:27;;50152:35;;;:::i;:::-;237:721:33;;50226:26:27;;;:::i;237:721:33:-;;;;;;;;;;;;;-1:-1:-1;237:721:33;;;;;;;;-1:-1:-1;;237:721:33;;;;:::o;2471:103:7:-;;;;;;;;;;;;;;;;;:::i;:::-;17926:11:27;237:721:33;;;;;17925:12:27;17917:37;;;:::i;:::-;53494:9;;:::i;:::-;237:721:33;;;:::i;:::-;53085:467:27;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;237:721:33;53085:467:27;;;237:721:33;;;53085:467:27;;;237:721:33;;;53085:467:27;;;237:721:33;;;;53085:467:27;;237:721:33;;;;53085:467:27;;;;237:721:33;;;;53085:467:27;;;;;;237:721:33;;;:::i;:::-;;;;-1:-1:-1;53085:467:27;53049:888;;237:721:33;;;;;;;53085:467:27;53049:888;;237:721:33;;;53049:888:27;237:721:33;53085:467:27;53049:888;;;;;:::i;:::-;;;53085:467;53049:888;;237:721:33;53085:467:27;53049:888;237:721:33;53085:467:27;53049:888;;237:721:33;;53049:888:27;;237:721:33;53049:888:27;;-1:-1:-1;237:721:33;;53049:888:27;;-1:-1:-1;237:721:33;;53988:20:27;;53974:35;;;:::i;:::-;237:721:33;;54226:18:27;;;:::i;237:721:33:-;;;;;;;;;;;;;;-1:-1:-1;237:721:33;;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;;;;;;-1:-1:-1;;;237:721:33;;;;;;;741:327:32;17292:8:27;741:327:32;;17072:36:27;17252:17;741:327:32;5366:69:5;237:721:33;5374:13:5;237:721:33;;;;5366:69:5;;;:::i;:::-;1195:12:0;929:10:12;1195:12:0;:::i;:::-;5366:69:5;237:721:33;5374:13:5;237:721:33;;;;5366:69:5;:::i;17292:8:27:-;991:29:32;1005:15;991:29;237:721:33;;2471:103:7;;;;;;;;;;;;;;;;;:::i;:::-;17815:43:27;237:721:33;17824:14:27;237:721:33;;;;17823:15:27;17815:43;:::i;:::-;39481:53;39482:52;;:32;;;;:::i;:::-;237:721:33;;;;;;;;;;39482:52:27;237:721:33;;;;;39481:53:27;39477:81;;2924:11:32;237:721:33;;;;;40277:28:27;237:721:33;;;;40277:28:27;;:::i;:::-;40308:22;;237:721:33;-1:-1:-1;40273:89:27;;237:721:33;;;;41020:26:27;;;;:77;;;;;2471:103:7;41016:111:27;;;;;237:721:33;;;;;;;;;;;;;;41498:56:27;;;;41494:441;;2471:103:7;42421:18:27;;;;;237:721:33;;;;42399:41:27;;;:58;;;2471:103:7;42395:824:27;;;42477:9;;;:24;42473:70;;42557:48;;;;;-1:-1:-1;42557:48:27;237:721:33;;;;;;;;;;42557:48:27;;42477:9;42557:48;;;;;;;;;42395:824;;;17824:14;237:721:33;;;;;43489:18:27;;;;;:::i;:::-;;;;:::i;:::-;237:721:33;;;;;;;;43234:467:27;;;;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;43234:467:27;;2536:1:7;1787;3053:22;237:721:33;2873:209:7;42557:48:27;;;;;;:::i;:::-;;;;42473:70;237:721:33;;-1:-1:-1;;;42510:33:27;;;;;42395:824;43052:9;;;43048:60;;43189:4;43196:11;43189:4;;43169:10;;43196:11;;:::i;:::-;42395:824;;42399:58;42444:9;;:13;;42399:58;;41494:441;41718:30;41714:68;;41854:33;41850:74;;41494:441;;;;;41850:74;237:721:33;;-1:-1:-1;;;41896:28:27;;;;;41714:68;237:721:33;;-1:-1:-1;;;41757:25:27;;;;;41016:111;237:721:33;;-1:-1:-1;;;41106:21:27;;;;;41020:77;41065:32;41079:18;;;;237:721:33;41065:32:27;;:::i;:::-;-1:-1:-1;41020:77:27;;;;;40273:89;237:721:33;;-1:-1:-1;;;40339:23:27;;;;;39477:81;237:721:33;;-1:-1:-1;;;39543:15:27;;;;;237:721:33;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;17072:36:27;237:721:33;;-1:-1:-1;;;;237:721:33;;;;;;-1:-1:-1;;;237:721:33;;;;;;;:::o;:::-;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2471:103:7:-;237:721:33;2471:103:7;237:721:33;34051:203:27;2471:103:7;;;;;;:::i;:::-;33813:18:27;237:721:33;;;;;;33531:36:27;33523:77;33570:6;33531:36;;;:::i;:::-;:45;33523:77;:::i;:::-;33698:9;;;:::i;:::-;33813:18;;;:::i;:::-;237:721:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;34051:203:27;;;1787:1:7;3053:22;237:721:33;2471:103:7:o;237:721:33:-;;;;:::o;:::-;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;;;;;;-1:-1:-1;;;237:721:33;;;;;;;;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3310:230:32:-;3491:8;237:721:33;3491:13:32;;;71760::27;;3310:230:32;:::o;237:721:33:-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;237:721:33;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;237:721:33;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2471:103:7:-;;;;;;;;:::i;:::-;17917:37:27;237:721:33;17926:11:27;237:721:33;;;;17925:12:27;17917:37;:::i;:::-;60713:29;;;;;:::i;:::-;237:721:33;2924:11:32;237:721:33;;;60713:49:27;;:93;;;2471:103:7;60709:152:27;;237:721:33;;;;:::i;:::-;60996:26:27;;;:::i;:::-;237:721:33;;;:::i;:::-;;;;;;:::i;:::-;;;60918:309:27;;;237:721:33;60918:309:27;;;237:721:33;;;60918:309:27;;;;;;:::i;:::-;237:721:33;;;;;:::i;:::-;60918:309:27;;;237:721:33;60918:309:27;;;237:721:33;61281:19:27;;;:::i;:::-;61314;;;;;;:::i;:::-;237:721:33;;;;;;:::i;:::-;;;;;;;:::i;:::-;61347:23:27;237:721:33;61347:23:27;237:721:33;61238:265:27;;;;:::i;:::-;61543:10;61555:5;;;:::i;60713:93::-;60766:26;;;;;;:::i;:::-;-1:-1:-1;;;;;237:721:33;60796:10:27;60766:40;;60713:93;;2580:287:7;1830:1;2712:7;237:721:33;2712:19:7;1830:1;;;2712:7;237:721:33;2580:287:7:o;1830:1::-;237:721:33;;-1:-1:-1;;;1830:1:7;;;;;;;;;;;237:721:33;1830:1:7;237:721:33;;;1830:1:7;;;;2948:109:32;237:721:33;;-1:-1:-1;;;;;237:721:33;;;;;3025:25:32;;237:721:33;;3025:25:32;2948:109::o;237:721:33:-;;;;:::o;:::-;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;72171:3967:27:-;;;;;;;;;72495:80;72503:53;;:33;;;;:::i;:53::-;72495:80;:::i;:::-;237:721:33;;72683:29:27;72675:70;72715:6;72683:29;;;:::i;72675:70::-;72755:56;-1:-1:-1;;;72763:27:27;;;72755:56;:::i;:::-;2924:11:32;237:721:33;;73461:94:27;73469:33;237:721:33;;;;;73469:33:27;;:::i;:::-;73506:22;;237:721:33;-1:-1:-1;73469:59:27;73461:94;:::i;:::-;73677:18;237:721:33;;;;;73677:18:27;;;;;:::i;:::-;-1:-1:-1;;;;;237:721:33;73964:18:27;237:721:33;;;;;;73941:42:27;;;;:59;;72171:3967;73937:632;;;74024:9;74016:59;74024:9;;:19;74016:59;:::i;:::-;74089:48;;;;;-1:-1:-1;74089:48:27;237:721:33;;;;;;;;;;74089:48:27;;74024:9;74089:48;;;;;;;-1:-1:-1;;;;;;;;;;;74089:48:27;74585:1546;74089:48;75137:45;74089:48;;;73937:632;;;75137:45;;:::i;:::-;237:721:33;;;;;;;;;74585:1546:27;;;:::i;:::-;;;;72171:3967::o;74089:48::-;;;;;;:::i;:::-;;;;73937:632;74585:1546;74555:4;;-1:-1:-1;;;;;;;;;;;74555:4:27;74562:6;74555:4;75137:45;74555:4;;74535:10;;74562:6;;:::i;:::-;73937:632;;73941:59;73987:9;;:13;;73941:59;;1299:264:26;1494:62;1299:264;;237:721:33;;1536:18:26;;237:721:33;1536:18:26;;;237:721:33;1536:18:26;237:721:33;;;;;;;;1536:18:26;237:721:33;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;237:721:33;;;;;;;;;;;;;;;-1:-1:-1;;237:721:33;;;;;;:::i;:::-;1536:18:26;237:721:33;;1536:18:26;;;;;;:::i;:::-;237:721:33;1526:29:26;;1494:62;;:::i;80775:469:27:-;80887:25;81014:24;80775:469;80887:25;:::i;:::-;81014:24;;237:721:33;;;;;;-1:-1:-1;237:721:33;;;;3384:1:26;237:721:33;;-1:-1:-1;237:721:33;;;;;3422:18:26;;;;:26;80990:85:27;;-1:-1:-1;237:721:33;;;;-1:-1:-1;237:721:33;;;;3907:56:26;237:721:33;;80775:469:27:o;80990:85::-;237:721:33;;-1:-1:-1;;;81056:19:27;;;;;237:721:33;;;;-1:-1:-1;;;;;237:721:33;;;;;;;;;;:::o;76144:1154:27:-;;;;;;;237:721:33;;;;76403:46:27;76399:78;;237:721:33;;76744:13:27;-1:-1:-1;76759:10:27;;;;;;77098:18;;;;;77094:198;;76739:199;76144:1154;;;;:::o;77094:198::-;237:721:33;77171:14:27;;77206:75;77171:14;;;:::i;:::-;77206:75;237:721:33;;;;;;;;;;;;;77270:10:27;;77206:75;;;:::i;:::-;;;;77094:198;;;;;;76771:3;76807:16;;237:721:33;76807:16:27;;;:::i;:::-;237:721:33;76841:10:27;76837:90;;76771:3;;237:721:33;76744:13:27;;76837:90;76920:6;76900:18;;;;;;:::i;:::-;237:721:33;-1:-1:-1;;;;;237:721:33;;;76900:18:27;237:721:33;;;;;;;76920:6:27;:::i;:::-;76837:90;;;76399:78;237:721:33;;-1:-1:-1;;;76458:19:27;;;;;80048:191;-1:-1:-1;;;;;237:721:33;80116:24:27;;237:721:33;;80175:20:27;237:721:33;;-1:-1:-1;;;;;;237:721:33;;;;;80210:22:27;-1:-1:-1;;80210:22:27;80048:191::o;237:721:33:-;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;87786:153:27:-;87921:9;;:::i;:::-;87899:32;237:721:33;;87899:32:27;;237:721:33;87899:32:27;;;237:721:33;;;;;;;;;:::i;:::-;;;;;;87899:32:27;237:721:33;;87899:32:27;;;;;;:::i;:::-;237:721:33;87889:43:27;;87786:153;:::o;237:721:33:-;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;97697:5398:27:-;97879:20;;97914:22;;;;237:721:33;;;;;;;;;;2924:11:32;237:721:33;;;97914:41:27;97910:75;;98016:24;;;237:721:33;98834:28:27;98784:38;;;:::i;:::-;237:721:33;98784:79:27;:167;;98834:28;98784:167;;99617:17;99582:23;;;:::i;:::-;237:721:33;99582:53:27;99578:79;;99667:23;;;:::i;:::-;99617:17;237:721:33;;99901:20:27;;;237:721:33;;;;:::i;:::-;99935:21:27;;;237:721:33;;;;:::i;:::-;99970:21:27;;;;237:721:33;100005:22:27;;;;;237:721:33;100041:31:27;;99970:21;100041:31;;237:721:33;100086:23:27;;;;237:721:33;100123:19:27;;;;237:721:33;;;;;;;;;;;;100192:29:27;;;237:721:33;;;100235:26:27;;;;237:721:33;;;;:::i;:::-;;;;;;;:::i;:::-;100329:19:27;98016:24;100329:19;;237:721:33;;;;:::i;:::-;100362:17:27;;;;100455:31;99901:20;100455:31;;237:721:33;;;;:::i;:::-;100520:29:27;99935:21;100520:29;;;100588:34;100235:26;100588:34;237:721:33;;;;:::i;:::-;100393:280:27;;;;;:::i;:::-;98016:24;100393:280;;237:721:33;100235:26:27;100393:280;;237:721:33;100393:280:27;;99901:20;100393:280;;;:::i;:::-;100235:26;237:721:33;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;99874:809:27;;237:721:33;99874:809:27;:::i;:::-;;-1:-1:-1;;;;;;;;;;;99874:809:27;;99901:20;100455:31;;237:721:33;;;;:::i;:::-;-1:-1:-1;;;;;237:721:33;;;101246:10:27;:29;;;:44;;98784:167;101242:57;;99935:21;237:721:33;99935:21:27;;237:721:33;;:::i;:::-;100235:26:27;100588:34;;237:721:33;100588:34:27;;237:721:33;;99935:21:27;;-1:-1:-1;;;;;237:721:33;;;;;;;;101539:18:27;237:721:33;101516:42:27;;237:721:33;;102199:4:27;102206:12;102199:4;;101246:10;;102206:12;;:::i;:::-;102287;;;;:::i;:::-;100520:29;102770;1713:19:11;;:23;;102813:57:27;;;101512:1218;102809:280;;97697:5398;;;;:::o;102809:280::-;102886:192;;;;;;237:721:33;98604:361:27;237:721:33;;100235:26:27;237:721:33;;;;;;;;;;;102886:192:27;;101246:10;102886:192;;;;;:::i;:::-;;;;;;;;;;;102809:280;;;;;;102886:192;;;;;;:::i;:::-;;;;102813:57;237:721:33;;;102845:25:27;;102813:57;;101512:1218;102613:12;101246:10;;102613:12;;:::i;:::-;101512:1218;;101246:44;;98834:28;101246:44;;99578:79;237:721:33;;-1:-1:-1;;;99644:13:27;;;;;98784:167;98604:361;98784:167;;;97697:5398;;237:721:33;97879:20:27;;97914:22;;;237:721:33;;;;;;;;;2924:11:32;237:721:33;;;97914:41:27;97910:75;;98016:24;;;237:721:33;98629:17:27;99582:23;;;:::i;:::-;237:721:33;99582:53:27;99578:79;;99667:23;;;:::i;:::-;99617:17;237:721:33;;99901:20:27;;;237:721:33;;;;:::i;:::-;99935:21:27;;;237:721:33;;;;:::i;:::-;99970:21:27;;;;237:721:33;100005:22:27;;;;237:721:33;100041:31:27;;99970:21;100041:31;;237:721:33;100086:23:27;;;;;237:721:33;100123:19:27;;;;237:721:33;;;;;;;;;;;;100192:29:27;;;237:721:33;;;100235:26:27;;;237:721:33;;;;:::i;:::-;;;;;;;:::i;:::-;100329:19:27;98016:24;100329:19;;237:721:33;;;;:::i;:::-;100362:17:27;;;;100455:31;99901:20;100455:31;;237:721:33;;;;:::i;:::-;100520:29:27;99935:21;100520:29;;;100588:34;100235:26;100588:34;237:721:33;;;;:::i;:::-;100393:280:27;;;;;:::i;:::-;98016:24;100393:280;;237:721:33;100235:26:27;100393:280;;237:721:33;98629:17:27;99901:20;100393:280;;237:721:33;100235:26:27;237:721:33;;;;;;99874:809:27;;;;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;99874:809:27;237:721:33;99874:809:27;;99901:20;100455:31;;237:721:33;;;;:::i;:::-;-1:-1:-1;;;;;237:721:33;;;;;;;;101246:10:27;:29;;;:44;;97697:5398;101242:57;;99935:21;237:721:33;99935:21:27;;237:721:33;;:::i;:::-;100588:34:27;100235:26;100588:34;;237:721:33;;;;;;101539:18:27;;237:721:33;101516:42:27;;101512:1218;237:721:33;;;102114:105:27;99935:21;102114:105;;;;;101512:1218;102287:12;;;;;:::i;:::-;100520:29;102770;1713:19:11;;:23;;102813:57:27;;;101512:1218;102809:280;;101512:1218;97697:5398;;;;;;:::o;102809:280::-;102886:192;;;;;237:721:33;102886:192:27;237:721:33;;100235:26:27;237:721:33;;;;;;;;;;;102886:192:27;;101246:10;102886:192;;;;;:::i;:::-;;;;;;;;;;;102809:280;;;;;;;;102886:192;;;;;;:::i;:::-;;;;;237:721:33;;;102813:57:27;237:721:33;;;102845:25:27;;102813:57;;102114:105;102206:12;102199:4;;101246:10;;102206:12;;:::i;:::-;102114:105;;;;101512:1218;99935:21;102519:200;;;;102706:12;102519:200;;237:721:33;102706:12:27;;:::i;:::-;101512:1218;;101242:57;101292:7;;;;;;;:::o;101246:44::-;;237:721:33;101246:44:27;;97697:5398;;;97879:20;;97914:22;;;;237:721:33;;;;;;;;;;2924:11:32;237:721:33;;;97914:41:27;97910:75;;98016:24;;;237:721:33;98604:361:27;;;;98629:17;98604:361;;99617:17;99582:23;;;:::i;:::-;237:721:33;99582:53:27;99578:79;;99667:23;;;:::i;:::-;99617:17;237:721:33;;99901:20:27;;;237:721:33;;;;:::i;:::-;99935:21:27;;;237:721:33;;;;:::i;:::-;99970:21:27;;;;237:721:33;100005:22:27;;;;;237:721:33;100041:31:27;;99970:21;100041:31;;237:721:33;100086:23:27;;;;237:721:33;100123:19:27;;;;237:721:33;;;;;;;;;;;;100192:29:27;;;237:721:33;;;100235:26:27;;;;237:721:33;;;;:::i;:::-;;;;;;;:::i;:::-;100329:19:27;98016:24;100329:19;;237:721:33;;;;:::i;:::-;100362:17:27;;;;100455:31;99901:20;100455:31;;237:721:33;;;;:::i;:::-;100520:29:27;99935:21;100520:29;;;100588:34;100235:26;100588:34;237:721:33;;;;:::i;:::-;100393:280:27;;;;;:::i;:::-;98016:24;100393:280;;237:721:33;100235:26:27;100393:280;;237:721:33;100393:280:27;;99901:20;100393:280;;;:::i;:::-;100235:26;237:721:33;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;99874:809:27;;237:721:33;99874:809:27;:::i;:::-;;-1:-1:-1;;;;;;;;;;;99874:809:27;;99901:20;100455:31;;237:721:33;;;;:::i;:::-;;-1:-1:-1;;;;;237:721:33;;;101246:10:27;:29;;;:44;;98604:361;101242:57;;237:721:33;99935:21:27;;;;237:721:33;;:::i;:::-;100235:26:27;100588:34;;237:721:33;100588:34:27;;237:721:33;;-1:-1:-1;;;;;237:721:33;;;;;;;;101539:18:27;237:721:33;101516:42:27;;237:721:33;;102118:11:27;;102114:105;;101512:1218;102287:12;;;;;:::i;102114:105::-;102206:12;102199:4;;101246:10;;102206:12;;:::i;:::-;102114:105;;;;101512:1218;102523:11;;;102613:12;101246:10;;102613:12;;:::i;102519:200::-;102706:12;;;:::i;101242:57::-;101292:7;;;;;:::o;101246:44::-;101279:11;;;101246:44;;98604:361;98834:28;98784:38;;;:::i;:::-;237:721:33;98784:79:27;:167;;98834:28;98784:167;98604:361;;;98784:167;-1:-1:-1;98784:167:27;;971:66:3;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;237:721:33;;-1:-1:-1;;;971:66:3;;;;;;;;;;;237:721:33;971:66:3;237:721:33;;;971:66:3;-1:-1:-1;;;971:66:3;;;;;;;;;;;;;;;;;237:721:33;971:66:3;237:721:33;;;971:66:3;-1:-1:-1;;;971:66:3;;;;;;:::o;237:721:33:-;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;87623:157:27:-;237:721:33;;87751:21:27;;237:721:33;87751:21:27;;;237:721:33;87751:21:27;237:721:33;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;237:721:33;;-1:-1:-1;;;;;237:721:33;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;237:721:33;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;-1:-1:-1;;;237:721:33;;;;;;;;-1:-1:-1;;;;;237:721:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;89297:8220:27:-;;89439:20;;89808:35;;;;89847:6;89772:190;89847:6;237:721:33;89793:51:27;;237:721:33;;;;;;;;;;;;89793:51:27;;:::i;:::-;:60;:131;;;;89297:8220;89772:190;;:::i;:::-;89981:16;;;89973:66;8181:4;;;237:721:33;;89981:37:27;;89973:66;:::i;:::-;90313:24;;;237:721:33;90283:91:27;90291:47;237:721:33;;90291:47:27;:::i;:::-;237:721:33;;;-1:-1:-1;90283:91:27;:::i;:::-;90974:30;;;237:721:33;;;91019:26:27;90939:155;90974:30;91019:26;;237:721:33;91019:64:27;237:721:33;;;;;;;;;;;;;91019:64:27;;:::i;:::-;90939:155;;:::i;:::-;91235:21;91227:59;91235:21;;;91227:59;:::i;:::-;91507:66;237:721:33;;91526:47:27;237:721:33;;91526:47:27;:::i;:::-;237:721:33;91507:66:27;;:::i;:::-;91587:42;;;91583:115;;89297:8220;237:721:33;92102:64:27;92035:141;237:721:33;;;92035:141:27;237:721:33;;;;;;;;;;;;;92035:141:27;;;:::i;:::-;92280:34;;;;237:721:33;;92280:39:27;92276:1272;;89297:8220;94187:31;;;;;;237:721:33;94222:20:27;;;:39;94187:31;94222:39;;237:721:33;94187:74:27;94292:66;;;;;89297:8220;94292:93;;;;;;89297:8220;94271:163;;;:::i;:::-;94769:47;237:721:33;;94769:47:27;:::i;:::-;:68;237:721:33;;;94769:68:27;:::i;:::-;237:721:33;;89981:16:27;95346:31;;237:721:33;;;;;:::i;:::-;;-1:-1:-1;;;;;237:721:33;95332:10:27;237:721:33;;;95332:45:27;;:73;;89297:8220;95328:103;;95529:26;89808:35;237:721:33;95529:26:27;;237:721:33;;;;;;;:::i;:::-;;;95567:18:27;237:721:33;;95529:57:27;;237:721:33;;96147:23:27;;;96146:24;237:721:33;96147:23:27;;;237:721:33;;;;;96146:24:27;96142:149;;95525:1536;96375:12;237:721:33;96333:40:27;237:721:33;;;;:::i;:::-;96333:40:27;:::i;:::-;96375:12;:::i;:::-;237:721:33;;:::i;:::-;1713:19:11;;;:23;;97075:88:27;;;95525:1536;97071:440;;95525:1536;89297:8220;;;;;;;:::o;97071:440::-;237:721:33;97344:47:27;237:721:33;97457:29:27;237:721:33;;;;;:::i;:::-;;;97344:47:27;:::i;:::-;237:721:33;;;-1:-1:-1;97344:67:27;97457:29;;;97179:321;;;;;;-1:-1:-1;237:721:33;;97179:321:27;89808:35;237:721:33;;;;;;;;;;;97179:321:27;;95332:10;97179:321;;;;;:::i;:::-;;;;;;;;;;;97071:440;;;;;;;;;97179:321;;;;;;:::i;:::-;;;;97075:88;97123:29;;;;;237:721:33;97123:40:27;;97075:88;;96142:149;96278:12;237:721:33;96188:45:27;237:721:33;;;;:::i;96188:45:27:-;96271:4;95332:10;;96278:12;;:::i;:::-;96142:149;;95525:1536;96611:24;237:721:33;96612:23:27;;;237:721:33;;;;;96611:24:27;96612:23;;;237:721:33;96822:12:27;237:721:33;;96653:45:27;237:721:33;;;;:::i;96653:45:27:-;237:721:33;;;;:::i;:::-;95332:10:27;;96822:12;;:::i;:::-;95525:1536;;96607:443;97020:12;;;:::i;95328:103::-;95407:24;;;;;;;;:::o;95332:73::-;95382:23;95381:24;237:721:33;95382:23:27;;;237:721:33;;;;;95381:24:27;95332:73;;94292:93;94362:23;94271:163;237:721:33;94362:23:27;;;237:721:33;;;;;;94292:93:27;;;;:66;89981:16;94310:27;237:721:33;94310:48:27;;-1:-1:-1;94292:66:27;;;;92276:1272;92684:5;93220:35;93183:73;92684:5;92638:85;93450:87;92684:5;;;;-1:-1:-1;92646:43:27;92638:85;:::i;:::-;92955:86;93001:6;237:721:33;;92963:44:27;;92955:86;:::i;:::-;237:721:33;93220:35:27;:::i;:::-;93183:73;;:::i;:::-;237:721:33;;93458:46:27;;;93450:87;:::i;:::-;92276:1272;;;;;91583:115;91645:42;-1:-1:-1;92102:64:27;91583:115;;89793:131;89888:26;;89873:42;;237:721:33;89888:26:27;;;237:721:33;;;;;89873:42:27;:51;89793:131;;;237:721:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;103159:1179:27:-;;103362:35;;;237:721:33;;;;;;;;103422:31:27;;;;237:721:33;;;;:::i;:::-;103476:29:27;;;;;103532:23;;;;;;237:721:33;;;;;;;;103590:34:27;;;;;237:721:33;;;;:::i;:::-;103314:321:27;;;;;:::i;:::-;;;;237:721:33;;;103362:35:27;103314:321;;237:721:33;;;103422:31:27;103314:321;;237:721:33;103476:29:27;103314:321;;237:721:33;103676:20:27;;103422:31;103676:27;237:721:33;103314:321:27;103739:24;;237:721:33;103717:47:27;;;:::i;:::-;237:721:33;103809:31:27;237:721:33;103809:31:27;;237:721:33;103854:20:27;;:34;103476:29;103854:34;;237:721:33;103902:39:27;237:721:33;103902:39:27;;237:721:33;103955:34:27;;;;237:721:33;;;;;;;;104003:37:27;;;237:721:33;;;104054:30:27;;;237:721:33;;;104098:37:27;103362:35;104098:37;;237:721:33;;;;:::i;:::-;;;;;;;:::i;:::-;104217:30:27;103314:321;104217:30;;237:721:33;;;;:::i;:::-;104261:28:27;;;237:721:33;103362:35:27;237:721:33;;;;;;;;;;;;;;104149:10:27;;103651:680;;;;;:::i;:::-;;;;;103159:1179::o;82962:1653::-;;;83912:605;82962:1653;84589:18;82962:1653;;237:721:33;;;;;84308:25:27;237:721:33;;;84079:272:27;237:721:33;;84079:272:27;;237:721:33;-1:-1:-1;;;;;;;;;;;237:721:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;84079:272:27;;;;;:::i;:::-;237:721:33;84052:313:27;;83912:605;:::i;:::-;84589:18;;:::i;81308:1648::-;;;82255:603;81308:1648;82930:18;81308:1648;;237:721:33;;;;;82649:25:27;237:721:33;;;82422:270:27;237:721:33;;82422:270:27;;237:721:33;-1:-1:-1;;;;;;;;;;;237:721:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;82422:270:27;;;;;:::i;1599:130:0:-;1513:6;237:721:33;-1:-1:-1;;;;;237:721:33;929:10:12;1662:23:0;237:721:33;;1599:130:0:o;237:721:33:-;;;;3610:56:3;;;237:721:33;;;;;;;;;;;;;;;;;;2666:187:0;2758:6;237:721:33;;-1:-1:-1;;;;;237:721:33;;;-1:-1:-1;;;;;;237:721:33;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;2806:40:0;2666:187::o;1421:214:10:-;237:721:33;;-1:-1:-1;;;1559:68:10;;;;-1:-1:-1;;;;;237:721:33;;;1559:68:10;;;237:721:33;;;;;;;;;;;;;;;;;1559:68:10;;;;;;237:721:33;1559:68:10;:::i;:::-;;:::i;1047:213:25:-;1232:1;1227:6;;1232:1;;1047:213;:::o;1227:15::-;1232:1;237:721:33;1047:213:25;:::o;5328:125:5:-;5366:69;237:721:33;5374:13:5;237:721:33;;;;5366:69:5;:::i;5328:125::-;5366:69;237:721:33;5374:13:5;237:721:33;;;;5366:69:5;;;:::i;:::-;1787:1:7;3053:22;237:721:33;5328:125:5:o;79787:255:27:-;-1:-1:-1;;;;;237:721:33;79873:33:27;;237:721:33;;79946:38:27;237:721:33;;-1:-1:-1;;;;;;237:721:33;;;;;79999:36:27;-1:-1:-1;;79999:36:27;79787:255::o;237:721:33:-;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;-1:-1:-1;;;237:721:33;;;;;;;86624:529:27;;2491:76:26;86624:529:27;87008:97;86624:529;86861:20;;86904:9;;:::i;:::-;2533:32:26;87048:25:27;86948:34;;;;237:721:33;;;;;;;;:::i;:::-;;;86825:168:27;;;237:721:33;;;86825:168:27;;;237:721:33;;;87048:25:27;:::i;:::-;237:721:33;;;;;2533:32:26;;;237:721:33;86825:168:27;2533:32:26;;237:721:33;86825:168:27;237:721:33;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;2533:32:26;-1:-1:-1;;2533:32:26;;;;;;:::i;87008:97:27:-;87004:142;;86624:529;:::o;87004:142::-;237:721:33;-1:-1:-1;;;87126:20:27;;;;;86112:506;86335:20;;86390:34;;;;237:721:33;;;;;;86335:20:27;;237:721:33;;;;-1:-1:-1;;;;;237:721:33;;;;;;;;2189:76:26;237:721:33;86504:25:27;237:721:33;;;;;86301:134:27;;;237:721:33;;;86504:25:27;:::i;:::-;237:721:33;;;2231:32:26;237:721:33;;2231:32:26;;237:721:33;86301:134:27;2231:32:26;;237:721:33;86301:134:27;237:721:33;;;;;;;;;;;;;:::i;:::-;;;;;;;2231:32:26;237:721:33;;2231:32:26;;;;;;:::i;2189:76::-;237:721:33;;;86112:506:27;:::o;237:721:33:-;;-1:-1:-1;;;237:721:33;;86301:134:27;237:721:33;;;;;;;;;-1:-1:-1;;;237:721:33;;;;;;;87391:168:27;;87528:4;237:721:33;-1:-1:-1;237:721:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;87391:168:27;:::o;1156:154:22:-;;;;2078:13;-1:-1:-1;2073:116:22;2111:3;237:721:33;;2093:16:22;;;;;2169:8;;;;:::i;:::-;237:721:33;;9294:5:22;;;;;;-1:-1:-1;9494:119:22;;;237:721:33;9494:119:22;-1:-1:-1;9494:119:22;9294:51;2111:3;237:721:33;2078:13:22;;;9294:51;9494:119;-1:-1:-1;9494:119:22;;;237:721:33;9494:119:22;-1:-1:-1;9494:119:22;9294:51;;2093:16;;;;;1270:33;1156:154;:::o;996:186:10:-;237:721:33;;-1:-1:-1;;;1116:58:10;;;;-1:-1:-1;;;;;237:721:33;;;1116:58:10;;;237:721:33;;;;;;;;;1116:58:10;;;;;;237:721:33;1116:58:10;:::i;3063:134:32:-;;3159:31;3063:134;3159:31;237:721:33;;3159:31:32;;;;;:::i;:::-;;;;3063:134::o;88076:347:27:-;-1:-1:-1;;;;;237:721:33;;;;1713:19:11;;:23;88172:24:27;;88238:18;88212:71;88238:18;;;237:721:33;88212:71:27;:::i;88168:249::-;88314:18;237:721:33;88314:35:27;;;;;;237:721:33;;;;;;;;;;;;88314:35:27;;;;;;237:721:33;88314:35:27;;;;;;;;88168:249;3167:21:34;;;:31;237:721:33;;88314:35:27;3262::34;;;;;;;;;:::i;:::-;;237:721:33;;;88076:347:27:o;237:721:33:-;;;-1:-1:-1;;;237:721:33;;;88314:35:27;237:721:33;;;;;;;;;;;;;-1:-1:-1;;;237:721:33;;;;;;;;;;-1:-1:-1;;;237:721:33;;;88314:35:27;237:721:33;;;;;;;;;;;;;;;;88314:35:27;;;;:::i;:::-;;;;2372:276:3;;2171:17;;;:::i;:::-;-1:-1:-1;;;;;237:721:33;;-1:-1:-1;;;;;;;;;;;;;2204:27:3;237:721:33;;2523:15:3;;;:28;;;2372:276;2519:123;;2372:276;;:::o;2519:123::-;7318:69:11;237:721:33;-1:-1:-1;237:721:33;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;237:721:33;;;;;7276:25:11;;;;;;;;;:::i;:::-;7318:69;;:::i;:::-;;2372:276:3:o;2523:28::-;;-1:-1:-1;2523:28:3;;2372:276;;2171:17;;;:::i;:::-;-1:-1:-1;;;;;237:721:33;;-1:-1:-1;;;;;;;;;;;2204:27:3;;;237:721:33;;2523:15:3;;;:28;;;2519:123;;2372:276;;:::o;2523:28::-;;4109:4:6;2523:28:3;;1699:281;1713:19:11;;:23;237:721:33;;-1:-1:-1;;;;;;;;;;;237:721:33;;-1:-1:-1;;;;;;237:721:33;-1:-1:-1;;;;;237:721:33;;;;;;;;;1699:281:3:o;237:721:33:-;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;;;;;;-1:-1:-1;;;237:721:33;;;;;;;87217:168:27;87328:4;237:721:33;;;;;;;;;;;;;;;;;-1:-1:-1;237:721:33;;;;;;;;;;;;;;;;;;;;;87217:168:27;:::o;237:721:33:-;;;;-1:-1:-1;237:721:33;;;;;-1:-1:-1;237:721:33;3630:212:35;8529:231:15;3630:212:35;2624:12;237:721:33;;2638:15:35;237:721:33;;;;2601:68:35;;;;237:721:33;1121:69:35;237:721:33;;;1121:69:35;;237:721:33;1121:69:35;;;237:721:33;1121:69:35;;;237:721:33;1121:69:35;2601:68;;;;;:::i;:::-;237:721:33;2591:79:35;;8529:231:15;237:721:33;8529:231:15;;-1:-1:-1;;;8529:231:15;;;;;;;;;;;3630:212:35;:::o;237:721:33:-;;;;:::o;:::-;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;-1:-1:-1;;;237:721:33;;;;;;;85080:968:27;;;1184:33:23;;;;:::i;:::-;237:721:33;;;;;;;;;86004:37:27;1247:35:23;;:58;;;;85080:968:27;1246:127:23;;;;;85080:968:27;86004:37;;;;:::i;1246:127:23:-;-1:-1:-1;237:721:33;;;;;;;;2014:75:23;;237:721:33;2014:75:23;;;2037:34;;;;2014:75;;;;;;;237:721:33;;;;;;;;;;;:::i;2014:75:23:-;1983:116;;;;;;;:::i;:::-;2117:42;;;1246:127;2117:134;;;1246:127;;;;;;;;2117:134;2175:29;237:721:33;;;2014:75:23;237:721:33;;;2175:29:23;;;;;;:::i;:::-;:76;2117:134;;;;:42;237:721:33;;2014:75:23;237:721:33;;2140:19:23;;2117:42;;;1247:58;-1:-1:-1;;;;;237:721:33;;;;;1286:19:23;;-1:-1:-1;1247:58:23;;;5328:653:10;237:721:33;;5546:69:11;;-1:-1:-1;;;;;237:721:33;;;;:::i;:::-;-1:-1:-1;237:721:33;;;;;;;;;;;5498:31:11;;;;;;;;;;;:::i;5546:69::-;237:721:33;;5871:22:10;;;:56;;;;;5328:653;237:721:33;;;;;;;5328:653:10;:::o;237:721:33:-;;;;;3610:56:3;;;;237:721:33;;;;;;;;;;;;;;;;-1:-1:-1;;;237:721:33;;;;;5871:56:10;5897:30;;;;;;237:721:33;;;;5897:30:10;;237:721:33;;;;:::i;:::-;5871:56:10;;;;;2145:730:21;;2283:2;237:721:33;;2263:22:21;2259:610;2283:2;;;2746:25;2546:180;;;;;;;;;;;;;;-1:-1:-1;2546:180:21;2746:25;;:::i;2259:610::-;2802:56;;2818:1;2802:56;2822:35;2802:56;:::o;7682:628:11:-;;;;7886:418;;;237:721:33;;;7917:22:11;7913:286;;8212:17;;:::o;7913:286::-;1713:19;:23;237:721:33;;8212:17:11;:::o;237:721:33:-;;;-1:-1:-1;;;237:721:33;;;;;;;;;;;;;;;;;;;;7886:418:11;237:721:33;;;;-1:-1:-1;8991:21:11;:17;;9163:142;;;;;;;8987:379;237:721:33;;-1:-1:-1;;;9335:20:11;;237:721:33;;;9335:20:11;;;;;;:::i;5009:1456:21:-;-1:-1:-1;;;;;6008:79:21;;6004:161;;237:721:33;;-1:-1:-1;237:721:33;;;;;;;;;;;;;;;;;;;;;;6276:24:21;;;;;;;;;-1:-1:-1;6276:24:21;-1:-1:-1;;;;;237:721:33;;6314:20:21;6310:101;;6421:37;-1:-1:-1;5009:1456:21;:::o;6310:101::-;6350:50;-1:-1:-1;6350:50:21;6276:24;6350:50;:::o;6004:161::-;6103:51;;;;6119:1;6103:51;6123:30;6103:51;:::o"},"methodIdentifiers":{"EMPTY_RELAYER()":"6bbbcd2e","EMPTY_REPAYMENT_CHAIN_ID()":"15348e44","INFINITE_FILL_DEADLINE()":"ceb4c987","MAX_TRANSFER_SIZE()":"ddd224f1","SLOW_FILL_MAX_TOKENS_TO_SEND()":"b5e1bf5f","UPDATE_DEPOSIT_DETAILS_HASH()":"a78e4b60","UPDATE_V3_DEPOSIT_DETAILS_HASH()":"2cfc26c5","__SpokePool_init(uint32,address,address)":"979f2bc2","callback(bytes)":"e98a5654","chainId()":"9a8a0592","crossDomainAdmin()":"5285e058","deposit(address,address,uint256,uint256,int64,uint32,bytes,uint256)":"1186ec33","depositFor(address,address,address,uint256,uint256,int64,uint32,bytes,uint256)":"541f4f14","depositForNow(address,address,address,uint256,uint256,int64,bytes,uint256)":"fd7c1054","depositNow(address,address,uint256,uint256,int64,bytes,uint256)":"ae527fbb","depositQuoteTimeBuffer()":"57f6dcb8","depositV2(address,address,uint256,uint256,int64,uint32,bytes,uint256)":"bdcb53a5","depositV3(address,address,address,address,uint256,uint256,uint256,address,uint32,uint32,uint32,bytes)":"7b939232","distributeRelayerRefunds(uint256,uint256,uint256[],uint32,address,address[])":"87c3932d","emergencyDeleteRootBundle(uint256)":"8a7860ce","emitEvent()":"7b0cb839","enabledDepositRoutes(address,uint256)":"5249fef1","executeRelayerRefundLeaf(uint32,(uint256,uint256,uint256[],uint32,address,address[]),bytes32[])":"1b3d5559","executeSlowRelayLeaf(address,address,address,uint256,uint256,int64,int64,uint32,uint32,bytes,int256,bytes32[])":"0c2097f7","executeV3SlowRelayLeaf(((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256,uint256),uint32,bytes32[])":"bbca7db0","fillDeadlineBuffer()":"079bd2c7","fillRelay(address,address,address,uint256,uint256,uint256,uint256,int64,int64,uint32,bytes,uint256)":"44b8be68","fillRelayV3Internal(((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),bytes32,uint256,address,bytes,uint256),address,bool)":"bf40f25b","fillRelayWithUpdatedDeposit(address,address,address,address,uint256,uint256,uint256,uint256,int64,int64,int64,uint32,bytes,bytes,bytes,uint256)":"5ceaec32","fillStatuses(bytes32)":"c35c83fc","fillV3Relay((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256)":"2e378115","fillV3RelayWithUpdatedDeposit((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256,uint256,address,bytes,bytes)":"ccfa5971","getCurrentTime()":"29cb924d","hubPool()":"e1904402","initialize(uint32,address,address)":"647c576c","multicall(bytes[])":"ac9650d8","numberOfDeposits()":"a1244c67","owner()":"8da5cb5b","pauseDeposits(bool)":"738b62e5","pauseFills(bool)":"99cc2968","pausedDeposits()":"6068d6cb","pausedFills()":"dda52113","proxiableUUID()":"52d1902d","reinitialize(address)":"f7e7d1fd","relayRootBundle(bytes32,bytes32)":"493a4f84","renounceOwnership()":"715018a6","requestV3SlowFill((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes))":"9963e5a8","rootBundles(uint256)":"ee2a53f8","setChainId(uint256)":"ef0e2ff4","setCrossDomainAdmin(address)":"de7eba78","setCurrentTime(uint256)":"22f8e566","setEnableRoute(address,uint256,bool)":"272751c7","setFillStatus(bytes32,uint8)":"5dd36f9c","setHubPool(address)":"1dfb2d02","speedUpDeposit(address,int64,uint32,address,bytes,bytes)":"7e688bba","speedUpV3Deposit(address,uint32,uint256,address,bytes,bytes)":"4e0fb8f5","transferOwnership(address)":"f2fde38b","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286","verifyUpdateV3DepositMessage(address,uint32,uint256,uint256,address,bytes,bytes)":"74dfa43d","wrappedNativeToken()":"17fcb39b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wrappedNativeTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ClaimedMerkleLeaf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DisabledRoute\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpiredFillDeadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidChainId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidExclusiveRelayer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidExclusivityDeadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFillDeadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMerkleLeaf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMerkleProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPayoutAdjustmentPct\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQuoteTimestamp\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSlowFillRequest\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MsgValueDoesNotMatchInputAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSlowFillsInExclusivityWindow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEOA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotExclusiveRelayer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RelayFilled\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"BridgedToHubPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rootBundleId\",\"type\":\"uint256\"}],\"name\":\"EmergencyDeleteRootBundle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"EnabledDepositRoute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountToReturn\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"refundAmounts\",\"type\":\"uint256[]\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"rootBundleId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"leafId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"l2TokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"refundAddresses\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"ExecutedRelayerRefundRoot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalFilledAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fillAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"realizedLpFeePct\",\"type\":\"int64\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destinationToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"bool\",\"name\":\"isSlowRelay\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"payoutAdjustmentPct\",\"type\":\"int256\"}],\"indexed\":false,\"internalType\":\"struct SpokePool.RelayExecutionInfo\",\"name\":\"updatableRelayData\",\"type\":\"tuple\"}],\"name\":\"FilledRelay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"updatedOutputAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum V3SpokePoolInterface.FillType\",\"name\":\"fillType\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct V3SpokePoolInterface.V3RelayExecutionEventInfo\",\"name\":\"relayExecutionInfo\",\"type\":\"tuple\"}],\"name\":\"FilledV3Relay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"quoteTimestamp\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"FundsDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"NewEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"PausedDeposits\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"PausedFills\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"PreLeafExecuteHook\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"rootBundleId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"relayerRefundRoot\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"slowRelayRoot\",\"type\":\"bytes32\"}],\"name\":\"RelayedRootBundle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"newRelayerFeePct\",\"type\":\"int64\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"}],\"name\":\"RequestedSpeedUpDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updatedOutputAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"}],\"name\":\"RequestedSpeedUpV3Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"RequestedV3SlowFill\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newHubPool\",\"type\":\"address\"}],\"name\":\"SetHubPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"SetXDomainAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountToReturn\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"leafId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"l2TokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"TokensBridged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"quoteTimestamp\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"V3FundsDeposited\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"EMPTY_RELAYER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EMPTY_REPAYMENT_CHAIN_ID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INFINITE_FILL_DEADLINE\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TRANSFER_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SLOW_FILL_MAX_TOKENS_TO_SEND\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPDATE_DEPOSIT_DETAILS_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPDATE_V3_DEPOSIT_DETAILS_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_initialDepositId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_crossDomainAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_hubPool\",\"type\":\"address\"}],\"name\":\"__SpokePool_init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"callback\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"crossDomainAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"quoteTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"quoteTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"depositFor\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"depositForNow\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"depositNow\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositQuoteTimeBuffer\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"quoteTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"depositV2\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"quoteTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"depositV3\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountToReturn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"refundAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint32\",\"name\":\"leafId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"l2TokenAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"refundAddresses\",\"type\":\"address[]\"}],\"name\":\"distributeRelayerRefunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rootBundleId\",\"type\":\"uint256\"}],\"name\":\"emergencyDeleteRootBundle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emitEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"enabledDepositRoutes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"rootBundleId\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amountToReturn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"refundAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint32\",\"name\":\"leafId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"l2TokenAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"refundAddresses\",\"type\":\"address[]\"}],\"internalType\":\"struct SpokePoolInterface.RelayerRefundLeaf\",\"name\":\"relayerRefundLeaf\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"executeRelayerRefundLeaf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destinationToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"realizedLpFeePct\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"rootBundleId\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"int256\",\"name\":\"payoutAdjustment\",\"type\":\"int256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"executeSlowRelayLeaf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"internalType\":\"struct V3SpokePoolInterface.V3RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedOutputAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct V3SpokePoolInterface.V3SlowFill\",\"name\":\"slowFillLeaf\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"rootBundleId\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"executeV3SlowRelayLeaf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fillDeadlineBuffer\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destinationToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTokensToSend\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"realizedLpFeePct\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"fillRelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"internalType\":\"struct V3SpokePoolInterface.V3RelayData\",\"name\":\"relay\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"relayHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"updatedOutputAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"}],\"internalType\":\"struct V3SpokePoolInterface.V3RelayExecutionParams\",\"name\":\"relayExecution\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isSlowFill\",\"type\":\"bool\"}],\"name\":\"fillRelayV3Internal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destinationToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTokensToSend\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"realizedLpFeePct\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"updatedRelayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"fillRelayWithUpdatedDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"fillStatuses\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"internalType\":\"struct V3SpokePoolInterface.V3RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"}],\"name\":\"fillV3Relay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"internalType\":\"struct V3SpokePoolInterface.V3RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedOutputAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"}],\"name\":\"fillV3RelayWithUpdatedDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hubPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_initialDepositId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_crossDomainAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_hubPool\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfDeposits\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"pause\",\"type\":\"bool\"}],\"name\":\"pauseDeposits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"pause\",\"type\":\"bool\"}],\"name\":\"pauseFills\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pausedDeposits\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pausedFills\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hubPool\",\"type\":\"address\"}],\"name\":\"reinitialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"relayerRefundRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"slowRelayRoot\",\"type\":\"bytes32\"}],\"name\":\"relayRootBundle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"internalType\":\"struct V3SpokePoolInterface.V3RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"name\":\"requestV3SlowFill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rootBundles\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"slowRelayRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"relayerRefundRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"}],\"name\":\"setChainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCrossDomainAdmin\",\"type\":\"address\"}],\"name\":\"setCrossDomainAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setCurrentTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setEnableRoute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"relayHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum V3SpokePoolInterface.FillType\",\"name\":\"fillType\",\"type\":\"uint8\"}],\"name\":\"setFillStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newHubPool\",\"type\":\"address\"}],\"name\":\"setHubPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"updatedRelayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"}],\"name\":\"speedUpDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"updatedOutputAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"}],\"name\":\"speedUpV3Deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedOutputAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"}],\"name\":\"verifyUpdateV3DepositMessage\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrappedNativeToken\",\"outputs\":[{\"internalType\":\"contract WETH9Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"FilledRelay(uint256,uint256,uint256,uint256,uint256,uint256,int64,int64,uint32,address,address,address,address,bytes,(address,bytes,int64,bool,int256))\":{\"custom:audit\":\"FOLLOWING EVENT TO BE DEPRECATED\"},\"FundsDeposited(uint256,uint256,uint256,int64,uint32,uint32,address,address,address,bytes)\":{\"custom:audit\":\"FOLLOWING EVENT TO BE DEPRECATED\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RequestedSpeedUpDeposit(int64,uint32,address,address,bytes,bytes)\":{\"custom:audit\":\"FOLLOWING EVENT TO BE DEPRECATED\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"__SpokePool_init(uint32,address,address)\":{\"params\":{\"_crossDomainAdmin\":\"Cross domain admin to set. Can be changed by admin.\",\"_hubPool\":\"Hub pool address to set. Can be changed by admin.\",\"_initialDepositId\":\"Starting deposit ID. Set to 0 unless this is a re-deployment in order to mitigate relay hash collisions.\"}},\"chainId()\":{\"details\":\"Some L2s like ZKSync don't support the CHAIN_ID opcode so we allow the implementer to override this.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"deposit(address,address,uint256,uint256,int64,uint32,bytes,uint256)\":{\"details\":\"Produces a V3FundsDeposited event with an infinite expiry, meaning that this deposit can never expire. Moreover, the event's outputToken is set to 0x0 meaning that this deposit can always be slow filled.\",\"params\":{\"amount\":\"Amount of tokens to deposit. Will be amount of tokens to receive less fees.\",\"destinationChainId\":\"Denotes network where user will receive funds from SpokePool by a relayer.\",\"message\":\"Arbitrary data that can be used to pass additional information to the recipient along with the tokens. Note: this is intended to be used to pass along instructions for how a contract should use or allocate the tokens.\",\"originToken\":\"Token to lock into this contract to initiate deposit.\",\"quoteTimestamp\":\"Timestamp used by relayers to compute this deposit's realizedLPFeePct which is paid to LP pool on HubPool.\",\"recipient\":\"Address to receive funds at on destination chain.\",\"relayerFeePct\":\"% of deposit amount taken out to incentivize a fast relayer.\"}},\"depositFor(address,address,address,uint256,uint256,int64,uint32,bytes,uint256)\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"depositForNow(address,address,address,uint256,uint256,int64,bytes,uint256)\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"depositNow(address,address,uint256,uint256,int64,bytes,uint256)\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"depositV3(address,address,address,address,uint256,uint256,uint256,address,uint32,uint32,uint32,bytes)\":{\"details\":\"On the destination chain, the hash of the deposit data will be used to uniquely identify this deposit, so modifying any params in it will result in a different hash and a different deposit. The hash will comprise all parameters to this function along with this chain's chainId(). Relayers are only refunded for filling deposits with deposit hashes that map exactly to the one emitted by this contract.\",\"params\":{\"depositor\":\"The account credited with the deposit who can request to \\\"speed up\\\" this deposit by modifying the output amount, recipient, and message.\",\"destinationChainId\":\"The destination chain identifier. Must be enabled along with the input token as a valid deposit route from this spoke pool or this transaction will revert.\",\"exclusiveRelayer\":\"The relayer that will be exclusively allowed to fill this deposit before the exclusivity deadline timestamp. This must be a valid, non-zero address if the exclusivity deadline is greater than the current block.timestamp. If the exclusivity deadline is < currentTime, then this must be address(0), and vice versa if this is address(0).\",\"exclusivityDeadline\":\"The deadline for the exclusive relayer to fill the deposit. After this destination chain timestamp, anyone can fill this deposit on the destination chain. If exclusiveRelayer is set to address(0), then this also must be set to 0, (and vice versa), otherwise this must be set >= current time.\",\"fillDeadline\":\"The deadline for the relayer to fill the deposit. After this destination chain timestamp, the fill will revert on the destination chain. Must be set between [currentTime, currentTime + fillDeadlineBuffer] where currentTime is block.timestamp on this chain or this transaction will revert.\",\"inputAmount\":\"The amount of input tokens to pull from the caller's account and lock into this contract. This amount will be sent to the relayer on their repayment chain of choice as a refund following an optimistic challenge window in the HubPool, less a system fee.\",\"inputToken\":\"The token pulled from the caller's account and locked into this contract to initiate the deposit. The equivalent of this token on the relayer's repayment chain of choice will be sent as a refund. If this is equal to the wrapped native token then the caller can optionally pass in native token as msg.value, as long as msg.value = inputTokenAmount.\",\"message\":\"The message to send to the recipient on the destination chain if the recipient is a contract. If the message is not empty, the recipient contract must implement handleV3AcrossMessage() or the fill will revert.\",\"outputAmount\":\"The amount of output tokens that the relayer will send to the recipient on the destination.\",\"outputToken\":\"The token that the relayer will send to the recipient on the destination chain. Must be an ERC20.\",\"quoteTimestamp\":\"The HubPool timestamp that is used to determine the system fee paid by the depositor.  This must be set to some time between [currentTime - depositQuoteTimeBuffer, currentTime] where currentTime is block.timestamp on this chain or this transaction will revert.\",\"recipient\":\"The account receiving funds on the destination chain. Can be an EOA or a contract. If the output token is the wrapped native token for the chain, then the recipient will receive native token if an EOA or wrapped native token if a contract.\"}},\"emergencyDeleteRootBundle(uint256)\":{\"params\":{\"rootBundleId\":\"Index of the root bundle that needs to be deleted. Note: this is intentionally a uint256 to ensure that a small input range doesn't limit which indices this method is able to reach.\"}},\"executeRelayerRefundLeaf(uint32,(uint256,uint256,uint256[],uint32,address,address[]),bytes32[])\":{\"params\":{\"proof\":\"Inclusion proof for this leaf in relayer refund root in root bundle.\",\"relayerRefundLeaf\":\"Contains all data necessary to reconstruct leaf contained in root bundle and to refund relayer. This data structure is explained in detail in the SpokePoolInterface.\",\"rootBundleId\":\"Unique ID of root bundle containing relayer refund root that this leaf is contained in.\"}},\"executeSlowRelayLeaf(address,address,address,uint256,uint256,int64,int64,uint32,uint32,bytes,int256,bytes32[])\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"executeV3SlowRelayLeaf(((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256,uint256),uint32,bytes32[])\":{\"details\":\"Executing a slow fill leaf is equivalent to filling the relayData so this function cannot be used to double fill a recipient. The relayData that is filled is included in the slowFillLeaf and is hashed like any other fill sent through fillV3Relay().There is no relayer credited with filling this relay since funds are sent directly out of this contract.\",\"params\":{\"proof\":\"Inclusion proof for this leaf in slow relay root in root bundle.\",\"rootBundleId\":\"Unique ID of root bundle containing slow relay root that this leaf is contained in.\",\"slowFillLeaf\":\"Contains all data necessary to uniquely identify a relay for this chain. This struct is hashed and included in a merkle root that is relayed to all spoke pools. - relayData: struct containing all the data needed to identify the original deposit to be slow filled. - chainId: chain identifier where slow fill leaf should be executed. If this doesn't match this chain's chainId, then this function will revert. - updatedOutputAmount: Amount to be sent to recipient out of this contract's balance. Can be set differently from relayData.outputAmount to charge a different fee because this deposit was \\\"slow\\\" filled. Usually, this will be set higher to reimburse the recipient for waiting for the slow fill.\"}},\"fillRelay(address,address,address,uint256,uint256,uint256,uint256,int64,int64,uint32,bytes,uint256)\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"fillRelayWithUpdatedDeposit(address,address,address,address,uint256,uint256,uint256,uint256,int64,int64,int64,uint32,bytes,bytes,bytes,uint256)\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"fillV3Relay((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256)\":{\"details\":\"The fee paid to relayers and the system should be captured in the spread between output amount and input amount when adjusted to be denominated in the input token. A relayer on the destination chain will send outputAmount of outputTokens to the recipient and receive inputTokens on a repayment chain of their choice. Therefore, the fee should account for destination fee transaction costs, the relayer's opportunity cost of capital while they wait to be refunded following an optimistic challenge window in the HubPool, and a system fee charged to relayers.The hash of the relayData will be used to uniquely identify the deposit to fill, so modifying any params in it will result in a different hash and a different deposit. The hash will comprise all parameters passed to depositV3() on the origin chain along with that chain's chainId(). This chain's chainId() must therefore match the destinationChainId passed into depositV3. Relayers are only refunded for filling deposits with deposit hashes that map exactly to the one emitted by the origin SpokePool therefore the relayer should not modify any params in relayData.Cannot fill more than once. Partial fills are not supported.\",\"params\":{\"relayData\":\"struct containing all the data needed to identify the deposit to be filled. Should match all the same-named parameters emitted in the origin chain V3FundsDeposited event. - depositor: The account credited with the deposit who can request to \\\"speed up\\\" this deposit by modifying the output amount, recipient, and message. - recipient The account receiving funds on this chain. Can be an EOA or a contract. If the output token is the wrapped native token for the chain, then the recipient will receive native token if an EOA or wrapped native token if a contract. - inputToken: The token pulled from the caller's account to initiate the deposit. The equivalent of this token on the repayment chain will be sent as a refund to the caller. - outputToken The token that the caller will send to the recipient on the destination chain. Must be an ERC20. - inputAmount: This amount, less a system fee, will be sent to the caller on their repayment chain of choice as a refund following an optimistic challenge window in the HubPool. - outputAmount: The amount of output tokens that the caller will send to the recipient. - originChainId: The origin chain identifier. - exclusiveRelayer The relayer that will be exclusively allowed to fill this deposit before the exclusivity deadline timestamp. - fillDeadline The deadline for the caller to fill the deposit. After this timestamp, the fill will revert on the destination chain. - exclusivityDeadline: The deadline for the exclusive relayer to fill the deposit. After this timestamp, anyone can fill this deposit. - message The message to send to the recipient if the recipient is a contract that implements a handleV3AcrossMessage() public function\",\"repaymentChainId\":\"Chain of SpokePool where relayer wants to be refunded after the challenge window has passed. Will receive inputAmount of the equivalent token to inputToken on the repayment chain.\"}},\"fillV3RelayWithUpdatedDeposit((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256,uint256,address,bytes,bytes)\":{\"details\":\"Subject to same exclusivity deadline rules as fillV3Relay().\",\"params\":{\"depositorSignature\":\"Signed EIP712 hashstruct containing the deposit ID. Should be signed by the depositor account.\",\"relayData\":\"struct containing all the data needed to identify the deposit to be filled. See fillV3Relay().\",\"repaymentChainId\":\"Chain of SpokePool where relayer wants to be refunded after the challenge window has passed. See fillV3Relay().\",\"updatedMessage\":\"New message to use for this deposit.\",\"updatedOutputAmount\":\"New output amount to use for this deposit.\",\"updatedRecipient\":\"New recipient to use for this deposit.\"}},\"getCurrentTime()\":{\"returns\":{\"_0\":\"uint for the current timestamp.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pauseDeposits(bool)\":{\"details\":\"Affects `deposit()` but not `speedUpDeposit()`, so that existing deposits can be sped up and still relayed.\",\"params\":{\"pause\":\"true if the call is meant to pause the system, false if the call is meant to unpause it.\"}},\"pauseFills(bool)\":{\"details\":\"Affects fillRelayWithUpdatedDeposit() and fillRelay().\",\"params\":{\"pause\":\"true if the call is meant to pause the system, false if the call is meant to unpause it.\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"relayRootBundle(bytes32,bytes32)\":{\"params\":{\"relayerRefundRoot\":\"Merkle root containing relayer refund leaves that can be individually executed via executeRelayerRefundLeaf().\",\"slowRelayRoot\":\"Merkle root containing slow relay fulfillment leaves that can be individually executed via executeSlowRelayLeaf().\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"requestV3SlowFill((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes))\":{\"details\":\"Slow fills are not possible unless the input and output tokens are \\\"equivalent\\\", i.e. they route to the same L1 token via PoolRebalanceRoutes.Slow fills are created by inserting slow fill objects into a merkle tree that is included in the next HubPool \\\"root bundle\\\". Once the optimistic challenge window has passed, the HubPool will relay the slow root to this chain via relayRootBundle(). Once the slow root is relayed, the slow fill can be executed by anyone who calls executeV3SlowRelayLeaf().Cannot request a slow fill if the fill deadline has passed.Cannot request a slow fill if the relay has already been filled or a slow fill has already been requested.\",\"params\":{\"relayData\":\"struct containing all the data needed to identify the deposit that should be slow filled. If any of the params are missing or different from the origin chain deposit, then Across will not include a slow fill for the intended deposit.\"}},\"setCrossDomainAdmin(address)\":{\"params\":{\"newCrossDomainAdmin\":\"New cross domain admin.\"}},\"setEnableRoute(address,uint256,bool)\":{\"params\":{\"destinationChainId\":\"Chain ID for where depositor wants to receive funds.\",\"enabled\":\"True to enable deposits, False otherwise.\",\"originToken\":\"Token that depositor can deposit to this contract.\"}},\"setHubPool(address)\":{\"params\":{\"newHubPool\":\"New hub pool.\"}},\"speedUpDeposit(address,int64,uint32,address,bytes,bytes)\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"speedUpV3Deposit(address,uint32,uint256,address,bytes,bytes)\":{\"details\":\"the depositor and depositId must match the params in a V3FundsDeposited event that the depositor wants to speed up. The relayer has the option but not the obligation to use this updated information when filling the deposit via fillV3RelayWithUpdatedDeposit().\",\"params\":{\"depositId\":\"Deposit ID to speed up.\",\"depositor\":\"Depositor that must sign the depositorSignature and was the original depositor.\",\"depositorSignature\":\"Signed EIP712 hashstruct containing the deposit ID. Should be signed by the depositor account. If depositor is a contract, then should implement EIP1271 to sign as a contract. See _verifyUpdateV3DepositMessage() for more details about how this signature should be constructed.\",\"updatedMessage\":\"New message to use for this deposit. Can be modified if the recipient is a contract that expects to receive a message from the relay and for some reason needs to be modified.\",\"updatedOutputAmount\":\"New output amount to use for this deposit. Should be lower than previous value otherwise relayer has no incentive to use this updated value.\",\"updatedRecipient\":\"New recipient to use for this deposit. Can be modified if the recipient is a contract that expects to receive a message from the relay and for some reason needs to be modified.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"MockSpokePoolV2\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"__SpokePool_init(uint32,address,address)\":{\"notice\":\"Construct the base SpokePool.\"},\"chainId()\":{\"notice\":\"Returns chain ID for this network.\"},\"deposit(address,address,uint256,uint256,int64,uint32,bytes,uint256)\":{\"notice\":\"Called by user to bridge funds from origin to destination chain. Depositor will effectively lock tokens in this contract and receive a destination token on the destination chain. The origin => destination token mapping is stored on the L1 HubPool.The caller must first approve this contract to spend amount of originToken.The originToken => destinationChainId must be enabled.This method is payable because the caller is able to deposit native token if the originToken is wrappedNativeToken and this function will handle wrapping the native token to wrappedNativeToken.\"},\"depositV3(address,address,address,address,uint256,uint256,uint256,address,uint32,uint32,uint32,bytes)\":{\"notice\":\"Request to bridge input token cross chain to a destination chain and receive a specified amount of output tokens. The fee paid to relayers and the system should be captured in the spread between output amount and input amount when adjusted to be denominated in the input token. A relayer on the destination chain will send outputAmount of outputTokens to the recipient and receive inputTokens on a repayment chain of their choice. Therefore, the fee should account for destination fee transaction costs, the relayer's opportunity cost of capital while they wait to be refunded following an optimistic challenge window in the HubPool, and the system fee that they'll be charged.\"},\"emergencyDeleteRootBundle(uint256)\":{\"notice\":\"This method is intended to only be used in emergencies where a bad root bundle has reached the SpokePool.\"},\"executeRelayerRefundLeaf(uint32,(uint256,uint256,uint256[],uint32,address,address[]),bytes32[])\":{\"notice\":\"Executes a relayer refund leaf stored as part of a root bundle. Will send the relayer the amount they sent to the recipient plus a relayer fee.\"},\"executeV3SlowRelayLeaf(((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256,uint256),uint32,bytes32[])\":{\"notice\":\"Executes a slow relay leaf stored as part of a root bundle relayed by the HubPool.\"},\"fillV3Relay((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256)\":{\"notice\":\"Fulfill request to bridge cross chain by sending specified output tokens to the recipient.\"},\"fillV3RelayWithUpdatedDeposit((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256,uint256,address,bytes,bytes)\":{\"notice\":\"Identical to fillV3Relay except that the relayer wants to use a depositor's updated output amount, recipient, and/or message. The relayer should only use this function if they can supply a message signed by the depositor that contains the fill's matching deposit ID along with updated relay parameters. If the signature can be verified, then this function will emit a FilledV3Event that will be used by the system for refund verification purposes. In otherwords, this function is an alternative way to fill a a deposit than fillV3Relay.\"},\"getCurrentTime()\":{\"notice\":\"Gets the current time.\"},\"pauseDeposits(bool)\":{\"notice\":\"Pauses deposit-related functions. This is intended to be used if this contract is deprecated or when something goes awry.\"},\"pauseFills(bool)\":{\"notice\":\"Pauses fill-related functions. This is intended to be used if this contract is deprecated or when something goes awry.\"},\"relayRootBundle(bytes32,bytes32)\":{\"notice\":\"This method stores a new root bundle in this contract that can be executed to refund relayers, fulfill slow relays, and send funds back to the HubPool on L1. This method can only be called by the admin and is designed to be called as part of a cross-chain message from the HubPool's executeRootBundle method.\"},\"requestV3SlowFill((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes))\":{\"notice\":\"Request Across to send LP funds to this contract to fulfill a slow fill relay for a deposit in the next bundle.\"},\"setCrossDomainAdmin(address)\":{\"notice\":\"Change cross domain admin address. Callable by admin only.\"},\"setEnableRoute(address,uint256,bool)\":{\"notice\":\"Enable/Disable an origin token => destination chain ID route for deposits. Callable by admin only.\"},\"setHubPool(address)\":{\"notice\":\"Change L1 hub pool address. Callable by admin only.\"},\"speedUpV3Deposit(address,uint32,uint256,address,bytes,bytes)\":{\"notice\":\"Depositor can use this function to signal to relayer to use updated output amount, recipient, and/or message.\"}},\"notice\":\"Upgrades MockSpokePool for no practical reason other than to demonstrate upgradeability options\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/MockSpokePoolV2.sol\":\"MockSpokePoolV2\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d\",\"dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce6e5ae4633559c2aad156be884a96f7a9beb8dd31b1b630a6de55972e3af622\",\"dweb:/ipfs/QmQasz4sQoexkrvB7wCQAY6NbMoCtPS7AqomymRoJGYz85\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x23b997be73d3dd46885262704f0f8cfc7273fdadfe303d37969a9561373972b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d03ebe5406134f0c4a017dee625ff615031194493bd1e88504e5c8fae55bc166\",\"dweb:/ipfs/QmUZV5bMbgk2PAkV3coouSeSainHN2jhqaQDJaA7hQRyu2\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c\",\"dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x3af3ca86df39aac39a0514c84459d691434a108d2151c8ce9d69f32e315cab80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77d1f1cf302cd5e1dfbbb4ce3b281b28e8c52942d4319fce43df2e1b6f02a52d\",\"dweb:/ipfs/QmT6ZXStmK3Knhh9BokeVHQ9HXTBZNgL3Eb1ar1cYg1hWy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/MerkleLib.sol\":{\"keccak256\":\"0x8c5c0ae815ea4b121a6afcf163c7b8b0de18212db1228350f89fa5dd0bb54365\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c1eb160f6b614d6721c0ab8e6149ff192cab1768ee266cb1941c5c1a7d304675\",\"dweb:/ipfs/QmYwowK4FzZXwoZS4TvwLQD77Gk66eWKZpg2ETUpXfrN7X\"]},\"contracts/SpokePool.sol\":{\"keccak256\":\"0xff57c2345270680bac0b9e63923771bb18b22cadb068966063186f3484e7dfbf\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d4b378a773e5def3724b183cd1007ff80072736988f7d05490968a4378ec0c8c\",\"dweb:/ipfs/QmQp4rJn1WrDyFAY3xprQN6qzXtKmWfNraVTNmqXY2EWZG\"]},\"contracts/external/interfaces/WETH9Interface.sol\":{\"keccak256\":\"0x3f7892554ec7f54681fdd3cc18a41346c246c9c1afba016c52990ef77741f718\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://76e901f8da798eb2fdef8fd0083a51088103269f08ee751598c5a6eba407785f\",\"dweb:/ipfs/QmcAHbwbwCZd78teaK4cHuAvXq71aWX1r9vTGkSRRBDJV1\"]},\"contracts/interfaces/HubPoolInterface.sol\":{\"keccak256\":\"0xefd509ab379b94004b5767d67971e5c0bda4ca1e9f376b5aea75a0297b5d7bd6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0b7e509e90bcca9b96bf55e92498b17bbb548359c470b17285740080a6c0d9de\",\"dweb:/ipfs/QmdviQBbB58H9HR3tKQepEuYcMKXZthyTThGXUgQDAC828\"]},\"contracts/interfaces/SpokePoolInterface.sol\":{\"keccak256\":\"0x5089df2f8d40f9afad742d059966a34a42fae5dd61ab9274585d303ca4bb6489\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://46f884dee4c3de680f45f66a5b2a34b41423ac818a736d5c108eb334f0fdf411\",\"dweb:/ipfs/QmdNJ2w2CEGkHv2rS4vYKNNdPjZALtCPJf4sQKzRW3ARzd\"]},\"contracts/interfaces/V3SpokePoolInterface.sol\":{\"keccak256\":\"0xdd33112f0dc8f8462307cda7d7753cb9be49cd209b6520abd69273ac015f7ab6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://211c34424710bc8a4ab41bf00bdd9df32e139642a3007a7bbe1e60020f943d2f\",\"dweb:/ipfs/QmYVM5c84V4iqKy734Sjq4TFKMJyJ3cQLHB2Katz1pTBZz\"]},\"contracts/test/MockSpokePool.sol\":{\"keccak256\":\"0x724e68d1f2bc513e8b36c9c224260dfc749bd6d3909c97332217229721314866\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://2ab1434f257e967cab31452ac749b6a1517013fdee96cd376a1b95dc330669d7\",\"dweb:/ipfs/Qmd2c6UZd1RSdZ7c11cfb6rPprXgLxX1B4jsedPfNu7quz\"]},\"contracts/test/MockSpokePoolV2.sol\":{\"keccak256\":\"0x9a2bf0fc06467feda767877324636c0b892d03262f8cf37c581ee073762e04a6\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7d369ae5a306af26688a8587f86735a54026009690e457220e89520b28f19346\",\"dweb:/ipfs/QmSRfrkPNAnKtFBQDAD8RzPPjtrYAnBpK5LjsQT7xfDotH\"]},\"contracts/upgradeable/AddressLibUpgradeable.sol\":{\"keccak256\":\"0xa1d6d9ca58e205e006ccc259e5145690677edaa207432d290d5e1b827b5fc689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://395952d23c2b5dee1d77efbbbf42e55dfce42d838b91c72b851786c80e688f5e\",\"dweb:/ipfs/QmQUK3xeSAydtVYRgPmt2FNzXNjbtHmdCVD61mph1tegfg\"]},\"contracts/upgradeable/EIP712CrossChainUpgradeable.sol\":{\"keccak256\":\"0x16181b3f6d12da34b64997235be59ca9e8d189dff99477b0dd828510f1f6e2e6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b4dee85f34d6d6b796943c8ee959abf51b3656d56a24b4f87e4a966aa5f8d4e6\",\"dweb:/ipfs/QmQrc885RFzLDELLHaEm4mPoXKKWw7WumtfwBfkKV5wZxa\"]},\"contracts/upgradeable/MultiCallerUpgradeable.sol\":{\"keccak256\":\"0x5991e43af9a1389be25119b0e38ce974ae5ba9644b0a3833a2ec95d91f792cb9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b64e97cab30636c478421fcdba771f0fdaeaf390d237e311f44ae513215926db\",\"dweb:/ipfs/QmXFDXm8KijimPvnU7V97N1m2H3SUKat7JHFuL7dfTUJtY\"]}},\"version\":1}"}},"contracts/upgradeable/AddressLibUpgradeable.sol":{"AddressLibUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122089d6f6fcf761e35bd4f997179715fe64849c4eccbe44744347f8105be474ba6f64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 0xD6 0xF6 0xFC 0xF7 PUSH2 0xE35B 0xD4 0xF9 SWAP8 OR SWAP8 ISZERO INVALID PUSH5 0x849C4ECCBE PREVRANDAO PUSH21 0x4347F8105BE474BA6F64736F6C6343000817003300 ","sourceMap":"611:9275:34:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea264697066735822122089d6f6fcf761e35bd4f997179715fe64849c4eccbe44744347f8105be474ba6f64736f6c63430008170033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 0xD6 0xF6 0xFC 0xF7 PUSH2 0xE35B 0xD4 0xF9 SWAP8 OR SWAP8 ISZERO INVALID PUSH5 0x849C4ECCBE PREVRANDAO PUSH21 0x4347F8105BE474BA6F64736F6C6343000817003300 ","sourceMap":"611:9275:34:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address typeSee https://docs.openzeppelin.com/upgrades-plugins/1.x/faq#delegatecall-selfdestruct for more details.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"AddressUpgradeable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Logic is 100% copied from \\\"@openzeppelin/contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\\\" but one comment is added to clarify why we allow delegatecall() in this contract, which is typically unsafe for use in upgradeable implementation contracts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/upgradeable/AddressLibUpgradeable.sol\":\"AddressLibUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/upgradeable/AddressLibUpgradeable.sol\":{\"keccak256\":\"0xa1d6d9ca58e205e006ccc259e5145690677edaa207432d290d5e1b827b5fc689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://395952d23c2b5dee1d77efbbbf42e55dfce42d838b91c72b851786c80e688f5e\",\"dweb:/ipfs/QmQUK3xeSAydtVYRgPmt2FNzXNjbtHmdCVD61mph1tegfg\"]}},\"version\":1}"}},"contracts/upgradeable/EIP712CrossChainUpgradeable.sol":{"EIP712CrossChainUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. This contract is based on OpenZeppelin's implementation: https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/master/contracts/utils/cryptography/EIP712Upgradeable.sol NOTE: Modified version that allows to build a domain separator that relies on a different chain id than the chain this contract is deployed to. An example use case we want to support is: - User A signs a message on chain with id = 1 - User B executes a method by verifying user A's EIP-712 compliant signature on a chain with id != 1\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/upgradeable/EIP712CrossChainUpgradeable.sol\":\"EIP712CrossChainUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c\",\"dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"contracts/upgradeable/EIP712CrossChainUpgradeable.sol\":{\"keccak256\":\"0x16181b3f6d12da34b64997235be59ca9e8d189dff99477b0dd828510f1f6e2e6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b4dee85f34d6d6b796943c8ee959abf51b3656d56a24b4f87e4a966aa5f8d4e6\",\"dweb:/ipfs/QmQrc885RFzLDELLHaEm4mPoXKKWw7WumtfwBfkKV5wZxa\"]}},\"version\":1}"}},"contracts/upgradeable/MultiCallerUpgradeable.sol":{"MultiCallerUpgradeable":{"abi":[{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234610016576103d9908161001b8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c63ac9650d814610024575f80fd5b3461008d57602036600319011261008d576001600160401b0360043581811161008d573660238201121561008d57806004013591821161008d573660248360051b8301011161008d5761008991602461007d92016102f6565b604051918291826100d7565b0390f35b5f80fd5b5f5b8381106100a25750505f910152565b8181015183820152602001610093565b906020916100cb81518092818552858086019101610091565b601f01601f1916010190565b6020808201906020835283518092526040830192602060408460051b8301019501935f915b84831061010c5750505050505090565b909192939495848061012a600193603f198682030187528a516100b2565b98019301930191949392906100fc565b634e487b7160e01b5f52604160045260245ffd5b6040519190601f01601f191682016001600160401b0381118382101761017357604052565b61013a565b6001600160401b0381116101735760051b60200190565b906101a161019c83610178565b61014e565b82815280926101b2601f1991610178565b01905f5b8281106101c257505050565b8060606020809385010152016101b6565b634e487b7160e01b5f52603260045260245ffd5b91908110156102285760051b81013590601e198136030182121561008d5701803591906001600160401b03831161008d57602001823603811361008d579190565b6101d3565b908092918237015f815290565b6001600160401b03811161017357601f01601f191660200190565b3d15610275573d9061026961019c8361023a565b9182523d5f602084013e565b606090565b60208183031261008d578051906001600160401b03821161008d570181601f8201121561008d5780516102af61019c8261023a565b928184526020828401011161008d576102ce9160208085019101610091565b90565b9060206102ce9281815201906100b2565b80518210156102285760209160051b010190565b9190916103028361018f565b925f5b81811061031157505050565b5f8061031e8385876101e7565b6040939161033085518093819361022d565b0390305af49061033e610255565b911561036557509060019161035382886102e2565b5261035e81876102e2565b5001610305565b90604481511061008d5761039f61038a6004928381015160248091830101910161027a565b925162461bcd60e51b815292839283016102d1565b0390fdfea2646970667358221220d9a68602f0ba26c260693f964022e833de8acb2d4b75a967a3211f2320903de564736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x3D9 SWAP1 DUP2 PUSH2 0x1B DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0xAC9650D8 EQ PUSH2 0x24 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x8D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x8D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x8D JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x8D JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x8D JUMPI CALLDATASIZE PUSH1 0x24 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD GT PUSH2 0x8D JUMPI PUSH2 0x89 SWAP2 PUSH1 0x24 PUSH2 0x7D SWAP3 ADD PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xD7 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0xA2 JUMPI POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x93 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0xCB DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x91 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD SWAP1 PUSH1 0x20 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP3 PUSH1 0x20 PUSH1 0x40 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x10C JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x12A PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0xB2 JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0xFC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x173 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x13A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x173 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1A1 PUSH2 0x19C DUP4 PUSH2 0x178 JUMP JUMPDEST PUSH2 0x14E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1B2 PUSH1 0x1F NOT SWAP2 PUSH2 0x178 JUMP JUMPDEST ADD SWAP1 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1C2 JUMPI POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x60 PUSH1 0x20 DUP1 SWAP4 DUP6 ADD ADD MSTORE ADD PUSH2 0x1B6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x228 JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x8D JUMPI ADD DUP1 CALLDATALOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x8D JUMPI PUSH1 0x20 ADD DUP3 CALLDATASIZE SUB DUP2 SGT PUSH2 0x8D JUMPI SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST SWAP1 DUP1 SWAP3 SWAP2 DUP3 CALLDATACOPY ADD PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x173 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x275 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x269 PUSH2 0x19C DUP4 PUSH2 0x23A JUMP JUMPDEST SWAP2 DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x8D JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x8D JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x8D JUMPI DUP1 MLOAD PUSH2 0x2AF PUSH2 0x19C DUP3 PUSH2 0x23A JUMP JUMPDEST SWAP3 DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x8D JUMPI PUSH2 0x2CE SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x91 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x2CE SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0xB2 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x228 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x302 DUP4 PUSH2 0x18F JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x311 JUMPI POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x31E DUP4 DUP6 DUP8 PUSH2 0x1E7 JUMP JUMPDEST PUSH1 0x40 SWAP4 SWAP2 PUSH2 0x330 DUP6 MLOAD DUP1 SWAP4 DUP2 SWAP4 PUSH2 0x22D JUMP JUMPDEST SUB SWAP1 ADDRESS GAS DELEGATECALL SWAP1 PUSH2 0x33E PUSH2 0x255 JUMP JUMPDEST SWAP2 ISZERO PUSH2 0x365 JUMPI POP SWAP1 PUSH1 0x1 SWAP2 PUSH2 0x353 DUP3 DUP9 PUSH2 0x2E2 JUMP JUMPDEST MSTORE PUSH2 0x35E DUP2 DUP8 PUSH2 0x2E2 JUMP JUMPDEST POP ADD PUSH2 0x305 JUMP JUMPDEST SWAP1 PUSH1 0x44 DUP2 MLOAD LT PUSH2 0x8D JUMPI PUSH2 0x39F PUSH2 0x38A PUSH1 0x4 SWAP3 DUP4 DUP2 ADD MLOAD PUSH1 0x24 DUP1 SWAP2 DUP4 ADD ADD SWAP2 ADD PUSH2 0x27A JUMP JUMPDEST SWAP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 DUP4 ADD PUSH2 0x2D1 JUMP JUMPDEST SUB SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0xA6 DUP7 MUL CREATE 0xBA 0x26 0xC2 PUSH1 0x69 EXTCODEHASH SWAP7 BLOCKHASH 0x22 0xE8 CALLER 0xDE DUP11 0xCB 0x2D 0x4B PUSH22 0xA967A3211F2320903DE564736F6C6343000817003300 ","sourceMap":"474:1962:36:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_string_fromMemory":{"entryPoint":634,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_bytes_dyn":{"entryPoint":215,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes":{"entryPoint":178,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes_calldata":{"entryPoint":557,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":721,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_bytes_dyn":{"entryPoint":399,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":334,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_bytes_dyn":{"entryPoint":376,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":570,"id":null,"parameterSlots":1,"returnSlots":1},"calldata_array_index_access_bytes_calldata_dyn_calldata":{"entryPoint":487,"id":null,"parameterSlots":3,"returnSlots":2},"copy_memory_to_memory_with_cleanup":{"entryPoint":145,"id":null,"parameterSlots":3,"returnSlots":0},"extract_returndata":{"entryPoint":597,"id":null,"parameterSlots":0,"returnSlots":1},"fun_multicall":{"entryPoint":758,"id":10627,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_bytes_dyn":{"entryPoint":738,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x32":{"entryPoint":467,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":314,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361015610011575f80fd5b5f3560e01c63ac9650d814610024575f80fd5b3461008d57602036600319011261008d576001600160401b0360043581811161008d573660238201121561008d57806004013591821161008d573660248360051b8301011161008d5761008991602461007d92016102f6565b604051918291826100d7565b0390f35b5f80fd5b5f5b8381106100a25750505f910152565b8181015183820152602001610093565b906020916100cb81518092818552858086019101610091565b601f01601f1916010190565b6020808201906020835283518092526040830192602060408460051b8301019501935f915b84831061010c5750505050505090565b909192939495848061012a600193603f198682030187528a516100b2565b98019301930191949392906100fc565b634e487b7160e01b5f52604160045260245ffd5b6040519190601f01601f191682016001600160401b0381118382101761017357604052565b61013a565b6001600160401b0381116101735760051b60200190565b906101a161019c83610178565b61014e565b82815280926101b2601f1991610178565b01905f5b8281106101c257505050565b8060606020809385010152016101b6565b634e487b7160e01b5f52603260045260245ffd5b91908110156102285760051b81013590601e198136030182121561008d5701803591906001600160401b03831161008d57602001823603811361008d579190565b6101d3565b908092918237015f815290565b6001600160401b03811161017357601f01601f191660200190565b3d15610275573d9061026961019c8361023a565b9182523d5f602084013e565b606090565b60208183031261008d578051906001600160401b03821161008d570181601f8201121561008d5780516102af61019c8261023a565b928184526020828401011161008d576102ce9160208085019101610091565b90565b9060206102ce9281815201906100b2565b80518210156102285760209160051b010190565b9190916103028361018f565b925f5b81811061031157505050565b5f8061031e8385876101e7565b6040939161033085518093819361022d565b0390305af49061033e610255565b911561036557509060019161035382886102e2565b5261035e81876102e2565b5001610305565b90604481511061008d5761039f61038a6004928381015160248091830101910161027a565b925162461bcd60e51b815292839283016102d1565b0390fdfea2646970667358221220d9a68602f0ba26c260693f964022e833de8acb2d4b75a967a3211f2320903de564736f6c63430008170033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0xAC9650D8 EQ PUSH2 0x24 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x8D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x8D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x8D JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x8D JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x8D JUMPI CALLDATASIZE PUSH1 0x24 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD GT PUSH2 0x8D JUMPI PUSH2 0x89 SWAP2 PUSH1 0x24 PUSH2 0x7D SWAP3 ADD PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xD7 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0xA2 JUMPI POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x93 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0xCB DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x91 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD SWAP1 PUSH1 0x20 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP3 PUSH1 0x20 PUSH1 0x40 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x10C JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x12A PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0xB2 JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0xFC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x173 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x13A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x173 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1A1 PUSH2 0x19C DUP4 PUSH2 0x178 JUMP JUMPDEST PUSH2 0x14E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1B2 PUSH1 0x1F NOT SWAP2 PUSH2 0x178 JUMP JUMPDEST ADD SWAP1 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1C2 JUMPI POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x60 PUSH1 0x20 DUP1 SWAP4 DUP6 ADD ADD MSTORE ADD PUSH2 0x1B6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x228 JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x8D JUMPI ADD DUP1 CALLDATALOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x8D JUMPI PUSH1 0x20 ADD DUP3 CALLDATASIZE SUB DUP2 SGT PUSH2 0x8D JUMPI SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST SWAP1 DUP1 SWAP3 SWAP2 DUP3 CALLDATACOPY ADD PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x173 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x275 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x269 PUSH2 0x19C DUP4 PUSH2 0x23A JUMP JUMPDEST SWAP2 DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x8D JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x8D JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x8D JUMPI DUP1 MLOAD PUSH2 0x2AF PUSH2 0x19C DUP3 PUSH2 0x23A JUMP JUMPDEST SWAP3 DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x8D JUMPI PUSH2 0x2CE SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x91 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x2CE SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0xB2 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x228 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x302 DUP4 PUSH2 0x18F JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x311 JUMPI POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x31E DUP4 DUP6 DUP8 PUSH2 0x1E7 JUMP JUMPDEST PUSH1 0x40 SWAP4 SWAP2 PUSH2 0x330 DUP6 MLOAD DUP1 SWAP4 DUP2 SWAP4 PUSH2 0x22D JUMP JUMPDEST SUB SWAP1 ADDRESS GAS DELEGATECALL SWAP1 PUSH2 0x33E PUSH2 0x255 JUMP JUMPDEST SWAP2 ISZERO PUSH2 0x365 JUMPI POP SWAP1 PUSH1 0x1 SWAP2 PUSH2 0x353 DUP3 DUP9 PUSH2 0x2E2 JUMP JUMPDEST MSTORE PUSH2 0x35E DUP2 DUP8 PUSH2 0x2E2 JUMP JUMPDEST POP ADD PUSH2 0x305 JUMP JUMPDEST SWAP1 PUSH1 0x44 DUP2 MLOAD LT PUSH2 0x8D JUMPI PUSH2 0x39F PUSH2 0x38A PUSH1 0x4 SWAP3 DUP4 DUP2 ADD MLOAD PUSH1 0x24 DUP1 SWAP2 DUP4 ADD ADD SWAP2 ADD PUSH2 0x27A JUMP JUMPDEST SWAP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 DUP4 ADD PUSH2 0x2D1 JUMP JUMPDEST SUB SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0xA6 DUP7 MUL CREATE 0xBA 0x26 0xC2 PUSH1 0x69 EXTCODEHASH SWAP7 BLOCKHASH 0x22 0xE8 CALLER 0xDE DUP11 0xCB 0x2D 0x4B PUSH22 0xA967A3211F2320903DE564736F6C6343000817003300 ","sourceMap":"474:1962:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;474:1962:36;;;;-1:-1:-1;;;;;474:1962:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;474:1962:36;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;474:1962:36;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;474:1962:36;;;-1:-1:-1;;;;;474:1962:36;;;;;;;;;;:::o;:::-;;:::i;:::-;-1:-1:-1;;;;;474:1962:36;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;474:1962:36;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;474:1962:36;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;474:1962:36;;;;;;-1:-1:-1;;474:1962:36;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;474:1962:36;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;474:1962:36;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;614:1480::-;;;;757:24;;;:::i;:::-;840:13;852:1;855:15;;;;;;614:1480;;;:::o;872:3::-;852:1;1571:7;;;;;;:::i;:::-;474:1962;;;;;;;;;;;:::i;:::-;1544:35;1552:4;;1544:35;;;;;:::i;:::-;1648:8;;1644:359;;2017:19;;474:1962;2017:19;;;;;:::i;:::-;;;;;;:::i;:::-;;474:1962;840:13;;1644:359;474:1962;1776:2;474:1962;;1760:18;1756:32;;1952:36;1959:28;1859:76;;;;;474:1962;1959:28;;;;;;;;;:::i;:::-;474:1962;;-1:-1:-1;;;1952:36:36;;474:1962;;;1952:36;;;:::i;:::-;;;"},"methodIdentifiers":{"multicall(bytes[])":"ac9650d8"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://docs.openzeppelin.com/upgrades-plugins/1.x/faq#delegatecall-selfdestruct for more details.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"MultiCallerUpgradeable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Logic is 100% copied from \\\"@uma/core/contracts/common/implementation/MultiCaller.sol\\\" but one comment is added to clarify why we allow delegatecall() in this contract, which is typically unsafe for use in upgradeable implementation contracts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/upgradeable/MultiCallerUpgradeable.sol\":\"MultiCallerUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/upgradeable/MultiCallerUpgradeable.sol\":{\"keccak256\":\"0x5991e43af9a1389be25119b0e38ce974ae5ba9644b0a3833a2ec95d91f792cb9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b64e97cab30636c478421fcdba771f0fdaeaf390d237e311f44ae513215926db\",\"dweb:/ipfs/QmXFDXm8KijimPvnU7V97N1m2H3SUKat7JHFuL7dfTUJtY\"]}},\"version\":1}"}}}}}