{"id":"d247ddff3c2534f1f76eb0ac2b7014c3","_format":"hh-sol-build-info-1","solcVersion":"0.8.23","solcLongVersion":"0.8.23+commit.f704f362","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.2) (utils/cryptography/MerkleProof.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates merkle trees that are safe\n * against this attack out of the box.\n */\nlibrary MerkleProof {\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Calldata version of {verify}\n     *\n     * _Available since v4.7._\n     */\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leafs & pre-images are assumed to be sorted.\n     *\n     * _Available since v4.4._\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Calldata version of {processProof}\n     *\n     * _Available since v4.7._\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Calldata version of {multiProofVerify}\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofLen = proof.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proofLen - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            require(proofPos == proofLen, \"MerkleProof: invalid multiproof\");\n            unchecked {\n                return hashes[totalHashes - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Calldata version of {processMultiProof}.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofLen = proof.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proofLen - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            require(proofPos == proofLen, \"MerkleProof: invalid multiproof\");\n            unchecked {\n                return hashes[totalHashes - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\n    }\n\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedSafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SignedSafeMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SignedSafeMath` is no longer needed starting with Solidity 0.8. The compiler\n * now has built in overflow checking.\n */\nlibrary SignedSafeMath {\n    /**\n     * @dev Returns the multiplication of two signed integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(int256 a, int256 b) internal pure returns (int256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two signed integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(int256 a, int256 b) internal pure returns (int256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two signed integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(int256 a, int256 b) internal pure returns (int256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the addition of two signed integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(int256 a, int256 b) internal pure returns (int256) {\n        return a + b;\n    }\n}\n"},"@uma/core/contracts/common/implementation/FixedPoint.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/utils/math/SignedSafeMath.sol\";\n\n/**\n * @title Library for fixed point arithmetic on uints\n */\nlibrary FixedPoint {\n    using SafeMath for uint256;\n    using SignedSafeMath for int256;\n\n    // Supports 18 decimals. E.g., 1e18 represents \"1\", 5e17 represents \"0.5\".\n    // For unsigned values:\n    //   This can represent a value up to (2^256 - 1)/10^18 = ~10^59. 10^59 will be stored internally as uint256 10^77.\n    uint256 private constant FP_SCALING_FACTOR = 10**18;\n\n    // --------------------------------------- UNSIGNED -----------------------------------------------------------------------------\n    struct Unsigned {\n        uint256 rawValue;\n    }\n\n    /**\n     * @notice Constructs an `Unsigned` from an unscaled uint, e.g., `b=5` gets stored internally as `5*(10**18)`.\n     * @param a uint to convert into a FixedPoint.\n     * @return the converted FixedPoint.\n     */\n    function fromUnscaledUint(uint256 a) internal pure returns (Unsigned memory) {\n        return Unsigned(a.mul(FP_SCALING_FACTOR));\n    }\n\n    /**\n     * @notice Whether `a` is equal to `b`.\n     * @param a a FixedPoint.\n     * @param b a uint256.\n     * @return True if equal, or False.\n     */\n    function isEqual(Unsigned memory a, uint256 b) internal pure returns (bool) {\n        return a.rawValue == fromUnscaledUint(b).rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is equal to `b`.\n     * @param a a FixedPoint.\n     * @param b a FixedPoint.\n     * @return True if equal, or False.\n     */\n    function isEqual(Unsigned memory a, Unsigned memory b) internal pure returns (bool) {\n        return a.rawValue == b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is greater than `b`.\n     * @param a a FixedPoint.\n     * @param b a FixedPoint.\n     * @return True if `a > b`, or False.\n     */\n    function isGreaterThan(Unsigned memory a, Unsigned memory b) internal pure returns (bool) {\n        return a.rawValue > b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is greater than `b`.\n     * @param a a FixedPoint.\n     * @param b a uint256.\n     * @return True if `a > b`, or False.\n     */\n    function isGreaterThan(Unsigned memory a, uint256 b) internal pure returns (bool) {\n        return a.rawValue > fromUnscaledUint(b).rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is greater than `b`.\n     * @param a a uint256.\n     * @param b a FixedPoint.\n     * @return True if `a > b`, or False.\n     */\n    function isGreaterThan(uint256 a, Unsigned memory b) internal pure returns (bool) {\n        return fromUnscaledUint(a).rawValue > b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is greater than or equal to `b`.\n     * @param a a FixedPoint.\n     * @param b a FixedPoint.\n     * @return True if `a >= b`, or False.\n     */\n    function isGreaterThanOrEqual(Unsigned memory a, Unsigned memory b) internal pure returns (bool) {\n        return a.rawValue >= b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is greater than or equal to `b`.\n     * @param a a FixedPoint.\n     * @param b a uint256.\n     * @return True if `a >= b`, or False.\n     */\n    function isGreaterThanOrEqual(Unsigned memory a, uint256 b) internal pure returns (bool) {\n        return a.rawValue >= fromUnscaledUint(b).rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is greater than or equal to `b`.\n     * @param a a uint256.\n     * @param b a FixedPoint.\n     * @return True if `a >= b`, or False.\n     */\n    function isGreaterThanOrEqual(uint256 a, Unsigned memory b) internal pure returns (bool) {\n        return fromUnscaledUint(a).rawValue >= b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is less than `b`.\n     * @param a a FixedPoint.\n     * @param b a FixedPoint.\n     * @return True if `a < b`, or False.\n     */\n    function isLessThan(Unsigned memory a, Unsigned memory b) internal pure returns (bool) {\n        return a.rawValue < b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is less than `b`.\n     * @param a a FixedPoint.\n     * @param b a uint256.\n     * @return True if `a < b`, or False.\n     */\n    function isLessThan(Unsigned memory a, uint256 b) internal pure returns (bool) {\n        return a.rawValue < fromUnscaledUint(b).rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is less than `b`.\n     * @param a a uint256.\n     * @param b a FixedPoint.\n     * @return True if `a < b`, or False.\n     */\n    function isLessThan(uint256 a, Unsigned memory b) internal pure returns (bool) {\n        return fromUnscaledUint(a).rawValue < b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is less than or equal to `b`.\n     * @param a a FixedPoint.\n     * @param b a FixedPoint.\n     * @return True if `a <= b`, or False.\n     */\n    function isLessThanOrEqual(Unsigned memory a, Unsigned memory b) internal pure returns (bool) {\n        return a.rawValue <= b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is less than or equal to `b`.\n     * @param a a FixedPoint.\n     * @param b a uint256.\n     * @return True if `a <= b`, or False.\n     */\n    function isLessThanOrEqual(Unsigned memory a, uint256 b) internal pure returns (bool) {\n        return a.rawValue <= fromUnscaledUint(b).rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is less than or equal to `b`.\n     * @param a a uint256.\n     * @param b a FixedPoint.\n     * @return True if `a <= b`, or False.\n     */\n    function isLessThanOrEqual(uint256 a, Unsigned memory b) internal pure returns (bool) {\n        return fromUnscaledUint(a).rawValue <= b.rawValue;\n    }\n\n    /**\n     * @notice The minimum of `a` and `b`.\n     * @param a a FixedPoint.\n     * @param b a FixedPoint.\n     * @return the minimum of `a` and `b`.\n     */\n    function min(Unsigned memory a, Unsigned memory b) internal pure returns (Unsigned memory) {\n        return a.rawValue < b.rawValue ? a : b;\n    }\n\n    /**\n     * @notice The maximum of `a` and `b`.\n     * @param a a FixedPoint.\n     * @param b a FixedPoint.\n     * @return the maximum of `a` and `b`.\n     */\n    function max(Unsigned memory a, Unsigned memory b) internal pure returns (Unsigned memory) {\n        return a.rawValue > b.rawValue ? a : b;\n    }\n\n    /**\n     * @notice Adds two `Unsigned`s, reverting on overflow.\n     * @param a a FixedPoint.\n     * @param b a FixedPoint.\n     * @return the sum of `a` and `b`.\n     */\n    function add(Unsigned memory a, Unsigned memory b) internal pure returns (Unsigned memory) {\n        return Unsigned(a.rawValue.add(b.rawValue));\n    }\n\n    /**\n     * @notice Adds an `Unsigned` to an unscaled uint, reverting on overflow.\n     * @param a a FixedPoint.\n     * @param b a uint256.\n     * @return the sum of `a` and `b`.\n     */\n    function add(Unsigned memory a, uint256 b) internal pure returns (Unsigned memory) {\n        return add(a, fromUnscaledUint(b));\n    }\n\n    /**\n     * @notice Subtracts two `Unsigned`s, reverting on overflow.\n     * @param a a FixedPoint.\n     * @param b a FixedPoint.\n     * @return the difference of `a` and `b`.\n     */\n    function sub(Unsigned memory a, Unsigned memory b) internal pure returns (Unsigned memory) {\n        return Unsigned(a.rawValue.sub(b.rawValue));\n    }\n\n    /**\n     * @notice Subtracts an unscaled uint256 from an `Unsigned`, reverting on overflow.\n     * @param a a FixedPoint.\n     * @param b a uint256.\n     * @return the difference of `a` and `b`.\n     */\n    function sub(Unsigned memory a, uint256 b) internal pure returns (Unsigned memory) {\n        return sub(a, fromUnscaledUint(b));\n    }\n\n    /**\n     * @notice Subtracts an `Unsigned` from an unscaled uint256, reverting on overflow.\n     * @param a a uint256.\n     * @param b a FixedPoint.\n     * @return the difference of `a` and `b`.\n     */\n    function sub(uint256 a, Unsigned memory b) internal pure returns (Unsigned memory) {\n        return sub(fromUnscaledUint(a), b);\n    }\n\n    /**\n     * @notice Multiplies two `Unsigned`s, reverting on overflow.\n     * @dev This will \"floor\" the product.\n     * @param a a FixedPoint.\n     * @param b a FixedPoint.\n     * @return the product of `a` and `b`.\n     */\n    function mul(Unsigned memory a, Unsigned memory b) internal pure returns (Unsigned memory) {\n        // There are two caveats with this computation:\n        // 1. Max output for the represented number is ~10^41, otherwise an intermediate value overflows. 10^41 is\n        // stored internally as a uint256 ~10^59.\n        // 2. Results that can't be represented exactly are truncated not rounded. E.g., 1.4 * 2e-18 = 2.8e-18, which\n        // would round to 3, but this computation produces the result 2.\n        // No need to use SafeMath because FP_SCALING_FACTOR != 0.\n        return Unsigned(a.rawValue.mul(b.rawValue) / FP_SCALING_FACTOR);\n    }\n\n    /**\n     * @notice Multiplies an `Unsigned` and an unscaled uint256, reverting on overflow.\n     * @dev This will \"floor\" the product.\n     * @param a a FixedPoint.\n     * @param b a uint256.\n     * @return the product of `a` and `b`.\n     */\n    function mul(Unsigned memory a, uint256 b) internal pure returns (Unsigned memory) {\n        return Unsigned(a.rawValue.mul(b));\n    }\n\n    /**\n     * @notice Multiplies two `Unsigned`s and \"ceil's\" the product, reverting on overflow.\n     * @param a a FixedPoint.\n     * @param b a FixedPoint.\n     * @return the product of `a` and `b`.\n     */\n    function mulCeil(Unsigned memory a, Unsigned memory b) internal pure returns (Unsigned memory) {\n        uint256 mulRaw = a.rawValue.mul(b.rawValue);\n        uint256 mulFloor = mulRaw / FP_SCALING_FACTOR;\n        uint256 mod = mulRaw.mod(FP_SCALING_FACTOR);\n        if (mod != 0) {\n            return Unsigned(mulFloor.add(1));\n        } else {\n            return Unsigned(mulFloor);\n        }\n    }\n\n    /**\n     * @notice Multiplies an `Unsigned` and an unscaled uint256 and \"ceil's\" the product, reverting on overflow.\n     * @param a a FixedPoint.\n     * @param b a FixedPoint.\n     * @return the product of `a` and `b`.\n     */\n    function mulCeil(Unsigned memory a, uint256 b) internal pure returns (Unsigned memory) {\n        // Since b is an uint, there is no risk of truncation and we can just mul it normally\n        return Unsigned(a.rawValue.mul(b));\n    }\n\n    /**\n     * @notice Divides one `Unsigned` by an `Unsigned`, reverting on overflow or division by 0.\n     * @dev This will \"floor\" the quotient.\n     * @param a a FixedPoint numerator.\n     * @param b a FixedPoint denominator.\n     * @return the quotient of `a` divided by `b`.\n     */\n    function div(Unsigned memory a, Unsigned memory b) internal pure returns (Unsigned memory) {\n        // There are two caveats with this computation:\n        // 1. Max value for the number dividend `a` represents is ~10^41, otherwise an intermediate value overflows.\n        // 10^41 is stored internally as a uint256 10^59.\n        // 2. Results that can't be represented exactly are truncated not rounded. E.g., 2 / 3 = 0.6 repeating, which\n        // would round to 0.666666666666666667, but this computation produces the result 0.666666666666666666.\n        return Unsigned(a.rawValue.mul(FP_SCALING_FACTOR).div(b.rawValue));\n    }\n\n    /**\n     * @notice Divides one `Unsigned` by an unscaled uint256, reverting on overflow or division by 0.\n     * @dev This will \"floor\" the quotient.\n     * @param a a FixedPoint numerator.\n     * @param b a uint256 denominator.\n     * @return the quotient of `a` divided by `b`.\n     */\n    function div(Unsigned memory a, uint256 b) internal pure returns (Unsigned memory) {\n        return Unsigned(a.rawValue.div(b));\n    }\n\n    /**\n     * @notice Divides one unscaled uint256 by an `Unsigned`, reverting on overflow or division by 0.\n     * @dev This will \"floor\" the quotient.\n     * @param a a uint256 numerator.\n     * @param b a FixedPoint denominator.\n     * @return the quotient of `a` divided by `b`.\n     */\n    function div(uint256 a, Unsigned memory b) internal pure returns (Unsigned memory) {\n        return div(fromUnscaledUint(a), b);\n    }\n\n    /**\n     * @notice Divides one `Unsigned` by an `Unsigned` and \"ceil's\" the quotient, reverting on overflow or division by 0.\n     * @param a a FixedPoint numerator.\n     * @param b a FixedPoint denominator.\n     * @return the quotient of `a` divided by `b`.\n     */\n    function divCeil(Unsigned memory a, Unsigned memory b) internal pure returns (Unsigned memory) {\n        uint256 aScaled = a.rawValue.mul(FP_SCALING_FACTOR);\n        uint256 divFloor = aScaled.div(b.rawValue);\n        uint256 mod = aScaled.mod(b.rawValue);\n        if (mod != 0) {\n            return Unsigned(divFloor.add(1));\n        } else {\n            return Unsigned(divFloor);\n        }\n    }\n\n    /**\n     * @notice Divides one `Unsigned` by an unscaled uint256 and \"ceil's\" the quotient, reverting on overflow or division by 0.\n     * @param a a FixedPoint numerator.\n     * @param b a uint256 denominator.\n     * @return the quotient of `a` divided by `b`.\n     */\n    function divCeil(Unsigned memory a, uint256 b) internal pure returns (Unsigned memory) {\n        // Because it is possible that a quotient gets truncated, we can't just call \"Unsigned(a.rawValue.div(b))\"\n        // similarly to mulCeil with a uint256 as the second parameter. Therefore we need to convert b into an Unsigned.\n        // This creates the possibility of overflow if b is very large.\n        return divCeil(a, fromUnscaledUint(b));\n    }\n\n    /**\n     * @notice Raises an `Unsigned` to the power of an unscaled uint256, reverting on overflow. E.g., `b=2` squares `a`.\n     * @dev This will \"floor\" the result.\n     * @param a a FixedPoint numerator.\n     * @param b a uint256 denominator.\n     * @return output is `a` to the power of `b`.\n     */\n    function pow(Unsigned memory a, uint256 b) internal pure returns (Unsigned memory output) {\n        output = fromUnscaledUint(1);\n        for (uint256 i = 0; i < b; i = i.add(1)) {\n            output = mul(output, a);\n        }\n    }\n\n    // ------------------------------------------------- SIGNED -------------------------------------------------------------\n    // Supports 18 decimals. E.g., 1e18 represents \"1\", 5e17 represents \"0.5\".\n    // For signed values:\n    //   This can represent a value up (or down) to +-(2^255 - 1)/10^18 = ~10^58. 10^58 will be stored internally as int256 10^76.\n    int256 private constant SFP_SCALING_FACTOR = 10**18;\n\n    struct Signed {\n        int256 rawValue;\n    }\n\n    function fromSigned(Signed memory a) internal pure returns (Unsigned memory) {\n        require(a.rawValue >= 0, \"Negative value provided\");\n        return Unsigned(uint256(a.rawValue));\n    }\n\n    function fromUnsigned(Unsigned memory a) internal pure returns (Signed memory) {\n        require(a.rawValue <= uint256(type(int256).max), \"Unsigned too large\");\n        return Signed(int256(a.rawValue));\n    }\n\n    /**\n     * @notice Constructs a `Signed` from an unscaled int, e.g., `b=5` gets stored internally as `5*(10**18)`.\n     * @param a int to convert into a FixedPoint.Signed.\n     * @return the converted FixedPoint.Signed.\n     */\n    function fromUnscaledInt(int256 a) internal pure returns (Signed memory) {\n        return Signed(a.mul(SFP_SCALING_FACTOR));\n    }\n\n    /**\n     * @notice Whether `a` is equal to `b`.\n     * @param a a FixedPoint.Signed.\n     * @param b a int256.\n     * @return True if equal, or False.\n     */\n    function isEqual(Signed memory a, int256 b) internal pure returns (bool) {\n        return a.rawValue == fromUnscaledInt(b).rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is equal to `b`.\n     * @param a a FixedPoint.Signed.\n     * @param b a FixedPoint.Signed.\n     * @return True if equal, or False.\n     */\n    function isEqual(Signed memory a, Signed memory b) internal pure returns (bool) {\n        return a.rawValue == b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is greater than `b`.\n     * @param a a FixedPoint.Signed.\n     * @param b a FixedPoint.Signed.\n     * @return True if `a > b`, or False.\n     */\n    function isGreaterThan(Signed memory a, Signed memory b) internal pure returns (bool) {\n        return a.rawValue > b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is greater than `b`.\n     * @param a a FixedPoint.Signed.\n     * @param b an int256.\n     * @return True if `a > b`, or False.\n     */\n    function isGreaterThan(Signed memory a, int256 b) internal pure returns (bool) {\n        return a.rawValue > fromUnscaledInt(b).rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is greater than `b`.\n     * @param a an int256.\n     * @param b a FixedPoint.Signed.\n     * @return True if `a > b`, or False.\n     */\n    function isGreaterThan(int256 a, Signed memory b) internal pure returns (bool) {\n        return fromUnscaledInt(a).rawValue > b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is greater than or equal to `b`.\n     * @param a a FixedPoint.Signed.\n     * @param b a FixedPoint.Signed.\n     * @return True if `a >= b`, or False.\n     */\n    function isGreaterThanOrEqual(Signed memory a, Signed memory b) internal pure returns (bool) {\n        return a.rawValue >= b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is greater than or equal to `b`.\n     * @param a a FixedPoint.Signed.\n     * @param b an int256.\n     * @return True if `a >= b`, or False.\n     */\n    function isGreaterThanOrEqual(Signed memory a, int256 b) internal pure returns (bool) {\n        return a.rawValue >= fromUnscaledInt(b).rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is greater than or equal to `b`.\n     * @param a an int256.\n     * @param b a FixedPoint.Signed.\n     * @return True if `a >= b`, or False.\n     */\n    function isGreaterThanOrEqual(int256 a, Signed memory b) internal pure returns (bool) {\n        return fromUnscaledInt(a).rawValue >= b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is less than `b`.\n     * @param a a FixedPoint.Signed.\n     * @param b a FixedPoint.Signed.\n     * @return True if `a < b`, or False.\n     */\n    function isLessThan(Signed memory a, Signed memory b) internal pure returns (bool) {\n        return a.rawValue < b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is less than `b`.\n     * @param a a FixedPoint.Signed.\n     * @param b an int256.\n     * @return True if `a < b`, or False.\n     */\n    function isLessThan(Signed memory a, int256 b) internal pure returns (bool) {\n        return a.rawValue < fromUnscaledInt(b).rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is less than `b`.\n     * @param a an int256.\n     * @param b a FixedPoint.Signed.\n     * @return True if `a < b`, or False.\n     */\n    function isLessThan(int256 a, Signed memory b) internal pure returns (bool) {\n        return fromUnscaledInt(a).rawValue < b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is less than or equal to `b`.\n     * @param a a FixedPoint.Signed.\n     * @param b a FixedPoint.Signed.\n     * @return True if `a <= b`, or False.\n     */\n    function isLessThanOrEqual(Signed memory a, Signed memory b) internal pure returns (bool) {\n        return a.rawValue <= b.rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is less than or equal to `b`.\n     * @param a a FixedPoint.Signed.\n     * @param b an int256.\n     * @return True if `a <= b`, or False.\n     */\n    function isLessThanOrEqual(Signed memory a, int256 b) internal pure returns (bool) {\n        return a.rawValue <= fromUnscaledInt(b).rawValue;\n    }\n\n    /**\n     * @notice Whether `a` is less than or equal to `b`.\n     * @param a an int256.\n     * @param b a FixedPoint.Signed.\n     * @return True if `a <= b`, or False.\n     */\n    function isLessThanOrEqual(int256 a, Signed memory b) internal pure returns (bool) {\n        return fromUnscaledInt(a).rawValue <= b.rawValue;\n    }\n\n    /**\n     * @notice The minimum of `a` and `b`.\n     * @param a a FixedPoint.Signed.\n     * @param b a FixedPoint.Signed.\n     * @return the minimum of `a` and `b`.\n     */\n    function min(Signed memory a, Signed memory b) internal pure returns (Signed memory) {\n        return a.rawValue < b.rawValue ? a : b;\n    }\n\n    /**\n     * @notice The maximum of `a` and `b`.\n     * @param a a FixedPoint.Signed.\n     * @param b a FixedPoint.Signed.\n     * @return the maximum of `a` and `b`.\n     */\n    function max(Signed memory a, Signed memory b) internal pure returns (Signed memory) {\n        return a.rawValue > b.rawValue ? a : b;\n    }\n\n    /**\n     * @notice Adds two `Signed`s, reverting on overflow.\n     * @param a a FixedPoint.Signed.\n     * @param b a FixedPoint.Signed.\n     * @return the sum of `a` and `b`.\n     */\n    function add(Signed memory a, Signed memory b) internal pure returns (Signed memory) {\n        return Signed(a.rawValue.add(b.rawValue));\n    }\n\n    /**\n     * @notice Adds an `Signed` to an unscaled int, reverting on overflow.\n     * @param a a FixedPoint.Signed.\n     * @param b an int256.\n     * @return the sum of `a` and `b`.\n     */\n    function add(Signed memory a, int256 b) internal pure returns (Signed memory) {\n        return add(a, fromUnscaledInt(b));\n    }\n\n    /**\n     * @notice Subtracts two `Signed`s, reverting on overflow.\n     * @param a a FixedPoint.Signed.\n     * @param b a FixedPoint.Signed.\n     * @return the difference of `a` and `b`.\n     */\n    function sub(Signed memory a, Signed memory b) internal pure returns (Signed memory) {\n        return Signed(a.rawValue.sub(b.rawValue));\n    }\n\n    /**\n     * @notice Subtracts an unscaled int256 from an `Signed`, reverting on overflow.\n     * @param a a FixedPoint.Signed.\n     * @param b an int256.\n     * @return the difference of `a` and `b`.\n     */\n    function sub(Signed memory a, int256 b) internal pure returns (Signed memory) {\n        return sub(a, fromUnscaledInt(b));\n    }\n\n    /**\n     * @notice Subtracts an `Signed` from an unscaled int256, reverting on overflow.\n     * @param a an int256.\n     * @param b a FixedPoint.Signed.\n     * @return the difference of `a` and `b`.\n     */\n    function sub(int256 a, Signed memory b) internal pure returns (Signed memory) {\n        return sub(fromUnscaledInt(a), b);\n    }\n\n    /**\n     * @notice Multiplies two `Signed`s, reverting on overflow.\n     * @dev This will \"floor\" the product.\n     * @param a a FixedPoint.Signed.\n     * @param b a FixedPoint.Signed.\n     * @return the product of `a` and `b`.\n     */\n    function mul(Signed memory a, Signed memory b) internal pure returns (Signed memory) {\n        // There are two caveats with this computation:\n        // 1. Max output for the represented number is ~10^41, otherwise an intermediate value overflows. 10^41 is\n        // stored internally as an int256 ~10^59.\n        // 2. Results that can't be represented exactly are truncated not rounded. E.g., 1.4 * 2e-18 = 2.8e-18, which\n        // would round to 3, but this computation produces the result 2.\n        // No need to use SafeMath because SFP_SCALING_FACTOR != 0.\n        return Signed(a.rawValue.mul(b.rawValue) / SFP_SCALING_FACTOR);\n    }\n\n    /**\n     * @notice Multiplies an `Signed` and an unscaled int256, reverting on overflow.\n     * @dev This will \"floor\" the product.\n     * @param a a FixedPoint.Signed.\n     * @param b an int256.\n     * @return the product of `a` and `b`.\n     */\n    function mul(Signed memory a, int256 b) internal pure returns (Signed memory) {\n        return Signed(a.rawValue.mul(b));\n    }\n\n    /**\n     * @notice Multiplies two `Signed`s and \"ceil's\" the product, reverting on overflow.\n     * @param a a FixedPoint.Signed.\n     * @param b a FixedPoint.Signed.\n     * @return the product of `a` and `b`.\n     */\n    function mulAwayFromZero(Signed memory a, Signed memory b) internal pure returns (Signed memory) {\n        int256 mulRaw = a.rawValue.mul(b.rawValue);\n        int256 mulTowardsZero = mulRaw / SFP_SCALING_FACTOR;\n        // Manual mod because SignedSafeMath doesn't support it.\n        int256 mod = mulRaw % SFP_SCALING_FACTOR;\n        if (mod != 0) {\n            bool isResultPositive = isLessThan(a, 0) == isLessThan(b, 0);\n            int256 valueToAdd = isResultPositive ? int256(1) : int256(-1);\n            return Signed(mulTowardsZero.add(valueToAdd));\n        } else {\n            return Signed(mulTowardsZero);\n        }\n    }\n\n    /**\n     * @notice Multiplies an `Signed` and an unscaled int256 and \"ceil's\" the product, reverting on overflow.\n     * @param a a FixedPoint.Signed.\n     * @param b a FixedPoint.Signed.\n     * @return the product of `a` and `b`.\n     */\n    function mulAwayFromZero(Signed memory a, int256 b) internal pure returns (Signed memory) {\n        // Since b is an int, there is no risk of truncation and we can just mul it normally\n        return Signed(a.rawValue.mul(b));\n    }\n\n    /**\n     * @notice Divides one `Signed` by an `Signed`, reverting on overflow or division by 0.\n     * @dev This will \"floor\" the quotient.\n     * @param a a FixedPoint numerator.\n     * @param b a FixedPoint denominator.\n     * @return the quotient of `a` divided by `b`.\n     */\n    function div(Signed memory a, Signed memory b) internal pure returns (Signed memory) {\n        // There are two caveats with this computation:\n        // 1. Max value for the number dividend `a` represents is ~10^41, otherwise an intermediate value overflows.\n        // 10^41 is stored internally as an int256 10^59.\n        // 2. Results that can't be represented exactly are truncated not rounded. E.g., 2 / 3 = 0.6 repeating, which\n        // would round to 0.666666666666666667, but this computation produces the result 0.666666666666666666.\n        return Signed(a.rawValue.mul(SFP_SCALING_FACTOR).div(b.rawValue));\n    }\n\n    /**\n     * @notice Divides one `Signed` by an unscaled int256, reverting on overflow or division by 0.\n     * @dev This will \"floor\" the quotient.\n     * @param a a FixedPoint numerator.\n     * @param b an int256 denominator.\n     * @return the quotient of `a` divided by `b`.\n     */\n    function div(Signed memory a, int256 b) internal pure returns (Signed memory) {\n        return Signed(a.rawValue.div(b));\n    }\n\n    /**\n     * @notice Divides one unscaled int256 by an `Signed`, reverting on overflow or division by 0.\n     * @dev This will \"floor\" the quotient.\n     * @param a an int256 numerator.\n     * @param b a FixedPoint denominator.\n     * @return the quotient of `a` divided by `b`.\n     */\n    function div(int256 a, Signed memory b) internal pure returns (Signed memory) {\n        return div(fromUnscaledInt(a), b);\n    }\n\n    /**\n     * @notice Divides one `Signed` by an `Signed` and \"ceil's\" the quotient, reverting on overflow or division by 0.\n     * @param a a FixedPoint numerator.\n     * @param b a FixedPoint denominator.\n     * @return the quotient of `a` divided by `b`.\n     */\n    function divAwayFromZero(Signed memory a, Signed memory b) internal pure returns (Signed memory) {\n        int256 aScaled = a.rawValue.mul(SFP_SCALING_FACTOR);\n        int256 divTowardsZero = aScaled.div(b.rawValue);\n        // Manual mod because SignedSafeMath doesn't support it.\n        int256 mod = aScaled % b.rawValue;\n        if (mod != 0) {\n            bool isResultPositive = isLessThan(a, 0) == isLessThan(b, 0);\n            int256 valueToAdd = isResultPositive ? int256(1) : int256(-1);\n            return Signed(divTowardsZero.add(valueToAdd));\n        } else {\n            return Signed(divTowardsZero);\n        }\n    }\n\n    /**\n     * @notice Divides one `Signed` by an unscaled int256 and \"ceil's\" the quotient, reverting on overflow or division by 0.\n     * @param a a FixedPoint numerator.\n     * @param b an int256 denominator.\n     * @return the quotient of `a` divided by `b`.\n     */\n    function divAwayFromZero(Signed memory a, int256 b) internal pure returns (Signed memory) {\n        // Because it is possible that a quotient gets truncated, we can't just call \"Signed(a.rawValue.div(b))\"\n        // similarly to mulCeil with an int256 as the second parameter. Therefore we need to convert b into an Signed.\n        // This creates the possibility of overflow if b is very large.\n        return divAwayFromZero(a, fromUnscaledInt(b));\n    }\n\n    /**\n     * @notice Raises an `Signed` to the power of an unscaled uint256, reverting on overflow. E.g., `b=2` squares `a`.\n     * @dev This will \"floor\" the result.\n     * @param a a FixedPoint.Signed.\n     * @param b a uint256 (negative exponents are not allowed).\n     * @return output is `a` to the power of `b`.\n     */\n    function pow(Signed memory a, uint256 b) internal pure returns (Signed memory output) {\n        output = fromUnscaledInt(1);\n        for (uint256 i = 0; i < b; i = i.add(1)) {\n            output = mul(output, a);\n        }\n    }\n}\n"},"@uma/core/contracts/common/implementation/MultiCaller.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\n// This contract is taken from Uniswap's multi call implementation (https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/base/Multicall.sol)\n// and was modified to be solidity 0.8 compatible. Additionally, the method was restricted to only work with msg.value\n// set to 0 to avoid any nasty attack vectors on function calls that use value sent with deposits.\n\n/// @title MultiCaller\n/// @notice Enables calling multiple methods in a single call to the contract\ncontract MultiCaller {\n    function multicall(bytes[] calldata data) external returns (bytes[] memory results) {\n        results = new bytes[](data.length);\n        for (uint256 i = 0; i < data.length; i++) {\n            (bool success, bytes memory result) = address(this).delegatecall(data[i]);\n\n            if (!success) {\n                // Next 5 lines from https://ethereum.stackexchange.com/a/83577\n                if (result.length < 68) revert();\n                assembly {\n                    result := add(result, 0x04)\n                }\n                revert(abi.decode(result, (string)));\n            }\n\n            results[i] = result;\n        }\n    }\n}\n"},"@uma/core/contracts/common/implementation/Testable.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"./Timer.sol\";\n\n/**\n * @title Base class that provides time overrides, but only if being run in test mode.\n */\nabstract contract Testable {\n    // If the contract is being run in production, then `timerAddress` will be the 0x0 address.\n    // Note: this variable should be set on construction and never modified.\n    address public timerAddress;\n\n    /**\n     * @notice Constructs the Testable contract. Called by child contracts.\n     * @param _timerAddress Contract that stores the current time in a testing environment.\n     * Must be set to 0x0 for production environments that use live time.\n     */\n    constructor(address _timerAddress) {\n        timerAddress = _timerAddress;\n    }\n\n    /**\n     * @notice Reverts if not running in test mode.\n     */\n    modifier onlyIfTest {\n        require(timerAddress != address(0x0));\n        _;\n    }\n\n    /**\n     * @notice Sets the current time.\n     * @dev Will revert if not running in test mode.\n     * @param time timestamp to set current Testable time to.\n     */\n    function setCurrentTime(uint256 time) external onlyIfTest {\n        Timer(timerAddress).setCurrentTime(time);\n    }\n\n    /**\n     * @notice Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode.\n     * Otherwise, it will return the block timestamp.\n     * @return uint for the current Testable timestamp.\n     */\n    function getCurrentTime() public view virtual returns (uint256) {\n        if (timerAddress != address(0x0)) {\n            return Timer(timerAddress).getCurrentTime();\n        } else {\n            return block.timestamp; // solhint-disable-line not-rely-on-time\n        }\n    }\n}\n"},"@uma/core/contracts/common/implementation/Timer.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\n/**\n * @title Universal store of current contract time for testing environments.\n */\ncontract Timer {\n    uint256 private currentTime;\n\n    constructor() {\n        currentTime = block.timestamp; // solhint-disable-line not-rely-on-time\n    }\n\n    /**\n     * @notice Sets the current time.\n     * @dev Will revert if not running in test mode.\n     * @param time timestamp to set `currentTime` to.\n     */\n    function setCurrentTime(uint256 time) external {\n        currentTime = time;\n    }\n\n    /**\n     * @notice Gets the currentTime variable set in the Timer.\n     * @return uint256 for the current Testable timestamp.\n     */\n    function getCurrentTime() public view returns (uint256) {\n        return currentTime;\n    }\n}\n"},"@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\ninterface AddressWhitelistInterface {\n    function addToWhitelist(address newElement) external;\n\n    function removeFromWhitelist(address newElement) external;\n\n    function isOnWhitelist(address newElement) external view returns (bool);\n\n    function getWhitelist() external view returns (address[] memory);\n}\n"},"@uma/core/contracts/common/interfaces/ExpandedIERC20.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @title ERC20 interface that includes burn and mint methods.\n */\nabstract contract ExpandedIERC20 is IERC20 {\n    /**\n     * @notice Burns a specific amount of the caller's tokens.\n     * @dev Only burns the caller's tokens, so it is safe to leave this method permissionless.\n     */\n    function burn(uint256 value) external virtual;\n\n    /**\n     * @dev Burns `value` tokens owned by `recipient`.\n     * @param recipient address to burn tokens from.\n     * @param value amount of tokens to burn.\n     */\n    function burnFrom(address recipient, uint256 value) external virtual returns (bool);\n\n    /**\n     * @notice Mints tokens and adds them to the balance of the `to` address.\n     * @dev This method should be permissioned to only allow designated parties to mint tokens.\n     */\n    function mint(address to, uint256 value) external virtual returns (bool);\n\n    function addMinter(address account) external virtual;\n\n    function addBurner(address account) external virtual;\n\n    function resetOwner(address account) external virtual;\n}\n"},"@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\n/**\n * @title Stores common interface names used throughout the DVM by registration in the Finder.\n */\nlibrary OracleInterfaces {\n    bytes32 public constant Oracle = \"Oracle\";\n    bytes32 public constant IdentifierWhitelist = \"IdentifierWhitelist\";\n    bytes32 public constant Store = \"Store\";\n    bytes32 public constant FinancialContractsAdmin = \"FinancialContractsAdmin\";\n    bytes32 public constant Registry = \"Registry\";\n    bytes32 public constant CollateralWhitelist = \"CollateralWhitelist\";\n    bytes32 public constant OptimisticOracle = \"OptimisticOracle\";\n    bytes32 public constant OptimisticOracleV2 = \"OptimisticOracleV2\";\n    bytes32 public constant OptimisticOracleV3 = \"OptimisticOracleV3\";\n    bytes32 public constant Bridge = \"Bridge\";\n    bytes32 public constant GenericHandler = \"GenericHandler\";\n    bytes32 public constant SkinnyOptimisticOracle = \"SkinnyOptimisticOracle\";\n    bytes32 public constant ChildMessenger = \"ChildMessenger\";\n    bytes32 public constant OracleHub = \"OracleHub\";\n    bytes32 public constant OracleSpoke = \"OracleSpoke\";\n}\n\n/**\n * @title Commonly re-used values for contracts associated with the OptimisticOracle.\n */\nlibrary OptimisticOracleConstraints {\n    // Any price request submitted to the OptimisticOracle must contain ancillary data no larger than this value.\n    // This value must be <= the Voting contract's `ancillaryBytesLimit` constant value otherwise it is possible\n    // that a price can be requested to the OptimisticOracle successfully, but cannot be resolved by the DVM which\n    // refuses to accept a price request made with ancillary data length over a certain size.\n    uint256 public constant ancillaryBytesLimit = 8192;\n}\n"},"@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\n/**\n * @title Provides addresses of the live contracts implementing certain interfaces.\n * @dev Examples are the Oracle or Store interfaces.\n */\ninterface FinderInterface {\n    /**\n     * @notice Updates the address of the contract that implements `interfaceName`.\n     * @param interfaceName bytes32 encoding of the interface name that is either changed or registered.\n     * @param implementationAddress address of the deployed contract that implements the interface.\n     */\n    function changeImplementationAddress(bytes32 interfaceName, address implementationAddress) external;\n\n    /**\n     * @notice Gets the address of the contract that implements the given `interfaceName`.\n     * @param interfaceName queried interface.\n     * @return implementationAddress address of the deployed contract that implements the interface.\n     */\n    function getImplementationAddress(bytes32 interfaceName) external view returns (address);\n}\n"},"@uma/core/contracts/data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\n/**\n * @title Interface for whitelists of supported identifiers that the oracle can provide prices for.\n */\ninterface IdentifierWhitelistInterface {\n    /**\n     * @notice Adds the provided identifier as a supported identifier.\n     * @dev Price requests using this identifier will succeed after this call.\n     * @param identifier bytes32 encoding of the string identifier. Eg: BTC/USD.\n     */\n    function addSupportedIdentifier(bytes32 identifier) external;\n\n    /**\n     * @notice Removes the identifier from the whitelist.\n     * @dev Price requests using this identifier will no longer succeed after this call.\n     * @param identifier bytes32 encoding of the string identifier. Eg: BTC/USD.\n     */\n    function removeSupportedIdentifier(bytes32 identifier) external;\n\n    /**\n     * @notice Checks whether an identifier is on the whitelist.\n     * @param identifier bytes32 encoding of the string identifier. Eg: BTC/USD.\n     * @return bool if the identifier is supported (or not).\n     */\n    function isIdentifierSupported(bytes32 identifier) external view returns (bool);\n}\n"},"@uma/core/contracts/data-verification-mechanism/interfaces/StoreInterface.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"../../common/implementation/FixedPoint.sol\";\n\n/**\n * @title Interface that allows financial contracts to pay oracle fees for their use of the system.\n */\ninterface StoreInterface {\n    /**\n     * @notice Pays Oracle fees in ETH to the store.\n     * @dev To be used by contracts whose margin currency is ETH.\n     */\n    function payOracleFees() external payable;\n\n    /**\n     * @notice Pays oracle fees in the margin currency, erc20Address, to the store.\n     * @dev To be used if the margin currency is an ERC20 token rather than ETH.\n     * @param erc20Address address of the ERC20 token used to pay the fee.\n     * @param amount number of tokens to transfer. An approval for at least this amount must exist.\n     */\n    function payOracleFeesErc20(address erc20Address, FixedPoint.Unsigned calldata amount) external;\n\n    /**\n     * @notice Computes the regular oracle fees that a contract should pay for a period.\n     * @param startTime defines the beginning time from which the fee is paid.\n     * @param endTime end time until which the fee is paid.\n     * @param pfc \"profit from corruption\", or the maximum amount of margin currency that a\n     * token sponsor could extract from the contract through corrupting the price feed in their favor.\n     * @return regularFee amount owed for the duration from start to end time for the given pfc.\n     * @return latePenalty for paying the fee after the deadline.\n     */\n    function computeRegularFee(\n        uint256 startTime,\n        uint256 endTime,\n        FixedPoint.Unsigned calldata pfc\n    ) external view returns (FixedPoint.Unsigned memory regularFee, FixedPoint.Unsigned memory latePenalty);\n\n    /**\n     * @notice Computes the final oracle fees that a contract should pay at settlement.\n     * @param currency token used to pay the final fee.\n     * @return finalFee amount due.\n     */\n    function computeFinalFee(address currency) external view returns (FixedPoint.Unsigned memory);\n}\n"},"@uma/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleInterface.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"../../data-verification-mechanism/interfaces/FinderInterface.sol\";\n\n/**\n * @title Financial contract facing Oracle interface.\n * @dev Interface used by financial contracts to interact with the Oracle. Voters will use a different interface.\n */\nabstract contract OptimisticOracleInterface {\n    event RequestPrice(\n        address indexed requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes ancillaryData,\n        address currency,\n        uint256 reward,\n        uint256 finalFee\n    );\n    event ProposePrice(\n        address indexed requester,\n        address indexed proposer,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes ancillaryData,\n        int256 proposedPrice,\n        uint256 expirationTimestamp,\n        address currency\n    );\n    event DisputePrice(\n        address indexed requester,\n        address indexed proposer,\n        address indexed disputer,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes ancillaryData,\n        int256 proposedPrice\n    );\n    event Settle(\n        address indexed requester,\n        address indexed proposer,\n        address indexed disputer,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes ancillaryData,\n        int256 price,\n        uint256 payout\n    );\n\n    // Struct representing the state of a price request.\n    enum State {\n        Invalid, // Never requested.\n        Requested, // Requested, no other actions taken.\n        Proposed, // Proposed, but not expired or disputed yet.\n        Expired, // Proposed, not disputed, past liveness.\n        Disputed, // Disputed, but no DVM price returned yet.\n        Resolved, // Disputed and DVM price is available.\n        Settled // Final price has been set in the contract (can get here from Expired or Resolved).\n    }\n\n    // Struct representing a price request.\n    struct Request {\n        address proposer; // Address of the proposer.\n        address disputer; // Address of the disputer.\n        IERC20 currency; // ERC20 token used to pay rewards and fees.\n        bool settled; // True if the request is settled.\n        bool refundOnDispute; // True if the requester should be refunded their reward on dispute.\n        int256 proposedPrice; // Price that the proposer submitted.\n        int256 resolvedPrice; // Price resolved once the request is settled.\n        uint256 expirationTime; // Time at which the request auto-settles without a dispute.\n        uint256 reward; // Amount of the currency to pay to the proposer on settlement.\n        uint256 finalFee; // Final fee to pay to the Store upon request to the DVM.\n        uint256 bond; // Bond that the proposer and disputer must pay on top of the final fee.\n        uint256 customLiveness; // Custom liveness value set by the requester.\n    }\n\n    // This value must be <= the Voting contract's `ancillaryBytesLimit` value otherwise it is possible\n    // that a price can be requested to this contract successfully, but cannot be disputed because the DVM refuses\n    // to accept a price request made with ancillary data length over a certain size.\n    uint256 public constant ancillaryBytesLimit = 8192;\n\n    function defaultLiveness() external view virtual returns (uint256);\n\n    function finder() external view virtual returns (FinderInterface);\n\n    function getCurrentTime() external view virtual returns (uint256);\n\n    // Note: this is required so that typechain generates a return value with named fields.\n    mapping(bytes32 => Request) public requests;\n\n    /**\n     * @notice Requests a new price.\n     * @param identifier price identifier being requested.\n     * @param timestamp timestamp of the price being requested.\n     * @param ancillaryData ancillary data representing additional args being passed with the price request.\n     * @param currency ERC20 token used for payment of rewards and fees. Must be approved for use with the DVM.\n     * @param reward reward offered to a successful proposer. Will be pulled from the caller. Note: this can be 0,\n     *               which could make sense if the contract requests and proposes the value in the same call or\n     *               provides its own reward system.\n     * @return totalBond default bond (final fee) + final fee that the proposer and disputer will be required to pay.\n     * This can be changed with a subsequent call to setBond().\n     */\n    function requestPrice(\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData,\n        IERC20 currency,\n        uint256 reward\n    ) external virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Set the proposal bond associated with a price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @param bond custom bond amount to set.\n     * @return totalBond new bond + final fee that the proposer and disputer will be required to pay. This can be\n     * changed again with a subsequent call to setBond().\n     */\n    function setBond(\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData,\n        uint256 bond\n    ) external virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Sets the request to refund the reward if the proposal is disputed. This can help to \"hedge\" the caller\n     * in the event of a dispute-caused delay. Note: in the event of a dispute, the winner still receives the other's\n     * bond, so there is still profit to be made even if the reward is refunded.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     */\n    function setRefundOnDispute(\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) external virtual;\n\n    /**\n     * @notice Sets a custom liveness value for the request. Liveness is the amount of time a proposal must wait before\n     * being auto-resolved.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @param customLiveness new custom liveness.\n     */\n    function setCustomLiveness(\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData,\n        uint256 customLiveness\n    ) external virtual;\n\n    /**\n     * @notice Proposes a price value on another address' behalf. Note: this address will receive any rewards that come\n     * from this proposal. However, any bonds are pulled from the caller.\n     * @param proposer address to set as the proposer.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @param proposedPrice price being proposed.\n     * @return totalBond the amount that's pulled from the caller's wallet as a bond. The bond will be returned to\n     * the proposer once settled if the proposal is correct.\n     */\n    function proposePriceFor(\n        address proposer,\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData,\n        int256 proposedPrice\n    ) public virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Proposes a price value for an existing price request.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @param proposedPrice price being proposed.\n     * @return totalBond the amount that's pulled from the proposer's wallet as a bond. The bond will be returned to\n     * the proposer once settled if the proposal is correct.\n     */\n    function proposePrice(\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData,\n        int256 proposedPrice\n    ) external virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Disputes a price request with an active proposal on another address' behalf. Note: this address will\n     * receive any rewards that come from this dispute. However, any bonds are pulled from the caller.\n     * @param disputer address to set as the disputer.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @return totalBond the amount that's pulled from the caller's wallet as a bond. The bond will be returned to\n     * the disputer once settled if the dispute was value (the proposal was incorrect).\n     */\n    function disputePriceFor(\n        address disputer,\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) public virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Disputes a price value for an existing price request with an active proposal.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @return totalBond the amount that's pulled from the disputer's wallet as a bond. The bond will be returned to\n     * the disputer once settled if the dispute was valid (the proposal was incorrect).\n     */\n    function disputePrice(\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) external virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Retrieves a price that was previously requested by a caller. Reverts if the request is not settled\n     * or settleable. Note: this method is not view so that this call may actually settle the price request if it\n     * hasn't been settled.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @return resolved price.\n     */\n    function settleAndGetPrice(\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) external virtual returns (int256);\n\n    /**\n     * @notice Attempts to settle an outstanding price request. Will revert if it isn't settleable.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @return payout the amount that the \"winner\" (proposer or disputer) receives on settlement. This amount includes\n     * the returned bonds as well as additional rewards.\n     */\n    function settle(\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) external virtual returns (uint256 payout);\n\n    /**\n     * @notice Gets the current data structure containing all information about a price request.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @return the Request data structure.\n     */\n    function getRequest(\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) public view virtual returns (Request memory);\n\n    /**\n     * @notice Returns the state of a price request.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @return the State enum value.\n     */\n    function getState(\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) public view virtual returns (State);\n\n    /**\n     * @notice Checks if a given request has resolved or been settled (i.e the optimistic oracle has a price).\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @return true if price has resolved or settled, false otherwise.\n     */\n    function hasPrice(\n        address requester,\n        bytes32 identifier,\n        uint256 timestamp,\n        bytes memory ancillaryData\n    ) public view virtual returns (bool);\n\n    function stampAncillaryData(bytes memory ancillaryData, address requester)\n        public\n        view\n        virtual\n        returns (bytes memory);\n}\n"},"@uma/core/contracts/optimistic-oracle-v2/interfaces/SkinnyOptimisticOracleInterface.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"../interfaces/OptimisticOracleInterface.sol\";\n\n/**\n * @title Interface for the gas-cost-reduced version of the OptimisticOracle.\n * @notice Differences from normal OptimisticOracle:\n * - refundOnDispute: flag is removed, by default there are no refunds on disputes.\n * - customizing request parameters: In the OptimisticOracle, parameters like `bond` and `customLiveness` can be reset\n *   after a request is already made via `requestPrice`. In the SkinnyOptimisticOracle, these parameters can only be\n *   set in `requestPrice`, which has an expanded input set.\n * - settleAndGetPrice: Replaced by `settle`, which can only be called once per settleable request. The resolved price\n *   can be fetched via the `Settle` event or the return value of `settle`.\n * - general changes to interface: Functions that interact with existing requests all require the parameters of the\n *   request to modify to be passed as input. These parameters must match with the existing request parameters or the\n *   function will revert. This change reflects the internal refactor to store hashed request parameters instead of the\n *   full request struct.\n * @dev Interface used by financial contracts to interact with the Oracle. Voters will use a different interface.\n */\nabstract contract SkinnyOptimisticOracleInterface {\n    // Struct representing a price request. Note that this differs from the OptimisticOracleInterface's Request struct\n    // in that refundOnDispute is removed.\n    struct Request {\n        address proposer; // Address of the proposer.\n        address disputer; // Address of the disputer.\n        IERC20 currency; // ERC20 token used to pay rewards and fees.\n        bool settled; // True if the request is settled.\n        int256 proposedPrice; // Price that the proposer submitted.\n        int256 resolvedPrice; // Price resolved once the request is settled.\n        uint256 expirationTime; // Time at which the request auto-settles without a dispute.\n        uint256 reward; // Amount of the currency to pay to the proposer on settlement.\n        uint256 finalFee; // Final fee to pay to the Store upon request to the DVM.\n        uint256 bond; // Bond that the proposer and disputer must pay on top of the final fee.\n        uint256 customLiveness; // Custom liveness value set by the requester.\n    }\n\n    // This value must be <= the Voting contract's `ancillaryBytesLimit` value otherwise it is possible\n    // that a price can be requested to this contract successfully, but cannot be disputed because the DVM refuses\n    // to accept a price request made with ancillary data length over a certain size.\n    uint256 public constant ancillaryBytesLimit = 8192;\n\n    /**\n     * @notice Requests a new price.\n     * @param identifier price identifier being requested.\n     * @param timestamp timestamp of the price being requested.\n     * @param ancillaryData ancillary data representing additional args being passed with the price request.\n     * @param currency ERC20 token used for payment of rewards and fees. Must be approved for use with the DVM.\n     * @param reward reward offered to a successful proposer. Will be pulled from the caller. Note: this can be 0,\n     *               which could make sense if the contract requests and proposes the value in the same call or\n     *               provides its own reward system.\n     * @param bond custom proposal bond to set for request. If set to 0, defaults to the final fee.\n     * @param customLiveness custom proposal liveness to set for request.\n     * @return totalBond default bond + final fee that the proposer and disputer will be required to pay.\n     */\n    function requestPrice(\n        bytes32 identifier,\n        uint32 timestamp,\n        bytes memory ancillaryData,\n        IERC20 currency,\n        uint256 reward,\n        uint256 bond,\n        uint256 customLiveness\n    ) external virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Proposes a price value on another address' behalf. Note: this address will receive any rewards that come\n     * from this proposal. However, any bonds are pulled from the caller.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @param request price request parameters whose hash must match the request that the caller wants to\n     * propose a price for.\n     * @param proposer address to set as the proposer.\n     * @param proposedPrice price being proposed.\n     * @return totalBond the amount that's pulled from the caller's wallet as a bond. The bond will be returned to\n     * the proposer once settled if the proposal is correct.\n     */\n    function proposePriceFor(\n        address requester,\n        bytes32 identifier,\n        uint32 timestamp,\n        bytes memory ancillaryData,\n        Request memory request,\n        address proposer,\n        int256 proposedPrice\n    ) public virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Proposes a price value where caller is the proposer.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @param request price request parameters whose hash must match the request that the caller wants to\n     * propose a price for.\n     * @param proposedPrice price being proposed.\n     * @return totalBond the amount that's pulled from the caller's wallet as a bond. The bond will be returned to\n     * the proposer once settled if the proposal is correct.\n     */\n    function proposePrice(\n        address requester,\n        bytes32 identifier,\n        uint32 timestamp,\n        bytes memory ancillaryData,\n        Request memory request,\n        int256 proposedPrice\n    ) external virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Combines logic of requestPrice and proposePrice while taking advantage of gas savings from not having to\n     * overwrite Request params that a normal requestPrice() => proposePrice() flow would entail. Note: The proposer\n     * will receive any rewards that come from this proposal. However, any bonds are pulled from the caller.\n     * @dev The caller is the requester, but the proposer can be customized.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @param currency ERC20 token used for payment of rewards and fees. Must be approved for use with the DVM.\n     * @param reward reward offered to a successful proposer. Will be pulled from the caller. Note: this can be 0,\n     *               which could make sense if the contract requests and proposes the value in the same call or\n     *               provides its own reward system.\n     * @param bond custom proposal bond to set for request. If set to 0, defaults to the final fee.\n     * @param customLiveness custom proposal liveness to set for request.\n     * @param proposer address to set as the proposer.\n     * @param proposedPrice price being proposed.\n     * @return totalBond the amount that's pulled from the caller's wallet as a bond. The bond will be returned to\n     * the proposer once settled if the proposal is correct.\n     */\n    function requestAndProposePriceFor(\n        bytes32 identifier,\n        uint32 timestamp,\n        bytes memory ancillaryData,\n        IERC20 currency,\n        uint256 reward,\n        uint256 bond,\n        uint256 customLiveness,\n        address proposer,\n        int256 proposedPrice\n    ) external virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Disputes a price request with an active proposal on another address' behalf. Note: this address will\n     * receive any rewards that come from this dispute. However, any bonds are pulled from the caller.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @param request price request parameters whose hash must match the request that the caller wants to\n     * dispute.\n     * @param disputer address to set as the disputer.\n     * @param requester sender of the initial price request.\n     * @return totalBond the amount that's pulled from the caller's wallet as a bond. The bond will be returned to\n     * the disputer once settled if the dispute was valid (the proposal was incorrect).\n     */\n    function disputePriceFor(\n        bytes32 identifier,\n        uint32 timestamp,\n        bytes memory ancillaryData,\n        Request memory request,\n        address disputer,\n        address requester\n    ) public virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Disputes a price request with an active proposal where caller is the disputer.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @param request price request parameters whose hash must match the request that the caller wants to\n     * dispute.\n     * @return totalBond the amount that's pulled from the caller's wallet as a bond. The bond will be returned to\n     * the disputer once settled if the dispute was valid (the proposal was incorrect).\n     */\n    function disputePrice(\n        address requester,\n        bytes32 identifier,\n        uint32 timestamp,\n        bytes memory ancillaryData,\n        Request memory request\n    ) external virtual returns (uint256 totalBond);\n\n    /**\n     * @notice Attempts to settle an outstanding price request. Will revert if it isn't settleable.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @param request price request parameters whose hash must match the request that the caller wants to\n     * settle.\n     * @return payout the amount that the \"winner\" (proposer or disputer) receives on settlement. This amount includes\n     * the returned bonds as well as additional rewards.\n     * @return resolvedPrice the price that the request settled to.\n     */\n    function settle(\n        address requester,\n        bytes32 identifier,\n        uint32 timestamp,\n        bytes memory ancillaryData,\n        Request memory request\n    ) external virtual returns (uint256 payout, int256 resolvedPrice);\n\n    /**\n     * @notice Computes the current state of a price request. See the State enum for more details.\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @param request price request parameters.\n     * @return the State.\n     */\n    function getState(\n        address requester,\n        bytes32 identifier,\n        uint32 timestamp,\n        bytes memory ancillaryData,\n        Request memory request\n    ) external virtual returns (OptimisticOracleInterface.State);\n\n    /**\n     * @notice Checks if a given request has resolved, expired or been settled (i.e the optimistic oracle has a price).\n     * @param requester sender of the initial price request.\n     * @param identifier price identifier to identify the existing request.\n     * @param timestamp timestamp to identify the existing request.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @param request price request parameters. The hash of these parameters must match with the request hash that is\n     * associated with the price request unique ID {requester, identifier, timestamp, ancillaryData}, or this method\n     * will revert.\n     * @return boolean indicating true if price exists and false if not.\n     */\n    function hasPrice(\n        address requester,\n        bytes32 identifier,\n        uint32 timestamp,\n        bytes memory ancillaryData,\n        Request memory request\n    ) public virtual returns (bool);\n\n    /**\n     * @notice Generates stamped ancillary data in the format that it would be used in the case of a price dispute.\n     * @param ancillaryData ancillary data of the price being requested.\n     * @param requester sender of the initial price request.\n     * @return the stamped ancillary bytes.\n     */\n    function stampAncillaryData(bytes memory ancillaryData, address requester)\n        public\n        pure\n        virtual\n        returns (bytes memory);\n}\n"},"contracts/external/interfaces/WETH9Interface.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\n/**\n * @notice Interface for the WETH9 contract.\n */\ninterface WETH9Interface {\n    /**\n     * @notice Burn Wrapped Ether and receive native Ether.\n     * @param wad Amount of WETH to unwrap and send to caller.\n     */\n    function withdraw(uint256 wad) external;\n\n    /**\n     * @notice Lock native Ether and mint Wrapped Ether ERC20\n     * @dev msg.value is amount of Wrapped Ether to mint/Ether to lock.\n     */\n    function deposit() external payable;\n\n    /**\n     * @notice Get balance of WETH held by `guy`.\n     * @param guy Address to get balance of.\n     * @return wad Amount of WETH held by `guy`.\n     */\n    function balanceOf(address guy) external view returns (uint256 wad);\n\n    /**\n     * @notice Transfer `wad` of WETH from caller to `guy`.\n     * @param guy Address to send WETH to.\n     * @param wad Amount of WETH to send.\n     * @return ok True if transfer succeeded.\n     */\n    function transfer(address guy, uint256 wad) external returns (bool);\n}\n"},"contracts/HubPool.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\nimport \"./MerkleLib.sol\";\nimport \"./interfaces/HubPoolInterface.sol\";\nimport \"./Lockable.sol\";\n\nimport \"./interfaces/LpTokenFactoryInterface.sol\";\nimport \"./external/interfaces/WETH9Interface.sol\";\n\nimport \"@uma/core/contracts/common/implementation/Testable.sol\";\nimport \"@uma/core/contracts/common/implementation/MultiCaller.sol\";\nimport \"@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol\";\n\nimport \"@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol\";\nimport \"@uma/core/contracts/data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol\";\nimport \"@uma/core/contracts/data-verification-mechanism/interfaces/StoreInterface.sol\";\nimport \"@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol\";\n\nimport \"@uma/core/contracts/optimistic-oracle-v2/interfaces/SkinnyOptimisticOracleInterface.sol\";\nimport \"@uma/core/contracts/common/interfaces/ExpandedIERC20.sol\";\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\n\n/**\n * @notice Contract deployed on Ethereum that houses L1 token liquidity for all SpokePools. A dataworker can interact\n * with merkle roots stored in this contract via inclusion proofs to instruct this contract to send tokens to L2\n * SpokePools via \"pool rebalances\" that can be used to pay out relayers on those networks. This contract is also\n * responsible for publishing relayer refund and slow relay merkle roots to SpokePools.\n * @notice This contract is meant to act as the cross chain administrator and owner of all L2 spoke pools, so all\n * governance actions and pool rebalances originate from here and bridge instructions to L2s.\n * @dev This contract should be deprecated by the year 2106, at which point uint32 timestamps will roll over. This is\n * an issue for this contract because fee calculations will become bizarre when multiplying by negative time deltas.\n * Before this date, this contract should be paused from accepting new root bundles and all LP tokens should be\n * disabled by the admin.\n */\ncontract HubPool is HubPoolInterface, Testable, Lockable, MultiCaller, Ownable {\n    using SafeERC20 for IERC20;\n    using Address for address;\n\n    // Only one root bundle can be stored at a time. Once all pool rebalance leaves are executed, a new proposal\n    // can be submitted.\n    RootBundle public rootBundleProposal;\n\n    // Mapping of L1 token addresses to the associated pool information.\n    mapping(address => PooledToken) public pooledTokens;\n\n    // Stores paths from L1 token + destination ID to destination token. Since different tokens on L1 might map to\n    // to the same address on different destinations, we hash (L1 token address, destination ID) to\n    // use as a key that maps to a destination token. This mapping is used to direct pool rebalances from\n    // HubPool to SpokePool, and also is designed to be used as a lookup for off-chain data workers to determine\n    // which L1 tokens to relay to SpokePools to refund relayers. The admin can set the \"destination token\"\n    // to 0x0 to disable a pool rebalance route and block executeRootBundle() from executing.\n    mapping(bytes32 => address) private poolRebalanceRoutes;\n\n    // Mapping of chainId to the associated adapter and spokePool contracts.\n    mapping(uint256 => CrossChainContract) public crossChainContracts;\n\n    mapping(address => uint256) public unclaimedAccumulatedProtocolFees;\n\n    // Whether the bundle proposal process is paused.\n    bool public paused;\n\n    // WETH contract for Ethereum.\n    WETH9Interface public immutable weth;\n\n    // Helper factory to deploy new LP tokens for enabled L1 tokens\n    LpTokenFactoryInterface public immutable lpTokenFactory;\n\n    // Finder contract for this network.\n    FinderInterface public immutable finder;\n\n    // Address that captures protocol fees. Accumulated protocol fees can be claimed by this address.\n    address public protocolFeeCaptureAddress;\n\n    // Token used to bond the data worker for proposing relayer refund bundles.\n    IERC20 public bondToken;\n\n    // Each root bundle proposal must stay in liveness for this period of time before it can be considered finalized.\n    // It can be disputed only during this period of time. Defaults to 2 hours, like the rest of the UMA ecosystem.\n    uint32 public liveness = 7200;\n\n    // When root bundles are disputed a price request is enqueued with the DVM to resolve the resolution.\n    bytes32 public identifier = \"ACROSS-V2\";\n\n    // Interest rate payment that scales the amount of pending fees per second paid to LPs. 0.0000015e18 will pay out\n    // the full amount of fees entitled to LPs in ~ 7.72 days assuming no contract interactions. If someone interacts\n    // with the contract then the LP rewards are smeared sublinearly over the window (i.e spread over the remaining\n    // period for each interaction which approximates a decreasing exponential function).\n    uint256 public lpFeeRatePerSecond = 1500000000000;\n\n    // Percentage of lpFees that are captured by the protocol and claimable by the protocolFeeCaptureAddress.\n    uint256 public protocolFeeCapturePct;\n\n    // The computed bond amount as the UMA Store's final fee multiplied by the bondTokenFinalFeeMultiplier.\n    uint256 public bondAmount;\n\n    event Paused(bool indexed isPaused);\n\n    event EmergencyRootBundleDeleted(\n        bytes32 indexed poolRebalanceRoot,\n        bytes32 indexed relayerRefundRoot,\n        bytes32 slowRelayRoot,\n        address indexed proposer\n    );\n\n    event ProtocolFeeCaptureSet(address indexed newProtocolFeeCaptureAddress, uint256 indexed newProtocolFeeCapturePct);\n\n    event ProtocolFeesCapturedClaimed(address indexed l1Token, uint256 indexed accumulatedFees);\n\n    event BondSet(address indexed newBondToken, uint256 newBondAmount);\n\n    event LivenessSet(uint256 newLiveness);\n\n    event IdentifierSet(bytes32 newIdentifier);\n\n    event CrossChainContractsSet(uint256 l2ChainId, address adapter, address spokePool);\n\n    event L1TokenEnabledForLiquidityProvision(address l1Token, address lpToken);\n\n    event L2TokenDisabledForLiquidityProvision(address l1Token, address lpToken);\n\n    event LiquidityAdded(\n        address indexed l1Token,\n        uint256 amount,\n        uint256 lpTokensMinted,\n        address indexed liquidityProvider\n    );\n    event LiquidityRemoved(\n        address indexed l1Token,\n        uint256 amount,\n        uint256 lpTokensBurnt,\n        address indexed liquidityProvider\n    );\n    event SetPoolRebalanceRoute(\n        uint256 indexed destinationChainId,\n        address indexed l1Token,\n        address indexed destinationToken\n    );\n    event SetEnableDepositRoute(\n        uint256 indexed originChainId,\n        uint256 indexed destinationChainId,\n        address indexed originToken,\n        bool depositsEnabled\n    );\n    event ProposeRootBundle(\n        uint32 challengePeriodEndTimestamp,\n        uint8 poolRebalanceLeafCount,\n        uint256[] bundleEvaluationBlockNumbers,\n        bytes32 indexed poolRebalanceRoot,\n        bytes32 indexed relayerRefundRoot,\n        bytes32 slowRelayRoot,\n        address indexed proposer\n    );\n    event RootBundleExecuted(\n        uint256 groupIndex,\n        uint256 indexed leafId,\n        uint256 indexed chainId,\n        address[] l1Tokens,\n        uint256[] bundleLpFees,\n        int256[] netSendAmounts,\n        int256[] runningBalances,\n        address indexed caller\n    );\n    event SpokePoolAdminFunctionTriggered(uint256 indexed chainId, bytes message);\n\n    event RootBundleDisputed(address indexed disputer, uint256 requestTime);\n\n    event RootBundleCanceled(address indexed disputer, uint256 requestTime);\n\n    modifier noActiveRequests() {\n        require(!_activeRequest(), \"Proposal has unclaimed leaves\");\n        _;\n    }\n\n    modifier unpaused() {\n        require(!paused, \"Contract is paused\");\n        _;\n    }\n\n    modifier zeroOptimisticOracleApproval() {\n        _;\n        bondToken.safeApprove(address(_getOptimisticOracle()), 0);\n    }\n\n    /**\n     * @notice Construct HubPool.\n     * @param _lpTokenFactory LP Token factory address used to deploy LP tokens for new collateral types.\n     * @param _finder Finder address.\n     * @param _weth WETH address.\n     * @param _timer Timer address.\n     */\n    constructor(\n        LpTokenFactoryInterface _lpTokenFactory,\n        FinderInterface _finder,\n        WETH9Interface _weth,\n        address _timer\n    ) Testable(_timer) {\n        lpTokenFactory = _lpTokenFactory;\n        finder = _finder;\n        weth = _weth;\n        protocolFeeCaptureAddress = owner();\n    }\n\n    /*************************************************\n     *                ADMIN FUNCTIONS                *\n     *************************************************/\n\n    /**\n     * @notice Pauses the bundle proposal and execution process. This is intended to be used during upgrades or when\n     * something goes awry.\n     * @param pause true if the call is meant to pause the system, false if the call is meant to unpause it.\n     */\n    function setPaused(bool pause) public onlyOwner nonReentrant {\n        paused = pause;\n        emit Paused(pause);\n    }\n\n    /**\n     * @notice This allows for the deletion of the active proposal in case of emergency.\n     * @dev This is primarily intended to rectify situations where an unexecutable bundle gets through liveness in the\n     * case of a non-malicious bug in the proposal/dispute code. Without this function, the contract would be\n     * indefinitely blocked, migration would be required, and in-progress transfers would never be repaid.\n     */\n    function emergencyDeleteProposal() public onlyOwner nonReentrant {\n        RootBundle memory _rootBundleProposal = rootBundleProposal;\n        delete rootBundleProposal;\n        if (_rootBundleProposal.unclaimedPoolRebalanceLeafCount > 0)\n            bondToken.safeTransfer(_rootBundleProposal.proposer, bondAmount);\n        emit EmergencyRootBundleDeleted(\n            _rootBundleProposal.poolRebalanceRoot,\n            _rootBundleProposal.relayerRefundRoot,\n            _rootBundleProposal.slowRelayRoot,\n            _rootBundleProposal.proposer\n        );\n    }\n\n    /**\n     * @notice Sends message to SpokePool from this contract. Callable only by owner.\n     * @dev This function has permission to call onlyAdmin functions on the SpokePool, so it's imperative that this\n     * contract only allows the owner to call this method directly or indirectly.\n     * @param chainId Chain with SpokePool to send message to.\n     * @param functionData ABI encoded function call to send to SpokePool, but can be any arbitrary data technically.\n     */\n    function relaySpokePoolAdminFunction(uint256 chainId, bytes memory functionData)\n        public\n        override\n        onlyOwner\n        nonReentrant\n    {\n        _relaySpokePoolAdminFunction(chainId, functionData);\n    }\n\n    /**\n     * @notice Sets protocolFeeCaptureAddress and protocolFeeCapturePct. Callable only by owner.\n     * @param newProtocolFeeCaptureAddress New protocol fee capture address.\n     * @param newProtocolFeeCapturePct New protocol fee capture %.\n     */\n    function setProtocolFeeCapture(address newProtocolFeeCaptureAddress, uint256 newProtocolFeeCapturePct)\n        public\n        override\n        onlyOwner\n        nonReentrant\n    {\n        require(newProtocolFeeCapturePct <= 1e18, \"Bad protocolFeeCapturePct\");\n        require(newProtocolFeeCaptureAddress != address(0), \"Bad protocolFeeCaptureAddress\");\n        protocolFeeCaptureAddress = newProtocolFeeCaptureAddress;\n        protocolFeeCapturePct = newProtocolFeeCapturePct;\n        emit ProtocolFeeCaptureSet(newProtocolFeeCaptureAddress, newProtocolFeeCapturePct);\n    }\n\n    /**\n     * @notice Sets bond token and amount. Callable only by owner.\n     * @param newBondToken New bond currency.\n     * @param newBondAmount New bond amount.\n     */\n    function setBond(IERC20 newBondToken, uint256 newBondAmount)\n        public\n        override\n        onlyOwner\n        noActiveRequests\n        nonReentrant\n    {\n        // Bond should not equal final fee otherwise every proposal will get cancelled in a dispute.\n        // In practice we expect that bond amounts are set >> final fees so this shouldn't be an inconvenience.\n        // The only way for the bond amount to be equal to the final fee is if the newBondAmount == 0.\n        require(newBondAmount != 0, \"bond equal to final fee\");\n\n        // Check that this token is on the whitelist.\n        AddressWhitelistInterface addressWhitelist = AddressWhitelistInterface(\n            finder.getImplementationAddress(OracleInterfaces.CollateralWhitelist)\n        );\n        require(addressWhitelist.isOnWhitelist(address(newBondToken)), \"Not on whitelist\");\n\n        // The bond should be the passed in bondAmount + the final fee.\n        bondToken = newBondToken;\n        uint256 _bondAmount = newBondAmount + _getBondTokenFinalFee();\n        bondAmount = _bondAmount;\n        emit BondSet(address(newBondToken), _bondAmount);\n    }\n\n    /**\n     * @notice Sets root bundle proposal liveness period. Callable only by owner.\n     * @param newLiveness New liveness period.\n     */\n    function setLiveness(uint32 newLiveness) public override onlyOwner nonReentrant {\n        require(newLiveness > 10 minutes, \"Liveness too short\");\n        liveness = newLiveness;\n        emit LivenessSet(newLiveness);\n    }\n\n    /**\n     * @notice Sets identifier for root bundle disputes. Callable only by owner.\n     * @param newIdentifier New identifier.\n     */\n    function setIdentifier(bytes32 newIdentifier) public override onlyOwner noActiveRequests nonReentrant {\n        IdentifierWhitelistInterface identifierWhitelist = IdentifierWhitelistInterface(\n            finder.getImplementationAddress(OracleInterfaces.IdentifierWhitelist)\n        );\n        require(identifierWhitelist.isIdentifierSupported(newIdentifier), \"Identifier not supported\");\n        identifier = newIdentifier;\n        emit IdentifierSet(newIdentifier);\n    }\n\n    /**\n     * @notice Sets cross chain relay helper contracts for L2 chain ID. Callable only by owner.\n     * @dev We do not block setting the adapter or SpokePool to invalid/zero addresses because we want to allow the\n     * admin to block relaying roots to the spoke pool for emergency recovery purposes.\n     * @param l2ChainId Chain to set contracts for.\n     * @param adapter Adapter used to relay messages and tokens to spoke pool. Deployed on current chain.\n     * @param spokePool Recipient of relayed messages and tokens on spoke pool. Deployed on l2ChainId.\n     */\n\n    function setCrossChainContracts(\n        uint256 l2ChainId,\n        address adapter,\n        address spokePool\n    ) public override onlyOwner nonReentrant {\n        crossChainContracts[l2ChainId] = CrossChainContract(adapter, spokePool);\n        emit CrossChainContractsSet(l2ChainId, adapter, spokePool);\n    }\n\n    /**\n     * @notice Store canonical destination token counterpart for l1 token. Callable only by owner.\n     * @dev Admin can set destinationToken to 0x0 to effectively disable executing any root bundles with leaves\n     * containing this l1 token + destination chain ID combination.\n     * @param destinationChainId Destination chain where destination token resides.\n     * @param l1Token Token enabled for liquidity in this pool, and the L1 counterpart to the destination token on the\n     * destination chain ID.\n     * @param destinationToken Destination chain counterpart of L1 token.\n     */\n    function setPoolRebalanceRoute(\n        uint256 destinationChainId,\n        address l1Token,\n        address destinationToken\n    ) public override onlyOwner nonReentrant {\n        poolRebalanceRoutes[_poolRebalanceRouteKey(l1Token, destinationChainId)] = destinationToken;\n        emit SetPoolRebalanceRoute(destinationChainId, l1Token, destinationToken);\n    }\n\n    /**\n     * @notice Sends cross-chain message to SpokePool on originChainId to enable or disable deposit route from that\n     * SpokePool to another one. Callable only by owner.\n     * @dev Admin is responsible for ensuring that `originToken` is linked to some L1 token on this contract, via\n     * poolRebalanceRoutes(), and that this L1 token also has a counterpart on the destination chain. If either\n     * condition fails, then the deposit will be unrelayable by off-chain relayers because they will not know which\n     * token to relay to recipients on the destination chain, and data workers wouldn't know which L1 token to send\n     * to the destination chain to refund the relayer.\n     * @param originChainId Chain where token deposit occurs.\n     * @param destinationChainId Chain where token depositor wants to receive funds.\n     * @param originToken Token sent in deposit.\n     * @param depositsEnabled Set to true to whitelist this route for deposits, set to false if caller just wants to\n     * map the origin token + destination ID to the destination token address on the origin chain's SpokePool.\n     */\n    function setDepositRoute(\n        uint256 originChainId,\n        uint256 destinationChainId,\n        address originToken,\n        bool depositsEnabled\n    ) public override nonReentrant onlyOwner {\n        _relaySpokePoolAdminFunction(\n            originChainId,\n            abi.encodeWithSignature(\n                \"setEnableRoute(address,uint256,bool)\",\n                originToken,\n                destinationChainId,\n                depositsEnabled\n            )\n        );\n        emit SetEnableDepositRoute(originChainId, destinationChainId, originToken, depositsEnabled);\n    }\n\n    /**\n     * @notice Enables LPs to provide liquidity for L1 token. Deploys new LP token for L1 token if appropriate.\n     * Callable only by owner.\n     * @param l1Token Token to provide liquidity for.\n     */\n    function enableL1TokenForLiquidityProvision(address l1Token) public override onlyOwner nonReentrant {\n        // If token is being enabled for the first time, create a new LP token and set the timestamp once. We don't\n        // want to ever reset this timestamp otherwise fees that have accrued will be lost since the last update. This\n        // could happen for example if an L1 token is enabled, disabled, and then enabled again.\n        if (pooledTokens[l1Token].lpToken == address(0)) {\n            pooledTokens[l1Token].lpToken = lpTokenFactory.createLpToken(l1Token);\n            pooledTokens[l1Token].lastLpFeeUpdate = uint32(getCurrentTime());\n        }\n\n        pooledTokens[l1Token].isEnabled = true;\n\n        emit L1TokenEnabledForLiquidityProvision(l1Token, pooledTokens[l1Token].lpToken);\n    }\n\n    /**\n     * @notice Disables LPs from providing liquidity for L1 token. Callable only by owner.\n     * @param l1Token Token to disable liquidity provision for.\n     */\n    function disableL1TokenForLiquidityProvision(address l1Token) public override onlyOwner nonReentrant {\n        pooledTokens[l1Token].isEnabled = false;\n        emit L2TokenDisabledForLiquidityProvision(l1Token, pooledTokens[l1Token].lpToken);\n    }\n\n    /**\n     * @notice Enables the owner of the protocol to haircut reserves in the event of an irrecoverable loss of funds on\n     * one of the L2s. Consider funds are lent out onto a L2 that dies irrecoverably. This value will offset the\n     * exchangeRateCurrent such that all LPs receive a pro rata loss of the the reserves. Should be used in conjunction\n     * with pause logic to prevent LPs from adding/withdrawing liquidity during the haircut process.\n     * Callable only by owner.\n     * @param l1Token Token to execute the haircut on.\n     * @param haircutAmount The amount of reserves to haircut the LPs by.\n     */\n    function haircutReserves(address l1Token, int256 haircutAmount) public onlyOwner nonReentrant {\n        // Note that we do not call sync first in this method. The Owner should call this manually before haircutting.\n        // This is done in the event sync reverts due to too low balance in the contract relative to bond amount.\n        pooledTokens[l1Token].utilizedReserves -= haircutAmount;\n    }\n\n    /*************************************************\n     *          LIQUIDITY PROVIDER FUNCTIONS         *\n     *************************************************/\n\n    /**\n     * @notice Deposit liquidity into this contract to earn LP fees in exchange for funding relays on SpokePools.\n     * Caller is essentially loaning their funds to be sent from this contract to the SpokePool, where it will be used\n     * to repay a relayer, and ultimately receives their loan back after the tokens are bridged back to this contract\n     * via the canonical token bridge. Then, the caller's loans are used again. This loan cycle repeats continuously\n     * and the caller, or \"liquidity provider\" earns a continuous fee for their credit that they are extending relayers.\n     * @notice Caller will receive an LP token representing their share of this pool. The LP token's redemption value\n     * increments from the time that they enter the pool to reflect their accrued fees.\n     * @notice The caller of this function must approve this contract to spend l1TokenAmount of l1Token.\n     * @param l1Token Token to deposit into this contract.\n     * @param l1TokenAmount Amount of liquidity to provide.\n     */\n    function addLiquidity(address l1Token, uint256 l1TokenAmount) public payable override nonReentrant unpaused {\n        require(pooledTokens[l1Token].isEnabled, \"Token not enabled\");\n        // If this is the weth pool and the caller sends msg.value then the msg.value must match the l1TokenAmount.\n        // Else, msg.value must be set to 0.\n        require(((address(weth) == l1Token) && msg.value == l1TokenAmount) || msg.value == 0, \"Bad msg.value\");\n\n        // Since _exchangeRateCurrent() reads this contract's balance and updates contract state using it, it must be\n        // first before transferring any tokens to this contract to ensure synchronization.\n        uint256 lpTokensToMint = (l1TokenAmount * 1e18) / _exchangeRateCurrent(l1Token);\n        pooledTokens[l1Token].liquidReserves += l1TokenAmount;\n        ExpandedIERC20(pooledTokens[l1Token].lpToken).mint(msg.sender, lpTokensToMint);\n\n        if (address(weth) == l1Token && msg.value > 0) WETH9Interface(address(l1Token)).deposit{ value: msg.value }();\n        else IERC20(l1Token).safeTransferFrom(msg.sender, address(this), l1TokenAmount);\n\n        emit LiquidityAdded(l1Token, l1TokenAmount, lpTokensToMint, msg.sender);\n    }\n\n    /**\n     * @notice Burns LP share to redeem for underlying l1Token original deposit amount plus fees.\n     * @param l1Token Token to redeem LP share for.\n     * @param lpTokenAmount Amount of LP tokens to burn. Exchange rate between L1 token and LP token can be queried\n     * via public exchangeRateCurrent method.\n     * @param sendEth Set to True if L1 token is WETH and user wants to receive ETH. Note that if caller\n     * is a contract, then the contract should have a way to receive ETH if this value is set to True. Similarly,\n     * if this value is set to False, then the calling contract should have a way to handle WETH.\n     */\n    function removeLiquidity(\n        address l1Token,\n        uint256 lpTokenAmount,\n        bool sendEth\n    ) public override nonReentrant unpaused {\n        require(address(weth) == l1Token || !sendEth, \"Cant send eth\");\n        uint256 l1TokensToReturn = (lpTokenAmount * _exchangeRateCurrent(l1Token)) / 1e18;\n\n        ExpandedIERC20(pooledTokens[l1Token].lpToken).burnFrom(msg.sender, lpTokenAmount);\n        // Note this method does not make any liquidity utilization checks before letting the LP redeem their LP tokens.\n        // If they try access more funds than available (i.e l1TokensToReturn > liquidReserves) this will underflow.\n        pooledTokens[l1Token].liquidReserves -= l1TokensToReturn;\n\n        if (sendEth) {\n            weth.withdraw(l1TokensToReturn);\n            Address.sendValue(payable(msg.sender), l1TokensToReturn); // This will revert if the caller is a contract that does not implement a fallback function.\n        } else {\n            IERC20(address(l1Token)).safeTransfer(msg.sender, l1TokensToReturn);\n        }\n        emit LiquidityRemoved(l1Token, l1TokensToReturn, lpTokenAmount, msg.sender);\n    }\n\n    /**\n     * @notice Returns exchange rate of L1 token to LP token.\n     * @param l1Token L1 token redeemable by burning LP token.\n     * @return Amount of L1 tokens redeemable for 1 unit LP token.\n     */\n    function exchangeRateCurrent(address l1Token) public override nonReentrant returns (uint256) {\n        return _exchangeRateCurrent(l1Token);\n    }\n\n    /**\n     * @notice Returns % of liquid reserves currently being \"used\" and sitting in SpokePools.\n     * @param l1Token L1 token to query utilization for.\n     * @return % of liquid reserves currently being \"used\" and sitting in SpokePools.\n     */\n    function liquidityUtilizationCurrent(address l1Token) public override nonReentrant returns (uint256) {\n        return _liquidityUtilizationPostRelay(l1Token, 0);\n    }\n\n    /**\n     * @notice Returns % of liquid reserves currently being \"used\" and sitting in SpokePools and accounting for\n     * relayedAmount of tokens to be withdrawn from the pool.\n     * @param l1Token L1 token to query utilization for.\n     * @param relayedAmount The higher this amount, the higher the utilization.\n     * @return % of liquid reserves currently being \"used\" and sitting in SpokePools plus the relayedAmount.\n     */\n    function liquidityUtilizationPostRelay(address l1Token, uint256 relayedAmount)\n        public\n        nonReentrant\n        returns (uint256)\n    {\n        return _liquidityUtilizationPostRelay(l1Token, relayedAmount);\n    }\n\n    /**\n     * @notice Synchronize any balance changes in this contract with the utilized & liquid reserves. This should be done\n     * at the conclusion of a L2->L1 token transfer via the canonical token bridge, when this contract's reserves do not\n     * reflect its true balance due to new tokens being dropped onto the contract at the conclusion of a bridging action.\n     */\n    function sync(address l1Token) public override nonReentrant {\n        _sync(l1Token);\n    }\n\n    /*************************************************\n     *             DATA WORKER FUNCTIONS             *\n     *************************************************/\n\n    /**\n     * @notice Publish a new root bundle along with all of the block numbers that the merkle roots are relevant for.\n     * This is used to aid off-chain validators in evaluating the correctness of this bundle. Caller stakes a bond that\n     * can be slashed if the root bundle proposal is invalid, and they will receive it back if accepted.\n     * @notice After proposeRootBundle is called, if the any props are wrong then this proposal can be challenged.\n     * Once the challenge period passes, then the roots are no longer disputable, and only executeRootBundle can be\n     * called; moreover, this method can't be called again until all leaves are executed.\n     * @param bundleEvaluationBlockNumbers should contain the latest block number for all chains, even if there are no\n     * relays contained on some of them. The usage of this variable should be defined in an off chain UMIP.\n     * @notice The caller of this function must approve this contract to spend bondAmount of bondToken.\n     * @param poolRebalanceLeafCount Number of leaves contained in pool rebalance root. Max is # of whitelisted chains.\n     * @param poolRebalanceRoot Pool rebalance root containing leaves that sends tokens from this contract to SpokePool.\n     * @param relayerRefundRoot Relayer refund root to publish to SpokePool where a data worker can execute leaves to\n     * refund relayers on their chosen refund chainId.\n     * @param slowRelayRoot Slow relay root to publish to Spoke Pool where a data worker can execute leaves to\n     * fulfill slow relays.\n     */\n    function proposeRootBundle(\n        uint256[] calldata bundleEvaluationBlockNumbers,\n        uint8 poolRebalanceLeafCount,\n        bytes32 poolRebalanceRoot,\n        bytes32 relayerRefundRoot,\n        bytes32 slowRelayRoot\n    ) public override nonReentrant noActiveRequests unpaused {\n        // Note: this is to prevent \"empty block\" style attacks where someone can make empty proposals that are\n        // technically valid but not useful. This could also potentially be enforced at the UMIP-level.\n        require(poolRebalanceLeafCount > 0, \"Bundle must have at least 1 leaf\");\n\n        uint32 challengePeriodEndTimestamp = uint32(getCurrentTime()) + liveness;\n\n        delete rootBundleProposal; // Only one bundle of roots can be executed at a time. Delete the previous bundle.\n\n        rootBundleProposal.challengePeriodEndTimestamp = challengePeriodEndTimestamp;\n        rootBundleProposal.unclaimedPoolRebalanceLeafCount = poolRebalanceLeafCount;\n        rootBundleProposal.poolRebalanceRoot = poolRebalanceRoot;\n        rootBundleProposal.relayerRefundRoot = relayerRefundRoot;\n        rootBundleProposal.slowRelayRoot = slowRelayRoot;\n        rootBundleProposal.proposer = msg.sender;\n\n        // Pull bondAmount of bondToken from the caller.\n        bondToken.safeTransferFrom(msg.sender, address(this), bondAmount);\n\n        emit ProposeRootBundle(\n            challengePeriodEndTimestamp,\n            poolRebalanceLeafCount,\n            bundleEvaluationBlockNumbers,\n            poolRebalanceRoot,\n            relayerRefundRoot,\n            slowRelayRoot,\n            msg.sender\n        );\n    }\n\n    /**\n     * @notice Executes a pool rebalance leaf as part of the currently published root bundle. Will bridge any tokens\n     * from this contract to the SpokePool designated in the leaf, and will also publish relayer refund and slow\n     * relay roots to the SpokePool on the network specified in the leaf.\n     * @dev In some cases, will instruct spokePool to send funds back to L1.\n     * @param chainId ChainId number of the target spoke pool on which the bundle is executed.\n     * @param groupIndex If set to 0, then relay roots to SpokePool via cross chain bridge. Used by off-chain validator\n     * to organize leaves with the same chain ID and also set which leaves should result in relayed messages.\n     * @param bundleLpFees Array representing the total LP fee amount per token in this bundle for all bundled relays.\n     * @param netSendAmounts Array representing the amount of tokens to send to the SpokePool on the target chainId.\n     * @param runningBalances Array used to track any unsent tokens that are not included in the netSendAmounts.\n     * @param leafId Index of this executed leaf within the poolRebalance tree.\n     * @param l1Tokens Array of all the tokens associated with the bundleLpFees, nedSendAmounts and runningBalances.\n     * @param proof Inclusion proof for this leaf in pool rebalance root in root bundle.\n     */\n\n    function executeRootBundle(\n        uint256 chainId,\n        uint256 groupIndex,\n        uint256[] memory bundleLpFees,\n        int256[] memory netSendAmounts,\n        int256[] memory runningBalances,\n        uint8 leafId,\n        address[] memory l1Tokens,\n        bytes32[] calldata proof\n    ) public nonReentrant unpaused {\n        require(getCurrentTime() > rootBundleProposal.challengePeriodEndTimestamp, \"Not passed liveness\");\n\n        // Verify the leafId in the poolRebalanceLeaf has not yet been claimed.\n        require(!MerkleLib.isClaimed1D(rootBundleProposal.claimedBitMap, leafId), \"Already claimed\");\n\n        // Verify the props provided generate a leaf that, along with the proof, are included in the merkle root.\n        require(\n            MerkleLib.verifyPoolRebalance(\n                rootBundleProposal.poolRebalanceRoot,\n                PoolRebalanceLeaf({\n                    chainId: chainId,\n                    groupIndex: groupIndex,\n                    bundleLpFees: bundleLpFees,\n                    netSendAmounts: netSendAmounts,\n                    runningBalances: runningBalances,\n                    leafId: leafId,\n                    l1Tokens: l1Tokens\n                }),\n                proof\n            ),\n            \"Bad Proof\"\n        );\n        // Grouping code that uses adapter and spokepool to avoid stack too deep warning.\n        // Get cross chain helpers for leaf's destination chain ID. This internal method will revert if either helper\n        // is set improperly.\n        (address adapter, address spokePool) = _getInitializedCrossChainContracts(chainId);\n\n        // Set the leafId in the claimed bitmap.\n        rootBundleProposal.claimedBitMap = MerkleLib.setClaimed1D(rootBundleProposal.claimedBitMap, leafId);\n\n        // Decrement the unclaimedPoolRebalanceLeafCount.\n        --rootBundleProposal.unclaimedPoolRebalanceLeafCount;\n\n        // Relay each L1 token to destination chain.\n        // Note: if any of the keccak256(l1Tokens, chainId) combinations are not mapped to a destination token address,\n        // then this internal method will revert. In this case the admin will have to associate a destination token\n        // with each l1 token. If the destination token mapping was missing at the time of the proposal, we assume\n        // that the root bundle would have been disputed because the off-chain data worker would have been unable to\n        // determine if the relayers used the correct destination token for a given origin token.\n        _sendTokensToChainAndUpdatePooledTokenTrackers(\n            adapter,\n            spokePool,\n            chainId,\n            l1Tokens,\n            netSendAmounts,\n            bundleLpFees\n        );\n\n        // Check bool used by data worker to prevent relaying redundant roots to SpokePool.\n        if (groupIndex == 0) {\n            // Relay root bundles to spoke pool on destination chain by\n            // performing delegatecall to use the adapter's code with this contract's context.\n\n            // We are ok with this low-level call since the adapter address is set by the admin and we've\n            // already checked that its not the zero address.\n            // solhint-disable-next-line avoid-low-level-calls\n            (bool success, ) = adapter.delegatecall(\n                abi.encodeWithSignature(\n                    \"relayMessage(address,bytes)\",\n                    spokePool, // target. This should be the spokePool on the L2.\n                    abi.encodeWithSignature(\n                        \"relayRootBundle(bytes32,bytes32)\",\n                        rootBundleProposal.relayerRefundRoot,\n                        rootBundleProposal.slowRelayRoot\n                    ) // message\n                )\n            );\n            require(success, \"delegatecall failed\");\n        }\n\n        // Transfer the bondAmount back to the proposer, if this the last executed leaf. Only sending this once all\n        // leaves have been executed acts to force the data worker to execute all bundles or they won't receive their bond.\n        if (rootBundleProposal.unclaimedPoolRebalanceLeafCount == 0)\n            bondToken.safeTransfer(rootBundleProposal.proposer, bondAmount);\n\n        emit RootBundleExecuted(\n            groupIndex,\n            leafId,\n            chainId,\n            l1Tokens,\n            bundleLpFees,\n            netSendAmounts,\n            runningBalances,\n            msg.sender\n        );\n    }\n\n    /**\n     * @notice Caller stakes a bond to dispute the current root bundle proposal assuming it has not passed liveness\n     * yet. The proposal is deleted, allowing a follow-up proposal to be submitted, and the dispute is sent to the\n     * optimistic oracle to be adjudicated. Can only be called within the liveness period of the current proposal.\n     * @notice The caller of this function must approve this contract to spend bondAmount of l1Token.\n     */\n    function disputeRootBundle() public nonReentrant zeroOptimisticOracleApproval {\n        uint32 currentTime = uint32(getCurrentTime());\n        require(currentTime <= rootBundleProposal.challengePeriodEndTimestamp, \"Request passed liveness\");\n\n        // Request price from OO and dispute it.\n        uint256 finalFee = _getBondTokenFinalFee();\n\n        // This method will request a price from the OO and dispute it. Note that we set the ancillary data to\n        // the empty string (\"\"). The root bundle that is being disputed was the most recently proposed one with a\n        // block number less than or equal to the dispute block time. All of this root bundle data can be found in\n        // the ProposeRootBundle event params. Moreover, the optimistic oracle will stamp the requester's address\n        // (i.e. this contract address) meaning that ancillary data for a dispute originating from another HubPool\n        // will always be distinct from a dispute originating from this HubPool. Moreover, since\n        // bundleEvaluationNumbers for a root bundle proposal are not stored in this contract, DVM voters will always\n        // have to look up the ProposeRootBundle event to evaluate a dispute, therefore there is no point emitting extra\n        // data in this ancillary data that is already included in the ProposeRootBundle event.\n\n        // If the finalFee is larger than the bond amount, the bond amount needs to be reset before a request can go\n        // through. Cancel to avoid a revert. Similarly, if the final fee == bond amount, then the proposer bond\n        // set in the optimistic oracle would be 0. The optimistic oracle would then default the bond to be equal\n        // to the final fee, which would mean that the allowance set to the bondAmount would be insufficient and the\n        // requestAndProposePriceFor() call would revert. Source: https://github.com/UMAprotocol/protocol/blob/5b37ea818a28479c01e458389a83c3e736306b17/packages/core/contracts/oracle/implementation/SkinnyOptimisticOracle.sol#L321\n        if (finalFee >= bondAmount) {\n            _cancelBundle();\n            return;\n        }\n\n        SkinnyOptimisticOracleInterface optimisticOracle = _getOptimisticOracle();\n\n        // Only approve exact tokens to avoid more tokens than expected being pulled into the OptimisticOracle.\n        bondToken.safeIncreaseAllowance(address(optimisticOracle), bondAmount);\n        try\n            optimisticOracle.requestAndProposePriceFor(\n                identifier,\n                currentTime,\n                \"\",\n                bondToken,\n                // Set reward to 0, since we'll settle proposer reward payouts directly from this contract after a root\n                // proposal has passed the challenge period.\n                0,\n                // Set the Optimistic oracle proposer bond for the request. We can assume that bondAmount > finalFee.\n                bondAmount - finalFee,\n                // Set the Optimistic oracle liveness for the price request.\n                liveness,\n                rootBundleProposal.proposer,\n                // Canonical value representing \"True\"; i.e. the proposed relay is valid.\n                int256(1e18)\n            )\n        returns (uint256) {\n            // Ensure that approval == 0 after the call so the increaseAllowance call below doesn't allow more tokens\n            // to transfer than intended.\n            bondToken.safeApprove(address(optimisticOracle), 0);\n        } catch {\n            // Cancel the bundle since the proposal failed.\n            _cancelBundle();\n            return;\n        }\n\n        // Dispute the request that we just sent.\n        SkinnyOptimisticOracleInterface.Request memory ooPriceRequest = SkinnyOptimisticOracleInterface.Request({\n            proposer: rootBundleProposal.proposer,\n            disputer: address(0),\n            currency: bondToken,\n            settled: false,\n            proposedPrice: int256(1e18),\n            resolvedPrice: 0,\n            expirationTime: currentTime + liveness,\n            reward: 0,\n            finalFee: finalFee,\n            bond: bondAmount - finalFee,\n            customLiveness: liveness\n        });\n\n        // Finally, delete the state pertaining to the active proposal so that another proposer can submit a new bundle.\n        delete rootBundleProposal;\n\n        bondToken.safeTransferFrom(msg.sender, address(this), bondAmount);\n        bondToken.safeIncreaseAllowance(address(optimisticOracle), bondAmount);\n        optimisticOracle.disputePriceFor(identifier, currentTime, \"\", ooPriceRequest, msg.sender, address(this));\n\n        emit RootBundleDisputed(msg.sender, currentTime);\n    }\n\n    /**\n     * @notice Send unclaimed accumulated protocol fees to fee capture address.\n     * @param l1Token Token whose protocol fees the caller wants to disburse.\n     */\n    function claimProtocolFeesCaptured(address l1Token) public override nonReentrant {\n        uint256 _unclaimedAccumulatedProtocolFees = unclaimedAccumulatedProtocolFees[l1Token];\n        unclaimedAccumulatedProtocolFees[l1Token] = 0;\n        IERC20(l1Token).safeTransfer(protocolFeeCaptureAddress, _unclaimedAccumulatedProtocolFees);\n        emit ProtocolFeesCapturedClaimed(l1Token, _unclaimedAccumulatedProtocolFees);\n    }\n\n    /**\n     * @notice Conveniently queries which destination token is mapped to the hash of an l1 token + destination chain ID.\n     * @dev Admin must be considerate to the compatibility of originToken and destinationToken within the protocol. Some\n     * token implementations will not function correctly within the Across v2 system. For example ERC20s that charge\n     * fees will break internal accounting, ERC777 can cause some functions to revert and upgradable tokens can pose\n     * risks if the implementation is shifted between whitelisting and usage.\n     * @dev If the pool rebalance route is not whitelisted then this will return address(0).\n     * @param destinationChainId Where destination token is deployed.\n     * @param l1Token Ethereum version token.\n     * @return destinationToken address The destination token that is sent to spoke pools after this contract bridges\n     * the l1Token to the destination chain.\n     */\n    function poolRebalanceRoute(uint256 destinationChainId, address l1Token)\n        external\n        view\n        override\n        returns (address destinationToken)\n    {\n        return poolRebalanceRoutes[_poolRebalanceRouteKey(l1Token, destinationChainId)];\n    }\n\n    /**\n     * @notice This function allows a caller to load the contract with raw ETH to perform L2 calls. This is needed for\n     * Arbitrum calls, but may also be needed for others.\n     * @dev This function cannot be included in a multicall transaction call because it is payable. A realistic\n     * situation where this might be an issue is if the caller is executing a PoolRebalanceLeaf that needs to relay\n     * messages to Arbitrum. Relaying messages to Arbitrum requires that this contract has an ETH balance, so in this\n     * case the caller would need to pre-load this contract with ETH before multicall-executing the leaf.\n     */\n    function loadEthForL2Calls() public payable override {\n        /* solhint-disable-line no-empty-blocks */\n    }\n\n    /*************************************************\n     *              INTERNAL FUNCTIONS               *\n     *************************************************/\n\n    // Called when a dispute fails due to parameter changes. This effectively resets the state and cancels the request\n    // with no loss of funds, thereby enabling a new bundle to be added.\n    function _cancelBundle() internal {\n        bondToken.transfer(rootBundleProposal.proposer, bondAmount);\n        delete rootBundleProposal;\n        emit RootBundleCanceled(msg.sender, getCurrentTime());\n    }\n\n    function _getOptimisticOracle() internal view returns (SkinnyOptimisticOracleInterface) {\n        return\n            SkinnyOptimisticOracleInterface(finder.getImplementationAddress(OracleInterfaces.SkinnyOptimisticOracle));\n    }\n\n    function _getBondTokenFinalFee() internal view returns (uint256) {\n        return\n            StoreInterface(finder.getImplementationAddress(OracleInterfaces.Store))\n                .computeFinalFee(address(bondToken))\n                .rawValue;\n    }\n\n    // Note this method does a lot and wraps together the sending of tokens and updating the pooled token trackers. This\n    // is done as a gas saving so we don't need to iterate over the l1Tokens multiple times.\n    function _sendTokensToChainAndUpdatePooledTokenTrackers(\n        address adapter,\n        address spokePool,\n        uint256 chainId,\n        address[] memory l1Tokens,\n        int256[] memory netSendAmounts,\n        uint256[] memory bundleLpFees\n    ) internal {\n        uint256 length = l1Tokens.length;\n        for (uint256 i = 0; i < length; ) {\n            address l1Token = l1Tokens[i];\n            // Validate the L1 -> L2 token route is stored. If it is not then the output of the bridging action\n            // could send tokens to the 0x0 address on the L2.\n            address l2Token = poolRebalanceRoutes[_poolRebalanceRouteKey(l1Token, chainId)];\n            require(l2Token != address(0), \"Route not whitelisted\");\n\n            // If the net send amount for this token is positive then: 1) send tokens from L1->L2 to facilitate the L2\n            // relayer refund, 2) Update the liquidity trackers for the associated pooled tokens.\n            if (netSendAmounts[i] > 0) {\n                // Perform delegatecall to use the adapter's code with this contract's context. Opt for delegatecall's\n                // complexity in exchange for lower gas costs.\n\n                // We are ok with this low-level call since the adapter address is set by the admin and we've\n                // already checked that its not the zero address.\n                // solhint-disable-next-line avoid-low-level-calls\n                (bool success, ) = adapter.delegatecall(\n                    abi.encodeWithSignature(\n                        \"relayTokens(address,address,uint256,address)\",\n                        l1Token, // l1Token.\n                        l2Token, // l2Token.\n                        uint256(netSendAmounts[i]), // amount.\n                        spokePool // to. This should be the spokePool.\n                    )\n                );\n                require(success, \"delegatecall failed\");\n\n                // Liquid reserves is decreased by the amount sent. utilizedReserves is increased by the amount sent.\n                pooledTokens[l1Token].utilizedReserves += netSendAmounts[i];\n                pooledTokens[l1Token].liquidReserves -= uint256(netSendAmounts[i]);\n            }\n\n            // Allocate LP fees and protocol fees from the bundle to the associated pooled token trackers.\n            _allocateLpAndProtocolFees(l1Token, bundleLpFees[i]);\n\n            // L1 tokens length won't be > types(uint256).length, so use unchecked block to save gas. Based on the\n            // stress test results in /test/gas-analytics/HubPool.RootExecution.ts, the UMIP should limit the L1 token\n            // count in valid proposals to be ~100 so any PoolRebalanceLeaves with > 100 l1Tokens should not make it\n            // to this stage.\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    function _exchangeRateCurrent(address l1Token) internal returns (uint256) {\n        PooledToken storage pooledToken = pooledTokens[l1Token]; // Note this is storage so the state can be modified.\n        uint256 lpTokenTotalSupply = IERC20(pooledToken.lpToken).totalSupply();\n        if (lpTokenTotalSupply == 0) return 1e18; // initial rate is 1:1 between LP tokens and collateral.\n\n        // First, update fee counters and local accounting of finalized transfers from L2 -> L1.\n        _updateAccumulatedLpFees(pooledToken); // Accumulate all allocated fees from the last time this method was called.\n        _sync(l1Token); // Fetch any balance changes due to token bridging finalization and factor them in.\n\n        // ExchangeRate := (liquidReserves + utilizedReserves - undistributedLpFees) / lpTokenSupply\n        // Both utilizedReserves and undistributedLpFees contain assigned LP fees. UndistributedLpFees is gradually\n        // decreased over the smear duration using _updateAccumulatedLpFees. This means that the exchange rate will\n        // gradually increase over time as undistributedLpFees goes to zero.\n        // utilizedReserves can be negative. If this is the case, then liquidReserves is offset by an equal\n        // and opposite size. LiquidReserves + utilizedReserves will always be larger than undistributedLpFees so this\n        // int will always be positive so there is no risk in underflow in type casting in the return line.\n        int256 numerator = int256(pooledToken.liquidReserves) +\n            pooledToken.utilizedReserves -\n            int256(pooledToken.undistributedLpFees);\n        return (uint256(numerator) * 1e18) / lpTokenTotalSupply;\n    }\n\n    // Update internal fee counters by adding in any accumulated fees from the last time this logic was called.\n    function _updateAccumulatedLpFees(PooledToken storage pooledToken) internal {\n        uint256 accumulatedFees = _getAccumulatedFees(pooledToken.undistributedLpFees, pooledToken.lastLpFeeUpdate);\n        pooledToken.undistributedLpFees -= accumulatedFees;\n        pooledToken.lastLpFeeUpdate = uint32(getCurrentTime());\n    }\n\n    // Calculate the unallocated accumulatedFees from the last time the contract was called.\n    function _getAccumulatedFees(uint256 undistributedLpFees, uint256 lastLpFeeUpdate) internal view returns (uint256) {\n        // accumulatedFees := min(undistributedLpFees * lpFeeRatePerSecond * timeFromLastInteraction, undistributedLpFees)\n        // The min acts to pay out all fees in the case the equation returns more than the remaining fees.\n        uint256 timeFromLastInteraction = getCurrentTime() - lastLpFeeUpdate;\n        uint256 maxUndistributedLpFees = (undistributedLpFees * lpFeeRatePerSecond * timeFromLastInteraction) / (1e18);\n        return maxUndistributedLpFees < undistributedLpFees ? maxUndistributedLpFees : undistributedLpFees;\n    }\n\n    function _sync(address l1Token) internal {\n        // Check if the l1Token balance of the contract is greater than the liquidReserves. If it is then the bridging\n        // action from L2 -> L1 has concluded and the local accounting can be updated.\n        // Note: this calculation must take into account the bond when it's acting on the bond token and there's an\n        // active request.\n        uint256 balance = IERC20(l1Token).balanceOf(address(this));\n        uint256 balanceSansBond = l1Token == address(bondToken) && _activeRequest() ? balance - bondAmount : balance;\n        if (balanceSansBond > pooledTokens[l1Token].liquidReserves) {\n            // Note the numerical operation below can send utilizedReserves to negative. This can occur when tokens are\n            // dropped onto the contract, exceeding the liquidReserves.\n            pooledTokens[l1Token].utilizedReserves -= int256(balanceSansBond - pooledTokens[l1Token].liquidReserves);\n            pooledTokens[l1Token].liquidReserves = balanceSansBond;\n        }\n    }\n\n    function _liquidityUtilizationPostRelay(address l1Token, uint256 relayedAmount) internal returns (uint256) {\n        _sync(l1Token); // Fetch any balance changes due to token bridging finalization and factor them in.\n\n        // liquidityUtilizationRatio := (relayedAmount + max(utilizedReserves,0)) / (liquidReserves + max(utilizedReserves,0))\n        // UtilizedReserves has a dual meaning: if it's greater than zero then it represents funds pending in the bridge\n        // that will flow from L2 to L1. In this case, we can use it normally in the equation. However, if it is\n        // negative, then it is already counted in liquidReserves. This occurs if tokens are transferred directly to the\n        // contract. In this case, ignore it as it is captured in liquid reserves and has no meaning in the numerator.\n        PooledToken memory pooledL1Token = pooledTokens[l1Token];\n        uint256 flooredUtilizedReserves = pooledL1Token.utilizedReserves > 0\n            ? uint256(pooledL1Token.utilizedReserves) // If positive: take the uint256 cast utilizedReserves.\n            : 0; // Else, if negative, it is already captured in liquidReserves and should be ignored.\n        uint256 numerator = relayedAmount + flooredUtilizedReserves;\n        uint256 denominator = pooledL1Token.liquidReserves + flooredUtilizedReserves;\n\n        // If the denominator equals zero, return 1e18 (max utilization).\n        if (denominator == 0) return 1e18;\n\n        // In all other cases, return the utilization ratio.\n        return (numerator * 1e18) / denominator;\n    }\n\n    function _allocateLpAndProtocolFees(address l1Token, uint256 bundleLpFees) internal {\n        // Calculate the fraction of bundledLpFees that are allocated to the protocol and to the LPs.\n        uint256 protocolFeesCaptured = (bundleLpFees * protocolFeeCapturePct) / 1e18;\n        uint256 lpFeesCaptured = bundleLpFees - protocolFeesCaptured;\n\n        // Assign any LP fees included into the bundle to the pooled token. These LP fees are tracked in the\n        // undistributedLpFees and within the utilizedReserves. undistributedLpFees is gradually decreased\n        // over the smear duration to give the LPs their rewards over a period of time. Adding to utilizedReserves\n        // acts to track these rewards after the smear duration. See _exchangeRateCurrent for more details.\n        if (lpFeesCaptured > 0) {\n            pooledTokens[l1Token].undistributedLpFees += lpFeesCaptured;\n            pooledTokens[l1Token].utilizedReserves += int256(lpFeesCaptured);\n        }\n\n        // If there are any protocol fees, allocate them to the unclaimed protocol tracker amount.\n        if (protocolFeesCaptured > 0) unclaimedAccumulatedProtocolFees[l1Token] += protocolFeesCaptured;\n    }\n\n    function _relaySpokePoolAdminFunction(uint256 chainId, bytes memory functionData) internal {\n        (address adapter, address spokePool) = _getInitializedCrossChainContracts(chainId);\n\n        // Perform delegatecall to use the adapter's code with this contract's context.\n\n        // We are ok with this low-level call since the adapter address is set by the admin and we've\n        // already checked that its not the zero address.\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, ) = adapter.delegatecall(\n            abi.encodeWithSignature(\n                \"relayMessage(address,bytes)\",\n                spokePool, // target. This should be the spokePool on the L2.\n                functionData\n            )\n        );\n        require(success, \"delegatecall failed\");\n        emit SpokePoolAdminFunctionTriggered(chainId, functionData);\n    }\n\n    function _poolRebalanceRouteKey(address l1Token, uint256 destinationChainId) internal pure returns (bytes32) {\n        return keccak256(abi.encode(l1Token, destinationChainId));\n    }\n\n    function _getInitializedCrossChainContracts(uint256 chainId)\n        internal\n        view\n        returns (address adapter, address spokePool)\n    {\n        adapter = crossChainContracts[chainId].adapter;\n        spokePool = crossChainContracts[chainId].spokePool;\n        require(spokePool != address(0), \"SpokePool not initialized\");\n        require(adapter.isContract(), \"Adapter not initialized\");\n    }\n\n    function _activeRequest() internal view returns (bool) {\n        return rootBundleProposal.unclaimedPoolRebalanceLeafCount != 0;\n    }\n\n    // If functionCallStackOriginatesFromOutsideThisContract is true then this was called by the callback function\n    // by dropping ETH onto the contract. In this case, deposit the ETH into WETH. This would happen if ETH was sent\n    // over the optimism bridge, for example. If false then this was set as a result of unwinding LP tokens, with the\n    // intention of sending ETH to the LP. In this case, do nothing as we intend on sending the ETH to the LP.\n    function _depositEthToWeth() internal {\n        if (functionCallStackOriginatesFromOutsideThisContract()) weth.deposit{ value: msg.value }();\n    }\n\n    // Added to enable the HubPool to receive ETH. This will occur both when the HubPool unwraps WETH to send to LPs and\n    // when ETH is sent over the canonical Optimism bridge, which sends ETH.\n    fallback() external payable {\n        _depositEthToWeth();\n    }\n\n    receive() external payable {\n        _depositEthToWeth();\n    }\n}\n"},"contracts/interfaces/HubPoolInterface.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @notice Concise list of functions in HubPool implementation.\n */\ninterface HubPoolInterface {\n    // This leaf is meant to be decoded in the HubPool to rebalance tokens between HubPool and SpokePool.\n    struct PoolRebalanceLeaf {\n        // This is used to know which chain to send cross-chain transactions to (and which SpokePool to send to).\n        uint256 chainId;\n        // Total LP fee amount per token in this bundle, encompassing all associated bundled relays.\n        uint256[] bundleLpFees;\n        // Represents the amount to push to or pull from the SpokePool. If +, the pool pays the SpokePool. If negative\n        // the SpokePool pays the HubPool. There can be arbitrarily complex rebalancing rules defined offchain. This\n        // number is only nonzero when the rules indicate that a rebalancing action should occur. When a rebalance does\n        // occur, runningBalances must be set to zero for this token and netSendAmounts should be set to the previous\n        // runningBalances + relays - deposits in this bundle. If non-zero then it must be set on the SpokePool's\n        // RelayerRefundLeaf amountToReturn as -1 * this value to show if funds are being sent from or to the SpokePool.\n        int256[] netSendAmounts;\n        // This is only here to be emitted in an event to track a running unpaid balance between the L2 pool and the L1\n        // pool. A positive number indicates that the HubPool owes the SpokePool funds. A negative number indicates that\n        // the SpokePool owes the HubPool funds. See the comment above for the dynamics of this and netSendAmounts.\n        int256[] runningBalances;\n        // Used by data worker to mark which leaves should relay roots to SpokePools, and to otherwise organize leaves.\n        // For example, each leaf should contain all the rebalance information for a single chain, but in the case where\n        // the list of l1Tokens is very large such that they all can't fit into a single leaf that can be executed under\n        // the block gas limit, then the data worker can use this groupIndex to organize them. Any leaves with\n        // a groupIndex equal to 0 will relay roots to the SpokePool, so the data worker should ensure that only one\n        // leaf for a specific chainId should have a groupIndex equal to 0.\n        uint256 groupIndex;\n        // Used as the index in the bitmap to track whether this leaf has been executed or not.\n        uint8 leafId;\n        // The bundleLpFees, netSendAmounts, and runningBalances are required to be the same length. They are parallel\n        // arrays for the given chainId and should be ordered by the l1Tokens field. All whitelisted tokens with nonzero\n        // relays on this chain in this bundle in the order of whitelisting.\n        address[] l1Tokens;\n    }\n\n    // A data worker can optimistically store several merkle roots on this contract by staking a bond and calling\n    // proposeRootBundle. By staking a bond, the data worker is alleging that the merkle roots all contain valid leaves\n    // that can be executed later to:\n    // - Send funds from this contract to a SpokePool or vice versa\n    // - Send funds from a SpokePool to Relayer as a refund for a relayed deposit\n    // - Send funds from a SpokePool to a deposit recipient to fulfill a \"slow\" relay\n    // Anyone can dispute this struct if the merkle roots contain invalid leaves before the\n    // challengePeriodEndTimestamp. Once the expiration timestamp is passed, executeRootBundle to execute a leaf\n    // from the poolRebalanceRoot on this contract and it will simultaneously publish the relayerRefundRoot and\n    // slowRelayRoot to a SpokePool. The latter two roots, once published to the SpokePool, contain\n    // leaves that can be executed on the SpokePool to pay relayers or recipients.\n    struct RootBundle {\n        // Contains leaves instructing this contract to send funds to SpokePools.\n        bytes32 poolRebalanceRoot;\n        // Relayer refund merkle root to be published to a SpokePool.\n        bytes32 relayerRefundRoot;\n        // Slow relay merkle root to be published to a SpokePool.\n        bytes32 slowRelayRoot;\n        // This is a 1D bitmap, with max size of 256 elements, limiting us to 256 chainsIds.\n        uint256 claimedBitMap;\n        // Proposer of this root bundle.\n        address proposer;\n        // Number of pool rebalance leaves to execute in the poolRebalanceRoot. After this number\n        // of leaves are executed, a new root bundle can be proposed\n        uint8 unclaimedPoolRebalanceLeafCount;\n        // When root bundle challenge period passes and this root bundle becomes executable.\n        uint32 challengePeriodEndTimestamp;\n    }\n\n    // Each whitelisted L1 token has an associated pooledToken struct that contains all information used to track the\n    // cumulative LP positions and if this token is enabled for deposits.\n    struct PooledToken {\n        // LP token given to LPs of a specific L1 token.\n        address lpToken;\n        // True if accepting new LP's.\n        bool isEnabled;\n        // Timestamp of last LP fee update.\n        uint32 lastLpFeeUpdate;\n        // Number of LP funds sent via pool rebalances to SpokePools and are expected to be sent\n        // back later.\n        int256 utilizedReserves;\n        // Number of LP funds held in contract less utilized reserves.\n        uint256 liquidReserves;\n        // Number of LP funds reserved to pay out to LPs as fees.\n        uint256 undistributedLpFees;\n    }\n\n    // Helper contracts to facilitate cross chain actions between HubPool and SpokePool for a specific network.\n    struct CrossChainContract {\n        address adapter;\n        address spokePool;\n    }\n\n    function setPaused(bool pause) external;\n\n    function emergencyDeleteProposal() external;\n\n    function relaySpokePoolAdminFunction(uint256 chainId, bytes memory functionData) external;\n\n    function setProtocolFeeCapture(address newProtocolFeeCaptureAddress, uint256 newProtocolFeeCapturePct) external;\n\n    function setBond(IERC20 newBondToken, uint256 newBondAmount) external;\n\n    function setLiveness(uint32 newLiveness) external;\n\n    function setIdentifier(bytes32 newIdentifier) external;\n\n    function setCrossChainContracts(\n        uint256 l2ChainId,\n        address adapter,\n        address spokePool\n    ) external;\n\n    function enableL1TokenForLiquidityProvision(address l1Token) external;\n\n    function disableL1TokenForLiquidityProvision(address l1Token) external;\n\n    function addLiquidity(address l1Token, uint256 l1TokenAmount) external payable;\n\n    function removeLiquidity(\n        address l1Token,\n        uint256 lpTokenAmount,\n        bool sendEth\n    ) external;\n\n    function exchangeRateCurrent(address l1Token) external returns (uint256);\n\n    function liquidityUtilizationCurrent(address l1Token) external returns (uint256);\n\n    function liquidityUtilizationPostRelay(address l1Token, uint256 relayedAmount) external returns (uint256);\n\n    function sync(address l1Token) external;\n\n    function proposeRootBundle(\n        uint256[] memory bundleEvaluationBlockNumbers,\n        uint8 poolRebalanceLeafCount,\n        bytes32 poolRebalanceRoot,\n        bytes32 relayerRefundRoot,\n        bytes32 slowRelayRoot\n    ) external;\n\n    function executeRootBundle(\n        uint256 chainId,\n        uint256 groupIndex,\n        uint256[] memory bundleLpFees,\n        int256[] memory netSendAmounts,\n        int256[] memory runningBalances,\n        uint8 leafId,\n        address[] memory l1Tokens,\n        bytes32[] memory proof\n    ) external;\n\n    function disputeRootBundle() external;\n\n    function claimProtocolFeesCaptured(address l1Token) external;\n\n    function setPoolRebalanceRoute(\n        uint256 destinationChainId,\n        address l1Token,\n        address destinationToken\n    ) external;\n\n    function setDepositRoute(\n        uint256 originChainId,\n        uint256 destinationChainId,\n        address originToken,\n        bool depositsEnabled\n    ) external;\n\n    function poolRebalanceRoute(uint256 destinationChainId, address l1Token)\n        external\n        view\n        returns (address destinationToken);\n\n    function loadEthForL2Calls() external payable;\n}\n"},"contracts/interfaces/LpTokenFactoryInterface.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\n/**\n * @notice Factory to create new LP ERC20 tokens that represent a liquidity provider's position. HubPool is the\n * intended client of this contract.\n */\ninterface LpTokenFactoryInterface {\n    /**\n     * @notice Deploys new LP token for L1 token. Sets caller as minter and burner of token.\n     * @param l1Token L1 token to name in LP token name.\n     * @return address of new LP token.\n     */\n    function createLpToken(address l1Token) external returns (address);\n}\n"},"contracts/interfaces/SpokePoolInterface.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\n/**\n * @notice Contains common data structures and functions used by all SpokePool implementations.\n */\ninterface SpokePoolInterface {\n    // This leaf is meant to be decoded in the SpokePool to pay out successful relayers.\n    struct RelayerRefundLeaf {\n        // This is the amount to return to the HubPool. This occurs when there is a PoolRebalanceLeaf netSendAmount that\n        // is negative. This is just the negative of this value.\n        uint256 amountToReturn;\n        // Used to verify that this is being executed on the correct destination chainId.\n        uint256 chainId;\n        // This array designates how much each of those addresses should be refunded.\n        uint256[] refundAmounts;\n        // Used as the index in the bitmap to track whether this leaf has been executed or not.\n        uint32 leafId;\n        // The associated L2TokenAddress that these claims apply to.\n        address l2TokenAddress;\n        // Must be same length as refundAmounts and designates each address that must be refunded.\n        address[] refundAddresses;\n    }\n\n    // This struct represents the data to fully specify a relay. If any portion of this data differs, the relay is\n    // considered to be completely distinct. Only one relay for a particular depositId, chainId pair should be\n    // considered valid and repaid. This data is hashed and inserted into the slow relay merkle root so that an off\n    // chain validator can choose when to refund slow relayers.\n    /// @custom:audit FOLLOWING STRUCT TO BE DEPRECATED\n    struct RelayData {\n        // The address that made the deposit on the origin chain.\n        address depositor;\n        // The recipient address on the destination chain.\n        address recipient;\n        // The corresponding token address on the destination chain.\n        address destinationToken;\n        // The total relay amount before fees are taken out.\n        uint256 amount;\n        // Origin chain id.\n        uint256 originChainId;\n        // Destination chain id.\n        uint256 destinationChainId;\n        // The LP Fee percentage computed by the relayer based on the deposit's quote timestamp\n        // and the HubPool's utilization.\n        int64 realizedLpFeePct;\n        // The relayer fee percentage specified in the deposit.\n        int64 relayerFeePct;\n        // The id uniquely identifying this deposit on the origin chain.\n        uint32 depositId;\n        // Data that is forwarded to the recipient.\n        bytes message;\n    }\n\n    /// @custom:audit FOLLOWING STRUCT TO BE DEPRECATED\n    struct SlowFill {\n        RelayData relayData;\n        int256 payoutAdjustmentPct;\n    }\n\n    // Stores collection of merkle roots that can be published to this contract from the HubPool, which are referenced\n    // by \"data workers\" via inclusion proofs to execute leaves in the roots.\n    struct RootBundle {\n        // Merkle root of slow relays that were not fully filled and whose recipient is still owed funds from the LP pool.\n        bytes32 slowRelayRoot;\n        // Merkle root of relayer refunds for successful relays.\n        bytes32 relayerRefundRoot;\n        // This is a 2D bitmap tracking which leaves in the relayer refund root have been claimed, with max size of\n        // 256x(2^248) leaves per root.\n        mapping(uint256 => uint256) claimedBitmap;\n    }\n\n    function setCrossDomainAdmin(address newCrossDomainAdmin) external;\n\n    function setHubPool(address newHubPool) external;\n\n    function setEnableRoute(\n        address originToken,\n        uint256 destinationChainId,\n        bool enable\n    ) external;\n\n    function pauseDeposits(bool pause) external;\n\n    function pauseFills(bool pause) external;\n\n    function relayRootBundle(bytes32 relayerRefundRoot, bytes32 slowRelayRoot) external;\n\n    function emergencyDeleteRootBundle(uint256 rootBundleId) external;\n\n    function deposit(\n        address recipient,\n        address originToken,\n        uint256 amount,\n        uint256 destinationChainId,\n        int64 relayerFeePct,\n        uint32 quoteTimestamp,\n        bytes memory message,\n        uint256 maxCount\n    ) external payable;\n\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function depositFor(\n        address depositor,\n        address recipient,\n        address originToken,\n        uint256 amount,\n        uint256 destinationChainId,\n        int64 relayerFeePct,\n        uint32 quoteTimestamp,\n        bytes memory message,\n        uint256 maxCount\n    ) external payable;\n\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function depositNow(\n        address recipient,\n        address originToken,\n        uint256 amount,\n        uint256 destinationChainId,\n        int64 relayerFeePct,\n        bytes memory message,\n        uint256 maxCount\n    ) external payable;\n\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function speedUpDeposit(\n        address depositor,\n        int64 updatedRelayerFeePct,\n        uint32 depositId,\n        address updatedRecipient,\n        bytes memory updatedMessage,\n        bytes memory depositorSignature\n    ) external;\n\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function fillRelay(\n        address depositor,\n        address recipient,\n        address destinationToken,\n        uint256 amount,\n        uint256 maxTokensToSend,\n        uint256 repaymentChainId,\n        uint256 originChainId,\n        int64 realizedLpFeePct,\n        int64 relayerFeePct,\n        uint32 depositId,\n        bytes memory message,\n        uint256 maxCount\n    ) external;\n\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function fillRelayWithUpdatedDeposit(\n        address depositor,\n        address recipient,\n        address updatedRecipient,\n        address destinationToken,\n        uint256 amount,\n        uint256 maxTokensToSend,\n        uint256 repaymentChainId,\n        uint256 originChainId,\n        int64 realizedLpFeePct,\n        int64 relayerFeePct,\n        int64 updatedRelayerFeePct,\n        uint32 depositId,\n        bytes memory message,\n        bytes memory updatedMessage,\n        bytes memory depositorSignature,\n        uint256 maxCount\n    ) external;\n\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function executeSlowRelayLeaf(\n        address depositor,\n        address recipient,\n        address destinationToken,\n        uint256 amount,\n        uint256 originChainId,\n        int64 realizedLpFeePct,\n        int64 relayerFeePct,\n        uint32 depositId,\n        uint32 rootBundleId,\n        bytes memory message,\n        int256 payoutAdjustment,\n        bytes32[] memory proof\n    ) external;\n\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function executeRelayerRefundLeaf(\n        uint32 rootBundleId,\n        SpokePoolInterface.RelayerRefundLeaf memory relayerRefundLeaf,\n        bytes32[] memory proof\n    ) external payable;\n\n    function chainId() external view returns (uint256);\n\n    error NotEOA();\n}\n"},"contracts/interfaces/V3SpokePoolInterface.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\n// Contains structs and functions used by SpokePool contracts to facilitate universal settlement.\ninterface V3SpokePoolInterface {\n    /**************************************\n     *              ENUMS                 *\n     **************************************/\n\n    // Fill status tracks on-chain state of deposit, uniquely identified by relayHash.\n    enum FillStatus {\n        Unfilled,\n        RequestedSlowFill,\n        Filled\n    }\n    // Fill type is emitted in the FilledRelay event to assist Dataworker with determining which types of\n    // fills to refund (e.g. only fast fills) and whether a fast fill created a sow fill excess.\n    enum FillType {\n        FastFill,\n        // Fast fills are normal fills that do not replace a slow fill request.\n        ReplacedSlowFill,\n        // Replaced slow fills are fast fills that replace a slow fill request. This type is used by the Dataworker\n        // to know when to send excess funds from the SpokePool to the HubPool because they can no longer be used\n        // for a slow fill execution.\n        SlowFill\n        // Slow fills are requested via requestSlowFill and executed by executeSlowRelayLeaf after a bundle containing\n        // the slow fill is validated.\n    }\n\n    /**************************************\n     *              STRUCTS               *\n     **************************************/\n\n    // This struct represents the data to fully specify a **unique** relay submitted on this chain.\n    // This data is hashed with the chainId() and saved by the SpokePool to prevent collisions and protect against\n    // replay attacks on other chains. If any portion of this data differs, the relay is considered to be\n    // completely distinct.\n    struct V3RelayData {\n        // The address that made the deposit on the origin chain.\n        address depositor;\n        // The recipient address on the destination chain.\n        address recipient;\n        // This is the exclusive relayer who can fill the deposit before the exclusivity deadline.\n        address exclusiveRelayer;\n        // Token that is deposited on origin chain by depositor.\n        address inputToken;\n        // Token that is received on destination chain by recipient.\n        address outputToken;\n        // The amount of input token deposited by depositor.\n        uint256 inputAmount;\n        // The amount of output token to be received by recipient.\n        uint256 outputAmount;\n        // Origin chain id.\n        uint256 originChainId;\n        // The id uniquely identifying this deposit on the origin chain.\n        uint32 depositId;\n        // The timestamp on the destination chain after which this deposit can no longer be filled.\n        uint32 fillDeadline;\n        // The timestamp on the destination chain after which any relayer can fill the deposit.\n        uint32 exclusivityDeadline;\n        // Data that is forwarded to the recipient.\n        bytes message;\n    }\n\n    // Contains parameters passed in by someone who wants to execute a slow relay leaf.\n    struct V3SlowFill {\n        V3RelayData relayData;\n        uint256 chainId;\n        uint256 updatedOutputAmount;\n    }\n\n    // Contains information about a relay to be sent along with additional information that is not unique to the\n    // relay itself but is required to know how to process the relay. For example, \"updatedX\" fields can be used\n    // by the relayer to modify fields of the relay with the depositor's permission, and \"repaymentChainId\" is specified\n    // by the relayer to determine where to take a relayer refund, but doesn't affect the uniqueness of the relay.\n    struct V3RelayExecutionParams {\n        V3RelayData relay;\n        bytes32 relayHash;\n        uint256 updatedOutputAmount;\n        address updatedRecipient;\n        bytes updatedMessage;\n        uint256 repaymentChainId;\n    }\n\n    // Packs together parameters emitted in FilledV3Relay because there are too many emitted otherwise.\n    // Similar to V3RelayExecutionParams, these parameters are not used to uniquely identify the deposit being\n    // filled so they don't have to be unpacked by all clients.\n    struct V3RelayExecutionEventInfo {\n        address updatedRecipient;\n        bytes updatedMessage;\n        uint256 updatedOutputAmount;\n        FillType fillType;\n    }\n\n    /**************************************\n     *              EVENTS                *\n     **************************************/\n\n    event V3FundsDeposited(\n        address inputToken,\n        address outputToken,\n        uint256 inputAmount,\n        uint256 outputAmount,\n        uint256 indexed destinationChainId,\n        uint32 indexed depositId,\n        uint32 quoteTimestamp,\n        uint32 fillDeadline,\n        uint32 exclusivityDeadline,\n        address indexed depositor,\n        address recipient,\n        address exclusiveRelayer,\n        bytes message\n    );\n\n    event RequestedSpeedUpV3Deposit(\n        uint256 updatedOutputAmount,\n        uint32 indexed depositId,\n        address indexed depositor,\n        address updatedRecipient,\n        bytes updatedMessage,\n        bytes depositorSignature\n    );\n\n    event FilledV3Relay(\n        address inputToken,\n        address outputToken,\n        uint256 inputAmount,\n        uint256 outputAmount,\n        uint256 repaymentChainId,\n        uint256 indexed originChainId,\n        uint32 indexed depositId,\n        uint32 fillDeadline,\n        uint32 exclusivityDeadline,\n        address exclusiveRelayer,\n        address indexed relayer,\n        address depositor,\n        address recipient,\n        bytes message,\n        V3RelayExecutionEventInfo relayExecutionInfo\n    );\n\n    event RequestedV3SlowFill(\n        address inputToken,\n        address outputToken,\n        uint256 inputAmount,\n        uint256 outputAmount,\n        uint256 indexed originChainId,\n        uint32 indexed depositId,\n        uint32 fillDeadline,\n        uint32 exclusivityDeadline,\n        address exclusiveRelayer,\n        address depositor,\n        address recipient,\n        bytes message\n    );\n\n    /**************************************\n     *              FUNCTIONS             *\n     **************************************/\n\n    function depositV3(\n        address depositor,\n        address recipient,\n        address inputToken,\n        address outputToken,\n        uint256 inputAmount,\n        uint256 outputAmount,\n        uint256 destinationChainId,\n        address exclusiveRelayer,\n        uint32 quoteTimestamp,\n        uint32 fillDeadline,\n        uint32 exclusivityDeadline,\n        bytes calldata message\n    ) external payable;\n\n    function speedUpV3Deposit(\n        address depositor,\n        uint32 depositId,\n        uint256 updatedOutputAmount,\n        address updatedRecipient,\n        bytes calldata updatedMessage,\n        bytes calldata depositorSignature\n    ) external;\n\n    function fillV3Relay(V3RelayData calldata relayData, uint256 repaymentChainId) external;\n\n    function fillV3RelayWithUpdatedDeposit(\n        V3RelayData calldata relayData,\n        uint256 repaymentChainId,\n        uint256 updatedOutputAmount,\n        address updatedRecipient,\n        bytes calldata updatedMessage,\n        bytes calldata depositorSignature\n    ) external;\n\n    function requestV3SlowFill(V3RelayData calldata relayData) external;\n\n    function executeV3SlowRelayLeaf(\n        V3SlowFill calldata slowFillLeaf,\n        uint32 rootBundleId,\n        bytes32[] calldata proof\n    ) external;\n\n    /**************************************\n     *              ERRORS                *\n     **************************************/\n\n    error DisabledRoute();\n    error InvalidQuoteTimestamp();\n    error InvalidFillDeadline();\n    error InvalidExclusiveRelayer();\n    error InvalidExclusivityDeadline();\n    error MsgValueDoesNotMatchInputAmount();\n    error NotExclusiveRelayer();\n    error NoSlowFillsInExclusivityWindow();\n    error RelayFilled();\n    error InvalidSlowFillRequest();\n    error ExpiredFillDeadline();\n    error InvalidMerkleProof();\n    error InvalidChainId();\n    error InvalidMerkleLeaf();\n    error ClaimedMerkleLeaf();\n    error InvalidPayoutAdjustmentPct();\n}\n"},"contracts/Lockable.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\n/**\n * @title A contract that provides modifiers to prevent reentrancy to state-changing and view-only methods. This contract\n * is inspired by https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/ReentrancyGuard.sol\n * and https://github.com/balancer-labs/balancer-core/blob/master/contracts/BPool.sol.\n * @dev The reason why we use this local contract instead of importing from uma/contracts is because of the addition\n * of the internal method `functionCallStackOriginatesFromOutsideThisContract` which doesn't exist in the one exported\n * by uma/contracts.\n */\ncontract Lockable {\n    bool internal _notEntered;\n\n    constructor() {\n        // Storing an initial non-zero value makes deployment a bit more expensive, but in exchange the refund on every\n        // call to nonReentrant will be lower in amount. Since refunds are capped to a percentage of the total\n        // transaction's gas, it is best to keep them low in cases like this one, to increase the likelihood of the full\n        // refund coming into effect.\n        _notEntered = true;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a nonReentrant function from another nonReentrant function is not supported. It is possible to\n     * prevent this from happening by making the nonReentrant function external, and making it call a private\n     * function that does the actual state modification.\n     */\n    modifier nonReentrant() {\n        _preEntranceCheck();\n        _preEntranceSet();\n        _;\n        _postEntranceReset();\n    }\n\n    /**\n     * @dev Designed to prevent a view-only method from being re-entered during a call to a nonReentrant() state-changing method.\n     */\n    modifier nonReentrantView() {\n        _preEntranceCheck();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is currently in a non-entered state, meaning that the origination of the call\n     * came from outside the contract. This is relevant with fallback/receive methods to see if the call came from ETH\n     * being dropped onto the contract externally or due to ETH dropped on the the contract from within a method in this\n     * contract, such as unwrapping WETH to ETH within the contract.\n     */\n    function functionCallStackOriginatesFromOutsideThisContract() internal view returns (bool) {\n        return _notEntered;\n    }\n\n    // Internal methods are used to avoid copying the require statement's bytecode to every nonReentrant() method.\n    // On entry into a function, _preEntranceCheck() should always be called to check if the function is being\n    // re-entered. Then, if the function modifies state, it should call _postEntranceSet(), perform its logic, and\n    // then call _postEntranceReset().\n    // View-only methods can simply call _preEntranceCheck() to make sure that it is not being re-entered.\n    function _preEntranceCheck() internal view {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_notEntered, \"ReentrancyGuard: reentrant call\");\n    }\n\n    function _preEntranceSet() internal {\n        // Any calls to nonReentrant after this point will fail\n        _notEntered = false;\n    }\n\n    function _postEntranceReset() internal {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _notEntered = true;\n    }\n}\n"},"contracts/MerkleLib.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\nimport \"./interfaces/SpokePoolInterface.sol\";\nimport \"./interfaces/V3SpokePoolInterface.sol\";\nimport \"./interfaces/HubPoolInterface.sol\";\n\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\n\n/**\n * @notice Library to help with merkle roots, proofs, and claims.\n */\nlibrary MerkleLib {\n    /**\n     * @notice Verifies that a repayment is contained within a merkle root.\n     * @param root the merkle root.\n     * @param rebalance the rebalance struct.\n     * @param proof the merkle proof.\n     * @return bool to signal if the pool rebalance proof correctly shows inclusion of the rebalance within the tree.\n     */\n    function verifyPoolRebalance(\n        bytes32 root,\n        HubPoolInterface.PoolRebalanceLeaf memory rebalance,\n        bytes32[] memory proof\n    ) internal pure returns (bool) {\n        return MerkleProof.verify(proof, root, keccak256(abi.encode(rebalance)));\n    }\n\n    /**\n     * @notice Verifies that a relayer refund is contained within a merkle root.\n     * @param root the merkle root.\n     * @param refund the refund struct.\n     * @param proof the merkle proof.\n     * @return bool to signal if the relayer refund proof correctly shows inclusion of the refund within the tree.\n     */\n    function verifyRelayerRefund(\n        bytes32 root,\n        SpokePoolInterface.RelayerRefundLeaf memory refund,\n        bytes32[] memory proof\n    ) internal pure returns (bool) {\n        return MerkleProof.verify(proof, root, keccak256(abi.encode(refund)));\n    }\n\n    /**\n     * @notice Verifies that a distribution is contained within a merkle root.\n     * @param root the merkle root.\n     * @param slowRelayFulfillment the relayData fulfillment struct.\n     * @param proof the merkle proof.\n     * @return bool to signal if the slow relay's proof correctly shows inclusion of the slow relay within the tree.\n     */\n    /// @custom:audit FOLLOWING FUNCTION TO BE DEPRECATED\n    function verifySlowRelayFulfillment(\n        bytes32 root,\n        SpokePoolInterface.SlowFill memory slowRelayFulfillment,\n        bytes32[] memory proof\n    ) internal pure returns (bool) {\n        return MerkleProof.verify(proof, root, keccak256(abi.encode(slowRelayFulfillment)));\n    }\n\n    function verifyV3SlowRelayFulfillment(\n        bytes32 root,\n        V3SpokePoolInterface.V3SlowFill memory slowRelayFulfillment,\n        bytes32[] memory proof\n    ) internal pure returns (bool) {\n        return MerkleProof.verify(proof, root, keccak256(abi.encode(slowRelayFulfillment)));\n    }\n\n    // The following functions are primarily copied from\n    // https://github.com/Uniswap/merkle-distributor/blob/master/contracts/MerkleDistributor.sol with minor changes.\n\n    /**\n     * @notice Tests whether a claim is contained within a claimedBitMap mapping.\n     * @param claimedBitMap a simple uint256 mapping in storage used as a bitmap.\n     * @param index the index to check in the bitmap.\n     * @return bool indicating if the index within the claimedBitMap has been marked as claimed.\n     */\n    function isClaimed(mapping(uint256 => uint256) storage claimedBitMap, uint256 index) internal view returns (bool) {\n        uint256 claimedWordIndex = index / 256;\n        uint256 claimedBitIndex = index % 256;\n        uint256 claimedWord = claimedBitMap[claimedWordIndex];\n        uint256 mask = (1 << claimedBitIndex);\n        return claimedWord & mask == mask;\n    }\n\n    /**\n     * @notice Marks an index in a claimedBitMap as claimed.\n     * @param claimedBitMap a simple uint256 mapping in storage used as a bitmap.\n     * @param index the index to mark in the bitmap.\n     */\n    function setClaimed(mapping(uint256 => uint256) storage claimedBitMap, uint256 index) internal {\n        uint256 claimedWordIndex = index / 256;\n        uint256 claimedBitIndex = index % 256;\n        claimedBitMap[claimedWordIndex] = claimedBitMap[claimedWordIndex] | (1 << claimedBitIndex);\n    }\n\n    /**\n     * @notice Tests whether a claim is contained within a 1D claimedBitMap mapping.\n     * @param claimedBitMap a simple uint256 value, encoding a 1D bitmap.\n     * @param index the index to check in the bitmap. Uint8 type enforces that index can't be > 255.\n     * @return bool indicating if the index within the claimedBitMap has been marked as claimed.\n     */\n    function isClaimed1D(uint256 claimedBitMap, uint8 index) internal pure returns (bool) {\n        uint256 mask = (1 << index);\n        return claimedBitMap & mask == mask;\n    }\n\n    /**\n     * @notice Marks an index in a claimedBitMap as claimed.\n     * @param claimedBitMap a simple uint256 mapping in storage used as a bitmap. Uint8 type enforces that index\n     * can't be > 255.\n     * @param index the index to mark in the bitmap.\n     * @return uint256 representing the modified input claimedBitMap with the index set to true.\n     */\n    function setClaimed1D(uint256 claimedBitMap, uint8 index) internal pure returns (uint256) {\n        return claimedBitMap | (1 << index);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":1000},"viaIR":true,"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[954],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":955,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":954,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,954],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1868:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2134:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[],"usedEvents":[13]}],"src":"102:2514:0"},"id":0},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[190]},"id":191,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"131:70:1","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":190,"linearizedBaseContracts":[190],"name":"IERC20","nameLocation":"212:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"225:158:1","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":124,"name":"Transfer","nameLocation":"394:8:1","nodeType":"EventDefinition","parameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:1","nodeType":"VariableDeclaration","scope":124,"src":"403:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":120,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:1","nodeType":"VariableDeclaration","scope":124,"src":"425:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":122,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:1","nodeType":"VariableDeclaration","scope":124,"src":"445:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":121,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:1"},"src":"388:72:1"},{"anonymous":false,"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"466:148:1","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":133,"name":"Approval","nameLocation":"625:8:1","nodeType":"EventDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:1","nodeType":"VariableDeclaration","scope":133,"src":"634:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":129,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:1","nodeType":"VariableDeclaration","scope":133,"src":"657:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":131,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:1","nodeType":"VariableDeclaration","scope":133,"src":"682:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:1"},"src":"619:78:1"},{"documentation":{"id":134,"nodeType":"StructuredDocumentation","src":"703:66:1","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":139,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:1","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[],"src":"794:2:1"},"returnParameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":139,"src":"820:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":136,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:1"},"scope":190,"src":"774:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":140,"nodeType":"StructuredDocumentation","src":"835:72:1","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":147,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:1","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"mutability":"mutable","name":"account","nameLocation":"939:7:1","nodeType":"VariableDeclaration","scope":147,"src":"931:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":141,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:1"},"returnParameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":147,"src":"971:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":144,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:1"},"scope":190,"src":"912:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"986:202:1","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":157,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:1","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"to","nameLocation":"1219:2:1","nodeType":"VariableDeclaration","scope":157,"src":"1211:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":149,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"amount","nameLocation":"1231:6:1","nodeType":"VariableDeclaration","scope":157,"src":"1223:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":151,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:1"},"returnParameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":157,"src":"1257:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":154,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:1"},"scope":190,"src":"1193:70:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"1269:264:1","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":167,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:1","nodeType":"FunctionDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":160,"mutability":"mutable","name":"owner","nameLocation":"1565:5:1","nodeType":"VariableDeclaration","scope":167,"src":"1557:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"spender","nameLocation":"1580:7:1","nodeType":"VariableDeclaration","scope":167,"src":"1572:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:1"},"returnParameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":167,"src":"1612:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":164,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:1"},"scope":190,"src":"1538:83:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"1627:642:1","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":177,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:1","nodeType":"FunctionDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"spender","nameLocation":"2299:7:1","nodeType":"VariableDeclaration","scope":177,"src":"2291:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"amount","nameLocation":"2316:6:1","nodeType":"VariableDeclaration","scope":177,"src":"2308:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:1"},"returnParameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":177,"src":"2342:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":174,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:1"},"scope":190,"src":"2274:74:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"2354:287:1","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":189,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:1","nodeType":"FunctionDefinition","parameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"from","nameLocation":"2676:4:1","nodeType":"VariableDeclaration","scope":189,"src":"2668:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"to","nameLocation":"2690:2:1","nodeType":"VariableDeclaration","scope":189,"src":"2682:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":181,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":184,"mutability":"mutable","name":"amount","nameLocation":"2702:6:1","nodeType":"VariableDeclaration","scope":189,"src":"2694:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":183,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:1"},"returnParameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":189,"src":"2728:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":186,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:1"},"scope":190,"src":"2646:88:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":191,"src":"202:2534:1","usedErrors":[],"usedEvents":[124,133]}],"src":"106:2631:1"},"id":1},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[226]},"id":227,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":192,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"148:480:2","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":226,"linearizedBaseContracts":[226],"name":"IERC20Permit","nameLocation":"639:12:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":194,"nodeType":"StructuredDocumentation","src":"658:792:2","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":211,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1464:6:2","nodeType":"FunctionDefinition","parameters":{"id":209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"mutability":"mutable","name":"owner","nameLocation":"1488:5:2","nodeType":"VariableDeclaration","scope":211,"src":"1480:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":195,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":198,"mutability":"mutable","name":"spender","nameLocation":"1511:7:2","nodeType":"VariableDeclaration","scope":211,"src":"1503:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":197,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"value","nameLocation":"1536:5:2","nodeType":"VariableDeclaration","scope":211,"src":"1528:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":202,"mutability":"mutable","name":"deadline","nameLocation":"1559:8:2","nodeType":"VariableDeclaration","scope":211,"src":"1551:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":201,"name":"uint256","nodeType":"ElementaryTypeName","src":"1551:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"v","nameLocation":"1583:1:2","nodeType":"VariableDeclaration","scope":211,"src":"1577:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":203,"name":"uint8","nodeType":"ElementaryTypeName","src":"1577:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"r","nameLocation":"1602:1:2","nodeType":"VariableDeclaration","scope":211,"src":"1594:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":205,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1594:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":208,"mutability":"mutable","name":"s","nameLocation":"1621:1:2","nodeType":"VariableDeclaration","scope":211,"src":"1613:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":207,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1613:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1470:158:2"},"returnParameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"1637:0:2"},"scope":226,"src":"1455:183:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"1644:294:2","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":219,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1952:6:2","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"owner","nameLocation":"1967:5:2","nodeType":"VariableDeclaration","scope":219,"src":"1959:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"1959:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1958:15:2"},"returnParameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":219,"src":"1997:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":216,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:9:2"},"scope":226,"src":"1943:63:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"2012:128:2","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":225,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2207:16:2","nodeType":"FunctionDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"2223:2:2"},"returnParameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":225,"src":"2249:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2249:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2248:9:2"},"scope":226,"src":"2198:60:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":227,"src":"629:1631:2","usedErrors":[],"usedEvents":[]}],"src":"123:2138:2"},"id":2},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[932],"IERC20":[190],"IERC20Permit":[226],"SafeERC20":[602]},"id":603,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":228,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":229,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":603,"sourceUnit":191,"src":"140:23:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":230,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":603,"sourceUnit":227,"src":"164:40:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":231,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":603,"sourceUnit":933,"src":"205:36:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"243:457:3","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":602,"linearizedBaseContracts":[602],"name":"SafeERC20","nameLocation":"709:9:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":235,"libraryName":{"id":233,"name":"Address","nameLocations":["731:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":932,"src":"731:7:3"},"nodeType":"UsingForDirective","src":"725:26:3","typeName":{"id":234,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":258,"nodeType":"Block","src":"1013:103:3","statements":[{"expression":{"arguments":[{"id":247,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"1043:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":250,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"1073:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1079:8:3","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":157,"src":"1073:14:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1088:8:3","memberName":"selector","nodeType":"MemberAccess","src":"1073:23:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":253,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"1098:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"1102:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":248,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1050:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1054:18:3","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1050:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1050:58:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":246,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"1023:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1023:86:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":257,"nodeType":"ExpressionStatement","src":"1023:86:3"}]},"documentation":{"id":236,"nodeType":"StructuredDocumentation","src":"757:179:3","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":259,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"950:12:3","nodeType":"FunctionDefinition","parameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"token","nameLocation":"970:5:3","nodeType":"VariableDeclaration","scope":259,"src":"963:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":238,"nodeType":"UserDefinedTypeName","pathNode":{"id":237,"name":"IERC20","nameLocations":["963:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":190,"src":"963:6:3"},"referencedDeclaration":190,"src":"963:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":241,"mutability":"mutable","name":"to","nameLocation":"985:2:3","nodeType":"VariableDeclaration","scope":259,"src":"977:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"value","nameLocation":"997:5:3","nodeType":"VariableDeclaration","scope":259,"src":"989:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"962:41:3"},"returnParameters":{"id":245,"nodeType":"ParameterList","parameters":[],"src":"1013:0:3"},"scope":602,"src":"941:175:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":285,"nodeType":"Block","src":"1445:113:3","statements":[{"expression":{"arguments":[{"id":273,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"1475:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":276,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"1505:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1511:12:3","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":189,"src":"1505:18:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1524:8:3","memberName":"selector","nodeType":"MemberAccess","src":"1505:27:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":279,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"1534:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":280,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"1540:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1544:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":274,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1482:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1486:18:3","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1482:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1482:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":272,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"1455:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:96:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":284,"nodeType":"ExpressionStatement","src":"1455:96:3"}]},"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"1122:228:3","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":286,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1364:16:3","nodeType":"FunctionDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"token","nameLocation":"1388:5:3","nodeType":"VariableDeclaration","scope":286,"src":"1381:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":262,"nodeType":"UserDefinedTypeName","pathNode":{"id":261,"name":"IERC20","nameLocations":["1381:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":190,"src":"1381:6:3"},"referencedDeclaration":190,"src":"1381:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"from","nameLocation":"1403:4:3","nodeType":"VariableDeclaration","scope":286,"src":"1395:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":264,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"to","nameLocation":"1417:2:3","nodeType":"VariableDeclaration","scope":286,"src":"1409:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":266,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":269,"mutability":"mutable","name":"value","nameLocation":"1429:5:3","nodeType":"VariableDeclaration","scope":286,"src":"1421:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":268,"name":"uint256","nodeType":"ElementaryTypeName","src":"1421:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1380:55:3"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[],"src":"1445:0:3"},"scope":602,"src":"1355:203:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":329,"nodeType":"Block","src":"1894:497:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"2143:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2152:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2143:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":301,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2142:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":306,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2183:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$602","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$602","typeString":"library SafeERC20"}],"id":305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2175:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"2175:7:3","typeDescriptions":{}}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2175:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":308,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"2190:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":302,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"2159:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2165:9:3","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":167,"src":"2159:15:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2159:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2202:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2159:44:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":312,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2158:46:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2142:62:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2218:56:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":297,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2121:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2121:163:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":316,"nodeType":"ExpressionStatement","src":"2121:163:3"},{"expression":{"arguments":[{"id":318,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"2314:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":321,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"2344:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2350:7:3","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":177,"src":"2344:13:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2358:8:3","memberName":"selector","nodeType":"MemberAccess","src":"2344:22:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":324,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"2368:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"2377:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":319,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2321:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2325:18:3","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2321:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2321:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":317,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"2294:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2294:90:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":328,"nodeType":"ExpressionStatement","src":"2294:90:3"}]},"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"1564:249:3","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":330,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1827:11:3","nodeType":"FunctionDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"token","nameLocation":"1846:5:3","nodeType":"VariableDeclaration","scope":330,"src":"1839:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":289,"nodeType":"UserDefinedTypeName","pathNode":{"id":288,"name":"IERC20","nameLocations":["1839:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":190,"src":"1839:6:3"},"referencedDeclaration":190,"src":"1839:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"spender","nameLocation":"1861:7:3","nodeType":"VariableDeclaration","scope":330,"src":"1853:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":294,"mutability":"mutable","name":"value","nameLocation":"1878:5:3","nodeType":"VariableDeclaration","scope":330,"src":"1870:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":293,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:46:3"},"returnParameters":{"id":296,"nodeType":"ParameterList","parameters":[],"src":"1894:0:3"},"scope":602,"src":"1818:573:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":366,"nodeType":"Block","src":"2668:194:3","statements":[{"assignments":[342],"declarations":[{"constant":false,"id":342,"mutability":"mutable","name":"oldAllowance","nameLocation":"2686:12:3","nodeType":"VariableDeclaration","scope":366,"src":"2678:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"2678:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":351,"initialValue":{"arguments":[{"arguments":[{"id":347,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2725:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$602","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$602","typeString":"library SafeERC20"}],"id":346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2717:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:3","typeDescriptions":{}}},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":349,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"2732:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":343,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2701:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2707:9:3","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":167,"src":"2701:15:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2701:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2678:62:3"},{"expression":{"arguments":[{"id":353,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2770:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":356,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2800:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2806:7:3","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":177,"src":"2800:13:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2814:8:3","memberName":"selector","nodeType":"MemberAccess","src":"2800:22:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":359,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"2824:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":360,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"2833:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"2848:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2833:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":354,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2777:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2781:18:3","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2777:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2777:77:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":352,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"2750:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2750:105:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":365,"nodeType":"ExpressionStatement","src":"2750:105:3"}]},"documentation":{"id":331,"nodeType":"StructuredDocumentation","src":"2397:180:3","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":367,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2591:21:3","nodeType":"FunctionDefinition","parameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"token","nameLocation":"2620:5:3","nodeType":"VariableDeclaration","scope":367,"src":"2613:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":333,"nodeType":"UserDefinedTypeName","pathNode":{"id":332,"name":"IERC20","nameLocations":["2613:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":190,"src":"2613:6:3"},"referencedDeclaration":190,"src":"2613:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":336,"mutability":"mutable","name":"spender","nameLocation":"2635:7:3","nodeType":"VariableDeclaration","scope":367,"src":"2627:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":335,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":338,"mutability":"mutable","name":"value","nameLocation":"2652:5:3","nodeType":"VariableDeclaration","scope":367,"src":"2644:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":337,"name":"uint256","nodeType":"ElementaryTypeName","src":"2644:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:46:3"},"returnParameters":{"id":340,"nodeType":"ParameterList","parameters":[],"src":"2668:0:3"},"scope":602,"src":"2582:280:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":411,"nodeType":"Block","src":"3139:321:3","statements":[{"id":410,"nodeType":"UncheckedBlock","src":"3149:305:3","statements":[{"assignments":[379],"declarations":[{"constant":false,"id":379,"mutability":"mutable","name":"oldAllowance","nameLocation":"3181:12:3","nodeType":"VariableDeclaration","scope":410,"src":"3173:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":378,"name":"uint256","nodeType":"ElementaryTypeName","src":"3173:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":388,"initialValue":{"arguments":[{"arguments":[{"id":384,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3220:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$602","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$602","typeString":"library SafeERC20"}],"id":383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3212:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":382,"name":"address","nodeType":"ElementaryTypeName","src":"3212:7:3","typeDescriptions":{}}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3212:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":386,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"3227:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":380,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"3196:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3202:9:3","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":167,"src":"3196:15:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3196:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3173:62:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":390,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"3257:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"3273:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3257:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3280:43:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":389,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3249:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3249:75:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":395,"nodeType":"ExpressionStatement","src":"3249:75:3"},{"expression":{"arguments":[{"id":397,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"3358:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":400,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"3388:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3394:7:3","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":177,"src":"3388:13:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3402:8:3","memberName":"selector","nodeType":"MemberAccess","src":"3388:22:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":403,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"3412:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":404,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"3421:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"3436:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3421:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":398,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3365:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3369:18:3","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3365:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:77:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":396,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"3338:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3338:105:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":409,"nodeType":"ExpressionStatement","src":"3338:105:3"}]}]},"documentation":{"id":368,"nodeType":"StructuredDocumentation","src":"2868:180:3","text":" @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":412,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3062:21:3","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":371,"mutability":"mutable","name":"token","nameLocation":"3091:5:3","nodeType":"VariableDeclaration","scope":412,"src":"3084:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":370,"nodeType":"UserDefinedTypeName","pathNode":{"id":369,"name":"IERC20","nameLocations":["3084:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":190,"src":"3084:6:3"},"referencedDeclaration":190,"src":"3084:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":373,"mutability":"mutable","name":"spender","nameLocation":"3106:7:3","nodeType":"VariableDeclaration","scope":412,"src":"3098:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":372,"name":"address","nodeType":"ElementaryTypeName","src":"3098:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":375,"mutability":"mutable","name":"value","nameLocation":"3123:5:3","nodeType":"VariableDeclaration","scope":412,"src":"3115:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":374,"name":"uint256","nodeType":"ElementaryTypeName","src":"3115:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:46:3"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[],"src":"3139:0:3"},"scope":602,"src":"3053:407:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":458,"nodeType":"Block","src":"3856:333:3","statements":[{"assignments":[424],"declarations":[{"constant":false,"id":424,"mutability":"mutable","name":"approvalCall","nameLocation":"3879:12:3","nodeType":"VariableDeclaration","scope":458,"src":"3866:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":423,"name":"bytes","nodeType":"ElementaryTypeName","src":"3866:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":433,"initialValue":{"arguments":[{"expression":{"expression":{"id":427,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"3917:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3923:7:3","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":177,"src":"3917:13:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3931:8:3","memberName":"selector","nodeType":"MemberAccess","src":"3917:22:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":430,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"3941:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"3950:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":425,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3894:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3898:18:3","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3894:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3894:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3866:90:3"},{"condition":{"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3971:45:3","subExpression":{"arguments":[{"id":435,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"3996:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"id":436,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"4003:12:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":434,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"3972:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3972:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":457,"nodeType":"IfStatement","src":"3967:216:3","trueBody":{"id":456,"nodeType":"Block","src":"4018:165:3","statements":[{"expression":{"arguments":[{"id":440,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"4052:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":443,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"4082:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4088:7:3","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":177,"src":"4082:13:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4096:8:3","memberName":"selector","nodeType":"MemberAccess","src":"4082:22:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":446,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"4106:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4115:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":441,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4059:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4063:18:3","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4059:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4059:58:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":439,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"4032:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:86:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":450,"nodeType":"ExpressionStatement","src":"4032:86:3"},{"expression":{"arguments":[{"id":452,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"4152:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"id":453,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"4159:12:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":451,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"4132:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4132:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"ExpressionStatement","src":"4132:40:3"}]}}]},"documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"3466:308:3","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":459,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3788:12:3","nodeType":"FunctionDefinition","parameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"token","nameLocation":"3808:5:3","nodeType":"VariableDeclaration","scope":459,"src":"3801:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":415,"nodeType":"UserDefinedTypeName","pathNode":{"id":414,"name":"IERC20","nameLocations":["3801:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":190,"src":"3801:6:3"},"referencedDeclaration":190,"src":"3801:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":418,"mutability":"mutable","name":"spender","nameLocation":"3823:7:3","nodeType":"VariableDeclaration","scope":459,"src":"3815:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"3815:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"value","nameLocation":"3840:5:3","nodeType":"VariableDeclaration","scope":459,"src":"3832:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":419,"name":"uint256","nodeType":"ElementaryTypeName","src":"3832:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3800:46:3"},"returnParameters":{"id":422,"nodeType":"ParameterList","parameters":[],"src":"3856:0:3"},"scope":602,"src":"3779:410:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":515,"nodeType":"Block","src":"4556:257:3","statements":[{"assignments":[481],"declarations":[{"constant":false,"id":481,"mutability":"mutable","name":"nonceBefore","nameLocation":"4574:11:3","nodeType":"VariableDeclaration","scope":515,"src":"4566:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":480,"name":"uint256","nodeType":"ElementaryTypeName","src":"4566:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":486,"initialValue":{"arguments":[{"id":484,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"4601:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":482,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"4588:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$226","typeString":"contract IERC20Permit"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4594:6:3","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":219,"src":"4588:12:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4588:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4566:41:3"},{"expression":{"arguments":[{"id":490,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"4630:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":491,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"4637:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"4646:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":493,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"4653:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":494,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"4663:1:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":495,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"4666:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":496,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"4669:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":487,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"4617:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$226","typeString":"contract IERC20Permit"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:3","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":211,"src":"4617:12:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4617:54:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":498,"nodeType":"ExpressionStatement","src":"4617:54:3"},{"assignments":[500],"declarations":[{"constant":false,"id":500,"mutability":"mutable","name":"nonceAfter","nameLocation":"4689:10:3","nodeType":"VariableDeclaration","scope":515,"src":"4681:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":499,"name":"uint256","nodeType":"ElementaryTypeName","src":"4681:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":505,"initialValue":{"arguments":[{"id":503,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"4715:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":501,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"4702:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$226","typeString":"contract IERC20Permit"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4708:6:3","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":219,"src":"4702:12:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4702:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4681:40:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":507,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"4739:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":508,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"4753:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4767:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4753:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4739:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4770:35:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":506,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4731:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4731:75:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":514,"nodeType":"ExpressionStatement","src":"4731:75:3"}]},"documentation":{"id":460,"nodeType":"StructuredDocumentation","src":"4195:141:3","text":" @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."},"id":516,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"4350:10:3","nodeType":"FunctionDefinition","parameters":{"id":478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":463,"mutability":"mutable","name":"token","nameLocation":"4383:5:3","nodeType":"VariableDeclaration","scope":516,"src":"4370:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$226","typeString":"contract IERC20Permit"},"typeName":{"id":462,"nodeType":"UserDefinedTypeName","pathNode":{"id":461,"name":"IERC20Permit","nameLocations":["4370:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":226,"src":"4370:12:3"},"referencedDeclaration":226,"src":"4370:12:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$226","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":465,"mutability":"mutable","name":"owner","nameLocation":"4406:5:3","nodeType":"VariableDeclaration","scope":516,"src":"4398:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"4398:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":467,"mutability":"mutable","name":"spender","nameLocation":"4429:7:3","nodeType":"VariableDeclaration","scope":516,"src":"4421:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":466,"name":"address","nodeType":"ElementaryTypeName","src":"4421:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":469,"mutability":"mutable","name":"value","nameLocation":"4454:5:3","nodeType":"VariableDeclaration","scope":516,"src":"4446:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":468,"name":"uint256","nodeType":"ElementaryTypeName","src":"4446:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":471,"mutability":"mutable","name":"deadline","nameLocation":"4477:8:3","nodeType":"VariableDeclaration","scope":516,"src":"4469:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":470,"name":"uint256","nodeType":"ElementaryTypeName","src":"4469:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":473,"mutability":"mutable","name":"v","nameLocation":"4501:1:3","nodeType":"VariableDeclaration","scope":516,"src":"4495:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":472,"name":"uint8","nodeType":"ElementaryTypeName","src":"4495:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":475,"mutability":"mutable","name":"r","nameLocation":"4520:1:3","nodeType":"VariableDeclaration","scope":516,"src":"4512:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4512:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":477,"mutability":"mutable","name":"s","nameLocation":"4539:1:3","nodeType":"VariableDeclaration","scope":516,"src":"4531:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4531:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4360:186:3"},"returnParameters":{"id":479,"nodeType":"ParameterList","parameters":[],"src":"4556:0:3"},"scope":602,"src":"4341:472:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":552,"nodeType":"Block","src":"5266:572:3","statements":[{"assignments":[526],"declarations":[{"constant":false,"id":526,"mutability":"mutable","name":"returndata","nameLocation":"5628:10:3","nodeType":"VariableDeclaration","scope":552,"src":"5615:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":525,"name":"bytes","nodeType":"ElementaryTypeName","src":"5615:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":535,"initialValue":{"arguments":[{"id":532,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"5669:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5675:34:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":529,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5649:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}],"id":528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5641:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":527,"name":"address","nodeType":"ElementaryTypeName","src":"5641:7:3","typeDescriptions":{}}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5656:12:3","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":692,"src":"5641:27:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5615:95:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":537,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"5728:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5739:6:3","memberName":"length","nodeType":"MemberAccess","src":"5728:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5749:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5728:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":543,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"5765:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5778:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":544,"name":"bool","nodeType":"ElementaryTypeName","src":"5778:4:3","typeDescriptions":{}}}],"id":546,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5777:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":541,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5754:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5758:6:3","memberName":"decode","nodeType":"MemberAccess","src":"5754:10:3","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5754:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5728:56:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5786:44:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":536,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5720:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5720:111:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":551,"nodeType":"ExpressionStatement","src":"5720:111:3"}]},"documentation":{"id":517,"nodeType":"StructuredDocumentation","src":"4819:372:3","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":553,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"5205:19:3","nodeType":"FunctionDefinition","parameters":{"id":523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":520,"mutability":"mutable","name":"token","nameLocation":"5232:5:3","nodeType":"VariableDeclaration","scope":553,"src":"5225:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":519,"nodeType":"UserDefinedTypeName","pathNode":{"id":518,"name":"IERC20","nameLocations":["5225:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":190,"src":"5225:6:3"},"referencedDeclaration":190,"src":"5225:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":522,"mutability":"mutable","name":"data","nameLocation":"5252:4:3","nodeType":"VariableDeclaration","scope":553,"src":"5239:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":521,"name":"bytes","nodeType":"ElementaryTypeName","src":"5239:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5224:33:3"},"returnParameters":{"id":524,"nodeType":"ParameterList","parameters":[],"src":"5266:0:3"},"scope":602,"src":"5196:642:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":600,"nodeType":"Block","src":"6428:505:3","statements":[{"assignments":[565,567],"declarations":[{"constant":false,"id":565,"mutability":"mutable","name":"success","nameLocation":"6729:7:3","nodeType":"VariableDeclaration","scope":600,"src":"6724:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":564,"name":"bool","nodeType":"ElementaryTypeName","src":"6724:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":567,"mutability":"mutable","name":"returndata","nameLocation":"6751:10:3","nodeType":"VariableDeclaration","scope":600,"src":"6738:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":566,"name":"bytes","nodeType":"ElementaryTypeName","src":"6738:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":575,"initialValue":{"arguments":[{"id":573,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"6785:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":570,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6773:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}],"id":569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6765:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":568,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:3","typeDescriptions":{}}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6765:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6780:4:3","memberName":"call","nodeType":"MemberAccess","src":"6765:19:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6765:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6723:67:3"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":576,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"6819:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":577,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"6831:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6842:6:3","memberName":"length","nodeType":"MemberAccess","src":"6831:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6852:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6831:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":583,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"6868:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6881:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":584,"name":"bool","nodeType":"ElementaryTypeName","src":"6881:4:3","typeDescriptions":{}}}],"id":586,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6880:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":581,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6857:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6861:6:3","memberName":"decode","nodeType":"MemberAccess","src":"6857:10:3","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6857:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6831:56:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":589,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6830:58:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:69:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"arguments":[{"id":595,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6919:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}],"id":594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6911:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":593,"name":"address","nodeType":"ElementaryTypeName","src":"6911:7:3","typeDescriptions":{}}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6911:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":591,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"6892:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$932_$","typeString":"type(library Address)"}},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6900:10:3","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":620,"src":"6892:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6892:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:107:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":563,"id":599,"nodeType":"Return","src":"6800:126:3"}]},"documentation":{"id":554,"nodeType":"StructuredDocumentation","src":"5844:490:3","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":601,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"6348:23:3","nodeType":"FunctionDefinition","parameters":{"id":560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"token","nameLocation":"6379:5:3","nodeType":"VariableDeclaration","scope":601,"src":"6372:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":556,"nodeType":"UserDefinedTypeName","pathNode":{"id":555,"name":"IERC20","nameLocations":["6372:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":190,"src":"6372:6:3"},"referencedDeclaration":190,"src":"6372:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"data","nameLocation":"6399:4:3","nodeType":"VariableDeclaration","scope":601,"src":"6386:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":558,"name":"bytes","nodeType":"ElementaryTypeName","src":"6386:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6371:33:3"},"returnParameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":601,"src":"6422:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":561,"name":"bool","nodeType":"ElementaryTypeName","src":"6422:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6421:6:3"},"scope":602,"src":"6339:594:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":603,"src":"701:6234:3","usedErrors":[],"usedEvents":[]}],"src":"115:6821:3"},"id":3},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[932]},"id":933,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":604,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":605,"nodeType":"StructuredDocumentation","src":"126:67:4","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":932,"linearizedBaseContracts":[932],"name":"Address","nameLocation":"202:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":619,"nodeType":"Block","src":"1478:254:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":613,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"1702:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:4","memberName":"code","nodeType":"MemberAccess","src":"1702:12:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:4","memberName":"length","nodeType":"MemberAccess","src":"1702:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":612,"id":618,"nodeType":"Return","src":"1695:30:4"}]},"documentation":{"id":606,"nodeType":"StructuredDocumentation","src":"216:1191:4","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":620,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:4","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":608,"mutability":"mutable","name":"account","nameLocation":"1440:7:4","nodeType":"VariableDeclaration","scope":620,"src":"1432:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":607,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:4"},"returnParameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":620,"src":"1472:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":610,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:4"},"scope":932,"src":"1412:320:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":653,"nodeType":"Block","src":"2718:241:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":631,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$932","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$932","typeString":"library Address"}],"id":630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":629,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:4","typeDescriptions":{}}},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:4","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":634,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"2761:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":628,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":638,"nodeType":"ExpressionStatement","src":"2728:73:4"},{"assignments":[640,null],"declarations":[{"constant":false,"id":640,"mutability":"mutable","name":"success","nameLocation":"2818:7:4","nodeType":"VariableDeclaration","scope":653,"src":"2813:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":639,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":647,"initialValue":{"arguments":[{"hexValue":"","id":645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":641,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"2831:9:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:4","memberName":"call","nodeType":"MemberAccess","src":"2831:14:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":643,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"2853:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:4"},{"expression":{"arguments":[{"id":649,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"2882:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":648,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":652,"nodeType":"ExpressionStatement","src":"2874:78:4"}]},"documentation":{"id":621,"nodeType":"StructuredDocumentation","src":"1738:904:4","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":654,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:4","nodeType":"FunctionDefinition","parameters":{"id":626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":623,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:4","nodeType":"VariableDeclaration","scope":654,"src":"2666:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":622,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":625,"mutability":"mutable","name":"amount","nameLocation":"2701:6:4","nodeType":"VariableDeclaration","scope":654,"src":"2693:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":624,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:4"},"returnParameters":{"id":627,"nodeType":"ParameterList","parameters":[],"src":"2718:0:4"},"scope":932,"src":"2647:312:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":671,"nodeType":"Block","src":"3790:96:4","statements":[{"expression":{"arguments":[{"id":665,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"3829:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":666,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"3837:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":664,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[712,756],"referencedDeclaration":756,"src":"3807:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":663,"id":670,"nodeType":"Return","src":"3800:79:4"}]},"documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"2965:731:4","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":672,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:4","nodeType":"FunctionDefinition","parameters":{"id":660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"mutability":"mutable","name":"target","nameLocation":"3731:6:4","nodeType":"VariableDeclaration","scope":672,"src":"3723:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":659,"mutability":"mutable","name":"data","nameLocation":"3752:4:4","nodeType":"VariableDeclaration","scope":672,"src":"3739:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":658,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:4"},"returnParameters":{"id":663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":672,"src":"3776:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":661,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:4"},"scope":932,"src":"3701:185:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":691,"nodeType":"Block","src":"4255:76:4","statements":[{"expression":{"arguments":[{"id":685,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"4294:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":686,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"4302:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":688,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"4311:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":684,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[712,756],"referencedDeclaration":756,"src":"4272:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":683,"id":690,"nodeType":"Return","src":"4265:59:4"}]},"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"3892:211:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":692,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:4","nodeType":"FunctionDefinition","parameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":675,"mutability":"mutable","name":"target","nameLocation":"4147:6:4","nodeType":"VariableDeclaration","scope":692,"src":"4139:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":674,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":677,"mutability":"mutable","name":"data","nameLocation":"4176:4:4","nodeType":"VariableDeclaration","scope":692,"src":"4163:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":676,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":679,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:4","nodeType":"VariableDeclaration","scope":692,"src":"4190:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":678,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:4"},"returnParameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":692,"src":"4241:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":681,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:4"},"scope":932,"src":"4108:223:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":711,"nodeType":"Block","src":"4806:111:4","statements":[{"expression":{"arguments":[{"id":705,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"4845:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":706,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"4853:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"4859:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":704,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[712,756],"referencedDeclaration":756,"src":"4823:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":703,"id":710,"nodeType":"Return","src":"4816:94:4"}]},"documentation":{"id":693,"nodeType":"StructuredDocumentation","src":"4337:351:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":712,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:4","nodeType":"FunctionDefinition","parameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"target","nameLocation":"4732:6:4","nodeType":"VariableDeclaration","scope":712,"src":"4724:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"data","nameLocation":"4753:4:4","nodeType":"VariableDeclaration","scope":712,"src":"4740:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":696,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":699,"mutability":"mutable","name":"value","nameLocation":"4767:5:4","nodeType":"VariableDeclaration","scope":712,"src":"4759:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":698,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:4"},"returnParameters":{"id":703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":712,"src":"4792:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":701,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:4"},"scope":932,"src":"4693:224:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":755,"nodeType":"Block","src":"5344:267:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":729,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$932","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$932","typeString":"library Address"}],"id":728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":727,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:4","typeDescriptions":{}}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:4","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"5387:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":726,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":736,"nodeType":"ExpressionStatement","src":"5354:81:4"},{"assignments":[738,740],"declarations":[{"constant":false,"id":738,"mutability":"mutable","name":"success","nameLocation":"5451:7:4","nodeType":"VariableDeclaration","scope":755,"src":"5446:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":737,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":740,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:4","nodeType":"VariableDeclaration","scope":755,"src":"5460:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":739,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":747,"initialValue":{"arguments":[{"id":745,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"5513:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":741,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"5487:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:4","memberName":"call","nodeType":"MemberAccess","src":"5487:11:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"5506:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:4"},{"expression":{"arguments":[{"id":749,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"5562:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":750,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"5570:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":751,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"5579:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":752,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"5591:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":748,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"5535:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":725,"id":754,"nodeType":"Return","src":"5528:76:4"}]},"documentation":{"id":713,"nodeType":"StructuredDocumentation","src":"4923:237:4","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":756,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:4","nodeType":"FunctionDefinition","parameters":{"id":722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":715,"mutability":"mutable","name":"target","nameLocation":"5213:6:4","nodeType":"VariableDeclaration","scope":756,"src":"5205:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":714,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":717,"mutability":"mutable","name":"data","nameLocation":"5242:4:4","nodeType":"VariableDeclaration","scope":756,"src":"5229:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":716,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":719,"mutability":"mutable","name":"value","nameLocation":"5264:5:4","nodeType":"VariableDeclaration","scope":756,"src":"5256:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":718,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:4","nodeType":"VariableDeclaration","scope":756,"src":"5279:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":720,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:4"},"returnParameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":756,"src":"5330:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":723,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:4"},"scope":932,"src":"5165:446:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":772,"nodeType":"Block","src":"5888:97:4","statements":[{"expression":{"arguments":[{"id":767,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"5924:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":768,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"5932:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":766,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[773,802],"referencedDeclaration":802,"src":"5905:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":765,"id":771,"nodeType":"Return","src":"5898:80:4"}]},"documentation":{"id":757,"nodeType":"StructuredDocumentation","src":"5617:166:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":773,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:4","nodeType":"FunctionDefinition","parameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":759,"mutability":"mutable","name":"target","nameLocation":"5824:6:4","nodeType":"VariableDeclaration","scope":773,"src":"5816:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":758,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":761,"mutability":"mutable","name":"data","nameLocation":"5845:4:4","nodeType":"VariableDeclaration","scope":773,"src":"5832:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":760,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:4"},"returnParameters":{"id":765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":773,"src":"5874:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":763,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:4"},"scope":932,"src":"5788:197:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":801,"nodeType":"Block","src":"6327:168:4","statements":[{"assignments":[786,788],"declarations":[{"constant":false,"id":786,"mutability":"mutable","name":"success","nameLocation":"6343:7:4","nodeType":"VariableDeclaration","scope":801,"src":"6338:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":785,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":788,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:4","nodeType":"VariableDeclaration","scope":801,"src":"6352:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":787,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":793,"initialValue":{"arguments":[{"id":791,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"6397:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":789,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"6379:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:4","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:4","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:4"},{"expression":{"arguments":[{"id":795,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"6446:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":796,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"6454:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":797,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"6463:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":798,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"6475:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":794,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"6419:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":784,"id":800,"nodeType":"Return","src":"6412:76:4"}]},"documentation":{"id":774,"nodeType":"StructuredDocumentation","src":"5991:173:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":802,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:4","nodeType":"FunctionDefinition","parameters":{"id":781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":776,"mutability":"mutable","name":"target","nameLocation":"6214:6:4","nodeType":"VariableDeclaration","scope":802,"src":"6206:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":775,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"data","nameLocation":"6243:4:4","nodeType":"VariableDeclaration","scope":802,"src":"6230:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":777,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":780,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:4","nodeType":"VariableDeclaration","scope":802,"src":"6257:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":779,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:4"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":802,"src":"6313:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":782,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:4"},"scope":932,"src":"6169:326:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":818,"nodeType":"Block","src":"6771:101:4","statements":[{"expression":{"arguments":[{"id":813,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"6809:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":814,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"6817:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":812,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[819,848],"referencedDeclaration":848,"src":"6788:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":811,"id":817,"nodeType":"Return","src":"6781:84:4"}]},"documentation":{"id":803,"nodeType":"StructuredDocumentation","src":"6501:168:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":819,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:4","nodeType":"FunctionDefinition","parameters":{"id":808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"mutability":"mutable","name":"target","nameLocation":"6712:6:4","nodeType":"VariableDeclaration","scope":819,"src":"6704:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":807,"mutability":"mutable","name":"data","nameLocation":"6733:4:4","nodeType":"VariableDeclaration","scope":819,"src":"6720:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":806,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:4"},"returnParameters":{"id":811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":819,"src":"6757:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":809,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:4"},"scope":932,"src":"6674:198:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":847,"nodeType":"Block","src":"7213:170:4","statements":[{"assignments":[832,834],"declarations":[{"constant":false,"id":832,"mutability":"mutable","name":"success","nameLocation":"7229:7:4","nodeType":"VariableDeclaration","scope":847,"src":"7224:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":831,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":834,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:4","nodeType":"VariableDeclaration","scope":847,"src":"7238:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":833,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":839,"initialValue":{"arguments":[{"id":837,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"7285:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":835,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"7265:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:4","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:4","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:4"},{"expression":{"arguments":[{"id":841,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"7334:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":842,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"7342:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":843,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"7351:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":844,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"7363:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":840,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"7307:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":830,"id":846,"nodeType":"Return","src":"7300:76:4"}]},"documentation":{"id":820,"nodeType":"StructuredDocumentation","src":"6878:175:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":848,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:4","nodeType":"FunctionDefinition","parameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":822,"mutability":"mutable","name":"target","nameLocation":"7105:6:4","nodeType":"VariableDeclaration","scope":848,"src":"7097:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":821,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":824,"mutability":"mutable","name":"data","nameLocation":"7134:4:4","nodeType":"VariableDeclaration","scope":848,"src":"7121:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":823,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":826,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:4","nodeType":"VariableDeclaration","scope":848,"src":"7148:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":825,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:4"},"returnParameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":848,"src":"7199:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":828,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:4"},"scope":932,"src":"7058:325:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":886,"nodeType":"Block","src":"7865:434:4","statements":[{"condition":{"id":862,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"7879:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":884,"nodeType":"Block","src":"8235:58:4","statements":[{"expression":{"arguments":[{"id":880,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"8257:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":881,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"8269:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":879,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"8249:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":883,"nodeType":"ExpressionStatement","src":"8249:33:4"}]},"id":885,"nodeType":"IfStatement","src":"7875:418:4","trueBody":{"id":878,"nodeType":"Block","src":"7888:341:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":863,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"7906:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:4","memberName":"length","nodeType":"MemberAccess","src":"7906:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":875,"nodeType":"IfStatement","src":"7902:286:4","trueBody":{"id":874,"nodeType":"Block","src":"7930:258:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":869,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"8132:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":868,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"8121:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":867,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":873,"nodeType":"ExpressionStatement","src":"8113:60:4"}]}},{"expression":{"id":876,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"8208:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":861,"id":877,"nodeType":"Return","src":"8201:17:4"}]}}]},"documentation":{"id":849,"nodeType":"StructuredDocumentation","src":"7389:277:4","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":887,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:4","nodeType":"FunctionDefinition","parameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"target","nameLocation":"7724:6:4","nodeType":"VariableDeclaration","scope":887,"src":"7716:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":850,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"success","nameLocation":"7745:7:4","nodeType":"VariableDeclaration","scope":887,"src":"7740:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":852,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":855,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:4","nodeType":"VariableDeclaration","scope":887,"src":"7762:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":854,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":857,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:4","nodeType":"VariableDeclaration","scope":887,"src":"7795:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":856,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:4"},"returnParameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":887,"src":"7851:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":859,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:4"},"scope":932,"src":"7671:628:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":910,"nodeType":"Block","src":"8680:135:4","statements":[{"condition":{"id":899,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"8694:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":908,"nodeType":"Block","src":"8751:58:4","statements":[{"expression":{"arguments":[{"id":904,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"8773:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":905,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"8785:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":903,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"8765:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":907,"nodeType":"ExpressionStatement","src":"8765:33:4"}]},"id":909,"nodeType":"IfStatement","src":"8690:119:4","trueBody":{"id":902,"nodeType":"Block","src":"8703:42:4","statements":[{"expression":{"id":900,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"8724:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":898,"id":901,"nodeType":"Return","src":"8717:17:4"}]}}]},"documentation":{"id":888,"nodeType":"StructuredDocumentation","src":"8305:210:4","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":911,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:4","nodeType":"FunctionDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":890,"mutability":"mutable","name":"success","nameLocation":"8560:7:4","nodeType":"VariableDeclaration","scope":911,"src":"8555:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":889,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":892,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:4","nodeType":"VariableDeclaration","scope":911,"src":"8577:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":891,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:4","nodeType":"VariableDeclaration","scope":911,"src":"8610:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":893,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:4"},"returnParameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":911,"src":"8666:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":896,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:4"},"scope":932,"src":"8520:295:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":930,"nodeType":"Block","src":"8904:457:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":918,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"8980:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:4","memberName":"length","nodeType":"MemberAccess","src":"8980:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":928,"nodeType":"Block","src":"9310:45:4","statements":[{"expression":{"arguments":[{"id":925,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"9331:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":924,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":927,"nodeType":"ExpressionStatement","src":"9324:20:4"}]},"id":929,"nodeType":"IfStatement","src":"8976:379:4","trueBody":{"id":923,"nodeType":"Block","src":"9003:301:4","statements":[{"AST":{"nativeSrc":"9161:133:4","nodeType":"YulBlock","src":"9161:133:4","statements":[{"nativeSrc":"9179:40:4","nodeType":"YulVariableDeclaration","src":"9179:40:4","value":{"arguments":[{"name":"returndata","nativeSrc":"9208:10:4","nodeType":"YulIdentifier","src":"9208:10:4"}],"functionName":{"name":"mload","nativeSrc":"9202:5:4","nodeType":"YulIdentifier","src":"9202:5:4"},"nativeSrc":"9202:17:4","nodeType":"YulFunctionCall","src":"9202:17:4"},"variables":[{"name":"returndata_size","nativeSrc":"9183:15:4","nodeType":"YulTypedName","src":"9183:15:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9247:2:4","nodeType":"YulLiteral","src":"9247:2:4","type":"","value":"32"},{"name":"returndata","nativeSrc":"9251:10:4","nodeType":"YulIdentifier","src":"9251:10:4"}],"functionName":{"name":"add","nativeSrc":"9243:3:4","nodeType":"YulIdentifier","src":"9243:3:4"},"nativeSrc":"9243:19:4","nodeType":"YulFunctionCall","src":"9243:19:4"},{"name":"returndata_size","nativeSrc":"9264:15:4","nodeType":"YulIdentifier","src":"9264:15:4"}],"functionName":{"name":"revert","nativeSrc":"9236:6:4","nodeType":"YulIdentifier","src":"9236:6:4"},"nativeSrc":"9236:44:4","nodeType":"YulFunctionCall","src":"9236:44:4"},"nativeSrc":"9236:44:4","nodeType":"YulExpressionStatement","src":"9236:44:4"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":913,"isOffset":false,"isSlot":false,"src":"9208:10:4","valueSize":1},{"declaration":913,"isOffset":false,"isSlot":false,"src":"9251:10:4","valueSize":1}],"id":922,"nodeType":"InlineAssembly","src":"9152:142:4"}]}}]},"id":931,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:4","nodeType":"FunctionDefinition","parameters":{"id":916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":913,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:4","nodeType":"VariableDeclaration","scope":931,"src":"8838:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":912,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":915,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:4","nodeType":"VariableDeclaration","scope":931,"src":"8863:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":914,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:4"},"returnParameters":{"id":917,"nodeType":"ParameterList","parameters":[],"src":"8904:0:4"},"scope":932,"src":"8821:540:4","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":933,"src":"194:9169:4","usedErrors":[],"usedEvents":[]}],"src":"101:9263:4"},"id":4},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[954]},"id":955,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":934,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:5"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":935,"nodeType":"StructuredDocumentation","src":"111:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":954,"linearizedBaseContracts":[954],"name":"Context","nameLocation":"626:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":943,"nodeType":"Block","src":"702:34:5","statements":[{"expression":{"expression":{"id":940,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:5","memberName":"sender","nodeType":"MemberAccess","src":"719:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":939,"id":942,"nodeType":"Return","src":"712:17:5"}]},"id":944,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:5","nodeType":"FunctionDefinition","parameters":{"id":936,"nodeType":"ParameterList","parameters":[],"src":"659:2:5"},"returnParameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":944,"src":"693:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:5"},"scope":954,"src":"640:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":952,"nodeType":"Block","src":"809:32:5","statements":[{"expression":{"expression":{"id":949,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:5","memberName":"data","nodeType":"MemberAccess","src":"826:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":948,"id":951,"nodeType":"Return","src":"819:15:5"}]},"id":953,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:5","nodeType":"FunctionDefinition","parameters":{"id":945,"nodeType":"ParameterList","parameters":[],"src":"759:2:5"},"returnParameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":953,"src":"793:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":946,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:5"},"scope":954,"src":"742:99:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":955,"src":"608:235:5","usedErrors":[],"usedEvents":[]}],"src":"86:758:5"},"id":5},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"MerkleProof":[1482]},"id":1483,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":956,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":957,"nodeType":"StructuredDocumentation","src":"143:658:6","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates merkle trees that are safe\n against this attack out of the box."},"fullyImplemented":true,"id":1482,"linearizedBaseContracts":[1482],"name":"MerkleProof","nameLocation":"810:11:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":977,"nodeType":"Block","src":"1253:57:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":971,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"1283:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":972,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"1290:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":970,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"1270:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1270:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":974,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"1299:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1270:33:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":969,"id":976,"nodeType":"Return","src":"1263:40:6"}]},"documentation":{"id":958,"nodeType":"StructuredDocumentation","src":"828:323:6","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."},"id":978,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1165:6:6","nodeType":"FunctionDefinition","parameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":961,"mutability":"mutable","name":"proof","nameLocation":"1189:5:6","nodeType":"VariableDeclaration","scope":978,"src":"1172:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":959,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1172:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":960,"nodeType":"ArrayTypeName","src":"1172:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":963,"mutability":"mutable","name":"root","nameLocation":"1204:4:6","nodeType":"VariableDeclaration","scope":978,"src":"1196:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":962,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1196:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":965,"mutability":"mutable","name":"leaf","nameLocation":"1218:4:6","nodeType":"VariableDeclaration","scope":978,"src":"1210:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":964,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1210:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1171:52:6"},"returnParameters":{"id":969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":978,"src":"1247:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":967,"name":"bool","nodeType":"ElementaryTypeName","src":"1247:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1246:6:6"},"scope":1482,"src":"1156:154:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":998,"nodeType":"Block","src":"1518:65:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":992,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"1556:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":993,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"1563:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":991,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"1535:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1535:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":995,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"1572:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1535:41:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":990,"id":997,"nodeType":"Return","src":"1528:48:6"}]},"documentation":{"id":979,"nodeType":"StructuredDocumentation","src":"1316:90:6","text":" @dev Calldata version of {verify}\n _Available since v4.7._"},"id":999,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"1420:14:6","nodeType":"FunctionDefinition","parameters":{"id":987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"proof","nameLocation":"1454:5:6","nodeType":"VariableDeclaration","scope":999,"src":"1435:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":980,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1435:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":981,"nodeType":"ArrayTypeName","src":"1435:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"root","nameLocation":"1469:4:6","nodeType":"VariableDeclaration","scope":999,"src":"1461:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":983,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1461:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"leaf","nameLocation":"1483:4:6","nodeType":"VariableDeclaration","scope":999,"src":"1475:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":985,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1475:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1434:54:6"},"returnParameters":{"id":990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":999,"src":"1512:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":988,"name":"bool","nodeType":"ElementaryTypeName","src":"1512:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1511:6:6"},"scope":1482,"src":"1411:172:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1038,"nodeType":"Block","src":"2026:198:6","statements":[{"assignments":[1011],"declarations":[{"constant":false,"id":1011,"mutability":"mutable","name":"computedHash","nameLocation":"2044:12:6","nodeType":"VariableDeclaration","scope":1038,"src":"2036:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1010,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2036:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1013,"initialValue":{"id":1012,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"2059:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2036:27:6"},{"body":{"id":1034,"nodeType":"Block","src":"2116:73:6","statements":[{"expression":{"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1025,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"2130:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1027,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"2155:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":1028,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"2169:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1030,"indexExpression":{"id":1029,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"2175:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2169:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1026,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"2145:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2130:48:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1033,"nodeType":"ExpressionStatement","src":"2130:48:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1018,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"2093:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1019,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"2097:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2103:6:6","memberName":"length","nodeType":"MemberAccess","src":"2097:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2093:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1035,"initializationExpression":{"assignments":[1015],"declarations":[{"constant":false,"id":1015,"mutability":"mutable","name":"i","nameLocation":"2086:1:6","nodeType":"VariableDeclaration","scope":1035,"src":"2078:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1014,"name":"uint256","nodeType":"ElementaryTypeName","src":"2078:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1017,"initialValue":{"hexValue":"30","id":1016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2090:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2078:13:6"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2111:3:6","subExpression":{"id":1022,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"2111:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1024,"nodeType":"ExpressionStatement","src":"2111:3:6"},"nodeType":"ForStatement","src":"2073:116:6"},{"expression":{"id":1036,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"2205:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1009,"id":1037,"nodeType":"Return","src":"2198:19:6"}]},"documentation":{"id":1000,"nodeType":"StructuredDocumentation","src":"1589:340:6","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leafs & pre-images are assumed to be sorted.\n _Available since v4.4._"},"id":1039,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"1943:12:6","nodeType":"FunctionDefinition","parameters":{"id":1006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1003,"mutability":"mutable","name":"proof","nameLocation":"1973:5:6","nodeType":"VariableDeclaration","scope":1039,"src":"1956:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1001,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1956:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1002,"nodeType":"ArrayTypeName","src":"1956:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1005,"mutability":"mutable","name":"leaf","nameLocation":"1988:4:6","nodeType":"VariableDeclaration","scope":1039,"src":"1980:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1004,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1980:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1955:38:6"},"returnParameters":{"id":1009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1039,"src":"2017:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1007,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2017:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2016:9:6"},"scope":1482,"src":"1934:290:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1078,"nodeType":"Block","src":"2433:198:6","statements":[{"assignments":[1051],"declarations":[{"constant":false,"id":1051,"mutability":"mutable","name":"computedHash","nameLocation":"2451:12:6","nodeType":"VariableDeclaration","scope":1078,"src":"2443:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1050,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1053,"initialValue":{"id":1052,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"2466:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2443:27:6"},{"body":{"id":1074,"nodeType":"Block","src":"2523:73:6","statements":[{"expression":{"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1065,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"2537:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1067,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"2562:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":1068,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"2576:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1070,"indexExpression":{"id":1069,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"2582:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2576:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1066,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"2552:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2552:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2537:48:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1073,"nodeType":"ExpressionStatement","src":"2537:48:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1058,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"2500:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1059,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"2504:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2510:6:6","memberName":"length","nodeType":"MemberAccess","src":"2504:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2500:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1075,"initializationExpression":{"assignments":[1055],"declarations":[{"constant":false,"id":1055,"mutability":"mutable","name":"i","nameLocation":"2493:1:6","nodeType":"VariableDeclaration","scope":1075,"src":"2485:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1054,"name":"uint256","nodeType":"ElementaryTypeName","src":"2485:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1057,"initialValue":{"hexValue":"30","id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2497:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2485:13:6"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2518:3:6","subExpression":{"id":1062,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"2518:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1064,"nodeType":"ExpressionStatement","src":"2518:3:6"},"nodeType":"ForStatement","src":"2480:116:6"},{"expression":{"id":1076,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"2612:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1049,"id":1077,"nodeType":"Return","src":"2605:19:6"}]},"documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"2230:96:6","text":" @dev Calldata version of {processProof}\n _Available since v4.7._"},"id":1079,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"2340:20:6","nodeType":"FunctionDefinition","parameters":{"id":1046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1043,"mutability":"mutable","name":"proof","nameLocation":"2380:5:6","nodeType":"VariableDeclaration","scope":1079,"src":"2361:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1041,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2361:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1042,"nodeType":"ArrayTypeName","src":"2361:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1045,"mutability":"mutable","name":"leaf","nameLocation":"2395:4:6","nodeType":"VariableDeclaration","scope":1079,"src":"2387:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1044,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2387:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2360:40:6"},"returnParameters":{"id":1049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1079,"src":"2424:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1047,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2424:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2423:9:6"},"scope":1482,"src":"2331:300:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1104,"nodeType":"Block","src":"3174:76:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1097,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"3209:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":1098,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"3216:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":1099,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"3228:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1096,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"3191:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3191:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1101,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"3239:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3191:52:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1095,"id":1103,"nodeType":"Return","src":"3184:59:6"}]},"documentation":{"id":1080,"nodeType":"StructuredDocumentation","src":"2637:350:6","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":1105,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"3001:16:6","nodeType":"FunctionDefinition","parameters":{"id":1092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"proof","nameLocation":"3044:5:6","nodeType":"VariableDeclaration","scope":1105,"src":"3027:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1081,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3027:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1082,"nodeType":"ArrayTypeName","src":"3027:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1086,"mutability":"mutable","name":"proofFlags","nameLocation":"3073:10:6","nodeType":"VariableDeclaration","scope":1105,"src":"3059:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1084,"name":"bool","nodeType":"ElementaryTypeName","src":"3059:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1085,"nodeType":"ArrayTypeName","src":"3059:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1088,"mutability":"mutable","name":"root","nameLocation":"3101:4:6","nodeType":"VariableDeclaration","scope":1105,"src":"3093:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1087,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3093:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1091,"mutability":"mutable","name":"leaves","nameLocation":"3132:6:6","nodeType":"VariableDeclaration","scope":1105,"src":"3115:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1089,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3115:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1090,"nodeType":"ArrayTypeName","src":"3115:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3017:127:6"},"returnParameters":{"id":1095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1105,"src":"3168:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1093,"name":"bool","nodeType":"ElementaryTypeName","src":"3168:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3167:6:6"},"scope":1482,"src":"2992:258:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1130,"nodeType":"Block","src":"3655:84:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1123,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"3698:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1124,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"3705:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":1125,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"3717:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1122,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"3672:25:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3672:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1127,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"3728:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3672:60:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1121,"id":1129,"nodeType":"Return","src":"3665:67:6"}]},"documentation":{"id":1106,"nodeType":"StructuredDocumentation","src":"3256:200:6","text":" @dev Calldata version of {multiProofVerify}\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":1131,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"3470:24:6","nodeType":"FunctionDefinition","parameters":{"id":1118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1109,"mutability":"mutable","name":"proof","nameLocation":"3523:5:6","nodeType":"VariableDeclaration","scope":1131,"src":"3504:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3504:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1108,"nodeType":"ArrayTypeName","src":"3504:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1112,"mutability":"mutable","name":"proofFlags","nameLocation":"3554:10:6","nodeType":"VariableDeclaration","scope":1131,"src":"3538:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1110,"name":"bool","nodeType":"ElementaryTypeName","src":"3538:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1111,"nodeType":"ArrayTypeName","src":"3538:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1114,"mutability":"mutable","name":"root","nameLocation":"3582:4:6","nodeType":"VariableDeclaration","scope":1131,"src":"3574:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1113,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3574:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"leaves","nameLocation":"3613:6:6","nodeType":"VariableDeclaration","scope":1131,"src":"3596:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1115,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3596:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1116,"nodeType":"ArrayTypeName","src":"3596:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3494:131:6"},"returnParameters":{"id":1121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1131,"src":"3649:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1119,"name":"bool","nodeType":"ElementaryTypeName","src":"3649:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3648:6:6"},"scope":1482,"src":"3461:278:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1288,"nodeType":"Block","src":"4693:2053:6","statements":[{"assignments":[1147],"declarations":[{"constant":false,"id":1147,"mutability":"mutable","name":"leavesLen","nameLocation":"5085:9:6","nodeType":"VariableDeclaration","scope":1288,"src":"5077:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1146,"name":"uint256","nodeType":"ElementaryTypeName","src":"5077:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1150,"initialValue":{"expression":{"id":1148,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"5097:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5104:6:6","memberName":"length","nodeType":"MemberAccess","src":"5097:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5077:33:6"},{"assignments":[1152],"declarations":[{"constant":false,"id":1152,"mutability":"mutable","name":"proofLen","nameLocation":"5128:8:6","nodeType":"VariableDeclaration","scope":1288,"src":"5120:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1151,"name":"uint256","nodeType":"ElementaryTypeName","src":"5120:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1155,"initialValue":{"expression":{"id":1153,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"5139:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5145:6:6","memberName":"length","nodeType":"MemberAccess","src":"5139:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5120:31:6"},{"assignments":[1157],"declarations":[{"constant":false,"id":1157,"mutability":"mutable","name":"totalHashes","nameLocation":"5169:11:6","nodeType":"VariableDeclaration","scope":1288,"src":"5161:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"5161:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1160,"initialValue":{"expression":{"id":1158,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"5183:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5194:6:6","memberName":"length","nodeType":"MemberAccess","src":"5183:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5161:39:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1162,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"5252:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1163,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"5264:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5252:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5275:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5252:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1167,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"5280:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5252:39:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":1169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5293:33:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":1161,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5244:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5244:83:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1171,"nodeType":"ExpressionStatement","src":"5244:83:6"},{"assignments":[1176],"declarations":[{"constant":false,"id":1176,"mutability":"mutable","name":"hashes","nameLocation":"5589:6:6","nodeType":"VariableDeclaration","scope":1288,"src":"5572:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5572:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1175,"nodeType":"ArrayTypeName","src":"5572:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1182,"initialValue":{"arguments":[{"id":1180,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"5612:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5598:13:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1177,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5602:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1178,"nodeType":"ArrayTypeName","src":"5602:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5598:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5572:52:6"},{"assignments":[1184],"declarations":[{"constant":false,"id":1184,"mutability":"mutable","name":"leafPos","nameLocation":"5642:7:6","nodeType":"VariableDeclaration","scope":1288,"src":"5634:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1183,"name":"uint256","nodeType":"ElementaryTypeName","src":"5634:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1186,"initialValue":{"hexValue":"30","id":1185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5634:19:6"},{"assignments":[1188],"declarations":[{"constant":false,"id":1188,"mutability":"mutable","name":"hashPos","nameLocation":"5671:7:6","nodeType":"VariableDeclaration","scope":1288,"src":"5663:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1187,"name":"uint256","nodeType":"ElementaryTypeName","src":"5663:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1190,"initialValue":{"hexValue":"30","id":1189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5681:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5663:19:6"},{"assignments":[1192],"declarations":[{"constant":false,"id":1192,"mutability":"mutable","name":"proofPos","nameLocation":"5700:8:6","nodeType":"VariableDeclaration","scope":1288,"src":"5692:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1191,"name":"uint256","nodeType":"ElementaryTypeName","src":"5692:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1194,"initialValue":{"hexValue":"30","id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5711:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5692:20:6"},{"body":{"id":1253,"nodeType":"Block","src":"6130:292:6","statements":[{"assignments":[1206],"declarations":[{"constant":false,"id":1206,"mutability":"mutable","name":"a","nameLocation":"6152:1:6","nodeType":"VariableDeclaration","scope":1253,"src":"6144:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1205,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6144:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1219,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1207,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"6156:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1208,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"6166:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6156:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1214,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"6198:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1217,"indexExpression":{"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6205:9:6","subExpression":{"id":1215,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"6205:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6198:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6156:59:6","trueExpression":{"baseExpression":{"id":1210,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"6178:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1213,"indexExpression":{"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6185:9:6","subExpression":{"id":1211,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"6185:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6178:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6144:71:6"},{"assignments":[1221],"declarations":[{"constant":false,"id":1221,"mutability":"mutable","name":"b","nameLocation":"6237:1:6","nodeType":"VariableDeclaration","scope":1253,"src":"6229:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6229:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1243,"initialValue":{"condition":{"baseExpression":{"id":1222,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"6241:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1224,"indexExpression":{"id":1223,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"6252:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6241:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1238,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"6353:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1241,"indexExpression":{"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6359:10:6","subExpression":{"id":1239,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"6359:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6353:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6241:129:6","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1225,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"6274:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1226,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"6284:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6274:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1232,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"6316:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1235,"indexExpression":{"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6323:9:6","subExpression":{"id":1233,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"6323:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6316:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6274:59:6","trueExpression":{"baseExpression":{"id":1228,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"6296:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1231,"indexExpression":{"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6303:9:6","subExpression":{"id":1229,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"6303:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6296:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1237,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6273:61:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6229:141:6"},{"expression":{"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1244,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"6384:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1246,"indexExpression":{"id":1245,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"6391:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6384:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1248,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"6406:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1249,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"6409:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1247,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"6396:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6396:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6384:27:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1252,"nodeType":"ExpressionStatement","src":"6384:27:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1199,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"6108:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1200,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"6112:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6108:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1254,"initializationExpression":{"assignments":[1196],"declarations":[{"constant":false,"id":1196,"mutability":"mutable","name":"i","nameLocation":"6101:1:6","nodeType":"VariableDeclaration","scope":1254,"src":"6093:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1195,"name":"uint256","nodeType":"ElementaryTypeName","src":"6093:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1198,"initialValue":{"hexValue":"30","id":1197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6105:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6093:13:6"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6125:3:6","subExpression":{"id":1202,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"6125:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1204,"nodeType":"ExpressionStatement","src":"6125:3:6"},"nodeType":"ForStatement","src":"6088:334:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1255,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"6436:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6450:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6436:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1273,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"6638:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6650:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6638:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1285,"nodeType":"Block","src":"6700:40:6","statements":[{"expression":{"baseExpression":{"id":1281,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"6721:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1283,"indexExpression":{"hexValue":"30","id":1282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6727:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6721:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1145,"id":1284,"nodeType":"Return","src":"6714:15:6"}]},"id":1286,"nodeType":"IfStatement","src":"6634:106:6","trueBody":{"id":1280,"nodeType":"Block","src":"6653:41:6","statements":[{"expression":{"baseExpression":{"id":1276,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"6674:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1278,"indexExpression":{"hexValue":"30","id":1277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6674:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1145,"id":1279,"nodeType":"Return","src":"6667:16:6"}]}},"id":1287,"nodeType":"IfStatement","src":"6432:308:6","trueBody":{"id":1272,"nodeType":"Block","src":"6453:175:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1259,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"6475:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1260,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"6487:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6475:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":1262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6497:33:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":1258,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6467:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6467:64:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1264,"nodeType":"ExpressionStatement","src":"6467:64:6"},{"id":1271,"nodeType":"UncheckedBlock","src":"6545:73:6","statements":[{"expression":{"baseExpression":{"id":1265,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"6580:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1269,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1266,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"6587:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6601:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6587:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6580:23:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1145,"id":1270,"nodeType":"Return","src":"6573:30:6"}]}]}}]},"documentation":{"id":1132,"nodeType":"StructuredDocumentation","src":"3745:768:6","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n CAUTION: Not all merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n _Available since v4.7._"},"id":1289,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"4527:17:6","nodeType":"FunctionDefinition","parameters":{"id":1142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1135,"mutability":"mutable","name":"proof","nameLocation":"4571:5:6","nodeType":"VariableDeclaration","scope":1289,"src":"4554:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4554:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1134,"nodeType":"ArrayTypeName","src":"4554:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1138,"mutability":"mutable","name":"proofFlags","nameLocation":"4600:10:6","nodeType":"VariableDeclaration","scope":1289,"src":"4586:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1136,"name":"bool","nodeType":"ElementaryTypeName","src":"4586:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1137,"nodeType":"ArrayTypeName","src":"4586:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1141,"mutability":"mutable","name":"leaves","nameLocation":"4637:6:6","nodeType":"VariableDeclaration","scope":1289,"src":"4620:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4620:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1140,"nodeType":"ArrayTypeName","src":"4620:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4544:105:6"},"returnParameters":{"id":1145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1144,"mutability":"mutable","name":"merkleRoot","nameLocation":"4681:10:6","nodeType":"VariableDeclaration","scope":1289,"src":"4673:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1143,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4673:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4672:20:6"},"scope":1482,"src":"4518:2228:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1446,"nodeType":"Block","src":"7146:2053:6","statements":[{"assignments":[1305],"declarations":[{"constant":false,"id":1305,"mutability":"mutable","name":"leavesLen","nameLocation":"7538:9:6","nodeType":"VariableDeclaration","scope":1446,"src":"7530:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1304,"name":"uint256","nodeType":"ElementaryTypeName","src":"7530:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1308,"initialValue":{"expression":{"id":1306,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"7550:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7557:6:6","memberName":"length","nodeType":"MemberAccess","src":"7550:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7530:33:6"},{"assignments":[1310],"declarations":[{"constant":false,"id":1310,"mutability":"mutable","name":"proofLen","nameLocation":"7581:8:6","nodeType":"VariableDeclaration","scope":1446,"src":"7573:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1309,"name":"uint256","nodeType":"ElementaryTypeName","src":"7573:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1313,"initialValue":{"expression":{"id":1311,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"7592:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7598:6:6","memberName":"length","nodeType":"MemberAccess","src":"7592:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7573:31:6"},{"assignments":[1315],"declarations":[{"constant":false,"id":1315,"mutability":"mutable","name":"totalHashes","nameLocation":"7622:11:6","nodeType":"VariableDeclaration","scope":1446,"src":"7614:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1314,"name":"uint256","nodeType":"ElementaryTypeName","src":"7614:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1318,"initialValue":{"expression":{"id":1316,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"7636:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7647:6:6","memberName":"length","nodeType":"MemberAccess","src":"7636:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7614:39:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1320,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"7705:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1321,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"7717:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7705:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7728:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7705:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1325,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"7733:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7705:39:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":1327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7746:33:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":1319,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7697:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7697:83:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1329,"nodeType":"ExpressionStatement","src":"7697:83:6"},{"assignments":[1334],"declarations":[{"constant":false,"id":1334,"mutability":"mutable","name":"hashes","nameLocation":"8042:6:6","nodeType":"VariableDeclaration","scope":1446,"src":"8025:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1332,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8025:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1333,"nodeType":"ArrayTypeName","src":"8025:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1340,"initialValue":{"arguments":[{"id":1338,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"8065:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8051:13:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1335,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8055:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1336,"nodeType":"ArrayTypeName","src":"8055:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8051:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8025:52:6"},{"assignments":[1342],"declarations":[{"constant":false,"id":1342,"mutability":"mutable","name":"leafPos","nameLocation":"8095:7:6","nodeType":"VariableDeclaration","scope":1446,"src":"8087:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1341,"name":"uint256","nodeType":"ElementaryTypeName","src":"8087:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1344,"initialValue":{"hexValue":"30","id":1343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8105:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8087:19:6"},{"assignments":[1346],"declarations":[{"constant":false,"id":1346,"mutability":"mutable","name":"hashPos","nameLocation":"8124:7:6","nodeType":"VariableDeclaration","scope":1446,"src":"8116:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1345,"name":"uint256","nodeType":"ElementaryTypeName","src":"8116:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1348,"initialValue":{"hexValue":"30","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8134:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8116:19:6"},{"assignments":[1350],"declarations":[{"constant":false,"id":1350,"mutability":"mutable","name":"proofPos","nameLocation":"8153:8:6","nodeType":"VariableDeclaration","scope":1446,"src":"8145:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1349,"name":"uint256","nodeType":"ElementaryTypeName","src":"8145:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1352,"initialValue":{"hexValue":"30","id":1351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8164:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8145:20:6"},{"body":{"id":1411,"nodeType":"Block","src":"8583:292:6","statements":[{"assignments":[1364],"declarations":[{"constant":false,"id":1364,"mutability":"mutable","name":"a","nameLocation":"8605:1:6","nodeType":"VariableDeclaration","scope":1411,"src":"8597:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8597:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1377,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1365,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"8609:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1366,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"8619:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1372,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"8651:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1375,"indexExpression":{"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8658:9:6","subExpression":{"id":1373,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"8658:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8651:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8609:59:6","trueExpression":{"baseExpression":{"id":1368,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"8631:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1371,"indexExpression":{"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8638:9:6","subExpression":{"id":1369,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"8638:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8631:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8597:71:6"},{"assignments":[1379],"declarations":[{"constant":false,"id":1379,"mutability":"mutable","name":"b","nameLocation":"8690:1:6","nodeType":"VariableDeclaration","scope":1411,"src":"8682:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1378,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8682:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1401,"initialValue":{"condition":{"baseExpression":{"id":1380,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"8694:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1382,"indexExpression":{"id":1381,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"8705:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8694:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1396,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"8806:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1399,"indexExpression":{"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8812:10:6","subExpression":{"id":1397,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"8812:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8806:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8694:129:6","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1383,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"8727:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1384,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"8737:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8727:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1390,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"8769:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1393,"indexExpression":{"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8776:9:6","subExpression":{"id":1391,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"8776:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8769:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8727:59:6","trueExpression":{"baseExpression":{"id":1386,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"8749:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1389,"indexExpression":{"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8756:9:6","subExpression":{"id":1387,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"8756:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8749:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1395,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8726:61:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8682:141:6"},{"expression":{"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1402,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"8837:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1404,"indexExpression":{"id":1403,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"8844:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8837:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1406,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"8859:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1407,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"8862:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1405,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"8849:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8849:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8837:27:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1410,"nodeType":"ExpressionStatement","src":"8837:27:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1357,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"8561:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1358,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"8565:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8561:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1412,"initializationExpression":{"assignments":[1354],"declarations":[{"constant":false,"id":1354,"mutability":"mutable","name":"i","nameLocation":"8554:1:6","nodeType":"VariableDeclaration","scope":1412,"src":"8546:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1353,"name":"uint256","nodeType":"ElementaryTypeName","src":"8546:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1356,"initialValue":{"hexValue":"30","id":1355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8558:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8546:13:6"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8578:3:6","subExpression":{"id":1360,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"8578:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1362,"nodeType":"ExpressionStatement","src":"8578:3:6"},"nodeType":"ForStatement","src":"8541:334:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1413,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"8889:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8903:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8889:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1431,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"9091:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9103:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9091:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1443,"nodeType":"Block","src":"9153:40:6","statements":[{"expression":{"baseExpression":{"id":1439,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"9174:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1441,"indexExpression":{"hexValue":"30","id":1440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9180:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9174:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1303,"id":1442,"nodeType":"Return","src":"9167:15:6"}]},"id":1444,"nodeType":"IfStatement","src":"9087:106:6","trueBody":{"id":1438,"nodeType":"Block","src":"9106:41:6","statements":[{"expression":{"baseExpression":{"id":1434,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"9127:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1436,"indexExpression":{"hexValue":"30","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9134:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9127:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1303,"id":1437,"nodeType":"Return","src":"9120:16:6"}]}},"id":1445,"nodeType":"IfStatement","src":"8885:308:6","trueBody":{"id":1430,"nodeType":"Block","src":"8906:175:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1417,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"8928:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1418,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"8940:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8928:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":1420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8950:33:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":1416,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8920:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8920:64:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1422,"nodeType":"ExpressionStatement","src":"8920:64:6"},{"id":1429,"nodeType":"UncheckedBlock","src":"8998:73:6","statements":[{"expression":{"baseExpression":{"id":1423,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"9033:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1427,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1424,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"9040:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9054:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9040:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9033:23:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1303,"id":1428,"nodeType":"Return","src":"9026:30:6"}]}]}}]},"documentation":{"id":1290,"nodeType":"StructuredDocumentation","src":"6752:202:6","text":" @dev Calldata version of {processMultiProof}.\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":1447,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"6968:25:6","nodeType":"FunctionDefinition","parameters":{"id":1300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1293,"mutability":"mutable","name":"proof","nameLocation":"7022:5:6","nodeType":"VariableDeclaration","scope":1447,"src":"7003:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1291,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7003:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1292,"nodeType":"ArrayTypeName","src":"7003:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1296,"mutability":"mutable","name":"proofFlags","nameLocation":"7053:10:6","nodeType":"VariableDeclaration","scope":1447,"src":"7037:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1294,"name":"bool","nodeType":"ElementaryTypeName","src":"7037:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1295,"nodeType":"ArrayTypeName","src":"7037:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1299,"mutability":"mutable","name":"leaves","nameLocation":"7090:6:6","nodeType":"VariableDeclaration","scope":1447,"src":"7073:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7073:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1298,"nodeType":"ArrayTypeName","src":"7073:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6993:109:6"},"returnParameters":{"id":1303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1302,"mutability":"mutable","name":"merkleRoot","nameLocation":"7134:10:6","nodeType":"VariableDeclaration","scope":1447,"src":"7126:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7126:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7125:20:6"},"scope":1482,"src":"6959:2240:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1469,"nodeType":"Block","src":"9277:75:6","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1456,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"9294:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1457,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"9298:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9294:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1464,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"9340:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1465,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"9343:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1463,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"9325:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9325:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9294:51:6","trueExpression":{"arguments":[{"id":1460,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"9317:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1461,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"9320:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1459,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"9302:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9302:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1455,"id":1468,"nodeType":"Return","src":"9287:58:6"}]},"id":1470,"implemented":true,"kind":"function","modifiers":[],"name":"_hashPair","nameLocation":"9214:9:6","nodeType":"FunctionDefinition","parameters":{"id":1452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1449,"mutability":"mutable","name":"a","nameLocation":"9232:1:6","nodeType":"VariableDeclaration","scope":1470,"src":"9224:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9224:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1451,"mutability":"mutable","name":"b","nameLocation":"9243:1:6","nodeType":"VariableDeclaration","scope":1470,"src":"9235:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1450,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9235:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9223:22:6"},"returnParameters":{"id":1455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1470,"src":"9268:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9268:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9267:9:6"},"scope":1482,"src":"9205:147:6","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1480,"nodeType":"Block","src":"9441:178:6","statements":[{"AST":{"nativeSrc":"9503:110:6","nodeType":"YulBlock","src":"9503:110:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9524:4:6","nodeType":"YulLiteral","src":"9524:4:6","type":"","value":"0x00"},{"name":"a","nativeSrc":"9530:1:6","nodeType":"YulIdentifier","src":"9530:1:6"}],"functionName":{"name":"mstore","nativeSrc":"9517:6:6","nodeType":"YulIdentifier","src":"9517:6:6"},"nativeSrc":"9517:15:6","nodeType":"YulFunctionCall","src":"9517:15:6"},"nativeSrc":"9517:15:6","nodeType":"YulExpressionStatement","src":"9517:15:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9552:4:6","nodeType":"YulLiteral","src":"9552:4:6","type":"","value":"0x20"},{"name":"b","nativeSrc":"9558:1:6","nodeType":"YulIdentifier","src":"9558:1:6"}],"functionName":{"name":"mstore","nativeSrc":"9545:6:6","nodeType":"YulIdentifier","src":"9545:6:6"},"nativeSrc":"9545:15:6","nodeType":"YulFunctionCall","src":"9545:15:6"},"nativeSrc":"9545:15:6","nodeType":"YulExpressionStatement","src":"9545:15:6"},{"nativeSrc":"9573:30:6","nodeType":"YulAssignment","src":"9573:30:6","value":{"arguments":[{"kind":"number","nativeSrc":"9592:4:6","nodeType":"YulLiteral","src":"9592:4:6","type":"","value":"0x00"},{"kind":"number","nativeSrc":"9598:4:6","nodeType":"YulLiteral","src":"9598:4:6","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"9582:9:6","nodeType":"YulIdentifier","src":"9582:9:6"},"nativeSrc":"9582:21:6","nodeType":"YulFunctionCall","src":"9582:21:6"},"variableNames":[{"name":"value","nativeSrc":"9573:5:6","nodeType":"YulIdentifier","src":"9573:5:6"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":1472,"isOffset":false,"isSlot":false,"src":"9530:1:6","valueSize":1},{"declaration":1474,"isOffset":false,"isSlot":false,"src":"9558:1:6","valueSize":1},{"declaration":1477,"isOffset":false,"isSlot":false,"src":"9573:5:6","valueSize":1}],"id":1479,"nodeType":"InlineAssembly","src":"9494:119:6"}]},"id":1481,"implemented":true,"kind":"function","modifiers":[],"name":"_efficientHash","nameLocation":"9367:14:6","nodeType":"FunctionDefinition","parameters":{"id":1475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1472,"mutability":"mutable","name":"a","nameLocation":"9390:1:6","nodeType":"VariableDeclaration","scope":1481,"src":"9382:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1471,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9382:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1474,"mutability":"mutable","name":"b","nameLocation":"9401:1:6","nodeType":"VariableDeclaration","scope":1481,"src":"9393:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1473,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9393:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9381:22:6"},"returnParameters":{"id":1478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1477,"mutability":"mutable","name":"value","nameLocation":"9434:5:6","nodeType":"VariableDeclaration","scope":1481,"src":"9426:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9426:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9425:15:6"},"scope":1482,"src":"9358:261:6","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1483,"src":"802:8819:6","usedErrors":[],"usedEvents":[]}],"src":"118:9504:6"},"id":6},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[1794]},"id":1795,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1484,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeMath","contractDependencies":[],"contractKind":"library","documentation":{"id":1485,"nodeType":"StructuredDocumentation","src":"285:196:7","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":1794,"linearizedBaseContracts":[1794],"name":"SafeMath","nameLocation":"490:8:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1516,"nodeType":"Block","src":"717:140:7","statements":[{"id":1515,"nodeType":"UncheckedBlock","src":"727:124:7","statements":[{"assignments":[1498],"declarations":[{"constant":false,"id":1498,"mutability":"mutable","name":"c","nameLocation":"759:1:7","nodeType":"VariableDeclaration","scope":1515,"src":"751:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1497,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1502,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1499,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"763:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1500,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"767:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"763:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"751:17:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1503,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"786:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1504,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"790:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"786:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1510,"nodeType":"IfStatement","src":"782:28:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"801:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"808:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1508,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"800:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1496,"id":1509,"nodeType":"Return","src":"793:17:7"}},{"expression":{"components":[{"hexValue":"74727565","id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"832:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1512,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"838:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1513,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"831:9:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1496,"id":1514,"nodeType":"Return","src":"824:16:7"}]}]},"documentation":{"id":1486,"nodeType":"StructuredDocumentation","src":"505:131:7","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":1517,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"650:6:7","nodeType":"FunctionDefinition","parameters":{"id":1491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1488,"mutability":"mutable","name":"a","nameLocation":"665:1:7","nodeType":"VariableDeclaration","scope":1517,"src":"657:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1487,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1490,"mutability":"mutable","name":"b","nameLocation":"676:1:7","nodeType":"VariableDeclaration","scope":1517,"src":"668:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1489,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:7"},"returnParameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1517,"src":"702:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1492,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1517,"src":"708:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1494,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:15:7"},"scope":1794,"src":"641:216:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1544,"nodeType":"Block","src":"1078:113:7","statements":[{"id":1543,"nodeType":"UncheckedBlock","src":"1088:97:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1529,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"1116:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1530,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"1120:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1116:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1536,"nodeType":"IfStatement","src":"1112:28:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1131:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1534,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1130:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1528,"id":1535,"nodeType":"Return","src":"1123:17:7"}},{"expression":{"components":[{"hexValue":"74727565","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1162:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1538,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"1168:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1539,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"1172:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1168:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1541,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1161:13:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1528,"id":1542,"nodeType":"Return","src":"1154:20:7"}]}]},"documentation":{"id":1518,"nodeType":"StructuredDocumentation","src":"863:134:7","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":1545,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"1011:6:7","nodeType":"FunctionDefinition","parameters":{"id":1523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1520,"mutability":"mutable","name":"a","nameLocation":"1026:1:7","nodeType":"VariableDeclaration","scope":1545,"src":"1018:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1519,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1522,"mutability":"mutable","name":"b","nameLocation":"1037:1:7","nodeType":"VariableDeclaration","scope":1545,"src":"1029:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1521,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:22:7"},"returnParameters":{"id":1528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1545,"src":"1063:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1524,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1545,"src":"1069:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1526,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1062:15:7"},"scope":1794,"src":"1002:189:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1586,"nodeType":"Block","src":"1415:417:7","statements":[{"id":1585,"nodeType":"UncheckedBlock","src":"1425:401:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1557,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"1683:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1683:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1564,"nodeType":"IfStatement","src":"1679:28:7","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":1560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":1561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1705:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1562,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:9:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1556,"id":1563,"nodeType":"Return","src":"1691:16:7"}},{"assignments":[1566],"declarations":[{"constant":false,"id":1566,"mutability":"mutable","name":"c","nameLocation":"1729:1:7","nodeType":"VariableDeclaration","scope":1585,"src":"1721:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1565,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1570,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1567,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"1733:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1568,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"1737:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1721:17:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1571,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"1756:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1572,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"1760:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1574,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"1765:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1580,"nodeType":"IfStatement","src":"1752:33:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1776:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1578,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1775:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1556,"id":1579,"nodeType":"Return","src":"1768:17:7"}},{"expression":{"components":[{"hexValue":"74727565","id":1581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1807:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1582,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"1813:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1583,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1806:9:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1556,"id":1584,"nodeType":"Return","src":"1799:16:7"}]}]},"documentation":{"id":1546,"nodeType":"StructuredDocumentation","src":"1197:137:7","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":1587,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1348:6:7","nodeType":"FunctionDefinition","parameters":{"id":1551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1548,"mutability":"mutable","name":"a","nameLocation":"1363:1:7","nodeType":"VariableDeclaration","scope":1587,"src":"1355:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1547,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1550,"mutability":"mutable","name":"b","nameLocation":"1374:1:7","nodeType":"VariableDeclaration","scope":1587,"src":"1366:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1549,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:22:7"},"returnParameters":{"id":1556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1587,"src":"1400:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1552,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1587,"src":"1406:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1554,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:15:7"},"scope":1794,"src":"1339:493:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1614,"nodeType":"Block","src":"2057:114:7","statements":[{"id":1613,"nodeType":"UncheckedBlock","src":"2067:98:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1599,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"2095:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2095:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1606,"nodeType":"IfStatement","src":"2091:29:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2111:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1604,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2110:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1598,"id":1605,"nodeType":"Return","src":"2103:17:7"}},{"expression":{"components":[{"hexValue":"74727565","id":1607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2142:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1608,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"2148:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1609,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"2152:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1611,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2141:13:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1598,"id":1612,"nodeType":"Return","src":"2134:20:7"}]}]},"documentation":{"id":1588,"nodeType":"StructuredDocumentation","src":"1838:138:7","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":1615,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1990:6:7","nodeType":"FunctionDefinition","parameters":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1590,"mutability":"mutable","name":"a","nameLocation":"2005:1:7","nodeType":"VariableDeclaration","scope":1615,"src":"1997:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1589,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1592,"mutability":"mutable","name":"b","nameLocation":"2016:1:7","nodeType":"VariableDeclaration","scope":1615,"src":"2008:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1591,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:22:7"},"returnParameters":{"id":1598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1615,"src":"2042:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1594,"name":"bool","nodeType":"ElementaryTypeName","src":"2042:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1615,"src":"2048:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1596,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:15:7"},"scope":1794,"src":"1981:190:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1642,"nodeType":"Block","src":"2406:114:7","statements":[{"id":1641,"nodeType":"UncheckedBlock","src":"2416:98:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1627,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"2444:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2444:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1634,"nodeType":"IfStatement","src":"2440:29:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2460:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1632,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2459:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1626,"id":1633,"nodeType":"Return","src":"2452:17:7"}},{"expression":{"components":[{"hexValue":"74727565","id":1635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2491:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1636,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"2497:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1637,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"2501:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1639,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2490:13:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1626,"id":1640,"nodeType":"Return","src":"2483:20:7"}]}]},"documentation":{"id":1616,"nodeType":"StructuredDocumentation","src":"2177:148:7","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":1643,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2339:6:7","nodeType":"FunctionDefinition","parameters":{"id":1621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1618,"mutability":"mutable","name":"a","nameLocation":"2354:1:7","nodeType":"VariableDeclaration","scope":1643,"src":"2346:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1617,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1620,"mutability":"mutable","name":"b","nameLocation":"2365:1:7","nodeType":"VariableDeclaration","scope":1643,"src":"2357:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1619,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:22:7"},"returnParameters":{"id":1626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1643,"src":"2391:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1622,"name":"bool","nodeType":"ElementaryTypeName","src":"2391:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1643,"src":"2397:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1624,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2390:15:7"},"scope":1794,"src":"2330:190:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1657,"nodeType":"Block","src":"2822:29:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1653,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"2839:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1654,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"2843:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1652,"id":1656,"nodeType":"Return","src":"2832:12:7"}]},"documentation":{"id":1644,"nodeType":"StructuredDocumentation","src":"2526:224:7","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":1658,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2764:3:7","nodeType":"FunctionDefinition","parameters":{"id":1649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1646,"mutability":"mutable","name":"a","nameLocation":"2776:1:7","nodeType":"VariableDeclaration","scope":1658,"src":"2768:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1645,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1648,"mutability":"mutable","name":"b","nameLocation":"2787:1:7","nodeType":"VariableDeclaration","scope":1658,"src":"2779:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:22:7"},"returnParameters":{"id":1652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1658,"src":"2813:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1650,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:9:7"},"scope":1794,"src":"2755:96:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1672,"nodeType":"Block","src":"3189:29:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1668,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"3206:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1669,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"3210:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3206:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1667,"id":1671,"nodeType":"Return","src":"3199:12:7"}]},"documentation":{"id":1659,"nodeType":"StructuredDocumentation","src":"2857:260:7","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":1673,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3131:3:7","nodeType":"FunctionDefinition","parameters":{"id":1664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1661,"mutability":"mutable","name":"a","nameLocation":"3143:1:7","nodeType":"VariableDeclaration","scope":1673,"src":"3135:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1660,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1663,"mutability":"mutable","name":"b","nameLocation":"3154:1:7","nodeType":"VariableDeclaration","scope":1673,"src":"3146:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1662,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:22:7"},"returnParameters":{"id":1667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1673,"src":"3180:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1665,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3179:9:7"},"scope":1794,"src":"3122:96:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1687,"nodeType":"Block","src":"3532:29:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1683,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"3549:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1684,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"3553:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1682,"id":1686,"nodeType":"Return","src":"3542:12:7"}]},"documentation":{"id":1674,"nodeType":"StructuredDocumentation","src":"3224:236:7","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":1688,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"3474:3:7","nodeType":"FunctionDefinition","parameters":{"id":1679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"a","nameLocation":"3486:1:7","nodeType":"VariableDeclaration","scope":1688,"src":"3478:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1678,"mutability":"mutable","name":"b","nameLocation":"3497:1:7","nodeType":"VariableDeclaration","scope":1688,"src":"3489:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1677,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:22:7"},"returnParameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1688,"src":"3523:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:7"},"scope":1794,"src":"3465:96:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1702,"nodeType":"Block","src":"3917:29:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1698,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"3934:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1699,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"3938:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3934:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1697,"id":1701,"nodeType":"Return","src":"3927:12:7"}]},"documentation":{"id":1689,"nodeType":"StructuredDocumentation","src":"3567:278:7","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":1703,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3859:3:7","nodeType":"FunctionDefinition","parameters":{"id":1694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1691,"mutability":"mutable","name":"a","nameLocation":"3871:1:7","nodeType":"VariableDeclaration","scope":1703,"src":"3863:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1690,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1693,"mutability":"mutable","name":"b","nameLocation":"3882:1:7","nodeType":"VariableDeclaration","scope":1703,"src":"3874:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1692,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3862:22:7"},"returnParameters":{"id":1697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1703,"src":"3908:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1695,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:7"},"scope":1794,"src":"3850:96:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1717,"nodeType":"Block","src":"4466:29:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1713,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"4483:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1714,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"4487:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1712,"id":1716,"nodeType":"Return","src":"4476:12:7"}]},"documentation":{"id":1704,"nodeType":"StructuredDocumentation","src":"3952:442:7","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1718,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4408:3:7","nodeType":"FunctionDefinition","parameters":{"id":1709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1706,"mutability":"mutable","name":"a","nameLocation":"4420:1:7","nodeType":"VariableDeclaration","scope":1718,"src":"4412:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1705,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1708,"mutability":"mutable","name":"b","nameLocation":"4431:1:7","nodeType":"VariableDeclaration","scope":1718,"src":"4423:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1707,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:22:7"},"returnParameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1718,"src":"4457:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1710,"name":"uint256","nodeType":"ElementaryTypeName","src":"4457:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4456:9:7"},"scope":1794,"src":"4399:96:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1742,"nodeType":"Block","src":"5054:106:7","statements":[{"id":1741,"nodeType":"UncheckedBlock","src":"5064:90:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1731,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"5096:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1732,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"5101:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5096:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1734,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"5104:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1730,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5088:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5088:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1736,"nodeType":"ExpressionStatement","src":"5088:29:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1737,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"5138:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1738,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"5142:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5138:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1729,"id":1740,"nodeType":"Return","src":"5131:12:7"}]}]},"documentation":{"id":1719,"nodeType":"StructuredDocumentation","src":"4501:453:7","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":1743,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4968:3:7","nodeType":"FunctionDefinition","parameters":{"id":1726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1721,"mutability":"mutable","name":"a","nameLocation":"4980:1:7","nodeType":"VariableDeclaration","scope":1743,"src":"4972:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1720,"name":"uint256","nodeType":"ElementaryTypeName","src":"4972:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1723,"mutability":"mutable","name":"b","nameLocation":"4991:1:7","nodeType":"VariableDeclaration","scope":1743,"src":"4983:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"4983:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1725,"mutability":"mutable","name":"errorMessage","nameLocation":"5008:12:7","nodeType":"VariableDeclaration","scope":1743,"src":"4994:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1724,"name":"string","nodeType":"ElementaryTypeName","src":"4994:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4971:50:7"},"returnParameters":{"id":1729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1743,"src":"5045:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1727,"name":"uint256","nodeType":"ElementaryTypeName","src":"5045:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5044:9:7"},"scope":1794,"src":"4959:201:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1767,"nodeType":"Block","src":"5739:105:7","statements":[{"id":1766,"nodeType":"UncheckedBlock","src":"5749:89:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1756,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"5781:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5785:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5781:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1759,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"5788:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1755,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5773:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5773:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1761,"nodeType":"ExpressionStatement","src":"5773:28:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1762,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"5822:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1763,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"5826:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5822:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1754,"id":1765,"nodeType":"Return","src":"5815:12:7"}]}]},"documentation":{"id":1744,"nodeType":"StructuredDocumentation","src":"5166:473:7","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1768,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5653:3:7","nodeType":"FunctionDefinition","parameters":{"id":1751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"a","nameLocation":"5665:1:7","nodeType":"VariableDeclaration","scope":1768,"src":"5657:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1745,"name":"uint256","nodeType":"ElementaryTypeName","src":"5657:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1748,"mutability":"mutable","name":"b","nameLocation":"5676:1:7","nodeType":"VariableDeclaration","scope":1768,"src":"5668:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1747,"name":"uint256","nodeType":"ElementaryTypeName","src":"5668:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1750,"mutability":"mutable","name":"errorMessage","nameLocation":"5693:12:7","nodeType":"VariableDeclaration","scope":1768,"src":"5679:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1749,"name":"string","nodeType":"ElementaryTypeName","src":"5679:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5656:50:7"},"returnParameters":{"id":1754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1768,"src":"5730:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1752,"name":"uint256","nodeType":"ElementaryTypeName","src":"5730:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5729:9:7"},"scope":1794,"src":"5644:200:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1792,"nodeType":"Block","src":"6585:105:7","statements":[{"id":1791,"nodeType":"UncheckedBlock","src":"6595:89:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1781,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"6627:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6627:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1784,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"6634:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1780,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6619:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6619:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1786,"nodeType":"ExpressionStatement","src":"6619:28:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1787,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"6668:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1788,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"6672:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6668:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1779,"id":1790,"nodeType":"Return","src":"6661:12:7"}]}]},"documentation":{"id":1769,"nodeType":"StructuredDocumentation","src":"5850:635:7","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1793,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"6499:3:7","nodeType":"FunctionDefinition","parameters":{"id":1776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1771,"mutability":"mutable","name":"a","nameLocation":"6511:1:7","nodeType":"VariableDeclaration","scope":1793,"src":"6503:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1770,"name":"uint256","nodeType":"ElementaryTypeName","src":"6503:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1773,"mutability":"mutable","name":"b","nameLocation":"6522:1:7","nodeType":"VariableDeclaration","scope":1793,"src":"6514:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1772,"name":"uint256","nodeType":"ElementaryTypeName","src":"6514:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1775,"mutability":"mutable","name":"errorMessage","nameLocation":"6539:12:7","nodeType":"VariableDeclaration","scope":1793,"src":"6525:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1774,"name":"string","nodeType":"ElementaryTypeName","src":"6525:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6502:50:7"},"returnParameters":{"id":1779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1793,"src":"6576:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1777,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6575:9:7"},"scope":1794,"src":"6490:200:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1795,"src":"482:6210:7","usedErrors":[],"usedEvents":[]}],"src":"107:6586:7"},"id":7},"@openzeppelin/contracts/utils/math/SignedSafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedSafeMath.sol","exportedSymbols":{"SignedSafeMath":[1858]},"id":1859,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1796,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"98:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedSafeMath","contractDependencies":[],"contractKind":"library","documentation":{"id":1797,"nodeType":"StructuredDocumentation","src":"123:192:8","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SignedSafeMath` is no longer needed starting with Solidity 0.8. The compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":1858,"linearizedBaseContracts":[1858],"name":"SignedSafeMath","nameLocation":"324:14:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1811,"nodeType":"Block","src":"648:29:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1807,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"665:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1808,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"669:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"665:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1806,"id":1810,"nodeType":"Return","src":"658:12:8"}]},"documentation":{"id":1798,"nodeType":"StructuredDocumentation","src":"345:234:8","text":" @dev Returns the multiplication of two signed integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":1812,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"593:3:8","nodeType":"FunctionDefinition","parameters":{"id":1803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1800,"mutability":"mutable","name":"a","nameLocation":"604:1:8","nodeType":"VariableDeclaration","scope":1812,"src":"597:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1799,"name":"int256","nodeType":"ElementaryTypeName","src":"597:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1802,"mutability":"mutable","name":"b","nameLocation":"614:1:8","nodeType":"VariableDeclaration","scope":1812,"src":"607:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1801,"name":"int256","nodeType":"ElementaryTypeName","src":"607:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"596:20:8"},"returnParameters":{"id":1806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1812,"src":"640:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1804,"name":"int256","nodeType":"ElementaryTypeName","src":"640:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"639:8:8"},"scope":1858,"src":"584:93:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1826,"nodeType":"Block","src":"1026:29:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1822,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"1043:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1823,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"1047:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1043:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1821,"id":1825,"nodeType":"Return","src":"1036:12:8"}]},"documentation":{"id":1813,"nodeType":"StructuredDocumentation","src":"683:274:8","text":" @dev Returns the integer division of two signed integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":1827,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"971:3:8","nodeType":"FunctionDefinition","parameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"a","nameLocation":"982:1:8","nodeType":"VariableDeclaration","scope":1827,"src":"975:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1814,"name":"int256","nodeType":"ElementaryTypeName","src":"975:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1817,"mutability":"mutable","name":"b","nameLocation":"992:1:8","nodeType":"VariableDeclaration","scope":1827,"src":"985:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1816,"name":"int256","nodeType":"ElementaryTypeName","src":"985:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"974:20:8"},"returnParameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1827,"src":"1018:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1819,"name":"int256","nodeType":"ElementaryTypeName","src":"1018:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1017:8:8"},"scope":1858,"src":"962:93:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1841,"nodeType":"Block","src":"1358:29:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1837,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"1375:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1838,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"1379:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1375:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1836,"id":1840,"nodeType":"Return","src":"1368:12:8"}]},"documentation":{"id":1828,"nodeType":"StructuredDocumentation","src":"1061:228:8","text":" @dev Returns the subtraction of two signed integers, reverting on\n overflow.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":1842,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"1303:3:8","nodeType":"FunctionDefinition","parameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1830,"mutability":"mutable","name":"a","nameLocation":"1314:1:8","nodeType":"VariableDeclaration","scope":1842,"src":"1307:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1829,"name":"int256","nodeType":"ElementaryTypeName","src":"1307:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1832,"mutability":"mutable","name":"b","nameLocation":"1324:1:8","nodeType":"VariableDeclaration","scope":1842,"src":"1317:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1831,"name":"int256","nodeType":"ElementaryTypeName","src":"1317:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1306:20:8"},"returnParameters":{"id":1836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1842,"src":"1350:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1834,"name":"int256","nodeType":"ElementaryTypeName","src":"1350:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1349:8:8"},"scope":1858,"src":"1294:93:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1856,"nodeType":"Block","src":"1684:29:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1852,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"1701:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1853,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"1705:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1701:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1851,"id":1855,"nodeType":"Return","src":"1694:12:8"}]},"documentation":{"id":1843,"nodeType":"StructuredDocumentation","src":"1393:222:8","text":" @dev Returns the addition of two signed integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":1857,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"1629:3:8","nodeType":"FunctionDefinition","parameters":{"id":1848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1845,"mutability":"mutable","name":"a","nameLocation":"1640:1:8","nodeType":"VariableDeclaration","scope":1857,"src":"1633:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1844,"name":"int256","nodeType":"ElementaryTypeName","src":"1633:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1847,"mutability":"mutable","name":"b","nameLocation":"1650:1:8","nodeType":"VariableDeclaration","scope":1857,"src":"1643:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1846,"name":"int256","nodeType":"ElementaryTypeName","src":"1643:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1632:20:8"},"returnParameters":{"id":1851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1857,"src":"1676:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1849,"name":"int256","nodeType":"ElementaryTypeName","src":"1676:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1675:8:8"},"scope":1858,"src":"1620:93:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1859,"src":"316:1399:8","usedErrors":[],"usedEvents":[]}],"src":"98:1618:8"},"id":8},"@uma/core/contracts/common/implementation/FixedPoint.sol":{"ast":{"absolutePath":"@uma/core/contracts/common/implementation/FixedPoint.sol","exportedSymbols":{"FixedPoint":[3491],"SafeMath":[1794],"SignedSafeMath":[1858]},"id":3492,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":1860,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"42:23:9"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":1861,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3492,"sourceUnit":1795,"src":"67:57:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedSafeMath.sol","file":"@openzeppelin/contracts/utils/math/SignedSafeMath.sol","id":1862,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3492,"sourceUnit":1859,"src":"125:63:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"FixedPoint","contractDependencies":[],"contractKind":"library","documentation":{"id":1863,"nodeType":"StructuredDocumentation","src":"190:61:9","text":" @title Library for fixed point arithmetic on uints"},"fullyImplemented":true,"id":3491,"linearizedBaseContracts":[3491],"name":"FixedPoint","nameLocation":"260:10:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1866,"libraryName":{"id":1864,"name":"SafeMath","nameLocations":["283:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1794,"src":"283:8:9"},"nodeType":"UsingForDirective","src":"277:27:9","typeName":{"id":1865,"name":"uint256","nodeType":"ElementaryTypeName","src":"296:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"global":false,"id":1869,"libraryName":{"id":1867,"name":"SignedSafeMath","nameLocations":["315:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":1858,"src":"315:14:9"},"nodeType":"UsingForDirective","src":"309:32:9","typeName":{"id":1868,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}},{"constant":true,"id":1874,"mutability":"constant","name":"FP_SCALING_FACTOR","nameLocation":"599:17:9","nodeType":"VariableDeclaration","scope":3491,"src":"574:51:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1870,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":1873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"619:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"623:2:9","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"619:6:9","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"visibility":"private"},{"canonicalName":"FixedPoint.Unsigned","id":1877,"members":[{"constant":false,"id":1876,"mutability":"mutable","name":"rawValue","nameLocation":"800:8:9","nodeType":"VariableDeclaration","scope":1877,"src":"792:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1875,"name":"uint256","nodeType":"ElementaryTypeName","src":"792:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Unsigned","nameLocation":"773:8:9","nodeType":"StructDefinition","scope":3491,"src":"766:49:9","visibility":"public"},{"body":{"id":1893,"nodeType":"Block","src":"1121:58:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1889,"name":"FP_SCALING_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"1153:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1887,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"1147:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1149:3:9","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1688,"src":"1147:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1147:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1886,"name":"Unsigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"1138:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Unsigned_$1877_storage_ptr_$","typeString":"type(struct FixedPoint.Unsigned storage pointer)"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1138:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":1885,"id":1892,"nodeType":"Return","src":"1131:41:9"}]},"documentation":{"id":1878,"nodeType":"StructuredDocumentation","src":"821:218:9","text":" @notice Constructs an `Unsigned` from an unscaled uint, e.g., `b=5` gets stored internally as `5*(10**18)`.\n @param a uint to convert into a FixedPoint.\n @return the converted FixedPoint."},"id":1894,"implemented":true,"kind":"function","modifiers":[],"name":"fromUnscaledUint","nameLocation":"1053:16:9","nodeType":"FunctionDefinition","parameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1880,"mutability":"mutable","name":"a","nameLocation":"1078:1:9","nodeType":"VariableDeclaration","scope":1894,"src":"1070:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1879,"name":"uint256","nodeType":"ElementaryTypeName","src":"1070:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1069:11:9"},"returnParameters":{"id":1885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1894,"src":"1104:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":1883,"nodeType":"UserDefinedTypeName","pathNode":{"id":1882,"name":"Unsigned","nameLocations":["1104:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"1104:8:9"},"referencedDeclaration":1877,"src":"1104:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"1103:17:9"},"scope":3491,"src":"1044:135:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1913,"nodeType":"Block","src":"1418:66:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1905,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"1435:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":1906,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1437:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"1435:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1908,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"1466:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1907,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"1449:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1877_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1449:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":1910,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1469:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"1449:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1435:42:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1904,"id":1912,"nodeType":"Return","src":"1428:49:9"}]},"documentation":{"id":1895,"nodeType":"StructuredDocumentation","src":"1185:152:9","text":" @notice Whether `a` is equal to `b`.\n @param a a FixedPoint.\n @param b a uint256.\n @return True if equal, or False."},"id":1914,"implemented":true,"kind":"function","modifiers":[],"name":"isEqual","nameLocation":"1351:7:9","nodeType":"FunctionDefinition","parameters":{"id":1901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1898,"mutability":"mutable","name":"a","nameLocation":"1375:1:9","nodeType":"VariableDeclaration","scope":1914,"src":"1359:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":1897,"nodeType":"UserDefinedTypeName","pathNode":{"id":1896,"name":"Unsigned","nameLocations":["1359:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"1359:8:9"},"referencedDeclaration":1877,"src":"1359:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":1900,"mutability":"mutable","name":"b","nameLocation":"1386:1:9","nodeType":"VariableDeclaration","scope":1914,"src":"1378:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1899,"name":"uint256","nodeType":"ElementaryTypeName","src":"1378:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1358:30:9"},"returnParameters":{"id":1904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1914,"src":"1412:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1902,"name":"bool","nodeType":"ElementaryTypeName","src":"1412:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1411:6:9"},"scope":3491,"src":"1342:142:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1932,"nodeType":"Block","src":"1734:48:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1926,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"1751:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":1927,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1753:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"1751:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1928,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"1765:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":1929,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1767:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"1765:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1751:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1925,"id":1931,"nodeType":"Return","src":"1744:31:9"}]},"documentation":{"id":1915,"nodeType":"StructuredDocumentation","src":"1490:155:9","text":" @notice Whether `a` is equal to `b`.\n @param a a FixedPoint.\n @param b a FixedPoint.\n @return True if equal, or False."},"id":1933,"implemented":true,"kind":"function","modifiers":[],"name":"isEqual","nameLocation":"1659:7:9","nodeType":"FunctionDefinition","parameters":{"id":1922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1918,"mutability":"mutable","name":"a","nameLocation":"1683:1:9","nodeType":"VariableDeclaration","scope":1933,"src":"1667:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":1917,"nodeType":"UserDefinedTypeName","pathNode":{"id":1916,"name":"Unsigned","nameLocations":["1667:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"1667:8:9"},"referencedDeclaration":1877,"src":"1667:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":1921,"mutability":"mutable","name":"b","nameLocation":"1702:1:9","nodeType":"VariableDeclaration","scope":1933,"src":"1686:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":1920,"nodeType":"UserDefinedTypeName","pathNode":{"id":1919,"name":"Unsigned","nameLocations":["1686:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"1686:8:9"},"referencedDeclaration":1877,"src":"1686:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"1666:38:9"},"returnParameters":{"id":1925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1933,"src":"1728:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1923,"name":"bool","nodeType":"ElementaryTypeName","src":"1728:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1727:6:9"},"scope":3491,"src":"1650:132:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1951,"nodeType":"Block","src":"2044:47:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1945,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"2061:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":1946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2063:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"2061:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1947,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"2074:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":1948,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2076:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"2074:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1944,"id":1950,"nodeType":"Return","src":"2054:30:9"}]},"documentation":{"id":1934,"nodeType":"StructuredDocumentation","src":"1788:161:9","text":" @notice Whether `a` is greater than `b`.\n @param a a FixedPoint.\n @param b a FixedPoint.\n @return True if `a > b`, or False."},"id":1952,"implemented":true,"kind":"function","modifiers":[],"name":"isGreaterThan","nameLocation":"1963:13:9","nodeType":"FunctionDefinition","parameters":{"id":1941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"a","nameLocation":"1993:1:9","nodeType":"VariableDeclaration","scope":1952,"src":"1977:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":1936,"nodeType":"UserDefinedTypeName","pathNode":{"id":1935,"name":"Unsigned","nameLocations":["1977:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"1977:8:9"},"referencedDeclaration":1877,"src":"1977:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":1940,"mutability":"mutable","name":"b","nameLocation":"2012:1:9","nodeType":"VariableDeclaration","scope":1952,"src":"1996:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":1939,"nodeType":"UserDefinedTypeName","pathNode":{"id":1938,"name":"Unsigned","nameLocations":["1996:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"1996:8:9"},"referencedDeclaration":1877,"src":"1996:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"1976:38:9"},"returnParameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1952,"src":"2038:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1942,"name":"bool","nodeType":"ElementaryTypeName","src":"2038:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2037:6:9"},"scope":3491,"src":"1954:137:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1971,"nodeType":"Block","src":"2342:65:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1963,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"2359:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":1964,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2361:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"2359:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1966,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"2389:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1965,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"2372:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1877_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2372:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":1968,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2392:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"2372:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2359:41:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1962,"id":1970,"nodeType":"Return","src":"2352:48:9"}]},"documentation":{"id":1953,"nodeType":"StructuredDocumentation","src":"2097:158:9","text":" @notice Whether `a` is greater than `b`.\n @param a a FixedPoint.\n @param b a uint256.\n @return True if `a > b`, or False."},"id":1972,"implemented":true,"kind":"function","modifiers":[],"name":"isGreaterThan","nameLocation":"2269:13:9","nodeType":"FunctionDefinition","parameters":{"id":1959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1956,"mutability":"mutable","name":"a","nameLocation":"2299:1:9","nodeType":"VariableDeclaration","scope":1972,"src":"2283:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":1955,"nodeType":"UserDefinedTypeName","pathNode":{"id":1954,"name":"Unsigned","nameLocations":["2283:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"2283:8:9"},"referencedDeclaration":1877,"src":"2283:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":1958,"mutability":"mutable","name":"b","nameLocation":"2310:1:9","nodeType":"VariableDeclaration","scope":1972,"src":"2302:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1957,"name":"uint256","nodeType":"ElementaryTypeName","src":"2302:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2282:30:9"},"returnParameters":{"id":1962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1972,"src":"2336:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1960,"name":"bool","nodeType":"ElementaryTypeName","src":"2336:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2335:6:9"},"scope":3491,"src":"2260:147:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1991,"nodeType":"Block","src":"2658:65:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1984,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"2692:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1983,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"2675:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1877_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":1986,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2695:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"2675:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1987,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"2706:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":1988,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2708:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"2706:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2675:41:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1982,"id":1990,"nodeType":"Return","src":"2668:48:9"}]},"documentation":{"id":1973,"nodeType":"StructuredDocumentation","src":"2413:158:9","text":" @notice Whether `a` is greater than `b`.\n @param a a uint256.\n @param b a FixedPoint.\n @return True if `a > b`, or False."},"id":1992,"implemented":true,"kind":"function","modifiers":[],"name":"isGreaterThan","nameLocation":"2585:13:9","nodeType":"FunctionDefinition","parameters":{"id":1979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1975,"mutability":"mutable","name":"a","nameLocation":"2607:1:9","nodeType":"VariableDeclaration","scope":1992,"src":"2599:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1974,"name":"uint256","nodeType":"ElementaryTypeName","src":"2599:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1978,"mutability":"mutable","name":"b","nameLocation":"2626:1:9","nodeType":"VariableDeclaration","scope":1992,"src":"2610:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":1977,"nodeType":"UserDefinedTypeName","pathNode":{"id":1976,"name":"Unsigned","nameLocations":["2610:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"2610:8:9"},"referencedDeclaration":1877,"src":"2610:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"2598:30:9"},"returnParameters":{"id":1982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1992,"src":"2652:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1980,"name":"bool","nodeType":"ElementaryTypeName","src":"2652:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2651:6:9"},"scope":3491,"src":"2576:147:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2010,"nodeType":"Block","src":"3005:48:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2004,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"3022:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2005,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3024:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"3022:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2006,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"3036:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2007,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3038:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"3036:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3022:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2003,"id":2009,"nodeType":"Return","src":"3015:31:9"}]},"documentation":{"id":1993,"nodeType":"StructuredDocumentation","src":"2729:174:9","text":" @notice Whether `a` is greater than or equal to `b`.\n @param a a FixedPoint.\n @param b a FixedPoint.\n @return True if `a >= b`, or False."},"id":2011,"implemented":true,"kind":"function","modifiers":[],"name":"isGreaterThanOrEqual","nameLocation":"2917:20:9","nodeType":"FunctionDefinition","parameters":{"id":2000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"a","nameLocation":"2954:1:9","nodeType":"VariableDeclaration","scope":2011,"src":"2938:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":1995,"nodeType":"UserDefinedTypeName","pathNode":{"id":1994,"name":"Unsigned","nameLocations":["2938:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"2938:8:9"},"referencedDeclaration":1877,"src":"2938:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":1999,"mutability":"mutable","name":"b","nameLocation":"2973:1:9","nodeType":"VariableDeclaration","scope":2011,"src":"2957:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":1998,"nodeType":"UserDefinedTypeName","pathNode":{"id":1997,"name":"Unsigned","nameLocations":["2957:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"2957:8:9"},"referencedDeclaration":1877,"src":"2957:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"2937:38:9"},"returnParameters":{"id":2003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2002,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2011,"src":"2999:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2001,"name":"bool","nodeType":"ElementaryTypeName","src":"2999:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2998:6:9"},"scope":3491,"src":"2908:145:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2030,"nodeType":"Block","src":"3324:66:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2022,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"3341:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3343:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"3341:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2025,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"3372:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2024,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"3355:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1877_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3355:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2027,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3375:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"3355:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3341:42:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2021,"id":2029,"nodeType":"Return","src":"3334:49:9"}]},"documentation":{"id":2012,"nodeType":"StructuredDocumentation","src":"3059:171:9","text":" @notice Whether `a` is greater than or equal to `b`.\n @param a a FixedPoint.\n @param b a uint256.\n @return True if `a >= b`, or False."},"id":2031,"implemented":true,"kind":"function","modifiers":[],"name":"isGreaterThanOrEqual","nameLocation":"3244:20:9","nodeType":"FunctionDefinition","parameters":{"id":2018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2015,"mutability":"mutable","name":"a","nameLocation":"3281:1:9","nodeType":"VariableDeclaration","scope":2031,"src":"3265:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2014,"nodeType":"UserDefinedTypeName","pathNode":{"id":2013,"name":"Unsigned","nameLocations":["3265:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"3265:8:9"},"referencedDeclaration":1877,"src":"3265:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2017,"mutability":"mutable","name":"b","nameLocation":"3292:1:9","nodeType":"VariableDeclaration","scope":2031,"src":"3284:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2016,"name":"uint256","nodeType":"ElementaryTypeName","src":"3284:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3264:30:9"},"returnParameters":{"id":2021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2031,"src":"3318:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2019,"name":"bool","nodeType":"ElementaryTypeName","src":"3318:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3317:6:9"},"scope":3491,"src":"3235:155:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2050,"nodeType":"Block","src":"3661:66:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2043,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"3695:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2042,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"3678:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1877_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3678:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2045,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3698:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"3678:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2046,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"3710:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2047,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3712:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"3710:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3678:42:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2041,"id":2049,"nodeType":"Return","src":"3671:49:9"}]},"documentation":{"id":2032,"nodeType":"StructuredDocumentation","src":"3396:171:9","text":" @notice Whether `a` is greater than or equal to `b`.\n @param a a uint256.\n @param b a FixedPoint.\n @return True if `a >= b`, or False."},"id":2051,"implemented":true,"kind":"function","modifiers":[],"name":"isGreaterThanOrEqual","nameLocation":"3581:20:9","nodeType":"FunctionDefinition","parameters":{"id":2038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2034,"mutability":"mutable","name":"a","nameLocation":"3610:1:9","nodeType":"VariableDeclaration","scope":2051,"src":"3602:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2033,"name":"uint256","nodeType":"ElementaryTypeName","src":"3602:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2037,"mutability":"mutable","name":"b","nameLocation":"3629:1:9","nodeType":"VariableDeclaration","scope":2051,"src":"3613:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2036,"nodeType":"UserDefinedTypeName","pathNode":{"id":2035,"name":"Unsigned","nameLocations":["3613:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"3613:8:9"},"referencedDeclaration":1877,"src":"3613:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"3601:30:9"},"returnParameters":{"id":2041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2051,"src":"3655:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2039,"name":"bool","nodeType":"ElementaryTypeName","src":"3655:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3654:6:9"},"scope":3491,"src":"3572:155:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2069,"nodeType":"Block","src":"3983:47:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2063,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"4000:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2064,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4002:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"4000:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2065,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"4013:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2066,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4015:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"4013:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4000:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2062,"id":2068,"nodeType":"Return","src":"3993:30:9"}]},"documentation":{"id":2052,"nodeType":"StructuredDocumentation","src":"3733:158:9","text":" @notice Whether `a` is less than `b`.\n @param a a FixedPoint.\n @param b a FixedPoint.\n @return True if `a < b`, or False."},"id":2070,"implemented":true,"kind":"function","modifiers":[],"name":"isLessThan","nameLocation":"3905:10:9","nodeType":"FunctionDefinition","parameters":{"id":2059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2055,"mutability":"mutable","name":"a","nameLocation":"3932:1:9","nodeType":"VariableDeclaration","scope":2070,"src":"3916:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2054,"nodeType":"UserDefinedTypeName","pathNode":{"id":2053,"name":"Unsigned","nameLocations":["3916:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"3916:8:9"},"referencedDeclaration":1877,"src":"3916:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2058,"mutability":"mutable","name":"b","nameLocation":"3951:1:9","nodeType":"VariableDeclaration","scope":2070,"src":"3935:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2057,"nodeType":"UserDefinedTypeName","pathNode":{"id":2056,"name":"Unsigned","nameLocations":["3935:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"3935:8:9"},"referencedDeclaration":1877,"src":"3935:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"3915:38:9"},"returnParameters":{"id":2062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2070,"src":"3977:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2060,"name":"bool","nodeType":"ElementaryTypeName","src":"3977:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3976:6:9"},"scope":3491,"src":"3896:134:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2089,"nodeType":"Block","src":"4275:65:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2081,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"4292:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2082,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4294:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"4292:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":2084,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"4322:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2083,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"4305:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1877_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4305:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2086,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4325:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"4305:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4292:41:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2080,"id":2088,"nodeType":"Return","src":"4285:48:9"}]},"documentation":{"id":2071,"nodeType":"StructuredDocumentation","src":"4036:155:9","text":" @notice Whether `a` is less than `b`.\n @param a a FixedPoint.\n @param b a uint256.\n @return True if `a < b`, or False."},"id":2090,"implemented":true,"kind":"function","modifiers":[],"name":"isLessThan","nameLocation":"4205:10:9","nodeType":"FunctionDefinition","parameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2074,"mutability":"mutable","name":"a","nameLocation":"4232:1:9","nodeType":"VariableDeclaration","scope":2090,"src":"4216:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2073,"nodeType":"UserDefinedTypeName","pathNode":{"id":2072,"name":"Unsigned","nameLocations":["4216:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"4216:8:9"},"referencedDeclaration":1877,"src":"4216:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2076,"mutability":"mutable","name":"b","nameLocation":"4243:1:9","nodeType":"VariableDeclaration","scope":2090,"src":"4235:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2075,"name":"uint256","nodeType":"ElementaryTypeName","src":"4235:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4215:30:9"},"returnParameters":{"id":2080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2090,"src":"4269:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2078,"name":"bool","nodeType":"ElementaryTypeName","src":"4269:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4268:6:9"},"scope":3491,"src":"4196:144:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2109,"nodeType":"Block","src":"4585:65:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2102,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"4619:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2101,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"4602:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1877_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2104,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4622:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"4602:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2105,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"4633:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2106,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4635:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"4633:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4602:41:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2100,"id":2108,"nodeType":"Return","src":"4595:48:9"}]},"documentation":{"id":2091,"nodeType":"StructuredDocumentation","src":"4346:155:9","text":" @notice Whether `a` is less than `b`.\n @param a a uint256.\n @param b a FixedPoint.\n @return True if `a < b`, or False."},"id":2110,"implemented":true,"kind":"function","modifiers":[],"name":"isLessThan","nameLocation":"4515:10:9","nodeType":"FunctionDefinition","parameters":{"id":2097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2093,"mutability":"mutable","name":"a","nameLocation":"4534:1:9","nodeType":"VariableDeclaration","scope":2110,"src":"4526:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2092,"name":"uint256","nodeType":"ElementaryTypeName","src":"4526:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2096,"mutability":"mutable","name":"b","nameLocation":"4553:1:9","nodeType":"VariableDeclaration","scope":2110,"src":"4537:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2095,"nodeType":"UserDefinedTypeName","pathNode":{"id":2094,"name":"Unsigned","nameLocations":["4537:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"4537:8:9"},"referencedDeclaration":1877,"src":"4537:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"4525:30:9"},"returnParameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2110,"src":"4579:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2098,"name":"bool","nodeType":"ElementaryTypeName","src":"4579:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4578:6:9"},"scope":3491,"src":"4506:144:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2128,"nodeType":"Block","src":"4926:48:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2122,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"4943:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2123,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4945:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"4943:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":2124,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"4957:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4959:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"4957:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4943:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2121,"id":2127,"nodeType":"Return","src":"4936:31:9"}]},"documentation":{"id":2111,"nodeType":"StructuredDocumentation","src":"4656:171:9","text":" @notice Whether `a` is less than or equal to `b`.\n @param a a FixedPoint.\n @param b a FixedPoint.\n @return True if `a <= b`, or False."},"id":2129,"implemented":true,"kind":"function","modifiers":[],"name":"isLessThanOrEqual","nameLocation":"4841:17:9","nodeType":"FunctionDefinition","parameters":{"id":2118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2114,"mutability":"mutable","name":"a","nameLocation":"4875:1:9","nodeType":"VariableDeclaration","scope":2129,"src":"4859:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2113,"nodeType":"UserDefinedTypeName","pathNode":{"id":2112,"name":"Unsigned","nameLocations":["4859:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"4859:8:9"},"referencedDeclaration":1877,"src":"4859:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2117,"mutability":"mutable","name":"b","nameLocation":"4894:1:9","nodeType":"VariableDeclaration","scope":2129,"src":"4878:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2116,"nodeType":"UserDefinedTypeName","pathNode":{"id":2115,"name":"Unsigned","nameLocations":["4878:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"4878:8:9"},"referencedDeclaration":1877,"src":"4878:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"4858:38:9"},"returnParameters":{"id":2121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2129,"src":"4920:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2119,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:9"},"scope":3491,"src":"4832:142:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2148,"nodeType":"Block","src":"5239:66:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2140,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"5256:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2141,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5258:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"5256:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2143,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"5287:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2142,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"5270:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1877_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5270:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5290:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"5270:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5256:42:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2139,"id":2147,"nodeType":"Return","src":"5249:49:9"}]},"documentation":{"id":2130,"nodeType":"StructuredDocumentation","src":"4980:168:9","text":" @notice Whether `a` is less than or equal to `b`.\n @param a a FixedPoint.\n @param b a uint256.\n @return True if `a <= b`, or False."},"id":2149,"implemented":true,"kind":"function","modifiers":[],"name":"isLessThanOrEqual","nameLocation":"5162:17:9","nodeType":"FunctionDefinition","parameters":{"id":2136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2133,"mutability":"mutable","name":"a","nameLocation":"5196:1:9","nodeType":"VariableDeclaration","scope":2149,"src":"5180:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2132,"nodeType":"UserDefinedTypeName","pathNode":{"id":2131,"name":"Unsigned","nameLocations":["5180:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"5180:8:9"},"referencedDeclaration":1877,"src":"5180:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2135,"mutability":"mutable","name":"b","nameLocation":"5207:1:9","nodeType":"VariableDeclaration","scope":2149,"src":"5199:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2134,"name":"uint256","nodeType":"ElementaryTypeName","src":"5199:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5179:30:9"},"returnParameters":{"id":2139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2149,"src":"5233:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2137,"name":"bool","nodeType":"ElementaryTypeName","src":"5233:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5232:6:9"},"scope":3491,"src":"5153:152:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2168,"nodeType":"Block","src":"5570:66:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2161,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"5604:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2160,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"5587:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1877_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5587:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2163,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5607:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"5587:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":2164,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"5619:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5621:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"5619:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5587:42:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2159,"id":2167,"nodeType":"Return","src":"5580:49:9"}]},"documentation":{"id":2150,"nodeType":"StructuredDocumentation","src":"5311:168:9","text":" @notice Whether `a` is less than or equal to `b`.\n @param a a uint256.\n @param b a FixedPoint.\n @return True if `a <= b`, or False."},"id":2169,"implemented":true,"kind":"function","modifiers":[],"name":"isLessThanOrEqual","nameLocation":"5493:17:9","nodeType":"FunctionDefinition","parameters":{"id":2156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2152,"mutability":"mutable","name":"a","nameLocation":"5519:1:9","nodeType":"VariableDeclaration","scope":2169,"src":"5511:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2151,"name":"uint256","nodeType":"ElementaryTypeName","src":"5511:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2155,"mutability":"mutable","name":"b","nameLocation":"5538:1:9","nodeType":"VariableDeclaration","scope":2169,"src":"5522:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2154,"nodeType":"UserDefinedTypeName","pathNode":{"id":2153,"name":"Unsigned","nameLocations":["5522:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"5522:8:9"},"referencedDeclaration":1877,"src":"5522:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"5510:30:9"},"returnParameters":{"id":2159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2169,"src":"5564:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2157,"name":"bool","nodeType":"ElementaryTypeName","src":"5564:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5563:6:9"},"scope":3491,"src":"5484:152:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2191,"nodeType":"Block","src":"5895:55:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2182,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"5912:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5914:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"5912:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2184,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"5925:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5927:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"5925:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5912:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2188,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"5942:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5912:31:9","trueExpression":{"id":2187,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"5938:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2181,"id":2190,"nodeType":"Return","src":"5905:38:9"}]},"documentation":{"id":2170,"nodeType":"StructuredDocumentation","src":"5642:157:9","text":" @notice The minimum of `a` and `b`.\n @param a a FixedPoint.\n @param b a FixedPoint.\n @return the minimum of `a` and `b`."},"id":2192,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5813:3:9","nodeType":"FunctionDefinition","parameters":{"id":2177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2173,"mutability":"mutable","name":"a","nameLocation":"5833:1:9","nodeType":"VariableDeclaration","scope":2192,"src":"5817:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2172,"nodeType":"UserDefinedTypeName","pathNode":{"id":2171,"name":"Unsigned","nameLocations":["5817:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"5817:8:9"},"referencedDeclaration":1877,"src":"5817:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2176,"mutability":"mutable","name":"b","nameLocation":"5852:1:9","nodeType":"VariableDeclaration","scope":2192,"src":"5836:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2175,"nodeType":"UserDefinedTypeName","pathNode":{"id":2174,"name":"Unsigned","nameLocations":["5836:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"5836:8:9"},"referencedDeclaration":1877,"src":"5836:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"5816:38:9"},"returnParameters":{"id":2181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2192,"src":"5878:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2179,"nodeType":"UserDefinedTypeName","pathNode":{"id":2178,"name":"Unsigned","nameLocations":["5878:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"5878:8:9"},"referencedDeclaration":1877,"src":"5878:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"5877:17:9"},"scope":3491,"src":"5804:146:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2214,"nodeType":"Block","src":"6209:55:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2205,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"6226:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6228:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"6226:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":2207,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"6239:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2208,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6241:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"6239:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6226:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2211,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"6256:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6226:31:9","trueExpression":{"id":2210,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"6252:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2204,"id":2213,"nodeType":"Return","src":"6219:38:9"}]},"documentation":{"id":2193,"nodeType":"StructuredDocumentation","src":"5956:157:9","text":" @notice The maximum of `a` and `b`.\n @param a a FixedPoint.\n @param b a FixedPoint.\n @return the maximum of `a` and `b`."},"id":2215,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"6127:3:9","nodeType":"FunctionDefinition","parameters":{"id":2200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2196,"mutability":"mutable","name":"a","nameLocation":"6147:1:9","nodeType":"VariableDeclaration","scope":2215,"src":"6131:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2195,"nodeType":"UserDefinedTypeName","pathNode":{"id":2194,"name":"Unsigned","nameLocations":["6131:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"6131:8:9"},"referencedDeclaration":1877,"src":"6131:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2199,"mutability":"mutable","name":"b","nameLocation":"6166:1:9","nodeType":"VariableDeclaration","scope":2215,"src":"6150:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2198,"nodeType":"UserDefinedTypeName","pathNode":{"id":2197,"name":"Unsigned","nameLocations":["6150:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"6150:8:9"},"referencedDeclaration":1877,"src":"6150:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"6130:38:9"},"returnParameters":{"id":2204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2215,"src":"6192:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2202,"nodeType":"UserDefinedTypeName","pathNode":{"id":2201,"name":"Unsigned","nameLocations":["6192:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"6192:8:9"},"referencedDeclaration":1877,"src":"6192:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"6191:17:9"},"scope":3491,"src":"6118:146:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2237,"nodeType":"Block","src":"6536:60:9","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2232,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"6577:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2233,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6579:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"6577:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2229,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"6562:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2230,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6564:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"6562:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6573:3:9","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1658,"src":"6562:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6562:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2228,"name":"Unsigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"6553:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Unsigned_$1877_storage_ptr_$","typeString":"type(struct FixedPoint.Unsigned storage pointer)"}},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6553:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2227,"id":2236,"nodeType":"Return","src":"6546:43:9"}]},"documentation":{"id":2216,"nodeType":"StructuredDocumentation","src":"6270:170:9","text":" @notice Adds two `Unsigned`s, reverting on overflow.\n @param a a FixedPoint.\n @param b a FixedPoint.\n @return the sum of `a` and `b`."},"id":2238,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"6454:3:9","nodeType":"FunctionDefinition","parameters":{"id":2223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2219,"mutability":"mutable","name":"a","nameLocation":"6474:1:9","nodeType":"VariableDeclaration","scope":2238,"src":"6458:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2218,"nodeType":"UserDefinedTypeName","pathNode":{"id":2217,"name":"Unsigned","nameLocations":["6458:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"6458:8:9"},"referencedDeclaration":1877,"src":"6458:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2222,"mutability":"mutable","name":"b","nameLocation":"6493:1:9","nodeType":"VariableDeclaration","scope":2238,"src":"6477:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2221,"nodeType":"UserDefinedTypeName","pathNode":{"id":2220,"name":"Unsigned","nameLocations":["6477:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"6477:8:9"},"referencedDeclaration":1877,"src":"6477:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"6457:38:9"},"returnParameters":{"id":2227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2238,"src":"6519:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2225,"nodeType":"UserDefinedTypeName","pathNode":{"id":2224,"name":"Unsigned","nameLocations":["6519:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"6519:8:9"},"referencedDeclaration":1877,"src":"6519:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"6518:17:9"},"scope":3491,"src":"6445:151:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2257,"nodeType":"Block","src":"6875:51:9","statements":[{"expression":{"arguments":[{"id":2251,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"6896:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},{"arguments":[{"id":2253,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"6916:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2252,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"6899:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1877_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6899:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"},{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}],"id":2250,"name":"add","nodeType":"Identifier","overloadedDeclarations":[2238,2258,3053,3073],"referencedDeclaration":2238,"src":"6892:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Unsigned_$1877_memory_ptr_$_t_struct$_Unsigned_$1877_memory_ptr_$returns$_t_struct$_Unsigned_$1877_memory_ptr_$","typeString":"function (struct FixedPoint.Unsigned memory,struct FixedPoint.Unsigned memory) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6892:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2249,"id":2256,"nodeType":"Return","src":"6885:34:9"}]},"documentation":{"id":2239,"nodeType":"StructuredDocumentation","src":"6602:185:9","text":" @notice Adds an `Unsigned` to an unscaled uint, reverting on overflow.\n @param a a FixedPoint.\n @param b a uint256.\n @return the sum of `a` and `b`."},"id":2258,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"6801:3:9","nodeType":"FunctionDefinition","parameters":{"id":2245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2242,"mutability":"mutable","name":"a","nameLocation":"6821:1:9","nodeType":"VariableDeclaration","scope":2258,"src":"6805:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2241,"nodeType":"UserDefinedTypeName","pathNode":{"id":2240,"name":"Unsigned","nameLocations":["6805:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"6805:8:9"},"referencedDeclaration":1877,"src":"6805:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2244,"mutability":"mutable","name":"b","nameLocation":"6832:1:9","nodeType":"VariableDeclaration","scope":2258,"src":"6824:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2243,"name":"uint256","nodeType":"ElementaryTypeName","src":"6824:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6804:30:9"},"returnParameters":{"id":2249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2258,"src":"6858:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2247,"nodeType":"UserDefinedTypeName","pathNode":{"id":2246,"name":"Unsigned","nameLocations":["6858:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"6858:8:9"},"referencedDeclaration":1877,"src":"6858:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"6857:17:9"},"scope":3491,"src":"6792:134:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2280,"nodeType":"Block","src":"7210:60:9","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2275,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"7251:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2276,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7253:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"7251:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2272,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"7236:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7238:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"7236:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7247:3:9","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1673,"src":"7236:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7236:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2271,"name":"Unsigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"7227:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Unsigned_$1877_storage_ptr_$","typeString":"type(struct FixedPoint.Unsigned storage pointer)"}},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7227:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2270,"id":2279,"nodeType":"Return","src":"7220:43:9"}]},"documentation":{"id":2259,"nodeType":"StructuredDocumentation","src":"6932:182:9","text":" @notice Subtracts two `Unsigned`s, reverting on overflow.\n @param a a FixedPoint.\n @param b a FixedPoint.\n @return the difference of `a` and `b`."},"id":2281,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"7128:3:9","nodeType":"FunctionDefinition","parameters":{"id":2266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2262,"mutability":"mutable","name":"a","nameLocation":"7148:1:9","nodeType":"VariableDeclaration","scope":2281,"src":"7132:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2261,"nodeType":"UserDefinedTypeName","pathNode":{"id":2260,"name":"Unsigned","nameLocations":["7132:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"7132:8:9"},"referencedDeclaration":1877,"src":"7132:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2265,"mutability":"mutable","name":"b","nameLocation":"7167:1:9","nodeType":"VariableDeclaration","scope":2281,"src":"7151:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2264,"nodeType":"UserDefinedTypeName","pathNode":{"id":2263,"name":"Unsigned","nameLocations":["7151:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"7151:8:9"},"referencedDeclaration":1877,"src":"7151:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"7131:38:9"},"returnParameters":{"id":2270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2281,"src":"7193:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2268,"nodeType":"UserDefinedTypeName","pathNode":{"id":2267,"name":"Unsigned","nameLocations":["7193:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"7193:8:9"},"referencedDeclaration":1877,"src":"7193:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"7192:17:9"},"scope":3491,"src":"7119:151:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2300,"nodeType":"Block","src":"7566:51:9","statements":[{"expression":{"arguments":[{"id":2294,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"7587:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},{"arguments":[{"id":2296,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"7607:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2295,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"7590:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1877_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7590:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"},{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}],"id":2293,"name":"sub","nodeType":"Identifier","overloadedDeclarations":[2281,2301,2321,3096,3116,3136],"referencedDeclaration":2281,"src":"7583:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Unsigned_$1877_memory_ptr_$_t_struct$_Unsigned_$1877_memory_ptr_$returns$_t_struct$_Unsigned_$1877_memory_ptr_$","typeString":"function (struct FixedPoint.Unsigned memory,struct FixedPoint.Unsigned memory) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7583:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2292,"id":2299,"nodeType":"Return","src":"7576:34:9"}]},"documentation":{"id":2282,"nodeType":"StructuredDocumentation","src":"7276:202:9","text":" @notice Subtracts an unscaled uint256 from an `Unsigned`, reverting on overflow.\n @param a a FixedPoint.\n @param b a uint256.\n @return the difference of `a` and `b`."},"id":2301,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"7492:3:9","nodeType":"FunctionDefinition","parameters":{"id":2288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2285,"mutability":"mutable","name":"a","nameLocation":"7512:1:9","nodeType":"VariableDeclaration","scope":2301,"src":"7496:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2284,"nodeType":"UserDefinedTypeName","pathNode":{"id":2283,"name":"Unsigned","nameLocations":["7496:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"7496:8:9"},"referencedDeclaration":1877,"src":"7496:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2287,"mutability":"mutable","name":"b","nameLocation":"7523:1:9","nodeType":"VariableDeclaration","scope":2301,"src":"7515:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2286,"name":"uint256","nodeType":"ElementaryTypeName","src":"7515:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7495:30:9"},"returnParameters":{"id":2292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2301,"src":"7549:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2290,"nodeType":"UserDefinedTypeName","pathNode":{"id":2289,"name":"Unsigned","nameLocations":["7549:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"7549:8:9"},"referencedDeclaration":1877,"src":"7549:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"7548:17:9"},"scope":3491,"src":"7483:134:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2320,"nodeType":"Block","src":"7913:51:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2315,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"7951:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2314,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"7934:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1877_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},{"id":2317,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"7955:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"},{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}],"id":2313,"name":"sub","nodeType":"Identifier","overloadedDeclarations":[2281,2301,2321,3096,3116,3136],"referencedDeclaration":2281,"src":"7930:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Unsigned_$1877_memory_ptr_$_t_struct$_Unsigned_$1877_memory_ptr_$returns$_t_struct$_Unsigned_$1877_memory_ptr_$","typeString":"function (struct FixedPoint.Unsigned memory,struct FixedPoint.Unsigned memory) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7930:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2312,"id":2319,"nodeType":"Return","src":"7923:34:9"}]},"documentation":{"id":2302,"nodeType":"StructuredDocumentation","src":"7623:202:9","text":" @notice Subtracts an `Unsigned` from an unscaled uint256, reverting on overflow.\n @param a a uint256.\n @param b a FixedPoint.\n @return the difference of `a` and `b`."},"id":2321,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"7839:3:9","nodeType":"FunctionDefinition","parameters":{"id":2308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2304,"mutability":"mutable","name":"a","nameLocation":"7851:1:9","nodeType":"VariableDeclaration","scope":2321,"src":"7843:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2303,"name":"uint256","nodeType":"ElementaryTypeName","src":"7843:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2307,"mutability":"mutable","name":"b","nameLocation":"7870:1:9","nodeType":"VariableDeclaration","scope":2321,"src":"7854:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2306,"nodeType":"UserDefinedTypeName","pathNode":{"id":2305,"name":"Unsigned","nameLocations":["7854:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"7854:8:9"},"referencedDeclaration":1877,"src":"7854:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"7842:30:9"},"returnParameters":{"id":2312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2321,"src":"7896:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2310,"nodeType":"UserDefinedTypeName","pathNode":{"id":2309,"name":"Unsigned","nameLocations":["7896:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"7896:8:9"},"referencedDeclaration":1877,"src":"7896:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"7895:17:9"},"scope":3491,"src":"7830:134:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2345,"nodeType":"Block","src":"8289:559:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2338,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"8809:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2339,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8811:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"8809:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2335,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"8794:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8796:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"8794:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8805:3:9","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1688,"src":"8794:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8794:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2341,"name":"FP_SCALING_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"8823:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8794:46:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2334,"name":"Unsigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"8785:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Unsigned_$1877_storage_ptr_$","typeString":"type(struct FixedPoint.Unsigned storage pointer)"}},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8785:56:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2333,"id":2344,"nodeType":"Return","src":"8778:63:9"}]},"documentation":{"id":2322,"nodeType":"StructuredDocumentation","src":"7970:223:9","text":" @notice Multiplies two `Unsigned`s, reverting on overflow.\n @dev This will \"floor\" the product.\n @param a a FixedPoint.\n @param b a FixedPoint.\n @return the product of `a` and `b`."},"id":2346,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"8207:3:9","nodeType":"FunctionDefinition","parameters":{"id":2329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2325,"mutability":"mutable","name":"a","nameLocation":"8227:1:9","nodeType":"VariableDeclaration","scope":2346,"src":"8211:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2324,"nodeType":"UserDefinedTypeName","pathNode":{"id":2323,"name":"Unsigned","nameLocations":["8211:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"8211:8:9"},"referencedDeclaration":1877,"src":"8211:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2328,"mutability":"mutable","name":"b","nameLocation":"8246:1:9","nodeType":"VariableDeclaration","scope":2346,"src":"8230:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2327,"nodeType":"UserDefinedTypeName","pathNode":{"id":2326,"name":"Unsigned","nameLocations":["8230:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"8230:8:9"},"referencedDeclaration":1877,"src":"8230:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"8210:38:9"},"returnParameters":{"id":2333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2346,"src":"8272:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2331,"nodeType":"UserDefinedTypeName","pathNode":{"id":2330,"name":"Unsigned","nameLocations":["8272:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"8272:8:9"},"referencedDeclaration":1877,"src":"8272:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"8271:17:9"},"scope":3491,"src":"8198:650:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2366,"nodeType":"Block","src":"9184:51:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2362,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"9225:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2359,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"9210:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2360,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9212:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"9210:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9221:3:9","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1688,"src":"9210:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9210:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2358,"name":"Unsigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"9201:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Unsigned_$1877_storage_ptr_$","typeString":"type(struct FixedPoint.Unsigned storage pointer)"}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9201:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2357,"id":2365,"nodeType":"Return","src":"9194:34:9"}]},"documentation":{"id":2347,"nodeType":"StructuredDocumentation","src":"8854:242:9","text":" @notice Multiplies an `Unsigned` and an unscaled uint256, reverting on overflow.\n @dev This will \"floor\" the product.\n @param a a FixedPoint.\n @param b a uint256.\n @return the product of `a` and `b`."},"id":2367,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"9110:3:9","nodeType":"FunctionDefinition","parameters":{"id":2353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2350,"mutability":"mutable","name":"a","nameLocation":"9130:1:9","nodeType":"VariableDeclaration","scope":2367,"src":"9114:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2349,"nodeType":"UserDefinedTypeName","pathNode":{"id":2348,"name":"Unsigned","nameLocations":["9114:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"9114:8:9"},"referencedDeclaration":1877,"src":"9114:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2352,"mutability":"mutable","name":"b","nameLocation":"9141:1:9","nodeType":"VariableDeclaration","scope":2367,"src":"9133:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2351,"name":"uint256","nodeType":"ElementaryTypeName","src":"9133:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9113:30:9"},"returnParameters":{"id":2357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2367,"src":"9167:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2355,"nodeType":"UserDefinedTypeName","pathNode":{"id":2354,"name":"Unsigned","nameLocations":["9167:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"9167:8:9"},"referencedDeclaration":1877,"src":"9167:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"9166:17:9"},"scope":3491,"src":"9101:134:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2419,"nodeType":"Block","src":"9546:304:9","statements":[{"assignments":[2381],"declarations":[{"constant":false,"id":2381,"mutability":"mutable","name":"mulRaw","nameLocation":"9564:6:9","nodeType":"VariableDeclaration","scope":2419,"src":"9556:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2380,"name":"uint256","nodeType":"ElementaryTypeName","src":"9556:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2388,"initialValue":{"arguments":[{"expression":{"id":2385,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"9588:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2386,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9590:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"9588:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2382,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"9573:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2383,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9575:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"9573:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9584:3:9","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1688,"src":"9573:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9573:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9556:43:9"},{"assignments":[2390],"declarations":[{"constant":false,"id":2390,"mutability":"mutable","name":"mulFloor","nameLocation":"9617:8:9","nodeType":"VariableDeclaration","scope":2419,"src":"9609:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2389,"name":"uint256","nodeType":"ElementaryTypeName","src":"9609:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2394,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2391,"name":"mulRaw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"9628:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2392,"name":"FP_SCALING_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"9637:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9628:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9609:45:9"},{"assignments":[2396],"declarations":[{"constant":false,"id":2396,"mutability":"mutable","name":"mod","nameLocation":"9672:3:9","nodeType":"VariableDeclaration","scope":2419,"src":"9664:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2395,"name":"uint256","nodeType":"ElementaryTypeName","src":"9664:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2401,"initialValue":{"arguments":[{"id":2399,"name":"FP_SCALING_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"9689:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2397,"name":"mulRaw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"9678:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9685:3:9","memberName":"mod","nodeType":"MemberAccess","referencedDeclaration":1718,"src":"9678:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9678:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9664:43:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2402,"name":"mod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"9721:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9728:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9721:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2417,"nodeType":"Block","src":"9794:50:9","statements":[{"expression":{"arguments":[{"id":2414,"name":"mulFloor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"9824:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2413,"name":"Unsigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"9815:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Unsigned_$1877_storage_ptr_$","typeString":"type(struct FixedPoint.Unsigned storage pointer)"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2379,"id":2416,"nodeType":"Return","src":"9808:25:9"}]},"id":2418,"nodeType":"IfStatement","src":"9717:127:9","trueBody":{"id":2412,"nodeType":"Block","src":"9731:57:9","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"31","id":2408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9774:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":2406,"name":"mulFloor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"9761:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9770:3:9","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1658,"src":"9761:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9761:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2405,"name":"Unsigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"9752:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Unsigned_$1877_storage_ptr_$","typeString":"type(struct FixedPoint.Unsigned storage pointer)"}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9752:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2379,"id":2411,"nodeType":"Return","src":"9745:32:9"}]}}]},"documentation":{"id":2368,"nodeType":"StructuredDocumentation","src":"9241:205:9","text":" @notice Multiplies two `Unsigned`s and \"ceil's\" the product, reverting on overflow.\n @param a a FixedPoint.\n @param b a FixedPoint.\n @return the product of `a` and `b`."},"id":2420,"implemented":true,"kind":"function","modifiers":[],"name":"mulCeil","nameLocation":"9460:7:9","nodeType":"FunctionDefinition","parameters":{"id":2375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2371,"mutability":"mutable","name":"a","nameLocation":"9484:1:9","nodeType":"VariableDeclaration","scope":2420,"src":"9468:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2370,"nodeType":"UserDefinedTypeName","pathNode":{"id":2369,"name":"Unsigned","nameLocations":["9468:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"9468:8:9"},"referencedDeclaration":1877,"src":"9468:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2374,"mutability":"mutable","name":"b","nameLocation":"9503:1:9","nodeType":"VariableDeclaration","scope":2420,"src":"9487:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2373,"nodeType":"UserDefinedTypeName","pathNode":{"id":2372,"name":"Unsigned","nameLocations":["9487:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"9487:8:9"},"referencedDeclaration":1877,"src":"9487:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"9467:38:9"},"returnParameters":{"id":2379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2420,"src":"9529:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2377,"nodeType":"UserDefinedTypeName","pathNode":{"id":2376,"name":"Unsigned","nameLocations":["9529:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"9529:8:9"},"referencedDeclaration":1877,"src":"9529:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"9528:17:9"},"scope":3491,"src":"9451:399:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2440,"nodeType":"Block","src":"10175:145:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2436,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"10310:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2433,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"10295:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10297:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"10295:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10306:3:9","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1688,"src":"10295:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10295:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2432,"name":"Unsigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"10286:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Unsigned_$1877_storage_ptr_$","typeString":"type(struct FixedPoint.Unsigned storage pointer)"}},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2431,"id":2439,"nodeType":"Return","src":"10279:34:9"}]},"documentation":{"id":2421,"nodeType":"StructuredDocumentation","src":"9856:227:9","text":" @notice Multiplies an `Unsigned` and an unscaled uint256 and \"ceil's\" the product, reverting on overflow.\n @param a a FixedPoint.\n @param b a FixedPoint.\n @return the product of `a` and `b`."},"id":2441,"implemented":true,"kind":"function","modifiers":[],"name":"mulCeil","nameLocation":"10097:7:9","nodeType":"FunctionDefinition","parameters":{"id":2427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2424,"mutability":"mutable","name":"a","nameLocation":"10121:1:9","nodeType":"VariableDeclaration","scope":2441,"src":"10105:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2423,"nodeType":"UserDefinedTypeName","pathNode":{"id":2422,"name":"Unsigned","nameLocations":["10105:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"10105:8:9"},"referencedDeclaration":1877,"src":"10105:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2426,"mutability":"mutable","name":"b","nameLocation":"10132:1:9","nodeType":"VariableDeclaration","scope":2441,"src":"10124:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2425,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10104:30:9"},"returnParameters":{"id":2431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2441,"src":"10158:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2429,"nodeType":"UserDefinedTypeName","pathNode":{"id":2428,"name":"Unsigned","nameLocations":["10158:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"10158:8:9"},"referencedDeclaration":1877,"src":"10158:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"10157:17:9"},"scope":3491,"src":"10088:232:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2466,"nodeType":"Block","src":"10706:543:9","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2461,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"11230:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2462,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11232:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"11230:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2458,"name":"FP_SCALING_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"11207:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2455,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"11192:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2456,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11194:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"11192:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11203:3:9","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1688,"src":"11192:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11192:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11226:3:9","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1703,"src":"11192:37:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11192:49:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2454,"name":"Unsigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"11183:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Unsigned_$1877_storage_ptr_$","typeString":"type(struct FixedPoint.Unsigned storage pointer)"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11183:59:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2453,"id":2465,"nodeType":"Return","src":"11176:66:9"}]},"documentation":{"id":2442,"nodeType":"StructuredDocumentation","src":"10326:284:9","text":" @notice Divides one `Unsigned` by an `Unsigned`, reverting on overflow or division by 0.\n @dev This will \"floor\" the quotient.\n @param a a FixedPoint numerator.\n @param b a FixedPoint denominator.\n @return the quotient of `a` divided by `b`."},"id":2467,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"10624:3:9","nodeType":"FunctionDefinition","parameters":{"id":2449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2445,"mutability":"mutable","name":"a","nameLocation":"10644:1:9","nodeType":"VariableDeclaration","scope":2467,"src":"10628:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2444,"nodeType":"UserDefinedTypeName","pathNode":{"id":2443,"name":"Unsigned","nameLocations":["10628:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"10628:8:9"},"referencedDeclaration":1877,"src":"10628:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2448,"mutability":"mutable","name":"b","nameLocation":"10663:1:9","nodeType":"VariableDeclaration","scope":2467,"src":"10647:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2447,"nodeType":"UserDefinedTypeName","pathNode":{"id":2446,"name":"Unsigned","nameLocations":["10647:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"10647:8:9"},"referencedDeclaration":1877,"src":"10647:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"10627:38:9"},"returnParameters":{"id":2453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2467,"src":"10689:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2451,"nodeType":"UserDefinedTypeName","pathNode":{"id":2450,"name":"Unsigned","nameLocations":["10689:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"10689:8:9"},"referencedDeclaration":1877,"src":"10689:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"10688:17:9"},"scope":3491,"src":"10615:634:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2487,"nodeType":"Block","src":"11630:51:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2483,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"11671:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2480,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"11656:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2481,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11658:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"11656:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11667:3:9","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1703,"src":"11656:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11656:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2479,"name":"Unsigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"11647:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Unsigned_$1877_storage_ptr_$","typeString":"type(struct FixedPoint.Unsigned storage pointer)"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11647:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2478,"id":2486,"nodeType":"Return","src":"11640:34:9"}]},"documentation":{"id":2468,"nodeType":"StructuredDocumentation","src":"11255:287:9","text":" @notice Divides one `Unsigned` by an unscaled uint256, reverting on overflow or division by 0.\n @dev This will \"floor\" the quotient.\n @param a a FixedPoint numerator.\n @param b a uint256 denominator.\n @return the quotient of `a` divided by `b`."},"id":2488,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"11556:3:9","nodeType":"FunctionDefinition","parameters":{"id":2474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2471,"mutability":"mutable","name":"a","nameLocation":"11576:1:9","nodeType":"VariableDeclaration","scope":2488,"src":"11560:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2470,"nodeType":"UserDefinedTypeName","pathNode":{"id":2469,"name":"Unsigned","nameLocations":["11560:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"11560:8:9"},"referencedDeclaration":1877,"src":"11560:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2473,"mutability":"mutable","name":"b","nameLocation":"11587:1:9","nodeType":"VariableDeclaration","scope":2488,"src":"11579:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2472,"name":"uint256","nodeType":"ElementaryTypeName","src":"11579:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11559:30:9"},"returnParameters":{"id":2478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2488,"src":"11613:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2476,"nodeType":"UserDefinedTypeName","pathNode":{"id":2475,"name":"Unsigned","nameLocations":["11613:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"11613:8:9"},"referencedDeclaration":1877,"src":"11613:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"11612:17:9"},"scope":3491,"src":"11547:134:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2507,"nodeType":"Block","src":"12062:51:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2502,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"12100:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2501,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"12083:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1877_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12083:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},{"id":2504,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"12104:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"},{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}],"id":2500,"name":"div","nodeType":"Identifier","overloadedDeclarations":[2467,2488,2508,3307,3328,3348],"referencedDeclaration":2467,"src":"12079:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Unsigned_$1877_memory_ptr_$_t_struct$_Unsigned_$1877_memory_ptr_$returns$_t_struct$_Unsigned_$1877_memory_ptr_$","typeString":"function (struct FixedPoint.Unsigned memory,struct FixedPoint.Unsigned memory) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12079:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2499,"id":2506,"nodeType":"Return","src":"12072:34:9"}]},"documentation":{"id":2489,"nodeType":"StructuredDocumentation","src":"11687:287:9","text":" @notice Divides one unscaled uint256 by an `Unsigned`, reverting on overflow or division by 0.\n @dev This will \"floor\" the quotient.\n @param a a uint256 numerator.\n @param b a FixedPoint denominator.\n @return the quotient of `a` divided by `b`."},"id":2508,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"11988:3:9","nodeType":"FunctionDefinition","parameters":{"id":2495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2491,"mutability":"mutable","name":"a","nameLocation":"12000:1:9","nodeType":"VariableDeclaration","scope":2508,"src":"11992:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2490,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2494,"mutability":"mutable","name":"b","nameLocation":"12019:1:9","nodeType":"VariableDeclaration","scope":2508,"src":"12003:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2493,"nodeType":"UserDefinedTypeName","pathNode":{"id":2492,"name":"Unsigned","nameLocations":["12003:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"12003:8:9"},"referencedDeclaration":1877,"src":"12003:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"11991:30:9"},"returnParameters":{"id":2499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2508,"src":"12045:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2497,"nodeType":"UserDefinedTypeName","pathNode":{"id":2496,"name":"Unsigned","nameLocations":["12045:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"12045:8:9"},"referencedDeclaration":1877,"src":"12045:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"12044:17:9"},"scope":3491,"src":"11979:134:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2562,"nodeType":"Block","src":"12485:303:9","statements":[{"assignments":[2522],"declarations":[{"constant":false,"id":2522,"mutability":"mutable","name":"aScaled","nameLocation":"12503:7:9","nodeType":"VariableDeclaration","scope":2562,"src":"12495:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2521,"name":"uint256","nodeType":"ElementaryTypeName","src":"12495:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2528,"initialValue":{"arguments":[{"id":2526,"name":"FP_SCALING_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"12528:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2523,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"12513:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2524,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12515:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"12513:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12524:3:9","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1688,"src":"12513:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12513:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12495:51:9"},{"assignments":[2530],"declarations":[{"constant":false,"id":2530,"mutability":"mutable","name":"divFloor","nameLocation":"12564:8:9","nodeType":"VariableDeclaration","scope":2562,"src":"12556:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2529,"name":"uint256","nodeType":"ElementaryTypeName","src":"12556:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2536,"initialValue":{"arguments":[{"expression":{"id":2533,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"12587:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2534,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12589:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"12587:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2531,"name":"aScaled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"12575:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12583:3:9","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1703,"src":"12575:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12575:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12556:42:9"},{"assignments":[2538],"declarations":[{"constant":false,"id":2538,"mutability":"mutable","name":"mod","nameLocation":"12616:3:9","nodeType":"VariableDeclaration","scope":2562,"src":"12608:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2537,"name":"uint256","nodeType":"ElementaryTypeName","src":"12608:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2544,"initialValue":{"arguments":[{"expression":{"id":2541,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"12634:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2542,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12636:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"12634:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2539,"name":"aScaled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"12622:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12630:3:9","memberName":"mod","nodeType":"MemberAccess","referencedDeclaration":1718,"src":"12622:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12622:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12608:37:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2545,"name":"mod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"12659:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12666:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12659:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2560,"nodeType":"Block","src":"12732:50:9","statements":[{"expression":{"arguments":[{"id":2557,"name":"divFloor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"12762:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2556,"name":"Unsigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"12753:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Unsigned_$1877_storage_ptr_$","typeString":"type(struct FixedPoint.Unsigned storage pointer)"}},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12753:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2520,"id":2559,"nodeType":"Return","src":"12746:25:9"}]},"id":2561,"nodeType":"IfStatement","src":"12655:127:9","trueBody":{"id":2555,"nodeType":"Block","src":"12669:57:9","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"31","id":2551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12712:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":2549,"name":"divFloor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"12699:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12708:3:9","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1658,"src":"12699:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12699:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2548,"name":"Unsigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"12690:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Unsigned_$1877_storage_ptr_$","typeString":"type(struct FixedPoint.Unsigned storage pointer)"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12690:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2520,"id":2554,"nodeType":"Return","src":"12683:32:9"}]}}]},"documentation":{"id":2509,"nodeType":"StructuredDocumentation","src":"12119:266:9","text":" @notice Divides one `Unsigned` by an `Unsigned` and \"ceil's\" the quotient, reverting on overflow or division by 0.\n @param a a FixedPoint numerator.\n @param b a FixedPoint denominator.\n @return the quotient of `a` divided by `b`."},"id":2563,"implemented":true,"kind":"function","modifiers":[],"name":"divCeil","nameLocation":"12399:7:9","nodeType":"FunctionDefinition","parameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2512,"mutability":"mutable","name":"a","nameLocation":"12423:1:9","nodeType":"VariableDeclaration","scope":2563,"src":"12407:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2511,"nodeType":"UserDefinedTypeName","pathNode":{"id":2510,"name":"Unsigned","nameLocations":["12407:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"12407:8:9"},"referencedDeclaration":1877,"src":"12407:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2515,"mutability":"mutable","name":"b","nameLocation":"12442:1:9","nodeType":"VariableDeclaration","scope":2563,"src":"12426:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2514,"nodeType":"UserDefinedTypeName","pathNode":{"id":2513,"name":"Unsigned","nameLocations":["12426:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"12426:8:9"},"referencedDeclaration":1877,"src":"12426:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"12406:38:9"},"returnParameters":{"id":2520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2563,"src":"12468:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2518,"nodeType":"UserDefinedTypeName","pathNode":{"id":2517,"name":"Unsigned","nameLocations":["12468:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"12468:8:9"},"referencedDeclaration":1877,"src":"12468:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"12467:17:9"},"scope":3491,"src":"12390:398:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2582,"nodeType":"Block","src":"13155:363:9","statements":[{"expression":{"arguments":[{"id":2576,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"13488:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},{"arguments":[{"id":2578,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"13508:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2577,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"13491:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1877_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13491:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"},{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}],"id":2575,"name":"divCeil","nodeType":"Identifier","overloadedDeclarations":[2563,2583],"referencedDeclaration":2563,"src":"13480:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Unsigned_$1877_memory_ptr_$_t_struct$_Unsigned_$1877_memory_ptr_$returns$_t_struct$_Unsigned_$1877_memory_ptr_$","typeString":"function (struct FixedPoint.Unsigned memory,struct FixedPoint.Unsigned memory) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13480:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2574,"id":2581,"nodeType":"Return","src":"13473:38:9"}]},"documentation":{"id":2564,"nodeType":"StructuredDocumentation","src":"12794:269:9","text":" @notice Divides one `Unsigned` by an unscaled uint256 and \"ceil's\" the quotient, reverting on overflow or division by 0.\n @param a a FixedPoint numerator.\n @param b a uint256 denominator.\n @return the quotient of `a` divided by `b`."},"id":2583,"implemented":true,"kind":"function","modifiers":[],"name":"divCeil","nameLocation":"13077:7:9","nodeType":"FunctionDefinition","parameters":{"id":2570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2567,"mutability":"mutable","name":"a","nameLocation":"13101:1:9","nodeType":"VariableDeclaration","scope":2583,"src":"13085:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2566,"nodeType":"UserDefinedTypeName","pathNode":{"id":2565,"name":"Unsigned","nameLocations":["13085:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"13085:8:9"},"referencedDeclaration":1877,"src":"13085:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2569,"mutability":"mutable","name":"b","nameLocation":"13112:1:9","nodeType":"VariableDeclaration","scope":2583,"src":"13104:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2568,"name":"uint256","nodeType":"ElementaryTypeName","src":"13104:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13084:30:9"},"returnParameters":{"id":2574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2583,"src":"13138:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2572,"nodeType":"UserDefinedTypeName","pathNode":{"id":2571,"name":"Unsigned","nameLocations":["13138:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"13138:8:9"},"referencedDeclaration":1877,"src":"13138:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"13137:17:9"},"scope":3491,"src":"13068:450:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2624,"nodeType":"Block","src":"13922:143:9","statements":[{"expression":{"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2595,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"13932:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":2597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13958:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2596,"name":"fromUnscaledUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"13941:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$1877_memory_ptr_$","typeString":"function (uint256) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13941:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"src":"13932:28:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2600,"nodeType":"ExpressionStatement","src":"13932:28:9"},{"body":{"id":2622,"nodeType":"Block","src":"14011:48:9","statements":[{"expression":{"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2615,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"14025:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2617,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"14038:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},{"id":2618,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"14046:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"},{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}],"id":2616,"name":"mul","nodeType":"Identifier","overloadedDeclarations":[2346,2367,3161,3182],"referencedDeclaration":2346,"src":"14034:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Unsigned_$1877_memory_ptr_$_t_struct$_Unsigned_$1877_memory_ptr_$returns$_t_struct$_Unsigned_$1877_memory_ptr_$","typeString":"function (struct FixedPoint.Unsigned memory,struct FixedPoint.Unsigned memory) pure returns (struct FixedPoint.Unsigned memory)"}},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14034:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"src":"14025:23:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2621,"nodeType":"ExpressionStatement","src":"14025:23:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2605,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"13990:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2606,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"13994:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13990:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2623,"initializationExpression":{"assignments":[2602],"declarations":[{"constant":false,"id":2602,"mutability":"mutable","name":"i","nameLocation":"13983:1:9","nodeType":"VariableDeclaration","scope":2623,"src":"13975:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2601,"name":"uint256","nodeType":"ElementaryTypeName","src":"13975:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2604,"initialValue":{"hexValue":"30","id":2603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13987:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13975:13:9"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2608,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"13997:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":2611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14007:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":2609,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"14001:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14003:3:9","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1658,"src":"14001:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14001:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13997:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2614,"nodeType":"ExpressionStatement","src":"13997:12:9"},"nodeType":"ForStatement","src":"13970:89:9"}]},"documentation":{"id":2584,"nodeType":"StructuredDocumentation","src":"13524:303:9","text":" @notice Raises an `Unsigned` to the power of an unscaled uint256, reverting on overflow. E.g., `b=2` squares `a`.\n @dev This will \"floor\" the result.\n @param a a FixedPoint numerator.\n @param b a uint256 denominator.\n @return output is `a` to the power of `b`."},"id":2625,"implemented":true,"kind":"function","modifiers":[],"name":"pow","nameLocation":"13841:3:9","nodeType":"FunctionDefinition","parameters":{"id":2590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2587,"mutability":"mutable","name":"a","nameLocation":"13861:1:9","nodeType":"VariableDeclaration","scope":2625,"src":"13845:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2586,"nodeType":"UserDefinedTypeName","pathNode":{"id":2585,"name":"Unsigned","nameLocations":["13845:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"13845:8:9"},"referencedDeclaration":1877,"src":"13845:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":2589,"mutability":"mutable","name":"b","nameLocation":"13872:1:9","nodeType":"VariableDeclaration","scope":2625,"src":"13864:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2588,"name":"uint256","nodeType":"ElementaryTypeName","src":"13864:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13844:30:9"},"returnParameters":{"id":2594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"output","nameLocation":"13914:6:9","nodeType":"VariableDeclaration","scope":2625,"src":"13898:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2592,"nodeType":"UserDefinedTypeName","pathNode":{"id":2591,"name":"Unsigned","nameLocations":["13898:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"13898:8:9"},"referencedDeclaration":1877,"src":"13898:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"13897:24:9"},"scope":3491,"src":"13832:233:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2630,"mutability":"constant","name":"SFP_SCALING_FACTOR","nameLocation":"14457:18:9","nodeType":"VariableDeclaration","scope":3491,"src":"14433:51:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2626,"name":"int256","nodeType":"ElementaryTypeName","src":"14433:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":2629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14478:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":2628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14482:2:9","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"14478:6:9","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"visibility":"private"},{"canonicalName":"FixedPoint.Signed","id":2633,"members":[{"constant":false,"id":2632,"mutability":"mutable","name":"rawValue","nameLocation":"14522:8:9","nodeType":"VariableDeclaration","scope":2633,"src":"14515:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2631,"name":"int256","nodeType":"ElementaryTypeName","src":"14515:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Signed","nameLocation":"14498:6:9","nodeType":"StructDefinition","scope":3491,"src":"14491:46:9","visibility":"public"},{"body":{"id":2658,"nodeType":"Block","src":"14620:114:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2643,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"14638:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2644,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14640:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"14638:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14652:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14638:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e656761746976652076616c75652070726f7669646564","id":2647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14655:25:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_67d4d663a223777b2db72220a0c432830eddb0393ba77b536f13c5166cce6d79","typeString":"literal_string \"Negative value provided\""},"value":"Negative value provided"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67d4d663a223777b2db72220a0c432830eddb0393ba77b536f13c5166cce6d79","typeString":"literal_string \"Negative value provided\""}],"id":2642,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14630:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14630:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2649,"nodeType":"ExpressionStatement","src":"14630:51:9"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":2653,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"14715:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2654,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14717:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"14715:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14707:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2651,"name":"uint256","nodeType":"ElementaryTypeName","src":"14707:7:9","typeDescriptions":{}}},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14707:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2650,"name":"Unsigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"14698:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Unsigned_$1877_storage_ptr_$","typeString":"type(struct FixedPoint.Unsigned storage pointer)"}},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14698:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"functionReturnParameters":2641,"id":2657,"nodeType":"Return","src":"14691:36:9"}]},"id":2659,"implemented":true,"kind":"function","modifiers":[],"name":"fromSigned","nameLocation":"14552:10:9","nodeType":"FunctionDefinition","parameters":{"id":2637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2636,"mutability":"mutable","name":"a","nameLocation":"14577:1:9","nodeType":"VariableDeclaration","scope":2659,"src":"14563:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2635,"nodeType":"UserDefinedTypeName","pathNode":{"id":2634,"name":"Signed","nameLocations":["14563:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"14563:6:9"},"referencedDeclaration":2633,"src":"14563:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"14562:17:9"},"returnParameters":{"id":2641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2659,"src":"14603:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2639,"nodeType":"UserDefinedTypeName","pathNode":{"id":2638,"name":"Unsigned","nameLocations":["14603:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"14603:8:9"},"referencedDeclaration":1877,"src":"14603:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"14602:17:9"},"scope":3491,"src":"14543:191:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2691,"nodeType":"Block","src":"14819:130:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2669,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"14837:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14839:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"14837:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":2675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14864:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2674,"name":"int256","nodeType":"ElementaryTypeName","src":"14864:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2673,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14859:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14859:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14872:3:9","memberName":"max","nodeType":"MemberAccess","src":"14859:16:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14851:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2671,"name":"uint256","nodeType":"ElementaryTypeName","src":"14851:7:9","typeDescriptions":{}}},"id":2678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14851:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14837:39:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e7369676e656420746f6f206c61726765","id":2680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14878:20:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_691496971f117be8e4dbef07509d13e2786a6857df6bd4e7d50c0d0707e224ae","typeString":"literal_string \"Unsigned too large\""},"value":"Unsigned too large"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_691496971f117be8e4dbef07509d13e2786a6857df6bd4e7d50c0d0707e224ae","typeString":"literal_string \"Unsigned too large\""}],"id":2668,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14829:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14829:70:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2682,"nodeType":"ExpressionStatement","src":"14829:70:9"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":2686,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"14930:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":2687,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14932:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"14930:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14923:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2684,"name":"int256","nodeType":"ElementaryTypeName","src":"14923:6:9","typeDescriptions":{}}},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14923:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2683,"name":"Signed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"14916:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Signed_$2633_storage_ptr_$","typeString":"type(struct FixedPoint.Signed storage pointer)"}},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14916:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":2667,"id":2690,"nodeType":"Return","src":"14909:33:9"}]},"id":2692,"implemented":true,"kind":"function","modifiers":[],"name":"fromUnsigned","nameLocation":"14749:12:9","nodeType":"FunctionDefinition","parameters":{"id":2663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2662,"mutability":"mutable","name":"a","nameLocation":"14778:1:9","nodeType":"VariableDeclaration","scope":2692,"src":"14762:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":2661,"nodeType":"UserDefinedTypeName","pathNode":{"id":2660,"name":"Unsigned","nameLocations":["14762:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"14762:8:9"},"referencedDeclaration":1877,"src":"14762:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"14761:19:9"},"returnParameters":{"id":2667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2692,"src":"14804:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2665,"nodeType":"UserDefinedTypeName","pathNode":{"id":2664,"name":"Signed","nameLocations":["14804:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"14804:6:9"},"referencedDeclaration":2633,"src":"14804:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"14803:15:9"},"scope":3491,"src":"14740:209:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2708,"nodeType":"Block","src":"15260:57:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2704,"name":"SFP_SCALING_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"15290:18:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2702,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"15284:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15286:3:9","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1812,"src":"15284:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$attached_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15284:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2701,"name":"Signed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"15277:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Signed_$2633_storage_ptr_$","typeString":"type(struct FixedPoint.Signed storage pointer)"}},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15277:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":2700,"id":2707,"nodeType":"Return","src":"15270:40:9"}]},"documentation":{"id":2693,"nodeType":"StructuredDocumentation","src":"14955:227:9","text":" @notice Constructs a `Signed` from an unscaled int, e.g., `b=5` gets stored internally as `5*(10**18)`.\n @param a int to convert into a FixedPoint.Signed.\n @return the converted FixedPoint.Signed."},"id":2709,"implemented":true,"kind":"function","modifiers":[],"name":"fromUnscaledInt","nameLocation":"15196:15:9","nodeType":"FunctionDefinition","parameters":{"id":2696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2695,"mutability":"mutable","name":"a","nameLocation":"15219:1:9","nodeType":"VariableDeclaration","scope":2709,"src":"15212:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2694,"name":"int256","nodeType":"ElementaryTypeName","src":"15212:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"15211:10:9"},"returnParameters":{"id":2700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2709,"src":"15245:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2698,"nodeType":"UserDefinedTypeName","pathNode":{"id":2697,"name":"Signed","nameLocations":["15245:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"15245:6:9"},"referencedDeclaration":2633,"src":"15245:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"15244:15:9"},"scope":3491,"src":"15187:130:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2728,"nodeType":"Block","src":"15559:65:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2720,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"15576:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2721,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15578:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"15576:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2723,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"15606:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2722,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"15590:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2633_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15590:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15609:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"15590:27:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"15576:41:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2719,"id":2727,"nodeType":"Return","src":"15569:48:9"}]},"documentation":{"id":2710,"nodeType":"StructuredDocumentation","src":"15323:158:9","text":" @notice Whether `a` is equal to `b`.\n @param a a FixedPoint.Signed.\n @param b a int256.\n @return True if equal, or False."},"id":2729,"implemented":true,"kind":"function","modifiers":[],"name":"isEqual","nameLocation":"15495:7:9","nodeType":"FunctionDefinition","parameters":{"id":2716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2713,"mutability":"mutable","name":"a","nameLocation":"15517:1:9","nodeType":"VariableDeclaration","scope":2729,"src":"15503:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2712,"nodeType":"UserDefinedTypeName","pathNode":{"id":2711,"name":"Signed","nameLocations":["15503:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"15503:6:9"},"referencedDeclaration":2633,"src":"15503:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":2715,"mutability":"mutable","name":"b","nameLocation":"15527:1:9","nodeType":"VariableDeclaration","scope":2729,"src":"15520:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2714,"name":"int256","nodeType":"ElementaryTypeName","src":"15520:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"15502:27:9"},"returnParameters":{"id":2719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2729,"src":"15553:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2717,"name":"bool","nodeType":"ElementaryTypeName","src":"15553:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15552:6:9"},"scope":3491,"src":"15486:138:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2747,"nodeType":"Block","src":"15884:48:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2741,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"15901:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2742,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15903:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"15901:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2743,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"15915:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2744,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15917:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"15915:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"15901:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2740,"id":2746,"nodeType":"Return","src":"15894:31:9"}]},"documentation":{"id":2730,"nodeType":"StructuredDocumentation","src":"15630:169:9","text":" @notice Whether `a` is equal to `b`.\n @param a a FixedPoint.Signed.\n @param b a FixedPoint.Signed.\n @return True if equal, or False."},"id":2748,"implemented":true,"kind":"function","modifiers":[],"name":"isEqual","nameLocation":"15813:7:9","nodeType":"FunctionDefinition","parameters":{"id":2737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2733,"mutability":"mutable","name":"a","nameLocation":"15835:1:9","nodeType":"VariableDeclaration","scope":2748,"src":"15821:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2732,"nodeType":"UserDefinedTypeName","pathNode":{"id":2731,"name":"Signed","nameLocations":["15821:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"15821:6:9"},"referencedDeclaration":2633,"src":"15821:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":2736,"mutability":"mutable","name":"b","nameLocation":"15852:1:9","nodeType":"VariableDeclaration","scope":2748,"src":"15838:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2735,"nodeType":"UserDefinedTypeName","pathNode":{"id":2734,"name":"Signed","nameLocations":["15838:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"15838:6:9"},"referencedDeclaration":2633,"src":"15838:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"15820:34:9"},"returnParameters":{"id":2740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2748,"src":"15878:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2738,"name":"bool","nodeType":"ElementaryTypeName","src":"15878:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15877:6:9"},"scope":3491,"src":"15804:128:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2766,"nodeType":"Block","src":"16204:47:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2760,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"16221:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2761,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16223:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"16221:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":2762,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"16234:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2763,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16236:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"16234:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16221:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2759,"id":2765,"nodeType":"Return","src":"16214:30:9"}]},"documentation":{"id":2749,"nodeType":"StructuredDocumentation","src":"15938:175:9","text":" @notice Whether `a` is greater than `b`.\n @param a a FixedPoint.Signed.\n @param b a FixedPoint.Signed.\n @return True if `a > b`, or False."},"id":2767,"implemented":true,"kind":"function","modifiers":[],"name":"isGreaterThan","nameLocation":"16127:13:9","nodeType":"FunctionDefinition","parameters":{"id":2756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2752,"mutability":"mutable","name":"a","nameLocation":"16155:1:9","nodeType":"VariableDeclaration","scope":2767,"src":"16141:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2751,"nodeType":"UserDefinedTypeName","pathNode":{"id":2750,"name":"Signed","nameLocations":["16141:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"16141:6:9"},"referencedDeclaration":2633,"src":"16141:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":2755,"mutability":"mutable","name":"b","nameLocation":"16172:1:9","nodeType":"VariableDeclaration","scope":2767,"src":"16158:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2754,"nodeType":"UserDefinedTypeName","pathNode":{"id":2753,"name":"Signed","nameLocations":["16158:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"16158:6:9"},"referencedDeclaration":2633,"src":"16158:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"16140:34:9"},"returnParameters":{"id":2759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2767,"src":"16198:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2757,"name":"bool","nodeType":"ElementaryTypeName","src":"16198:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16197:6:9"},"scope":3491,"src":"16118:133:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2786,"nodeType":"Block","src":"16506:64:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2778,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"16523:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2779,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16525:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"16523:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2781,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"16552:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2780,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"16536:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2633_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16536:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2783,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16555:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"16536:27:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16523:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2777,"id":2785,"nodeType":"Return","src":"16516:47:9"}]},"documentation":{"id":2768,"nodeType":"StructuredDocumentation","src":"16257:165:9","text":" @notice Whether `a` is greater than `b`.\n @param a a FixedPoint.Signed.\n @param b an int256.\n @return True if `a > b`, or False."},"id":2787,"implemented":true,"kind":"function","modifiers":[],"name":"isGreaterThan","nameLocation":"16436:13:9","nodeType":"FunctionDefinition","parameters":{"id":2774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2771,"mutability":"mutable","name":"a","nameLocation":"16464:1:9","nodeType":"VariableDeclaration","scope":2787,"src":"16450:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2770,"nodeType":"UserDefinedTypeName","pathNode":{"id":2769,"name":"Signed","nameLocations":["16450:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"16450:6:9"},"referencedDeclaration":2633,"src":"16450:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":2773,"mutability":"mutable","name":"b","nameLocation":"16474:1:9","nodeType":"VariableDeclaration","scope":2787,"src":"16467:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2772,"name":"int256","nodeType":"ElementaryTypeName","src":"16467:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"16449:27:9"},"returnParameters":{"id":2777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2787,"src":"16500:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2775,"name":"bool","nodeType":"ElementaryTypeName","src":"16500:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16499:6:9"},"scope":3491,"src":"16427:143:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2806,"nodeType":"Block","src":"16825:64:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2799,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2790,"src":"16858:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2798,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"16842:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2633_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16842:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2801,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16861:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"16842:27:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":2802,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"16872:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2803,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16874:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"16872:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"16842:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2797,"id":2805,"nodeType":"Return","src":"16835:47:9"}]},"documentation":{"id":2788,"nodeType":"StructuredDocumentation","src":"16576:165:9","text":" @notice Whether `a` is greater than `b`.\n @param a an int256.\n @param b a FixedPoint.Signed.\n @return True if `a > b`, or False."},"id":2807,"implemented":true,"kind":"function","modifiers":[],"name":"isGreaterThan","nameLocation":"16755:13:9","nodeType":"FunctionDefinition","parameters":{"id":2794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2790,"mutability":"mutable","name":"a","nameLocation":"16776:1:9","nodeType":"VariableDeclaration","scope":2807,"src":"16769:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2789,"name":"int256","nodeType":"ElementaryTypeName","src":"16769:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2793,"mutability":"mutable","name":"b","nameLocation":"16793:1:9","nodeType":"VariableDeclaration","scope":2807,"src":"16779:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2792,"nodeType":"UserDefinedTypeName","pathNode":{"id":2791,"name":"Signed","nameLocations":["16779:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"16779:6:9"},"referencedDeclaration":2633,"src":"16779:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"16768:27:9"},"returnParameters":{"id":2797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2807,"src":"16819:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2795,"name":"bool","nodeType":"ElementaryTypeName","src":"16819:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16818:6:9"},"scope":3491,"src":"16746:143:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2825,"nodeType":"Block","src":"17181:48:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2819,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"17198:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2820,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17200:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"17198:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2821,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"17212:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2822,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17214:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"17212:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17198:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2818,"id":2824,"nodeType":"Return","src":"17191:31:9"}]},"documentation":{"id":2808,"nodeType":"StructuredDocumentation","src":"16895:188:9","text":" @notice Whether `a` is greater than or equal to `b`.\n @param a a FixedPoint.Signed.\n @param b a FixedPoint.Signed.\n @return True if `a >= b`, or False."},"id":2826,"implemented":true,"kind":"function","modifiers":[],"name":"isGreaterThanOrEqual","nameLocation":"17097:20:9","nodeType":"FunctionDefinition","parameters":{"id":2815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2811,"mutability":"mutable","name":"a","nameLocation":"17132:1:9","nodeType":"VariableDeclaration","scope":2826,"src":"17118:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2810,"nodeType":"UserDefinedTypeName","pathNode":{"id":2809,"name":"Signed","nameLocations":["17118:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"17118:6:9"},"referencedDeclaration":2633,"src":"17118:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":2814,"mutability":"mutable","name":"b","nameLocation":"17149:1:9","nodeType":"VariableDeclaration","scope":2826,"src":"17135:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2813,"nodeType":"UserDefinedTypeName","pathNode":{"id":2812,"name":"Signed","nameLocations":["17135:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"17135:6:9"},"referencedDeclaration":2633,"src":"17135:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"17117:34:9"},"returnParameters":{"id":2818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2826,"src":"17175:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2816,"name":"bool","nodeType":"ElementaryTypeName","src":"17175:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17174:6:9"},"scope":3491,"src":"17088:141:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2845,"nodeType":"Block","src":"17504:65:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2837,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"17521:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2838,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17523:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"17521:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"arguments":[{"id":2840,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"17551:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2839,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"17535:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2633_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17535:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2842,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17554:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"17535:27:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17521:41:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2836,"id":2844,"nodeType":"Return","src":"17514:48:9"}]},"documentation":{"id":2827,"nodeType":"StructuredDocumentation","src":"17235:178:9","text":" @notice Whether `a` is greater than or equal to `b`.\n @param a a FixedPoint.Signed.\n @param b an int256.\n @return True if `a >= b`, or False."},"id":2846,"implemented":true,"kind":"function","modifiers":[],"name":"isGreaterThanOrEqual","nameLocation":"17427:20:9","nodeType":"FunctionDefinition","parameters":{"id":2833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2830,"mutability":"mutable","name":"a","nameLocation":"17462:1:9","nodeType":"VariableDeclaration","scope":2846,"src":"17448:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2829,"nodeType":"UserDefinedTypeName","pathNode":{"id":2828,"name":"Signed","nameLocations":["17448:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"17448:6:9"},"referencedDeclaration":2633,"src":"17448:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":2832,"mutability":"mutable","name":"b","nameLocation":"17472:1:9","nodeType":"VariableDeclaration","scope":2846,"src":"17465:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2831,"name":"int256","nodeType":"ElementaryTypeName","src":"17465:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17447:27:9"},"returnParameters":{"id":2836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2846,"src":"17498:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2834,"name":"bool","nodeType":"ElementaryTypeName","src":"17498:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17497:6:9"},"scope":3491,"src":"17418:151:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2865,"nodeType":"Block","src":"17844:65:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2858,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"17877:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2857,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"17861:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2633_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17861:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2860,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17880:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"17861:27:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2861,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"17892:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2862,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17894:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"17892:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17861:41:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2856,"id":2864,"nodeType":"Return","src":"17854:48:9"}]},"documentation":{"id":2847,"nodeType":"StructuredDocumentation","src":"17575:178:9","text":" @notice Whether `a` is greater than or equal to `b`.\n @param a an int256.\n @param b a FixedPoint.Signed.\n @return True if `a >= b`, or False."},"id":2866,"implemented":true,"kind":"function","modifiers":[],"name":"isGreaterThanOrEqual","nameLocation":"17767:20:9","nodeType":"FunctionDefinition","parameters":{"id":2853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2849,"mutability":"mutable","name":"a","nameLocation":"17795:1:9","nodeType":"VariableDeclaration","scope":2866,"src":"17788:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2848,"name":"int256","nodeType":"ElementaryTypeName","src":"17788:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2852,"mutability":"mutable","name":"b","nameLocation":"17812:1:9","nodeType":"VariableDeclaration","scope":2866,"src":"17798:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2851,"nodeType":"UserDefinedTypeName","pathNode":{"id":2850,"name":"Signed","nameLocations":["17798:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"17798:6:9"},"referencedDeclaration":2633,"src":"17798:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"17787:27:9"},"returnParameters":{"id":2856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2866,"src":"17838:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2854,"name":"bool","nodeType":"ElementaryTypeName","src":"17838:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17837:6:9"},"scope":3491,"src":"17758:151:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2884,"nodeType":"Block","src":"18175:47:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2878,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"18192:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2879,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18194:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"18192:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2880,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"18205:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2881,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18207:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"18205:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18192:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2877,"id":2883,"nodeType":"Return","src":"18185:30:9"}]},"documentation":{"id":2867,"nodeType":"StructuredDocumentation","src":"17915:172:9","text":" @notice Whether `a` is less than `b`.\n @param a a FixedPoint.Signed.\n @param b a FixedPoint.Signed.\n @return True if `a < b`, or False."},"id":2885,"implemented":true,"kind":"function","modifiers":[],"name":"isLessThan","nameLocation":"18101:10:9","nodeType":"FunctionDefinition","parameters":{"id":2874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2870,"mutability":"mutable","name":"a","nameLocation":"18126:1:9","nodeType":"VariableDeclaration","scope":2885,"src":"18112:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2869,"nodeType":"UserDefinedTypeName","pathNode":{"id":2868,"name":"Signed","nameLocations":["18112:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"18112:6:9"},"referencedDeclaration":2633,"src":"18112:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":2873,"mutability":"mutable","name":"b","nameLocation":"18143:1:9","nodeType":"VariableDeclaration","scope":2885,"src":"18129:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2872,"nodeType":"UserDefinedTypeName","pathNode":{"id":2871,"name":"Signed","nameLocations":["18129:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"18129:6:9"},"referencedDeclaration":2633,"src":"18129:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"18111:34:9"},"returnParameters":{"id":2877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2885,"src":"18169:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2875,"name":"bool","nodeType":"ElementaryTypeName","src":"18169:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18168:6:9"},"scope":3491,"src":"18092:130:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2904,"nodeType":"Block","src":"18471:64:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2896,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"18488:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18490:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"18488:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":2899,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"18517:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2898,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"18501:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2633_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18501:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2901,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18520:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"18501:27:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18488:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2895,"id":2903,"nodeType":"Return","src":"18481:47:9"}]},"documentation":{"id":2886,"nodeType":"StructuredDocumentation","src":"18228:162:9","text":" @notice Whether `a` is less than `b`.\n @param a a FixedPoint.Signed.\n @param b an int256.\n @return True if `a < b`, or False."},"id":2905,"implemented":true,"kind":"function","modifiers":[],"name":"isLessThan","nameLocation":"18404:10:9","nodeType":"FunctionDefinition","parameters":{"id":2892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2889,"mutability":"mutable","name":"a","nameLocation":"18429:1:9","nodeType":"VariableDeclaration","scope":2905,"src":"18415:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2888,"nodeType":"UserDefinedTypeName","pathNode":{"id":2887,"name":"Signed","nameLocations":["18415:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"18415:6:9"},"referencedDeclaration":2633,"src":"18415:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":2891,"mutability":"mutable","name":"b","nameLocation":"18439:1:9","nodeType":"VariableDeclaration","scope":2905,"src":"18432:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2890,"name":"int256","nodeType":"ElementaryTypeName","src":"18432:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18414:27:9"},"returnParameters":{"id":2895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2905,"src":"18465:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2893,"name":"bool","nodeType":"ElementaryTypeName","src":"18465:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18464:6:9"},"scope":3491,"src":"18395:140:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2924,"nodeType":"Block","src":"18784:64:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2917,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"18817:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2916,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"18801:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2633_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18801:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2919,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18820:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"18801:27:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2920,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"18831:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2921,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18833:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"18831:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18801:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2915,"id":2923,"nodeType":"Return","src":"18794:47:9"}]},"documentation":{"id":2906,"nodeType":"StructuredDocumentation","src":"18541:162:9","text":" @notice Whether `a` is less than `b`.\n @param a an int256.\n @param b a FixedPoint.Signed.\n @return True if `a < b`, or False."},"id":2925,"implemented":true,"kind":"function","modifiers":[],"name":"isLessThan","nameLocation":"18717:10:9","nodeType":"FunctionDefinition","parameters":{"id":2912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2908,"mutability":"mutable","name":"a","nameLocation":"18735:1:9","nodeType":"VariableDeclaration","scope":2925,"src":"18728:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2907,"name":"int256","nodeType":"ElementaryTypeName","src":"18728:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2911,"mutability":"mutable","name":"b","nameLocation":"18752:1:9","nodeType":"VariableDeclaration","scope":2925,"src":"18738:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2910,"nodeType":"UserDefinedTypeName","pathNode":{"id":2909,"name":"Signed","nameLocations":["18738:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"18738:6:9"},"referencedDeclaration":2633,"src":"18738:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"18727:27:9"},"returnParameters":{"id":2915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2925,"src":"18778:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2913,"name":"bool","nodeType":"ElementaryTypeName","src":"18778:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18777:6:9"},"scope":3491,"src":"18708:140:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2943,"nodeType":"Block","src":"19134:48:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2937,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"19151:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2938,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19153:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"19151:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":2939,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"19165:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19167:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"19165:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19151:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2936,"id":2942,"nodeType":"Return","src":"19144:31:9"}]},"documentation":{"id":2926,"nodeType":"StructuredDocumentation","src":"18854:185:9","text":" @notice Whether `a` is less than or equal to `b`.\n @param a a FixedPoint.Signed.\n @param b a FixedPoint.Signed.\n @return True if `a <= b`, or False."},"id":2944,"implemented":true,"kind":"function","modifiers":[],"name":"isLessThanOrEqual","nameLocation":"19053:17:9","nodeType":"FunctionDefinition","parameters":{"id":2933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2929,"mutability":"mutable","name":"a","nameLocation":"19085:1:9","nodeType":"VariableDeclaration","scope":2944,"src":"19071:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2928,"nodeType":"UserDefinedTypeName","pathNode":{"id":2927,"name":"Signed","nameLocations":["19071:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"19071:6:9"},"referencedDeclaration":2633,"src":"19071:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":2932,"mutability":"mutable","name":"b","nameLocation":"19102:1:9","nodeType":"VariableDeclaration","scope":2944,"src":"19088:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2931,"nodeType":"UserDefinedTypeName","pathNode":{"id":2930,"name":"Signed","nameLocations":["19088:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"19088:6:9"},"referencedDeclaration":2633,"src":"19088:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"19070:34:9"},"returnParameters":{"id":2936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2944,"src":"19128:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2934,"name":"bool","nodeType":"ElementaryTypeName","src":"19128:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19127:6:9"},"scope":3491,"src":"19044:138:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2963,"nodeType":"Block","src":"19451:65:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2955,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"19468:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2956,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19470:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"19468:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2958,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"19498:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2957,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"19482:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2633_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19482:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2960,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19501:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"19482:27:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19468:41:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2954,"id":2962,"nodeType":"Return","src":"19461:48:9"}]},"documentation":{"id":2945,"nodeType":"StructuredDocumentation","src":"19188:175:9","text":" @notice Whether `a` is less than or equal to `b`.\n @param a a FixedPoint.Signed.\n @param b an int256.\n @return True if `a <= b`, or False."},"id":2964,"implemented":true,"kind":"function","modifiers":[],"name":"isLessThanOrEqual","nameLocation":"19377:17:9","nodeType":"FunctionDefinition","parameters":{"id":2951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2948,"mutability":"mutable","name":"a","nameLocation":"19409:1:9","nodeType":"VariableDeclaration","scope":2964,"src":"19395:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2947,"nodeType":"UserDefinedTypeName","pathNode":{"id":2946,"name":"Signed","nameLocations":["19395:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"19395:6:9"},"referencedDeclaration":2633,"src":"19395:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":2950,"mutability":"mutable","name":"b","nameLocation":"19419:1:9","nodeType":"VariableDeclaration","scope":2964,"src":"19412:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2949,"name":"int256","nodeType":"ElementaryTypeName","src":"19412:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19394:27:9"},"returnParameters":{"id":2954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2964,"src":"19445:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2952,"name":"bool","nodeType":"ElementaryTypeName","src":"19445:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19444:6:9"},"scope":3491,"src":"19368:148:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2983,"nodeType":"Block","src":"19785:65:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2976,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"19818:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2975,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"19802:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2633_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19802:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2978,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19821:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"19802:27:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":2979,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"19833:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2980,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19835:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"19833:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19802:41:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2974,"id":2982,"nodeType":"Return","src":"19795:48:9"}]},"documentation":{"id":2965,"nodeType":"StructuredDocumentation","src":"19522:175:9","text":" @notice Whether `a` is less than or equal to `b`.\n @param a an int256.\n @param b a FixedPoint.Signed.\n @return True if `a <= b`, or False."},"id":2984,"implemented":true,"kind":"function","modifiers":[],"name":"isLessThanOrEqual","nameLocation":"19711:17:9","nodeType":"FunctionDefinition","parameters":{"id":2971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2967,"mutability":"mutable","name":"a","nameLocation":"19736:1:9","nodeType":"VariableDeclaration","scope":2984,"src":"19729:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2966,"name":"int256","nodeType":"ElementaryTypeName","src":"19729:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2970,"mutability":"mutable","name":"b","nameLocation":"19753:1:9","nodeType":"VariableDeclaration","scope":2984,"src":"19739:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2969,"nodeType":"UserDefinedTypeName","pathNode":{"id":2968,"name":"Signed","nameLocations":["19739:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"19739:6:9"},"referencedDeclaration":2633,"src":"19739:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"19728:27:9"},"returnParameters":{"id":2974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2984,"src":"19779:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2972,"name":"bool","nodeType":"ElementaryTypeName","src":"19779:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19778:6:9"},"scope":3491,"src":"19702:148:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3006,"nodeType":"Block","src":"20117:55:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2997,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"20134:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":2998,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20136:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"20134:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2999,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"20147:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3000,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20149:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"20147:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20134:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3003,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"20164:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"20134:31:9","trueExpression":{"id":3002,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"20160:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":2996,"id":3005,"nodeType":"Return","src":"20127:38:9"}]},"documentation":{"id":2985,"nodeType":"StructuredDocumentation","src":"19856:171:9","text":" @notice The minimum of `a` and `b`.\n @param a a FixedPoint.Signed.\n @param b a FixedPoint.Signed.\n @return the minimum of `a` and `b`."},"id":3007,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"20041:3:9","nodeType":"FunctionDefinition","parameters":{"id":2992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2988,"mutability":"mutable","name":"a","nameLocation":"20059:1:9","nodeType":"VariableDeclaration","scope":3007,"src":"20045:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2987,"nodeType":"UserDefinedTypeName","pathNode":{"id":2986,"name":"Signed","nameLocations":["20045:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"20045:6:9"},"referencedDeclaration":2633,"src":"20045:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":2991,"mutability":"mutable","name":"b","nameLocation":"20076:1:9","nodeType":"VariableDeclaration","scope":3007,"src":"20062:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2990,"nodeType":"UserDefinedTypeName","pathNode":{"id":2989,"name":"Signed","nameLocations":["20062:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"20062:6:9"},"referencedDeclaration":2633,"src":"20062:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"20044:34:9"},"returnParameters":{"id":2996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3007,"src":"20102:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":2994,"nodeType":"UserDefinedTypeName","pathNode":{"id":2993,"name":"Signed","nameLocations":["20102:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"20102:6:9"},"referencedDeclaration":2633,"src":"20102:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"20101:15:9"},"scope":3491,"src":"20032:140:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3029,"nodeType":"Block","src":"20439:55:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3020,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"20456:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3021,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20458:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"20456:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":3022,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"20469:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20471:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"20469:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20456:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3026,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"20486:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"20456:31:9","trueExpression":{"id":3025,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"20482:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3019,"id":3028,"nodeType":"Return","src":"20449:38:9"}]},"documentation":{"id":3008,"nodeType":"StructuredDocumentation","src":"20178:171:9","text":" @notice The maximum of `a` and `b`.\n @param a a FixedPoint.Signed.\n @param b a FixedPoint.Signed.\n @return the maximum of `a` and `b`."},"id":3030,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"20363:3:9","nodeType":"FunctionDefinition","parameters":{"id":3015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3011,"mutability":"mutable","name":"a","nameLocation":"20381:1:9","nodeType":"VariableDeclaration","scope":3030,"src":"20367:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3010,"nodeType":"UserDefinedTypeName","pathNode":{"id":3009,"name":"Signed","nameLocations":["20367:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"20367:6:9"},"referencedDeclaration":2633,"src":"20367:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":3014,"mutability":"mutable","name":"b","nameLocation":"20398:1:9","nodeType":"VariableDeclaration","scope":3030,"src":"20384:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3013,"nodeType":"UserDefinedTypeName","pathNode":{"id":3012,"name":"Signed","nameLocations":["20384:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"20384:6:9"},"referencedDeclaration":2633,"src":"20384:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"20366:34:9"},"returnParameters":{"id":3019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3030,"src":"20424:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3017,"nodeType":"UserDefinedTypeName","pathNode":{"id":3016,"name":"Signed","nameLocations":["20424:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"20424:6:9"},"referencedDeclaration":2633,"src":"20424:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"20423:15:9"},"scope":3491,"src":"20354:140:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3052,"nodeType":"Block","src":"20772:58:9","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3047,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"20811:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3048,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20813:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"20811:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"expression":{"id":3044,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"20796:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3045,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20798:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"20796:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20807:3:9","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"20796:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$attached_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20796:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3043,"name":"Signed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"20789:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Signed_$2633_storage_ptr_$","typeString":"type(struct FixedPoint.Signed storage pointer)"}},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20789:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3042,"id":3051,"nodeType":"Return","src":"20782:41:9"}]},"documentation":{"id":3031,"nodeType":"StructuredDocumentation","src":"20500:182:9","text":" @notice Adds two `Signed`s, reverting on overflow.\n @param a a FixedPoint.Signed.\n @param b a FixedPoint.Signed.\n @return the sum of `a` and `b`."},"id":3053,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"20696:3:9","nodeType":"FunctionDefinition","parameters":{"id":3038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3034,"mutability":"mutable","name":"a","nameLocation":"20714:1:9","nodeType":"VariableDeclaration","scope":3053,"src":"20700:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3033,"nodeType":"UserDefinedTypeName","pathNode":{"id":3032,"name":"Signed","nameLocations":["20700:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"20700:6:9"},"referencedDeclaration":2633,"src":"20700:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":3037,"mutability":"mutable","name":"b","nameLocation":"20731:1:9","nodeType":"VariableDeclaration","scope":3053,"src":"20717:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3036,"nodeType":"UserDefinedTypeName","pathNode":{"id":3035,"name":"Signed","nameLocations":["20717:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"20717:6:9"},"referencedDeclaration":2633,"src":"20717:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"20699:34:9"},"returnParameters":{"id":3042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3053,"src":"20757:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3040,"nodeType":"UserDefinedTypeName","pathNode":{"id":3039,"name":"Signed","nameLocations":["20757:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"20757:6:9"},"referencedDeclaration":2633,"src":"20757:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"20756:15:9"},"scope":3491,"src":"20687:143:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3072,"nodeType":"Block","src":"21108:50:9","statements":[{"expression":{"arguments":[{"id":3066,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"21129:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},{"arguments":[{"id":3068,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"21148:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3067,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"21132:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2633_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21132:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"},{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}],"id":3065,"name":"add","nodeType":"Identifier","overloadedDeclarations":[2238,2258,3053,3073],"referencedDeclaration":3053,"src":"21125:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Signed_$2633_memory_ptr_$_t_struct$_Signed_$2633_memory_ptr_$returns$_t_struct$_Signed_$2633_memory_ptr_$","typeString":"function (struct FixedPoint.Signed memory,struct FixedPoint.Signed memory) pure returns (struct FixedPoint.Signed memory)"}},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21125:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3064,"id":3071,"nodeType":"Return","src":"21118:33:9"}]},"documentation":{"id":3054,"nodeType":"StructuredDocumentation","src":"20836:189:9","text":" @notice Adds an `Signed` to an unscaled int, reverting on overflow.\n @param a a FixedPoint.Signed.\n @param b an int256.\n @return the sum of `a` and `b`."},"id":3073,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"21039:3:9","nodeType":"FunctionDefinition","parameters":{"id":3060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3057,"mutability":"mutable","name":"a","nameLocation":"21057:1:9","nodeType":"VariableDeclaration","scope":3073,"src":"21043:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3056,"nodeType":"UserDefinedTypeName","pathNode":{"id":3055,"name":"Signed","nameLocations":["21043:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"21043:6:9"},"referencedDeclaration":2633,"src":"21043:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":3059,"mutability":"mutable","name":"b","nameLocation":"21067:1:9","nodeType":"VariableDeclaration","scope":3073,"src":"21060:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3058,"name":"int256","nodeType":"ElementaryTypeName","src":"21060:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21042:27:9"},"returnParameters":{"id":3064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3073,"src":"21093:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3062,"nodeType":"UserDefinedTypeName","pathNode":{"id":3061,"name":"Signed","nameLocations":["21093:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"21093:6:9"},"referencedDeclaration":2633,"src":"21093:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"21092:15:9"},"scope":3491,"src":"21030:128:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3095,"nodeType":"Block","src":"21448:58:9","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3090,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"21487:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3091,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21489:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"21487:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"expression":{"id":3087,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"21472:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3088,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21474:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"21472:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21483:3:9","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1842,"src":"21472:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$attached_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21472:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3086,"name":"Signed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"21465:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Signed_$2633_storage_ptr_$","typeString":"type(struct FixedPoint.Signed storage pointer)"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21465:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3085,"id":3094,"nodeType":"Return","src":"21458:41:9"}]},"documentation":{"id":3074,"nodeType":"StructuredDocumentation","src":"21164:194:9","text":" @notice Subtracts two `Signed`s, reverting on overflow.\n @param a a FixedPoint.Signed.\n @param b a FixedPoint.Signed.\n @return the difference of `a` and `b`."},"id":3096,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"21372:3:9","nodeType":"FunctionDefinition","parameters":{"id":3081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3077,"mutability":"mutable","name":"a","nameLocation":"21390:1:9","nodeType":"VariableDeclaration","scope":3096,"src":"21376:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3076,"nodeType":"UserDefinedTypeName","pathNode":{"id":3075,"name":"Signed","nameLocations":["21376:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"21376:6:9"},"referencedDeclaration":2633,"src":"21376:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":3080,"mutability":"mutable","name":"b","nameLocation":"21407:1:9","nodeType":"VariableDeclaration","scope":3096,"src":"21393:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3079,"nodeType":"UserDefinedTypeName","pathNode":{"id":3078,"name":"Signed","nameLocations":["21393:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"21393:6:9"},"referencedDeclaration":2633,"src":"21393:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"21375:34:9"},"returnParameters":{"id":3085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3084,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3096,"src":"21433:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3083,"nodeType":"UserDefinedTypeName","pathNode":{"id":3082,"name":"Signed","nameLocations":["21433:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"21433:6:9"},"referencedDeclaration":2633,"src":"21433:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"21432:15:9"},"scope":3491,"src":"21363:143:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3115,"nodeType":"Block","src":"21801:50:9","statements":[{"expression":{"arguments":[{"id":3109,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"21822:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},{"arguments":[{"id":3111,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"21841:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3110,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"21825:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2633_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21825:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"},{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}],"id":3108,"name":"sub","nodeType":"Identifier","overloadedDeclarations":[2281,2301,2321,3096,3116,3136],"referencedDeclaration":3096,"src":"21818:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Signed_$2633_memory_ptr_$_t_struct$_Signed_$2633_memory_ptr_$returns$_t_struct$_Signed_$2633_memory_ptr_$","typeString":"function (struct FixedPoint.Signed memory,struct FixedPoint.Signed memory) pure returns (struct FixedPoint.Signed memory)"}},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21818:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3107,"id":3114,"nodeType":"Return","src":"21811:33:9"}]},"documentation":{"id":3097,"nodeType":"StructuredDocumentation","src":"21512:206:9","text":" @notice Subtracts an unscaled int256 from an `Signed`, reverting on overflow.\n @param a a FixedPoint.Signed.\n @param b an int256.\n @return the difference of `a` and `b`."},"id":3116,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"21732:3:9","nodeType":"FunctionDefinition","parameters":{"id":3103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3100,"mutability":"mutable","name":"a","nameLocation":"21750:1:9","nodeType":"VariableDeclaration","scope":3116,"src":"21736:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3099,"nodeType":"UserDefinedTypeName","pathNode":{"id":3098,"name":"Signed","nameLocations":["21736:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"21736:6:9"},"referencedDeclaration":2633,"src":"21736:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":3102,"mutability":"mutable","name":"b","nameLocation":"21760:1:9","nodeType":"VariableDeclaration","scope":3116,"src":"21753:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3101,"name":"int256","nodeType":"ElementaryTypeName","src":"21753:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21735:27:9"},"returnParameters":{"id":3107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3116,"src":"21786:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3105,"nodeType":"UserDefinedTypeName","pathNode":{"id":3104,"name":"Signed","nameLocations":["21786:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"21786:6:9"},"referencedDeclaration":2633,"src":"21786:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"21785:15:9"},"scope":3491,"src":"21723:128:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3135,"nodeType":"Block","src":"22146:50:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":3130,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"22183:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3129,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"22167:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2633_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22167:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},{"id":3132,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"22187:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"},{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}],"id":3128,"name":"sub","nodeType":"Identifier","overloadedDeclarations":[2281,2301,2321,3096,3116,3136],"referencedDeclaration":3096,"src":"22163:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Signed_$2633_memory_ptr_$_t_struct$_Signed_$2633_memory_ptr_$returns$_t_struct$_Signed_$2633_memory_ptr_$","typeString":"function (struct FixedPoint.Signed memory,struct FixedPoint.Signed memory) pure returns (struct FixedPoint.Signed memory)"}},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22163:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3127,"id":3134,"nodeType":"Return","src":"22156:33:9"}]},"documentation":{"id":3117,"nodeType":"StructuredDocumentation","src":"21857:206:9","text":" @notice Subtracts an `Signed` from an unscaled int256, reverting on overflow.\n @param a an int256.\n @param b a FixedPoint.Signed.\n @return the difference of `a` and `b`."},"id":3136,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"22077:3:9","nodeType":"FunctionDefinition","parameters":{"id":3123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3119,"mutability":"mutable","name":"a","nameLocation":"22088:1:9","nodeType":"VariableDeclaration","scope":3136,"src":"22081:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3118,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3122,"mutability":"mutable","name":"b","nameLocation":"22105:1:9","nodeType":"VariableDeclaration","scope":3136,"src":"22091:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3121,"nodeType":"UserDefinedTypeName","pathNode":{"id":3120,"name":"Signed","nameLocations":["22091:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"22091:6:9"},"referencedDeclaration":2633,"src":"22091:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"22080:27:9"},"returnParameters":{"id":3127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3136,"src":"22131:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3125,"nodeType":"UserDefinedTypeName","pathNode":{"id":3124,"name":"Signed","nameLocations":["22131:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"22131:6:9"},"referencedDeclaration":2633,"src":"22131:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"22130:15:9"},"scope":3491,"src":"22068:128:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3160,"nodeType":"Block","src":"22527:559:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":3153,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"23046:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3154,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23048:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"23046:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"expression":{"id":3150,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"23031:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3151,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23033:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"23031:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23042:3:9","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1812,"src":"23031:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$attached_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23031:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3156,"name":"SFP_SCALING_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"23060:18:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23031:47:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3149,"name":"Signed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"23024:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Signed_$2633_storage_ptr_$","typeString":"type(struct FixedPoint.Signed storage pointer)"}},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23024:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3148,"id":3159,"nodeType":"Return","src":"23017:62:9"}]},"documentation":{"id":3137,"nodeType":"StructuredDocumentation","src":"22202:235:9","text":" @notice Multiplies two `Signed`s, reverting on overflow.\n @dev This will \"floor\" the product.\n @param a a FixedPoint.Signed.\n @param b a FixedPoint.Signed.\n @return the product of `a` and `b`."},"id":3161,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"22451:3:9","nodeType":"FunctionDefinition","parameters":{"id":3144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3140,"mutability":"mutable","name":"a","nameLocation":"22469:1:9","nodeType":"VariableDeclaration","scope":3161,"src":"22455:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3139,"nodeType":"UserDefinedTypeName","pathNode":{"id":3138,"name":"Signed","nameLocations":["22455:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"22455:6:9"},"referencedDeclaration":2633,"src":"22455:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":3143,"mutability":"mutable","name":"b","nameLocation":"22486:1:9","nodeType":"VariableDeclaration","scope":3161,"src":"22472:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3142,"nodeType":"UserDefinedTypeName","pathNode":{"id":3141,"name":"Signed","nameLocations":["22472:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"22472:6:9"},"referencedDeclaration":2633,"src":"22472:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"22454:34:9"},"returnParameters":{"id":3148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3161,"src":"22512:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3146,"nodeType":"UserDefinedTypeName","pathNode":{"id":3145,"name":"Signed","nameLocations":["22512:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"22512:6:9"},"referencedDeclaration":2633,"src":"22512:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"22511:15:9"},"scope":3491,"src":"22442:644:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3181,"nodeType":"Block","src":"23421:49:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":3177,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"23460:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"expression":{"id":3174,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"23445:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3175,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23447:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"23445:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23456:3:9","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1812,"src":"23445:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$attached_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23445:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3173,"name":"Signed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"23438:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Signed_$2633_storage_ptr_$","typeString":"type(struct FixedPoint.Signed storage pointer)"}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23438:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3172,"id":3180,"nodeType":"Return","src":"23431:32:9"}]},"documentation":{"id":3162,"nodeType":"StructuredDocumentation","src":"23092:246:9","text":" @notice Multiplies an `Signed` and an unscaled int256, reverting on overflow.\n @dev This will \"floor\" the product.\n @param a a FixedPoint.Signed.\n @param b an int256.\n @return the product of `a` and `b`."},"id":3182,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"23352:3:9","nodeType":"FunctionDefinition","parameters":{"id":3168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3165,"mutability":"mutable","name":"a","nameLocation":"23370:1:9","nodeType":"VariableDeclaration","scope":3182,"src":"23356:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3164,"nodeType":"UserDefinedTypeName","pathNode":{"id":3163,"name":"Signed","nameLocations":["23356:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"23356:6:9"},"referencedDeclaration":2633,"src":"23356:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":3167,"mutability":"mutable","name":"b","nameLocation":"23380:1:9","nodeType":"VariableDeclaration","scope":3182,"src":"23373:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3166,"name":"int256","nodeType":"ElementaryTypeName","src":"23373:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23355:27:9"},"returnParameters":{"id":3172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3182,"src":"23406:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3170,"nodeType":"UserDefinedTypeName","pathNode":{"id":3169,"name":"Signed","nameLocations":["23406:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"23406:6:9"},"referencedDeclaration":2633,"src":"23406:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"23405:15:9"},"scope":3491,"src":"23343:127:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3259,"nodeType":"Block","src":"23795:537:9","statements":[{"assignments":[3196],"declarations":[{"constant":false,"id":3196,"mutability":"mutable","name":"mulRaw","nameLocation":"23812:6:9","nodeType":"VariableDeclaration","scope":3259,"src":"23805:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3195,"name":"int256","nodeType":"ElementaryTypeName","src":"23805:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3203,"initialValue":{"arguments":[{"expression":{"id":3200,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"23836:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3201,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23838:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"23836:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"expression":{"id":3197,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"23821:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3198,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23823:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"23821:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23832:3:9","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1812,"src":"23821:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$attached_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23821:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"23805:42:9"},{"assignments":[3205],"declarations":[{"constant":false,"id":3205,"mutability":"mutable","name":"mulTowardsZero","nameLocation":"23864:14:9","nodeType":"VariableDeclaration","scope":3259,"src":"23857:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3204,"name":"int256","nodeType":"ElementaryTypeName","src":"23857:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3209,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3206,"name":"mulRaw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"23881:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3207,"name":"SFP_SCALING_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"23890:18:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23881:27:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"23857:51:9"},{"assignments":[3211],"declarations":[{"constant":false,"id":3211,"mutability":"mutable","name":"mod","nameLocation":"23990:3:9","nodeType":"VariableDeclaration","scope":3259,"src":"23983:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3210,"name":"int256","nodeType":"ElementaryTypeName","src":"23983:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3215,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3212,"name":"mulRaw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"23996:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3213,"name":"SFP_SCALING_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"24005:18:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23996:27:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"23983:40:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3216,"name":"mod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"24037:3:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24044:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24037:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3257,"nodeType":"Block","src":"24272:54:9","statements":[{"expression":{"arguments":[{"id":3254,"name":"mulTowardsZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"24300:14:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3253,"name":"Signed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"24293:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Signed_$2633_storage_ptr_$","typeString":"type(struct FixedPoint.Signed storage pointer)"}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24293:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3194,"id":3256,"nodeType":"Return","src":"24286:29:9"}]},"id":3258,"nodeType":"IfStatement","src":"24033:293:9","trueBody":{"id":3252,"nodeType":"Block","src":"24047:219:9","statements":[{"assignments":[3220],"declarations":[{"constant":false,"id":3220,"mutability":"mutable","name":"isResultPositive","nameLocation":"24066:16:9","nodeType":"VariableDeclaration","scope":3252,"src":"24061:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3219,"name":"bool","nodeType":"ElementaryTypeName","src":"24061:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3230,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3222,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"24096:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},{"hexValue":"30","id":3223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24099:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3221,"name":"isLessThan","nodeType":"Identifier","overloadedDeclarations":[2070,2090,2110,2885,2905,2925],"referencedDeclaration":2905,"src":"24085:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Signed_$2633_memory_ptr_$_t_int256_$returns$_t_bool_$","typeString":"function (struct FixedPoint.Signed memory,int256) pure returns (bool)"}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24085:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3226,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"24116:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},{"hexValue":"30","id":3227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24119:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3225,"name":"isLessThan","nodeType":"Identifier","overloadedDeclarations":[2070,2090,2110,2885,2905,2925],"referencedDeclaration":2905,"src":"24105:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Signed_$2633_memory_ptr_$_t_int256_$returns$_t_bool_$","typeString":"function (struct FixedPoint.Signed memory,int256) pure returns (bool)"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24105:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24085:36:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"24061:60:9"},{"assignments":[3232],"declarations":[{"constant":false,"id":3232,"mutability":"mutable","name":"valueToAdd","nameLocation":"24142:10:9","nodeType":"VariableDeclaration","scope":3252,"src":"24135:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3231,"name":"int256","nodeType":"ElementaryTypeName","src":"24135:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3244,"initialValue":{"condition":{"id":3233,"name":"isResultPositive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"24155:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"24193:2:9","subExpression":{"hexValue":"31","id":3240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24194:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":3239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24186:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3238,"name":"int256","nodeType":"ElementaryTypeName","src":"24186:6:9","typeDescriptions":{}}},"id":3242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24186:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"24155:41:9","trueExpression":{"arguments":[{"hexValue":"31","id":3236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24181:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":3235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24174:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3234,"name":"int256","nodeType":"ElementaryTypeName","src":"24174:6:9","typeDescriptions":{}}},"id":3237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24174:9:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"24135:61:9"},{"expression":{"arguments":[{"arguments":[{"id":3248,"name":"valueToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"24243:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3246,"name":"mulTowardsZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"24224:14:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24239:3:9","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"24224:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$attached_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24224:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3245,"name":"Signed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"24217:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Signed_$2633_storage_ptr_$","typeString":"type(struct FixedPoint.Signed storage pointer)"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24217:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3194,"id":3251,"nodeType":"Return","src":"24210:45:9"}]}}]},"documentation":{"id":3183,"nodeType":"StructuredDocumentation","src":"23476:217:9","text":" @notice Multiplies two `Signed`s and \"ceil's\" the product, reverting on overflow.\n @param a a FixedPoint.Signed.\n @param b a FixedPoint.Signed.\n @return the product of `a` and `b`."},"id":3260,"implemented":true,"kind":"function","modifiers":[],"name":"mulAwayFromZero","nameLocation":"23707:15:9","nodeType":"FunctionDefinition","parameters":{"id":3190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3186,"mutability":"mutable","name":"a","nameLocation":"23737:1:9","nodeType":"VariableDeclaration","scope":3260,"src":"23723:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3185,"nodeType":"UserDefinedTypeName","pathNode":{"id":3184,"name":"Signed","nameLocations":["23723:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"23723:6:9"},"referencedDeclaration":2633,"src":"23723:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":3189,"mutability":"mutable","name":"b","nameLocation":"23754:1:9","nodeType":"VariableDeclaration","scope":3260,"src":"23740:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3188,"nodeType":"UserDefinedTypeName","pathNode":{"id":3187,"name":"Signed","nameLocations":["23740:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"23740:6:9"},"referencedDeclaration":2633,"src":"23740:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"23722:34:9"},"returnParameters":{"id":3194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3260,"src":"23780:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3192,"nodeType":"UserDefinedTypeName","pathNode":{"id":3191,"name":"Signed","nameLocations":["23780:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"23780:6:9"},"referencedDeclaration":2633,"src":"23780:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"23779:15:9"},"scope":3491,"src":"23698:634:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3280,"nodeType":"Block","src":"24671:142:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":3276,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"24803:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"expression":{"id":3273,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"24788:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24790:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"24788:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24799:3:9","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1812,"src":"24788:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$attached_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24788:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3272,"name":"Signed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"24781:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Signed_$2633_storage_ptr_$","typeString":"type(struct FixedPoint.Signed storage pointer)"}},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24781:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3271,"id":3279,"nodeType":"Return","src":"24774:32:9"}]},"documentation":{"id":3261,"nodeType":"StructuredDocumentation","src":"24338:238:9","text":" @notice Multiplies an `Signed` and an unscaled int256 and \"ceil's\" the product, reverting on overflow.\n @param a a FixedPoint.Signed.\n @param b a FixedPoint.Signed.\n @return the product of `a` and `b`."},"id":3281,"implemented":true,"kind":"function","modifiers":[],"name":"mulAwayFromZero","nameLocation":"24590:15:9","nodeType":"FunctionDefinition","parameters":{"id":3267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3264,"mutability":"mutable","name":"a","nameLocation":"24620:1:9","nodeType":"VariableDeclaration","scope":3281,"src":"24606:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3263,"nodeType":"UserDefinedTypeName","pathNode":{"id":3262,"name":"Signed","nameLocations":["24606:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"24606:6:9"},"referencedDeclaration":2633,"src":"24606:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":3266,"mutability":"mutable","name":"b","nameLocation":"24630:1:9","nodeType":"VariableDeclaration","scope":3281,"src":"24623:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3265,"name":"int256","nodeType":"ElementaryTypeName","src":"24623:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24605:27:9"},"returnParameters":{"id":3271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3281,"src":"24656:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3269,"nodeType":"UserDefinedTypeName","pathNode":{"id":3268,"name":"Signed","nameLocations":["24656:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"24656:6:9"},"referencedDeclaration":2633,"src":"24656:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"24655:15:9"},"scope":3491,"src":"24581:232:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3306,"nodeType":"Block","src":"25189:542:9","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3301,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"25712:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25714:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"25712:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"arguments":[{"id":3298,"name":"SFP_SCALING_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"25688:18:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"expression":{"id":3295,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"25673:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25675:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"25673:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25684:3:9","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1812,"src":"25673:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$attached_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25673:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25708:3:9","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1827,"src":"25673:38:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$attached_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25673:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3294,"name":"Signed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"25666:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Signed_$2633_storage_ptr_$","typeString":"type(struct FixedPoint.Signed storage pointer)"}},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25666:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3293,"id":3305,"nodeType":"Return","src":"25659:65:9"}]},"documentation":{"id":3282,"nodeType":"StructuredDocumentation","src":"24819:280:9","text":" @notice Divides one `Signed` by an `Signed`, reverting on overflow or division by 0.\n @dev This will \"floor\" the quotient.\n @param a a FixedPoint numerator.\n @param b a FixedPoint denominator.\n @return the quotient of `a` divided by `b`."},"id":3307,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"25113:3:9","nodeType":"FunctionDefinition","parameters":{"id":3289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3285,"mutability":"mutable","name":"a","nameLocation":"25131:1:9","nodeType":"VariableDeclaration","scope":3307,"src":"25117:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3284,"nodeType":"UserDefinedTypeName","pathNode":{"id":3283,"name":"Signed","nameLocations":["25117:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"25117:6:9"},"referencedDeclaration":2633,"src":"25117:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":3288,"mutability":"mutable","name":"b","nameLocation":"25148:1:9","nodeType":"VariableDeclaration","scope":3307,"src":"25134:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3287,"nodeType":"UserDefinedTypeName","pathNode":{"id":3286,"name":"Signed","nameLocations":["25134:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"25134:6:9"},"referencedDeclaration":2633,"src":"25134:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"25116:34:9"},"returnParameters":{"id":3293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3307,"src":"25174:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3291,"nodeType":"UserDefinedTypeName","pathNode":{"id":3290,"name":"Signed","nameLocations":["25174:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"25174:6:9"},"referencedDeclaration":2633,"src":"25174:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"25173:15:9"},"scope":3491,"src":"25104:627:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3327,"nodeType":"Block","src":"26104:49:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":3323,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"26143:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"expression":{"id":3320,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"26128:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3321,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26130:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"26128:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26139:3:9","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1827,"src":"26128:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$attached_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26128:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3319,"name":"Signed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"26121:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Signed_$2633_storage_ptr_$","typeString":"type(struct FixedPoint.Signed storage pointer)"}},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26121:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3318,"id":3326,"nodeType":"Return","src":"26114:32:9"}]},"documentation":{"id":3308,"nodeType":"StructuredDocumentation","src":"25737:284:9","text":" @notice Divides one `Signed` by an unscaled int256, reverting on overflow or division by 0.\n @dev This will \"floor\" the quotient.\n @param a a FixedPoint numerator.\n @param b an int256 denominator.\n @return the quotient of `a` divided by `b`."},"id":3328,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"26035:3:9","nodeType":"FunctionDefinition","parameters":{"id":3314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3311,"mutability":"mutable","name":"a","nameLocation":"26053:1:9","nodeType":"VariableDeclaration","scope":3328,"src":"26039:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3310,"nodeType":"UserDefinedTypeName","pathNode":{"id":3309,"name":"Signed","nameLocations":["26039:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"26039:6:9"},"referencedDeclaration":2633,"src":"26039:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":3313,"mutability":"mutable","name":"b","nameLocation":"26063:1:9","nodeType":"VariableDeclaration","scope":3328,"src":"26056:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3312,"name":"int256","nodeType":"ElementaryTypeName","src":"26056:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26038:27:9"},"returnParameters":{"id":3318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3328,"src":"26089:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3316,"nodeType":"UserDefinedTypeName","pathNode":{"id":3315,"name":"Signed","nameLocations":["26089:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"26089:6:9"},"referencedDeclaration":2633,"src":"26089:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"26088:15:9"},"scope":3491,"src":"26026:127:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3347,"nodeType":"Block","src":"26526:50:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":3342,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"26563:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3341,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"26547:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2633_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26547:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},{"id":3344,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"26567:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"},{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}],"id":3340,"name":"div","nodeType":"Identifier","overloadedDeclarations":[2467,2488,2508,3307,3328,3348],"referencedDeclaration":3307,"src":"26543:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Signed_$2633_memory_ptr_$_t_struct$_Signed_$2633_memory_ptr_$returns$_t_struct$_Signed_$2633_memory_ptr_$","typeString":"function (struct FixedPoint.Signed memory,struct FixedPoint.Signed memory) pure returns (struct FixedPoint.Signed memory)"}},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26543:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3339,"id":3346,"nodeType":"Return","src":"26536:33:9"}]},"documentation":{"id":3329,"nodeType":"StructuredDocumentation","src":"26159:284:9","text":" @notice Divides one unscaled int256 by an `Signed`, reverting on overflow or division by 0.\n @dev This will \"floor\" the quotient.\n @param a an int256 numerator.\n @param b a FixedPoint denominator.\n @return the quotient of `a` divided by `b`."},"id":3348,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"26457:3:9","nodeType":"FunctionDefinition","parameters":{"id":3335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3331,"mutability":"mutable","name":"a","nameLocation":"26468:1:9","nodeType":"VariableDeclaration","scope":3348,"src":"26461:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3330,"name":"int256","nodeType":"ElementaryTypeName","src":"26461:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3334,"mutability":"mutable","name":"b","nameLocation":"26485:1:9","nodeType":"VariableDeclaration","scope":3348,"src":"26471:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3333,"nodeType":"UserDefinedTypeName","pathNode":{"id":3332,"name":"Signed","nameLocations":["26471:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"26471:6:9"},"referencedDeclaration":2633,"src":"26471:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"26460:27:9"},"returnParameters":{"id":3339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3348,"src":"26511:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3337,"nodeType":"UserDefinedTypeName","pathNode":{"id":3336,"name":"Signed","nameLocations":["26511:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"26511:6:9"},"referencedDeclaration":2633,"src":"26511:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"26510:15:9"},"scope":3491,"src":"26448:128:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3427,"nodeType":"Block","src":"26946:535:9","statements":[{"assignments":[3362],"declarations":[{"constant":false,"id":3362,"mutability":"mutable","name":"aScaled","nameLocation":"26963:7:9","nodeType":"VariableDeclaration","scope":3427,"src":"26956:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3361,"name":"int256","nodeType":"ElementaryTypeName","src":"26956:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3368,"initialValue":{"arguments":[{"id":3366,"name":"SFP_SCALING_FACTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"26988:18:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"expression":{"id":3363,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"26973:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3364,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26975:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"26973:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26984:3:9","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1812,"src":"26973:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$attached_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26973:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"26956:51:9"},{"assignments":[3370],"declarations":[{"constant":false,"id":3370,"mutability":"mutable","name":"divTowardsZero","nameLocation":"27024:14:9","nodeType":"VariableDeclaration","scope":3427,"src":"27017:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3369,"name":"int256","nodeType":"ElementaryTypeName","src":"27017:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3376,"initialValue":{"arguments":[{"expression":{"id":3373,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"27053:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3374,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27055:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"27053:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3371,"name":"aScaled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"27041:7:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27049:3:9","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1827,"src":"27041:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$attached_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27041:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"27017:47:9"},{"assignments":[3378],"declarations":[{"constant":false,"id":3378,"mutability":"mutable","name":"mod","nameLocation":"27146:3:9","nodeType":"VariableDeclaration","scope":3427,"src":"27139:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3377,"name":"int256","nodeType":"ElementaryTypeName","src":"27139:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3383,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3379,"name":"aScaled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"27152:7:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"id":3380,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"27162:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27164:8:9","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":2632,"src":"27162:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27152:20:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"27139:33:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3384,"name":"mod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"27186:3:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27193:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"27186:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3425,"nodeType":"Block","src":"27421:54:9","statements":[{"expression":{"arguments":[{"id":3422,"name":"divTowardsZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"27449:14:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3421,"name":"Signed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"27442:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Signed_$2633_storage_ptr_$","typeString":"type(struct FixedPoint.Signed storage pointer)"}},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27442:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3360,"id":3424,"nodeType":"Return","src":"27435:29:9"}]},"id":3426,"nodeType":"IfStatement","src":"27182:293:9","trueBody":{"id":3420,"nodeType":"Block","src":"27196:219:9","statements":[{"assignments":[3388],"declarations":[{"constant":false,"id":3388,"mutability":"mutable","name":"isResultPositive","nameLocation":"27215:16:9","nodeType":"VariableDeclaration","scope":3420,"src":"27210:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3387,"name":"bool","nodeType":"ElementaryTypeName","src":"27210:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3398,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3390,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"27245:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},{"hexValue":"30","id":3391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27248:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3389,"name":"isLessThan","nodeType":"Identifier","overloadedDeclarations":[2070,2090,2110,2885,2905,2925],"referencedDeclaration":2905,"src":"27234:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Signed_$2633_memory_ptr_$_t_int256_$returns$_t_bool_$","typeString":"function (struct FixedPoint.Signed memory,int256) pure returns (bool)"}},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27234:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3394,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"27265:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},{"hexValue":"30","id":3395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27268:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3393,"name":"isLessThan","nodeType":"Identifier","overloadedDeclarations":[2070,2090,2110,2885,2905,2925],"referencedDeclaration":2905,"src":"27254:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Signed_$2633_memory_ptr_$_t_int256_$returns$_t_bool_$","typeString":"function (struct FixedPoint.Signed memory,int256) pure returns (bool)"}},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27254:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27234:36:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"27210:60:9"},{"assignments":[3400],"declarations":[{"constant":false,"id":3400,"mutability":"mutable","name":"valueToAdd","nameLocation":"27291:10:9","nodeType":"VariableDeclaration","scope":3420,"src":"27284:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3399,"name":"int256","nodeType":"ElementaryTypeName","src":"27284:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3412,"initialValue":{"condition":{"id":3401,"name":"isResultPositive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"27304:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"27342:2:9","subExpression":{"hexValue":"31","id":3408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27343:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":3407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27335:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3406,"name":"int256","nodeType":"ElementaryTypeName","src":"27335:6:9","typeDescriptions":{}}},"id":3410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27335:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"27304:41:9","trueExpression":{"arguments":[{"hexValue":"31","id":3404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27330:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":3403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27323:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3402,"name":"int256","nodeType":"ElementaryTypeName","src":"27323:6:9","typeDescriptions":{}}},"id":3405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27323:9:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"27284:61:9"},{"expression":{"arguments":[{"arguments":[{"id":3416,"name":"valueToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"27392:10:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3414,"name":"divTowardsZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"27373:14:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27388:3:9","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"27373:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$attached_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27373:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3413,"name":"Signed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"27366:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Signed_$2633_storage_ptr_$","typeString":"type(struct FixedPoint.Signed storage pointer)"}},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27366:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3360,"id":3419,"nodeType":"Return","src":"27359:45:9"}]}}]},"documentation":{"id":3349,"nodeType":"StructuredDocumentation","src":"26582:262:9","text":" @notice Divides one `Signed` by an `Signed` and \"ceil's\" the quotient, reverting on overflow or division by 0.\n @param a a FixedPoint numerator.\n @param b a FixedPoint denominator.\n @return the quotient of `a` divided by `b`."},"id":3428,"implemented":true,"kind":"function","modifiers":[],"name":"divAwayFromZero","nameLocation":"26858:15:9","nodeType":"FunctionDefinition","parameters":{"id":3356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3352,"mutability":"mutable","name":"a","nameLocation":"26888:1:9","nodeType":"VariableDeclaration","scope":3428,"src":"26874:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3351,"nodeType":"UserDefinedTypeName","pathNode":{"id":3350,"name":"Signed","nameLocations":["26874:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"26874:6:9"},"referencedDeclaration":2633,"src":"26874:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":3355,"mutability":"mutable","name":"b","nameLocation":"26905:1:9","nodeType":"VariableDeclaration","scope":3428,"src":"26891:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3354,"nodeType":"UserDefinedTypeName","pathNode":{"id":3353,"name":"Signed","nameLocations":["26891:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"26891:6:9"},"referencedDeclaration":2633,"src":"26891:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"26873:34:9"},"returnParameters":{"id":3360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3428,"src":"26931:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3358,"nodeType":"UserDefinedTypeName","pathNode":{"id":3357,"name":"Signed","nameLocations":["26931:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"26931:6:9"},"referencedDeclaration":2633,"src":"26931:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"26930:15:9"},"scope":3491,"src":"26849:632:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3447,"nodeType":"Block","src":"27848:366:9","statements":[{"expression":{"arguments":[{"id":3441,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"28185:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},{"arguments":[{"id":3443,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"28204:1:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3442,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"28188:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2633_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28188:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"},{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}],"id":3440,"name":"divAwayFromZero","nodeType":"Identifier","overloadedDeclarations":[3428,3448],"referencedDeclaration":3428,"src":"28169:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Signed_$2633_memory_ptr_$_t_struct$_Signed_$2633_memory_ptr_$returns$_t_struct$_Signed_$2633_memory_ptr_$","typeString":"function (struct FixedPoint.Signed memory,struct FixedPoint.Signed memory) pure returns (struct FixedPoint.Signed memory)"}},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28169:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"functionReturnParameters":3439,"id":3446,"nodeType":"Return","src":"28162:45:9"}]},"documentation":{"id":3429,"nodeType":"StructuredDocumentation","src":"27487:266:9","text":" @notice Divides one `Signed` by an unscaled int256 and \"ceil's\" the quotient, reverting on overflow or division by 0.\n @param a a FixedPoint numerator.\n @param b an int256 denominator.\n @return the quotient of `a` divided by `b`."},"id":3448,"implemented":true,"kind":"function","modifiers":[],"name":"divAwayFromZero","nameLocation":"27767:15:9","nodeType":"FunctionDefinition","parameters":{"id":3435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3432,"mutability":"mutable","name":"a","nameLocation":"27797:1:9","nodeType":"VariableDeclaration","scope":3448,"src":"27783:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3431,"nodeType":"UserDefinedTypeName","pathNode":{"id":3430,"name":"Signed","nameLocations":["27783:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"27783:6:9"},"referencedDeclaration":2633,"src":"27783:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":3434,"mutability":"mutable","name":"b","nameLocation":"27807:1:9","nodeType":"VariableDeclaration","scope":3448,"src":"27800:8:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3433,"name":"int256","nodeType":"ElementaryTypeName","src":"27800:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27782:27:9"},"returnParameters":{"id":3439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3448,"src":"27833:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3437,"nodeType":"UserDefinedTypeName","pathNode":{"id":3436,"name":"Signed","nameLocations":["27833:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"27833:6:9"},"referencedDeclaration":2633,"src":"27833:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"27832:15:9"},"scope":3491,"src":"27758:456:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3489,"nodeType":"Block","src":"28634:142:9","statements":[{"expression":{"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3460,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"28644:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":3462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28669:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":3461,"name":"fromUnscaledInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"28653:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_struct$_Signed_$2633_memory_ptr_$","typeString":"function (int256) pure returns (struct FixedPoint.Signed memory)"}},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28653:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"src":"28644:27:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3465,"nodeType":"ExpressionStatement","src":"28644:27:9"},{"body":{"id":3487,"nodeType":"Block","src":"28722:48:9","statements":[{"expression":{"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3480,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"28736:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3482,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"28749:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},{"id":3483,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"28757:1:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"},{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}],"id":3481,"name":"mul","nodeType":"Identifier","overloadedDeclarations":[2346,2367,3161,3182],"referencedDeclaration":3161,"src":"28745:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Signed_$2633_memory_ptr_$_t_struct$_Signed_$2633_memory_ptr_$returns$_t_struct$_Signed_$2633_memory_ptr_$","typeString":"function (struct FixedPoint.Signed memory,struct FixedPoint.Signed memory) pure returns (struct FixedPoint.Signed memory)"}},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28745:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"src":"28736:23:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed memory"}},"id":3486,"nodeType":"ExpressionStatement","src":"28736:23:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3470,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"28701:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3471,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"28705:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28701:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3488,"initializationExpression":{"assignments":[3467],"declarations":[{"constant":false,"id":3467,"mutability":"mutable","name":"i","nameLocation":"28694:1:9","nodeType":"VariableDeclaration","scope":3488,"src":"28686:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3466,"name":"uint256","nodeType":"ElementaryTypeName","src":"28686:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3469,"initialValue":{"hexValue":"30","id":3468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28698:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"28686:13:9"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3473,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"28708:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":3476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28718:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":3474,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"28712:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28714:3:9","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1658,"src":"28712:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28712:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28708:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3479,"nodeType":"ExpressionStatement","src":"28708:12:9"},"nodeType":"ForStatement","src":"28681:89:9"}]},"documentation":{"id":3449,"nodeType":"StructuredDocumentation","src":"28220:323:9","text":" @notice Raises an `Signed` to the power of an unscaled uint256, reverting on overflow. E.g., `b=2` squares `a`.\n @dev This will \"floor\" the result.\n @param a a FixedPoint.Signed.\n @param b a uint256 (negative exponents are not allowed).\n @return output is `a` to the power of `b`."},"id":3490,"implemented":true,"kind":"function","modifiers":[],"name":"pow","nameLocation":"28557:3:9","nodeType":"FunctionDefinition","parameters":{"id":3455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3452,"mutability":"mutable","name":"a","nameLocation":"28575:1:9","nodeType":"VariableDeclaration","scope":3490,"src":"28561:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3451,"nodeType":"UserDefinedTypeName","pathNode":{"id":3450,"name":"Signed","nameLocations":["28561:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"28561:6:9"},"referencedDeclaration":2633,"src":"28561:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"},{"constant":false,"id":3454,"mutability":"mutable","name":"b","nameLocation":"28586:1:9","nodeType":"VariableDeclaration","scope":3490,"src":"28578:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3453,"name":"uint256","nodeType":"ElementaryTypeName","src":"28578:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28560:28:9"},"returnParameters":{"id":3459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3458,"mutability":"mutable","name":"output","nameLocation":"28626:6:9","nodeType":"VariableDeclaration","scope":3490,"src":"28612:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_memory_ptr","typeString":"struct FixedPoint.Signed"},"typeName":{"id":3457,"nodeType":"UserDefinedTypeName","pathNode":{"id":3456,"name":"Signed","nameLocations":["28612:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2633,"src":"28612:6:9"},"referencedDeclaration":2633,"src":"28612:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Signed_$2633_storage_ptr","typeString":"struct FixedPoint.Signed"}},"visibility":"internal"}],"src":"28611:22:9"},"scope":3491,"src":"28548:228:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3492,"src":"252:28526:9","usedErrors":[],"usedEvents":[]}],"src":"42:28737:9"},"id":9},"@uma/core/contracts/common/implementation/MultiCaller.sol":{"ast":{"absolutePath":"@uma/core/contracts/common/implementation/MultiCaller.sol","exportedSymbols":{"MultiCaller":[3570]},"id":3571,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":3493,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"42:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"MultiCaller","contractDependencies":[],"contractKind":"contract","documentation":{"id":3494,"nodeType":"StructuredDocumentation","src":"442:101:10","text":"@title MultiCaller\n @notice Enables calling multiple methods in a single call to the contract"},"fullyImplemented":true,"id":3570,"linearizedBaseContracts":[3570],"name":"MultiCaller","nameLocation":"552:11:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":3568,"nodeType":"Block","src":"654:554:10","statements":[{"expression":{"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3503,"name":"results","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"664:7:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3507,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"686:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"691:6:10","memberName":"length","nodeType":"MemberAccess","src":"686:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"674:11:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":3504,"name":"bytes","nodeType":"ElementaryTypeName","src":"678:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3505,"nodeType":"ArrayTypeName","src":"678:7:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"674:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"664:34:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":3511,"nodeType":"ExpressionStatement","src":"664:34:10"},{"body":{"id":3566,"nodeType":"Block","src":"750:452:10","statements":[{"assignments":[3524,3526],"declarations":[{"constant":false,"id":3524,"mutability":"mutable","name":"success","nameLocation":"770:7:10","nodeType":"VariableDeclaration","scope":3566,"src":"765:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3523,"name":"bool","nodeType":"ElementaryTypeName","src":"765:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3526,"mutability":"mutable","name":"result","nameLocation":"792:6:10","nodeType":"VariableDeclaration","scope":3566,"src":"779:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3525,"name":"bytes","nodeType":"ElementaryTypeName","src":"779:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3536,"initialValue":{"arguments":[{"baseExpression":{"id":3532,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"829:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":3534,"indexExpression":{"id":3533,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"834:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"829:7:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"id":3529,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"810:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_MultiCaller_$3570","typeString":"contract MultiCaller"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MultiCaller_$3570","typeString":"contract MultiCaller"}],"id":3528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"802:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3527,"name":"address","nodeType":"ElementaryTypeName","src":"802:7:10","typeDescriptions":{}}},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"802:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"816:12:10","memberName":"delegatecall","nodeType":"MemberAccess","src":"802:26:10","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"802:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"764:73:10"},{"condition":{"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"856:8:10","subExpression":{"id":3537,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"857:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3559,"nodeType":"IfStatement","src":"852:306:10","trueBody":{"id":3558,"nodeType":"Block","src":"866:292:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3539,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"968:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"975:6:10","memberName":"length","nodeType":"MemberAccess","src":"968:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3638","id":3541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"984:2:10","typeDescriptions":{"typeIdentifier":"t_rational_68_by_1","typeString":"int_const 68"},"value":"68"},"src":"968:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3546,"nodeType":"IfStatement","src":"964:32:10","trueBody":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3543,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"988:6:10","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"988:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3545,"nodeType":"ExpressionStatement","src":"988:8:10"}},{"AST":{"nativeSrc":"1023:67:10","nodeType":"YulBlock","src":"1023:67:10","statements":[{"nativeSrc":"1045:27:10","nodeType":"YulAssignment","src":"1045:27:10","value":{"arguments":[{"name":"result","nativeSrc":"1059:6:10","nodeType":"YulIdentifier","src":"1059:6:10"},{"kind":"number","nativeSrc":"1067:4:10","nodeType":"YulLiteral","src":"1067:4:10","type":"","value":"0x04"}],"functionName":{"name":"add","nativeSrc":"1055:3:10","nodeType":"YulIdentifier","src":"1055:3:10"},"nativeSrc":"1055:17:10","nodeType":"YulFunctionCall","src":"1055:17:10"},"variableNames":[{"name":"result","nativeSrc":"1045:6:10","nodeType":"YulIdentifier","src":"1045:6:10"}]}]},"evmVersion":"shanghai","externalReferences":[{"declaration":3526,"isOffset":false,"isSlot":false,"src":"1045:6:10","valueSize":1},{"declaration":3526,"isOffset":false,"isSlot":false,"src":"1059:6:10","valueSize":1}],"id":3547,"nodeType":"InlineAssembly","src":"1014:76:10"},{"expression":{"arguments":[{"arguments":[{"id":3551,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"1125:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1134:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3552,"name":"string","nodeType":"ElementaryTypeName","src":"1134:6:10","typeDescriptions":{}}}],"id":3554,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1133:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"}],"expression":{"id":3549,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1114:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1118:6:10","memberName":"decode","nodeType":"MemberAccess","src":"1114:10:10","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1114:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3548,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1107:6:10","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1107:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3557,"nodeType":"ExpressionStatement","src":"1107:36:10"}]}},{"expression":{"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3560,"name":"results","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"1172:7:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":3562,"indexExpression":{"id":3561,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"1180:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1172:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3563,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"1185:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1172:19:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3565,"nodeType":"ExpressionStatement","src":"1172:19:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3516,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"728:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3517,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"732:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"737:6:10","memberName":"length","nodeType":"MemberAccess","src":"732:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"728:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3567,"initializationExpression":{"assignments":[3513],"declarations":[{"constant":false,"id":3513,"mutability":"mutable","name":"i","nameLocation":"721:1:10","nodeType":"VariableDeclaration","scope":3567,"src":"713:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3512,"name":"uint256","nodeType":"ElementaryTypeName","src":"713:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3515,"initialValue":{"hexValue":"30","id":3514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"725:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"713:13:10"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"745:3:10","subExpression":{"id":3520,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"745:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3522,"nodeType":"ExpressionStatement","src":"745:3:10"},"nodeType":"ForStatement","src":"708:494:10"}]},"functionSelector":"ac9650d8","id":3569,"implemented":true,"kind":"function","modifiers":[],"name":"multicall","nameLocation":"579:9:10","nodeType":"FunctionDefinition","parameters":{"id":3498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3497,"mutability":"mutable","name":"data","nameLocation":"606:4:10","nodeType":"VariableDeclaration","scope":3569,"src":"589:21:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3495,"name":"bytes","nodeType":"ElementaryTypeName","src":"589:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3496,"nodeType":"ArrayTypeName","src":"589:7:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"588:23:10"},"returnParameters":{"id":3502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3501,"mutability":"mutable","name":"results","nameLocation":"645:7:10","nodeType":"VariableDeclaration","scope":3569,"src":"630:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3499,"name":"bytes","nodeType":"ElementaryTypeName","src":"630:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3500,"nodeType":"ArrayTypeName","src":"630:7:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"629:24:10"},"scope":3570,"src":"570:638:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3571,"src":"543:667:10","usedErrors":[],"usedEvents":[]}],"src":"42:1169:10"},"id":10},"@uma/core/contracts/common/implementation/Testable.sol":{"ast":{"absolutePath":"@uma/core/contracts/common/implementation/Testable.sol","exportedSymbols":{"Testable":[3643],"Timer":[3678]},"id":3644,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":3572,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"42:23:11"},{"absolutePath":"@uma/core/contracts/common/implementation/Timer.sol","file":"./Timer.sol","id":3573,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3644,"sourceUnit":3679,"src":"67:21:11","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Testable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3574,"nodeType":"StructuredDocumentation","src":"90:94:11","text":" @title Base class that provides time overrides, but only if being run in test mode."},"fullyImplemented":true,"id":3643,"linearizedBaseContracts":[3643],"name":"Testable","nameLocation":"203:8:11","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"1c39c38d","id":3576,"mutability":"mutable","name":"timerAddress","nameLocation":"406:12:11","nodeType":"VariableDeclaration","scope":3643,"src":"391:27:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3575,"name":"address","nodeType":"ElementaryTypeName","src":"391:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":3586,"nodeType":"Block","src":"718:45:11","statements":[{"expression":{"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3582,"name":"timerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"728:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3583,"name":"_timerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"743:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"728:28:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3585,"nodeType":"ExpressionStatement","src":"728:28:11"}]},"documentation":{"id":3577,"nodeType":"StructuredDocumentation","src":"425:253:11","text":" @notice Constructs the Testable contract. Called by child contracts.\n @param _timerAddress Contract that stores the current time in a testing environment.\n Must be set to 0x0 for production environments that use live time."},"id":3587,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3579,"mutability":"mutable","name":"_timerAddress","nameLocation":"703:13:11","nodeType":"VariableDeclaration","scope":3587,"src":"695:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3578,"name":"address","nodeType":"ElementaryTypeName","src":"695:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"694:23:11"},"returnParameters":{"id":3581,"nodeType":"ParameterList","parameters":[],"src":"718:0:11"},"scope":3643,"src":"683:80:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3600,"nodeType":"Block","src":"857:65:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3591,"name":"timerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"875:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"307830","id":3594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"899:3:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"891:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3592,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:11","typeDescriptions":{}}},"id":3595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"891:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"875:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3590,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"867:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"867:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3598,"nodeType":"ExpressionStatement","src":"867:37:11"},{"id":3599,"nodeType":"PlaceholderStatement","src":"914:1:11"}]},"documentation":{"id":3588,"nodeType":"StructuredDocumentation","src":"769:63:11","text":" @notice Reverts if not running in test mode."},"id":3601,"name":"onlyIfTest","nameLocation":"846:10:11","nodeType":"ModifierDefinition","parameters":{"id":3589,"nodeType":"ParameterList","parameters":[],"src":"857:0:11"},"src":"837:85:11","virtual":false,"visibility":"internal"},{"body":{"id":3616,"nodeType":"Block","src":"1155:57:11","statements":[{"expression":{"arguments":[{"id":3613,"name":"time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"1200:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3610,"name":"timerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"1171:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3609,"name":"Timer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"1165:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Timer_$3678_$","typeString":"type(contract Timer)"}},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1165:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Timer_$3678","typeString":"contract Timer"}},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1185:14:11","memberName":"setCurrentTime","nodeType":"MemberAccess","referencedDeclaration":3668,"src":"1165:34:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1165:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3615,"nodeType":"ExpressionStatement","src":"1165:40:11"}]},"documentation":{"id":3602,"nodeType":"StructuredDocumentation","src":"928:164:11","text":" @notice Sets the current time.\n @dev Will revert if not running in test mode.\n @param time timestamp to set current Testable time to."},"functionSelector":"22f8e566","id":3617,"implemented":true,"kind":"function","modifiers":[{"id":3607,"kind":"modifierInvocation","modifierName":{"id":3606,"name":"onlyIfTest","nameLocations":["1144:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":3601,"src":"1144:10:11"},"nodeType":"ModifierInvocation","src":"1144:10:11"}],"name":"setCurrentTime","nameLocation":"1106:14:11","nodeType":"FunctionDefinition","parameters":{"id":3605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3604,"mutability":"mutable","name":"time","nameLocation":"1129:4:11","nodeType":"VariableDeclaration","scope":3617,"src":"1121:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3603,"name":"uint256","nodeType":"ElementaryTypeName","src":"1121:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1120:14:11"},"returnParameters":{"id":3608,"nodeType":"ParameterList","parameters":[],"src":"1155:0:11"},"scope":3643,"src":"1097:115:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3641,"nodeType":"Block","src":"1521:212:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3623,"name":"timerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"1535:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"307830","id":3626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1559:3:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1551:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3624,"name":"address","nodeType":"ElementaryTypeName","src":"1551:7:11","typeDescriptions":{}}},"id":3627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1551:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1535:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3639,"nodeType":"Block","src":"1639:88:11","statements":[{"expression":{"expression":{"id":3636,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1660:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1666:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"1660:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3622,"id":3638,"nodeType":"Return","src":"1653:22:11"}]},"id":3640,"nodeType":"IfStatement","src":"1531:196:11","trueBody":{"id":3635,"nodeType":"Block","src":"1565:68:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3630,"name":"timerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"1592:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3629,"name":"Timer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"1586:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Timer_$3678_$","typeString":"type(contract Timer)"}},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1586:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Timer_$3678","typeString":"contract Timer"}},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1606:14:11","memberName":"getCurrentTime","nodeType":"MemberAccess","referencedDeclaration":3677,"src":"1586:34:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1586:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3622,"id":3634,"nodeType":"Return","src":"1579:43:11"}]}}]},"documentation":{"id":3618,"nodeType":"StructuredDocumentation","src":"1218:234:11","text":" @notice Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode.\n Otherwise, it will return the block timestamp.\n @return uint for the current Testable timestamp."},"functionSelector":"29cb924d","id":3642,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentTime","nameLocation":"1466:14:11","nodeType":"FunctionDefinition","parameters":{"id":3619,"nodeType":"ParameterList","parameters":[],"src":"1480:2:11"},"returnParameters":{"id":3622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3642,"src":"1512:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3620,"name":"uint256","nodeType":"ElementaryTypeName","src":"1512:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1511:9:11"},"scope":3643,"src":"1457:276:11","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3644,"src":"185:1550:11","usedErrors":[],"usedEvents":[]}],"src":"42:1694:11"},"id":11},"@uma/core/contracts/common/implementation/Timer.sol":{"ast":{"absolutePath":"@uma/core/contracts/common/implementation/Timer.sol","exportedSymbols":{"Timer":[3678]},"id":3679,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":3645,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"42:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"Timer","contractDependencies":[],"contractKind":"contract","documentation":{"id":3646,"nodeType":"StructuredDocumentation","src":"67:84:12","text":" @title Universal store of current contract time for testing environments."},"fullyImplemented":true,"id":3678,"linearizedBaseContracts":[3678],"name":"Timer","nameLocation":"161:5:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3648,"mutability":"mutable","name":"currentTime","nameLocation":"189:11:12","nodeType":"VariableDeclaration","scope":3678,"src":"173:27:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3647,"name":"uint256","nodeType":"ElementaryTypeName","src":"173:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":3656,"nodeType":"Block","src":"221:87:12","statements":[{"expression":{"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3651,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"231:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3652,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"245:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"251:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"245:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"231:29:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3655,"nodeType":"ExpressionStatement","src":"231:29:12"}]},"id":3657,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3649,"nodeType":"ParameterList","parameters":[],"src":"218:2:12"},"returnParameters":{"id":3650,"nodeType":"ParameterList","parameters":[],"src":"221:0:12"},"scope":3678,"src":"207:101:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3667,"nodeType":"Block","src":"522:35:12","statements":[{"expression":{"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3663,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"532:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3664,"name":"time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"546:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"532:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3666,"nodeType":"ExpressionStatement","src":"532:18:12"}]},"documentation":{"id":3658,"nodeType":"StructuredDocumentation","src":"314:156:12","text":" @notice Sets the current time.\n @dev Will revert if not running in test mode.\n @param time timestamp to set `currentTime` to."},"functionSelector":"22f8e566","id":3668,"implemented":true,"kind":"function","modifiers":[],"name":"setCurrentTime","nameLocation":"484:14:12","nodeType":"FunctionDefinition","parameters":{"id":3661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3660,"mutability":"mutable","name":"time","nameLocation":"507:4:12","nodeType":"VariableDeclaration","scope":3668,"src":"499:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3659,"name":"uint256","nodeType":"ElementaryTypeName","src":"499:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"498:14:12"},"returnParameters":{"id":3662,"nodeType":"ParameterList","parameters":[],"src":"522:0:12"},"scope":3678,"src":"475:82:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3676,"nodeType":"Block","src":"757:35:12","statements":[{"expression":{"id":3674,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"774:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3673,"id":3675,"nodeType":"Return","src":"767:18:12"}]},"documentation":{"id":3669,"nodeType":"StructuredDocumentation","src":"563:133:12","text":" @notice Gets the currentTime variable set in the Timer.\n @return uint256 for the current Testable timestamp."},"functionSelector":"29cb924d","id":3677,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentTime","nameLocation":"710:14:12","nodeType":"FunctionDefinition","parameters":{"id":3670,"nodeType":"ParameterList","parameters":[],"src":"724:2:12"},"returnParameters":{"id":3673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3677,"src":"748:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3671,"name":"uint256","nodeType":"ElementaryTypeName","src":"748:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"747:9:12"},"scope":3678,"src":"701:91:12","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":3679,"src":"152:642:12","usedErrors":[],"usedEvents":[]}],"src":"42:753:12"},"id":12},"@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol":{"ast":{"absolutePath":"@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol","exportedSymbols":{"AddressWhitelistInterface":[3704]},"id":3705,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":3680,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"42:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressWhitelistInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3704,"linearizedBaseContracts":[3704],"name":"AddressWhitelistInterface","nameLocation":"77:25:13","nodeType":"ContractDefinition","nodes":[{"functionSelector":"e43252d7","id":3685,"implemented":false,"kind":"function","modifiers":[],"name":"addToWhitelist","nameLocation":"118:14:13","nodeType":"FunctionDefinition","parameters":{"id":3683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3682,"mutability":"mutable","name":"newElement","nameLocation":"141:10:13","nodeType":"VariableDeclaration","scope":3685,"src":"133:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3681,"name":"address","nodeType":"ElementaryTypeName","src":"133:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"132:20:13"},"returnParameters":{"id":3684,"nodeType":"ParameterList","parameters":[],"src":"161:0:13"},"scope":3704,"src":"109:53:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8ab1d681","id":3690,"implemented":false,"kind":"function","modifiers":[],"name":"removeFromWhitelist","nameLocation":"177:19:13","nodeType":"FunctionDefinition","parameters":{"id":3688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3687,"mutability":"mutable","name":"newElement","nameLocation":"205:10:13","nodeType":"VariableDeclaration","scope":3690,"src":"197:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3686,"name":"address","nodeType":"ElementaryTypeName","src":"197:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"196:20:13"},"returnParameters":{"id":3689,"nodeType":"ParameterList","parameters":[],"src":"225:0:13"},"scope":3704,"src":"168:58:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3a3ab672","id":3697,"implemented":false,"kind":"function","modifiers":[],"name":"isOnWhitelist","nameLocation":"241:13:13","nodeType":"FunctionDefinition","parameters":{"id":3693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3692,"mutability":"mutable","name":"newElement","nameLocation":"263:10:13","nodeType":"VariableDeclaration","scope":3697,"src":"255:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3691,"name":"address","nodeType":"ElementaryTypeName","src":"255:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"254:20:13"},"returnParameters":{"id":3696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3697,"src":"298:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3694,"name":"bool","nodeType":"ElementaryTypeName","src":"298:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"297:6:13"},"scope":3704,"src":"232:72:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d01f63f5","id":3703,"implemented":false,"kind":"function","modifiers":[],"name":"getWhitelist","nameLocation":"319:12:13","nodeType":"FunctionDefinition","parameters":{"id":3698,"nodeType":"ParameterList","parameters":[],"src":"331:2:13"},"returnParameters":{"id":3702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3703,"src":"357:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3699,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3700,"nodeType":"ArrayTypeName","src":"357:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"356:18:13"},"scope":3704,"src":"310:65:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3705,"src":"67:310:13","usedErrors":[],"usedEvents":[]}],"src":"42:336:13"},"id":13},"@uma/core/contracts/common/interfaces/ExpandedIERC20.sol":{"ast":{"absolutePath":"@uma/core/contracts/common/interfaces/ExpandedIERC20.sol","exportedSymbols":{"ExpandedIERC20":[3752],"IERC20":[190]},"id":3753,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":3706,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"42:23:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":3707,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3753,"sourceUnit":191,"src":"67:56:14","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3709,"name":"IERC20","nameLocations":["232:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":190,"src":"232:6:14"},"id":3710,"nodeType":"InheritanceSpecifier","src":"232:6:14"}],"canonicalName":"ExpandedIERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":3708,"nodeType":"StructuredDocumentation","src":"125:70:14","text":" @title ERC20 interface that includes burn and mint methods."},"fullyImplemented":false,"id":3752,"linearizedBaseContracts":[3752,190],"name":"ExpandedIERC20","nameLocation":"214:14:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3711,"nodeType":"StructuredDocumentation","src":"245:169:14","text":" @notice Burns a specific amount of the caller's tokens.\n @dev Only burns the caller's tokens, so it is safe to leave this method permissionless."},"functionSelector":"42966c68","id":3716,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"428:4:14","nodeType":"FunctionDefinition","parameters":{"id":3714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3713,"mutability":"mutable","name":"value","nameLocation":"441:5:14","nodeType":"VariableDeclaration","scope":3716,"src":"433:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3712,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"432:15:14"},"returnParameters":{"id":3715,"nodeType":"ParameterList","parameters":[],"src":"464:0:14"},"scope":3752,"src":"419:46:14","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":3717,"nodeType":"StructuredDocumentation","src":"471:165:14","text":" @dev Burns `value` tokens owned by `recipient`.\n @param recipient address to burn tokens from.\n @param value amount of tokens to burn."},"functionSelector":"79cc6790","id":3726,"implemented":false,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"650:8:14","nodeType":"FunctionDefinition","parameters":{"id":3722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3719,"mutability":"mutable","name":"recipient","nameLocation":"667:9:14","nodeType":"VariableDeclaration","scope":3726,"src":"659:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3718,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3721,"mutability":"mutable","name":"value","nameLocation":"686:5:14","nodeType":"VariableDeclaration","scope":3726,"src":"678:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3720,"name":"uint256","nodeType":"ElementaryTypeName","src":"678:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:34:14"},"returnParameters":{"id":3725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3726,"src":"719:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3723,"name":"bool","nodeType":"ElementaryTypeName","src":"719:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"718:6:14"},"scope":3752,"src":"641:84:14","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":3727,"nodeType":"StructuredDocumentation","src":"731:185:14","text":" @notice Mints tokens and adds them to the balance of the `to` address.\n @dev This method should be permissioned to only allow designated parties to mint tokens."},"functionSelector":"40c10f19","id":3736,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"930:4:14","nodeType":"FunctionDefinition","parameters":{"id":3732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3729,"mutability":"mutable","name":"to","nameLocation":"943:2:14","nodeType":"VariableDeclaration","scope":3736,"src":"935:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3728,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3731,"mutability":"mutable","name":"value","nameLocation":"955:5:14","nodeType":"VariableDeclaration","scope":3736,"src":"947:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3730,"name":"uint256","nodeType":"ElementaryTypeName","src":"947:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"934:27:14"},"returnParameters":{"id":3735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3736,"src":"988:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3733,"name":"bool","nodeType":"ElementaryTypeName","src":"988:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"987:6:14"},"scope":3752,"src":"921:73:14","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"functionSelector":"983b2d56","id":3741,"implemented":false,"kind":"function","modifiers":[],"name":"addMinter","nameLocation":"1009:9:14","nodeType":"FunctionDefinition","parameters":{"id":3739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3738,"mutability":"mutable","name":"account","nameLocation":"1027:7:14","nodeType":"VariableDeclaration","scope":3741,"src":"1019:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3737,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1018:17:14"},"returnParameters":{"id":3740,"nodeType":"ParameterList","parameters":[],"src":"1052:0:14"},"scope":3752,"src":"1000:53:14","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"functionSelector":"f44637ba","id":3746,"implemented":false,"kind":"function","modifiers":[],"name":"addBurner","nameLocation":"1068:9:14","nodeType":"FunctionDefinition","parameters":{"id":3744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3743,"mutability":"mutable","name":"account","nameLocation":"1086:7:14","nodeType":"VariableDeclaration","scope":3746,"src":"1078:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3742,"name":"address","nodeType":"ElementaryTypeName","src":"1078:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1077:17:14"},"returnParameters":{"id":3745,"nodeType":"ParameterList","parameters":[],"src":"1111:0:14"},"scope":3752,"src":"1059:53:14","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"functionSelector":"73cc802a","id":3751,"implemented":false,"kind":"function","modifiers":[],"name":"resetOwner","nameLocation":"1127:10:14","nodeType":"FunctionDefinition","parameters":{"id":3749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3748,"mutability":"mutable","name":"account","nameLocation":"1146:7:14","nodeType":"VariableDeclaration","scope":3751,"src":"1138:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3747,"name":"address","nodeType":"ElementaryTypeName","src":"1138:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1137:17:14"},"returnParameters":{"id":3750,"nodeType":"ParameterList","parameters":[],"src":"1171:0:14"},"scope":3752,"src":"1118:54:14","stateMutability":"nonpayable","virtual":true,"visibility":"external"}],"scope":3753,"src":"196:978:14","usedErrors":[],"usedEvents":[124,133]}],"src":"42:1133:14"},"id":14},"@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol":{"ast":{"absolutePath":"@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol","exportedSymbols":{"OptimisticOracleConstraints":[3806],"OracleInterfaces":[3801]},"id":3807,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":3754,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"42:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"OracleInterfaces","contractDependencies":[],"contractKind":"library","documentation":{"id":3755,"nodeType":"StructuredDocumentation","src":"67:102:15","text":" @title Stores common interface names used throughout the DVM by registration in the Finder."},"fullyImplemented":true,"id":3801,"linearizedBaseContracts":[3801],"name":"OracleInterfaces","nameLocation":"178:16:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"f24a534e","id":3758,"mutability":"constant","name":"Oracle","nameLocation":"225:6:15","nodeType":"VariableDeclaration","scope":3801,"src":"201:41:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3756,"name":"bytes32","nodeType":"ElementaryTypeName","src":"201:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"4f7261636c65","id":3757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"234:8:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a4461ab9f0dcef4a35a8660e8bbb361ae4c140fabb5b8c363bd6282ded34a90","typeString":"literal_string \"Oracle\""},"value":"Oracle"},"visibility":"public"},{"constant":true,"functionSelector":"4f4a180b","id":3761,"mutability":"constant","name":"IdentifierWhitelist","nameLocation":"272:19:15","nodeType":"VariableDeclaration","scope":3801,"src":"248:67:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3759,"name":"bytes32","nodeType":"ElementaryTypeName","src":"248:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"4964656e74696669657257686974656c697374","id":3760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"294:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_00d9d04470dd3fd336d150abd987b1b33f1c6b92e935259bb901f4c9ca28ddf4","typeString":"literal_string \"IdentifierWhitelist\""},"value":"IdentifierWhitelist"},"visibility":"public"},{"constant":true,"functionSelector":"42e90c33","id":3764,"mutability":"constant","name":"Store","nameLocation":"345:5:15","nodeType":"VariableDeclaration","scope":3801,"src":"321:39:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3762,"name":"bytes32","nodeType":"ElementaryTypeName","src":"321:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"53746f7265","id":3763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"353:7:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_f9742a6ab27efbeed38a3a36aac403fe0810a4cdb9e8328d15bdcd1c87e76672","typeString":"literal_string \"Store\""},"value":"Store"},"visibility":"public"},{"constant":true,"functionSelector":"2a71e5b3","id":3767,"mutability":"constant","name":"FinancialContractsAdmin","nameLocation":"390:23:15","nodeType":"VariableDeclaration","scope":3801,"src":"366:75:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3765,"name":"bytes32","nodeType":"ElementaryTypeName","src":"366:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"46696e616e6369616c436f6e74726163747341646d696e","id":3766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"416:25:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_bdecf6c7158bdf4679c9cd47427254674db861278f5aafe09a81927b0ddf85aa","typeString":"literal_string \"FinancialContractsAdmin\""},"value":"FinancialContractsAdmin"},"visibility":"public"},{"constant":true,"functionSelector":"7db9743b","id":3770,"mutability":"constant","name":"Registry","nameLocation":"471:8:15","nodeType":"VariableDeclaration","scope":3801,"src":"447:45:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3768,"name":"bytes32","nodeType":"ElementaryTypeName","src":"447:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"5265676973747279","id":3769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"482:10:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_8c53ae70b0aa86068023c633abcdda89c433a8a76949ea111f756c171fa23663","typeString":"literal_string \"Registry\""},"value":"Registry"},"visibility":"public"},{"constant":true,"functionSelector":"598dd097","id":3773,"mutability":"constant","name":"CollateralWhitelist","nameLocation":"522:19:15","nodeType":"VariableDeclaration","scope":3801,"src":"498:67:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3771,"name":"bytes32","nodeType":"ElementaryTypeName","src":"498:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"436f6c6c61746572616c57686974656c697374","id":3772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"544:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e9a52feae6648b39bfdb0a8523b0b3da0307731129fd6f0d46a73b43c2989f8f","typeString":"literal_string \"CollateralWhitelist\""},"value":"CollateralWhitelist"},"visibility":"public"},{"constant":true,"functionSelector":"1a4dbd1c","id":3776,"mutability":"constant","name":"OptimisticOracle","nameLocation":"595:16:15","nodeType":"VariableDeclaration","scope":3801,"src":"571:61:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3774,"name":"bytes32","nodeType":"ElementaryTypeName","src":"571:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"4f7074696d69737469634f7261636c65","id":3775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"614:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b7f4a3af71357fd741bc7828f83ec6c49403c71c1a6875664530cb681f8b070","typeString":"literal_string \"OptimisticOracle\""},"value":"OptimisticOracle"},"visibility":"public"},{"constant":true,"functionSelector":"473e7ccd","id":3779,"mutability":"constant","name":"OptimisticOracleV2","nameLocation":"662:18:15","nodeType":"VariableDeclaration","scope":3801,"src":"638:65:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3777,"name":"bytes32","nodeType":"ElementaryTypeName","src":"638:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"4f7074696d69737469634f7261636c655632","id":3778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"683:20:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_616fa5636fbd5fcd7247bf502d2e39a0e864454c814e1628b3406d6d76dcc2d8","typeString":"literal_string \"OptimisticOracleV2\""},"value":"OptimisticOracleV2"},"visibility":"public"},{"constant":true,"functionSelector":"f02f8e83","id":3782,"mutability":"constant","name":"OptimisticOracleV3","nameLocation":"733:18:15","nodeType":"VariableDeclaration","scope":3801,"src":"709:65:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3780,"name":"bytes32","nodeType":"ElementaryTypeName","src":"709:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"4f7074696d69737469634f7261636c655633","id":3781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"754:20:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_97036b2b113c0bfaf3bfccc255bef8592a4b28b32635d93a9bec71299cd1e2c1","typeString":"literal_string \"OptimisticOracleV3\""},"value":"OptimisticOracleV3"},"visibility":"public"},{"constant":true,"functionSelector":"5fa2ef10","id":3785,"mutability":"constant","name":"Bridge","nameLocation":"804:6:15","nodeType":"VariableDeclaration","scope":3801,"src":"780:41:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"780:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"427269646765","id":3784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"813:8:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_7aa5ae620294318af92bf4e2b2a729646c932a80312a5fa630da993a2ef5cc10","typeString":"literal_string \"Bridge\""},"value":"Bridge"},"visibility":"public"},{"constant":true,"functionSelector":"079b6c63","id":3788,"mutability":"constant","name":"GenericHandler","nameLocation":"851:14:15","nodeType":"VariableDeclaration","scope":3801,"src":"827:57:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3786,"name":"bytes32","nodeType":"ElementaryTypeName","src":"827:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"47656e6572696348616e646c6572","id":3787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"868:16:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_0c852b6e1eb3d094b8b7ec20be5fb44aea5686ca74f54e2589153de1c87b6302","typeString":"literal_string \"GenericHandler\""},"value":"GenericHandler"},"visibility":"public"},{"constant":true,"functionSelector":"4596ac9b","id":3791,"mutability":"constant","name":"SkinnyOptimisticOracle","nameLocation":"914:22:15","nodeType":"VariableDeclaration","scope":3801,"src":"890:73:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3789,"name":"bytes32","nodeType":"ElementaryTypeName","src":"890:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"536b696e6e794f7074696d69737469634f7261636c65","id":3790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"939:24:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5783227a49dac1b3d7d5d8e80d9d37463f506ddc1045b867688aa7568f7d856b","typeString":"literal_string \"SkinnyOptimisticOracle\""},"value":"SkinnyOptimisticOracle"},"visibility":"public"},{"constant":true,"functionSelector":"1a0fbfb3","id":3794,"mutability":"constant","name":"ChildMessenger","nameLocation":"993:14:15","nodeType":"VariableDeclaration","scope":3801,"src":"969:57:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3792,"name":"bytes32","nodeType":"ElementaryTypeName","src":"969:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"4368696c644d657373656e676572","id":3793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1010:16:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_6677d1b6637fcf983cd26dcc1dc81de432550efa8c3484b1099189803b59f9e9","typeString":"literal_string \"ChildMessenger\""},"value":"ChildMessenger"},"visibility":"public"},{"constant":true,"functionSelector":"7608ea2f","id":3797,"mutability":"constant","name":"OracleHub","nameLocation":"1056:9:15","nodeType":"VariableDeclaration","scope":3801,"src":"1032:47:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1032:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"4f7261636c65487562","id":3796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1068:11:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ae3a082c61a7379e2280f3356a5131507d9829d222d853bfa7c9fe1200dd040","typeString":"literal_string \"OracleHub\""},"value":"OracleHub"},"visibility":"public"},{"constant":true,"functionSelector":"8adca47f","id":3800,"mutability":"constant","name":"OracleSpoke","nameLocation":"1109:11:15","nodeType":"VariableDeclaration","scope":3801,"src":"1085:51:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3798,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1085:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"4f7261636c6553706f6b65","id":3799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1123:13:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_fa6c3ccbd43e09dd0b7bf91a760bebaf6409bb7669b007983fb1993c9a18948d","typeString":"literal_string \"OracleSpoke\""},"value":"OracleSpoke"},"visibility":"public"}],"scope":3807,"src":"170:969:15","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"OptimisticOracleConstraints","contractDependencies":[],"contractKind":"library","documentation":{"id":3802,"nodeType":"StructuredDocumentation","src":"1141:93:15","text":" @title Commonly re-used values for contracts associated with the OptimisticOracle."},"fullyImplemented":true,"id":3806,"linearizedBaseContracts":[3806],"name":"OptimisticOracleConstraints","nameLocation":"1243:27:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"c371dda7","id":3805,"mutability":"constant","name":"ancillaryBytesLimit","nameLocation":"1737:19:15","nodeType":"VariableDeclaration","scope":3806,"src":"1713:50:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3803,"name":"uint256","nodeType":"ElementaryTypeName","src":"1713:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"38313932","id":3804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:4:15","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"value":"8192"},"visibility":"public"}],"scope":3807,"src":"1235:531:15","usedErrors":[],"usedEvents":[]}],"src":"42:1725:15"},"id":15},"@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol":{"ast":{"absolutePath":"@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol","exportedSymbols":{"FinderInterface":[3826]},"id":3827,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":3808,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"42:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"FinderInterface","contractDependencies":[],"contractKind":"interface","documentation":{"id":3809,"nodeType":"StructuredDocumentation","src":"67:144:16","text":" @title Provides addresses of the live contracts implementing certain interfaces.\n @dev Examples are the Oracle or Store interfaces."},"fullyImplemented":false,"id":3826,"linearizedBaseContracts":[3826],"name":"FinderInterface","nameLocation":"222:15:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3810,"nodeType":"StructuredDocumentation","src":"244:300:16","text":" @notice Updates the address of the contract that implements `interfaceName`.\n @param interfaceName bytes32 encoding of the interface name that is either changed or registered.\n @param implementationAddress address of the deployed contract that implements the interface."},"functionSelector":"31f9665e","id":3817,"implemented":false,"kind":"function","modifiers":[],"name":"changeImplementationAddress","nameLocation":"558:27:16","nodeType":"FunctionDefinition","parameters":{"id":3815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3812,"mutability":"mutable","name":"interfaceName","nameLocation":"594:13:16","nodeType":"VariableDeclaration","scope":3817,"src":"586:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3811,"name":"bytes32","nodeType":"ElementaryTypeName","src":"586:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3814,"mutability":"mutable","name":"implementationAddress","nameLocation":"617:21:16","nodeType":"VariableDeclaration","scope":3817,"src":"609:29:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3813,"name":"address","nodeType":"ElementaryTypeName","src":"609:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"585:54:16"},"returnParameters":{"id":3816,"nodeType":"ParameterList","parameters":[],"src":"648:0:16"},"scope":3826,"src":"549:100:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3818,"nodeType":"StructuredDocumentation","src":"655:250:16","text":" @notice Gets the address of the contract that implements the given `interfaceName`.\n @param interfaceName queried interface.\n @return implementationAddress address of the deployed contract that implements the interface."},"functionSelector":"aafd5e40","id":3825,"implemented":false,"kind":"function","modifiers":[],"name":"getImplementationAddress","nameLocation":"919:24:16","nodeType":"FunctionDefinition","parameters":{"id":3821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3820,"mutability":"mutable","name":"interfaceName","nameLocation":"952:13:16","nodeType":"VariableDeclaration","scope":3825,"src":"944:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3819,"name":"bytes32","nodeType":"ElementaryTypeName","src":"944:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"943:23:16"},"returnParameters":{"id":3824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3825,"src":"990:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3822,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:9:16"},"scope":3826,"src":"910:89:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3827,"src":"212:789:16","usedErrors":[],"usedEvents":[]}],"src":"42:960:16"},"id":16},"@uma/core/contracts/data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol":{"ast":{"absolutePath":"@uma/core/contracts/data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol","exportedSymbols":{"IdentifierWhitelistInterface":[3850]},"id":3851,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":3828,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"42:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IdentifierWhitelistInterface","contractDependencies":[],"contractKind":"interface","documentation":{"id":3829,"nodeType":"StructuredDocumentation","src":"67:107:17","text":" @title Interface for whitelists of supported identifiers that the oracle can provide prices for."},"fullyImplemented":false,"id":3850,"linearizedBaseContracts":[3850],"name":"IdentifierWhitelistInterface","nameLocation":"185:28:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3830,"nodeType":"StructuredDocumentation","src":"220:242:17","text":" @notice Adds the provided identifier as a supported identifier.\n @dev Price requests using this identifier will succeed after this call.\n @param identifier bytes32 encoding of the string identifier. Eg: BTC/USD."},"functionSelector":"10a7e201","id":3835,"implemented":false,"kind":"function","modifiers":[],"name":"addSupportedIdentifier","nameLocation":"476:22:17","nodeType":"FunctionDefinition","parameters":{"id":3833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3832,"mutability":"mutable","name":"identifier","nameLocation":"507:10:17","nodeType":"VariableDeclaration","scope":3835,"src":"499:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3831,"name":"bytes32","nodeType":"ElementaryTypeName","src":"499:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"498:20:17"},"returnParameters":{"id":3834,"nodeType":"ParameterList","parameters":[],"src":"527:0:17"},"scope":3850,"src":"467:61:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3836,"nodeType":"StructuredDocumentation","src":"534:239:17","text":" @notice Removes the identifier from the whitelist.\n @dev Price requests using this identifier will no longer succeed after this call.\n @param identifier bytes32 encoding of the string identifier. Eg: BTC/USD."},"functionSelector":"8e0d3ca7","id":3841,"implemented":false,"kind":"function","modifiers":[],"name":"removeSupportedIdentifier","nameLocation":"787:25:17","nodeType":"FunctionDefinition","parameters":{"id":3839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3838,"mutability":"mutable","name":"identifier","nameLocation":"821:10:17","nodeType":"VariableDeclaration","scope":3841,"src":"813:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3837,"name":"bytes32","nodeType":"ElementaryTypeName","src":"813:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"812:20:17"},"returnParameters":{"id":3840,"nodeType":"ParameterList","parameters":[],"src":"841:0:17"},"scope":3850,"src":"778:64:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3842,"nodeType":"StructuredDocumentation","src":"848:218:17","text":" @notice Checks whether an identifier is on the whitelist.\n @param identifier bytes32 encoding of the string identifier. Eg: BTC/USD.\n @return bool if the identifier is supported (or not)."},"functionSelector":"90978d1b","id":3849,"implemented":false,"kind":"function","modifiers":[],"name":"isIdentifierSupported","nameLocation":"1080:21:17","nodeType":"FunctionDefinition","parameters":{"id":3845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3844,"mutability":"mutable","name":"identifier","nameLocation":"1110:10:17","nodeType":"VariableDeclaration","scope":3849,"src":"1102:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3843,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1102:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1101:20:17"},"returnParameters":{"id":3848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3849,"src":"1145:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3846,"name":"bool","nodeType":"ElementaryTypeName","src":"1145:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1144:6:17"},"scope":3850,"src":"1071:80:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3851,"src":"175:978:17","usedErrors":[],"usedEvents":[]}],"src":"42:1112:17"},"id":17},"@uma/core/contracts/data-verification-mechanism/interfaces/StoreInterface.sol":{"ast":{"absolutePath":"@uma/core/contracts/data-verification-mechanism/interfaces/StoreInterface.sol","exportedSymbols":{"FixedPoint":[3491],"IERC20":[190],"SafeMath":[1794],"SignedSafeMath":[1858],"StoreInterface":[3895]},"id":3896,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":3852,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"42:23:18"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":3853,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3896,"sourceUnit":191,"src":"67:56:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uma/core/contracts/common/implementation/FixedPoint.sol","file":"../../common/implementation/FixedPoint.sol","id":3854,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3896,"sourceUnit":3492,"src":"124:52:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"StoreInterface","contractDependencies":[],"contractKind":"interface","documentation":{"id":3855,"nodeType":"StructuredDocumentation","src":"178:107:18","text":" @title Interface that allows financial contracts to pay oracle fees for their use of the system."},"fullyImplemented":false,"id":3895,"linearizedBaseContracts":[3895],"name":"StoreInterface","nameLocation":"296:14:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3856,"nodeType":"StructuredDocumentation","src":"317:130:18","text":" @notice Pays Oracle fees in ETH to the store.\n @dev To be used by contracts whose margin currency is ETH."},"functionSelector":"cd3a9b24","id":3859,"implemented":false,"kind":"function","modifiers":[],"name":"payOracleFees","nameLocation":"461:13:18","nodeType":"FunctionDefinition","parameters":{"id":3857,"nodeType":"ParameterList","parameters":[],"src":"474:2:18"},"returnParameters":{"id":3858,"nodeType":"ParameterList","parameters":[],"src":"493:0:18"},"scope":3895,"src":"452:42:18","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3860,"nodeType":"StructuredDocumentation","src":"500:351:18","text":" @notice Pays oracle fees in the margin currency, erc20Address, to the store.\n @dev To be used if the margin currency is an ERC20 token rather than ETH.\n @param erc20Address address of the ERC20 token used to pay the fee.\n @param amount number of tokens to transfer. An approval for at least this amount must exist."},"functionSelector":"8659d232","id":3868,"implemented":false,"kind":"function","modifiers":[],"name":"payOracleFeesErc20","nameLocation":"865:18:18","nodeType":"FunctionDefinition","parameters":{"id":3866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3862,"mutability":"mutable","name":"erc20Address","nameLocation":"892:12:18","nodeType":"VariableDeclaration","scope":3868,"src":"884:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3861,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3865,"mutability":"mutable","name":"amount","nameLocation":"935:6:18","nodeType":"VariableDeclaration","scope":3868,"src":"906:35:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_calldata_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":3864,"nodeType":"UserDefinedTypeName","pathNode":{"id":3863,"name":"FixedPoint.Unsigned","nameLocations":["906:10:18","917:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"906:19:18"},"referencedDeclaration":1877,"src":"906:19:18","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"883:59:18"},"returnParameters":{"id":3867,"nodeType":"ParameterList","parameters":[],"src":"951:0:18"},"scope":3895,"src":"856:96:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3869,"nodeType":"StructuredDocumentation","src":"958:597:18","text":" @notice Computes the regular oracle fees that a contract should pay for a period.\n @param startTime defines the beginning time from which the fee is paid.\n @param endTime end time until which the fee is paid.\n @param pfc \"profit from corruption\", or the maximum amount of margin currency that a\n token sponsor could extract from the contract through corrupting the price feed in their favor.\n @return regularFee amount owed for the duration from start to end time for the given pfc.\n @return latePenalty for paying the fee after the deadline."},"functionSelector":"74201feb","id":3885,"implemented":false,"kind":"function","modifiers":[],"name":"computeRegularFee","nameLocation":"1569:17:18","nodeType":"FunctionDefinition","parameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3871,"mutability":"mutable","name":"startTime","nameLocation":"1604:9:18","nodeType":"VariableDeclaration","scope":3885,"src":"1596:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3870,"name":"uint256","nodeType":"ElementaryTypeName","src":"1596:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3873,"mutability":"mutable","name":"endTime","nameLocation":"1631:7:18","nodeType":"VariableDeclaration","scope":3885,"src":"1623:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3872,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3876,"mutability":"mutable","name":"pfc","nameLocation":"1677:3:18","nodeType":"VariableDeclaration","scope":3885,"src":"1648:32:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_calldata_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":3875,"nodeType":"UserDefinedTypeName","pathNode":{"id":3874,"name":"FixedPoint.Unsigned","nameLocations":["1648:10:18","1659:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"1648:19:18"},"referencedDeclaration":1877,"src":"1648:19:18","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"1586:100:18"},"returnParameters":{"id":3884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3880,"mutability":"mutable","name":"regularFee","nameLocation":"1737:10:18","nodeType":"VariableDeclaration","scope":3885,"src":"1710:37:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":3879,"nodeType":"UserDefinedTypeName","pathNode":{"id":3878,"name":"FixedPoint.Unsigned","nameLocations":["1710:10:18","1721:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"1710:19:18"},"referencedDeclaration":1877,"src":"1710:19:18","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"},{"constant":false,"id":3883,"mutability":"mutable","name":"latePenalty","nameLocation":"1776:11:18","nodeType":"VariableDeclaration","scope":3885,"src":"1749:38:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":3882,"nodeType":"UserDefinedTypeName","pathNode":{"id":3881,"name":"FixedPoint.Unsigned","nameLocations":["1749:10:18","1760:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"1749:19:18"},"referencedDeclaration":1877,"src":"1749:19:18","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"1709:79:18"},"scope":3895,"src":"1560:229:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3886,"nodeType":"StructuredDocumentation","src":"1795:191:18","text":" @notice Computes the final oracle fees that a contract should pay at settlement.\n @param currency token used to pay the final fee.\n @return finalFee amount due."},"functionSelector":"5b97aadd","id":3894,"implemented":false,"kind":"function","modifiers":[],"name":"computeFinalFee","nameLocation":"2000:15:18","nodeType":"FunctionDefinition","parameters":{"id":3889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3888,"mutability":"mutable","name":"currency","nameLocation":"2024:8:18","nodeType":"VariableDeclaration","scope":3894,"src":"2016:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3887,"name":"address","nodeType":"ElementaryTypeName","src":"2016:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2015:18:18"},"returnParameters":{"id":3893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3894,"src":"2057:26:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned"},"typeName":{"id":3891,"nodeType":"UserDefinedTypeName","pathNode":{"id":3890,"name":"FixedPoint.Unsigned","nameLocations":["2057:10:18","2068:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"2057:19:18"},"referencedDeclaration":1877,"src":"2057:19:18","typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_storage_ptr","typeString":"struct FixedPoint.Unsigned"}},"visibility":"internal"}],"src":"2056:28:18"},"scope":3895,"src":"1991:94:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3896,"src":"286:1801:18","usedErrors":[],"usedEvents":[]}],"src":"42:2046:18"},"id":18},"@uma/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleInterface.sol":{"ast":{"absolutePath":"@uma/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleInterface.sol","exportedSymbols":{"FinderInterface":[3826],"IERC20":[190],"OptimisticOracleInterface":[4223]},"id":4224,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":3897,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"42:23:19"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":3898,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4224,"sourceUnit":191,"src":"67:56:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol","file":"../../data-verification-mechanism/interfaces/FinderInterface.sol","id":3899,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4224,"sourceUnit":3827,"src":"124:74:19","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"OptimisticOracleInterface","contractDependencies":[],"contractKind":"contract","documentation":{"id":3900,"nodeType":"StructuredDocumentation","src":"200:175:19","text":" @title Financial contract facing Oracle interface.\n @dev Interface used by financial contracts to interact with the Oracle. Voters will use a different interface."},"fullyImplemented":false,"id":4223,"linearizedBaseContracts":[4223],"name":"OptimisticOracleInterface","nameLocation":"394:25:19","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"f1679315ff325c257a944e0ca1bfe7b26616039e9511f9610d4ba3eca851027b","id":3916,"name":"RequestPrice","nameLocation":"432:12:19","nodeType":"EventDefinition","parameters":{"id":3915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3902,"indexed":true,"mutability":"mutable","name":"requester","nameLocation":"470:9:19","nodeType":"VariableDeclaration","scope":3916,"src":"454:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3901,"name":"address","nodeType":"ElementaryTypeName","src":"454:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3904,"indexed":false,"mutability":"mutable","name":"identifier","nameLocation":"497:10:19","nodeType":"VariableDeclaration","scope":3916,"src":"489:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3903,"name":"bytes32","nodeType":"ElementaryTypeName","src":"489:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3906,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"525:9:19","nodeType":"VariableDeclaration","scope":3916,"src":"517:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3905,"name":"uint256","nodeType":"ElementaryTypeName","src":"517:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3908,"indexed":false,"mutability":"mutable","name":"ancillaryData","nameLocation":"550:13:19","nodeType":"VariableDeclaration","scope":3916,"src":"544:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3907,"name":"bytes","nodeType":"ElementaryTypeName","src":"544:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3910,"indexed":false,"mutability":"mutable","name":"currency","nameLocation":"581:8:19","nodeType":"VariableDeclaration","scope":3916,"src":"573:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3909,"name":"address","nodeType":"ElementaryTypeName","src":"573:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3912,"indexed":false,"mutability":"mutable","name":"reward","nameLocation":"607:6:19","nodeType":"VariableDeclaration","scope":3916,"src":"599:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3911,"name":"uint256","nodeType":"ElementaryTypeName","src":"599:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3914,"indexed":false,"mutability":"mutable","name":"finalFee","nameLocation":"631:8:19","nodeType":"VariableDeclaration","scope":3916,"src":"623:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3913,"name":"uint256","nodeType":"ElementaryTypeName","src":"623:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"444:201:19"},"src":"426:220:19"},{"anonymous":false,"eventSelector":"6e51dd00371aabffa82cd401592f76ed51e98a9ea4b58751c70463a2c78b5ca1","id":3934,"name":"ProposePrice","nameLocation":"657:12:19","nodeType":"EventDefinition","parameters":{"id":3933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3918,"indexed":true,"mutability":"mutable","name":"requester","nameLocation":"695:9:19","nodeType":"VariableDeclaration","scope":3934,"src":"679:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3917,"name":"address","nodeType":"ElementaryTypeName","src":"679:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3920,"indexed":true,"mutability":"mutable","name":"proposer","nameLocation":"730:8:19","nodeType":"VariableDeclaration","scope":3934,"src":"714:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3919,"name":"address","nodeType":"ElementaryTypeName","src":"714:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3922,"indexed":false,"mutability":"mutable","name":"identifier","nameLocation":"756:10:19","nodeType":"VariableDeclaration","scope":3934,"src":"748:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3921,"name":"bytes32","nodeType":"ElementaryTypeName","src":"748:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3924,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"784:9:19","nodeType":"VariableDeclaration","scope":3934,"src":"776:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3923,"name":"uint256","nodeType":"ElementaryTypeName","src":"776:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3926,"indexed":false,"mutability":"mutable","name":"ancillaryData","nameLocation":"809:13:19","nodeType":"VariableDeclaration","scope":3934,"src":"803:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3925,"name":"bytes","nodeType":"ElementaryTypeName","src":"803:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3928,"indexed":false,"mutability":"mutable","name":"proposedPrice","nameLocation":"839:13:19","nodeType":"VariableDeclaration","scope":3934,"src":"832:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3927,"name":"int256","nodeType":"ElementaryTypeName","src":"832:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3930,"indexed":false,"mutability":"mutable","name":"expirationTimestamp","nameLocation":"870:19:19","nodeType":"VariableDeclaration","scope":3934,"src":"862:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3929,"name":"uint256","nodeType":"ElementaryTypeName","src":"862:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3932,"indexed":false,"mutability":"mutable","name":"currency","nameLocation":"907:8:19","nodeType":"VariableDeclaration","scope":3934,"src":"899:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3931,"name":"address","nodeType":"ElementaryTypeName","src":"899:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"669:252:19"},"src":"651:271:19"},{"anonymous":false,"eventSelector":"5165909c3d1c01c5d1e121ac6f6d01dda1ba24bc9e1f975b5a375339c15be7f3","id":3950,"name":"DisputePrice","nameLocation":"933:12:19","nodeType":"EventDefinition","parameters":{"id":3949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3936,"indexed":true,"mutability":"mutable","name":"requester","nameLocation":"971:9:19","nodeType":"VariableDeclaration","scope":3950,"src":"955:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3935,"name":"address","nodeType":"ElementaryTypeName","src":"955:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3938,"indexed":true,"mutability":"mutable","name":"proposer","nameLocation":"1006:8:19","nodeType":"VariableDeclaration","scope":3950,"src":"990:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3937,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3940,"indexed":true,"mutability":"mutable","name":"disputer","nameLocation":"1040:8:19","nodeType":"VariableDeclaration","scope":3950,"src":"1024:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3939,"name":"address","nodeType":"ElementaryTypeName","src":"1024:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3942,"indexed":false,"mutability":"mutable","name":"identifier","nameLocation":"1066:10:19","nodeType":"VariableDeclaration","scope":3950,"src":"1058:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3941,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1058:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3944,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1094:9:19","nodeType":"VariableDeclaration","scope":3950,"src":"1086:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3943,"name":"uint256","nodeType":"ElementaryTypeName","src":"1086:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3946,"indexed":false,"mutability":"mutable","name":"ancillaryData","nameLocation":"1119:13:19","nodeType":"VariableDeclaration","scope":3950,"src":"1113:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3945,"name":"bytes","nodeType":"ElementaryTypeName","src":"1113:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3948,"indexed":false,"mutability":"mutable","name":"proposedPrice","nameLocation":"1149:13:19","nodeType":"VariableDeclaration","scope":3950,"src":"1142:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3947,"name":"int256","nodeType":"ElementaryTypeName","src":"1142:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"945:223:19"},"src":"927:242:19"},{"anonymous":false,"eventSelector":"3f384afb4bd9f0aef0298c80399950011420eb33b0e1a750b20966270247b9a0","id":3968,"name":"Settle","nameLocation":"1180:6:19","nodeType":"EventDefinition","parameters":{"id":3967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3952,"indexed":true,"mutability":"mutable","name":"requester","nameLocation":"1212:9:19","nodeType":"VariableDeclaration","scope":3968,"src":"1196:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3951,"name":"address","nodeType":"ElementaryTypeName","src":"1196:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3954,"indexed":true,"mutability":"mutable","name":"proposer","nameLocation":"1247:8:19","nodeType":"VariableDeclaration","scope":3968,"src":"1231:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3953,"name":"address","nodeType":"ElementaryTypeName","src":"1231:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3956,"indexed":true,"mutability":"mutable","name":"disputer","nameLocation":"1281:8:19","nodeType":"VariableDeclaration","scope":3968,"src":"1265:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3955,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3958,"indexed":false,"mutability":"mutable","name":"identifier","nameLocation":"1307:10:19","nodeType":"VariableDeclaration","scope":3968,"src":"1299:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3957,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1299:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3960,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1335:9:19","nodeType":"VariableDeclaration","scope":3968,"src":"1327:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3959,"name":"uint256","nodeType":"ElementaryTypeName","src":"1327:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3962,"indexed":false,"mutability":"mutable","name":"ancillaryData","nameLocation":"1360:13:19","nodeType":"VariableDeclaration","scope":3968,"src":"1354:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3961,"name":"bytes","nodeType":"ElementaryTypeName","src":"1354:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3964,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"1390:5:19","nodeType":"VariableDeclaration","scope":3968,"src":"1383:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3963,"name":"int256","nodeType":"ElementaryTypeName","src":"1383:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3966,"indexed":false,"mutability":"mutable","name":"payout","nameLocation":"1413:6:19","nodeType":"VariableDeclaration","scope":3968,"src":"1405:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3965,"name":"uint256","nodeType":"ElementaryTypeName","src":"1405:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:239:19"},"src":"1174:252:19"},{"canonicalName":"OptimisticOracleInterface.State","id":3976,"members":[{"id":3969,"name":"Invalid","nameLocation":"1510:7:19","nodeType":"EnumValue","src":"1510:7:19"},{"id":3970,"name":"Requested","nameLocation":"1547:9:19","nodeType":"EnumValue","src":"1547:9:19"},{"id":3971,"name":"Proposed","nameLocation":"1604:8:19","nodeType":"EnumValue","src":"1604:8:19"},{"id":3972,"name":"Expired","nameLocation":"1668:7:19","nodeType":"EnumValue","src":"1668:7:19"},{"id":3973,"name":"Disputed","nameLocation":"1727:8:19","nodeType":"EnumValue","src":"1727:8:19"},{"id":3974,"name":"Resolved","nameLocation":"1789:8:19","nodeType":"EnumValue","src":"1789:8:19"},{"id":3975,"name":"Settled","nameLocation":"1847:7:19","nodeType":"EnumValue","src":"1847:7:19"}],"name":"State","nameLocation":"1494:5:19","nodeType":"EnumDefinition","src":"1489:456:19"},{"canonicalName":"OptimisticOracleInterface.Request","id":4002,"members":[{"constant":false,"id":3978,"mutability":"mutable","name":"proposer","nameLocation":"2028:8:19","nodeType":"VariableDeclaration","scope":4002,"src":"2020:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3977,"name":"address","nodeType":"ElementaryTypeName","src":"2020:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3980,"mutability":"mutable","name":"disputer","nameLocation":"2082:8:19","nodeType":"VariableDeclaration","scope":4002,"src":"2074:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3979,"name":"address","nodeType":"ElementaryTypeName","src":"2074:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3983,"mutability":"mutable","name":"currency","nameLocation":"2135:8:19","nodeType":"VariableDeclaration","scope":4002,"src":"2128:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":3982,"nodeType":"UserDefinedTypeName","pathNode":{"id":3981,"name":"IERC20","nameLocations":["2128:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":190,"src":"2128:6:19"},"referencedDeclaration":190,"src":"2128:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3985,"mutability":"mutable","name":"settled","nameLocation":"2203:7:19","nodeType":"VariableDeclaration","scope":4002,"src":"2198:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3984,"name":"bool","nodeType":"ElementaryTypeName","src":"2198:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3987,"mutability":"mutable","name":"refundOnDispute","nameLocation":"2260:15:19","nodeType":"VariableDeclaration","scope":4002,"src":"2255:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3986,"name":"bool","nodeType":"ElementaryTypeName","src":"2255:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3989,"mutability":"mutable","name":"proposedPrice","nameLocation":"2361:13:19","nodeType":"VariableDeclaration","scope":4002,"src":"2354:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3988,"name":"int256","nodeType":"ElementaryTypeName","src":"2354:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3991,"mutability":"mutable","name":"resolvedPrice","nameLocation":"2429:13:19","nodeType":"VariableDeclaration","scope":4002,"src":"2422:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3990,"name":"int256","nodeType":"ElementaryTypeName","src":"2422:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3993,"mutability":"mutable","name":"expirationTime","nameLocation":"2507:14:19","nodeType":"VariableDeclaration","scope":4002,"src":"2499:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3992,"name":"uint256","nodeType":"ElementaryTypeName","src":"2499:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3995,"mutability":"mutable","name":"reward","nameLocation":"2600:6:19","nodeType":"VariableDeclaration","scope":4002,"src":"2592:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3994,"name":"uint256","nodeType":"ElementaryTypeName","src":"2592:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3997,"mutability":"mutable","name":"finalFee","nameLocation":"2688:8:19","nodeType":"VariableDeclaration","scope":4002,"src":"2680:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3996,"name":"uint256","nodeType":"ElementaryTypeName","src":"2680:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3999,"mutability":"mutable","name":"bond","nameLocation":"2772:4:19","nodeType":"VariableDeclaration","scope":4002,"src":"2764:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3998,"name":"uint256","nodeType":"ElementaryTypeName","src":"2764:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4001,"mutability":"mutable","name":"customLiveness","nameLocation":"2867:14:19","nodeType":"VariableDeclaration","scope":4002,"src":"2859:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4000,"name":"uint256","nodeType":"ElementaryTypeName","src":"2859:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Request","nameLocation":"2002:7:19","nodeType":"StructDefinition","scope":4223,"src":"1995:940:19","visibility":"public"},{"constant":true,"functionSelector":"c371dda7","id":4005,"mutability":"constant","name":"ancillaryBytesLimit","nameLocation":"3270:19:19","nodeType":"VariableDeclaration","scope":4223,"src":"3246:50:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4003,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"38313932","id":4004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3292:4:19","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"value":"8192"},"visibility":"public"},{"functionSelector":"fe4e1983","id":4010,"implemented":false,"kind":"function","modifiers":[],"name":"defaultLiveness","nameLocation":"3312:15:19","nodeType":"FunctionDefinition","parameters":{"id":4006,"nodeType":"ParameterList","parameters":[],"src":"3327:2:19"},"returnParameters":{"id":4009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4010,"src":"3361:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4007,"name":"uint256","nodeType":"ElementaryTypeName","src":"3361:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3360:9:19"},"scope":4223,"src":"3303:67:19","stateMutability":"view","virtual":true,"visibility":"external"},{"functionSelector":"b9a3c84c","id":4016,"implemented":false,"kind":"function","modifiers":[],"name":"finder","nameLocation":"3385:6:19","nodeType":"FunctionDefinition","parameters":{"id":4011,"nodeType":"ParameterList","parameters":[],"src":"3391:2:19"},"returnParameters":{"id":4015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4016,"src":"3425:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3826","typeString":"contract FinderInterface"},"typeName":{"id":4013,"nodeType":"UserDefinedTypeName","pathNode":{"id":4012,"name":"FinderInterface","nameLocations":["3425:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":3826,"src":"3425:15:19"},"referencedDeclaration":3826,"src":"3425:15:19","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3826","typeString":"contract FinderInterface"}},"visibility":"internal"}],"src":"3424:17:19"},"scope":4223,"src":"3376:66:19","stateMutability":"view","virtual":true,"visibility":"external"},{"functionSelector":"29cb924d","id":4021,"implemented":false,"kind":"function","modifiers":[],"name":"getCurrentTime","nameLocation":"3457:14:19","nodeType":"FunctionDefinition","parameters":{"id":4017,"nodeType":"ParameterList","parameters":[],"src":"3471:2:19"},"returnParameters":{"id":4020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4021,"src":"3505:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4018,"name":"uint256","nodeType":"ElementaryTypeName","src":"3505:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3504:9:19"},"scope":4223,"src":"3448:66:19","stateMutability":"view","virtual":true,"visibility":"external"},{"constant":false,"functionSelector":"9d866985","id":4026,"mutability":"mutable","name":"requests","nameLocation":"3647:8:19","nodeType":"VariableDeclaration","scope":4223,"src":"3612:43:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Request_$4002_storage_$","typeString":"mapping(bytes32 => struct OptimisticOracleInterface.Request)"},"typeName":{"id":4025,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4022,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3620:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"3612:27:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Request_$4002_storage_$","typeString":"mapping(bytes32 => struct OptimisticOracleInterface.Request)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4024,"nodeType":"UserDefinedTypeName","pathNode":{"id":4023,"name":"Request","nameLocations":["3631:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":4002,"src":"3631:7:19"},"referencedDeclaration":4002,"src":"3631:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$4002_storage_ptr","typeString":"struct OptimisticOracleInterface.Request"}}},"visibility":"public"},{"documentation":{"id":4027,"nodeType":"StructuredDocumentation","src":"3662:854:19","text":" @notice Requests a new price.\n @param identifier price identifier being requested.\n @param timestamp timestamp of the price being requested.\n @param ancillaryData ancillary data representing additional args being passed with the price request.\n @param currency ERC20 token used for payment of rewards and fees. Must be approved for use with the DVM.\n @param reward reward offered to a successful proposer. Will be pulled from the caller. Note: this can be 0,\n               which could make sense if the contract requests and proposes the value in the same call or\n               provides its own reward system.\n @return totalBond default bond (final fee) + final fee that the proposer and disputer will be required to pay.\n This can be changed with a subsequent call to setBond()."},"functionSelector":"11df92f1","id":4043,"implemented":false,"kind":"function","modifiers":[],"name":"requestPrice","nameLocation":"4530:12:19","nodeType":"FunctionDefinition","parameters":{"id":4039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4029,"mutability":"mutable","name":"identifier","nameLocation":"4560:10:19","nodeType":"VariableDeclaration","scope":4043,"src":"4552:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4028,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4552:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4031,"mutability":"mutable","name":"timestamp","nameLocation":"4588:9:19","nodeType":"VariableDeclaration","scope":4043,"src":"4580:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4030,"name":"uint256","nodeType":"ElementaryTypeName","src":"4580:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4033,"mutability":"mutable","name":"ancillaryData","nameLocation":"4620:13:19","nodeType":"VariableDeclaration","scope":4043,"src":"4607:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4032,"name":"bytes","nodeType":"ElementaryTypeName","src":"4607:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4036,"mutability":"mutable","name":"currency","nameLocation":"4650:8:19","nodeType":"VariableDeclaration","scope":4043,"src":"4643:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":4035,"nodeType":"UserDefinedTypeName","pathNode":{"id":4034,"name":"IERC20","nameLocations":["4643:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":190,"src":"4643:6:19"},"referencedDeclaration":190,"src":"4643:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4038,"mutability":"mutable","name":"reward","nameLocation":"4676:6:19","nodeType":"VariableDeclaration","scope":4043,"src":"4668:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4037,"name":"uint256","nodeType":"ElementaryTypeName","src":"4668:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4542:146:19"},"returnParameters":{"id":4042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4041,"mutability":"mutable","name":"totalBond","nameLocation":"4723:9:19","nodeType":"VariableDeclaration","scope":4043,"src":"4715:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4040,"name":"uint256","nodeType":"ElementaryTypeName","src":"4715:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4714:19:19"},"scope":4223,"src":"4521:213:19","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":4044,"nodeType":"StructuredDocumentation","src":"4740:516:19","text":" @notice Set the proposal bond associated with a price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @param bond custom bond amount to set.\n @return totalBond new bond + final fee that the proposer and disputer will be required to pay. This can be\n changed again with a subsequent call to setBond()."},"functionSelector":"ad5a755a","id":4057,"implemented":false,"kind":"function","modifiers":[],"name":"setBond","nameLocation":"5270:7:19","nodeType":"FunctionDefinition","parameters":{"id":4053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4046,"mutability":"mutable","name":"identifier","nameLocation":"5295:10:19","nodeType":"VariableDeclaration","scope":4057,"src":"5287:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4045,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5287:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4048,"mutability":"mutable","name":"timestamp","nameLocation":"5323:9:19","nodeType":"VariableDeclaration","scope":4057,"src":"5315:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4047,"name":"uint256","nodeType":"ElementaryTypeName","src":"5315:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4050,"mutability":"mutable","name":"ancillaryData","nameLocation":"5355:13:19","nodeType":"VariableDeclaration","scope":4057,"src":"5342:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4049,"name":"bytes","nodeType":"ElementaryTypeName","src":"5342:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4052,"mutability":"mutable","name":"bond","nameLocation":"5386:4:19","nodeType":"VariableDeclaration","scope":4057,"src":"5378:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4051,"name":"uint256","nodeType":"ElementaryTypeName","src":"5378:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5277:119:19"},"returnParameters":{"id":4056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4055,"mutability":"mutable","name":"totalBond","nameLocation":"5431:9:19","nodeType":"VariableDeclaration","scope":4057,"src":"5423:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4054,"name":"uint256","nodeType":"ElementaryTypeName","src":"5423:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5422:19:19"},"scope":4223,"src":"5261:181:19","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":4058,"nodeType":"StructuredDocumentation","src":"5448:545:19","text":" @notice Sets the request to refund the reward if the proposal is disputed. This can help to \"hedge\" the caller\n in the event of a dispute-caused delay. Note: in the event of a dispute, the winner still receives the other's\n bond, so there is still profit to be made even if the reward is refunded.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested."},"functionSelector":"91f58dcb","id":4067,"implemented":false,"kind":"function","modifiers":[],"name":"setRefundOnDispute","nameLocation":"6007:18:19","nodeType":"FunctionDefinition","parameters":{"id":4065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4060,"mutability":"mutable","name":"identifier","nameLocation":"6043:10:19","nodeType":"VariableDeclaration","scope":4067,"src":"6035:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4059,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6035:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4062,"mutability":"mutable","name":"timestamp","nameLocation":"6071:9:19","nodeType":"VariableDeclaration","scope":4067,"src":"6063:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4061,"name":"uint256","nodeType":"ElementaryTypeName","src":"6063:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4064,"mutability":"mutable","name":"ancillaryData","nameLocation":"6103:13:19","nodeType":"VariableDeclaration","scope":4067,"src":"6090:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4063,"name":"bytes","nodeType":"ElementaryTypeName","src":"6090:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6025:97:19"},"returnParameters":{"id":4066,"nodeType":"ParameterList","parameters":[],"src":"6139:0:19"},"scope":4223,"src":"5998:142:19","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":4068,"nodeType":"StructuredDocumentation","src":"6146:426:19","text":" @notice Sets a custom liveness value for the request. Liveness is the amount of time a proposal must wait before\n being auto-resolved.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @param customLiveness new custom liveness."},"functionSelector":"473c45fe","id":4079,"implemented":false,"kind":"function","modifiers":[],"name":"setCustomLiveness","nameLocation":"6586:17:19","nodeType":"FunctionDefinition","parameters":{"id":4077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4070,"mutability":"mutable","name":"identifier","nameLocation":"6621:10:19","nodeType":"VariableDeclaration","scope":4079,"src":"6613:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4069,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6613:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4072,"mutability":"mutable","name":"timestamp","nameLocation":"6649:9:19","nodeType":"VariableDeclaration","scope":4079,"src":"6641:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4071,"name":"uint256","nodeType":"ElementaryTypeName","src":"6641:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4074,"mutability":"mutable","name":"ancillaryData","nameLocation":"6681:13:19","nodeType":"VariableDeclaration","scope":4079,"src":"6668:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4073,"name":"bytes","nodeType":"ElementaryTypeName","src":"6668:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4076,"mutability":"mutable","name":"customLiveness","nameLocation":"6712:14:19","nodeType":"VariableDeclaration","scope":4079,"src":"6704:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4075,"name":"uint256","nodeType":"ElementaryTypeName","src":"6704:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6603:129:19"},"returnParameters":{"id":4078,"nodeType":"ParameterList","parameters":[],"src":"6749:0:19"},"scope":4223,"src":"6577:173:19","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":4080,"nodeType":"StructuredDocumentation","src":"6756:764:19","text":" @notice Proposes a price value on another address' behalf. Note: this address will receive any rewards that come\n from this proposal. However, any bonds are pulled from the caller.\n @param proposer address to set as the proposer.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @param proposedPrice price being proposed.\n @return totalBond the amount that's pulled from the caller's wallet as a bond. The bond will be returned to\n the proposer once settled if the proposal is correct."},"functionSelector":"7c82288f","id":4097,"implemented":false,"kind":"function","modifiers":[],"name":"proposePriceFor","nameLocation":"7534:15:19","nodeType":"FunctionDefinition","parameters":{"id":4093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4082,"mutability":"mutable","name":"proposer","nameLocation":"7567:8:19","nodeType":"VariableDeclaration","scope":4097,"src":"7559:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4081,"name":"address","nodeType":"ElementaryTypeName","src":"7559:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4084,"mutability":"mutable","name":"requester","nameLocation":"7593:9:19","nodeType":"VariableDeclaration","scope":4097,"src":"7585:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4083,"name":"address","nodeType":"ElementaryTypeName","src":"7585:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4086,"mutability":"mutable","name":"identifier","nameLocation":"7620:10:19","nodeType":"VariableDeclaration","scope":4097,"src":"7612:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4085,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7612:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4088,"mutability":"mutable","name":"timestamp","nameLocation":"7648:9:19","nodeType":"VariableDeclaration","scope":4097,"src":"7640:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4087,"name":"uint256","nodeType":"ElementaryTypeName","src":"7640:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4090,"mutability":"mutable","name":"ancillaryData","nameLocation":"7680:13:19","nodeType":"VariableDeclaration","scope":4097,"src":"7667:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4089,"name":"bytes","nodeType":"ElementaryTypeName","src":"7667:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4092,"mutability":"mutable","name":"proposedPrice","nameLocation":"7710:13:19","nodeType":"VariableDeclaration","scope":4097,"src":"7703:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4091,"name":"int256","nodeType":"ElementaryTypeName","src":"7703:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7549:180:19"},"returnParameters":{"id":4096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4095,"mutability":"mutable","name":"totalBond","nameLocation":"7762:9:19","nodeType":"VariableDeclaration","scope":4097,"src":"7754:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4094,"name":"uint256","nodeType":"ElementaryTypeName","src":"7754:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7753:19:19"},"scope":4223,"src":"7525:248:19","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"documentation":{"id":4098,"nodeType":"StructuredDocumentation","src":"7779:586:19","text":" @notice Proposes a price value for an existing price request.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @param proposedPrice price being proposed.\n @return totalBond the amount that's pulled from the proposer's wallet as a bond. The bond will be returned to\n the proposer once settled if the proposal is correct."},"functionSelector":"b8b4f908","id":4113,"implemented":false,"kind":"function","modifiers":[],"name":"proposePrice","nameLocation":"8379:12:19","nodeType":"FunctionDefinition","parameters":{"id":4109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4100,"mutability":"mutable","name":"requester","nameLocation":"8409:9:19","nodeType":"VariableDeclaration","scope":4113,"src":"8401:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4099,"name":"address","nodeType":"ElementaryTypeName","src":"8401:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4102,"mutability":"mutable","name":"identifier","nameLocation":"8436:10:19","nodeType":"VariableDeclaration","scope":4113,"src":"8428:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4101,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8428:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4104,"mutability":"mutable","name":"timestamp","nameLocation":"8464:9:19","nodeType":"VariableDeclaration","scope":4113,"src":"8456:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4103,"name":"uint256","nodeType":"ElementaryTypeName","src":"8456:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4106,"mutability":"mutable","name":"ancillaryData","nameLocation":"8496:13:19","nodeType":"VariableDeclaration","scope":4113,"src":"8483:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4105,"name":"bytes","nodeType":"ElementaryTypeName","src":"8483:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4108,"mutability":"mutable","name":"proposedPrice","nameLocation":"8526:13:19","nodeType":"VariableDeclaration","scope":4113,"src":"8519:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4107,"name":"int256","nodeType":"ElementaryTypeName","src":"8519:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8391:154:19"},"returnParameters":{"id":4112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4111,"mutability":"mutable","name":"totalBond","nameLocation":"8580:9:19","nodeType":"VariableDeclaration","scope":4113,"src":"8572:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4110,"name":"uint256","nodeType":"ElementaryTypeName","src":"8572:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8571:19:19"},"scope":4223,"src":"8370:221:19","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":4114,"nodeType":"StructuredDocumentation","src":"8597:766:19","text":" @notice Disputes a price request with an active proposal on another address' behalf. Note: this address will\n receive any rewards that come from this dispute. However, any bonds are pulled from the caller.\n @param disputer address to set as the disputer.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @return totalBond the amount that's pulled from the caller's wallet as a bond. The bond will be returned to\n the disputer once settled if the dispute was value (the proposal was incorrect)."},"functionSelector":"76c7823f","id":4129,"implemented":false,"kind":"function","modifiers":[],"name":"disputePriceFor","nameLocation":"9377:15:19","nodeType":"FunctionDefinition","parameters":{"id":4125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4116,"mutability":"mutable","name":"disputer","nameLocation":"9410:8:19","nodeType":"VariableDeclaration","scope":4129,"src":"9402:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4115,"name":"address","nodeType":"ElementaryTypeName","src":"9402:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4118,"mutability":"mutable","name":"requester","nameLocation":"9436:9:19","nodeType":"VariableDeclaration","scope":4129,"src":"9428:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4117,"name":"address","nodeType":"ElementaryTypeName","src":"9428:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4120,"mutability":"mutable","name":"identifier","nameLocation":"9463:10:19","nodeType":"VariableDeclaration","scope":4129,"src":"9455:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9455:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4122,"mutability":"mutable","name":"timestamp","nameLocation":"9491:9:19","nodeType":"VariableDeclaration","scope":4129,"src":"9483:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4121,"name":"uint256","nodeType":"ElementaryTypeName","src":"9483:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4124,"mutability":"mutable","name":"ancillaryData","nameLocation":"9523:13:19","nodeType":"VariableDeclaration","scope":4129,"src":"9510:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4123,"name":"bytes","nodeType":"ElementaryTypeName","src":"9510:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9392:150:19"},"returnParameters":{"id":4128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4127,"mutability":"mutable","name":"totalBond","nameLocation":"9575:9:19","nodeType":"VariableDeclaration","scope":4129,"src":"9567:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4126,"name":"uint256","nodeType":"ElementaryTypeName","src":"9567:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9566:19:19"},"scope":4223,"src":"9368:218:19","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"documentation":{"id":4130,"nodeType":"StructuredDocumentation","src":"9592:587:19","text":" @notice Disputes a price value for an existing price request with an active proposal.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @return totalBond the amount that's pulled from the disputer's wallet as a bond. The bond will be returned to\n the disputer once settled if the dispute was valid (the proposal was incorrect)."},"functionSelector":"fba7f1e3","id":4143,"implemented":false,"kind":"function","modifiers":[],"name":"disputePrice","nameLocation":"10193:12:19","nodeType":"FunctionDefinition","parameters":{"id":4139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4132,"mutability":"mutable","name":"requester","nameLocation":"10223:9:19","nodeType":"VariableDeclaration","scope":4143,"src":"10215:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4131,"name":"address","nodeType":"ElementaryTypeName","src":"10215:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4134,"mutability":"mutable","name":"identifier","nameLocation":"10250:10:19","nodeType":"VariableDeclaration","scope":4143,"src":"10242:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10242:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4136,"mutability":"mutable","name":"timestamp","nameLocation":"10278:9:19","nodeType":"VariableDeclaration","scope":4143,"src":"10270:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4135,"name":"uint256","nodeType":"ElementaryTypeName","src":"10270:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4138,"mutability":"mutable","name":"ancillaryData","nameLocation":"10310:13:19","nodeType":"VariableDeclaration","scope":4143,"src":"10297:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4137,"name":"bytes","nodeType":"ElementaryTypeName","src":"10297:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10205:124:19"},"returnParameters":{"id":4142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4141,"mutability":"mutable","name":"totalBond","nameLocation":"10364:9:19","nodeType":"VariableDeclaration","scope":4143,"src":"10356:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4140,"name":"uint256","nodeType":"ElementaryTypeName","src":"10356:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10355:19:19"},"scope":4223,"src":"10184:191:19","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":4144,"nodeType":"StructuredDocumentation","src":"10381:515:19","text":" @notice Retrieves a price that was previously requested by a caller. Reverts if the request is not settled\n or settleable. Note: this method is not view so that this call may actually settle the price request if it\n hasn't been settled.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @return resolved price."},"functionSelector":"53b59239","id":4155,"implemented":false,"kind":"function","modifiers":[],"name":"settleAndGetPrice","nameLocation":"10910:17:19","nodeType":"FunctionDefinition","parameters":{"id":4151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4146,"mutability":"mutable","name":"identifier","nameLocation":"10945:10:19","nodeType":"VariableDeclaration","scope":4155,"src":"10937:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4145,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10937:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4148,"mutability":"mutable","name":"timestamp","nameLocation":"10973:9:19","nodeType":"VariableDeclaration","scope":4155,"src":"10965:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4147,"name":"uint256","nodeType":"ElementaryTypeName","src":"10965:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4150,"mutability":"mutable","name":"ancillaryData","nameLocation":"11005:13:19","nodeType":"VariableDeclaration","scope":4155,"src":"10992:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4149,"name":"bytes","nodeType":"ElementaryTypeName","src":"10992:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10927:97:19"},"returnParameters":{"id":4154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4155,"src":"11051:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4152,"name":"int256","nodeType":"ElementaryTypeName","src":"11051:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"11050:8:19"},"scope":4223,"src":"10901:158:19","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":4156,"nodeType":"StructuredDocumentation","src":"11065:565:19","text":" @notice Attempts to settle an outstanding price request. Will revert if it isn't settleable.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @return payout the amount that the \"winner\" (proposer or disputer) receives on settlement. This amount includes\n the returned bonds as well as additional rewards."},"functionSelector":"5e9a79a9","id":4169,"implemented":false,"kind":"function","modifiers":[],"name":"settle","nameLocation":"11644:6:19","nodeType":"FunctionDefinition","parameters":{"id":4165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4158,"mutability":"mutable","name":"requester","nameLocation":"11668:9:19","nodeType":"VariableDeclaration","scope":4169,"src":"11660:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4157,"name":"address","nodeType":"ElementaryTypeName","src":"11660:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4160,"mutability":"mutable","name":"identifier","nameLocation":"11695:10:19","nodeType":"VariableDeclaration","scope":4169,"src":"11687:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4159,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11687:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4162,"mutability":"mutable","name":"timestamp","nameLocation":"11723:9:19","nodeType":"VariableDeclaration","scope":4169,"src":"11715:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4161,"name":"uint256","nodeType":"ElementaryTypeName","src":"11715:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4164,"mutability":"mutable","name":"ancillaryData","nameLocation":"11755:13:19","nodeType":"VariableDeclaration","scope":4169,"src":"11742:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4163,"name":"bytes","nodeType":"ElementaryTypeName","src":"11742:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11650:124:19"},"returnParameters":{"id":4168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4167,"mutability":"mutable","name":"payout","nameLocation":"11809:6:19","nodeType":"VariableDeclaration","scope":4169,"src":"11801:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4166,"name":"uint256","nodeType":"ElementaryTypeName","src":"11801:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11800:16:19"},"scope":4223,"src":"11635:182:19","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":4170,"nodeType":"StructuredDocumentation","src":"11823:429:19","text":" @notice Gets the current data structure containing all information about a price request.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @return the Request data structure."},"functionSelector":"a9904f9b","id":4184,"implemented":false,"kind":"function","modifiers":[],"name":"getRequest","nameLocation":"12266:10:19","nodeType":"FunctionDefinition","parameters":{"id":4179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4172,"mutability":"mutable","name":"requester","nameLocation":"12294:9:19","nodeType":"VariableDeclaration","scope":4184,"src":"12286:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4171,"name":"address","nodeType":"ElementaryTypeName","src":"12286:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4174,"mutability":"mutable","name":"identifier","nameLocation":"12321:10:19","nodeType":"VariableDeclaration","scope":4184,"src":"12313:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12313:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4176,"mutability":"mutable","name":"timestamp","nameLocation":"12349:9:19","nodeType":"VariableDeclaration","scope":4184,"src":"12341:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4175,"name":"uint256","nodeType":"ElementaryTypeName","src":"12341:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4178,"mutability":"mutable","name":"ancillaryData","nameLocation":"12381:13:19","nodeType":"VariableDeclaration","scope":4184,"src":"12368:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4177,"name":"bytes","nodeType":"ElementaryTypeName","src":"12368:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12276:124:19"},"returnParameters":{"id":4183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4184,"src":"12430:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$4002_memory_ptr","typeString":"struct OptimisticOracleInterface.Request"},"typeName":{"id":4181,"nodeType":"UserDefinedTypeName","pathNode":{"id":4180,"name":"Request","nameLocations":["12430:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":4002,"src":"12430:7:19"},"referencedDeclaration":4002,"src":"12430:7:19","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$4002_storage_ptr","typeString":"struct OptimisticOracleInterface.Request"}},"visibility":"internal"}],"src":"12429:16:19"},"scope":4223,"src":"12257:189:19","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":4185,"nodeType":"StructuredDocumentation","src":"12452:379:19","text":" @notice Returns the state of a price request.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @return the State enum value."},"functionSelector":"ba4b930c","id":4199,"implemented":false,"kind":"function","modifiers":[],"name":"getState","nameLocation":"12845:8:19","nodeType":"FunctionDefinition","parameters":{"id":4194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4187,"mutability":"mutable","name":"requester","nameLocation":"12871:9:19","nodeType":"VariableDeclaration","scope":4199,"src":"12863:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4186,"name":"address","nodeType":"ElementaryTypeName","src":"12863:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4189,"mutability":"mutable","name":"identifier","nameLocation":"12898:10:19","nodeType":"VariableDeclaration","scope":4199,"src":"12890:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12890:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4191,"mutability":"mutable","name":"timestamp","nameLocation":"12926:9:19","nodeType":"VariableDeclaration","scope":4199,"src":"12918:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4190,"name":"uint256","nodeType":"ElementaryTypeName","src":"12918:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4193,"mutability":"mutable","name":"ancillaryData","nameLocation":"12958:13:19","nodeType":"VariableDeclaration","scope":4199,"src":"12945:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4192,"name":"bytes","nodeType":"ElementaryTypeName","src":"12945:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12853:124:19"},"returnParameters":{"id":4198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4199,"src":"13007:5:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_State_$3976","typeString":"enum OptimisticOracleInterface.State"},"typeName":{"id":4196,"nodeType":"UserDefinedTypeName","pathNode":{"id":4195,"name":"State","nameLocations":["13007:5:19"],"nodeType":"IdentifierPath","referencedDeclaration":3976,"src":"13007:5:19"},"referencedDeclaration":3976,"src":"13007:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_State_$3976","typeString":"enum OptimisticOracleInterface.State"}},"visibility":"internal"}],"src":"13006:7:19"},"scope":4223,"src":"12836:178:19","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":4200,"nodeType":"StructuredDocumentation","src":"13020:471:19","text":" @notice Checks if a given request has resolved or been settled (i.e the optimistic oracle has a price).\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @return true if price has resolved or settled, false otherwise."},"functionSelector":"bc58ccaa","id":4213,"implemented":false,"kind":"function","modifiers":[],"name":"hasPrice","nameLocation":"13505:8:19","nodeType":"FunctionDefinition","parameters":{"id":4209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4202,"mutability":"mutable","name":"requester","nameLocation":"13531:9:19","nodeType":"VariableDeclaration","scope":4213,"src":"13523:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4201,"name":"address","nodeType":"ElementaryTypeName","src":"13523:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4204,"mutability":"mutable","name":"identifier","nameLocation":"13558:10:19","nodeType":"VariableDeclaration","scope":4213,"src":"13550:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4203,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13550:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4206,"mutability":"mutable","name":"timestamp","nameLocation":"13586:9:19","nodeType":"VariableDeclaration","scope":4213,"src":"13578:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4205,"name":"uint256","nodeType":"ElementaryTypeName","src":"13578:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4208,"mutability":"mutable","name":"ancillaryData","nameLocation":"13618:13:19","nodeType":"VariableDeclaration","scope":4213,"src":"13605:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4207,"name":"bytes","nodeType":"ElementaryTypeName","src":"13605:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13513:124:19"},"returnParameters":{"id":4212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4213,"src":"13667:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4210,"name":"bool","nodeType":"ElementaryTypeName","src":"13667:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13666:6:19"},"scope":4223,"src":"13496:177:19","stateMutability":"view","virtual":true,"visibility":"public"},{"functionSelector":"af5d2f39","id":4222,"implemented":false,"kind":"function","modifiers":[],"name":"stampAncillaryData","nameLocation":"13688:18:19","nodeType":"FunctionDefinition","parameters":{"id":4218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4215,"mutability":"mutable","name":"ancillaryData","nameLocation":"13720:13:19","nodeType":"VariableDeclaration","scope":4222,"src":"13707:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4214,"name":"bytes","nodeType":"ElementaryTypeName","src":"13707:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4217,"mutability":"mutable","name":"requester","nameLocation":"13743:9:19","nodeType":"VariableDeclaration","scope":4222,"src":"13735:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4216,"name":"address","nodeType":"ElementaryTypeName","src":"13735:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13706:47:19"},"returnParameters":{"id":4221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4222,"src":"13815:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4219,"name":"bytes","nodeType":"ElementaryTypeName","src":"13815:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13814:14:19"},"scope":4223,"src":"13679:150:19","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4224,"src":"376:13455:19","usedErrors":[],"usedEvents":[3916,3934,3950,3968]}],"src":"42:13790:19"},"id":19},"@uma/core/contracts/optimistic-oracle-v2/interfaces/SkinnyOptimisticOracleInterface.sol":{"ast":{"absolutePath":"@uma/core/contracts/optimistic-oracle-v2/interfaces/SkinnyOptimisticOracleInterface.sol","exportedSymbols":{"FinderInterface":[3826],"IERC20":[190],"OptimisticOracleInterface":[4223],"SkinnyOptimisticOracleInterface":[4442]},"id":4443,"license":"AGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":4225,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"42:23:20"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":4226,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4443,"sourceUnit":191,"src":"67:56:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uma/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleInterface.sol","file":"../interfaces/OptimisticOracleInterface.sol","id":4227,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4443,"sourceUnit":4224,"src":"124:53:20","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"SkinnyOptimisticOracleInterface","contractDependencies":[],"contractKind":"contract","documentation":{"id":4228,"nodeType":"StructuredDocumentation","src":"179:1208:20","text":" @title Interface for the gas-cost-reduced version of the OptimisticOracle.\n @notice Differences from normal OptimisticOracle:\n - refundOnDispute: flag is removed, by default there are no refunds on disputes.\n - customizing request parameters: In the OptimisticOracle, parameters like `bond` and `customLiveness` can be reset\n   after a request is already made via `requestPrice`. In the SkinnyOptimisticOracle, these parameters can only be\n   set in `requestPrice`, which has an expanded input set.\n - settleAndGetPrice: Replaced by `settle`, which can only be called once per settleable request. The resolved price\n   can be fetched via the `Settle` event or the return value of `settle`.\n - general changes to interface: Functions that interact with existing requests all require the parameters of the\n   request to modify to be passed as input. These parameters must match with the existing request parameters or the\n   function will revert. This change reflects the internal refactor to store hashed request parameters instead of the\n   full request struct.\n @dev Interface used by financial contracts to interact with the Oracle. Voters will use a different interface."},"fullyImplemented":false,"id":4442,"linearizedBaseContracts":[4442],"name":"SkinnyOptimisticOracleInterface","nameLocation":"1406:31:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"SkinnyOptimisticOracleInterface.Request","id":4252,"members":[{"constant":false,"id":4230,"mutability":"mutable","name":"proposer","nameLocation":"1639:8:20","nodeType":"VariableDeclaration","scope":4252,"src":"1631:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4229,"name":"address","nodeType":"ElementaryTypeName","src":"1631:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4232,"mutability":"mutable","name":"disputer","nameLocation":"1693:8:20","nodeType":"VariableDeclaration","scope":4252,"src":"1685:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4231,"name":"address","nodeType":"ElementaryTypeName","src":"1685:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4235,"mutability":"mutable","name":"currency","nameLocation":"1746:8:20","nodeType":"VariableDeclaration","scope":4252,"src":"1739:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":4234,"nodeType":"UserDefinedTypeName","pathNode":{"id":4233,"name":"IERC20","nameLocations":["1739:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":190,"src":"1739:6:20"},"referencedDeclaration":190,"src":"1739:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4237,"mutability":"mutable","name":"settled","nameLocation":"1814:7:20","nodeType":"VariableDeclaration","scope":4252,"src":"1809:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4236,"name":"bool","nodeType":"ElementaryTypeName","src":"1809:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4239,"mutability":"mutable","name":"proposedPrice","nameLocation":"1873:13:20","nodeType":"VariableDeclaration","scope":4252,"src":"1866:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4238,"name":"int256","nodeType":"ElementaryTypeName","src":"1866:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4241,"mutability":"mutable","name":"resolvedPrice","nameLocation":"1941:13:20","nodeType":"VariableDeclaration","scope":4252,"src":"1934:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4240,"name":"int256","nodeType":"ElementaryTypeName","src":"1934:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4243,"mutability":"mutable","name":"expirationTime","nameLocation":"2019:14:20","nodeType":"VariableDeclaration","scope":4252,"src":"2011:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4242,"name":"uint256","nodeType":"ElementaryTypeName","src":"2011:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4245,"mutability":"mutable","name":"reward","nameLocation":"2112:6:20","nodeType":"VariableDeclaration","scope":4252,"src":"2104:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4244,"name":"uint256","nodeType":"ElementaryTypeName","src":"2104:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4247,"mutability":"mutable","name":"finalFee","nameLocation":"2200:8:20","nodeType":"VariableDeclaration","scope":4252,"src":"2192:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4246,"name":"uint256","nodeType":"ElementaryTypeName","src":"2192:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4249,"mutability":"mutable","name":"bond","nameLocation":"2284:4:20","nodeType":"VariableDeclaration","scope":4252,"src":"2276:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4248,"name":"uint256","nodeType":"ElementaryTypeName","src":"2276:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4251,"mutability":"mutable","name":"customLiveness","nameLocation":"2379:14:20","nodeType":"VariableDeclaration","scope":4252,"src":"2371:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4250,"name":"uint256","nodeType":"ElementaryTypeName","src":"2371:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Request","nameLocation":"1613:7:20","nodeType":"StructDefinition","scope":4442,"src":"1606:841:20","visibility":"public"},{"constant":true,"functionSelector":"c371dda7","id":4255,"mutability":"constant","name":"ancillaryBytesLimit","nameLocation":"2782:19:20","nodeType":"VariableDeclaration","scope":4442,"src":"2758:50:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4253,"name":"uint256","nodeType":"ElementaryTypeName","src":"2758:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"38313932","id":4254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2804:4:20","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"value":"8192"},"visibility":"public"},{"documentation":{"id":4256,"nodeType":"StructuredDocumentation","src":"2815:952:20","text":" @notice Requests a new price.\n @param identifier price identifier being requested.\n @param timestamp timestamp of the price being requested.\n @param ancillaryData ancillary data representing additional args being passed with the price request.\n @param currency ERC20 token used for payment of rewards and fees. Must be approved for use with the DVM.\n @param reward reward offered to a successful proposer. Will be pulled from the caller. Note: this can be 0,\n               which could make sense if the contract requests and proposes the value in the same call or\n               provides its own reward system.\n @param bond custom proposal bond to set for request. If set to 0, defaults to the final fee.\n @param customLiveness custom proposal liveness to set for request.\n @return totalBond default bond + final fee that the proposer and disputer will be required to pay."},"functionSelector":"d6228407","id":4276,"implemented":false,"kind":"function","modifiers":[],"name":"requestPrice","nameLocation":"3781:12:20","nodeType":"FunctionDefinition","parameters":{"id":4272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4258,"mutability":"mutable","name":"identifier","nameLocation":"3811:10:20","nodeType":"VariableDeclaration","scope":4276,"src":"3803:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3803:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4260,"mutability":"mutable","name":"timestamp","nameLocation":"3838:9:20","nodeType":"VariableDeclaration","scope":4276,"src":"3831:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4259,"name":"uint32","nodeType":"ElementaryTypeName","src":"3831:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4262,"mutability":"mutable","name":"ancillaryData","nameLocation":"3870:13:20","nodeType":"VariableDeclaration","scope":4276,"src":"3857:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4261,"name":"bytes","nodeType":"ElementaryTypeName","src":"3857:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4265,"mutability":"mutable","name":"currency","nameLocation":"3900:8:20","nodeType":"VariableDeclaration","scope":4276,"src":"3893:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":4264,"nodeType":"UserDefinedTypeName","pathNode":{"id":4263,"name":"IERC20","nameLocations":["3893:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":190,"src":"3893:6:20"},"referencedDeclaration":190,"src":"3893:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4267,"mutability":"mutable","name":"reward","nameLocation":"3926:6:20","nodeType":"VariableDeclaration","scope":4276,"src":"3918:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4266,"name":"uint256","nodeType":"ElementaryTypeName","src":"3918:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4269,"mutability":"mutable","name":"bond","nameLocation":"3950:4:20","nodeType":"VariableDeclaration","scope":4276,"src":"3942:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3942:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4271,"mutability":"mutable","name":"customLiveness","nameLocation":"3972:14:20","nodeType":"VariableDeclaration","scope":4276,"src":"3964:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4270,"name":"uint256","nodeType":"ElementaryTypeName","src":"3964:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3793:199:20"},"returnParameters":{"id":4275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4274,"mutability":"mutable","name":"totalBond","nameLocation":"4027:9:20","nodeType":"VariableDeclaration","scope":4276,"src":"4019:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4273,"name":"uint256","nodeType":"ElementaryTypeName","src":"4019:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4018:19:20"},"scope":4442,"src":"3772:266:20","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":4277,"nodeType":"StructuredDocumentation","src":"4044:898:20","text":" @notice Proposes a price value on another address' behalf. Note: this address will receive any rewards that come\n from this proposal. However, any bonds are pulled from the caller.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @param request price request parameters whose hash must match the request that the caller wants to\n propose a price for.\n @param proposer address to set as the proposer.\n @param proposedPrice price being proposed.\n @return totalBond the amount that's pulled from the caller's wallet as a bond. The bond will be returned to\n the proposer once settled if the proposal is correct."},"functionSelector":"b1a166b2","id":4297,"implemented":false,"kind":"function","modifiers":[],"name":"proposePriceFor","nameLocation":"4956:15:20","nodeType":"FunctionDefinition","parameters":{"id":4293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4279,"mutability":"mutable","name":"requester","nameLocation":"4989:9:20","nodeType":"VariableDeclaration","scope":4297,"src":"4981:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4278,"name":"address","nodeType":"ElementaryTypeName","src":"4981:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4281,"mutability":"mutable","name":"identifier","nameLocation":"5016:10:20","nodeType":"VariableDeclaration","scope":4297,"src":"5008:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4280,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5008:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4283,"mutability":"mutable","name":"timestamp","nameLocation":"5043:9:20","nodeType":"VariableDeclaration","scope":4297,"src":"5036:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4282,"name":"uint32","nodeType":"ElementaryTypeName","src":"5036:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4285,"mutability":"mutable","name":"ancillaryData","nameLocation":"5075:13:20","nodeType":"VariableDeclaration","scope":4297,"src":"5062:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4284,"name":"bytes","nodeType":"ElementaryTypeName","src":"5062:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4288,"mutability":"mutable","name":"request","nameLocation":"5113:7:20","nodeType":"VariableDeclaration","scope":4297,"src":"5098:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$4252_memory_ptr","typeString":"struct SkinnyOptimisticOracleInterface.Request"},"typeName":{"id":4287,"nodeType":"UserDefinedTypeName","pathNode":{"id":4286,"name":"Request","nameLocations":["5098:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":4252,"src":"5098:7:20"},"referencedDeclaration":4252,"src":"5098:7:20","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$4252_storage_ptr","typeString":"struct SkinnyOptimisticOracleInterface.Request"}},"visibility":"internal"},{"constant":false,"id":4290,"mutability":"mutable","name":"proposer","nameLocation":"5138:8:20","nodeType":"VariableDeclaration","scope":4297,"src":"5130:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4289,"name":"address","nodeType":"ElementaryTypeName","src":"5130:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4292,"mutability":"mutable","name":"proposedPrice","nameLocation":"5163:13:20","nodeType":"VariableDeclaration","scope":4297,"src":"5156:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4291,"name":"int256","nodeType":"ElementaryTypeName","src":"5156:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4971:211:20"},"returnParameters":{"id":4296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4295,"mutability":"mutable","name":"totalBond","nameLocation":"5215:9:20","nodeType":"VariableDeclaration","scope":4297,"src":"5207:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4294,"name":"uint256","nodeType":"ElementaryTypeName","src":"5207:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5206:19:20"},"scope":4442,"src":"4947:279:20","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"documentation":{"id":4298,"nodeType":"StructuredDocumentation","src":"5232:717:20","text":" @notice Proposes a price value where caller is the proposer.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @param request price request parameters whose hash must match the request that the caller wants to\n propose a price for.\n @param proposedPrice price being proposed.\n @return totalBond the amount that's pulled from the caller's wallet as a bond. The bond will be returned to\n the proposer once settled if the proposal is correct."},"functionSelector":"93c44ef7","id":4316,"implemented":false,"kind":"function","modifiers":[],"name":"proposePrice","nameLocation":"5963:12:20","nodeType":"FunctionDefinition","parameters":{"id":4312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4300,"mutability":"mutable","name":"requester","nameLocation":"5993:9:20","nodeType":"VariableDeclaration","scope":4316,"src":"5985:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4299,"name":"address","nodeType":"ElementaryTypeName","src":"5985:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4302,"mutability":"mutable","name":"identifier","nameLocation":"6020:10:20","nodeType":"VariableDeclaration","scope":4316,"src":"6012:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6012:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4304,"mutability":"mutable","name":"timestamp","nameLocation":"6047:9:20","nodeType":"VariableDeclaration","scope":4316,"src":"6040:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4303,"name":"uint32","nodeType":"ElementaryTypeName","src":"6040:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4306,"mutability":"mutable","name":"ancillaryData","nameLocation":"6079:13:20","nodeType":"VariableDeclaration","scope":4316,"src":"6066:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4305,"name":"bytes","nodeType":"ElementaryTypeName","src":"6066:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4309,"mutability":"mutable","name":"request","nameLocation":"6117:7:20","nodeType":"VariableDeclaration","scope":4316,"src":"6102:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$4252_memory_ptr","typeString":"struct SkinnyOptimisticOracleInterface.Request"},"typeName":{"id":4308,"nodeType":"UserDefinedTypeName","pathNode":{"id":4307,"name":"Request","nameLocations":["6102:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":4252,"src":"6102:7:20"},"referencedDeclaration":4252,"src":"6102:7:20","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$4252_storage_ptr","typeString":"struct SkinnyOptimisticOracleInterface.Request"}},"visibility":"internal"},{"constant":false,"id":4311,"mutability":"mutable","name":"proposedPrice","nameLocation":"6141:13:20","nodeType":"VariableDeclaration","scope":4316,"src":"6134:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4310,"name":"int256","nodeType":"ElementaryTypeName","src":"6134:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"5975:185:20"},"returnParameters":{"id":4315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4314,"mutability":"mutable","name":"totalBond","nameLocation":"6195:9:20","nodeType":"VariableDeclaration","scope":4316,"src":"6187:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4313,"name":"uint256","nodeType":"ElementaryTypeName","src":"6187:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6186:19:20"},"scope":4442,"src":"5954:252:20","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":4317,"nodeType":"StructuredDocumentation","src":"6212:1498:20","text":" @notice Combines logic of requestPrice and proposePrice while taking advantage of gas savings from not having to\n overwrite Request params that a normal requestPrice() => proposePrice() flow would entail. Note: The proposer\n will receive any rewards that come from this proposal. However, any bonds are pulled from the caller.\n @dev The caller is the requester, but the proposer can be customized.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @param currency ERC20 token used for payment of rewards and fees. Must be approved for use with the DVM.\n @param reward reward offered to a successful proposer. Will be pulled from the caller. Note: this can be 0,\n               which could make sense if the contract requests and proposes the value in the same call or\n               provides its own reward system.\n @param bond custom proposal bond to set for request. If set to 0, defaults to the final fee.\n @param customLiveness custom proposal liveness to set for request.\n @param proposer address to set as the proposer.\n @param proposedPrice price being proposed.\n @return totalBond the amount that's pulled from the caller's wallet as a bond. The bond will be returned to\n the proposer once settled if the proposal is correct."},"functionSelector":"af355d1e","id":4341,"implemented":false,"kind":"function","modifiers":[],"name":"requestAndProposePriceFor","nameLocation":"7724:25:20","nodeType":"FunctionDefinition","parameters":{"id":4337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4319,"mutability":"mutable","name":"identifier","nameLocation":"7767:10:20","nodeType":"VariableDeclaration","scope":4341,"src":"7759:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4318,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7759:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4321,"mutability":"mutable","name":"timestamp","nameLocation":"7794:9:20","nodeType":"VariableDeclaration","scope":4341,"src":"7787:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4320,"name":"uint32","nodeType":"ElementaryTypeName","src":"7787:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4323,"mutability":"mutable","name":"ancillaryData","nameLocation":"7826:13:20","nodeType":"VariableDeclaration","scope":4341,"src":"7813:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4322,"name":"bytes","nodeType":"ElementaryTypeName","src":"7813:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4326,"mutability":"mutable","name":"currency","nameLocation":"7856:8:20","nodeType":"VariableDeclaration","scope":4341,"src":"7849:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":4325,"nodeType":"UserDefinedTypeName","pathNode":{"id":4324,"name":"IERC20","nameLocations":["7849:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":190,"src":"7849:6:20"},"referencedDeclaration":190,"src":"7849:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4328,"mutability":"mutable","name":"reward","nameLocation":"7882:6:20","nodeType":"VariableDeclaration","scope":4341,"src":"7874:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4327,"name":"uint256","nodeType":"ElementaryTypeName","src":"7874:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4330,"mutability":"mutable","name":"bond","nameLocation":"7906:4:20","nodeType":"VariableDeclaration","scope":4341,"src":"7898:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4329,"name":"uint256","nodeType":"ElementaryTypeName","src":"7898:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4332,"mutability":"mutable","name":"customLiveness","nameLocation":"7928:14:20","nodeType":"VariableDeclaration","scope":4341,"src":"7920:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4331,"name":"uint256","nodeType":"ElementaryTypeName","src":"7920:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4334,"mutability":"mutable","name":"proposer","nameLocation":"7960:8:20","nodeType":"VariableDeclaration","scope":4341,"src":"7952:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4333,"name":"address","nodeType":"ElementaryTypeName","src":"7952:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4336,"mutability":"mutable","name":"proposedPrice","nameLocation":"7985:13:20","nodeType":"VariableDeclaration","scope":4341,"src":"7978:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4335,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7749:255:20"},"returnParameters":{"id":4340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4339,"mutability":"mutable","name":"totalBond","nameLocation":"8039:9:20","nodeType":"VariableDeclaration","scope":4341,"src":"8031:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4338,"name":"uint256","nodeType":"ElementaryTypeName","src":"8031:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8030:19:20"},"scope":4442,"src":"7715:335:20","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":4342,"nodeType":"StructuredDocumentation","src":"8056:888:20","text":" @notice Disputes a price request with an active proposal on another address' behalf. Note: this address will\n receive any rewards that come from this dispute. However, any bonds are pulled from the caller.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @param request price request parameters whose hash must match the request that the caller wants to\n dispute.\n @param disputer address to set as the disputer.\n @param requester sender of the initial price request.\n @return totalBond the amount that's pulled from the caller's wallet as a bond. The bond will be returned to\n the disputer once settled if the dispute was valid (the proposal was incorrect)."},"functionSelector":"9ce320c8","id":4360,"implemented":false,"kind":"function","modifiers":[],"name":"disputePriceFor","nameLocation":"8958:15:20","nodeType":"FunctionDefinition","parameters":{"id":4356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4344,"mutability":"mutable","name":"identifier","nameLocation":"8991:10:20","nodeType":"VariableDeclaration","scope":4360,"src":"8983:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4343,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8983:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4346,"mutability":"mutable","name":"timestamp","nameLocation":"9018:9:20","nodeType":"VariableDeclaration","scope":4360,"src":"9011:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4345,"name":"uint32","nodeType":"ElementaryTypeName","src":"9011:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4348,"mutability":"mutable","name":"ancillaryData","nameLocation":"9050:13:20","nodeType":"VariableDeclaration","scope":4360,"src":"9037:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4347,"name":"bytes","nodeType":"ElementaryTypeName","src":"9037:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4351,"mutability":"mutable","name":"request","nameLocation":"9088:7:20","nodeType":"VariableDeclaration","scope":4360,"src":"9073:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$4252_memory_ptr","typeString":"struct SkinnyOptimisticOracleInterface.Request"},"typeName":{"id":4350,"nodeType":"UserDefinedTypeName","pathNode":{"id":4349,"name":"Request","nameLocations":["9073:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":4252,"src":"9073:7:20"},"referencedDeclaration":4252,"src":"9073:7:20","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$4252_storage_ptr","typeString":"struct SkinnyOptimisticOracleInterface.Request"}},"visibility":"internal"},{"constant":false,"id":4353,"mutability":"mutable","name":"disputer","nameLocation":"9113:8:20","nodeType":"VariableDeclaration","scope":4360,"src":"9105:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4352,"name":"address","nodeType":"ElementaryTypeName","src":"9105:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4355,"mutability":"mutable","name":"requester","nameLocation":"9139:9:20","nodeType":"VariableDeclaration","scope":4360,"src":"9131:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4354,"name":"address","nodeType":"ElementaryTypeName","src":"9131:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8973:181:20"},"returnParameters":{"id":4359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4358,"mutability":"mutable","name":"totalBond","nameLocation":"9187:9:20","nodeType":"VariableDeclaration","scope":4360,"src":"9179:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4357,"name":"uint256","nodeType":"ElementaryTypeName","src":"9179:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9178:19:20"},"scope":4442,"src":"8949:249:20","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"documentation":{"id":4361,"nodeType":"StructuredDocumentation","src":"9204:708:20","text":" @notice Disputes a price request with an active proposal where caller is the disputer.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @param request price request parameters whose hash must match the request that the caller wants to\n dispute.\n @return totalBond the amount that's pulled from the caller's wallet as a bond. The bond will be returned to\n the disputer once settled if the dispute was valid (the proposal was incorrect)."},"functionSelector":"3a31577e","id":4377,"implemented":false,"kind":"function","modifiers":[],"name":"disputePrice","nameLocation":"9926:12:20","nodeType":"FunctionDefinition","parameters":{"id":4373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4363,"mutability":"mutable","name":"requester","nameLocation":"9956:9:20","nodeType":"VariableDeclaration","scope":4377,"src":"9948:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4362,"name":"address","nodeType":"ElementaryTypeName","src":"9948:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4365,"mutability":"mutable","name":"identifier","nameLocation":"9983:10:20","nodeType":"VariableDeclaration","scope":4377,"src":"9975:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9975:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4367,"mutability":"mutable","name":"timestamp","nameLocation":"10010:9:20","nodeType":"VariableDeclaration","scope":4377,"src":"10003:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4366,"name":"uint32","nodeType":"ElementaryTypeName","src":"10003:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4369,"mutability":"mutable","name":"ancillaryData","nameLocation":"10042:13:20","nodeType":"VariableDeclaration","scope":4377,"src":"10029:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4368,"name":"bytes","nodeType":"ElementaryTypeName","src":"10029:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4372,"mutability":"mutable","name":"request","nameLocation":"10080:7:20","nodeType":"VariableDeclaration","scope":4377,"src":"10065:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$4252_memory_ptr","typeString":"struct SkinnyOptimisticOracleInterface.Request"},"typeName":{"id":4371,"nodeType":"UserDefinedTypeName","pathNode":{"id":4370,"name":"Request","nameLocations":["10065:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":4252,"src":"10065:7:20"},"referencedDeclaration":4252,"src":"10065:7:20","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$4252_storage_ptr","typeString":"struct SkinnyOptimisticOracleInterface.Request"}},"visibility":"internal"}],"src":"9938:155:20"},"returnParameters":{"id":4376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4375,"mutability":"mutable","name":"totalBond","nameLocation":"10128:9:20","nodeType":"VariableDeclaration","scope":4377,"src":"10120:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4374,"name":"uint256","nodeType":"ElementaryTypeName","src":"10120:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10119:19:20"},"scope":4442,"src":"9917:222:20","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":4378,"nodeType":"StructuredDocumentation","src":"10145:754:20","text":" @notice Attempts to settle an outstanding price request. Will revert if it isn't settleable.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @param request price request parameters whose hash must match the request that the caller wants to\n settle.\n @return payout the amount that the \"winner\" (proposer or disputer) receives on settlement. This amount includes\n the returned bonds as well as additional rewards.\n @return resolvedPrice the price that the request settled to."},"functionSelector":"b730539f","id":4396,"implemented":false,"kind":"function","modifiers":[],"name":"settle","nameLocation":"10913:6:20","nodeType":"FunctionDefinition","parameters":{"id":4390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4380,"mutability":"mutable","name":"requester","nameLocation":"10937:9:20","nodeType":"VariableDeclaration","scope":4396,"src":"10929:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4379,"name":"address","nodeType":"ElementaryTypeName","src":"10929:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4382,"mutability":"mutable","name":"identifier","nameLocation":"10964:10:20","nodeType":"VariableDeclaration","scope":4396,"src":"10956:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10956:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4384,"mutability":"mutable","name":"timestamp","nameLocation":"10991:9:20","nodeType":"VariableDeclaration","scope":4396,"src":"10984:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4383,"name":"uint32","nodeType":"ElementaryTypeName","src":"10984:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4386,"mutability":"mutable","name":"ancillaryData","nameLocation":"11023:13:20","nodeType":"VariableDeclaration","scope":4396,"src":"11010:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4385,"name":"bytes","nodeType":"ElementaryTypeName","src":"11010:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4389,"mutability":"mutable","name":"request","nameLocation":"11061:7:20","nodeType":"VariableDeclaration","scope":4396,"src":"11046:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$4252_memory_ptr","typeString":"struct SkinnyOptimisticOracleInterface.Request"},"typeName":{"id":4388,"nodeType":"UserDefinedTypeName","pathNode":{"id":4387,"name":"Request","nameLocations":["11046:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":4252,"src":"11046:7:20"},"referencedDeclaration":4252,"src":"11046:7:20","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$4252_storage_ptr","typeString":"struct SkinnyOptimisticOracleInterface.Request"}},"visibility":"internal"}],"src":"10919:155:20"},"returnParameters":{"id":4395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4392,"mutability":"mutable","name":"payout","nameLocation":"11109:6:20","nodeType":"VariableDeclaration","scope":4396,"src":"11101:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4391,"name":"uint256","nodeType":"ElementaryTypeName","src":"11101:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4394,"mutability":"mutable","name":"resolvedPrice","nameLocation":"11124:13:20","nodeType":"VariableDeclaration","scope":4396,"src":"11117:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4393,"name":"int256","nodeType":"ElementaryTypeName","src":"11117:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"11100:38:20"},"scope":4442,"src":"10904:235:20","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":4397,"nodeType":"StructuredDocumentation","src":"11145:462:20","text":" @notice Computes the current state of a price request. See the State enum for more details.\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @param request price request parameters.\n @return the State."},"functionSelector":"51205554","id":4414,"implemented":false,"kind":"function","modifiers":[],"name":"getState","nameLocation":"11621:8:20","nodeType":"FunctionDefinition","parameters":{"id":4409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4399,"mutability":"mutable","name":"requester","nameLocation":"11647:9:20","nodeType":"VariableDeclaration","scope":4414,"src":"11639:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4398,"name":"address","nodeType":"ElementaryTypeName","src":"11639:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4401,"mutability":"mutable","name":"identifier","nameLocation":"11674:10:20","nodeType":"VariableDeclaration","scope":4414,"src":"11666:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4400,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11666:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4403,"mutability":"mutable","name":"timestamp","nameLocation":"11701:9:20","nodeType":"VariableDeclaration","scope":4414,"src":"11694:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4402,"name":"uint32","nodeType":"ElementaryTypeName","src":"11694:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4405,"mutability":"mutable","name":"ancillaryData","nameLocation":"11733:13:20","nodeType":"VariableDeclaration","scope":4414,"src":"11720:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4404,"name":"bytes","nodeType":"ElementaryTypeName","src":"11720:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4408,"mutability":"mutable","name":"request","nameLocation":"11771:7:20","nodeType":"VariableDeclaration","scope":4414,"src":"11756:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$4252_memory_ptr","typeString":"struct SkinnyOptimisticOracleInterface.Request"},"typeName":{"id":4407,"nodeType":"UserDefinedTypeName","pathNode":{"id":4406,"name":"Request","nameLocations":["11756:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":4252,"src":"11756:7:20"},"referencedDeclaration":4252,"src":"11756:7:20","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$4252_storage_ptr","typeString":"struct SkinnyOptimisticOracleInterface.Request"}},"visibility":"internal"}],"src":"11629:155:20"},"returnParameters":{"id":4413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4414,"src":"11811:31:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_State_$3976","typeString":"enum OptimisticOracleInterface.State"},"typeName":{"id":4411,"nodeType":"UserDefinedTypeName","pathNode":{"id":4410,"name":"OptimisticOracleInterface.State","nameLocations":["11811:25:20","11837:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":3976,"src":"11811:31:20"},"referencedDeclaration":3976,"src":"11811:31:20","typeDescriptions":{"typeIdentifier":"t_enum$_State_$3976","typeString":"enum OptimisticOracleInterface.State"}},"visibility":"internal"}],"src":"11810:33:20"},"scope":4442,"src":"11612:232:20","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":4415,"nodeType":"StructuredDocumentation","src":"11850:737:20","text":" @notice Checks if a given request has resolved, expired or been settled (i.e the optimistic oracle has a price).\n @param requester sender of the initial price request.\n @param identifier price identifier to identify the existing request.\n @param timestamp timestamp to identify the existing request.\n @param ancillaryData ancillary data of the price being requested.\n @param request price request parameters. The hash of these parameters must match with the request hash that is\n associated with the price request unique ID {requester, identifier, timestamp, ancillaryData}, or this method\n will revert.\n @return boolean indicating true if price exists and false if not."},"functionSelector":"a337e1ad","id":4431,"implemented":false,"kind":"function","modifiers":[],"name":"hasPrice","nameLocation":"12601:8:20","nodeType":"FunctionDefinition","parameters":{"id":4427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4417,"mutability":"mutable","name":"requester","nameLocation":"12627:9:20","nodeType":"VariableDeclaration","scope":4431,"src":"12619:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4416,"name":"address","nodeType":"ElementaryTypeName","src":"12619:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4419,"mutability":"mutable","name":"identifier","nameLocation":"12654:10:20","nodeType":"VariableDeclaration","scope":4431,"src":"12646:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12646:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4421,"mutability":"mutable","name":"timestamp","nameLocation":"12681:9:20","nodeType":"VariableDeclaration","scope":4431,"src":"12674:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4420,"name":"uint32","nodeType":"ElementaryTypeName","src":"12674:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4423,"mutability":"mutable","name":"ancillaryData","nameLocation":"12713:13:20","nodeType":"VariableDeclaration","scope":4431,"src":"12700:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4422,"name":"bytes","nodeType":"ElementaryTypeName","src":"12700:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4426,"mutability":"mutable","name":"request","nameLocation":"12751:7:20","nodeType":"VariableDeclaration","scope":4431,"src":"12736:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$4252_memory_ptr","typeString":"struct SkinnyOptimisticOracleInterface.Request"},"typeName":{"id":4425,"nodeType":"UserDefinedTypeName","pathNode":{"id":4424,"name":"Request","nameLocations":["12736:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":4252,"src":"12736:7:20"},"referencedDeclaration":4252,"src":"12736:7:20","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$4252_storage_ptr","typeString":"struct SkinnyOptimisticOracleInterface.Request"}},"visibility":"internal"}],"src":"12609:155:20"},"returnParameters":{"id":4430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4431,"src":"12789:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4428,"name":"bool","nodeType":"ElementaryTypeName","src":"12789:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12788:6:20"},"scope":4442,"src":"12592:203:20","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"documentation":{"id":4432,"nodeType":"StructuredDocumentation","src":"12801:305:20","text":" @notice Generates stamped ancillary data in the format that it would be used in the case of a price dispute.\n @param ancillaryData ancillary data of the price being requested.\n @param requester sender of the initial price request.\n @return the stamped ancillary bytes."},"functionSelector":"af5d2f39","id":4441,"implemented":false,"kind":"function","modifiers":[],"name":"stampAncillaryData","nameLocation":"13120:18:20","nodeType":"FunctionDefinition","parameters":{"id":4437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4434,"mutability":"mutable","name":"ancillaryData","nameLocation":"13152:13:20","nodeType":"VariableDeclaration","scope":4441,"src":"13139:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4433,"name":"bytes","nodeType":"ElementaryTypeName","src":"13139:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4436,"mutability":"mutable","name":"requester","nameLocation":"13175:9:20","nodeType":"VariableDeclaration","scope":4441,"src":"13167:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4435,"name":"address","nodeType":"ElementaryTypeName","src":"13167:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13138:47:20"},"returnParameters":{"id":4440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4441,"src":"13247:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4438,"name":"bytes","nodeType":"ElementaryTypeName","src":"13247:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13246:14:20"},"scope":4442,"src":"13111:150:20","stateMutability":"pure","virtual":true,"visibility":"public"}],"scope":4443,"src":"1388:11875:20","usedErrors":[],"usedEvents":[]}],"src":"42:13222:20"},"id":20},"contracts/HubPool.sol":{"ast":{"absolutePath":"contracts/HubPool.sol","exportedSymbols":{"Address":[932],"AddressWhitelistInterface":[3704],"Context":[954],"ExpandedIERC20":[3752],"FinderInterface":[3826],"FixedPoint":[3491],"HubPool":[6626],"HubPoolInterface":[7203],"IERC20":[190],"IERC20Permit":[226],"IdentifierWhitelistInterface":[3850],"Lockable":[6696],"LpTokenFactoryInterface":[7215],"MerkleLib":[6933],"MerkleProof":[1482],"MultiCaller":[3570],"OptimisticOracleConstraints":[3806],"OptimisticOracleInterface":[4223],"OracleInterfaces":[3801],"Ownable":[112],"SafeERC20":[602],"SafeMath":[1794],"SignedSafeMath":[1858],"SkinnyOptimisticOracleInterface":[4442],"SpokePoolInterface":[7500],"StoreInterface":[3895],"Testable":[3643],"Timer":[3678],"V3SpokePoolInterface":[7784],"WETH9Interface":[6965]},"id":6627,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":4444,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:21"},{"absolutePath":"contracts/MerkleLib.sol","file":"./MerkleLib.sol","id":4445,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6627,"sourceUnit":6934,"src":"62:25:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/HubPoolInterface.sol","file":"./interfaces/HubPoolInterface.sol","id":4446,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6627,"sourceUnit":7204,"src":"88:43:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Lockable.sol","file":"./Lockable.sol","id":4447,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6627,"sourceUnit":6697,"src":"132:24:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/LpTokenFactoryInterface.sol","file":"./interfaces/LpTokenFactoryInterface.sol","id":4448,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6627,"sourceUnit":7216,"src":"158:50:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/external/interfaces/WETH9Interface.sol","file":"./external/interfaces/WETH9Interface.sol","id":4449,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6627,"sourceUnit":6966,"src":"209:50:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uma/core/contracts/common/implementation/Testable.sol","file":"@uma/core/contracts/common/implementation/Testable.sol","id":4450,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6627,"sourceUnit":3644,"src":"261:64:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uma/core/contracts/common/implementation/MultiCaller.sol","file":"@uma/core/contracts/common/implementation/MultiCaller.sol","id":4451,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6627,"sourceUnit":3571,"src":"326:67:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol","file":"@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol","id":4452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6627,"sourceUnit":3705,"src":"394:77:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol","file":"@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol","id":4453,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6627,"sourceUnit":3827,"src":"473:88:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uma/core/contracts/data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol","file":"@uma/core/contracts/data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol","id":4454,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6627,"sourceUnit":3851,"src":"562:101:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uma/core/contracts/data-verification-mechanism/interfaces/StoreInterface.sol","file":"@uma/core/contracts/data-verification-mechanism/interfaces/StoreInterface.sol","id":4455,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6627,"sourceUnit":3896,"src":"664:87:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol","file":"@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol","id":4456,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6627,"sourceUnit":3807,"src":"752:86:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uma/core/contracts/optimistic-oracle-v2/interfaces/SkinnyOptimisticOracleInterface.sol","file":"@uma/core/contracts/optimistic-oracle-v2/interfaces/SkinnyOptimisticOracleInterface.sol","id":4457,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6627,"sourceUnit":4443,"src":"840:97:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uma/core/contracts/common/interfaces/ExpandedIERC20.sol","file":"@uma/core/contracts/common/interfaces/ExpandedIERC20.sol","id":4458,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6627,"sourceUnit":3753,"src":"938:66:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":4459,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6627,"sourceUnit":113,"src":"1006:52:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":4460,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6627,"sourceUnit":191,"src":"1059:56:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":4461,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6627,"sourceUnit":603,"src":"1116:65:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":4462,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6627,"sourceUnit":933,"src":"1182:51:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4464,"name":"HubPoolInterface","nameLocations":["2277:16:21"],"nodeType":"IdentifierPath","referencedDeclaration":7203,"src":"2277:16:21"},"id":4465,"nodeType":"InheritanceSpecifier","src":"2277:16:21"},{"baseName":{"id":4466,"name":"Testable","nameLocations":["2295:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":3643,"src":"2295:8:21"},"id":4467,"nodeType":"InheritanceSpecifier","src":"2295:8:21"},{"baseName":{"id":4468,"name":"Lockable","nameLocations":["2305:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":6696,"src":"2305:8:21"},"id":4469,"nodeType":"InheritanceSpecifier","src":"2305:8:21"},{"baseName":{"id":4470,"name":"MultiCaller","nameLocations":["2315:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":3570,"src":"2315:11:21"},"id":4471,"nodeType":"InheritanceSpecifier","src":"2315:11:21"},{"baseName":{"id":4472,"name":"Ownable","nameLocations":["2328:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"2328:7:21"},"id":4473,"nodeType":"InheritanceSpecifier","src":"2328:7:21"}],"canonicalName":"HubPool","contractDependencies":[],"contractKind":"contract","documentation":{"id":4463,"nodeType":"StructuredDocumentation","src":"1235:1021:21","text":" @notice Contract deployed on Ethereum that houses L1 token liquidity for all SpokePools. A dataworker can interact\n with merkle roots stored in this contract via inclusion proofs to instruct this contract to send tokens to L2\n SpokePools via \"pool rebalances\" that can be used to pay out relayers on those networks. This contract is also\n responsible for publishing relayer refund and slow relay merkle roots to SpokePools.\n @notice This contract is meant to act as the cross chain administrator and owner of all L2 spoke pools, so all\n governance actions and pool rebalances originate from here and bridge instructions to L2s.\n @dev This contract should be deprecated by the year 2106, at which point uint32 timestamps will roll over. This is\n an issue for this contract because fee calculations will become bizarre when multiplying by negative time deltas.\n Before this date, this contract should be paused from accepting new root bundles and all LP tokens should be\n disabled by the admin."},"fullyImplemented":true,"id":6626,"linearizedBaseContracts":[6626,112,954,3570,6696,3643,7203],"name":"HubPool","nameLocation":"2266:7:21","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4477,"libraryName":{"id":4474,"name":"SafeERC20","nameLocations":["2348:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":602,"src":"2348:9:21"},"nodeType":"UsingForDirective","src":"2342:27:21","typeName":{"id":4476,"nodeType":"UserDefinedTypeName","pathNode":{"id":4475,"name":"IERC20","nameLocations":["2362:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":190,"src":"2362:6:21"},"referencedDeclaration":190,"src":"2362:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}}},{"global":false,"id":4480,"libraryName":{"id":4478,"name":"Address","nameLocations":["2380:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":932,"src":"2380:7:21"},"nodeType":"UsingForDirective","src":"2374:26:21","typeName":{"id":4479,"name":"address","nodeType":"ElementaryTypeName","src":"2392:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"constant":false,"functionSelector":"4144fd61","id":4483,"mutability":"mutable","name":"rootBundleProposal","nameLocation":"2562:18:21","nodeType":"VariableDeclaration","scope":6626,"src":"2544:36:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_storage","typeString":"struct HubPoolInterface.RootBundle"},"typeName":{"id":4482,"nodeType":"UserDefinedTypeName","pathNode":{"id":4481,"name":"RootBundle","nameLocations":["2544:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":7003,"src":"2544:10:21"},"referencedDeclaration":7003,"src":"2544:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_storage_ptr","typeString":"struct HubPoolInterface.RootBundle"}},"visibility":"public"},{"constant":false,"functionSelector":"f0056a7d","id":4488,"mutability":"mutable","name":"pooledTokens","nameLocation":"2699:12:21","nodeType":"VariableDeclaration","scope":6626,"src":"2660:51:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PooledToken_$7016_storage_$","typeString":"mapping(address => struct HubPoolInterface.PooledToken)"},"typeName":{"id":4487,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4484,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2660:31:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PooledToken_$7016_storage_$","typeString":"mapping(address => struct HubPoolInterface.PooledToken)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4486,"nodeType":"UserDefinedTypeName","pathNode":{"id":4485,"name":"PooledToken","nameLocations":["2679:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":7016,"src":"2679:11:21"},"referencedDeclaration":7016,"src":"2679:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage_ptr","typeString":"struct HubPoolInterface.PooledToken"}}},"visibility":"public"},{"constant":false,"id":4492,"mutability":"mutable","name":"poolRebalanceRoutes","nameLocation":"3390:19:21","nodeType":"VariableDeclaration","scope":6626,"src":"3354:55:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"typeName":{"id":4491,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4489,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3362:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"3354:27:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4490,"name":"address","nodeType":"ElementaryTypeName","src":"3373:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"functionSelector":"09474ae2","id":4497,"mutability":"mutable","name":"crossChainContracts","nameLocation":"3539:19:21","nodeType":"VariableDeclaration","scope":6626,"src":"3493:65:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CrossChainContract_$7021_storage_$","typeString":"mapping(uint256 => struct HubPoolInterface.CrossChainContract)"},"typeName":{"id":4496,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4493,"name":"uint256","nodeType":"ElementaryTypeName","src":"3501:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3493:38:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CrossChainContract_$7021_storage_$","typeString":"mapping(uint256 => struct HubPoolInterface.CrossChainContract)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4495,"nodeType":"UserDefinedTypeName","pathNode":{"id":4494,"name":"CrossChainContract","nameLocations":["3512:18:21"],"nodeType":"IdentifierPath","referencedDeclaration":7021,"src":"3512:18:21"},"referencedDeclaration":7021,"src":"3512:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_CrossChainContract_$7021_storage_ptr","typeString":"struct HubPoolInterface.CrossChainContract"}}},"visibility":"public"},{"constant":false,"functionSelector":"e40064d7","id":4501,"mutability":"mutable","name":"unclaimedAccumulatedProtocolFees","nameLocation":"3600:32:21","nodeType":"VariableDeclaration","scope":6626,"src":"3565:67:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":4500,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4498,"name":"address","nodeType":"ElementaryTypeName","src":"3573:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3565:27:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4499,"name":"uint256","nodeType":"ElementaryTypeName","src":"3584:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"5c975abb","id":4503,"mutability":"mutable","name":"paused","nameLocation":"3705:6:21","nodeType":"VariableDeclaration","scope":6626,"src":"3693:18:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4502,"name":"bool","nodeType":"ElementaryTypeName","src":"3693:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"3fc8cef3","id":4506,"mutability":"immutable","name":"weth","nameLocation":"3785:4:21","nodeType":"VariableDeclaration","scope":6626,"src":"3753:36:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$6965","typeString":"contract WETH9Interface"},"typeName":{"id":4505,"nodeType":"UserDefinedTypeName","pathNode":{"id":4504,"name":"WETH9Interface","nameLocations":["3753:14:21"],"nodeType":"IdentifierPath","referencedDeclaration":6965,"src":"3753:14:21"},"referencedDeclaration":6965,"src":"3753:14:21","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$6965","typeString":"contract WETH9Interface"}},"visibility":"public"},{"constant":false,"functionSelector":"76ec08dd","id":4509,"mutability":"immutable","name":"lpTokenFactory","nameLocation":"3905:14:21","nodeType":"VariableDeclaration","scope":6626,"src":"3864:55:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_LpTokenFactoryInterface_$7215","typeString":"contract LpTokenFactoryInterface"},"typeName":{"id":4508,"nodeType":"UserDefinedTypeName","pathNode":{"id":4507,"name":"LpTokenFactoryInterface","nameLocations":["3864:23:21"],"nodeType":"IdentifierPath","referencedDeclaration":7215,"src":"3864:23:21"},"referencedDeclaration":7215,"src":"3864:23:21","typeDescriptions":{"typeIdentifier":"t_contract$_LpTokenFactoryInterface_$7215","typeString":"contract LpTokenFactoryInterface"}},"visibility":"public"},{"constant":false,"functionSelector":"b9a3c84c","id":4512,"mutability":"immutable","name":"finder","nameLocation":"4000:6:21","nodeType":"VariableDeclaration","scope":6626,"src":"3967:39:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3826","typeString":"contract FinderInterface"},"typeName":{"id":4511,"nodeType":"UserDefinedTypeName","pathNode":{"id":4510,"name":"FinderInterface","nameLocations":["3967:15:21"],"nodeType":"IdentifierPath","referencedDeclaration":3826,"src":"3967:15:21"},"referencedDeclaration":3826,"src":"3967:15:21","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3826","typeString":"contract FinderInterface"}},"visibility":"public"},{"constant":false,"functionSelector":"240f475f","id":4514,"mutability":"mutable","name":"protocolFeeCaptureAddress","nameLocation":"4130:25:21","nodeType":"VariableDeclaration","scope":6626,"src":"4115:40:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4513,"name":"address","nodeType":"ElementaryTypeName","src":"4115:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"c28f4392","id":4517,"mutability":"mutable","name":"bondToken","nameLocation":"4256:9:21","nodeType":"VariableDeclaration","scope":6626,"src":"4242:23:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":4516,"nodeType":"UserDefinedTypeName","pathNode":{"id":4515,"name":"IERC20","nameLocations":["4242:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":190,"src":"4242:6:21"},"referencedDeclaration":190,"src":"4242:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"6ad0690a","id":4520,"mutability":"mutable","name":"liveness","nameLocation":"4520:8:21","nodeType":"VariableDeclaration","scope":6626,"src":"4506:29:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4518,"name":"uint32","nodeType":"ElementaryTypeName","src":"4506:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"37323030","id":4519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4531:4:21","typeDescriptions":{"typeIdentifier":"t_rational_7200_by_1","typeString":"int_const 7200"},"value":"7200"},"visibility":"public"},{"constant":false,"functionSelector":"7998a1c4","id":4523,"mutability":"mutable","name":"identifier","nameLocation":"4663:10:21","nodeType":"VariableDeclaration","scope":6626,"src":"4648:39:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4648:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"4143524f53532d5632","id":4522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4676:11:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec4e9f157c7c27788e0dfbb20798d3f8c8066985256c4d077bdccf4022c0eb66","typeString":"literal_string \"ACROSS-V2\""},"value":"ACROSS-V2"},"visibility":"public"},{"constant":false,"functionSelector":"11cfc159","id":4526,"mutability":"mutable","name":"lpFeeRatePerSecond","nameLocation":"5151:18:21","nodeType":"VariableDeclaration","scope":6626,"src":"5136:49:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4524,"name":"uint256","nodeType":"ElementaryTypeName","src":"5136:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31353030303030303030303030","id":4525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5172:13:21","typeDescriptions":{"typeIdentifier":"t_rational_1500000000000_by_1","typeString":"int_const 1500000000000"},"value":"1500000000000"},"visibility":"public"},{"constant":false,"functionSelector":"4f7473ff","id":4528,"mutability":"mutable","name":"protocolFeeCapturePct","nameLocation":"5317:21:21","nodeType":"VariableDeclaration","scope":6626,"src":"5302:36:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4527,"name":"uint256","nodeType":"ElementaryTypeName","src":"5302:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"80f323a7","id":4530,"mutability":"mutable","name":"bondAmount","nameLocation":"5468:10:21","nodeType":"VariableDeclaration","scope":6626,"src":"5453:25:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4529,"name":"uint256","nodeType":"ElementaryTypeName","src":"5453:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"0e2fb031ee032dc02d8011dc50b816eb450cf856abd8261680dac74f72165bd2","id":4534,"name":"Paused","nameLocation":"5491:6:21","nodeType":"EventDefinition","parameters":{"id":4533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4532,"indexed":true,"mutability":"mutable","name":"isPaused","nameLocation":"5511:8:21","nodeType":"VariableDeclaration","scope":4534,"src":"5498:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4531,"name":"bool","nodeType":"ElementaryTypeName","src":"5498:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5497:23:21"},"src":"5485:36:21"},{"anonymous":false,"eventSelector":"993cba33f9b140c9ce20ba10d7eda92128d5beb6df856f064916108a11647a73","id":4544,"name":"EmergencyRootBundleDeleted","nameLocation":"5533:26:21","nodeType":"EventDefinition","parameters":{"id":4543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4536,"indexed":true,"mutability":"mutable","name":"poolRebalanceRoot","nameLocation":"5585:17:21","nodeType":"VariableDeclaration","scope":4544,"src":"5569:33:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4535,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5569:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4538,"indexed":true,"mutability":"mutable","name":"relayerRefundRoot","nameLocation":"5628:17:21","nodeType":"VariableDeclaration","scope":4544,"src":"5612:33:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4537,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5612:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4540,"indexed":false,"mutability":"mutable","name":"slowRelayRoot","nameLocation":"5663:13:21","nodeType":"VariableDeclaration","scope":4544,"src":"5655:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4539,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5655:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4542,"indexed":true,"mutability":"mutable","name":"proposer","nameLocation":"5702:8:21","nodeType":"VariableDeclaration","scope":4544,"src":"5686:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4541,"name":"address","nodeType":"ElementaryTypeName","src":"5686:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5559:157:21"},"src":"5527:190:21"},{"anonymous":false,"eventSelector":"c1993b89fd79a19ece7beb067ddc8534ca26d29c0ff94ea2f53b4a508d1eedc9","id":4550,"name":"ProtocolFeeCaptureSet","nameLocation":"5729:21:21","nodeType":"EventDefinition","parameters":{"id":4549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4546,"indexed":true,"mutability":"mutable","name":"newProtocolFeeCaptureAddress","nameLocation":"5767:28:21","nodeType":"VariableDeclaration","scope":4550,"src":"5751:44:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4545,"name":"address","nodeType":"ElementaryTypeName","src":"5751:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4548,"indexed":true,"mutability":"mutable","name":"newProtocolFeeCapturePct","nameLocation":"5813:24:21","nodeType":"VariableDeclaration","scope":4550,"src":"5797:40:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4547,"name":"uint256","nodeType":"ElementaryTypeName","src":"5797:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5750:88:21"},"src":"5723:116:21"},{"anonymous":false,"eventSelector":"74740239d7d696c84422b720e125e1f47c4138c66d1f4d2a48e99f4197cdb79c","id":4556,"name":"ProtocolFeesCapturedClaimed","nameLocation":"5851:27:21","nodeType":"EventDefinition","parameters":{"id":4555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4552,"indexed":true,"mutability":"mutable","name":"l1Token","nameLocation":"5895:7:21","nodeType":"VariableDeclaration","scope":4556,"src":"5879:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4551,"name":"address","nodeType":"ElementaryTypeName","src":"5879:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4554,"indexed":true,"mutability":"mutable","name":"accumulatedFees","nameLocation":"5920:15:21","nodeType":"VariableDeclaration","scope":4556,"src":"5904:31:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4553,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5878:58:21"},"src":"5845:92:21"},{"anonymous":false,"eventSelector":"bfa9a96010167e98ce8c004f718932cbbfd33a58d681c752e693be7d457a1b3b","id":4562,"name":"BondSet","nameLocation":"5949:7:21","nodeType":"EventDefinition","parameters":{"id":4561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4558,"indexed":true,"mutability":"mutable","name":"newBondToken","nameLocation":"5973:12:21","nodeType":"VariableDeclaration","scope":4562,"src":"5957:28:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4557,"name":"address","nodeType":"ElementaryTypeName","src":"5957:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4560,"indexed":false,"mutability":"mutable","name":"newBondAmount","nameLocation":"5995:13:21","nodeType":"VariableDeclaration","scope":4562,"src":"5987:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4559,"name":"uint256","nodeType":"ElementaryTypeName","src":"5987:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5956:53:21"},"src":"5943:67:21"},{"anonymous":false,"eventSelector":"04dd1d84d387f404568a7954b5e398518bdd716e1a8f4a790be9a1a225ad9347","id":4566,"name":"LivenessSet","nameLocation":"6022:11:21","nodeType":"EventDefinition","parameters":{"id":4565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4564,"indexed":false,"mutability":"mutable","name":"newLiveness","nameLocation":"6042:11:21","nodeType":"VariableDeclaration","scope":4566,"src":"6034:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4563,"name":"uint256","nodeType":"ElementaryTypeName","src":"6034:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6033:21:21"},"src":"6016:39:21"},{"anonymous":false,"eventSelector":"f45367c278fcceff23d601ce4bdd191e5bd61687ff9f29dc7276a08fe54c0c5d","id":4570,"name":"IdentifierSet","nameLocation":"6067:13:21","nodeType":"EventDefinition","parameters":{"id":4569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4568,"indexed":false,"mutability":"mutable","name":"newIdentifier","nameLocation":"6089:13:21","nodeType":"VariableDeclaration","scope":4570,"src":"6081:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4567,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6081:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6080:23:21"},"src":"6061:43:21"},{"anonymous":false,"eventSelector":"36050d958750e6ac3aa674ac7bbe8d0ae6a2f7d4b808e8c2c42c1f22fc9fc4bb","id":4578,"name":"CrossChainContractsSet","nameLocation":"6116:22:21","nodeType":"EventDefinition","parameters":{"id":4577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4572,"indexed":false,"mutability":"mutable","name":"l2ChainId","nameLocation":"6147:9:21","nodeType":"VariableDeclaration","scope":4578,"src":"6139:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4571,"name":"uint256","nodeType":"ElementaryTypeName","src":"6139:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4574,"indexed":false,"mutability":"mutable","name":"adapter","nameLocation":"6166:7:21","nodeType":"VariableDeclaration","scope":4578,"src":"6158:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4573,"name":"address","nodeType":"ElementaryTypeName","src":"6158:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4576,"indexed":false,"mutability":"mutable","name":"spokePool","nameLocation":"6183:9:21","nodeType":"VariableDeclaration","scope":4578,"src":"6175:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4575,"name":"address","nodeType":"ElementaryTypeName","src":"6175:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6138:55:21"},"src":"6110:84:21"},{"anonymous":false,"eventSelector":"04e291c80180d65a57b5bf1bed775777ec0d6f283ef34bcf130712714d8bb7f7","id":4584,"name":"L1TokenEnabledForLiquidityProvision","nameLocation":"6206:35:21","nodeType":"EventDefinition","parameters":{"id":4583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4580,"indexed":false,"mutability":"mutable","name":"l1Token","nameLocation":"6250:7:21","nodeType":"VariableDeclaration","scope":4584,"src":"6242:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4579,"name":"address","nodeType":"ElementaryTypeName","src":"6242:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4582,"indexed":false,"mutability":"mutable","name":"lpToken","nameLocation":"6267:7:21","nodeType":"VariableDeclaration","scope":4584,"src":"6259:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4581,"name":"address","nodeType":"ElementaryTypeName","src":"6259:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6241:34:21"},"src":"6200:76:21"},{"anonymous":false,"eventSelector":"ac111b3b527b307393c94d98f26140effb71411054466818be97912d2d65f776","id":4590,"name":"L2TokenDisabledForLiquidityProvision","nameLocation":"6288:36:21","nodeType":"EventDefinition","parameters":{"id":4589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4586,"indexed":false,"mutability":"mutable","name":"l1Token","nameLocation":"6333:7:21","nodeType":"VariableDeclaration","scope":4590,"src":"6325:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4585,"name":"address","nodeType":"ElementaryTypeName","src":"6325:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4588,"indexed":false,"mutability":"mutable","name":"lpToken","nameLocation":"6350:7:21","nodeType":"VariableDeclaration","scope":4590,"src":"6342:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4587,"name":"address","nodeType":"ElementaryTypeName","src":"6342:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6324:34:21"},"src":"6282:77:21"},{"anonymous":false,"eventSelector":"3c69701a61c79a92ef9692903aaa0068bce8771361ecb09547391e4fb4df8537","id":4600,"name":"LiquidityAdded","nameLocation":"6371:14:21","nodeType":"EventDefinition","parameters":{"id":4599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4592,"indexed":true,"mutability":"mutable","name":"l1Token","nameLocation":"6411:7:21","nodeType":"VariableDeclaration","scope":4600,"src":"6395:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4591,"name":"address","nodeType":"ElementaryTypeName","src":"6395:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4594,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"6436:6:21","nodeType":"VariableDeclaration","scope":4600,"src":"6428:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4593,"name":"uint256","nodeType":"ElementaryTypeName","src":"6428:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4596,"indexed":false,"mutability":"mutable","name":"lpTokensMinted","nameLocation":"6460:14:21","nodeType":"VariableDeclaration","scope":4600,"src":"6452:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4595,"name":"uint256","nodeType":"ElementaryTypeName","src":"6452:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4598,"indexed":true,"mutability":"mutable","name":"liquidityProvider","nameLocation":"6500:17:21","nodeType":"VariableDeclaration","scope":4600,"src":"6484:33:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4597,"name":"address","nodeType":"ElementaryTypeName","src":"6484:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6385:138:21"},"src":"6365:159:21"},{"anonymous":false,"eventSelector":"cda1185f28599e6bd14ab8a68b3c30a11e1dce4256b5e67e94dd3fd846a6c589","id":4610,"name":"LiquidityRemoved","nameLocation":"6535:16:21","nodeType":"EventDefinition","parameters":{"id":4609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4602,"indexed":true,"mutability":"mutable","name":"l1Token","nameLocation":"6577:7:21","nodeType":"VariableDeclaration","scope":4610,"src":"6561:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4601,"name":"address","nodeType":"ElementaryTypeName","src":"6561:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4604,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"6602:6:21","nodeType":"VariableDeclaration","scope":4610,"src":"6594:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4603,"name":"uint256","nodeType":"ElementaryTypeName","src":"6594:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4606,"indexed":false,"mutability":"mutable","name":"lpTokensBurnt","nameLocation":"6626:13:21","nodeType":"VariableDeclaration","scope":4610,"src":"6618:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4605,"name":"uint256","nodeType":"ElementaryTypeName","src":"6618:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4608,"indexed":true,"mutability":"mutable","name":"liquidityProvider","nameLocation":"6665:17:21","nodeType":"VariableDeclaration","scope":4610,"src":"6649:33:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4607,"name":"address","nodeType":"ElementaryTypeName","src":"6649:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6551:137:21"},"src":"6529:160:21"},{"anonymous":false,"eventSelector":"234e7af08f77827792cc909447f27d2e6a3e2d839b04e26b50b71704a131c8a8","id":4618,"name":"SetPoolRebalanceRoute","nameLocation":"6700:21:21","nodeType":"EventDefinition","parameters":{"id":4617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4612,"indexed":true,"mutability":"mutable","name":"destinationChainId","nameLocation":"6747:18:21","nodeType":"VariableDeclaration","scope":4618,"src":"6731:34:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4611,"name":"uint256","nodeType":"ElementaryTypeName","src":"6731:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4614,"indexed":true,"mutability":"mutable","name":"l1Token","nameLocation":"6791:7:21","nodeType":"VariableDeclaration","scope":4618,"src":"6775:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4613,"name":"address","nodeType":"ElementaryTypeName","src":"6775:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4616,"indexed":true,"mutability":"mutable","name":"destinationToken","nameLocation":"6824:16:21","nodeType":"VariableDeclaration","scope":4618,"src":"6808:32:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4615,"name":"address","nodeType":"ElementaryTypeName","src":"6808:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6721:125:21"},"src":"6694:153:21"},{"anonymous":false,"eventSelector":"b7d00a563842efb2c121a0eb02b7bb7ba1a34625bbc3d65057f1f0dbec0ec2a1","id":4628,"name":"SetEnableDepositRoute","nameLocation":"6858:21:21","nodeType":"EventDefinition","parameters":{"id":4627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4620,"indexed":true,"mutability":"mutable","name":"originChainId","nameLocation":"6905:13:21","nodeType":"VariableDeclaration","scope":4628,"src":"6889:29:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4619,"name":"uint256","nodeType":"ElementaryTypeName","src":"6889:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4622,"indexed":true,"mutability":"mutable","name":"destinationChainId","nameLocation":"6944:18:21","nodeType":"VariableDeclaration","scope":4628,"src":"6928:34:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4621,"name":"uint256","nodeType":"ElementaryTypeName","src":"6928:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4624,"indexed":true,"mutability":"mutable","name":"originToken","nameLocation":"6988:11:21","nodeType":"VariableDeclaration","scope":4628,"src":"6972:27:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4623,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4626,"indexed":false,"mutability":"mutable","name":"depositsEnabled","nameLocation":"7014:15:21","nodeType":"VariableDeclaration","scope":4628,"src":"7009:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4625,"name":"bool","nodeType":"ElementaryTypeName","src":"7009:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6879:156:21"},"src":"6852:184:21"},{"anonymous":false,"eventSelector":"3185fa6fac8e91dc65e7424a8081c73353151d2715bddb71db0982c1fe4c0fd4","id":4645,"name":"ProposeRootBundle","nameLocation":"7047:17:21","nodeType":"EventDefinition","parameters":{"id":4644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4630,"indexed":false,"mutability":"mutable","name":"challengePeriodEndTimestamp","nameLocation":"7081:27:21","nodeType":"VariableDeclaration","scope":4645,"src":"7074:34:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4629,"name":"uint32","nodeType":"ElementaryTypeName","src":"7074:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4632,"indexed":false,"mutability":"mutable","name":"poolRebalanceLeafCount","nameLocation":"7124:22:21","nodeType":"VariableDeclaration","scope":4645,"src":"7118:28:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4631,"name":"uint8","nodeType":"ElementaryTypeName","src":"7118:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4635,"indexed":false,"mutability":"mutable","name":"bundleEvaluationBlockNumbers","nameLocation":"7166:28:21","nodeType":"VariableDeclaration","scope":4645,"src":"7156:38:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4633,"name":"uint256","nodeType":"ElementaryTypeName","src":"7156:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4634,"nodeType":"ArrayTypeName","src":"7156:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4637,"indexed":true,"mutability":"mutable","name":"poolRebalanceRoot","nameLocation":"7220:17:21","nodeType":"VariableDeclaration","scope":4645,"src":"7204:33:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4636,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7204:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4639,"indexed":true,"mutability":"mutable","name":"relayerRefundRoot","nameLocation":"7263:17:21","nodeType":"VariableDeclaration","scope":4645,"src":"7247:33:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4638,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7247:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4641,"indexed":false,"mutability":"mutable","name":"slowRelayRoot","nameLocation":"7298:13:21","nodeType":"VariableDeclaration","scope":4645,"src":"7290:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4640,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7290:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4643,"indexed":true,"mutability":"mutable","name":"proposer","nameLocation":"7337:8:21","nodeType":"VariableDeclaration","scope":4645,"src":"7321:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4642,"name":"address","nodeType":"ElementaryTypeName","src":"7321:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7064:287:21"},"src":"7041:311:21"},{"anonymous":false,"eventSelector":"f652dd63b1aedbf9e740f3152fb67b0d94d069cf1182811ebd88921850d93567","id":4667,"name":"RootBundleExecuted","nameLocation":"7363:18:21","nodeType":"EventDefinition","parameters":{"id":4666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4647,"indexed":false,"mutability":"mutable","name":"groupIndex","nameLocation":"7399:10:21","nodeType":"VariableDeclaration","scope":4667,"src":"7391:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4646,"name":"uint256","nodeType":"ElementaryTypeName","src":"7391:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4649,"indexed":true,"mutability":"mutable","name":"leafId","nameLocation":"7435:6:21","nodeType":"VariableDeclaration","scope":4667,"src":"7419:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4648,"name":"uint256","nodeType":"ElementaryTypeName","src":"7419:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4651,"indexed":true,"mutability":"mutable","name":"chainId","nameLocation":"7467:7:21","nodeType":"VariableDeclaration","scope":4667,"src":"7451:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4650,"name":"uint256","nodeType":"ElementaryTypeName","src":"7451:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4654,"indexed":false,"mutability":"mutable","name":"l1Tokens","nameLocation":"7494:8:21","nodeType":"VariableDeclaration","scope":4667,"src":"7484:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4652,"name":"address","nodeType":"ElementaryTypeName","src":"7484:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4653,"nodeType":"ArrayTypeName","src":"7484:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4657,"indexed":false,"mutability":"mutable","name":"bundleLpFees","nameLocation":"7522:12:21","nodeType":"VariableDeclaration","scope":4667,"src":"7512:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4655,"name":"uint256","nodeType":"ElementaryTypeName","src":"7512:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4656,"nodeType":"ArrayTypeName","src":"7512:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4660,"indexed":false,"mutability":"mutable","name":"netSendAmounts","nameLocation":"7553:14:21","nodeType":"VariableDeclaration","scope":4667,"src":"7544:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":4658,"name":"int256","nodeType":"ElementaryTypeName","src":"7544:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4659,"nodeType":"ArrayTypeName","src":"7544:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":4663,"indexed":false,"mutability":"mutable","name":"runningBalances","nameLocation":"7586:15:21","nodeType":"VariableDeclaration","scope":4667,"src":"7577:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":4661,"name":"int256","nodeType":"ElementaryTypeName","src":"7577:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4662,"nodeType":"ArrayTypeName","src":"7577:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":4665,"indexed":true,"mutability":"mutable","name":"caller","nameLocation":"7627:6:21","nodeType":"VariableDeclaration","scope":4667,"src":"7611:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4664,"name":"address","nodeType":"ElementaryTypeName","src":"7611:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7381:258:21"},"src":"7357:283:21"},{"anonymous":false,"eventSelector":"218987b934c2f6bc596136829fbf43a5fef4d6fafce41f3f6254d9a870c2deec","id":4673,"name":"SpokePoolAdminFunctionTriggered","nameLocation":"7651:31:21","nodeType":"EventDefinition","parameters":{"id":4672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4669,"indexed":true,"mutability":"mutable","name":"chainId","nameLocation":"7699:7:21","nodeType":"VariableDeclaration","scope":4673,"src":"7683:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4668,"name":"uint256","nodeType":"ElementaryTypeName","src":"7683:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4671,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"7714:7:21","nodeType":"VariableDeclaration","scope":4673,"src":"7708:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4670,"name":"bytes","nodeType":"ElementaryTypeName","src":"7708:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7682:40:21"},"src":"7645:78:21"},{"anonymous":false,"eventSelector":"15951cb2ef6993bc23a55912e7d0bcac13e4797c432aaa334816aed6914a7a90","id":4679,"name":"RootBundleDisputed","nameLocation":"7735:18:21","nodeType":"EventDefinition","parameters":{"id":4678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4675,"indexed":true,"mutability":"mutable","name":"disputer","nameLocation":"7770:8:21","nodeType":"VariableDeclaration","scope":4679,"src":"7754:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4674,"name":"address","nodeType":"ElementaryTypeName","src":"7754:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4677,"indexed":false,"mutability":"mutable","name":"requestTime","nameLocation":"7788:11:21","nodeType":"VariableDeclaration","scope":4679,"src":"7780:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4676,"name":"uint256","nodeType":"ElementaryTypeName","src":"7780:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7753:47:21"},"src":"7729:72:21"},{"anonymous":false,"eventSelector":"0cfbbf45ab7f5225663454de7117b1b0ed5a7c133b61f54ccf367dcf8b6d4d59","id":4685,"name":"RootBundleCanceled","nameLocation":"7813:18:21","nodeType":"EventDefinition","parameters":{"id":4684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4681,"indexed":true,"mutability":"mutable","name":"disputer","nameLocation":"7848:8:21","nodeType":"VariableDeclaration","scope":4685,"src":"7832:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4680,"name":"address","nodeType":"ElementaryTypeName","src":"7832:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4683,"indexed":false,"mutability":"mutable","name":"requestTime","nameLocation":"7866:11:21","nodeType":"VariableDeclaration","scope":4685,"src":"7858:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4682,"name":"uint256","nodeType":"ElementaryTypeName","src":"7858:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7831:47:21"},"src":"7807:72:21"},{"body":{"id":4695,"nodeType":"Block","src":"7913:87:21","statements":[{"expression":{"arguments":[{"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7931:17:21","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4688,"name":"_activeRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6596,"src":"7932:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7932:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f706f73616c2068617320756e636c61696d6564206c6561766573","id":4691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7950:31:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_0c5073b7326ce1e8a2cf90a367d99d0dcb1c41d9d4b3ea6d4d382c2cd73afc51","typeString":"literal_string \"Proposal has unclaimed leaves\""},"value":"Proposal has unclaimed leaves"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0c5073b7326ce1e8a2cf90a367d99d0dcb1c41d9d4b3ea6d4d382c2cd73afc51","typeString":"literal_string \"Proposal has unclaimed leaves\""}],"id":4687,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7923:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7923:59:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4693,"nodeType":"ExpressionStatement","src":"7923:59:21"},{"id":4694,"nodeType":"PlaceholderStatement","src":"7992:1:21"}]},"id":4696,"name":"noActiveRequests","nameLocation":"7894:16:21","nodeType":"ModifierDefinition","parameters":{"id":4686,"nodeType":"ParameterList","parameters":[],"src":"7910:2:21"},"src":"7885:115:21","virtual":false,"visibility":"internal"},{"body":{"id":4705,"nodeType":"Block","src":"8026:66:21","statements":[{"expression":{"arguments":[{"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8044:7:21","subExpression":{"id":4699,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"8045:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e747261637420697320706175736564","id":4701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8053:20:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d","typeString":"literal_string \"Contract is paused\""},"value":"Contract is paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d","typeString":"literal_string \"Contract is paused\""}],"id":4698,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8036:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8036:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4703,"nodeType":"ExpressionStatement","src":"8036:38:21"},{"id":4704,"nodeType":"PlaceholderStatement","src":"8084:1:21"}]},"id":4706,"name":"unpaused","nameLocation":"8015:8:21","nodeType":"ModifierDefinition","parameters":{"id":4697,"nodeType":"ParameterList","parameters":[],"src":"8023:2:21"},"src":"8006:86:21","virtual":false,"visibility":"internal"},{"body":{"id":4720,"nodeType":"Block","src":"8138:85:21","statements":[{"id":4708,"nodeType":"PlaceholderStatement","src":"8148:1:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4714,"name":"_getOptimisticOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6032,"src":"8189:20:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_SkinnyOptimisticOracleInterface_$4442_$","typeString":"function () view returns (contract SkinnyOptimisticOracleInterface)"}},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8189:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_SkinnyOptimisticOracleInterface_$4442","typeString":"contract SkinnyOptimisticOracleInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SkinnyOptimisticOracleInterface_$4442","typeString":"contract SkinnyOptimisticOracleInterface"}],"id":4713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8181:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4712,"name":"address","nodeType":"ElementaryTypeName","src":"8181:7:21","typeDescriptions":{}}},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8181:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":4717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8214:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":4709,"name":"bondToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"8159:9:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8169:11:21","memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":330,"src":"8159:21:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8159:57:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4719,"nodeType":"ExpressionStatement","src":"8159:57:21"}]},"id":4721,"name":"zeroOptimisticOracleApproval","nameLocation":"8107:28:21","nodeType":"ModifierDefinition","parameters":{"id":4707,"nodeType":"ParameterList","parameters":[],"src":"8135:2:21"},"src":"8098:125:21","virtual":false,"visibility":"internal"},{"body":{"id":4756,"nodeType":"Block","src":"8664:142:21","statements":[{"expression":{"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4739,"name":"lpTokenFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4509,"src":"8674:14:21","typeDescriptions":{"typeIdentifier":"t_contract$_LpTokenFactoryInterface_$7215","typeString":"contract LpTokenFactoryInterface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4740,"name":"_lpTokenFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"8691:15:21","typeDescriptions":{"typeIdentifier":"t_contract$_LpTokenFactoryInterface_$7215","typeString":"contract LpTokenFactoryInterface"}},"src":"8674:32:21","typeDescriptions":{"typeIdentifier":"t_contract$_LpTokenFactoryInterface_$7215","typeString":"contract LpTokenFactoryInterface"}},"id":4742,"nodeType":"ExpressionStatement","src":"8674:32:21"},{"expression":{"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4743,"name":"finder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"8716:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3826","typeString":"contract FinderInterface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4744,"name":"_finder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"8725:7:21","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3826","typeString":"contract FinderInterface"}},"src":"8716:16:21","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3826","typeString":"contract FinderInterface"}},"id":4746,"nodeType":"ExpressionStatement","src":"8716:16:21"},{"expression":{"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4747,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4506,"src":"8742:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$6965","typeString":"contract WETH9Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4748,"name":"_weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"8749:5:21","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$6965","typeString":"contract WETH9Interface"}},"src":"8742:12:21","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$6965","typeString":"contract WETH9Interface"}},"id":4750,"nodeType":"ExpressionStatement","src":"8742:12:21"},{"expression":{"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4751,"name":"protocolFeeCaptureAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"8764:25:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":4752,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"8792:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8792:7:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8764:35:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4755,"nodeType":"ExpressionStatement","src":"8764:35:21"}]},"documentation":{"id":4722,"nodeType":"StructuredDocumentation","src":"8229:259:21","text":" @notice Construct HubPool.\n @param _lpTokenFactory LP Token factory address used to deploy LP tokens for new collateral types.\n @param _finder Finder address.\n @param _weth WETH address.\n @param _timer Timer address."},"id":4757,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":4736,"name":"_timer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"8656:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4737,"kind":"baseConstructorSpecifier","modifierName":{"id":4735,"name":"Testable","nameLocations":["8647:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":3643,"src":"8647:8:21"},"nodeType":"ModifierInvocation","src":"8647:16:21"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4725,"mutability":"mutable","name":"_lpTokenFactory","nameLocation":"8538:15:21","nodeType":"VariableDeclaration","scope":4757,"src":"8514:39:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_LpTokenFactoryInterface_$7215","typeString":"contract LpTokenFactoryInterface"},"typeName":{"id":4724,"nodeType":"UserDefinedTypeName","pathNode":{"id":4723,"name":"LpTokenFactoryInterface","nameLocations":["8514:23:21"],"nodeType":"IdentifierPath","referencedDeclaration":7215,"src":"8514:23:21"},"referencedDeclaration":7215,"src":"8514:23:21","typeDescriptions":{"typeIdentifier":"t_contract$_LpTokenFactoryInterface_$7215","typeString":"contract LpTokenFactoryInterface"}},"visibility":"internal"},{"constant":false,"id":4728,"mutability":"mutable","name":"_finder","nameLocation":"8579:7:21","nodeType":"VariableDeclaration","scope":4757,"src":"8563:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3826","typeString":"contract FinderInterface"},"typeName":{"id":4727,"nodeType":"UserDefinedTypeName","pathNode":{"id":4726,"name":"FinderInterface","nameLocations":["8563:15:21"],"nodeType":"IdentifierPath","referencedDeclaration":3826,"src":"8563:15:21"},"referencedDeclaration":3826,"src":"8563:15:21","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3826","typeString":"contract FinderInterface"}},"visibility":"internal"},{"constant":false,"id":4731,"mutability":"mutable","name":"_weth","nameLocation":"8611:5:21","nodeType":"VariableDeclaration","scope":4757,"src":"8596:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$6965","typeString":"contract WETH9Interface"},"typeName":{"id":4730,"nodeType":"UserDefinedTypeName","pathNode":{"id":4729,"name":"WETH9Interface","nameLocations":["8596:14:21"],"nodeType":"IdentifierPath","referencedDeclaration":6965,"src":"8596:14:21"},"referencedDeclaration":6965,"src":"8596:14:21","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$6965","typeString":"contract WETH9Interface"}},"visibility":"internal"},{"constant":false,"id":4733,"mutability":"mutable","name":"_timer","nameLocation":"8634:6:21","nodeType":"VariableDeclaration","scope":4757,"src":"8626:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4732,"name":"address","nodeType":"ElementaryTypeName","src":"8626:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8504:142:21"},"returnParameters":{"id":4738,"nodeType":"ParameterList","parameters":[],"src":"8664:0:21"},"scope":6626,"src":"8493:313:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[7026],"body":{"id":4775,"nodeType":"Block","src":"9310:59:21","statements":[{"expression":{"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4767,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"9320:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4768,"name":"pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"9329:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9320:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4770,"nodeType":"ExpressionStatement","src":"9320:14:21"},{"eventCall":{"arguments":[{"id":4772,"name":"pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"9356:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4771,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4534,"src":"9349:6:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9349:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4774,"nodeType":"EmitStatement","src":"9344:18:21"}]},"documentation":{"id":4758,"nodeType":"StructuredDocumentation","src":"8979:265:21","text":" @notice Pauses the bundle proposal and execution process. This is intended to be used during upgrades or when\n something goes awry.\n @param pause true if the call is meant to pause the system, false if the call is meant to unpause it."},"functionSelector":"16c38b3c","id":4776,"implemented":true,"kind":"function","modifiers":[{"id":4763,"kind":"modifierInvocation","modifierName":{"id":4762,"name":"onlyOwner","nameLocations":["9287:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"9287:9:21"},"nodeType":"ModifierInvocation","src":"9287:9:21"},{"id":4765,"kind":"modifierInvocation","modifierName":{"id":4764,"name":"nonReentrant","nameLocations":["9297:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":6653,"src":"9297:12:21"},"nodeType":"ModifierInvocation","src":"9297:12:21"}],"name":"setPaused","nameLocation":"9258:9:21","nodeType":"FunctionDefinition","parameters":{"id":4761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4760,"mutability":"mutable","name":"pause","nameLocation":"9273:5:21","nodeType":"VariableDeclaration","scope":4776,"src":"9268:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4759,"name":"bool","nodeType":"ElementaryTypeName","src":"9268:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9267:12:21"},"returnParameters":{"id":4766,"nodeType":"ParameterList","parameters":[],"src":"9310:0:21"},"scope":6626,"src":"9249:120:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[7029],"body":{"id":4816,"nodeType":"Block","src":"9881:499:21","statements":[{"assignments":[4786],"declarations":[{"constant":false,"id":4786,"mutability":"mutable","name":"_rootBundleProposal","nameLocation":"9909:19:21","nodeType":"VariableDeclaration","scope":4816,"src":"9891:37:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_memory_ptr","typeString":"struct HubPoolInterface.RootBundle"},"typeName":{"id":4785,"nodeType":"UserDefinedTypeName","pathNode":{"id":4784,"name":"RootBundle","nameLocations":["9891:10:21"],"nodeType":"IdentifierPath","referencedDeclaration":7003,"src":"9891:10:21"},"referencedDeclaration":7003,"src":"9891:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_storage_ptr","typeString":"struct HubPoolInterface.RootBundle"}},"visibility":"internal"}],"id":4788,"initialValue":{"id":4787,"name":"rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"9931:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_storage","typeString":"struct HubPoolInterface.RootBundle storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9891:58:21"},{"expression":{"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"9959:25:21","subExpression":{"id":4789,"name":"rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"9966:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_storage","typeString":"struct HubPoolInterface.RootBundle storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4791,"nodeType":"ExpressionStatement","src":"9959:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4792,"name":"_rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"9998:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_memory_ptr","typeString":"struct HubPoolInterface.RootBundle memory"}},"id":4793,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10018:31:21","memberName":"unclaimedPoolRebalanceLeafCount","nodeType":"MemberAccess","referencedDeclaration":7000,"src":"9998:51:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10052:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9998:55:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4804,"nodeType":"IfStatement","src":"9994:137:21","trueBody":{"expression":{"arguments":[{"expression":{"id":4799,"name":"_rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"10090:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_memory_ptr","typeString":"struct HubPoolInterface.RootBundle memory"}},"id":4800,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10110:8:21","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":6998,"src":"10090:28:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4801,"name":"bondAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"10120:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4796,"name":"bondToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"10067:9:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10077:12:21","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":259,"src":"10067:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10067:64:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4803,"nodeType":"ExpressionStatement","src":"10067:64:21"}},{"eventCall":{"arguments":[{"expression":{"id":4806,"name":"_rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"10186:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_memory_ptr","typeString":"struct HubPoolInterface.RootBundle memory"}},"id":4807,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10206:17:21","memberName":"poolRebalanceRoot","nodeType":"MemberAccess","referencedDeclaration":6990,"src":"10186:37:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4808,"name":"_rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"10237:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_memory_ptr","typeString":"struct HubPoolInterface.RootBundle memory"}},"id":4809,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10257:17:21","memberName":"relayerRefundRoot","nodeType":"MemberAccess","referencedDeclaration":6992,"src":"10237:37:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4810,"name":"_rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"10288:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_memory_ptr","typeString":"struct HubPoolInterface.RootBundle memory"}},"id":4811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10308:13:21","memberName":"slowRelayRoot","nodeType":"MemberAccess","referencedDeclaration":6994,"src":"10288:33:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4812,"name":"_rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"10335:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_memory_ptr","typeString":"struct HubPoolInterface.RootBundle memory"}},"id":4813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10355:8:21","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":6998,"src":"10335:28:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4805,"name":"EmergencyRootBundleDeleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"10146:26:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,bytes32,bytes32,address)"}},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:227:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4815,"nodeType":"EmitStatement","src":"10141:232:21"}]},"documentation":{"id":4777,"nodeType":"StructuredDocumentation","src":"9375:436:21","text":" @notice This allows for the deletion of the active proposal in case of emergency.\n @dev This is primarily intended to rectify situations where an unexecutable bundle gets through liveness in the\n case of a non-malicious bug in the proposal/dispute code. Without this function, the contract would be\n indefinitely blocked, migration would be required, and in-progress transfers would never be repaid."},"functionSelector":"625997c0","id":4817,"implemented":true,"kind":"function","modifiers":[{"id":4780,"kind":"modifierInvocation","modifierName":{"id":4779,"name":"onlyOwner","nameLocations":["9858:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"9858:9:21"},"nodeType":"ModifierInvocation","src":"9858:9:21"},{"id":4782,"kind":"modifierInvocation","modifierName":{"id":4781,"name":"nonReentrant","nameLocations":["9868:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":6653,"src":"9868:12:21"},"nodeType":"ModifierInvocation","src":"9868:12:21"}],"name":"emergencyDeleteProposal","nameLocation":"9825:23:21","nodeType":"FunctionDefinition","parameters":{"id":4778,"nodeType":"ParameterList","parameters":[],"src":"9848:2:21"},"returnParameters":{"id":4783,"nodeType":"ParameterList","parameters":[],"src":"9881:0:21"},"scope":6626,"src":"9816:564:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[7036],"body":{"id":4835,"nodeType":"Block","src":"11023:68:21","statements":[{"expression":{"arguments":[{"id":4831,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"11062:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4832,"name":"functionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"11071:12:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4830,"name":"_relaySpokePoolAdminFunction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"11033:28:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,bytes memory)"}},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11033:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4834,"nodeType":"ExpressionStatement","src":"11033:51:21"}]},"documentation":{"id":4818,"nodeType":"StructuredDocumentation","src":"10386:476:21","text":" @notice Sends message to SpokePool from this contract. Callable only by owner.\n @dev This function has permission to call onlyAdmin functions on the SpokePool, so it's imperative that this\n contract only allows the owner to call this method directly or indirectly.\n @param chainId Chain with SpokePool to send message to.\n @param functionData ABI encoded function call to send to SpokePool, but can be any arbitrary data technically."},"functionSelector":"dd70e5e8","id":4836,"implemented":true,"kind":"function","modifiers":[{"id":4826,"kind":"modifierInvocation","modifierName":{"id":4825,"name":"onlyOwner","nameLocations":["10988:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"10988:9:21"},"nodeType":"ModifierInvocation","src":"10988:9:21"},{"id":4828,"kind":"modifierInvocation","modifierName":{"id":4827,"name":"nonReentrant","nameLocations":["11006:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":6653,"src":"11006:12:21"},"nodeType":"ModifierInvocation","src":"11006:12:21"}],"name":"relaySpokePoolAdminFunction","nameLocation":"10876:27:21","nodeType":"FunctionDefinition","overrides":{"id":4824,"nodeType":"OverrideSpecifier","overrides":[],"src":"10971:8:21"},"parameters":{"id":4823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4820,"mutability":"mutable","name":"chainId","nameLocation":"10912:7:21","nodeType":"VariableDeclaration","scope":4836,"src":"10904:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4819,"name":"uint256","nodeType":"ElementaryTypeName","src":"10904:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4822,"mutability":"mutable","name":"functionData","nameLocation":"10934:12:21","nodeType":"VariableDeclaration","scope":4836,"src":"10921:25:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4821,"name":"bytes","nodeType":"ElementaryTypeName","src":"10921:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10903:44:21"},"returnParameters":{"id":4829,"nodeType":"ParameterList","parameters":[],"src":"11023:0:21"},"scope":6626,"src":"10867:224:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[7043],"body":{"id":4879,"nodeType":"Block","src":"11532:397:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4850,"name":"newProtocolFeeCapturePct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"11550:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31653138","id":4851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11578:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"11550:32:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4261642070726f746f636f6c46656543617074757265506374","id":4853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11584:27:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_417f2662210a4d4fd059e409766eaa42b82de48fa50d61040c207e769066d139","typeString":"literal_string \"Bad protocolFeeCapturePct\""},"value":"Bad protocolFeeCapturePct"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_417f2662210a4d4fd059e409766eaa42b82de48fa50d61040c207e769066d139","typeString":"literal_string \"Bad protocolFeeCapturePct\""}],"id":4849,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11542:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11542:70:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4855,"nodeType":"ExpressionStatement","src":"11542:70:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4857,"name":"newProtocolFeeCaptureAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"11630:28:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11670:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11662:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4858,"name":"address","nodeType":"ElementaryTypeName","src":"11662:7:21","typeDescriptions":{}}},"id":4861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11662:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11630:42:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4261642070726f746f636f6c4665654361707475726541646472657373","id":4863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11674:31:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_ab4c522a8b40fa4df9f391dbd4123036f8e03a55aa66902f66cc6f3caec8eb20","typeString":"literal_string \"Bad protocolFeeCaptureAddress\""},"value":"Bad protocolFeeCaptureAddress"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ab4c522a8b40fa4df9f391dbd4123036f8e03a55aa66902f66cc6f3caec8eb20","typeString":"literal_string \"Bad protocolFeeCaptureAddress\""}],"id":4856,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11622:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11622:84:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4865,"nodeType":"ExpressionStatement","src":"11622:84:21"},{"expression":{"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4866,"name":"protocolFeeCaptureAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"11716:25:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4867,"name":"newProtocolFeeCaptureAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"11744:28:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11716:56:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4869,"nodeType":"ExpressionStatement","src":"11716:56:21"},{"expression":{"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4870,"name":"protocolFeeCapturePct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"11782:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4871,"name":"newProtocolFeeCapturePct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"11806:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11782:48:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4873,"nodeType":"ExpressionStatement","src":"11782:48:21"},{"eventCall":{"arguments":[{"id":4875,"name":"newProtocolFeeCaptureAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"11867:28:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4876,"name":"newProtocolFeeCapturePct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"11897:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4874,"name":"ProtocolFeeCaptureSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4550,"src":"11845:21:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11845:77:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4878,"nodeType":"EmitStatement","src":"11840:82:21"}]},"documentation":{"id":4837,"nodeType":"StructuredDocumentation","src":"11097:252:21","text":" @notice Sets protocolFeeCaptureAddress and protocolFeeCapturePct. Callable only by owner.\n @param newProtocolFeeCaptureAddress New protocol fee capture address.\n @param newProtocolFeeCapturePct New protocol fee capture %."},"functionSelector":"00660b53","id":4880,"implemented":true,"kind":"function","modifiers":[{"id":4845,"kind":"modifierInvocation","modifierName":{"id":4844,"name":"onlyOwner","nameLocations":["11497:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"11497:9:21"},"nodeType":"ModifierInvocation","src":"11497:9:21"},{"id":4847,"kind":"modifierInvocation","modifierName":{"id":4846,"name":"nonReentrant","nameLocations":["11515:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":6653,"src":"11515:12:21"},"nodeType":"ModifierInvocation","src":"11515:12:21"}],"name":"setProtocolFeeCapture","nameLocation":"11363:21:21","nodeType":"FunctionDefinition","overrides":{"id":4843,"nodeType":"OverrideSpecifier","overrides":[],"src":"11480:8:21"},"parameters":{"id":4842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4839,"mutability":"mutable","name":"newProtocolFeeCaptureAddress","nameLocation":"11393:28:21","nodeType":"VariableDeclaration","scope":4880,"src":"11385:36:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4838,"name":"address","nodeType":"ElementaryTypeName","src":"11385:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4841,"mutability":"mutable","name":"newProtocolFeeCapturePct","nameLocation":"11431:24:21","nodeType":"VariableDeclaration","scope":4880,"src":"11423:32:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4840,"name":"uint256","nodeType":"ElementaryTypeName","src":"11423:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11384:72:21"},"returnParameters":{"id":4848,"nodeType":"ParameterList","parameters":[],"src":"11532:0:21"},"scope":6626,"src":"11354:575:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[7051],"body":{"id":4948,"nodeType":"Block","src":"12270:977:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4897,"name":"newBondAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"12604:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12621:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12604:18:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"626f6e6420657175616c20746f2066696e616c20666565","id":4900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12624:25:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_69bd6b885ddab92f7d5403cc0830018b396443135f3ece02f35fa1ae0dc0a2a4","typeString":"literal_string \"bond equal to final fee\""},"value":"bond equal to final fee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_69bd6b885ddab92f7d5403cc0830018b396443135f3ece02f35fa1ae0dc0a2a4","typeString":"literal_string \"bond equal to final fee\""}],"id":4896,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12596:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12596:54:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4902,"nodeType":"ExpressionStatement","src":"12596:54:21"},{"assignments":[4905],"declarations":[{"constant":false,"id":4905,"mutability":"mutable","name":"addressWhitelist","nameLocation":"12741:16:21","nodeType":"VariableDeclaration","scope":4948,"src":"12715:42:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AddressWhitelistInterface_$3704","typeString":"contract AddressWhitelistInterface"},"typeName":{"id":4904,"nodeType":"UserDefinedTypeName","pathNode":{"id":4903,"name":"AddressWhitelistInterface","nameLocations":["12715:25:21"],"nodeType":"IdentifierPath","referencedDeclaration":3704,"src":"12715:25:21"},"referencedDeclaration":3704,"src":"12715:25:21","typeDescriptions":{"typeIdentifier":"t_contract$_AddressWhitelistInterface_$3704","typeString":"contract AddressWhitelistInterface"}},"visibility":"internal"}],"id":4913,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":4909,"name":"OracleInterfaces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"12831:16:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OracleInterfaces_$3801_$","typeString":"type(library OracleInterfaces)"}},"id":4910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12848:19:21","memberName":"CollateralWhitelist","nodeType":"MemberAccess","referencedDeclaration":3773,"src":"12831:36:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4907,"name":"finder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"12799:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3826","typeString":"contract FinderInterface"}},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12806:24:21","memberName":"getImplementationAddress","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"12799:31:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view external returns (address)"}},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12799:69:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4906,"name":"AddressWhitelistInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"12760:25:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressWhitelistInterface_$3704_$","typeString":"type(contract AddressWhitelistInterface)"}},"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12760:118:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AddressWhitelistInterface_$3704","typeString":"contract AddressWhitelistInterface"}},"nodeType":"VariableDeclarationStatement","src":"12715:163:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4919,"name":"newBondToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"12935:12:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}],"id":4918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12927:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4917,"name":"address","nodeType":"ElementaryTypeName","src":"12927:7:21","typeDescriptions":{}}},"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12927:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4915,"name":"addressWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4905,"src":"12896:16:21","typeDescriptions":{"typeIdentifier":"t_contract$_AddressWhitelistInterface_$3704","typeString":"contract AddressWhitelistInterface"}},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12913:13:21","memberName":"isOnWhitelist","nodeType":"MemberAccess","referencedDeclaration":3697,"src":"12896:30:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":4921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12896:53:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74206f6e2077686974656c697374","id":4922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12951:18:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_0bf2fdbec3bb8c1695b691634bbc243f3c96dec283b5c7e6130c63076a9db813","typeString":"literal_string \"Not on whitelist\""},"value":"Not on whitelist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0bf2fdbec3bb8c1695b691634bbc243f3c96dec283b5c7e6130c63076a9db813","typeString":"literal_string \"Not on whitelist\""}],"id":4914,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12888:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12888:82:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4924,"nodeType":"ExpressionStatement","src":"12888:82:21"},{"expression":{"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4925,"name":"bondToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"13053:9:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4926,"name":"newBondToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"13065:12:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"src":"13053:24:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":4928,"nodeType":"ExpressionStatement","src":"13053:24:21"},{"assignments":[4930],"declarations":[{"constant":false,"id":4930,"mutability":"mutable","name":"_bondAmount","nameLocation":"13095:11:21","nodeType":"VariableDeclaration","scope":4948,"src":"13087:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4929,"name":"uint256","nodeType":"ElementaryTypeName","src":"13087:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4935,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4931,"name":"newBondAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"13109:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4932,"name":"_getBondTokenFinalFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"13125:21:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13125:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13109:39:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13087:61:21"},{"expression":{"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4936,"name":"bondAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"13158:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4937,"name":"_bondAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4930,"src":"13171:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13158:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4939,"nodeType":"ExpressionStatement","src":"13158:24:21"},{"eventCall":{"arguments":[{"arguments":[{"id":4943,"name":"newBondToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"13213:12:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}],"id":4942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13205:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4941,"name":"address","nodeType":"ElementaryTypeName","src":"13205:7:21","typeDescriptions":{}}},"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13205:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4945,"name":"_bondAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4930,"src":"13228:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4940,"name":"BondSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"13197:7:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13197:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4947,"nodeType":"EmitStatement","src":"13192:48:21"}]},"documentation":{"id":4881,"nodeType":"StructuredDocumentation","src":"11935:169:21","text":" @notice Sets bond token and amount. Callable only by owner.\n @param newBondToken New bond currency.\n @param newBondAmount New bond amount."},"functionSelector":"33dc09ca","id":4949,"implemented":true,"kind":"function","modifiers":[{"id":4890,"kind":"modifierInvocation","modifierName":{"id":4889,"name":"onlyOwner","nameLocations":["12210:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"12210:9:21"},"nodeType":"ModifierInvocation","src":"12210:9:21"},{"id":4892,"kind":"modifierInvocation","modifierName":{"id":4891,"name":"noActiveRequests","nameLocations":["12228:16:21"],"nodeType":"IdentifierPath","referencedDeclaration":4696,"src":"12228:16:21"},"nodeType":"ModifierInvocation","src":"12228:16:21"},{"id":4894,"kind":"modifierInvocation","modifierName":{"id":4893,"name":"nonReentrant","nameLocations":["12253:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":6653,"src":"12253:12:21"},"nodeType":"ModifierInvocation","src":"12253:12:21"}],"name":"setBond","nameLocation":"12118:7:21","nodeType":"FunctionDefinition","overrides":{"id":4888,"nodeType":"OverrideSpecifier","overrides":[],"src":"12193:8:21"},"parameters":{"id":4887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4884,"mutability":"mutable","name":"newBondToken","nameLocation":"12133:12:21","nodeType":"VariableDeclaration","scope":4949,"src":"12126:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":4883,"nodeType":"UserDefinedTypeName","pathNode":{"id":4882,"name":"IERC20","nameLocations":["12126:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":190,"src":"12126:6:21"},"referencedDeclaration":190,"src":"12126:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4886,"mutability":"mutable","name":"newBondAmount","nameLocation":"12155:13:21","nodeType":"VariableDeclaration","scope":4949,"src":"12147:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4885,"name":"uint256","nodeType":"ElementaryTypeName","src":"12147:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12125:44:21"},"returnParameters":{"id":4895,"nodeType":"ParameterList","parameters":[],"src":"12270:0:21"},"scope":6626,"src":"12109:1138:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[7056],"body":{"id":4975,"nodeType":"Block","src":"13478:143:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4961,"name":"newLiveness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"13496:11:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3130","id":4962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13510:10:21","subdenomination":"minutes","typeDescriptions":{"typeIdentifier":"t_rational_600_by_1","typeString":"int_const 600"},"value":"10"},"src":"13496:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c6976656e65737320746f6f2073686f7274","id":4964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13522:20:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_93235aa4dfb03ebec3f9f45e89c5cc2840c75130929307a67f0a498562de7b4c","typeString":"literal_string \"Liveness too short\""},"value":"Liveness too short"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93235aa4dfb03ebec3f9f45e89c5cc2840c75130929307a67f0a498562de7b4c","typeString":"literal_string \"Liveness too short\""}],"id":4960,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13488:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13488:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4966,"nodeType":"ExpressionStatement","src":"13488:55:21"},{"expression":{"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4967,"name":"liveness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"13553:8:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4968,"name":"newLiveness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"13564:11:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"13553:22:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":4970,"nodeType":"ExpressionStatement","src":"13553:22:21"},{"eventCall":{"arguments":[{"id":4972,"name":"newLiveness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"13602:11:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":4971,"name":"LivenessSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"13590:11:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13590:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4974,"nodeType":"EmitStatement","src":"13585:29:21"}]},"documentation":{"id":4950,"nodeType":"StructuredDocumentation","src":"13253:140:21","text":" @notice Sets root bundle proposal liveness period. Callable only by owner.\n @param newLiveness New liveness period."},"functionSelector":"cd949995","id":4976,"implemented":true,"kind":"function","modifiers":[{"id":4956,"kind":"modifierInvocation","modifierName":{"id":4955,"name":"onlyOwner","nameLocations":["13455:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"13455:9:21"},"nodeType":"ModifierInvocation","src":"13455:9:21"},{"id":4958,"kind":"modifierInvocation","modifierName":{"id":4957,"name":"nonReentrant","nameLocations":["13465:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":6653,"src":"13465:12:21"},"nodeType":"ModifierInvocation","src":"13465:12:21"}],"name":"setLiveness","nameLocation":"13407:11:21","nodeType":"FunctionDefinition","overrides":{"id":4954,"nodeType":"OverrideSpecifier","overrides":[],"src":"13446:8:21"},"parameters":{"id":4953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4952,"mutability":"mutable","name":"newLiveness","nameLocation":"13426:11:21","nodeType":"VariableDeclaration","scope":4976,"src":"13419:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4951,"name":"uint32","nodeType":"ElementaryTypeName","src":"13419:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"13418:20:21"},"returnParameters":{"id":4959,"nodeType":"ParameterList","parameters":[],"src":"13478:0:21"},"scope":6626,"src":"13398:223:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[7061],"body":{"id":5016,"nodeType":"Block","src":"13870:371:21","statements":[{"assignments":[4991],"declarations":[{"constant":false,"id":4991,"mutability":"mutable","name":"identifierWhitelist","nameLocation":"13909:19:21","nodeType":"VariableDeclaration","scope":5016,"src":"13880:48:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IdentifierWhitelistInterface_$3850","typeString":"contract IdentifierWhitelistInterface"},"typeName":{"id":4990,"nodeType":"UserDefinedTypeName","pathNode":{"id":4989,"name":"IdentifierWhitelistInterface","nameLocations":["13880:28:21"],"nodeType":"IdentifierPath","referencedDeclaration":3850,"src":"13880:28:21"},"referencedDeclaration":3850,"src":"13880:28:21","typeDescriptions":{"typeIdentifier":"t_contract$_IdentifierWhitelistInterface_$3850","typeString":"contract IdentifierWhitelistInterface"}},"visibility":"internal"}],"id":4999,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":4995,"name":"OracleInterfaces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"14005:16:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OracleInterfaces_$3801_$","typeString":"type(library OracleInterfaces)"}},"id":4996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14022:19:21","memberName":"IdentifierWhitelist","nodeType":"MemberAccess","referencedDeclaration":3761,"src":"14005:36:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4993,"name":"finder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"13973:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3826","typeString":"contract FinderInterface"}},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13980:24:21","memberName":"getImplementationAddress","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"13973:31:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view external returns (address)"}},"id":4997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13973:69:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4992,"name":"IdentifierWhitelistInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"13931:28:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IdentifierWhitelistInterface_$3850_$","typeString":"type(contract IdentifierWhitelistInterface)"}},"id":4998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13931:121:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IdentifierWhitelistInterface_$3850","typeString":"contract IdentifierWhitelistInterface"}},"nodeType":"VariableDeclarationStatement","src":"13880:172:21"},{"expression":{"arguments":[{"arguments":[{"id":5003,"name":"newIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"14112:13:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5001,"name":"identifierWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"14070:19:21","typeDescriptions":{"typeIdentifier":"t_contract$_IdentifierWhitelistInterface_$3850","typeString":"contract IdentifierWhitelistInterface"}},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14090:21:21","memberName":"isIdentifierSupported","nodeType":"MemberAccess","referencedDeclaration":3849,"src":"14070:41:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32) view external returns (bool)"}},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14070:56:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4964656e746966696572206e6f7420737570706f72746564","id":5005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14128:26:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ca52a399534ba98c20e6f782eec7f575ce9d4c7bfbd0bd862da24fefbd7aed1","typeString":"literal_string \"Identifier not supported\""},"value":"Identifier not supported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ca52a399534ba98c20e6f782eec7f575ce9d4c7bfbd0bd862da24fefbd7aed1","typeString":"literal_string \"Identifier not supported\""}],"id":5000,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14062:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14062:93:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5007,"nodeType":"ExpressionStatement","src":"14062:93:21"},{"expression":{"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5008,"name":"identifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4523,"src":"14165:10:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5009,"name":"newIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"14178:13:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"14165:26:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5011,"nodeType":"ExpressionStatement","src":"14165:26:21"},{"eventCall":{"arguments":[{"id":5013,"name":"newIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"14220:13:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5012,"name":"IdentifierSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"14206:13:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14206:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5015,"nodeType":"EmitStatement","src":"14201:33:21"}]},"documentation":{"id":4977,"nodeType":"StructuredDocumentation","src":"13627:136:21","text":" @notice Sets identifier for root bundle disputes. Callable only by owner.\n @param newIdentifier New identifier."},"functionSelector":"00c99206","id":5017,"implemented":true,"kind":"function","modifiers":[{"id":4983,"kind":"modifierInvocation","modifierName":{"id":4982,"name":"onlyOwner","nameLocations":["13830:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"13830:9:21"},"nodeType":"ModifierInvocation","src":"13830:9:21"},{"id":4985,"kind":"modifierInvocation","modifierName":{"id":4984,"name":"noActiveRequests","nameLocations":["13840:16:21"],"nodeType":"IdentifierPath","referencedDeclaration":4696,"src":"13840:16:21"},"nodeType":"ModifierInvocation","src":"13840:16:21"},{"id":4987,"kind":"modifierInvocation","modifierName":{"id":4986,"name":"nonReentrant","nameLocations":["13857:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":6653,"src":"13857:12:21"},"nodeType":"ModifierInvocation","src":"13857:12:21"}],"name":"setIdentifier","nameLocation":"13777:13:21","nodeType":"FunctionDefinition","overrides":{"id":4981,"nodeType":"OverrideSpecifier","overrides":[],"src":"13821:8:21"},"parameters":{"id":4980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4979,"mutability":"mutable","name":"newIdentifier","nameLocation":"13799:13:21","nodeType":"VariableDeclaration","scope":5017,"src":"13791:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4978,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13791:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13790:23:21"},"returnParameters":{"id":4988,"nodeType":"ParameterList","parameters":[],"src":"13870:0:21"},"scope":6626,"src":"13768:473:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[7070],"body":{"id":5047,"nodeType":"Block","src":"14981:156:21","statements":[{"expression":{"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5032,"name":"crossChainContracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"14991:19:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CrossChainContract_$7021_storage_$","typeString":"mapping(uint256 => struct HubPoolInterface.CrossChainContract storage ref)"}},"id":5034,"indexExpression":{"id":5033,"name":"l2ChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"15011:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14991:30:21","typeDescriptions":{"typeIdentifier":"t_struct$_CrossChainContract_$7021_storage","typeString":"struct HubPoolInterface.CrossChainContract storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5036,"name":"adapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"15043:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5037,"name":"spokePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"15052:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5035,"name":"CrossChainContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7021,"src":"15024:18:21","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_CrossChainContract_$7021_storage_ptr_$","typeString":"type(struct HubPoolInterface.CrossChainContract storage pointer)"}},"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15024:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CrossChainContract_$7021_memory_ptr","typeString":"struct HubPoolInterface.CrossChainContract memory"}},"src":"14991:71:21","typeDescriptions":{"typeIdentifier":"t_struct$_CrossChainContract_$7021_storage","typeString":"struct HubPoolInterface.CrossChainContract storage ref"}},"id":5040,"nodeType":"ExpressionStatement","src":"14991:71:21"},{"eventCall":{"arguments":[{"id":5042,"name":"l2ChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"15100:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5043,"name":"adapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"15111:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5044,"name":"spokePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"15120:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5041,"name":"CrossChainContractsSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"15077:22:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,address,address)"}},"id":5045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15077:53:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5046,"nodeType":"EmitStatement","src":"15072:58:21"}]},"documentation":{"id":5018,"nodeType":"StructuredDocumentation","src":"14247:572:21","text":" @notice Sets cross chain relay helper contracts for L2 chain ID. Callable only by owner.\n @dev We do not block setting the adapter or SpokePool to invalid/zero addresses because we want to allow the\n admin to block relaying roots to the spoke pool for emergency recovery purposes.\n @param l2ChainId Chain to set contracts for.\n @param adapter Adapter used to relay messages and tokens to spoke pool. Deployed on current chain.\n @param spokePool Recipient of relayed messages and tokens on spoke pool. Deployed on l2ChainId."},"functionSelector":"e460e35c","id":5048,"implemented":true,"kind":"function","modifiers":[{"id":5028,"kind":"modifierInvocation","modifierName":{"id":5027,"name":"onlyOwner","nameLocations":["14958:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"14958:9:21"},"nodeType":"ModifierInvocation","src":"14958:9:21"},{"id":5030,"kind":"modifierInvocation","modifierName":{"id":5029,"name":"nonReentrant","nameLocations":["14968:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":6653,"src":"14968:12:21"},"nodeType":"ModifierInvocation","src":"14968:12:21"}],"name":"setCrossChainContracts","nameLocation":"14834:22:21","nodeType":"FunctionDefinition","overrides":{"id":5026,"nodeType":"OverrideSpecifier","overrides":[],"src":"14949:8:21"},"parameters":{"id":5025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5020,"mutability":"mutable","name":"l2ChainId","nameLocation":"14874:9:21","nodeType":"VariableDeclaration","scope":5048,"src":"14866:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5019,"name":"uint256","nodeType":"ElementaryTypeName","src":"14866:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5022,"mutability":"mutable","name":"adapter","nameLocation":"14901:7:21","nodeType":"VariableDeclaration","scope":5048,"src":"14893:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5021,"name":"address","nodeType":"ElementaryTypeName","src":"14893:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5024,"mutability":"mutable","name":"spokePool","nameLocation":"14926:9:21","nodeType":"VariableDeclaration","scope":5048,"src":"14918:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5023,"name":"address","nodeType":"ElementaryTypeName","src":"14918:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14856:85:21"},"returnParameters":{"id":5031,"nodeType":"ParameterList","parameters":[],"src":"14981:0:21"},"scope":6626,"src":"14825:312:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[7179],"body":{"id":5078,"nodeType":"Block","src":"15915:191:21","statements":[{"expression":{"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5063,"name":"poolRebalanceRoutes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"15925:19:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":5068,"indexExpression":{"arguments":[{"id":5065,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"15968:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5066,"name":"destinationChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5051,"src":"15977:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5064,"name":"_poolRebalanceRouteKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"15945:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (address,uint256) pure returns (bytes32)"}},"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15945:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15925:72:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5069,"name":"destinationToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5055,"src":"16000:16:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15925:91:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5071,"nodeType":"ExpressionStatement","src":"15925:91:21"},{"eventCall":{"arguments":[{"id":5073,"name":"destinationChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5051,"src":"16053:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5074,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"16073:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5075,"name":"destinationToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5055,"src":"16082:16:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5072,"name":"SetPoolRebalanceRoute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"16031:21:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,address,address)"}},"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16031:68:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5077,"nodeType":"EmitStatement","src":"16026:73:21"}]},"documentation":{"id":5049,"nodeType":"StructuredDocumentation","src":"15143:596:21","text":" @notice Store canonical destination token counterpart for l1 token. Callable only by owner.\n @dev Admin can set destinationToken to 0x0 to effectively disable executing any root bundles with leaves\n containing this l1 token + destination chain ID combination.\n @param destinationChainId Destination chain where destination token resides.\n @param l1Token Token enabled for liquidity in this pool, and the L1 counterpart to the destination token on the\n destination chain ID.\n @param destinationToken Destination chain counterpart of L1 token."},"functionSelector":"10b99527","id":5079,"implemented":true,"kind":"function","modifiers":[{"id":5059,"kind":"modifierInvocation","modifierName":{"id":5058,"name":"onlyOwner","nameLocations":["15892:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"15892:9:21"},"nodeType":"ModifierInvocation","src":"15892:9:21"},{"id":5061,"kind":"modifierInvocation","modifierName":{"id":5060,"name":"nonReentrant","nameLocations":["15902:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":6653,"src":"15902:12:21"},"nodeType":"ModifierInvocation","src":"15902:12:21"}],"name":"setPoolRebalanceRoute","nameLocation":"15753:21:21","nodeType":"FunctionDefinition","overrides":{"id":5057,"nodeType":"OverrideSpecifier","overrides":[],"src":"15883:8:21"},"parameters":{"id":5056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5051,"mutability":"mutable","name":"destinationChainId","nameLocation":"15792:18:21","nodeType":"VariableDeclaration","scope":5079,"src":"15784:26:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5050,"name":"uint256","nodeType":"ElementaryTypeName","src":"15784:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5053,"mutability":"mutable","name":"l1Token","nameLocation":"15828:7:21","nodeType":"VariableDeclaration","scope":5079,"src":"15820:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5052,"name":"address","nodeType":"ElementaryTypeName","src":"15820:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5055,"mutability":"mutable","name":"destinationToken","nameLocation":"15853:16:21","nodeType":"VariableDeclaration","scope":5079,"src":"15845:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5054,"name":"address","nodeType":"ElementaryTypeName","src":"15845:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15774:101:21"},"returnParameters":{"id":5062,"nodeType":"ParameterList","parameters":[],"src":"15915:0:21"},"scope":6626,"src":"15744:362:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[7190],"body":{"id":5114,"nodeType":"Block","src":"17434:388:21","statements":[{"expression":{"arguments":[{"id":5097,"name":"originChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"17486:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"736574456e61626c65526f75746528616464726573732c75696e743235362c626f6f6c29","id":5100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17554:38:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_272751c7ba2d9557807bcd8e77546d5f22802ec8597bb71d5828f045df730677","typeString":"literal_string \"setEnableRoute(address,uint256,bool)\""},"value":"setEnableRoute(address,uint256,bool)"},{"id":5101,"name":"originToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"17610:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5102,"name":"destinationChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"17639:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5103,"name":"depositsEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"17675:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_272751c7ba2d9557807bcd8e77546d5f22802ec8597bb71d5828f045df730677","typeString":"literal_string \"setEnableRoute(address,uint256,bool)\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5098,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"17513:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17517:19:21","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"17513:23:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17513:191:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5096,"name":"_relaySpokePoolAdminFunction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"17444:28:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,bytes memory)"}},"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17444:270:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5106,"nodeType":"ExpressionStatement","src":"17444:270:21"},{"eventCall":{"arguments":[{"id":5108,"name":"originChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"17751:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5109,"name":"destinationChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"17766:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5110,"name":"originToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"17786:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5111,"name":"depositsEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"17799:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5107,"name":"SetEnableDepositRoute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"17729:21:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (uint256,uint256,address,bool)"}},"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17729:86:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5113,"nodeType":"EmitStatement","src":"17724:91:21"}]},"documentation":{"id":5080,"nodeType":"StructuredDocumentation","src":"16112:1121:21","text":" @notice Sends cross-chain message to SpokePool on originChainId to enable or disable deposit route from that\n SpokePool to another one. Callable only by owner.\n @dev Admin is responsible for ensuring that `originToken` is linked to some L1 token on this contract, via\n poolRebalanceRoutes(), and that this L1 token also has a counterpart on the destination chain. If either\n condition fails, then the deposit will be unrelayable by off-chain relayers because they will not know which\n token to relay to recipients on the destination chain, and data workers wouldn't know which L1 token to send\n to the destination chain to refund the relayer.\n @param originChainId Chain where token deposit occurs.\n @param destinationChainId Chain where token depositor wants to receive funds.\n @param originToken Token sent in deposit.\n @param depositsEnabled Set to true to whitelist this route for deposits, set to false if caller just wants to\n map the origin token + destination ID to the destination token address on the origin chain's SpokePool."},"functionSelector":"56864f38","id":5115,"implemented":true,"kind":"function","modifiers":[{"id":5092,"kind":"modifierInvocation","modifierName":{"id":5091,"name":"nonReentrant","nameLocations":["17411:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":6653,"src":"17411:12:21"},"nodeType":"ModifierInvocation","src":"17411:12:21"},{"id":5094,"kind":"modifierInvocation","modifierName":{"id":5093,"name":"onlyOwner","nameLocations":["17424:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"17424:9:21"},"nodeType":"ModifierInvocation","src":"17424:9:21"}],"name":"setDepositRoute","nameLocation":"17247:15:21","nodeType":"FunctionDefinition","overrides":{"id":5090,"nodeType":"OverrideSpecifier","overrides":[],"src":"17402:8:21"},"parameters":{"id":5089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5082,"mutability":"mutable","name":"originChainId","nameLocation":"17280:13:21","nodeType":"VariableDeclaration","scope":5115,"src":"17272:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5081,"name":"uint256","nodeType":"ElementaryTypeName","src":"17272:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5084,"mutability":"mutable","name":"destinationChainId","nameLocation":"17311:18:21","nodeType":"VariableDeclaration","scope":5115,"src":"17303:26:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5083,"name":"uint256","nodeType":"ElementaryTypeName","src":"17303:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5086,"mutability":"mutable","name":"originToken","nameLocation":"17347:11:21","nodeType":"VariableDeclaration","scope":5115,"src":"17339:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5085,"name":"address","nodeType":"ElementaryTypeName","src":"17339:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5088,"mutability":"mutable","name":"depositsEnabled","nameLocation":"17373:15:21","nodeType":"VariableDeclaration","scope":5115,"src":"17368:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5087,"name":"bool","nodeType":"ElementaryTypeName","src":"17368:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17262:132:21"},"returnParameters":{"id":5095,"nodeType":"ParameterList","parameters":[],"src":"17434:0:21"},"scope":6626,"src":"17238:584:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[7075],"body":{"id":5173,"nodeType":"Block","src":"18141:709:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":5126,"name":"pooledTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"18487:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PooledToken_$7016_storage_$","typeString":"mapping(address => struct HubPoolInterface.PooledToken storage ref)"}},"id":5128,"indexExpression":{"id":5127,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"18500:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18487:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage","typeString":"struct HubPoolInterface.PooledToken storage ref"}},"id":5129,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18509:7:21","memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":7005,"src":"18487:29:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18528:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18520:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5130,"name":"address","nodeType":"ElementaryTypeName","src":"18520:7:21","typeDescriptions":{}}},"id":5133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18520:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18487:43:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5157,"nodeType":"IfStatement","src":"18483:221:21","trueBody":{"id":5156,"nodeType":"Block","src":"18532:172:21","statements":[{"expression":{"id":5143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":5135,"name":"pooledTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"18546:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PooledToken_$7016_storage_$","typeString":"mapping(address => struct HubPoolInterface.PooledToken storage ref)"}},"id":5137,"indexExpression":{"id":5136,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"18559:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18546:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage","typeString":"struct HubPoolInterface.PooledToken storage ref"}},"id":5138,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18568:7:21","memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":7005,"src":"18546:29:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5141,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"18607:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5139,"name":"lpTokenFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4509,"src":"18578:14:21","typeDescriptions":{"typeIdentifier":"t_contract$_LpTokenFactoryInterface_$7215","typeString":"contract LpTokenFactoryInterface"}},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18593:13:21","memberName":"createLpToken","nodeType":"MemberAccess","referencedDeclaration":7214,"src":"18578:28:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$_t_address_$","typeString":"function (address) external returns (address)"}},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18578:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18546:69:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5144,"nodeType":"ExpressionStatement","src":"18546:69:21"},{"expression":{"id":5154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":5145,"name":"pooledTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"18629:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PooledToken_$7016_storage_$","typeString":"mapping(address => struct HubPoolInterface.PooledToken storage ref)"}},"id":5147,"indexExpression":{"id":5146,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"18642:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18629:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage","typeString":"struct HubPoolInterface.PooledToken storage ref"}},"id":5148,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18651:15:21","memberName":"lastLpFeeUpdate","nodeType":"MemberAccess","referencedDeclaration":7009,"src":"18629:37:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":5151,"name":"getCurrentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"18676:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18676:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18669:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5149,"name":"uint32","nodeType":"ElementaryTypeName","src":"18669:6:21","typeDescriptions":{}}},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18669:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"18629:64:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":5155,"nodeType":"ExpressionStatement","src":"18629:64:21"}]}},{"expression":{"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":5158,"name":"pooledTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"18714:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PooledToken_$7016_storage_$","typeString":"mapping(address => struct HubPoolInterface.PooledToken storage ref)"}},"id":5160,"indexExpression":{"id":5159,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"18727:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18714:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage","typeString":"struct HubPoolInterface.PooledToken storage ref"}},"id":5161,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18736:9:21","memberName":"isEnabled","nodeType":"MemberAccess","referencedDeclaration":7007,"src":"18714:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"18748:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"18714:38:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5164,"nodeType":"ExpressionStatement","src":"18714:38:21"},{"eventCall":{"arguments":[{"id":5166,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"18804:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":5167,"name":"pooledTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"18813:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PooledToken_$7016_storage_$","typeString":"mapping(address => struct HubPoolInterface.PooledToken storage ref)"}},"id":5169,"indexExpression":{"id":5168,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"18826:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18813:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage","typeString":"struct HubPoolInterface.PooledToken storage ref"}},"id":5170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18835:7:21","memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":7005,"src":"18813:29:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5165,"name":"L1TokenEnabledForLiquidityProvision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"18768:35:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18768:75:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5172,"nodeType":"EmitStatement","src":"18763:80:21"}]},"documentation":{"id":5116,"nodeType":"StructuredDocumentation","src":"17828:208:21","text":" @notice Enables LPs to provide liquidity for L1 token. Deploys new LP token for L1 token if appropriate.\n Callable only by owner.\n @param l1Token Token to provide liquidity for."},"functionSelector":"b60c2d7d","id":5174,"implemented":true,"kind":"function","modifiers":[{"id":5122,"kind":"modifierInvocation","modifierName":{"id":5121,"name":"onlyOwner","nameLocations":["18118:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"18118:9:21"},"nodeType":"ModifierInvocation","src":"18118:9:21"},{"id":5124,"kind":"modifierInvocation","modifierName":{"id":5123,"name":"nonReentrant","nameLocations":["18128:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":6653,"src":"18128:12:21"},"nodeType":"ModifierInvocation","src":"18128:12:21"}],"name":"enableL1TokenForLiquidityProvision","nameLocation":"18050:34:21","nodeType":"FunctionDefinition","overrides":{"id":5120,"nodeType":"OverrideSpecifier","overrides":[],"src":"18109:8:21"},"parameters":{"id":5119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5118,"mutability":"mutable","name":"l1Token","nameLocation":"18093:7:21","nodeType":"VariableDeclaration","scope":5174,"src":"18085:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5117,"name":"address","nodeType":"ElementaryTypeName","src":"18085:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18084:17:21"},"returnParameters":{"id":5125,"nodeType":"ParameterList","parameters":[],"src":"18141:0:21"},"scope":6626,"src":"18041:809:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[7080],"body":{"id":5200,"nodeType":"Block","src":"19128:147:21","statements":[{"expression":{"id":5190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":5185,"name":"pooledTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"19138:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PooledToken_$7016_storage_$","typeString":"mapping(address => struct HubPoolInterface.PooledToken storage ref)"}},"id":5187,"indexExpression":{"id":5186,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"19151:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19138:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage","typeString":"struct HubPoolInterface.PooledToken storage ref"}},"id":5188,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"19160:9:21","memberName":"isEnabled","nodeType":"MemberAccess","referencedDeclaration":7007,"src":"19138:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19172:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"19138:39:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5191,"nodeType":"ExpressionStatement","src":"19138:39:21"},{"eventCall":{"arguments":[{"id":5193,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"19229:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":5194,"name":"pooledTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"19238:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PooledToken_$7016_storage_$","typeString":"mapping(address => struct HubPoolInterface.PooledToken storage ref)"}},"id":5196,"indexExpression":{"id":5195,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"19251:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19238:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage","typeString":"struct HubPoolInterface.PooledToken storage ref"}},"id":5197,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19260:7:21","memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":7005,"src":"19238:29:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5192,"name":"L2TokenDisabledForLiquidityProvision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4590,"src":"19192:36:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19192:76:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5199,"nodeType":"EmitStatement","src":"19187:81:21"}]},"documentation":{"id":5175,"nodeType":"StructuredDocumentation","src":"18856:166:21","text":" @notice Disables LPs from providing liquidity for L1 token. Callable only by owner.\n @param l1Token Token to disable liquidity provision for."},"functionSelector":"0c501af9","id":5201,"implemented":true,"kind":"function","modifiers":[{"id":5181,"kind":"modifierInvocation","modifierName":{"id":5180,"name":"onlyOwner","nameLocations":["19105:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"19105:9:21"},"nodeType":"ModifierInvocation","src":"19105:9:21"},{"id":5183,"kind":"modifierInvocation","modifierName":{"id":5182,"name":"nonReentrant","nameLocations":["19115:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":6653,"src":"19115:12:21"},"nodeType":"ModifierInvocation","src":"19115:12:21"}],"name":"disableL1TokenForLiquidityProvision","nameLocation":"19036:35:21","nodeType":"FunctionDefinition","overrides":{"id":5179,"nodeType":"OverrideSpecifier","overrides":[],"src":"19096:8:21"},"parameters":{"id":5178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5177,"mutability":"mutable","name":"l1Token","nameLocation":"19080:7:21","nodeType":"VariableDeclaration","scope":5201,"src":"19072:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5176,"name":"address","nodeType":"ElementaryTypeName","src":"19072:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19071:17:21"},"returnParameters":{"id":5184,"nodeType":"ParameterList","parameters":[],"src":"19128:0:21"},"scope":6626,"src":"19027:248:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5220,"nodeType":"Block","src":"20004:305:21","statements":[{"expression":{"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":5213,"name":"pooledTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"20247:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PooledToken_$7016_storage_$","typeString":"mapping(address => struct HubPoolInterface.PooledToken storage ref)"}},"id":5215,"indexExpression":{"id":5214,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"20260:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20247:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage","typeString":"struct HubPoolInterface.PooledToken storage ref"}},"id":5216,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20269:16:21","memberName":"utilizedReserves","nodeType":"MemberAccess","referencedDeclaration":7011,"src":"20247:38:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5217,"name":"haircutAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5206,"src":"20289:13:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20247:55:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5219,"nodeType":"ExpressionStatement","src":"20247:55:21"}]},"documentation":{"id":5202,"nodeType":"StructuredDocumentation","src":"19281:624:21","text":" @notice Enables the owner of the protocol to haircut reserves in the event of an irrecoverable loss of funds on\n one of the L2s. Consider funds are lent out onto a L2 that dies irrecoverably. This value will offset the\n exchangeRateCurrent such that all LPs receive a pro rata loss of the the reserves. Should be used in conjunction\n with pause logic to prevent LPs from adding/withdrawing liquidity during the haircut process.\n Callable only by owner.\n @param l1Token Token to execute the haircut on.\n @param haircutAmount The amount of reserves to haircut the LPs by."},"functionSelector":"26205d80","id":5221,"implemented":true,"kind":"function","modifiers":[{"id":5209,"kind":"modifierInvocation","modifierName":{"id":5208,"name":"onlyOwner","nameLocations":["19981:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"19981:9:21"},"nodeType":"ModifierInvocation","src":"19981:9:21"},{"id":5211,"kind":"modifierInvocation","modifierName":{"id":5210,"name":"nonReentrant","nameLocations":["19991:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":6653,"src":"19991:12:21"},"nodeType":"ModifierInvocation","src":"19991:12:21"}],"name":"haircutReserves","nameLocation":"19919:15:21","nodeType":"FunctionDefinition","parameters":{"id":5207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5204,"mutability":"mutable","name":"l1Token","nameLocation":"19943:7:21","nodeType":"VariableDeclaration","scope":5221,"src":"19935:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5203,"name":"address","nodeType":"ElementaryTypeName","src":"19935:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5206,"mutability":"mutable","name":"haircutAmount","nameLocation":"19959:13:21","nodeType":"VariableDeclaration","scope":5221,"src":"19952:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5205,"name":"int256","nodeType":"ElementaryTypeName","src":"19952:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19934:39:21"},"returnParameters":{"id":5212,"nodeType":"ParameterList","parameters":[],"src":"20004:0:21"},"scope":6626,"src":"19910:399:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[7087],"body":{"id":5339,"nodeType":"Block","src":"21625:1093:21","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":5235,"name":"pooledTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"21643:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PooledToken_$7016_storage_$","typeString":"mapping(address => struct HubPoolInterface.PooledToken storage ref)"}},"id":5237,"indexExpression":{"id":5236,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5224,"src":"21656:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21643:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage","typeString":"struct HubPoolInterface.PooledToken storage ref"}},"id":5238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21665:9:21","memberName":"isEnabled","nodeType":"MemberAccess","referencedDeclaration":7007,"src":"21643:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f7420656e61626c6564","id":5239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21676:19:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_16987ac5f01710d9575226ccb7135e5688a437cefb463e2033433cc2ec0d8118","typeString":"literal_string \"Token not enabled\""},"value":"Token not enabled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_16987ac5f01710d9575226ccb7135e5688a437cefb463e2033433cc2ec0d8118","typeString":"literal_string \"Token not enabled\""}],"id":5234,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21635:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21635:61:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5241,"nodeType":"ExpressionStatement","src":"21635:61:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5245,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4506,"src":"21885:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$6965","typeString":"contract WETH9Interface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_WETH9Interface_$6965","typeString":"contract WETH9Interface"}],"id":5244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21877:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5243,"name":"address","nodeType":"ElementaryTypeName","src":"21877:7:21","typeDescriptions":{}}},"id":5246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21877:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5247,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5224,"src":"21894:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21877:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5249,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5250,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21906:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21910:5:21","memberName":"value","nodeType":"MemberAccess","src":"21906:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5252,"name":"l1TokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5226,"src":"21919:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21906:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21876:56:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5255,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21875:58:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5256,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21937:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21941:5:21","memberName":"value","nodeType":"MemberAccess","src":"21937:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21950:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21937:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21875:76:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426164206d73672e76616c7565","id":5261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21953:15:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_9e45dbaaf1e82352fab750e88e32f6e039808a095e00c0c69bb0e886446b6187","typeString":"literal_string \"Bad msg.value\""},"value":"Bad msg.value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9e45dbaaf1e82352fab750e88e32f6e039808a095e00c0c69bb0e886446b6187","typeString":"literal_string \"Bad msg.value\""}],"id":5242,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21867:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21867:102:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5263,"nodeType":"ExpressionStatement","src":"21867:102:21"},{"assignments":[5265],"declarations":[{"constant":false,"id":5265,"mutability":"mutable","name":"lpTokensToMint","nameLocation":"22198:14:21","nodeType":"VariableDeclaration","scope":5339,"src":"22190:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5264,"name":"uint256","nodeType":"ElementaryTypeName","src":"22190:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5274,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5266,"name":"l1TokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5226,"src":"22216:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":5267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22232:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"22216:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5269,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22215:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[{"id":5271,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5224,"src":"22261:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5270,"name":"_exchangeRateCurrent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"22240:20:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22240:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22215:54:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22190:79:21"},{"expression":{"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":5275,"name":"pooledTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"22279:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PooledToken_$7016_storage_$","typeString":"mapping(address => struct HubPoolInterface.PooledToken storage ref)"}},"id":5277,"indexExpression":{"id":5276,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5224,"src":"22292:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22279:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage","typeString":"struct HubPoolInterface.PooledToken storage ref"}},"id":5278,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"22301:14:21","memberName":"liquidReserves","nodeType":"MemberAccess","referencedDeclaration":7013,"src":"22279:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5279,"name":"l1TokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5226,"src":"22319:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:53:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5281,"nodeType":"ExpressionStatement","src":"22279:53:21"},{"expression":{"arguments":[{"expression":{"id":5289,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"22393:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22397:6:21","memberName":"sender","nodeType":"MemberAccess","src":"22393:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5291,"name":"lpTokensToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"22405:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"baseExpression":{"id":5283,"name":"pooledTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"22357:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PooledToken_$7016_storage_$","typeString":"mapping(address => struct HubPoolInterface.PooledToken storage ref)"}},"id":5285,"indexExpression":{"id":5284,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5224,"src":"22370:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22357:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage","typeString":"struct HubPoolInterface.PooledToken storage ref"}},"id":5286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22379:7:21","memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":7005,"src":"22357:29:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5282,"name":"ExpandedIERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"22342:14:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ExpandedIERC20_$3752_$","typeString":"type(contract ExpandedIERC20)"}},"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22342:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ExpandedIERC20_$3752","typeString":"contract ExpandedIERC20"}},"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22388:4:21","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":3736,"src":"22342:50:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22342:78:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5293,"nodeType":"ExpressionStatement","src":"22342:78:21"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5296,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4506,"src":"22443:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$6965","typeString":"contract WETH9Interface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_WETH9Interface_$6965","typeString":"contract WETH9Interface"}],"id":5295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22435:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5294,"name":"address","nodeType":"ElementaryTypeName","src":"22435:7:21","typeDescriptions":{}}},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22435:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5298,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5224,"src":"22452:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22435:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5300,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"22463:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22467:5:21","memberName":"value","nodeType":"MemberAccess","src":"22463:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22475:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22463:13:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22435:41:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"arguments":[{"expression":{"id":5321,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"22588:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22592:6:21","memberName":"sender","nodeType":"MemberAccess","src":"22588:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5325,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"22608:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_HubPool_$6626","typeString":"contract HubPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HubPool_$6626","typeString":"contract HubPool"}],"id":5324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22600:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5323,"name":"address","nodeType":"ElementaryTypeName","src":"22600:7:21","typeDescriptions":{}}},"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22600:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5327,"name":"l1TokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5226,"src":"22615:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5318,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5224,"src":"22562:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5317,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"22555:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":5319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22555:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":5320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22571:16:21","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":286,"src":"22555:32:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":5328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22555:74:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5329,"nodeType":"ExpressionStatement","src":"22555:74:21"},"id":5330,"nodeType":"IfStatement","src":"22431:198:21","trueBody":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"arguments":[{"id":5308,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5224,"src":"22501:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22493:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5306,"name":"address","nodeType":"ElementaryTypeName","src":"22493:7:21","typeDescriptions":{}}},"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22493:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5305,"name":"WETH9Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6965,"src":"22478:14:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WETH9Interface_$6965_$","typeString":"type(contract WETH9Interface)"}},"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22478:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$6965","typeString":"contract WETH9Interface"}},"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22511:7:21","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"22478:40:21","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$","typeString":"function () payable external"}},"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":5312,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"22527:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22531:5:21","memberName":"value","nodeType":"MemberAccess","src":"22527:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"22478:60:21","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$value","typeString":"function () payable external"}},"id":5315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22478:62:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5316,"nodeType":"ExpressionStatement","src":"22478:62:21"}},{"eventCall":{"arguments":[{"id":5332,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5224,"src":"22660:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5333,"name":"l1TokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5226,"src":"22669:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5334,"name":"lpTokensToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"22684:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5335,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"22700:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22704:6:21","memberName":"sender","nodeType":"MemberAccess","src":"22700:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5331,"name":"LiquidityAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"22645:14:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,uint256,address)"}},"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22645:66:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5338,"nodeType":"EmitStatement","src":"22640:71:21"}]},"documentation":{"id":5222,"nodeType":"StructuredDocumentation","src":"20482:1030:21","text":" @notice Deposit liquidity into this contract to earn LP fees in exchange for funding relays on SpokePools.\n Caller is essentially loaning their funds to be sent from this contract to the SpokePool, where it will be used\n to repay a relayer, and ultimately receives their loan back after the tokens are bridged back to this contract\n via the canonical token bridge. Then, the caller's loans are used again. This loan cycle repeats continuously\n and the caller, or \"liquidity provider\" earns a continuous fee for their credit that they are extending relayers.\n @notice Caller will receive an LP token representing their share of this pool. The LP token's redemption value\n increments from the time that they enter the pool to reflect their accrued fees.\n @notice The caller of this function must approve this contract to spend l1TokenAmount of l1Token.\n @param l1Token Token to deposit into this contract.\n @param l1TokenAmount Amount of liquidity to provide."},"functionSelector":"56688700","id":5340,"implemented":true,"kind":"function","modifiers":[{"id":5230,"kind":"modifierInvocation","modifierName":{"id":5229,"name":"nonReentrant","nameLocations":["21603:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":6653,"src":"21603:12:21"},"nodeType":"ModifierInvocation","src":"21603:12:21"},{"id":5232,"kind":"modifierInvocation","modifierName":{"id":5231,"name":"unpaused","nameLocations":["21616:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":4706,"src":"21616:8:21"},"nodeType":"ModifierInvocation","src":"21616:8:21"}],"name":"addLiquidity","nameLocation":"21526:12:21","nodeType":"FunctionDefinition","overrides":{"id":5228,"nodeType":"OverrideSpecifier","overrides":[],"src":"21594:8:21"},"parameters":{"id":5227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5224,"mutability":"mutable","name":"l1Token","nameLocation":"21547:7:21","nodeType":"VariableDeclaration","scope":5340,"src":"21539:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5223,"name":"address","nodeType":"ElementaryTypeName","src":"21539:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5226,"mutability":"mutable","name":"l1TokenAmount","nameLocation":"21564:13:21","nodeType":"VariableDeclaration","scope":5340,"src":"21556:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5225,"name":"uint256","nodeType":"ElementaryTypeName","src":"21556:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21538:40:21"},"returnParameters":{"id":5233,"nodeType":"ParameterList","parameters":[],"src":"21625:0:21"},"scope":6626,"src":"21517:1201:21","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[7096],"body":{"id":5439,"nodeType":"Block","src":"23516:991:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5358,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4506,"src":"23542:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$6965","typeString":"contract WETH9Interface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_WETH9Interface_$6965","typeString":"contract WETH9Interface"}],"id":5357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23534:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5356,"name":"address","nodeType":"ElementaryTypeName","src":"23534:7:21","typeDescriptions":{}}},"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23534:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5360,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5343,"src":"23551:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"23534:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"23562:8:21","subExpression":{"id":5362,"name":"sendEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"23563:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23534:36:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e742073656e6420657468","id":5365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23572:15:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d85c5f14fef91ee2d1e97a9ebbeb17234c6f1697165e89e66564bef6d66742d","typeString":"literal_string \"Cant send eth\""},"value":"Cant send eth"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d85c5f14fef91ee2d1e97a9ebbeb17234c6f1697165e89e66564bef6d66742d","typeString":"literal_string \"Cant send eth\""}],"id":5355,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23526:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23526:62:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5367,"nodeType":"ExpressionStatement","src":"23526:62:21"},{"assignments":[5369],"declarations":[{"constant":false,"id":5369,"mutability":"mutable","name":"l1TokensToReturn","nameLocation":"23606:16:21","nodeType":"VariableDeclaration","scope":5439,"src":"23598:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5368,"name":"uint256","nodeType":"ElementaryTypeName","src":"23598:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5378,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5370,"name":"lpTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"23626:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5372,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5343,"src":"23663:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5371,"name":"_exchangeRateCurrent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"23642:20:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23642:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23626:45:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5375,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23625:47:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":5376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23675:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"23625:54:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23598:81:21"},{"expression":{"arguments":[{"expression":{"id":5386,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23745:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23749:6:21","memberName":"sender","nodeType":"MemberAccess","src":"23745:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5388,"name":"lpTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"23757:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"baseExpression":{"id":5380,"name":"pooledTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"23705:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PooledToken_$7016_storage_$","typeString":"mapping(address => struct HubPoolInterface.PooledToken storage ref)"}},"id":5382,"indexExpression":{"id":5381,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5343,"src":"23718:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23705:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage","typeString":"struct HubPoolInterface.PooledToken storage ref"}},"id":5383,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23727:7:21","memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":7005,"src":"23705:29:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5379,"name":"ExpandedIERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"23690:14:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ExpandedIERC20_$3752_$","typeString":"type(contract ExpandedIERC20)"}},"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23690:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ExpandedIERC20_$3752","typeString":"contract ExpandedIERC20"}},"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23736:8:21","memberName":"burnFrom","nodeType":"MemberAccess","referencedDeclaration":3726,"src":"23690:54:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23690:81:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5390,"nodeType":"ExpressionStatement","src":"23690:81:21"},{"expression":{"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":5391,"name":"pooledTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"24019:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PooledToken_$7016_storage_$","typeString":"mapping(address => struct HubPoolInterface.PooledToken storage ref)"}},"id":5393,"indexExpression":{"id":5392,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5343,"src":"24032:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24019:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage","typeString":"struct HubPoolInterface.PooledToken storage ref"}},"id":5394,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"24041:14:21","memberName":"liquidReserves","nodeType":"MemberAccess","referencedDeclaration":7013,"src":"24019:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5395,"name":"l1TokensToReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5369,"src":"24059:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24019:56:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5397,"nodeType":"ExpressionStatement","src":"24019:56:21"},{"condition":{"id":5398,"name":"sendEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"24090:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5429,"nodeType":"Block","src":"24324:92:21","statements":[{"expression":{"arguments":[{"expression":{"id":5424,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24376:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24380:6:21","memberName":"sender","nodeType":"MemberAccess","src":"24376:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5426,"name":"l1TokensToReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5369,"src":"24388:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":5420,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5343,"src":"24353:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24345:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5418,"name":"address","nodeType":"ElementaryTypeName","src":"24345:7:21","typeDescriptions":{}}},"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24345:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5417,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"24338:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24338:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":5423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24363:12:21","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":259,"src":"24338:37:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$","typeString":"function (contract IERC20,address,uint256)"}},"id":5427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24338:67:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5428,"nodeType":"ExpressionStatement","src":"24338:67:21"}]},"id":5430,"nodeType":"IfStatement","src":"24086:330:21","trueBody":{"id":5416,"nodeType":"Block","src":"24099:219:21","statements":[{"expression":{"arguments":[{"id":5402,"name":"l1TokensToReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5369,"src":"24127:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5399,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4506,"src":"24113:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$6965","typeString":"contract WETH9Interface"}},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24118:8:21","memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":6942,"src":"24113:13:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":5403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24113:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5404,"nodeType":"ExpressionStatement","src":"24113:31:21"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":5410,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24184:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24188:6:21","memberName":"sender","nodeType":"MemberAccess","src":"24184:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24176:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":5408,"name":"address","nodeType":"ElementaryTypeName","src":"24176:8:21","stateMutability":"payable","typeDescriptions":{}}},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24176:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":5413,"name":"l1TokensToReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5369,"src":"24197:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5405,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"24158:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$932_$","typeString":"type(library Address)"}},"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24166:9:21","memberName":"sendValue","nodeType":"MemberAccess","referencedDeclaration":654,"src":"24158:17:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256)"}},"id":5414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24158:56:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5415,"nodeType":"ExpressionStatement","src":"24158:56:21"}]}},{"eventCall":{"arguments":[{"id":5432,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5343,"src":"24447:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5433,"name":"l1TokensToReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5369,"src":"24456:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5434,"name":"lpTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"24474:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5435,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24489:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24493:6:21","memberName":"sender","nodeType":"MemberAccess","src":"24489:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5431,"name":"LiquidityRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"24430:16:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,uint256,address)"}},"id":5437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24430:70:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5438,"nodeType":"EmitStatement","src":"24425:75:21"}]},"documentation":{"id":5341,"nodeType":"StructuredDocumentation","src":"22724:640:21","text":" @notice Burns LP share to redeem for underlying l1Token original deposit amount plus fees.\n @param l1Token Token to redeem LP share for.\n @param lpTokenAmount Amount of LP tokens to burn. Exchange rate between L1 token and LP token can be queried\n via public exchangeRateCurrent method.\n @param sendEth Set to True if L1 token is WETH and user wants to receive ETH. Note that if caller\n is a contract, then the contract should have a way to receive ETH if this value is set to True. Similarly,\n if this value is set to False, then the calling contract should have a way to handle WETH."},"functionSelector":"0ee28a88","id":5440,"implemented":true,"kind":"function","modifiers":[{"id":5351,"kind":"modifierInvocation","modifierName":{"id":5350,"name":"nonReentrant","nameLocations":["23494:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":6653,"src":"23494:12:21"},"nodeType":"ModifierInvocation","src":"23494:12:21"},{"id":5353,"kind":"modifierInvocation","modifierName":{"id":5352,"name":"unpaused","nameLocations":["23507:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":4706,"src":"23507:8:21"},"nodeType":"ModifierInvocation","src":"23507:8:21"}],"name":"removeLiquidity","nameLocation":"23378:15:21","nodeType":"FunctionDefinition","overrides":{"id":5349,"nodeType":"OverrideSpecifier","overrides":[],"src":"23485:8:21"},"parameters":{"id":5348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5343,"mutability":"mutable","name":"l1Token","nameLocation":"23411:7:21","nodeType":"VariableDeclaration","scope":5440,"src":"23403:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5342,"name":"address","nodeType":"ElementaryTypeName","src":"23403:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5345,"mutability":"mutable","name":"lpTokenAmount","nameLocation":"23436:13:21","nodeType":"VariableDeclaration","scope":5440,"src":"23428:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5344,"name":"uint256","nodeType":"ElementaryTypeName","src":"23428:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5347,"mutability":"mutable","name":"sendEth","nameLocation":"23464:7:21","nodeType":"VariableDeclaration","scope":5440,"src":"23459:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5346,"name":"bool","nodeType":"ElementaryTypeName","src":"23459:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"23393:84:21"},"returnParameters":{"id":5354,"nodeType":"ParameterList","parameters":[],"src":"23516:0:21"},"scope":6626,"src":"23369:1138:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[7103],"body":{"id":5455,"nodeType":"Block","src":"24814:53:21","statements":[{"expression":{"arguments":[{"id":5452,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"24852:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5451,"name":"_exchangeRateCurrent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"24831:20:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24831:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5450,"id":5454,"nodeType":"Return","src":"24824:36:21"}]},"documentation":{"id":5441,"nodeType":"StructuredDocumentation","src":"24513:203:21","text":" @notice Returns exchange rate of L1 token to LP token.\n @param l1Token L1 token redeemable by burning LP token.\n @return Amount of L1 tokens redeemable for 1 unit LP token."},"functionSelector":"e0f339e3","id":5456,"implemented":true,"kind":"function","modifiers":[{"id":5447,"kind":"modifierInvocation","modifierName":{"id":5446,"name":"nonReentrant","nameLocations":["24783:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":6653,"src":"24783:12:21"},"nodeType":"ModifierInvocation","src":"24783:12:21"}],"name":"exchangeRateCurrent","nameLocation":"24730:19:21","nodeType":"FunctionDefinition","overrides":{"id":5445,"nodeType":"OverrideSpecifier","overrides":[],"src":"24774:8:21"},"parameters":{"id":5444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5443,"mutability":"mutable","name":"l1Token","nameLocation":"24758:7:21","nodeType":"VariableDeclaration","scope":5456,"src":"24750:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5442,"name":"address","nodeType":"ElementaryTypeName","src":"24750:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24749:17:21"},"returnParameters":{"id":5450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5456,"src":"24805:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5448,"name":"uint256","nodeType":"ElementaryTypeName","src":"24805:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24804:9:21"},"scope":6626,"src":"24721:146:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[7110],"body":{"id":5472,"nodeType":"Block","src":"25227:66:21","statements":[{"expression":{"arguments":[{"id":5468,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5459,"src":"25275:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":5469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25284:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5467,"name":"_liquidityUtilizationPostRelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6433,"src":"25244:30:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) returns (uint256)"}},"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25244:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5466,"id":5471,"nodeType":"Return","src":"25237:49:21"}]},"documentation":{"id":5457,"nodeType":"StructuredDocumentation","src":"24873:248:21","text":" @notice Returns % of liquid reserves currently being \"used\" and sitting in SpokePools.\n @param l1Token L1 token to query utilization for.\n @return % of liquid reserves currently being \"used\" and sitting in SpokePools."},"functionSelector":"a16fd6e9","id":5473,"implemented":true,"kind":"function","modifiers":[{"id":5463,"kind":"modifierInvocation","modifierName":{"id":5462,"name":"nonReentrant","nameLocations":["25196:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":6653,"src":"25196:12:21"},"nodeType":"ModifierInvocation","src":"25196:12:21"}],"name":"liquidityUtilizationCurrent","nameLocation":"25135:27:21","nodeType":"FunctionDefinition","overrides":{"id":5461,"nodeType":"OverrideSpecifier","overrides":[],"src":"25187:8:21"},"parameters":{"id":5460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5459,"mutability":"mutable","name":"l1Token","nameLocation":"25171:7:21","nodeType":"VariableDeclaration","scope":5473,"src":"25163:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5458,"name":"address","nodeType":"ElementaryTypeName","src":"25163:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25162:17:21"},"returnParameters":{"id":5466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5473,"src":"25218:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5464,"name":"uint256","nodeType":"ElementaryTypeName","src":"25218:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25217:9:21"},"scope":6626,"src":"25126:167:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[7119],"body":{"id":5490,"nodeType":"Block","src":"25880:78:21","statements":[{"expression":{"arguments":[{"id":5486,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"25928:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5487,"name":"relayedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"25937:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5485,"name":"_liquidityUtilizationPostRelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6433,"src":"25897:30:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) returns (uint256)"}},"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25897:54:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5484,"id":5489,"nodeType":"Return","src":"25890:61:21"}]},"documentation":{"id":5474,"nodeType":"StructuredDocumentation","src":"25299:431:21","text":" @notice Returns % of liquid reserves currently being \"used\" and sitting in SpokePools and accounting for\n relayedAmount of tokens to be withdrawn from the pool.\n @param l1Token L1 token to query utilization for.\n @param relayedAmount The higher this amount, the higher the utilization.\n @return % of liquid reserves currently being \"used\" and sitting in SpokePools plus the relayedAmount."},"functionSelector":"084d0513","id":5491,"implemented":true,"kind":"function","modifiers":[{"id":5481,"kind":"modifierInvocation","modifierName":{"id":5480,"name":"nonReentrant","nameLocations":["25837:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":6653,"src":"25837:12:21"},"nodeType":"ModifierInvocation","src":"25837:12:21"}],"name":"liquidityUtilizationPostRelay","nameLocation":"25744:29:21","nodeType":"FunctionDefinition","parameters":{"id":5479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5476,"mutability":"mutable","name":"l1Token","nameLocation":"25782:7:21","nodeType":"VariableDeclaration","scope":5491,"src":"25774:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5475,"name":"address","nodeType":"ElementaryTypeName","src":"25774:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5478,"mutability":"mutable","name":"relayedAmount","nameLocation":"25799:13:21","nodeType":"VariableDeclaration","scope":5491,"src":"25791:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5477,"name":"uint256","nodeType":"ElementaryTypeName","src":"25791:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25773:40:21"},"returnParameters":{"id":5484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5491,"src":"25867:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5482,"name":"uint256","nodeType":"ElementaryTypeName","src":"25867:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25866:9:21"},"scope":6626,"src":"25735:223:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[7124],"body":{"id":5504,"nodeType":"Block","src":"26404:31:21","statements":[{"expression":{"arguments":[{"id":5501,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"26420:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5500,"name":"_sync","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"26414:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26414:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5503,"nodeType":"ExpressionStatement","src":"26414:14:21"}]},"documentation":{"id":5492,"nodeType":"StructuredDocumentation","src":"25964:375:21","text":" @notice Synchronize any balance changes in this contract with the utilized & liquid reserves. This should be done\n at the conclusion of a L2->L1 token transfer via the canonical token bridge, when this contract's reserves do not\n reflect its true balance due to new tokens being dropped onto the contract at the conclusion of a bridging action."},"functionSelector":"a5841194","id":5505,"implemented":true,"kind":"function","modifiers":[{"id":5498,"kind":"modifierInvocation","modifierName":{"id":5497,"name":"nonReentrant","nameLocations":["26391:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":6653,"src":"26391:12:21"},"nodeType":"ModifierInvocation","src":"26391:12:21"}],"name":"sync","nameLocation":"26353:4:21","nodeType":"FunctionDefinition","overrides":{"id":5496,"nodeType":"OverrideSpecifier","overrides":[],"src":"26382:8:21"},"parameters":{"id":5495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5494,"mutability":"mutable","name":"l1Token","nameLocation":"26366:7:21","nodeType":"VariableDeclaration","scope":5505,"src":"26358:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5493,"name":"address","nodeType":"ElementaryTypeName","src":"26358:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"26357:17:21"},"returnParameters":{"id":5499,"nodeType":"ParameterList","parameters":[],"src":"26404:0:21"},"scope":6626,"src":"26344:91:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[7138],"body":{"id":5607,"nodeType":"Block","src":"28455:1326:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5528,"name":"poolRebalanceLeafCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"28689:22:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28714:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"28689:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42756e646c65206d7573742068617665206174206c656173742031206c656166","id":5531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28717:34:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_bcda18959fa7383d48bdd3ee468d46980a9e5b31c614fd3f1f71a0c3bff8d92b","typeString":"literal_string \"Bundle must have at least 1 leaf\""},"value":"Bundle must have at least 1 leaf"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bcda18959fa7383d48bdd3ee468d46980a9e5b31c614fd3f1f71a0c3bff8d92b","typeString":"literal_string \"Bundle must have at least 1 leaf\""}],"id":5527,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28681:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28681:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5533,"nodeType":"ExpressionStatement","src":"28681:71:21"},{"assignments":[5535],"declarations":[{"constant":false,"id":5535,"mutability":"mutable","name":"challengePeriodEndTimestamp","nameLocation":"28770:27:21","nodeType":"VariableDeclaration","scope":5607,"src":"28763:34:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5534,"name":"uint32","nodeType":"ElementaryTypeName","src":"28763:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":5543,"initialValue":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":5542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":5538,"name":"getCurrentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"28807:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28807:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28800:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5536,"name":"uint32","nodeType":"ElementaryTypeName","src":"28800:6:21","typeDescriptions":{}}},"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28800:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5541,"name":"liveness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"28827:8:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"28800:35:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"28763:72:21"},{"expression":{"id":5545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"28846:25:21","subExpression":{"id":5544,"name":"rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"28853:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_storage","typeString":"struct HubPoolInterface.RootBundle storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5546,"nodeType":"ExpressionStatement","src":"28846:25:21"},{"expression":{"id":5551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5547,"name":"rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"28965:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_storage","typeString":"struct HubPoolInterface.RootBundle storage ref"}},"id":5549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"28984:27:21","memberName":"challengePeriodEndTimestamp","nodeType":"MemberAccess","referencedDeclaration":7002,"src":"28965:46:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5550,"name":"challengePeriodEndTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5535,"src":"29014:27:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"28965:76:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":5552,"nodeType":"ExpressionStatement","src":"28965:76:21"},{"expression":{"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5553,"name":"rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"29051:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_storage","typeString":"struct HubPoolInterface.RootBundle storage ref"}},"id":5555,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"29070:31:21","memberName":"unclaimedPoolRebalanceLeafCount","nodeType":"MemberAccess","referencedDeclaration":7000,"src":"29051:50:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5556,"name":"poolRebalanceLeafCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"29104:22:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"29051:75:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":5558,"nodeType":"ExpressionStatement","src":"29051:75:21"},{"expression":{"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5559,"name":"rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"29136:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_storage","typeString":"struct HubPoolInterface.RootBundle storage ref"}},"id":5561,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"29155:17:21","memberName":"poolRebalanceRoot","nodeType":"MemberAccess","referencedDeclaration":6990,"src":"29136:36:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5562,"name":"poolRebalanceRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"29175:17:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"29136:56:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5564,"nodeType":"ExpressionStatement","src":"29136:56:21"},{"expression":{"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5565,"name":"rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"29202:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_storage","typeString":"struct HubPoolInterface.RootBundle storage ref"}},"id":5567,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"29221:17:21","memberName":"relayerRefundRoot","nodeType":"MemberAccess","referencedDeclaration":6992,"src":"29202:36:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5568,"name":"relayerRefundRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"29241:17:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"29202:56:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5570,"nodeType":"ExpressionStatement","src":"29202:56:21"},{"expression":{"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5571,"name":"rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"29268:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_storage","typeString":"struct HubPoolInterface.RootBundle storage ref"}},"id":5573,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"29287:13:21","memberName":"slowRelayRoot","nodeType":"MemberAccess","referencedDeclaration":6994,"src":"29268:32:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5574,"name":"slowRelayRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"29303:13:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"29268:48:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5576,"nodeType":"ExpressionStatement","src":"29268:48:21"},{"expression":{"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5577,"name":"rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"29326:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_storage","typeString":"struct HubPoolInterface.RootBundle storage ref"}},"id":5579,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"29345:8:21","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":6998,"src":"29326:27:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5580,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"29356:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29360:6:21","memberName":"sender","nodeType":"MemberAccess","src":"29356:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"29326:40:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5583,"nodeType":"ExpressionStatement","src":"29326:40:21"},{"expression":{"arguments":[{"expression":{"id":5587,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"29461:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29465:6:21","memberName":"sender","nodeType":"MemberAccess","src":"29461:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5591,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"29481:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_HubPool_$6626","typeString":"contract HubPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HubPool_$6626","typeString":"contract HubPool"}],"id":5590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29473:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5589,"name":"address","nodeType":"ElementaryTypeName","src":"29473:7:21","typeDescriptions":{}}},"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29473:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5593,"name":"bondAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"29488:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5584,"name":"bondToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"29434:9:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29444:16:21","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":286,"src":"29434:26:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":5594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29434:65:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5595,"nodeType":"ExpressionStatement","src":"29434:65:21"},{"eventCall":{"arguments":[{"id":5597,"name":"challengePeriodEndTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5535,"src":"29546:27:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":5598,"name":"poolRebalanceLeafCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"29587:22:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5599,"name":"bundleEvaluationBlockNumbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"29623:28:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},{"id":5600,"name":"poolRebalanceRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"29665:17:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5601,"name":"relayerRefundRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"29696:17:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5602,"name":"slowRelayRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"29727:13:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":5603,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"29754:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29758:6:21","memberName":"sender","nodeType":"MemberAccess","src":"29754:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5596,"name":"ProposeRootBundle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"29515:17:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint32_$_t_uint8_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$","typeString":"function (uint32,uint8,uint256[] memory,bytes32,bytes32,bytes32,address)"}},"id":5605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29515:259:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5606,"nodeType":"EmitStatement","src":"29510:264:21"}]},"documentation":{"id":5506,"nodeType":"StructuredDocumentation","src":"26608:1558:21","text":" @notice Publish a new root bundle along with all of the block numbers that the merkle roots are relevant for.\n This is used to aid off-chain validators in evaluating the correctness of this bundle. Caller stakes a bond that\n can be slashed if the root bundle proposal is invalid, and they will receive it back if accepted.\n @notice After proposeRootBundle is called, if the any props are wrong then this proposal can be challenged.\n Once the challenge period passes, then the roots are no longer disputable, and only executeRootBundle can be\n called; moreover, this method can't be called again until all leaves are executed.\n @param bundleEvaluationBlockNumbers should contain the latest block number for all chains, even if there are no\n relays contained on some of them. The usage of this variable should be defined in an off chain UMIP.\n @notice The caller of this function must approve this contract to spend bondAmount of bondToken.\n @param poolRebalanceLeafCount Number of leaves contained in pool rebalance root. Max is # of whitelisted chains.\n @param poolRebalanceRoot Pool rebalance root containing leaves that sends tokens from this contract to SpokePool.\n @param relayerRefundRoot Relayer refund root to publish to SpokePool where a data worker can execute leaves to\n refund relayers on their chosen refund chainId.\n @param slowRelayRoot Slow relay root to publish to Spoke Pool where a data worker can execute leaves to\n fulfill slow relays."},"functionSelector":"8bda0c00","id":5608,"implemented":true,"kind":"function","modifiers":[{"id":5521,"kind":"modifierInvocation","modifierName":{"id":5520,"name":"nonReentrant","nameLocations":["28416:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":6653,"src":"28416:12:21"},"nodeType":"ModifierInvocation","src":"28416:12:21"},{"id":5523,"kind":"modifierInvocation","modifierName":{"id":5522,"name":"noActiveRequests","nameLocations":["28429:16:21"],"nodeType":"IdentifierPath","referencedDeclaration":4696,"src":"28429:16:21"},"nodeType":"ModifierInvocation","src":"28429:16:21"},{"id":5525,"kind":"modifierInvocation","modifierName":{"id":5524,"name":"unpaused","nameLocations":["28446:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":4706,"src":"28446:8:21"},"nodeType":"ModifierInvocation","src":"28446:8:21"}],"name":"proposeRootBundle","nameLocation":"28180:17:21","nodeType":"FunctionDefinition","overrides":{"id":5519,"nodeType":"OverrideSpecifier","overrides":[],"src":"28407:8:21"},"parameters":{"id":5518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5509,"mutability":"mutable","name":"bundleEvaluationBlockNumbers","nameLocation":"28226:28:21","nodeType":"VariableDeclaration","scope":5608,"src":"28207:47:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5507,"name":"uint256","nodeType":"ElementaryTypeName","src":"28207:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5508,"nodeType":"ArrayTypeName","src":"28207:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5511,"mutability":"mutable","name":"poolRebalanceLeafCount","nameLocation":"28270:22:21","nodeType":"VariableDeclaration","scope":5608,"src":"28264:28:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5510,"name":"uint8","nodeType":"ElementaryTypeName","src":"28264:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5513,"mutability":"mutable","name":"poolRebalanceRoot","nameLocation":"28310:17:21","nodeType":"VariableDeclaration","scope":5608,"src":"28302:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5512,"name":"bytes32","nodeType":"ElementaryTypeName","src":"28302:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5515,"mutability":"mutable","name":"relayerRefundRoot","nameLocation":"28345:17:21","nodeType":"VariableDeclaration","scope":5608,"src":"28337:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"28337:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5517,"mutability":"mutable","name":"slowRelayRoot","nameLocation":"28380:13:21","nodeType":"VariableDeclaration","scope":5608,"src":"28372:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5516,"name":"bytes32","nodeType":"ElementaryTypeName","src":"28372:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"28197:202:21"},"returnParameters":{"id":5526,"nodeType":"ParameterList","parameters":[],"src":"28455:0:21"},"scope":6626,"src":"28171:1610:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[7162],"body":{"id":5762,"nodeType":"Block","src":"31471:4130:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5638,"name":"getCurrentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"31489:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31489:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":5640,"name":"rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"31508:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_storage","typeString":"struct HubPoolInterface.RootBundle storage ref"}},"id":5641,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31527:27:21","memberName":"challengePeriodEndTimestamp","nodeType":"MemberAccess","referencedDeclaration":7002,"src":"31508:46:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"31489:65:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420706173736564206c6976656e657373","id":5643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31556:21:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_d704c138c362dd0072384612ceafcec743d83664909b07d512f34657d79b2a27","typeString":"literal_string \"Not passed liveness\""},"value":"Not passed liveness"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d704c138c362dd0072384612ceafcec743d83664909b07d512f34657d79b2a27","typeString":"literal_string \"Not passed liveness\""}],"id":5637,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31481:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31481:97:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5645,"nodeType":"ExpressionStatement","src":"31481:97:21"},{"expression":{"arguments":[{"id":5653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"31677:64:21","subExpression":{"arguments":[{"expression":{"id":5649,"name":"rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"31700:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_storage","typeString":"struct HubPoolInterface.RootBundle storage ref"}},"id":5650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31719:13:21","memberName":"claimedBitMap","nodeType":"MemberAccess","referencedDeclaration":6996,"src":"31700:32:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5651,"name":"leafId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"31734:6:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":5647,"name":"MerkleLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"31678:9:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleLib_$6933_$","typeString":"type(library MerkleLib)"}},"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31688:11:21","memberName":"isClaimed1D","nodeType":"MemberAccess","referencedDeclaration":6914,"src":"31678:21:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_bool_$","typeString":"function (uint256,uint8) pure returns (bool)"}},"id":5652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31678:63:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920636c61696d6564","id":5654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31743:17:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf","typeString":"literal_string \"Already claimed\""},"value":"Already claimed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf","typeString":"literal_string \"Already claimed\""}],"id":5646,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31669:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31669:92:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5656,"nodeType":"ExpressionStatement","src":"31669:92:21"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":5660,"name":"rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"31954:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_storage","typeString":"struct HubPoolInterface.RootBundle storage ref"}},"id":5661,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31973:17:21","memberName":"poolRebalanceRoot","nodeType":"MemberAccess","referencedDeclaration":6990,"src":"31954:36:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":5663,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"32057:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5664,"name":"groupIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5613,"src":"32098:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5665,"name":"bundleLpFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"32144:12:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":5666,"name":"netSendAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5619,"src":"32194:14:21","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[] memory"}},{"id":5667,"name":"runningBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"32247:15:21","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[] memory"}},{"id":5668,"name":"leafId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"32292:6:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5669,"name":"l1Tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"32330:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[] memory"},{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[] memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":5662,"name":"PoolRebalanceLeaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"32008:17:21","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PoolRebalanceLeaf_$6988_storage_ptr_$","typeString":"type(struct HubPoolInterface.PoolRebalanceLeaf storage pointer)"}},"id":5670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["32048:7:21","32086:10:21","32130:12:21","32178:14:21","32230:15:21","32284:6:21","32320:8:21"],"names":["chainId","groupIndex","bundleLpFees","netSendAmounts","runningBalances","leafId","l1Tokens"],"nodeType":"FunctionCall","src":"32008:349:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PoolRebalanceLeaf_$6988_memory_ptr","typeString":"struct HubPoolInterface.PoolRebalanceLeaf memory"}},{"id":5671,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"32375:5:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_struct$_PoolRebalanceLeaf_$6988_memory_ptr","typeString":"struct HubPoolInterface.PoolRebalanceLeaf memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}],"expression":{"id":5658,"name":"MerkleLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"31907:9:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleLib_$6933_$","typeString":"type(library MerkleLib)"}},"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31917:19:21","memberName":"verifyPoolRebalance","nodeType":"MemberAccess","referencedDeclaration":6730,"src":"31907:29:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_struct$_PoolRebalanceLeaf_$6988_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes32,struct HubPoolInterface.PoolRebalanceLeaf memory,bytes32[] memory) pure returns (bool)"}},"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31907:487:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4261642050726f6f66","id":5673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32408:11:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b11e051618a3f91a0e9aba61cdb2ec52333a9f7549a14f1cc4d6a5f6c6b7f15","typeString":"literal_string \"Bad Proof\""},"value":"Bad Proof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4b11e051618a3f91a0e9aba61cdb2ec52333a9f7549a14f1cc4d6a5f6c6b7f15","typeString":"literal_string \"Bad Proof\""}],"id":5657,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31886:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31886:543:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5675,"nodeType":"ExpressionStatement","src":"31886:543:21"},{"assignments":[5677,5679],"declarations":[{"constant":false,"id":5677,"mutability":"mutable","name":"adapter","nameLocation":"32686:7:21","nodeType":"VariableDeclaration","scope":5762,"src":"32678:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5676,"name":"address","nodeType":"ElementaryTypeName","src":"32678:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5679,"mutability":"mutable","name":"spokePool","nameLocation":"32703:9:21","nodeType":"VariableDeclaration","scope":5762,"src":"32695:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5678,"name":"address","nodeType":"ElementaryTypeName","src":"32695:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5683,"initialValue":{"arguments":[{"id":5681,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"32751:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5680,"name":"_getInitializedCrossChainContracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"32716:34:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_address_$","typeString":"function (uint256) view returns (address,address)"}},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32716:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"nodeType":"VariableDeclarationStatement","src":"32677:82:21"},{"expression":{"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5684,"name":"rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"32819:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_storage","typeString":"struct HubPoolInterface.RootBundle storage ref"}},"id":5686,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"32838:13:21","memberName":"claimedBitMap","nodeType":"MemberAccess","referencedDeclaration":6996,"src":"32819:32:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5689,"name":"rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"32877:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_storage","typeString":"struct HubPoolInterface.RootBundle storage ref"}},"id":5690,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"32896:13:21","memberName":"claimedBitMap","nodeType":"MemberAccess","referencedDeclaration":6996,"src":"32877:32:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5691,"name":"leafId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"32911:6:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":5687,"name":"MerkleLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"32854:9:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleLib_$6933_$","typeString":"type(library MerkleLib)"}},"id":5688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32864:12:21","memberName":"setClaimed1D","nodeType":"MemberAccess","referencedDeclaration":6932,"src":"32854:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint8) pure returns (uint256)"}},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32854:64:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32819:99:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5694,"nodeType":"ExpressionStatement","src":"32819:99:21"},{"expression":{"id":5697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"32987:52:21","subExpression":{"expression":{"id":5695,"name":"rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"32989:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_storage","typeString":"struct HubPoolInterface.RootBundle storage ref"}},"id":5696,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"33008:31:21","memberName":"unclaimedPoolRebalanceLeafCount","nodeType":"MemberAccess","referencedDeclaration":7000,"src":"32989:50:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":5698,"nodeType":"ExpressionStatement","src":"32987:52:21"},{"expression":{"arguments":[{"id":5700,"name":"adapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5677,"src":"33729:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5701,"name":"spokePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"33750:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5702,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"33773:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5703,"name":"l1Tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"33794:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":5704,"name":"netSendAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5619,"src":"33816:14:21","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[] memory"}},{"id":5705,"name":"bundleLpFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"33844:12:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":5699,"name":"_sendTokensToChainAndUpdatePooledTokenTrackers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"33669:46:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,address[] memory,int256[] memory,uint256[] memory)"}},"id":5706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33669:197:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5707,"nodeType":"ExpressionStatement","src":"33669:197:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5708,"name":"groupIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5613,"src":"33973:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33987:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"33973:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5736,"nodeType":"IfStatement","src":"33969:1001:21","trueBody":{"id":5735,"nodeType":"Block","src":"33990:980:21","statements":[{"assignments":[5712,null],"declarations":[{"constant":false,"id":5712,"mutability":"mutable","name":"success","nameLocation":"34409:7:21","nodeType":"VariableDeclaration","scope":5735,"src":"34404:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5711,"name":"bool","nodeType":"ElementaryTypeName","src":"34404:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":5729,"initialValue":{"arguments":[{"arguments":[{"hexValue":"72656c61794d65737361676528616464726573732c627974657329","id":5717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34505:29:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_e6eb8ade4dd20203a4f34bac994ad54934891099a6c5b1cb5e49bd6db7741180","typeString":"literal_string \"relayMessage(address,bytes)\""},"value":"relayMessage(address,bytes)"},{"id":5718,"name":"spokePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"34556:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"72656c6179526f6f7442756e646c6528627974657333322c6279746573333229","id":5721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34687:34:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_493a4f84bb0793f25c0c17a591de4df64eea671548615e0d10e185376fe3a838","typeString":"literal_string \"relayRootBundle(bytes32,bytes32)\""},"value":"relayRootBundle(bytes32,bytes32)"},{"expression":{"id":5722,"name":"rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"34747:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_storage","typeString":"struct HubPoolInterface.RootBundle storage ref"}},"id":5723,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"34766:17:21","memberName":"relayerRefundRoot","nodeType":"MemberAccess","referencedDeclaration":6992,"src":"34747:36:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":5724,"name":"rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"34809:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_storage","typeString":"struct HubPoolInterface.RootBundle storage ref"}},"id":5725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"34828:13:21","memberName":"slowRelayRoot","nodeType":"MemberAccess","referencedDeclaration":6994,"src":"34809:32:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_493a4f84bb0793f25c0c17a591de4df64eea671548615e0d10e185376fe3a838","typeString":"literal_string \"relayRootBundle(bytes32,bytes32)\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5719,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"34638:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34642:19:21","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"34638:23:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34638:225:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e6eb8ade4dd20203a4f34bac994ad54934891099a6c5b1cb5e49bd6db7741180","typeString":"literal_string \"relayMessage(address,bytes)\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5715,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"34460:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34464:19:21","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"34460:23:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34460:432:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5713,"name":"adapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5677,"src":"34422:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"34430:12:21","memberName":"delegatecall","nodeType":"MemberAccess","src":"34422:20:21","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":5728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34422:484:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"34403:503:21"},{"expression":{"arguments":[{"id":5731,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"34928:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"64656c656761746563616c6c206661696c6564","id":5732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34937:21:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_05cf1118cd6854a69c478b1e66867edbe3ae1e579d49e23c31b73cbbdf29b708","typeString":"literal_string \"delegatecall failed\""},"value":"delegatecall failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05cf1118cd6854a69c478b1e66867edbe3ae1e579d49e23c31b73cbbdf29b708","typeString":"literal_string \"delegatecall failed\""}],"id":5730,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34920:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34920:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5734,"nodeType":"ExpressionStatement","src":"34920:39:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5737,"name":"rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"35224:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_storage","typeString":"struct HubPoolInterface.RootBundle storage ref"}},"id":5738,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"35243:31:21","memberName":"unclaimedPoolRebalanceLeafCount","nodeType":"MemberAccess","referencedDeclaration":7000,"src":"35224:50:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35278:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"35224:55:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5749,"nodeType":"IfStatement","src":"35220:136:21","trueBody":{"expression":{"arguments":[{"expression":{"id":5744,"name":"rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"35316:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_storage","typeString":"struct HubPoolInterface.RootBundle storage ref"}},"id":5745,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"35335:8:21","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":6998,"src":"35316:27:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5746,"name":"bondAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"35345:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5741,"name":"bondToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"35293:9:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"35303:12:21","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":259,"src":"35293:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$","typeString":"function (contract IERC20,address,uint256)"}},"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35293:63:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5748,"nodeType":"ExpressionStatement","src":"35293:63:21"}},{"eventCall":{"arguments":[{"id":5751,"name":"groupIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5613,"src":"35404:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5752,"name":"leafId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"35428:6:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5753,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"35448:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5754,"name":"l1Tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"35469:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":5755,"name":"bundleLpFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"35491:12:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":5756,"name":"netSendAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5619,"src":"35517:14:21","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[] memory"}},{"id":5757,"name":"runningBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"35545:15:21","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[] memory"}},{"expression":{"id":5758,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"35574:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"35578:6:21","memberName":"sender","nodeType":"MemberAccess","src":"35574:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[] memory"},{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[] memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5750,"name":"RootBundleExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"35372:18:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$_t_address_$returns$__$","typeString":"function (uint256,uint256,uint256,address[] memory,uint256[] memory,int256[] memory,int256[] memory,address)"}},"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35372:222:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5761,"nodeType":"EmitStatement","src":"35367:227:21"}]},"documentation":{"id":5609,"nodeType":"StructuredDocumentation","src":"29787:1352:21","text":" @notice Executes a pool rebalance leaf as part of the currently published root bundle. Will bridge any tokens\n from this contract to the SpokePool designated in the leaf, and will also publish relayer refund and slow\n relay roots to the SpokePool on the network specified in the leaf.\n @dev In some cases, will instruct spokePool to send funds back to L1.\n @param chainId ChainId number of the target spoke pool on which the bundle is executed.\n @param groupIndex If set to 0, then relay roots to SpokePool via cross chain bridge. Used by off-chain validator\n to organize leaves with the same chain ID and also set which leaves should result in relayed messages.\n @param bundleLpFees Array representing the total LP fee amount per token in this bundle for all bundled relays.\n @param netSendAmounts Array representing the amount of tokens to send to the SpokePool on the target chainId.\n @param runningBalances Array used to track any unsent tokens that are not included in the netSendAmounts.\n @param leafId Index of this executed leaf within the poolRebalance tree.\n @param l1Tokens Array of all the tokens associated with the bundleLpFees, nedSendAmounts and runningBalances.\n @param proof Inclusion proof for this leaf in pool rebalance root in root bundle."},"functionSelector":"80c09a82","id":5763,"implemented":true,"kind":"function","modifiers":[{"id":5633,"kind":"modifierInvocation","modifierName":{"id":5632,"name":"nonReentrant","nameLocations":["31449:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":6653,"src":"31449:12:21"},"nodeType":"ModifierInvocation","src":"31449:12:21"},{"id":5635,"kind":"modifierInvocation","modifierName":{"id":5634,"name":"unpaused","nameLocations":["31462:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":4706,"src":"31462:8:21"},"nodeType":"ModifierInvocation","src":"31462:8:21"}],"name":"executeRootBundle","nameLocation":"31154:17:21","nodeType":"FunctionDefinition","parameters":{"id":5631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5611,"mutability":"mutable","name":"chainId","nameLocation":"31189:7:21","nodeType":"VariableDeclaration","scope":5763,"src":"31181:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5610,"name":"uint256","nodeType":"ElementaryTypeName","src":"31181:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5613,"mutability":"mutable","name":"groupIndex","nameLocation":"31214:10:21","nodeType":"VariableDeclaration","scope":5763,"src":"31206:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5612,"name":"uint256","nodeType":"ElementaryTypeName","src":"31206:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5616,"mutability":"mutable","name":"bundleLpFees","nameLocation":"31251:12:21","nodeType":"VariableDeclaration","scope":5763,"src":"31234:29:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5614,"name":"uint256","nodeType":"ElementaryTypeName","src":"31234:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5615,"nodeType":"ArrayTypeName","src":"31234:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5619,"mutability":"mutable","name":"netSendAmounts","nameLocation":"31289:14:21","nodeType":"VariableDeclaration","scope":5763,"src":"31273:30:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":5617,"name":"int256","nodeType":"ElementaryTypeName","src":"31273:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5618,"nodeType":"ArrayTypeName","src":"31273:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":5622,"mutability":"mutable","name":"runningBalances","nameLocation":"31329:15:21","nodeType":"VariableDeclaration","scope":5763,"src":"31313:31:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":5620,"name":"int256","nodeType":"ElementaryTypeName","src":"31313:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5621,"nodeType":"ArrayTypeName","src":"31313:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":5624,"mutability":"mutable","name":"leafId","nameLocation":"31360:6:21","nodeType":"VariableDeclaration","scope":5763,"src":"31354:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5623,"name":"uint8","nodeType":"ElementaryTypeName","src":"31354:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5627,"mutability":"mutable","name":"l1Tokens","nameLocation":"31393:8:21","nodeType":"VariableDeclaration","scope":5763,"src":"31376:25:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5625,"name":"address","nodeType":"ElementaryTypeName","src":"31376:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5626,"nodeType":"ArrayTypeName","src":"31376:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5630,"mutability":"mutable","name":"proof","nameLocation":"31430:5:21","nodeType":"VariableDeclaration","scope":5763,"src":"31411:24:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5628,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31411:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5629,"nodeType":"ArrayTypeName","src":"31411:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"31171:270:21"},"returnParameters":{"id":5636,"nodeType":"ParameterList","parameters":[],"src":"31471:0:21"},"scope":6626,"src":"31145:4456:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[7165],"body":{"id":5934,"nodeType":"Block","src":"36149:4605:21","statements":[{"assignments":[5772],"declarations":[{"constant":false,"id":5772,"mutability":"mutable","name":"currentTime","nameLocation":"36166:11:21","nodeType":"VariableDeclaration","scope":5934,"src":"36159:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5771,"name":"uint32","nodeType":"ElementaryTypeName","src":"36159:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":5778,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":5775,"name":"getCurrentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"36187:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36187:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"36180:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5773,"name":"uint32","nodeType":"ElementaryTypeName","src":"36180:6:21","typeDescriptions":{}}},"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36180:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"36159:45:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":5783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5780,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5772,"src":"36222:11:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":5781,"name":"rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"36237:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_storage","typeString":"struct HubPoolInterface.RootBundle storage ref"}},"id":5782,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"36256:27:21","memberName":"challengePeriodEndTimestamp","nodeType":"MemberAccess","referencedDeclaration":7002,"src":"36237:46:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"36222:61:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265717565737420706173736564206c6976656e657373","id":5784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"36285:25:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_b623258900b3be2b15a3446c4074914d40be9a8a8f559aff16722aab7e49d321","typeString":"literal_string \"Request passed liveness\""},"value":"Request passed liveness"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b623258900b3be2b15a3446c4074914d40be9a8a8f559aff16722aab7e49d321","typeString":"literal_string \"Request passed liveness\""}],"id":5779,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"36214:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36214:97:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5786,"nodeType":"ExpressionStatement","src":"36214:97:21"},{"assignments":[5788],"declarations":[{"constant":false,"id":5788,"mutability":"mutable","name":"finalFee","nameLocation":"36379:8:21","nodeType":"VariableDeclaration","scope":5934,"src":"36371:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5787,"name":"uint256","nodeType":"ElementaryTypeName","src":"36371:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5791,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":5789,"name":"_getBondTokenFinalFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"36390:21:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36390:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"36371:42:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5792,"name":"finalFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"38122:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5793,"name":"bondAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"38134:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"38122:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5800,"nodeType":"IfStatement","src":"38118:88:21","trueBody":{"id":5799,"nodeType":"Block","src":"38146:60:21","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5795,"name":"_cancelBundle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"38160:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38160:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5797,"nodeType":"ExpressionStatement","src":"38160:15:21"},{"functionReturnParameters":5770,"id":5798,"nodeType":"Return","src":"38189:7:21"}]}},{"assignments":[5803],"declarations":[{"constant":false,"id":5803,"mutability":"mutable","name":"optimisticOracle","nameLocation":"38248:16:21","nodeType":"VariableDeclaration","scope":5934,"src":"38216:48:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_SkinnyOptimisticOracleInterface_$4442","typeString":"contract SkinnyOptimisticOracleInterface"},"typeName":{"id":5802,"nodeType":"UserDefinedTypeName","pathNode":{"id":5801,"name":"SkinnyOptimisticOracleInterface","nameLocations":["38216:31:21"],"nodeType":"IdentifierPath","referencedDeclaration":4442,"src":"38216:31:21"},"referencedDeclaration":4442,"src":"38216:31:21","typeDescriptions":{"typeIdentifier":"t_contract$_SkinnyOptimisticOracleInterface_$4442","typeString":"contract SkinnyOptimisticOracleInterface"}},"visibility":"internal"}],"id":5806,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":5804,"name":"_getOptimisticOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6032,"src":"38267:20:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_SkinnyOptimisticOracleInterface_$4442_$","typeString":"function () view returns (contract SkinnyOptimisticOracleInterface)"}},"id":5805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38267:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_SkinnyOptimisticOracleInterface_$4442","typeString":"contract SkinnyOptimisticOracleInterface"}},"nodeType":"VariableDeclarationStatement","src":"38216:73:21"},{"expression":{"arguments":[{"arguments":[{"id":5812,"name":"optimisticOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5803,"src":"38452:16:21","typeDescriptions":{"typeIdentifier":"t_contract$_SkinnyOptimisticOracleInterface_$4442","typeString":"contract SkinnyOptimisticOracleInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SkinnyOptimisticOracleInterface_$4442","typeString":"contract SkinnyOptimisticOracleInterface"}],"id":5811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"38444:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5810,"name":"address","nodeType":"ElementaryTypeName","src":"38444:7:21","typeDescriptions":{}}},"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38444:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5814,"name":"bondAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"38471:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5807,"name":"bondToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"38412:9:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":5809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"38422:21:21","memberName":"safeIncreaseAllowance","nodeType":"MemberAccess","referencedDeclaration":367,"src":"38412:31:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$","typeString":"function (contract IERC20,address,uint256)"}},"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38412:70:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5816,"nodeType":"ExpressionStatement","src":"38412:70:21"},{"clauses":[{"block":{"id":5848,"nodeType":"Block","src":"39320:236:21","statements":[{"expression":{"arguments":[{"arguments":[{"id":5843,"name":"optimisticOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5803,"src":"39524:16:21","typeDescriptions":{"typeIdentifier":"t_contract$_SkinnyOptimisticOracleInterface_$4442","typeString":"contract SkinnyOptimisticOracleInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SkinnyOptimisticOracleInterface_$4442","typeString":"contract SkinnyOptimisticOracleInterface"}],"id":5842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"39516:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5841,"name":"address","nodeType":"ElementaryTypeName","src":"39516:7:21","typeDescriptions":{}}},"id":5844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39516:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":5845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"39543:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":5838,"name":"bondToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"39494:9:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":5840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"39504:11:21","memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":330,"src":"39494:21:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$","typeString":"function (contract IERC20,address,uint256)"}},"id":5846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39494:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5847,"nodeType":"ExpressionStatement","src":"39494:51:21"}]},"errorName":"","id":5849,"nodeType":"TryCatchClause","parameters":{"id":5837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5849,"src":"39311:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5835,"name":"uint256","nodeType":"ElementaryTypeName","src":"39311:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"39310:9:21"},"src":"39302:254:21"},{"block":{"id":5854,"nodeType":"Block","src":"39563:120:21","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5850,"name":"_cancelBundle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"39637:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39637:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5852,"nodeType":"ExpressionStatement","src":"39637:15:21"},{"functionReturnParameters":5770,"id":5853,"nodeType":"Return","src":"39666:7:21"}]},"errorName":"","id":5855,"nodeType":"TryCatchClause","src":"39557:126:21"}],"externalCall":{"arguments":[{"id":5819,"name":"identifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4523,"src":"38568:10:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5820,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5772,"src":"38596:11:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"","id":5821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"38625:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"id":5822,"name":"bondToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"38645:9:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"hexValue":"30","id":5823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38853:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5824,"name":"bondAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"38990:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5825,"name":"finalFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"39003:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"38990:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5827,"name":"liveness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"39106:8:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":5828,"name":"rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"39132:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_storage","typeString":"struct HubPoolInterface.RootBundle storage ref"}},"id":5829,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"39151:8:21","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":6998,"src":"39132:27:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"31653138","id":5832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"39274:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"id":5831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"39267:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5830,"name":"int256","nodeType":"ElementaryTypeName","src":"39267:6:21","typeDescriptions":{}}},"id":5833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39267:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":5817,"name":"optimisticOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5803,"src":"38508:16:21","typeDescriptions":{"typeIdentifier":"t_contract$_SkinnyOptimisticOracleInterface_$4442","typeString":"contract SkinnyOptimisticOracleInterface"}},"id":5818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"38525:25:21","memberName":"requestAndProposePriceFor","nodeType":"MemberAccess","referencedDeclaration":4341,"src":"38508:42:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint32_$_t_bytes_memory_ptr_$_t_contract$_IERC20_$190_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_int256_$returns$_t_uint256_$","typeString":"function (bytes32,uint32,bytes memory,contract IERC20,uint256,uint256,uint256,address,int256) external returns (uint256)"}},"id":5834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38508:785:21","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5856,"nodeType":"TryStatement","src":"38492:1191:21"},{"assignments":[5861],"declarations":[{"constant":false,"id":5861,"mutability":"mutable","name":"ooPriceRequest","nameLocation":"39790:14:21","nodeType":"VariableDeclaration","scope":5934,"src":"39743:61:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$4252_memory_ptr","typeString":"struct SkinnyOptimisticOracleInterface.Request"},"typeName":{"id":5860,"nodeType":"UserDefinedTypeName","pathNode":{"id":5859,"name":"SkinnyOptimisticOracleInterface.Request","nameLocations":["39743:31:21","39775:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":4252,"src":"39743:39:21"},"referencedDeclaration":4252,"src":"39743:39:21","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$4252_storage_ptr","typeString":"struct SkinnyOptimisticOracleInterface.Request"}},"visibility":"internal"}],"id":5887,"initialValue":{"arguments":[{"expression":{"id":5864,"name":"rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"39871:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_storage","typeString":"struct HubPoolInterface.RootBundle storage ref"}},"id":5865,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"39890:8:21","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":6998,"src":"39871:27:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":5868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"39930:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"39922:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5866,"name":"address","nodeType":"ElementaryTypeName","src":"39922:7:21","typeDescriptions":{}}},"id":5869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39922:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5870,"name":"bondToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"39956:9:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},{"hexValue":"66616c7365","id":5871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"39988:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"31653138","id":5874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"40029:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"id":5873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"40022:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5872,"name":"int256","nodeType":"ElementaryTypeName","src":"40022:6:21","typeDescriptions":{}}},"id":5875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40022:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"hexValue":"30","id":5876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"40063:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":5879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5877,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5772,"src":"40094:11:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5878,"name":"liveness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"40108:8:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"40094:22:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":5880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"40138:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":5881,"name":"finalFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"40163:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5882,"name":"bondAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"40191:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5883,"name":"finalFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"40204:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"40191:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5885,"name":"liveness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"40242:8:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":5862,"name":"SkinnyOptimisticOracleInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"39807:31:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SkinnyOptimisticOracleInterface_$4442_$","typeString":"type(contract SkinnyOptimisticOracleInterface)"}},"id":5863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"39839:7:21","memberName":"Request","nodeType":"MemberAccess","referencedDeclaration":4252,"src":"39807:39:21","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Request_$4252_storage_ptr_$","typeString":"type(struct SkinnyOptimisticOracleInterface.Request storage pointer)"}},"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["39861:8:21","39912:8:21","39946:8:21","39979:7:21","40007:13:21","40048:13:21","40078:14:21","40130:6:21","40153:8:21","40185:4:21","40226:14:21"],"names":["proposer","disputer","currency","settled","proposedPrice","resolvedPrice","expirationTime","reward","finalFee","bond","customLiveness"],"nodeType":"FunctionCall","src":"39807:454:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Request_$4252_memory_ptr","typeString":"struct SkinnyOptimisticOracleInterface.Request memory"}},"nodeType":"VariableDeclarationStatement","src":"39743:518:21"},{"expression":{"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"40393:25:21","subExpression":{"id":5888,"name":"rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"40400:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_storage","typeString":"struct HubPoolInterface.RootBundle storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5890,"nodeType":"ExpressionStatement","src":"40393:25:21"},{"expression":{"arguments":[{"expression":{"id":5894,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"40456:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"40460:6:21","memberName":"sender","nodeType":"MemberAccess","src":"40456:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5898,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"40476:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_HubPool_$6626","typeString":"contract HubPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HubPool_$6626","typeString":"contract HubPool"}],"id":5897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"40468:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5896,"name":"address","nodeType":"ElementaryTypeName","src":"40468:7:21","typeDescriptions":{}}},"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40468:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5900,"name":"bondAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"40483:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5891,"name":"bondToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"40429:9:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"40439:16:21","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":286,"src":"40429:26:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":5901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40429:65:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5902,"nodeType":"ExpressionStatement","src":"40429:65:21"},{"expression":{"arguments":[{"arguments":[{"id":5908,"name":"optimisticOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5803,"src":"40544:16:21","typeDescriptions":{"typeIdentifier":"t_contract$_SkinnyOptimisticOracleInterface_$4442","typeString":"contract SkinnyOptimisticOracleInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SkinnyOptimisticOracleInterface_$4442","typeString":"contract SkinnyOptimisticOracleInterface"}],"id":5907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"40536:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5906,"name":"address","nodeType":"ElementaryTypeName","src":"40536:7:21","typeDescriptions":{}}},"id":5909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40536:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5910,"name":"bondAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"40563:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5903,"name":"bondToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"40504:9:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":5905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"40514:21:21","memberName":"safeIncreaseAllowance","nodeType":"MemberAccess","referencedDeclaration":367,"src":"40504:31:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$","typeString":"function (contract IERC20,address,uint256)"}},"id":5911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40504:70:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5912,"nodeType":"ExpressionStatement","src":"40504:70:21"},{"expression":{"arguments":[{"id":5916,"name":"identifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4523,"src":"40617:10:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5917,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5772,"src":"40629:11:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"","id":5918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"40642:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"id":5919,"name":"ooPriceRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5861,"src":"40646:14:21","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$4252_memory_ptr","typeString":"struct SkinnyOptimisticOracleInterface.Request memory"}},{"expression":{"id":5920,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"40662:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"40666:6:21","memberName":"sender","nodeType":"MemberAccess","src":"40662:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5924,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"40682:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_HubPool_$6626","typeString":"contract HubPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HubPool_$6626","typeString":"contract HubPool"}],"id":5923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"40674:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5922,"name":"address","nodeType":"ElementaryTypeName","src":"40674:7:21","typeDescriptions":{}}},"id":5925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40674:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_struct$_Request_$4252_memory_ptr","typeString":"struct SkinnyOptimisticOracleInterface.Request memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5913,"name":"optimisticOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5803,"src":"40584:16:21","typeDescriptions":{"typeIdentifier":"t_contract$_SkinnyOptimisticOracleInterface_$4442","typeString":"contract SkinnyOptimisticOracleInterface"}},"id":5915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"40601:15:21","memberName":"disputePriceFor","nodeType":"MemberAccess","referencedDeclaration":4360,"src":"40584:32:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint32_$_t_bytes_memory_ptr_$_t_struct$_Request_$4252_memory_ptr_$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (bytes32,uint32,bytes memory,struct SkinnyOptimisticOracleInterface.Request memory,address,address) external returns (uint256)"}},"id":5926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40584:104:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5927,"nodeType":"ExpressionStatement","src":"40584:104:21"},{"eventCall":{"arguments":[{"expression":{"id":5929,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"40723:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"40727:6:21","memberName":"sender","nodeType":"MemberAccess","src":"40723:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5931,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5772,"src":"40735:11:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":5928,"name":"RootBundleDisputed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4679,"src":"40704:18:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40704:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5933,"nodeType":"EmitStatement","src":"40699:48:21"}]},"documentation":{"id":5764,"nodeType":"StructuredDocumentation","src":"35607:459:21","text":" @notice Caller stakes a bond to dispute the current root bundle proposal assuming it has not passed liveness\n yet. The proposal is deleted, allowing a follow-up proposal to be submitted, and the dispute is sent to the\n optimistic oracle to be adjudicated. Can only be called within the liveness period of the current proposal.\n @notice The caller of this function must approve this contract to spend bondAmount of l1Token."},"functionSelector":"22395aaa","id":5935,"implemented":true,"kind":"function","modifiers":[{"id":5767,"kind":"modifierInvocation","modifierName":{"id":5766,"name":"nonReentrant","nameLocations":["36107:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":6653,"src":"36107:12:21"},"nodeType":"ModifierInvocation","src":"36107:12:21"},{"id":5769,"kind":"modifierInvocation","modifierName":{"id":5768,"name":"zeroOptimisticOracleApproval","nameLocations":["36120:28:21"],"nodeType":"IdentifierPath","referencedDeclaration":4721,"src":"36120:28:21"},"nodeType":"ModifierInvocation","src":"36120:28:21"}],"name":"disputeRootBundle","nameLocation":"36080:17:21","nodeType":"FunctionDefinition","parameters":{"id":5765,"nodeType":"ParameterList","parameters":[],"src":"36097:2:21"},"returnParameters":{"id":5770,"nodeType":"ParameterList","parameters":[],"src":"36149:0:21"},"scope":6626,"src":"36071:4683:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[7170],"body":{"id":5969,"nodeType":"Block","src":"41015:343:21","statements":[{"assignments":[5945],"declarations":[{"constant":false,"id":5945,"mutability":"mutable","name":"_unclaimedAccumulatedProtocolFees","nameLocation":"41033:33:21","nodeType":"VariableDeclaration","scope":5969,"src":"41025:41:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5944,"name":"uint256","nodeType":"ElementaryTypeName","src":"41025:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5949,"initialValue":{"baseExpression":{"id":5946,"name":"unclaimedAccumulatedProtocolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"41069:32:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5948,"indexExpression":{"id":5947,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"41102:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"41069:41:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"41025:85:21"},{"expression":{"id":5954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5950,"name":"unclaimedAccumulatedProtocolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"41120:32:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5952,"indexExpression":{"id":5951,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"41153:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"41120:41:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":5953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"41164:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"41120:45:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5955,"nodeType":"ExpressionStatement","src":"41120:45:21"},{"expression":{"arguments":[{"id":5960,"name":"protocolFeeCaptureAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"41204:25:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5961,"name":"_unclaimedAccumulatedProtocolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"41231:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5957,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"41182:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5956,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"41175:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":5958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41175:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":5959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"41191:12:21","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":259,"src":"41175:28:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$","typeString":"function (contract IERC20,address,uint256)"}},"id":5962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41175:90:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5963,"nodeType":"ExpressionStatement","src":"41175:90:21"},{"eventCall":{"arguments":[{"id":5965,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"41308:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5966,"name":"_unclaimedAccumulatedProtocolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"41317:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5964,"name":"ProtocolFeesCapturedClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"41280:27:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41280:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5968,"nodeType":"EmitStatement","src":"41275:76:21"}]},"documentation":{"id":5936,"nodeType":"StructuredDocumentation","src":"40760:169:21","text":" @notice Send unclaimed accumulated protocol fees to fee capture address.\n @param l1Token Token whose protocol fees the caller wants to disburse."},"functionSelector":"2d0f6f84","id":5970,"implemented":true,"kind":"function","modifiers":[{"id":5942,"kind":"modifierInvocation","modifierName":{"id":5941,"name":"nonReentrant","nameLocations":["41002:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":6653,"src":"41002:12:21"},"nodeType":"ModifierInvocation","src":"41002:12:21"}],"name":"claimProtocolFeesCaptured","nameLocation":"40943:25:21","nodeType":"FunctionDefinition","overrides":{"id":5940,"nodeType":"OverrideSpecifier","overrides":[],"src":"40993:8:21"},"parameters":{"id":5939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5938,"mutability":"mutable","name":"l1Token","nameLocation":"40977:7:21","nodeType":"VariableDeclaration","scope":5970,"src":"40969:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5937,"name":"address","nodeType":"ElementaryTypeName","src":"40969:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"40968:17:21"},"returnParameters":{"id":5943,"nodeType":"ParameterList","parameters":[],"src":"41015:0:21"},"scope":6626,"src":"40934:424:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[7199],"body":{"id":5988,"nodeType":"Block","src":"42473:96:21","statements":[{"expression":{"baseExpression":{"id":5981,"name":"poolRebalanceRoutes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"42490:19:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":5986,"indexExpression":{"arguments":[{"id":5983,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5975,"src":"42533:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5984,"name":"destinationChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5973,"src":"42542:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5982,"name":"_poolRebalanceRouteKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"42510:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (address,uint256) pure returns (bytes32)"}},"id":5985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42510:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"42490:72:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5980,"id":5987,"nodeType":"Return","src":"42483:79:21"}]},"documentation":{"id":5971,"nodeType":"StructuredDocumentation","src":"41364:937:21","text":" @notice Conveniently queries which destination token is mapped to the hash of an l1 token + destination chain ID.\n @dev Admin must be considerate to the compatibility of originToken and destinationToken within the protocol. Some\n token implementations will not function correctly within the Across v2 system. For example ERC20s that charge\n fees will break internal accounting, ERC777 can cause some functions to revert and upgradable tokens can pose\n risks if the implementation is shifted between whitelisting and usage.\n @dev If the pool rebalance route is not whitelisted then this will return address(0).\n @param destinationChainId Where destination token is deployed.\n @param l1Token Ethereum version token.\n @return destinationToken address The destination token that is sent to spoke pools after this contract bridges\n the l1Token to the destination chain."},"functionSelector":"2d32d557","id":5989,"implemented":true,"kind":"function","modifiers":[],"name":"poolRebalanceRoute","nameLocation":"42315:18:21","nodeType":"FunctionDefinition","overrides":{"id":5977,"nodeType":"OverrideSpecifier","overrides":[],"src":"42417:8:21"},"parameters":{"id":5976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5973,"mutability":"mutable","name":"destinationChainId","nameLocation":"42342:18:21","nodeType":"VariableDeclaration","scope":5989,"src":"42334:26:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5972,"name":"uint256","nodeType":"ElementaryTypeName","src":"42334:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5975,"mutability":"mutable","name":"l1Token","nameLocation":"42370:7:21","nodeType":"VariableDeclaration","scope":5989,"src":"42362:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5974,"name":"address","nodeType":"ElementaryTypeName","src":"42362:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"42333:45:21"},"returnParameters":{"id":5980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5979,"mutability":"mutable","name":"destinationToken","nameLocation":"42451:16:21","nodeType":"VariableDeclaration","scope":5989,"src":"42443:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5978,"name":"address","nodeType":"ElementaryTypeName","src":"42443:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"42442:26:21"},"scope":6626,"src":"42306:263:21","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[7202],"body":{"id":5994,"nodeType":"Block","src":"43273:58:21","statements":[]},"documentation":{"id":5990,"nodeType":"StructuredDocumentation","src":"42575:640:21","text":" @notice This function allows a caller to load the contract with raw ETH to perform L2 calls. This is needed for\n Arbitrum calls, but may also be needed for others.\n @dev This function cannot be included in a multicall transaction call because it is payable. A realistic\n situation where this might be an issue is if the caller is executing a PoolRebalanceLeaf that needs to relay\n messages to Arbitrum. Relaying messages to Arbitrum requires that this contract has an ETH balance, so in this\n case the caller would need to pre-load this contract with ETH before multicall-executing the leaf."},"functionSelector":"69b62502","id":5995,"implemented":true,"kind":"function","modifiers":[],"name":"loadEthForL2Calls","nameLocation":"43229:17:21","nodeType":"FunctionDefinition","overrides":{"id":5992,"nodeType":"OverrideSpecifier","overrides":[],"src":"43264:8:21"},"parameters":{"id":5991,"nodeType":"ParameterList","parameters":[],"src":"43246:2:21"},"returnParameters":{"id":5993,"nodeType":"ParameterList","parameters":[],"src":"43273:0:21"},"scope":6626,"src":"43220:111:21","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":6016,"nodeType":"Block","src":"43730:174:21","statements":[{"expression":{"arguments":[{"expression":{"id":6001,"name":"rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"43759:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_storage","typeString":"struct HubPoolInterface.RootBundle storage ref"}},"id":6002,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"43778:8:21","memberName":"proposer","nodeType":"MemberAccess","referencedDeclaration":6998,"src":"43759:27:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6003,"name":"bondAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"43788:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5998,"name":"bondToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"43740:9:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"43750:8:21","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":157,"src":"43740:18:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":6004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"43740:59:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6005,"nodeType":"ExpressionStatement","src":"43740:59:21"},{"expression":{"id":6007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"43809:25:21","subExpression":{"id":6006,"name":"rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"43816:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_storage","typeString":"struct HubPoolInterface.RootBundle storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6008,"nodeType":"ExpressionStatement","src":"43809:25:21"},{"eventCall":{"arguments":[{"expression":{"id":6010,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"43868:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"43872:6:21","memberName":"sender","nodeType":"MemberAccess","src":"43868:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6012,"name":"getCurrentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"43880:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"43880:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6009,"name":"RootBundleCanceled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"43849:18:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"43849:48:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6015,"nodeType":"EmitStatement","src":"43844:53:21"}]},"id":6017,"implemented":true,"kind":"function","modifiers":[],"name":"_cancelBundle","nameLocation":"43705:13:21","nodeType":"FunctionDefinition","parameters":{"id":5996,"nodeType":"ParameterList","parameters":[],"src":"43718:2:21"},"returnParameters":{"id":5997,"nodeType":"ParameterList","parameters":[],"src":"43730:0:21"},"scope":6626,"src":"43696:208:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6031,"nodeType":"Block","src":"43998:141:21","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":6026,"name":"OracleInterfaces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"44091:16:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OracleInterfaces_$3801_$","typeString":"type(library OracleInterfaces)"}},"id":6027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"44108:22:21","memberName":"SkinnyOptimisticOracle","nodeType":"MemberAccess","referencedDeclaration":3791,"src":"44091:39:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6024,"name":"finder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"44059:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3826","typeString":"contract FinderInterface"}},"id":6025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"44066:24:21","memberName":"getImplementationAddress","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"44059:31:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view external returns (address)"}},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44059:72:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6023,"name":"SkinnyOptimisticOracleInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"44027:31:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SkinnyOptimisticOracleInterface_$4442_$","typeString":"type(contract SkinnyOptimisticOracleInterface)"}},"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44027:105:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_SkinnyOptimisticOracleInterface_$4442","typeString":"contract SkinnyOptimisticOracleInterface"}},"functionReturnParameters":6022,"id":6030,"nodeType":"Return","src":"44008:124:21"}]},"id":6032,"implemented":true,"kind":"function","modifiers":[],"name":"_getOptimisticOracle","nameLocation":"43919:20:21","nodeType":"FunctionDefinition","parameters":{"id":6018,"nodeType":"ParameterList","parameters":[],"src":"43939:2:21"},"returnParameters":{"id":6022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6032,"src":"43965:31:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_SkinnyOptimisticOracleInterface_$4442","typeString":"contract SkinnyOptimisticOracleInterface"},"typeName":{"id":6020,"nodeType":"UserDefinedTypeName","pathNode":{"id":6019,"name":"SkinnyOptimisticOracleInterface","nameLocations":["43965:31:21"],"nodeType":"IdentifierPath","referencedDeclaration":4442,"src":"43965:31:21"},"referencedDeclaration":4442,"src":"43965:31:21","typeDescriptions":{"typeIdentifier":"t_contract$_SkinnyOptimisticOracleInterface_$4442","typeString":"contract SkinnyOptimisticOracleInterface"}},"visibility":"internal"}],"src":"43964:33:21"},"scope":6626,"src":"43910:229:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6052,"nodeType":"Block","src":"44210:186:21","statements":[{"expression":{"expression":{"arguments":[{"arguments":[{"id":6047,"name":"bondToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"44352:9:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}],"id":6046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"44344:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6045,"name":"address","nodeType":"ElementaryTypeName","src":"44344:7:21","typeDescriptions":{}}},"id":6048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44344:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"arguments":[{"expression":{"id":6040,"name":"OracleInterfaces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"44286:16:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OracleInterfaces_$3801_$","typeString":"type(library OracleInterfaces)"}},"id":6041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"44303:5:21","memberName":"Store","nodeType":"MemberAccess","referencedDeclaration":3764,"src":"44286:22:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6038,"name":"finder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"44254:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_FinderInterface_$3826","typeString":"contract FinderInterface"}},"id":6039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"44261:24:21","memberName":"getImplementationAddress","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"44254:31:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view external returns (address)"}},"id":6042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44254:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6037,"name":"StoreInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"44239:14:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StoreInterface_$3895_$","typeString":"type(contract StoreInterface)"}},"id":6043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44239:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_StoreInterface_$3895","typeString":"contract StoreInterface"}},"id":6044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"44328:15:21","memberName":"computeFinalFee","nodeType":"MemberAccess","referencedDeclaration":3894,"src":"44239:104:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_struct$_Unsigned_$1877_memory_ptr_$","typeString":"function (address) view external returns (struct FixedPoint.Unsigned memory)"}},"id":6049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44239:124:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Unsigned_$1877_memory_ptr","typeString":"struct FixedPoint.Unsigned memory"}},"id":6050,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"44381:8:21","memberName":"rawValue","nodeType":"MemberAccess","referencedDeclaration":1876,"src":"44239:150:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6036,"id":6051,"nodeType":"Return","src":"44220:169:21"}]},"id":6053,"implemented":true,"kind":"function","modifiers":[],"name":"_getBondTokenFinalFee","nameLocation":"44154:21:21","nodeType":"FunctionDefinition","parameters":{"id":6033,"nodeType":"ParameterList","parameters":[],"src":"44175:2:21"},"returnParameters":{"id":6036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6053,"src":"44201:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6034,"name":"uint256","nodeType":"ElementaryTypeName","src":"44201:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"44200:9:21"},"scope":6626,"src":"44145:251:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6173,"nodeType":"Block","src":"44878:2573:21","statements":[{"assignments":[6072],"declarations":[{"constant":false,"id":6072,"mutability":"mutable","name":"length","nameLocation":"44896:6:21","nodeType":"VariableDeclaration","scope":6173,"src":"44888:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6071,"name":"uint256","nodeType":"ElementaryTypeName","src":"44888:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6075,"initialValue":{"expression":{"id":6073,"name":"l1Tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"44905:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"44914:6:21","memberName":"length","nodeType":"MemberAccess","src":"44905:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"44888:32:21"},{"body":{"id":6171,"nodeType":"Block","src":"44964:2481:21","statements":[{"assignments":[6084],"declarations":[{"constant":false,"id":6084,"mutability":"mutable","name":"l1Token","nameLocation":"44986:7:21","nodeType":"VariableDeclaration","scope":6171,"src":"44978:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6083,"name":"address","nodeType":"ElementaryTypeName","src":"44978:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6088,"initialValue":{"baseExpression":{"id":6085,"name":"l1Tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"44996:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6087,"indexExpression":{"id":6086,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"45005:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"44996:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"44978:29:21"},{"assignments":[6090],"declarations":[{"constant":false,"id":6090,"mutability":"mutable","name":"l2Token","nameLocation":"45204:7:21","nodeType":"VariableDeclaration","scope":6171,"src":"45196:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6089,"name":"address","nodeType":"ElementaryTypeName","src":"45196:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6097,"initialValue":{"baseExpression":{"id":6091,"name":"poolRebalanceRoutes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"45214:19:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":6096,"indexExpression":{"arguments":[{"id":6093,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"45257:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6094,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"45266:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6092,"name":"_poolRebalanceRouteKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"45234:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (address,uint256) pure returns (bytes32)"}},"id":6095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45234:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"45214:61:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"45196:79:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6099,"name":"l2Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"45297:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"45316:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"45308:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6100,"name":"address","nodeType":"ElementaryTypeName","src":"45308:7:21","typeDescriptions":{}}},"id":6103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45308:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"45297:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f757465206e6f742077686974656c6973746564","id":6105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"45320:23:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_aeb0269e6f16b37c310d2f7832810aacb3b5bbf05887e7bb7b5a38cf4616cd2a","typeString":"literal_string \"Route not whitelisted\""},"value":"Route not whitelisted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aeb0269e6f16b37c310d2f7832810aacb3b5bbf05887e7bb7b5a38cf4616cd2a","typeString":"literal_string \"Route not whitelisted\""}],"id":6098,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"45289:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45289:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6107,"nodeType":"ExpressionStatement","src":"45289:55:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6108,"name":"netSendAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"45580:14:21","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[] memory"}},"id":6110,"indexExpression":{"id":6109,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"45595:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"45580:17:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"45600:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"45580:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6159,"nodeType":"IfStatement","src":"45576:1244:21","trueBody":{"id":6158,"nodeType":"Block","src":"45603:1217:21","statements":[{"assignments":[6114,null],"declarations":[{"constant":false,"id":6114,"mutability":"mutable","name":"success","nameLocation":"46053:7:21","nodeType":"VariableDeclaration","scope":6158,"src":"46048:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6113,"name":"bool","nodeType":"ElementaryTypeName","src":"46048:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":6131,"initialValue":{"arguments":[{"arguments":[{"hexValue":"72656c6179546f6b656e7328616464726573732c616464726573732c75696e743235362c6164647265737329","id":6119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"46157:46:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_52c8c75c15ec2f9b2a6512185587555930713ab669c4f5368b5a8936c55b84ea","typeString":"literal_string \"relayTokens(address,address,uint256,address)\""},"value":"relayTokens(address,address,uint256,address)"},{"id":6120,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"46229:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6121,"name":"l2Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"46274:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"baseExpression":{"id":6124,"name":"netSendAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"46327:14:21","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[] memory"}},"id":6126,"indexExpression":{"id":6125,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"46342:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"46327:17:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"46319:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6122,"name":"uint256","nodeType":"ElementaryTypeName","src":"46319:7:21","typeDescriptions":{}}},"id":6127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"46319:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6128,"name":"spokePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6057,"src":"46382:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_52c8c75c15ec2f9b2a6512185587555930713ab669c4f5368b5a8936c55b84ea","typeString":"literal_string \"relayTokens(address,address,uint256,address)\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6117,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"46108:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"46112:19:21","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"46108:23:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":6129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"46108:342:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6115,"name":"adapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"46066:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"46074:12:21","memberName":"delegatecall","nodeType":"MemberAccess","src":"46066:20:21","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":6130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"46066:402:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"46047:421:21"},{"expression":{"arguments":[{"id":6133,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6114,"src":"46494:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"64656c656761746563616c6c206661696c6564","id":6134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"46503:21:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_05cf1118cd6854a69c478b1e66867edbe3ae1e579d49e23c31b73cbbdf29b708","typeString":"literal_string \"delegatecall failed\""},"value":"delegatecall failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05cf1118cd6854a69c478b1e66867edbe3ae1e579d49e23c31b73cbbdf29b708","typeString":"literal_string \"delegatecall failed\""}],"id":6132,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"46486:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"46486:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6136,"nodeType":"ExpressionStatement","src":"46486:39:21"},{"expression":{"id":6144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6137,"name":"pooledTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"46662:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PooledToken_$7016_storage_$","typeString":"mapping(address => struct HubPoolInterface.PooledToken storage ref)"}},"id":6139,"indexExpression":{"id":6138,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"46675:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"46662:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage","typeString":"struct HubPoolInterface.PooledToken storage ref"}},"id":6140,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"46684:16:21","memberName":"utilizedReserves","nodeType":"MemberAccess","referencedDeclaration":7011,"src":"46662:38:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":6141,"name":"netSendAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"46704:14:21","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[] memory"}},"id":6143,"indexExpression":{"id":6142,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"46719:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"46704:17:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"46662:59:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6145,"nodeType":"ExpressionStatement","src":"46662:59:21"},{"expression":{"id":6156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6146,"name":"pooledTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"46739:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PooledToken_$7016_storage_$","typeString":"mapping(address => struct HubPoolInterface.PooledToken storage ref)"}},"id":6148,"indexExpression":{"id":6147,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"46752:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"46739:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage","typeString":"struct HubPoolInterface.PooledToken storage ref"}},"id":6149,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"46761:14:21","memberName":"liquidReserves","nodeType":"MemberAccess","referencedDeclaration":7013,"src":"46739:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"arguments":[{"baseExpression":{"id":6152,"name":"netSendAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"46787:14:21","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[] memory"}},"id":6154,"indexExpression":{"id":6153,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"46802:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"46787:17:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"46779:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6150,"name":"uint256","nodeType":"ElementaryTypeName","src":"46779:7:21","typeDescriptions":{}}},"id":6155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"46779:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"46739:66:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6157,"nodeType":"ExpressionStatement","src":"46739:66:21"}]}},{"expression":{"arguments":[{"id":6161,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"46968:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":6162,"name":"bundleLpFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6068,"src":"46977:12:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6164,"indexExpression":{"id":6163,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"46990:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"46977:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6160,"name":"_allocateLpAndProtocolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6488,"src":"46941:26:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"46941:52:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6166,"nodeType":"ExpressionStatement","src":"46941:52:21"},{"id":6170,"nodeType":"UncheckedBlock","src":"47389:46:21","statements":[{"expression":{"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"47417:3:21","subExpression":{"id":6167,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"47419:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6169,"nodeType":"ExpressionStatement","src":"47417:3:21"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6080,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"44950:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6081,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6072,"src":"44954:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"44950:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6172,"initializationExpression":{"assignments":[6077],"declarations":[{"constant":false,"id":6077,"mutability":"mutable","name":"i","nameLocation":"44943:1:21","nodeType":"VariableDeclaration","scope":6172,"src":"44935:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6076,"name":"uint256","nodeType":"ElementaryTypeName","src":"44935:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6079,"initialValue":{"hexValue":"30","id":6078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"44947:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"44935:13:21"},"isSimpleCounterLoop":false,"nodeType":"ForStatement","src":"44930:2515:21"}]},"id":6174,"implemented":true,"kind":"function","modifiers":[],"name":"_sendTokensToChainAndUpdatePooledTokenTrackers","nameLocation":"44625:46:21","nodeType":"FunctionDefinition","parameters":{"id":6069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6055,"mutability":"mutable","name":"adapter","nameLocation":"44689:7:21","nodeType":"VariableDeclaration","scope":6174,"src":"44681:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6054,"name":"address","nodeType":"ElementaryTypeName","src":"44681:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6057,"mutability":"mutable","name":"spokePool","nameLocation":"44714:9:21","nodeType":"VariableDeclaration","scope":6174,"src":"44706:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6056,"name":"address","nodeType":"ElementaryTypeName","src":"44706:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6059,"mutability":"mutable","name":"chainId","nameLocation":"44741:7:21","nodeType":"VariableDeclaration","scope":6174,"src":"44733:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6058,"name":"uint256","nodeType":"ElementaryTypeName","src":"44733:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6062,"mutability":"mutable","name":"l1Tokens","nameLocation":"44775:8:21","nodeType":"VariableDeclaration","scope":6174,"src":"44758:25:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6060,"name":"address","nodeType":"ElementaryTypeName","src":"44758:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6061,"nodeType":"ArrayTypeName","src":"44758:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6065,"mutability":"mutable","name":"netSendAmounts","nameLocation":"44809:14:21","nodeType":"VariableDeclaration","scope":6174,"src":"44793:30:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":6063,"name":"int256","nodeType":"ElementaryTypeName","src":"44793:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6064,"nodeType":"ArrayTypeName","src":"44793:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":6068,"mutability":"mutable","name":"bundleLpFees","nameLocation":"44850:12:21","nodeType":"VariableDeclaration","scope":6174,"src":"44833:29:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6066,"name":"uint256","nodeType":"ElementaryTypeName","src":"44833:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6067,"nodeType":"ArrayTypeName","src":"44833:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"44671:197:21"},"returnParameters":{"id":6070,"nodeType":"ParameterList","parameters":[],"src":"44878:0:21"},"scope":6626,"src":"44616:2835:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6238,"nodeType":"Block","src":"47531:1613:21","statements":[{"assignments":[6183],"declarations":[{"constant":false,"id":6183,"mutability":"mutable","name":"pooledToken","nameLocation":"47561:11:21","nodeType":"VariableDeclaration","scope":6238,"src":"47541:31:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage_ptr","typeString":"struct HubPoolInterface.PooledToken"},"typeName":{"id":6182,"nodeType":"UserDefinedTypeName","pathNode":{"id":6181,"name":"PooledToken","nameLocations":["47541:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":7016,"src":"47541:11:21"},"referencedDeclaration":7016,"src":"47541:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage_ptr","typeString":"struct HubPoolInterface.PooledToken"}},"visibility":"internal"}],"id":6187,"initialValue":{"baseExpression":{"id":6184,"name":"pooledTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"47575:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PooledToken_$7016_storage_$","typeString":"mapping(address => struct HubPoolInterface.PooledToken storage ref)"}},"id":6186,"indexExpression":{"id":6185,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"47588:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"47575:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage","typeString":"struct HubPoolInterface.PooledToken storage ref"}},"nodeType":"VariableDeclarationStatement","src":"47541:55:21"},{"assignments":[6189],"declarations":[{"constant":false,"id":6189,"mutability":"mutable","name":"lpTokenTotalSupply","nameLocation":"47668:18:21","nodeType":"VariableDeclaration","scope":6238,"src":"47660:26:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6188,"name":"uint256","nodeType":"ElementaryTypeName","src":"47660:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6196,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"expression":{"id":6191,"name":"pooledToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6183,"src":"47696:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage_ptr","typeString":"struct HubPoolInterface.PooledToken storage pointer"}},"id":6192,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"47708:7:21","memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":7005,"src":"47696:19:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6190,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"47689:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":6193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"47689:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":6194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"47717:11:21","memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":139,"src":"47689:39:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"47689:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"47660:70:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6197,"name":"lpTokenTotalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6189,"src":"47744:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"47766:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"47744:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6202,"nodeType":"IfStatement","src":"47740:40:21","trueBody":{"expression":{"hexValue":"31653138","id":6200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"47776:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"functionReturnParameters":6180,"id":6201,"nodeType":"Return","src":"47769:11:21"}},{"expression":{"arguments":[{"id":6204,"name":"pooledToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6183,"src":"47970:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage_ptr","typeString":"struct HubPoolInterface.PooledToken storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PooledToken_$7016_storage_ptr","typeString":"struct HubPoolInterface.PooledToken storage pointer"}],"id":6203,"name":"_updateAccumulatedLpFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"47945:24:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_PooledToken_$7016_storage_ptr_$returns$__$","typeString":"function (struct HubPoolInterface.PooledToken storage pointer)"}},"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"47945:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6206,"nodeType":"ExpressionStatement","src":"47945:37:21"},{"expression":{"arguments":[{"id":6208,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"48074:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6207,"name":"_sync","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"48068:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"48068:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6210,"nodeType":"ExpressionStatement","src":"48068:14:21"},{"assignments":[6212],"declarations":[{"constant":false,"id":6212,"mutability":"mutable","name":"numerator","nameLocation":"48929:9:21","nodeType":"VariableDeclaration","scope":6238,"src":"48922:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6211,"name":"int256","nodeType":"ElementaryTypeName","src":"48922:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6227,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":6215,"name":"pooledToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6183,"src":"48948:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage_ptr","typeString":"struct HubPoolInterface.PooledToken storage pointer"}},"id":6216,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"48960:14:21","memberName":"liquidReserves","nodeType":"MemberAccess","referencedDeclaration":7013,"src":"48948:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"48941:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6213,"name":"int256","nodeType":"ElementaryTypeName","src":"48941:6:21","typeDescriptions":{}}},"id":6217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"48941:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":6218,"name":"pooledToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6183,"src":"48990:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage_ptr","typeString":"struct HubPoolInterface.PooledToken storage pointer"}},"id":6219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"49002:16:21","memberName":"utilizedReserves","nodeType":"MemberAccess","referencedDeclaration":7011,"src":"48990:28:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"48941:77:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"expression":{"id":6223,"name":"pooledToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6183,"src":"49040:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage_ptr","typeString":"struct HubPoolInterface.PooledToken storage pointer"}},"id":6224,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"49052:19:21","memberName":"undistributedLpFees","nodeType":"MemberAccess","referencedDeclaration":7015,"src":"49040:31:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"49033:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6221,"name":"int256","nodeType":"ElementaryTypeName","src":"49033:6:21","typeDescriptions":{}}},"id":6225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"49033:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"48941:131:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"48922:150:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6230,"name":"numerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6212,"src":"49098:9:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"49090:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6228,"name":"uint256","nodeType":"ElementaryTypeName","src":"49090:7:21","typeDescriptions":{}}},"id":6231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"49090:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":6232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"49111:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"49090:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6234,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"49089:27:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6235,"name":"lpTokenTotalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6189,"src":"49119:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"49089:48:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6180,"id":6237,"nodeType":"Return","src":"49082:55:21"}]},"id":6239,"implemented":true,"kind":"function","modifiers":[],"name":"_exchangeRateCurrent","nameLocation":"47466:20:21","nodeType":"FunctionDefinition","parameters":{"id":6177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6176,"mutability":"mutable","name":"l1Token","nameLocation":"47495:7:21","nodeType":"VariableDeclaration","scope":6239,"src":"47487:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6175,"name":"address","nodeType":"ElementaryTypeName","src":"47487:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"47486:17:21"},"returnParameters":{"id":6180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6239,"src":"47522:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6178,"name":"uint256","nodeType":"ElementaryTypeName","src":"47522:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47521:9:21"},"scope":6626,"src":"47457:1687:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6270,"nodeType":"Block","src":"49338:248:21","statements":[{"assignments":[6246],"declarations":[{"constant":false,"id":6246,"mutability":"mutable","name":"accumulatedFees","nameLocation":"49356:15:21","nodeType":"VariableDeclaration","scope":6270,"src":"49348:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6245,"name":"uint256","nodeType":"ElementaryTypeName","src":"49348:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6253,"initialValue":{"arguments":[{"expression":{"id":6248,"name":"pooledToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"49394:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage_ptr","typeString":"struct HubPoolInterface.PooledToken storage pointer"}},"id":6249,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"49406:19:21","memberName":"undistributedLpFees","nodeType":"MemberAccess","referencedDeclaration":7015,"src":"49394:31:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6250,"name":"pooledToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"49427:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage_ptr","typeString":"struct HubPoolInterface.PooledToken storage pointer"}},"id":6251,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"49439:15:21","memberName":"lastLpFeeUpdate","nodeType":"MemberAccess","referencedDeclaration":7009,"src":"49427:27:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":6247,"name":"_getAccumulatedFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6307,"src":"49374:19:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"49374:81:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"49348:107:21"},{"expression":{"id":6258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6254,"name":"pooledToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"49465:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage_ptr","typeString":"struct HubPoolInterface.PooledToken storage pointer"}},"id":6256,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"49477:19:21","memberName":"undistributedLpFees","nodeType":"MemberAccess","referencedDeclaration":7015,"src":"49465:31:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":6257,"name":"accumulatedFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6246,"src":"49500:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"49465:50:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6259,"nodeType":"ExpressionStatement","src":"49465:50:21"},{"expression":{"id":6268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6260,"name":"pooledToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"49525:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage_ptr","typeString":"struct HubPoolInterface.PooledToken storage pointer"}},"id":6262,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"49537:15:21","memberName":"lastLpFeeUpdate","nodeType":"MemberAccess","referencedDeclaration":7009,"src":"49525:27:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":6265,"name":"getCurrentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"49562:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"49562:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"49555:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6263,"name":"uint32","nodeType":"ElementaryTypeName","src":"49555:6:21","typeDescriptions":{}}},"id":6267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"49555:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"49525:54:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":6269,"nodeType":"ExpressionStatement","src":"49525:54:21"}]},"id":6271,"implemented":true,"kind":"function","modifiers":[],"name":"_updateAccumulatedLpFees","nameLocation":"49271:24:21","nodeType":"FunctionDefinition","parameters":{"id":6243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6242,"mutability":"mutable","name":"pooledToken","nameLocation":"49316:11:21","nodeType":"VariableDeclaration","scope":6271,"src":"49296:31:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage_ptr","typeString":"struct HubPoolInterface.PooledToken"},"typeName":{"id":6241,"nodeType":"UserDefinedTypeName","pathNode":{"id":6240,"name":"PooledToken","nameLocations":["49296:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":7016,"src":"49296:11:21"},"referencedDeclaration":7016,"src":"49296:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage_ptr","typeString":"struct HubPoolInterface.PooledToken"}},"visibility":"internal"}],"src":"49295:33:21"},"returnParameters":{"id":6244,"nodeType":"ParameterList","parameters":[],"src":"49338:0:21"},"scope":6626,"src":"49262:324:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6306,"nodeType":"Block","src":"49800:543:21","statements":[{"assignments":[6281],"declarations":[{"constant":false,"id":6281,"mutability":"mutable","name":"timeFromLastInteraction","nameLocation":"50048:23:21","nodeType":"VariableDeclaration","scope":6306,"src":"50040:31:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6280,"name":"uint256","nodeType":"ElementaryTypeName","src":"50040:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6286,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6282,"name":"getCurrentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"50074:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"50074:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6284,"name":"lastLpFeeUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6275,"src":"50093:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"50074:34:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"50040:68:21"},{"assignments":[6288],"declarations":[{"constant":false,"id":6288,"mutability":"mutable","name":"maxUndistributedLpFees","nameLocation":"50126:22:21","nodeType":"VariableDeclaration","scope":6306,"src":"50118:30:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6287,"name":"uint256","nodeType":"ElementaryTypeName","src":"50118:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6298,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6289,"name":"undistributedLpFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6273,"src":"50152:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6290,"name":"lpFeeRatePerSecond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"50174:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"50152:40:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6292,"name":"timeFromLastInteraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"50195:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"50152:66:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6294,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"50151:68:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"hexValue":"31653138","id":6295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"50223:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"id":6296,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"50222:6:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"50151:77:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"50118:110:21"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6299,"name":"maxUndistributedLpFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6288,"src":"50245:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6300,"name":"undistributedLpFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6273,"src":"50270:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"50245:44:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6303,"name":"undistributedLpFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6273,"src":"50317:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"50245:91:21","trueExpression":{"id":6302,"name":"maxUndistributedLpFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6288,"src":"50292:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6279,"id":6305,"nodeType":"Return","src":"50238:98:21"}]},"id":6307,"implemented":true,"kind":"function","modifiers":[],"name":"_getAccumulatedFees","nameLocation":"49694:19:21","nodeType":"FunctionDefinition","parameters":{"id":6276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6273,"mutability":"mutable","name":"undistributedLpFees","nameLocation":"49722:19:21","nodeType":"VariableDeclaration","scope":6307,"src":"49714:27:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6272,"name":"uint256","nodeType":"ElementaryTypeName","src":"49714:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6275,"mutability":"mutable","name":"lastLpFeeUpdate","nameLocation":"49751:15:21","nodeType":"VariableDeclaration","scope":6307,"src":"49743:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6274,"name":"uint256","nodeType":"ElementaryTypeName","src":"49743:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"49713:54:21"},"returnParameters":{"id":6279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6307,"src":"49791:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6277,"name":"uint256","nodeType":"ElementaryTypeName","src":"49791:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"49790:9:21"},"scope":6626,"src":"49685:658:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6371,"nodeType":"Block","src":"50390:1000:21","statements":[{"assignments":[6313],"declarations":[{"constant":false,"id":6313,"mutability":"mutable","name":"balance","nameLocation":"50757:7:21","nodeType":"VariableDeclaration","scope":6371,"src":"50749:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6312,"name":"uint256","nodeType":"ElementaryTypeName","src":"50749:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6323,"initialValue":{"arguments":[{"arguments":[{"id":6320,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"50801:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_HubPool_$6626","typeString":"contract HubPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HubPool_$6626","typeString":"contract HubPool"}],"id":6319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"50793:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6318,"name":"address","nodeType":"ElementaryTypeName","src":"50793:7:21","typeDescriptions":{}}},"id":6321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"50793:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":6315,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"50774:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6314,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"50767:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$190_$","typeString":"type(contract IERC20)"}},"id":6316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"50767:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":6317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"50783:9:21","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":147,"src":"50767:25:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":6322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"50767:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"50749:58:21"},{"assignments":[6325],"declarations":[{"constant":false,"id":6325,"mutability":"mutable","name":"balanceSansBond","nameLocation":"50825:15:21","nodeType":"VariableDeclaration","scope":6371,"src":"50817:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6324,"name":"uint256","nodeType":"ElementaryTypeName","src":"50817:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6340,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6326,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"50843:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":6329,"name":"bondToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"50862:9:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}],"id":6328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"50854:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6327,"name":"address","nodeType":"ElementaryTypeName","src":"50854:7:21","typeDescriptions":{}}},"id":6330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"50854:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"50843:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6332,"name":"_activeRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6596,"src":"50876:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"50876:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"50843:49:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6338,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"50918:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"50843:82:21","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6335,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"50895:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6336,"name":"bondAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"50905:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"50895:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"50817:108:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6341,"name":"balanceSansBond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"50939:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"baseExpression":{"id":6342,"name":"pooledTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"50957:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PooledToken_$7016_storage_$","typeString":"mapping(address => struct HubPoolInterface.PooledToken storage ref)"}},"id":6344,"indexExpression":{"id":6343,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"50970:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"50957:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage","typeString":"struct HubPoolInterface.PooledToken storage ref"}},"id":6345,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"50979:14:21","memberName":"liquidReserves","nodeType":"MemberAccess","referencedDeclaration":7013,"src":"50957:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"50939:54:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6370,"nodeType":"IfStatement","src":"50935:449:21","trueBody":{"id":6369,"nodeType":"Block","src":"50995:389:21","statements":[{"expression":{"id":6360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6347,"name":"pooledTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"51201:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PooledToken_$7016_storage_$","typeString":"mapping(address => struct HubPoolInterface.PooledToken storage ref)"}},"id":6349,"indexExpression":{"id":6348,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"51214:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"51201:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage","typeString":"struct HubPoolInterface.PooledToken storage ref"}},"id":6350,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"51223:16:21","memberName":"utilizedReserves","nodeType":"MemberAccess","referencedDeclaration":7011,"src":"51201:38:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6353,"name":"balanceSansBond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"51250:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"baseExpression":{"id":6354,"name":"pooledTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"51268:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PooledToken_$7016_storage_$","typeString":"mapping(address => struct HubPoolInterface.PooledToken storage ref)"}},"id":6356,"indexExpression":{"id":6355,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"51281:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"51268:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage","typeString":"struct HubPoolInterface.PooledToken storage ref"}},"id":6357,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"51290:14:21","memberName":"liquidReserves","nodeType":"MemberAccess","referencedDeclaration":7013,"src":"51268:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"51250:54:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"51243:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6351,"name":"int256","nodeType":"ElementaryTypeName","src":"51243:6:21","typeDescriptions":{}}},"id":6359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"51243:62:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"51201:104:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6361,"nodeType":"ExpressionStatement","src":"51201:104:21"},{"expression":{"id":6367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6362,"name":"pooledTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"51319:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PooledToken_$7016_storage_$","typeString":"mapping(address => struct HubPoolInterface.PooledToken storage ref)"}},"id":6364,"indexExpression":{"id":6363,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"51332:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"51319:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage","typeString":"struct HubPoolInterface.PooledToken storage ref"}},"id":6365,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"51341:14:21","memberName":"liquidReserves","nodeType":"MemberAccess","referencedDeclaration":7013,"src":"51319:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6366,"name":"balanceSansBond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"51358:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"51319:54:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6368,"nodeType":"ExpressionStatement","src":"51319:54:21"}]}}]},"id":6372,"implemented":true,"kind":"function","modifiers":[],"name":"_sync","nameLocation":"50358:5:21","nodeType":"FunctionDefinition","parameters":{"id":6310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6309,"mutability":"mutable","name":"l1Token","nameLocation":"50372:7:21","nodeType":"VariableDeclaration","scope":6372,"src":"50364:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6308,"name":"address","nodeType":"ElementaryTypeName","src":"50364:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"50363:17:21"},"returnParameters":{"id":6311,"nodeType":"ParameterList","parameters":[],"src":"50390:0:21"},"scope":6626,"src":"50349:1041:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6432,"nodeType":"Block","src":"51503:1457:21","statements":[{"expression":{"arguments":[{"id":6382,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"51519:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6381,"name":"_sync","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"51513:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"51513:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6384,"nodeType":"ExpressionStatement","src":"51513:14:21"},{"assignments":[6387],"declarations":[{"constant":false,"id":6387,"mutability":"mutable","name":"pooledL1Token","nameLocation":"52242:13:21","nodeType":"VariableDeclaration","scope":6432,"src":"52223:32:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_memory_ptr","typeString":"struct HubPoolInterface.PooledToken"},"typeName":{"id":6386,"nodeType":"UserDefinedTypeName","pathNode":{"id":6385,"name":"PooledToken","nameLocations":["52223:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":7016,"src":"52223:11:21"},"referencedDeclaration":7016,"src":"52223:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage_ptr","typeString":"struct HubPoolInterface.PooledToken"}},"visibility":"internal"}],"id":6391,"initialValue":{"baseExpression":{"id":6388,"name":"pooledTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"52258:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PooledToken_$7016_storage_$","typeString":"mapping(address => struct HubPoolInterface.PooledToken storage ref)"}},"id":6390,"indexExpression":{"id":6389,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"52271:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"52258:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage","typeString":"struct HubPoolInterface.PooledToken storage ref"}},"nodeType":"VariableDeclarationStatement","src":"52223:56:21"},{"assignments":[6393],"declarations":[{"constant":false,"id":6393,"mutability":"mutable","name":"flooredUtilizedReserves","nameLocation":"52297:23:21","nodeType":"VariableDeclaration","scope":6432,"src":"52289:31:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6392,"name":"uint256","nodeType":"ElementaryTypeName","src":"52289:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6405,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6394,"name":"pooledL1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"52323:13:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_memory_ptr","typeString":"struct HubPoolInterface.PooledToken memory"}},"id":6395,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"52337:16:21","memberName":"utilizedReserves","nodeType":"MemberAccess","referencedDeclaration":7011,"src":"52323:30:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"52356:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"52323:34:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":6403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"52482:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":6404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"52323:160:21","trueExpression":{"arguments":[{"expression":{"id":6400,"name":"pooledL1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"52380:13:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_memory_ptr","typeString":"struct HubPoolInterface.PooledToken memory"}},"id":6401,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"52394:16:21","memberName":"utilizedReserves","nodeType":"MemberAccess","referencedDeclaration":7011,"src":"52380:30:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"52372:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6398,"name":"uint256","nodeType":"ElementaryTypeName","src":"52372:7:21","typeDescriptions":{}}},"id":6402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"52372:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"52289:194:21"},{"assignments":[6407],"declarations":[{"constant":false,"id":6407,"mutability":"mutable","name":"numerator","nameLocation":"52587:9:21","nodeType":"VariableDeclaration","scope":6432,"src":"52579:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6406,"name":"uint256","nodeType":"ElementaryTypeName","src":"52579:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6411,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6408,"name":"relayedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6376,"src":"52599:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6409,"name":"flooredUtilizedReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"52615:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"52599:39:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"52579:59:21"},{"assignments":[6413],"declarations":[{"constant":false,"id":6413,"mutability":"mutable","name":"denominator","nameLocation":"52656:11:21","nodeType":"VariableDeclaration","scope":6432,"src":"52648:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6412,"name":"uint256","nodeType":"ElementaryTypeName","src":"52648:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6418,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6414,"name":"pooledL1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"52670:13:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_memory_ptr","typeString":"struct HubPoolInterface.PooledToken memory"}},"id":6415,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"52684:14:21","memberName":"liquidReserves","nodeType":"MemberAccess","referencedDeclaration":7013,"src":"52670:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6416,"name":"flooredUtilizedReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"52701:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"52670:54:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"52648:76:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6419,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6413,"src":"52813:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"52828:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"52813:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6424,"nodeType":"IfStatement","src":"52809:33:21","trueBody":{"expression":{"hexValue":"31653138","id":6422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"52838:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"functionReturnParameters":6380,"id":6423,"nodeType":"Return","src":"52831:11:21"}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6425,"name":"numerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6407,"src":"52922:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":6426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"52934:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"52922:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6428,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"52921:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6429,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6413,"src":"52942:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"52921:32:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6380,"id":6431,"nodeType":"Return","src":"52914:39:21"}]},"id":6433,"implemented":true,"kind":"function","modifiers":[],"name":"_liquidityUtilizationPostRelay","nameLocation":"51405:30:21","nodeType":"FunctionDefinition","parameters":{"id":6377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6374,"mutability":"mutable","name":"l1Token","nameLocation":"51444:7:21","nodeType":"VariableDeclaration","scope":6433,"src":"51436:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6373,"name":"address","nodeType":"ElementaryTypeName","src":"51436:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6376,"mutability":"mutable","name":"relayedAmount","nameLocation":"51461:13:21","nodeType":"VariableDeclaration","scope":6433,"src":"51453:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6375,"name":"uint256","nodeType":"ElementaryTypeName","src":"51453:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"51435:40:21"},"returnParameters":{"id":6380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6433,"src":"51494:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6378,"name":"uint256","nodeType":"ElementaryTypeName","src":"51494:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"51493:9:21"},"scope":6626,"src":"51396:1564:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6487,"nodeType":"Block","src":"53050:1105:21","statements":[{"assignments":[6441],"declarations":[{"constant":false,"id":6441,"mutability":"mutable","name":"protocolFeesCaptured","nameLocation":"53170:20:21","nodeType":"VariableDeclaration","scope":6487,"src":"53162:28:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6440,"name":"uint256","nodeType":"ElementaryTypeName","src":"53162:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6448,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6442,"name":"bundleLpFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"53194:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6443,"name":"protocolFeeCapturePct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"53209:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"53194:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6445,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"53193:38:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":6446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"53234:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"53193:45:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"53162:76:21"},{"assignments":[6450],"declarations":[{"constant":false,"id":6450,"mutability":"mutable","name":"lpFeesCaptured","nameLocation":"53256:14:21","nodeType":"VariableDeclaration","scope":6487,"src":"53248:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6449,"name":"uint256","nodeType":"ElementaryTypeName","src":"53248:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6454,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6451,"name":"bundleLpFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"53273:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6452,"name":"protocolFeesCaptured","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6441,"src":"53288:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"53273:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"53248:60:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6455,"name":"lpFeesCaptured","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6450,"src":"53762:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"53779:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"53762:18:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6476,"nodeType":"IfStatement","src":"53758:186:21","trueBody":{"id":6475,"nodeType":"Block","src":"53782:162:21","statements":[{"expression":{"id":6463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6458,"name":"pooledTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"53796:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PooledToken_$7016_storage_$","typeString":"mapping(address => struct HubPoolInterface.PooledToken storage ref)"}},"id":6460,"indexExpression":{"id":6459,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6435,"src":"53809:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"53796:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage","typeString":"struct HubPoolInterface.PooledToken storage ref"}},"id":6461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"53818:19:21","memberName":"undistributedLpFees","nodeType":"MemberAccess","referencedDeclaration":7015,"src":"53796:41:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6462,"name":"lpFeesCaptured","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6450,"src":"53841:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"53796:59:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6464,"nodeType":"ExpressionStatement","src":"53796:59:21"},{"expression":{"id":6473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6465,"name":"pooledTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"53869:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_PooledToken_$7016_storage_$","typeString":"mapping(address => struct HubPoolInterface.PooledToken storage ref)"}},"id":6467,"indexExpression":{"id":6466,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6435,"src":"53882:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"53869:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_PooledToken_$7016_storage","typeString":"struct HubPoolInterface.PooledToken storage ref"}},"id":6468,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"53891:16:21","memberName":"utilizedReserves","nodeType":"MemberAccess","referencedDeclaration":7011,"src":"53869:38:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":6471,"name":"lpFeesCaptured","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6450,"src":"53918:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"53911:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6469,"name":"int256","nodeType":"ElementaryTypeName","src":"53911:6:21","typeDescriptions":{}}},"id":6472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"53911:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"53869:64:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6474,"nodeType":"ExpressionStatement","src":"53869:64:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6477,"name":"protocolFeesCaptured","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6441,"src":"54057:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"54080:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"54057:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6486,"nodeType":"IfStatement","src":"54053:95:21","trueBody":{"expression":{"id":6484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6480,"name":"unclaimedAccumulatedProtocolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"54083:32:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6482,"indexExpression":{"id":6481,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6435,"src":"54116:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"54083:41:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6483,"name":"protocolFeesCaptured","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6441,"src":"54128:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"54083:65:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6485,"nodeType":"ExpressionStatement","src":"54083:65:21"}}]},"id":6488,"implemented":true,"kind":"function","modifiers":[],"name":"_allocateLpAndProtocolFees","nameLocation":"52975:26:21","nodeType":"FunctionDefinition","parameters":{"id":6438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6435,"mutability":"mutable","name":"l1Token","nameLocation":"53010:7:21","nodeType":"VariableDeclaration","scope":6488,"src":"53002:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6434,"name":"address","nodeType":"ElementaryTypeName","src":"53002:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6437,"mutability":"mutable","name":"bundleLpFees","nameLocation":"53027:12:21","nodeType":"VariableDeclaration","scope":6488,"src":"53019:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6436,"name":"uint256","nodeType":"ElementaryTypeName","src":"53019:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53001:39:21"},"returnParameters":{"id":6439,"nodeType":"ParameterList","parameters":[],"src":"53050:0:21"},"scope":6626,"src":"52966:1189:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6525,"nodeType":"Block","src":"54252:791:21","statements":[{"assignments":[6496,6498],"declarations":[{"constant":false,"id":6496,"mutability":"mutable","name":"adapter","nameLocation":"54271:7:21","nodeType":"VariableDeclaration","scope":6525,"src":"54263:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6495,"name":"address","nodeType":"ElementaryTypeName","src":"54263:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6498,"mutability":"mutable","name":"spokePool","nameLocation":"54288:9:21","nodeType":"VariableDeclaration","scope":6525,"src":"54280:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6497,"name":"address","nodeType":"ElementaryTypeName","src":"54280:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6502,"initialValue":{"arguments":[{"id":6500,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"54336:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6499,"name":"_getInitializedCrossChainContracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"54301:34:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_address_$","typeString":"function (uint256) view returns (address,address)"}},"id":6501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"54301:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"nodeType":"VariableDeclarationStatement","src":"54262:82:21"},{"assignments":[6504,null],"declarations":[{"constant":false,"id":6504,"mutability":"mutable","name":"success","nameLocation":"54669:7:21","nodeType":"VariableDeclaration","scope":6525,"src":"54664:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6503,"name":"bool","nodeType":"ElementaryTypeName","src":"54664:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":6514,"initialValue":{"arguments":[{"arguments":[{"hexValue":"72656c61794d65737361676528616464726573732c627974657329","id":6509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"54757:29:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_e6eb8ade4dd20203a4f34bac994ad54934891099a6c5b1cb5e49bd6db7741180","typeString":"literal_string \"relayMessage(address,bytes)\""},"value":"relayMessage(address,bytes)"},{"id":6510,"name":"spokePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"54804:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6511,"name":"functionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6492,"src":"54882:12:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e6eb8ade4dd20203a4f34bac994ad54934891099a6c5b1cb5e49bd6db7741180","typeString":"literal_string \"relayMessage(address,bytes)\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6507,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"54716:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"54720:19:21","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"54716:23:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":6512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"54716:192:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6505,"name":"adapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"54682:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"54690:12:21","memberName":"delegatecall","nodeType":"MemberAccess","src":"54682:20:21","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":6513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"54682:236:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"54663:255:21"},{"expression":{"arguments":[{"id":6516,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"54936:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"64656c656761746563616c6c206661696c6564","id":6517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"54945:21:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_05cf1118cd6854a69c478b1e66867edbe3ae1e579d49e23c31b73cbbdf29b708","typeString":"literal_string \"delegatecall failed\""},"value":"delegatecall failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05cf1118cd6854a69c478b1e66867edbe3ae1e579d49e23c31b73cbbdf29b708","typeString":"literal_string \"delegatecall failed\""}],"id":6515,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"54928:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"54928:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6519,"nodeType":"ExpressionStatement","src":"54928:39:21"},{"eventCall":{"arguments":[{"id":6521,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"55014:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6522,"name":"functionData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6492,"src":"55023:12:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6520,"name":"SpokePoolAdminFunctionTriggered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4673,"src":"54982:31:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,bytes memory)"}},"id":6523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"54982:54:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6524,"nodeType":"EmitStatement","src":"54977:59:21"}]},"id":6526,"implemented":true,"kind":"function","modifiers":[],"name":"_relaySpokePoolAdminFunction","nameLocation":"54170:28:21","nodeType":"FunctionDefinition","parameters":{"id":6493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6490,"mutability":"mutable","name":"chainId","nameLocation":"54207:7:21","nodeType":"VariableDeclaration","scope":6526,"src":"54199:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6489,"name":"uint256","nodeType":"ElementaryTypeName","src":"54199:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6492,"mutability":"mutable","name":"functionData","nameLocation":"54229:12:21","nodeType":"VariableDeclaration","scope":6526,"src":"54216:25:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6491,"name":"bytes","nodeType":"ElementaryTypeName","src":"54216:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"54198:44:21"},"returnParameters":{"id":6494,"nodeType":"ParameterList","parameters":[],"src":"54252:0:21"},"scope":6626,"src":"54161:882:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6543,"nodeType":"Block","src":"55158:74:21","statements":[{"expression":{"arguments":[{"arguments":[{"id":6538,"name":"l1Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6528,"src":"55196:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6539,"name":"destinationChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6530,"src":"55205:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6536,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"55185:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"55189:6:21","memberName":"encode","nodeType":"MemberAccess","src":"55185:10:21","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"55185:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6535,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"55175:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"55175:50:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6534,"id":6542,"nodeType":"Return","src":"55168:57:21"}]},"id":6544,"implemented":true,"kind":"function","modifiers":[],"name":"_poolRebalanceRouteKey","nameLocation":"55058:22:21","nodeType":"FunctionDefinition","parameters":{"id":6531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6528,"mutability":"mutable","name":"l1Token","nameLocation":"55089:7:21","nodeType":"VariableDeclaration","scope":6544,"src":"55081:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6527,"name":"address","nodeType":"ElementaryTypeName","src":"55081:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6530,"mutability":"mutable","name":"destinationChainId","nameLocation":"55106:18:21","nodeType":"VariableDeclaration","scope":6544,"src":"55098:26:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6529,"name":"uint256","nodeType":"ElementaryTypeName","src":"55098:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"55080:45:21"},"returnParameters":{"id":6534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6544,"src":"55149:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6532,"name":"bytes32","nodeType":"ElementaryTypeName","src":"55149:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"55148:9:21"},"scope":6626,"src":"55049:183:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6584,"nodeType":"Block","src":"55386:260:21","statements":[{"expression":{"id":6558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6553,"name":"adapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"55396:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":6554,"name":"crossChainContracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"55406:19:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CrossChainContract_$7021_storage_$","typeString":"mapping(uint256 => struct HubPoolInterface.CrossChainContract storage ref)"}},"id":6556,"indexExpression":{"id":6555,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"55426:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"55406:28:21","typeDescriptions":{"typeIdentifier":"t_struct$_CrossChainContract_$7021_storage","typeString":"struct HubPoolInterface.CrossChainContract storage ref"}},"id":6557,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"55435:7:21","memberName":"adapter","nodeType":"MemberAccess","referencedDeclaration":7018,"src":"55406:36:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"55396:46:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6559,"nodeType":"ExpressionStatement","src":"55396:46:21"},{"expression":{"id":6565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6560,"name":"spokePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"55452:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":6561,"name":"crossChainContracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"55464:19:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CrossChainContract_$7021_storage_$","typeString":"mapping(uint256 => struct HubPoolInterface.CrossChainContract storage ref)"}},"id":6563,"indexExpression":{"id":6562,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"55484:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"55464:28:21","typeDescriptions":{"typeIdentifier":"t_struct$_CrossChainContract_$7021_storage","typeString":"struct HubPoolInterface.CrossChainContract storage ref"}},"id":6564,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"55493:9:21","memberName":"spokePool","nodeType":"MemberAccess","referencedDeclaration":7020,"src":"55464:38:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"55452:50:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6566,"nodeType":"ExpressionStatement","src":"55452:50:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6568,"name":"spokePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"55520:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"55541:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"55533:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6569,"name":"address","nodeType":"ElementaryTypeName","src":"55533:7:21","typeDescriptions":{}}},"id":6572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"55533:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"55520:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53706f6b65506f6f6c206e6f7420696e697469616c697a6564","id":6574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"55545:27:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_620625658f580538964ae23088593caca0d4aeca426ffea9239d705371a35512","typeString":"literal_string \"SpokePool not initialized\""},"value":"SpokePool not initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_620625658f580538964ae23088593caca0d4aeca426ffea9239d705371a35512","typeString":"literal_string \"SpokePool not initialized\""}],"id":6567,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"55512:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"55512:61:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6576,"nodeType":"ExpressionStatement","src":"55512:61:21"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6578,"name":"adapter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"55591:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"55599:10:21","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":620,"src":"55591:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":6580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"55591:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41646170746572206e6f7420696e697469616c697a6564","id":6581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"55613:25:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_b0f2d11ff57b36581dc2b416e28069fd4b3547fc4cf2f652acbcb4c3a2be7d97","typeString":"literal_string \"Adapter not initialized\""},"value":"Adapter not initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b0f2d11ff57b36581dc2b416e28069fd4b3547fc4cf2f652acbcb4c3a2be7d97","typeString":"literal_string \"Adapter not initialized\""}],"id":6577,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"55583:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"55583:56:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6583,"nodeType":"ExpressionStatement","src":"55583:56:21"}]},"id":6585,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedCrossChainContracts","nameLocation":"55247:34:21","nodeType":"FunctionDefinition","parameters":{"id":6547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6546,"mutability":"mutable","name":"chainId","nameLocation":"55290:7:21","nodeType":"VariableDeclaration","scope":6585,"src":"55282:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6545,"name":"uint256","nodeType":"ElementaryTypeName","src":"55282:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"55281:17:21"},"returnParameters":{"id":6552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6549,"mutability":"mutable","name":"adapter","nameLocation":"55354:7:21","nodeType":"VariableDeclaration","scope":6585,"src":"55346:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6548,"name":"address","nodeType":"ElementaryTypeName","src":"55346:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6551,"mutability":"mutable","name":"spokePool","nameLocation":"55371:9:21","nodeType":"VariableDeclaration","scope":6585,"src":"55363:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6550,"name":"address","nodeType":"ElementaryTypeName","src":"55363:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"55345:36:21"},"scope":6626,"src":"55238:408:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6595,"nodeType":"Block","src":"55707:79:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6590,"name":"rootBundleProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"55724:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_RootBundle_$7003_storage","typeString":"struct HubPoolInterface.RootBundle storage ref"}},"id":6591,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"55743:31:21","memberName":"unclaimedPoolRebalanceLeafCount","nodeType":"MemberAccess","referencedDeclaration":7000,"src":"55724:50:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"55778:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"55724:55:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6589,"id":6594,"nodeType":"Return","src":"55717:62:21"}]},"id":6596,"implemented":true,"kind":"function","modifiers":[],"name":"_activeRequest","nameLocation":"55661:14:21","nodeType":"FunctionDefinition","parameters":{"id":6586,"nodeType":"ParameterList","parameters":[],"src":"55675:2:21"},"returnParameters":{"id":6589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6596,"src":"55701:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6587,"name":"bool","nodeType":"ElementaryTypeName","src":"55701:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"55700:6:21"},"scope":6626,"src":"55652:134:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6610,"nodeType":"Block","src":"56291:109:21","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":6599,"name":"functionCallStackOriginatesFromOutsideThisContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"56305:50:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":6600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"56305:52:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6609,"nodeType":"IfStatement","src":"56301:92:21","trueBody":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"expression":{"id":6601,"name":"weth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4506,"src":"56359:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_WETH9Interface_$6965","typeString":"contract WETH9Interface"}},"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"56364:7:21","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"56359:12:21","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$","typeString":"function () payable external"}},"id":6606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":6604,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"56380:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"56384:5:21","memberName":"value","nodeType":"MemberAccess","src":"56380:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"56359:32:21","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$value","typeString":"function () payable external"}},"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"56359:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6608,"nodeType":"ExpressionStatement","src":"56359:34:21"}}]},"id":6611,"implemented":true,"kind":"function","modifiers":[],"name":"_depositEthToWeth","nameLocation":"56262:17:21","nodeType":"FunctionDefinition","parameters":{"id":6597,"nodeType":"ParameterList","parameters":[],"src":"56279:2:21"},"returnParameters":{"id":6598,"nodeType":"ParameterList","parameters":[],"src":"56291:0:21"},"scope":6626,"src":"56253:147:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6617,"nodeType":"Block","src":"56632:36:21","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6614,"name":"_depositEthToWeth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6611,"src":"56642:17:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"56642:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6616,"nodeType":"ExpressionStatement","src":"56642:19:21"}]},"id":6618,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6612,"nodeType":"ParameterList","parameters":[],"src":"56612:2:21"},"returnParameters":{"id":6613,"nodeType":"ParameterList","parameters":[],"src":"56632:0:21"},"scope":6626,"src":"56604:64:21","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":6624,"nodeType":"Block","src":"56701:36:21","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6621,"name":"_depositEthToWeth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6611,"src":"56711:17:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"56711:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6623,"nodeType":"ExpressionStatement","src":"56711:19:21"}]},"id":6625,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6619,"nodeType":"ParameterList","parameters":[],"src":"56681:2:21"},"returnParameters":{"id":6620,"nodeType":"ParameterList","parameters":[],"src":"56701:0:21"},"scope":6626,"src":"56674:63:21","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":6627,"src":"2257:54482:21","usedErrors":[],"usedEvents":[13,4534,4544,4550,4556,4562,4566,4570,4578,4584,4590,4600,4610,4618,4628,4645,4667,4673,4679,4685]}],"src":"37:56703:21"},"id":21},"contracts/Lockable.sol":{"ast":{"absolutePath":"contracts/Lockable.sol","exportedSymbols":{"Lockable":[6696]},"id":6697,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":6628,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:22"},{"abstract":false,"baseContracts":[],"canonicalName":"Lockable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6629,"nodeType":"StructuredDocumentation","src":"62:594:22","text":" @title A contract that provides modifiers to prevent reentrancy to state-changing and view-only methods. This contract\n is inspired by https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/ReentrancyGuard.sol\n and https://github.com/balancer-labs/balancer-core/blob/master/contracts/BPool.sol.\n @dev The reason why we use this local contract instead of importing from uma/contracts is because of the addition\n of the internal method `functionCallStackOriginatesFromOutsideThisContract` which doesn't exist in the one exported\n by uma/contracts."},"fullyImplemented":true,"id":6696,"linearizedBaseContracts":[6696],"name":"Lockable","nameLocation":"666:8:22","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":6631,"mutability":"mutable","name":"_notEntered","nameLocation":"695:11:22","nodeType":"VariableDeclaration","scope":6696,"src":"681:25:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6630,"name":"bool","nodeType":"ElementaryTypeName","src":"681:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"body":{"id":6638,"nodeType":"Block","src":"727:425:22","statements":[{"expression":{"id":6636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6634,"name":"_notEntered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6631,"src":"1127:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1141:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1127:18:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6637,"nodeType":"ExpressionStatement","src":"1127:18:22"}]},"id":6639,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6632,"nodeType":"ParameterList","parameters":[],"src":"724:2:22"},"returnParameters":{"id":6633,"nodeType":"ParameterList","parameters":[],"src":"727:0:22"},"scope":6696,"src":"713:439:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6652,"nodeType":"Block","src":"1552:104:22","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6642,"name":"_preEntranceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6679,"src":"1562:17:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":6643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1562:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6644,"nodeType":"ExpressionStatement","src":"1562:19:22"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6645,"name":"_preEntranceSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6687,"src":"1591:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1591:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6647,"nodeType":"ExpressionStatement","src":"1591:17:22"},{"id":6648,"nodeType":"PlaceholderStatement","src":"1618:1:22"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6649,"name":"_postEntranceReset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"1629:18:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1629:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6651,"nodeType":"ExpressionStatement","src":"1629:20:22"}]},"documentation":{"id":6640,"nodeType":"StructuredDocumentation","src":"1158:365:22","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a nonReentrant function from another nonReentrant function is not supported. It is possible to\n prevent this from happening by making the nonReentrant function external, and making it call a private\n function that does the actual state modification."},"id":6653,"name":"nonReentrant","nameLocation":"1537:12:22","nodeType":"ModifierDefinition","parameters":{"id":6641,"nodeType":"ParameterList","parameters":[],"src":"1549:2:22"},"src":"1528:128:22","virtual":false,"visibility":"internal"},{"body":{"id":6660,"nodeType":"Block","src":"1836:47:22","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6656,"name":"_preEntranceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6679,"src":"1846:17:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":6657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1846:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6658,"nodeType":"ExpressionStatement","src":"1846:19:22"},{"id":6659,"nodeType":"PlaceholderStatement","src":"1875:1:22"}]},"documentation":{"id":6654,"nodeType":"StructuredDocumentation","src":"1662:141:22","text":" @dev Designed to prevent a view-only method from being re-entered during a call to a nonReentrant() state-changing method."},"id":6661,"name":"nonReentrantView","nameLocation":"1817:16:22","nodeType":"ModifierDefinition","parameters":{"id":6655,"nodeType":"ParameterList","parameters":[],"src":"1833:2:22"},"src":"1808:75:22","virtual":false,"visibility":"internal"},{"body":{"id":6669,"nodeType":"Block","src":"2424:35:22","statements":[{"expression":{"id":6667,"name":"_notEntered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6631,"src":"2441:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6666,"id":6668,"nodeType":"Return","src":"2434:18:22"}]},"documentation":{"id":6662,"nodeType":"StructuredDocumentation","src":"1889:439:22","text":" @dev Returns true if the contract is currently in a non-entered state, meaning that the origination of the call\n came from outside the contract. This is relevant with fallback/receive methods to see if the call came from ETH\n being dropped onto the contract externally or due to ETH dropped on the the contract from within a method in this\n contract, such as unwrapping WETH to ETH within the contract."},"id":6670,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallStackOriginatesFromOutsideThisContract","nameLocation":"2342:50:22","nodeType":"FunctionDefinition","parameters":{"id":6663,"nodeType":"ParameterList","parameters":[],"src":"2392:2:22"},"returnParameters":{"id":6666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6670,"src":"2418:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6664,"name":"bool","nodeType":"ElementaryTypeName","src":"2418:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2417:6:22"},"scope":6696,"src":"2333:126:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6678,"nodeType":"Block","src":"2995:143:22","statements":[{"expression":{"arguments":[{"id":6674,"name":"_notEntered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6631,"src":"3084:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":6675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3097:33:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":6673,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3076:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3076:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6677,"nodeType":"ExpressionStatement","src":"3076:55:22"}]},"id":6679,"implemented":true,"kind":"function","modifiers":[],"name":"_preEntranceCheck","nameLocation":"2961:17:22","nodeType":"FunctionDefinition","parameters":{"id":6671,"nodeType":"ParameterList","parameters":[],"src":"2978:2:22"},"returnParameters":{"id":6672,"nodeType":"ParameterList","parameters":[],"src":"2995:0:22"},"scope":6696,"src":"2952:186:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6686,"nodeType":"Block","src":"3180:100:22","statements":[{"expression":{"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6682,"name":"_notEntered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6631,"src":"3254:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3268:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3254:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6685,"nodeType":"ExpressionStatement","src":"3254:19:22"}]},"id":6687,"implemented":true,"kind":"function","modifiers":[],"name":"_preEntranceSet","nameLocation":"3153:15:22","nodeType":"FunctionDefinition","parameters":{"id":6680,"nodeType":"ParameterList","parameters":[],"src":"3168:2:22"},"returnParameters":{"id":6681,"nodeType":"ParameterList","parameters":[],"src":"3180:0:22"},"scope":6696,"src":"3144:136:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6694,"nodeType":"Block","src":"3325:167:22","statements":[{"expression":{"id":6692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6690,"name":"_notEntered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6631,"src":"3467:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3481:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3467:18:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6693,"nodeType":"ExpressionStatement","src":"3467:18:22"}]},"id":6695,"implemented":true,"kind":"function","modifiers":[],"name":"_postEntranceReset","nameLocation":"3295:18:22","nodeType":"FunctionDefinition","parameters":{"id":6688,"nodeType":"ParameterList","parameters":[],"src":"3313:2:22"},"returnParameters":{"id":6689,"nodeType":"ParameterList","parameters":[],"src":"3325:0:22"},"scope":6696,"src":"3286:206:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":6697,"src":"657:2837:22","usedErrors":[],"usedEvents":[]}],"src":"37:3458:22"},"id":22},"contracts/MerkleLib.sol":{"ast":{"absolutePath":"contracts/MerkleLib.sol","exportedSymbols":{"HubPoolInterface":[7203],"IERC20":[190],"MerkleLib":[6933],"MerkleProof":[1482],"SpokePoolInterface":[7500],"V3SpokePoolInterface":[7784]},"id":6934,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":6698,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:23"},{"absolutePath":"contracts/interfaces/SpokePoolInterface.sol","file":"./interfaces/SpokePoolInterface.sol","id":6699,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6934,"sourceUnit":7501,"src":"62:45:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/V3SpokePoolInterface.sol","file":"./interfaces/V3SpokePoolInterface.sol","id":6700,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6934,"sourceUnit":7785,"src":"108:47:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/HubPoolInterface.sol","file":"./interfaces/HubPoolInterface.sol","id":6701,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6934,"sourceUnit":7204,"src":"156:43:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":6702,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6934,"sourceUnit":1483,"src":"201:68:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleLib","contractDependencies":[],"contractKind":"library","documentation":{"id":6703,"nodeType":"StructuredDocumentation","src":"271:73:23","text":" @notice Library to help with merkle roots, proofs, and claims."},"fullyImplemented":true,"id":6933,"linearizedBaseContracts":[6933],"name":"MerkleLib","nameLocation":"353:9:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":6729,"nodeType":"Block","src":"878:89:23","statements":[{"expression":{"arguments":[{"id":6719,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6712,"src":"914:5:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":6720,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6706,"src":"921:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":6724,"name":"rebalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"948:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolRebalanceLeaf_$6988_memory_ptr","typeString":"struct HubPoolInterface.PoolRebalanceLeaf memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PoolRebalanceLeaf_$6988_memory_ptr","typeString":"struct HubPoolInterface.PoolRebalanceLeaf memory"}],"expression":{"id":6722,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"937:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"941:6:23","memberName":"encode","nodeType":"MemberAccess","src":"937:10:23","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"937:21:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6721,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"927:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"927:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6717,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"895:11:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$1482_$","typeString":"type(library MerkleProof)"}},"id":6718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"907:6:23","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":978,"src":"895:18:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"895:65:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6716,"id":6728,"nodeType":"Return","src":"888:72:23"}]},"documentation":{"id":6704,"nodeType":"StructuredDocumentation","src":"369:325:23","text":" @notice Verifies that a repayment is contained within a merkle root.\n @param root the merkle root.\n @param rebalance the rebalance struct.\n @param proof the merkle proof.\n @return bool to signal if the pool rebalance proof correctly shows inclusion of the rebalance within the tree."},"id":6730,"implemented":true,"kind":"function","modifiers":[],"name":"verifyPoolRebalance","nameLocation":"708:19:23","nodeType":"FunctionDefinition","parameters":{"id":6713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6706,"mutability":"mutable","name":"root","nameLocation":"745:4:23","nodeType":"VariableDeclaration","scope":6730,"src":"737:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6705,"name":"bytes32","nodeType":"ElementaryTypeName","src":"737:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6709,"mutability":"mutable","name":"rebalance","nameLocation":"801:9:23","nodeType":"VariableDeclaration","scope":6730,"src":"759:51:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PoolRebalanceLeaf_$6988_memory_ptr","typeString":"struct HubPoolInterface.PoolRebalanceLeaf"},"typeName":{"id":6708,"nodeType":"UserDefinedTypeName","pathNode":{"id":6707,"name":"HubPoolInterface.PoolRebalanceLeaf","nameLocations":["759:16:23","776:17:23"],"nodeType":"IdentifierPath","referencedDeclaration":6988,"src":"759:34:23"},"referencedDeclaration":6988,"src":"759:34:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolRebalanceLeaf_$6988_storage_ptr","typeString":"struct HubPoolInterface.PoolRebalanceLeaf"}},"visibility":"internal"},{"constant":false,"id":6712,"mutability":"mutable","name":"proof","nameLocation":"837:5:23","nodeType":"VariableDeclaration","scope":6730,"src":"820:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6710,"name":"bytes32","nodeType":"ElementaryTypeName","src":"820:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6711,"nodeType":"ArrayTypeName","src":"820:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"727:121:23"},"returnParameters":{"id":6716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6730,"src":"872:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6714,"name":"bool","nodeType":"ElementaryTypeName","src":"872:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"871:6:23"},"scope":6933,"src":"699:268:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6756,"nodeType":"Block","src":"1477:86:23","statements":[{"expression":{"arguments":[{"id":6746,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6739,"src":"1513:5:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":6747,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6733,"src":"1520:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":6751,"name":"refund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6736,"src":"1547:6:23","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$7233_memory_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$7233_memory_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf memory"}],"expression":{"id":6749,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1536:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1540:6:23","memberName":"encode","nodeType":"MemberAccess","src":"1536:10:23","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1536:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6748,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1526:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1526:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6744,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"1494:11:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$1482_$","typeString":"type(library MerkleProof)"}},"id":6745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1506:6:23","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":978,"src":"1494:18:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":6754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1494:62:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6743,"id":6755,"nodeType":"Return","src":"1487:69:23"}]},"documentation":{"id":6731,"nodeType":"StructuredDocumentation","src":"973:321:23","text":" @notice Verifies that a relayer refund is contained within a merkle root.\n @param root the merkle root.\n @param refund the refund struct.\n @param proof the merkle proof.\n @return bool to signal if the relayer refund proof correctly shows inclusion of the refund within the tree."},"id":6757,"implemented":true,"kind":"function","modifiers":[],"name":"verifyRelayerRefund","nameLocation":"1308:19:23","nodeType":"FunctionDefinition","parameters":{"id":6740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6733,"mutability":"mutable","name":"root","nameLocation":"1345:4:23","nodeType":"VariableDeclaration","scope":6757,"src":"1337:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6732,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1337:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6736,"mutability":"mutable","name":"refund","nameLocation":"1403:6:23","nodeType":"VariableDeclaration","scope":6757,"src":"1359:50:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$7233_memory_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf"},"typeName":{"id":6735,"nodeType":"UserDefinedTypeName","pathNode":{"id":6734,"name":"SpokePoolInterface.RelayerRefundLeaf","nameLocations":["1359:18:23","1378:17:23"],"nodeType":"IdentifierPath","referencedDeclaration":7233,"src":"1359:36:23"},"referencedDeclaration":7233,"src":"1359:36:23","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$7233_storage_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf"}},"visibility":"internal"},{"constant":false,"id":6739,"mutability":"mutable","name":"proof","nameLocation":"1436:5:23","nodeType":"VariableDeclaration","scope":6757,"src":"1419:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6737,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1419:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6738,"nodeType":"ArrayTypeName","src":"1419:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1327:120:23"},"returnParameters":{"id":6743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6757,"src":"1471:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6741,"name":"bool","nodeType":"ElementaryTypeName","src":"1471:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1470:6:23"},"scope":6933,"src":"1299:264:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6783,"nodeType":"Block","src":"2172:100:23","statements":[{"expression":{"arguments":[{"id":6773,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6766,"src":"2208:5:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":6774,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6760,"src":"2215:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":6778,"name":"slowRelayFulfillment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6763,"src":"2242:20:23","typeDescriptions":{"typeIdentifier":"t_struct$_SlowFill_$7262_memory_ptr","typeString":"struct SpokePoolInterface.SlowFill memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_SlowFill_$7262_memory_ptr","typeString":"struct SpokePoolInterface.SlowFill memory"}],"expression":{"id":6776,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2231:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2235:6:23","memberName":"encode","nodeType":"MemberAccess","src":"2231:10:23","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2231:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6775,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2221:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2221:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6771,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"2189:11:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$1482_$","typeString":"type(library MerkleProof)"}},"id":6772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2201:6:23","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":978,"src":"2189:18:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":6781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2189:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6770,"id":6782,"nodeType":"Return","src":"2182:83:23"}]},"documentation":{"id":6758,"nodeType":"StructuredDocumentation","src":"1924:53:23","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"id":6784,"implemented":true,"kind":"function","modifiers":[],"name":"verifySlowRelayFulfillment","nameLocation":"1991:26:23","nodeType":"FunctionDefinition","parameters":{"id":6767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6760,"mutability":"mutable","name":"root","nameLocation":"2035:4:23","nodeType":"VariableDeclaration","scope":6784,"src":"2027:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6759,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2027:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6763,"mutability":"mutable","name":"slowRelayFulfillment","nameLocation":"2084:20:23","nodeType":"VariableDeclaration","scope":6784,"src":"2049:55:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SlowFill_$7262_memory_ptr","typeString":"struct SpokePoolInterface.SlowFill"},"typeName":{"id":6762,"nodeType":"UserDefinedTypeName","pathNode":{"id":6761,"name":"SpokePoolInterface.SlowFill","nameLocations":["2049:18:23","2068:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":7262,"src":"2049:27:23"},"referencedDeclaration":7262,"src":"2049:27:23","typeDescriptions":{"typeIdentifier":"t_struct$_SlowFill_$7262_storage_ptr","typeString":"struct SpokePoolInterface.SlowFill"}},"visibility":"internal"},{"constant":false,"id":6766,"mutability":"mutable","name":"proof","nameLocation":"2131:5:23","nodeType":"VariableDeclaration","scope":6784,"src":"2114:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6764,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2114:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6765,"nodeType":"ArrayTypeName","src":"2114:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"2017:125:23"},"returnParameters":{"id":6770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6784,"src":"2166:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6768,"name":"bool","nodeType":"ElementaryTypeName","src":"2166:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2165:6:23"},"scope":6933,"src":"1982:290:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6809,"nodeType":"Block","src":"2474:100:23","statements":[{"expression":{"arguments":[{"id":6799,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6792,"src":"2510:5:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":6800,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6786,"src":"2517:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":6804,"name":"slowRelayFulfillment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6789,"src":"2544:20:23","typeDescriptions":{"typeIdentifier":"t_struct$_V3SlowFill_$7543_memory_ptr","typeString":"struct V3SpokePoolInterface.V3SlowFill memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_V3SlowFill_$7543_memory_ptr","typeString":"struct V3SpokePoolInterface.V3SlowFill memory"}],"expression":{"id":6802,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2533:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2537:6:23","memberName":"encode","nodeType":"MemberAccess","src":"2533:10:23","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6801,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2523:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2523:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6797,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"2491:11:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$1482_$","typeString":"type(library MerkleProof)"}},"id":6798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2503:6:23","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":978,"src":"2491:18:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":6807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2491:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6796,"id":6808,"nodeType":"Return","src":"2484:83:23"}]},"id":6810,"implemented":true,"kind":"function","modifiers":[],"name":"verifyV3SlowRelayFulfillment","nameLocation":"2287:28:23","nodeType":"FunctionDefinition","parameters":{"id":6793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6786,"mutability":"mutable","name":"root","nameLocation":"2333:4:23","nodeType":"VariableDeclaration","scope":6810,"src":"2325:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6785,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2325:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6789,"mutability":"mutable","name":"slowRelayFulfillment","nameLocation":"2386:20:23","nodeType":"VariableDeclaration","scope":6810,"src":"2347:59:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_V3SlowFill_$7543_memory_ptr","typeString":"struct V3SpokePoolInterface.V3SlowFill"},"typeName":{"id":6788,"nodeType":"UserDefinedTypeName","pathNode":{"id":6787,"name":"V3SpokePoolInterface.V3SlowFill","nameLocations":["2347:20:23","2368:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":7543,"src":"2347:31:23"},"referencedDeclaration":7543,"src":"2347:31:23","typeDescriptions":{"typeIdentifier":"t_struct$_V3SlowFill_$7543_storage_ptr","typeString":"struct V3SpokePoolInterface.V3SlowFill"}},"visibility":"internal"},{"constant":false,"id":6792,"mutability":"mutable","name":"proof","nameLocation":"2433:5:23","nodeType":"VariableDeclaration","scope":6810,"src":"2416:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6790,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2416:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6791,"nodeType":"ArrayTypeName","src":"2416:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"2315:129:23"},"returnParameters":{"id":6796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6810,"src":"2468:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6794,"name":"bool","nodeType":"ElementaryTypeName","src":"2468:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2467:6:23"},"scope":6933,"src":"2278:296:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6853,"nodeType":"Block","src":"3200:255:23","statements":[{"assignments":[6823],"declarations":[{"constant":false,"id":6823,"mutability":"mutable","name":"claimedWordIndex","nameLocation":"3218:16:23","nodeType":"VariableDeclaration","scope":6853,"src":"3210:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6822,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6827,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6824,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"3237:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"323536","id":6825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3245:3:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"3237:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3210:38:23"},{"assignments":[6829],"declarations":[{"constant":false,"id":6829,"mutability":"mutable","name":"claimedBitIndex","nameLocation":"3266:15:23","nodeType":"VariableDeclaration","scope":6853,"src":"3258:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6828,"name":"uint256","nodeType":"ElementaryTypeName","src":"3258:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6833,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6830,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"3284:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"323536","id":6831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3292:3:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"3284:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3258:37:23"},{"assignments":[6835],"declarations":[{"constant":false,"id":6835,"mutability":"mutable","name":"claimedWord","nameLocation":"3313:11:23","nodeType":"VariableDeclaration","scope":6853,"src":"3305:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6834,"name":"uint256","nodeType":"ElementaryTypeName","src":"3305:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6839,"initialValue":{"baseExpression":{"id":6836,"name":"claimedBitMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6815,"src":"3327:13:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":6838,"indexExpression":{"id":6837,"name":"claimedWordIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6823,"src":"3341:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3327:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3305:53:23"},{"assignments":[6841],"declarations":[{"constant":false,"id":6841,"mutability":"mutable","name":"mask","nameLocation":"3376:4:23","nodeType":"VariableDeclaration","scope":6853,"src":"3368:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6840,"name":"uint256","nodeType":"ElementaryTypeName","src":"3368:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6846,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3384:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6843,"name":"claimedBitIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"3389:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3384:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6845,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3383:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3368:37:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6847,"name":"claimedWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6835,"src":"3422:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6848,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6841,"src":"3436:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3422:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6850,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6841,"src":"3444:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3422:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6821,"id":6852,"nodeType":"Return","src":"3415:33:23"}]},"documentation":{"id":6811,"nodeType":"StructuredDocumentation","src":"2755:326:23","text":" @notice Tests whether a claim is contained within a claimedBitMap mapping.\n @param claimedBitMap a simple uint256 mapping in storage used as a bitmap.\n @param index the index to check in the bitmap.\n @return bool indicating if the index within the claimedBitMap has been marked as claimed."},"id":6854,"implemented":true,"kind":"function","modifiers":[],"name":"isClaimed","nameLocation":"3095:9:23","nodeType":"FunctionDefinition","parameters":{"id":6818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6815,"mutability":"mutable","name":"claimedBitMap","nameLocation":"3141:13:23","nodeType":"VariableDeclaration","scope":6854,"src":"3105:49:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":6814,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6812,"name":"uint256","nodeType":"ElementaryTypeName","src":"3113:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3105:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6813,"name":"uint256","nodeType":"ElementaryTypeName","src":"3124:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":6817,"mutability":"mutable","name":"index","nameLocation":"3164:5:23","nodeType":"VariableDeclaration","scope":6854,"src":"3156:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6816,"name":"uint256","nodeType":"ElementaryTypeName","src":"3156:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3104:66:23"},"returnParameters":{"id":6821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6854,"src":"3194:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6819,"name":"bool","nodeType":"ElementaryTypeName","src":"3194:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3193:6:23"},"scope":6933,"src":"3086:369:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6889,"nodeType":"Block","src":"3768:202:23","statements":[{"assignments":[6865],"declarations":[{"constant":false,"id":6865,"mutability":"mutable","name":"claimedWordIndex","nameLocation":"3786:16:23","nodeType":"VariableDeclaration","scope":6889,"src":"3778:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6864,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6869,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6866,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6861,"src":"3805:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"323536","id":6867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3813:3:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"3805:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3778:38:23"},{"assignments":[6871],"declarations":[{"constant":false,"id":6871,"mutability":"mutable","name":"claimedBitIndex","nameLocation":"3834:15:23","nodeType":"VariableDeclaration","scope":6889,"src":"3826:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6870,"name":"uint256","nodeType":"ElementaryTypeName","src":"3826:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6875,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6872,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6861,"src":"3852:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"323536","id":6873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3860:3:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"3852:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3826:37:23"},{"expression":{"id":6887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6876,"name":"claimedBitMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6859,"src":"3873:13:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":6878,"indexExpression":{"id":6877,"name":"claimedWordIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"3887:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3873:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6879,"name":"claimedBitMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6859,"src":"3907:13:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":6881,"indexExpression":{"id":6880,"name":"claimedWordIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"3921:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3907:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3942:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6883,"name":"claimedBitIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6871,"src":"3947:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3942:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6885,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3941:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3907:56:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3873:90:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6888,"nodeType":"ExpressionStatement","src":"3873:90:23"}]},"documentation":{"id":6855,"nodeType":"StructuredDocumentation","src":"3461:207:23","text":" @notice Marks an index in a claimedBitMap as claimed.\n @param claimedBitMap a simple uint256 mapping in storage used as a bitmap.\n @param index the index to mark in the bitmap."},"id":6890,"implemented":true,"kind":"function","modifiers":[],"name":"setClaimed","nameLocation":"3682:10:23","nodeType":"FunctionDefinition","parameters":{"id":6862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6859,"mutability":"mutable","name":"claimedBitMap","nameLocation":"3729:13:23","nodeType":"VariableDeclaration","scope":6890,"src":"3693:49:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":6858,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6856,"name":"uint256","nodeType":"ElementaryTypeName","src":"3701:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3693:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6857,"name":"uint256","nodeType":"ElementaryTypeName","src":"3712:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":6861,"mutability":"mutable","name":"index","nameLocation":"3752:5:23","nodeType":"VariableDeclaration","scope":6890,"src":"3744:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6860,"name":"uint256","nodeType":"ElementaryTypeName","src":"3744:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3692:66:23"},"returnParameters":{"id":6863,"nodeType":"ParameterList","parameters":[],"src":"3768:0:23"},"scope":6933,"src":"3673:297:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6913,"nodeType":"Block","src":"4435:89:23","statements":[{"assignments":[6901],"declarations":[{"constant":false,"id":6901,"mutability":"mutable","name":"mask","nameLocation":"4453:4:23","nodeType":"VariableDeclaration","scope":6913,"src":"4445:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6900,"name":"uint256","nodeType":"ElementaryTypeName","src":"4445:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6906,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4461:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6903,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6895,"src":"4466:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4461:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6905,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4460:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4445:27:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6907,"name":"claimedBitMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6893,"src":"4489:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6908,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"4505:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4489:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6910,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"4513:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4489:28:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6899,"id":6912,"nodeType":"Return","src":"4482:35:23"}]},"documentation":{"id":6891,"nodeType":"StructuredDocumentation","src":"3976:368:23","text":" @notice Tests whether a claim is contained within a 1D claimedBitMap mapping.\n @param claimedBitMap a simple uint256 value, encoding a 1D bitmap.\n @param index the index to check in the bitmap. Uint8 type enforces that index can't be > 255.\n @return bool indicating if the index within the claimedBitMap has been marked as claimed."},"id":6914,"implemented":true,"kind":"function","modifiers":[],"name":"isClaimed1D","nameLocation":"4358:11:23","nodeType":"FunctionDefinition","parameters":{"id":6896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6893,"mutability":"mutable","name":"claimedBitMap","nameLocation":"4378:13:23","nodeType":"VariableDeclaration","scope":6914,"src":"4370:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6892,"name":"uint256","nodeType":"ElementaryTypeName","src":"4370:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6895,"mutability":"mutable","name":"index","nameLocation":"4399:5:23","nodeType":"VariableDeclaration","scope":6914,"src":"4393:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6894,"name":"uint8","nodeType":"ElementaryTypeName","src":"4393:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4369:36:23"},"returnParameters":{"id":6899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6914,"src":"4429:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6897,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:23"},"scope":6933,"src":"4349:175:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6931,"nodeType":"Block","src":"4983:52:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6924,"name":"claimedBitMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"5000:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5017:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6926,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6919,"src":"5022:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5017:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6928,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5016:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5000:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6923,"id":6930,"nodeType":"Return","src":"4993:35:23"}]},"documentation":{"id":6915,"nodeType":"StructuredDocumentation","src":"4530:358:23","text":" @notice Marks an index in a claimedBitMap as claimed.\n @param claimedBitMap a simple uint256 mapping in storage used as a bitmap. Uint8 type enforces that index\n can't be > 255.\n @param index the index to mark in the bitmap.\n @return uint256 representing the modified input claimedBitMap with the index set to true."},"id":6932,"implemented":true,"kind":"function","modifiers":[],"name":"setClaimed1D","nameLocation":"4902:12:23","nodeType":"FunctionDefinition","parameters":{"id":6920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6917,"mutability":"mutable","name":"claimedBitMap","nameLocation":"4923:13:23","nodeType":"VariableDeclaration","scope":6932,"src":"4915:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6916,"name":"uint256","nodeType":"ElementaryTypeName","src":"4915:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6919,"mutability":"mutable","name":"index","nameLocation":"4944:5:23","nodeType":"VariableDeclaration","scope":6932,"src":"4938:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6918,"name":"uint8","nodeType":"ElementaryTypeName","src":"4938:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4914:36:23"},"returnParameters":{"id":6923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6932,"src":"4974:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6921,"name":"uint256","nodeType":"ElementaryTypeName","src":"4974:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4973:9:23"},"scope":6933,"src":"4893:142:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6934,"src":"345:4692:23","usedErrors":[],"usedEvents":[]}],"src":"37:5001:23"},"id":23},"contracts/external/interfaces/WETH9Interface.sol":{"ast":{"absolutePath":"contracts/external/interfaces/WETH9Interface.sol","exportedSymbols":{"WETH9Interface":[6965]},"id":6966,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":6935,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:24"},{"abstract":false,"baseContracts":[],"canonicalName":"WETH9Interface","contractDependencies":[],"contractKind":"interface","documentation":{"id":6936,"nodeType":"StructuredDocumentation","src":"62:52:24","text":" @notice Interface for the WETH9 contract."},"fullyImplemented":false,"id":6965,"linearizedBaseContracts":[6965],"name":"WETH9Interface","nameLocation":"125:14:24","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6937,"nodeType":"StructuredDocumentation","src":"146:134:24","text":" @notice Burn Wrapped Ether and receive native Ether.\n @param wad Amount of WETH to unwrap and send to caller."},"functionSelector":"2e1a7d4d","id":6942,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"294:8:24","nodeType":"FunctionDefinition","parameters":{"id":6940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6939,"mutability":"mutable","name":"wad","nameLocation":"311:3:24","nodeType":"VariableDeclaration","scope":6942,"src":"303:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6938,"name":"uint256","nodeType":"ElementaryTypeName","src":"303:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"302:13:24"},"returnParameters":{"id":6941,"nodeType":"ParameterList","parameters":[],"src":"324:0:24"},"scope":6965,"src":"285:40:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6943,"nodeType":"StructuredDocumentation","src":"331:145:24","text":" @notice Lock native Ether and mint Wrapped Ether ERC20\n @dev msg.value is amount of Wrapped Ether to mint/Ether to lock."},"functionSelector":"d0e30db0","id":6946,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"490:7:24","nodeType":"FunctionDefinition","parameters":{"id":6944,"nodeType":"ParameterList","parameters":[],"src":"497:2:24"},"returnParameters":{"id":6945,"nodeType":"ParameterList","parameters":[],"src":"516:0:24"},"scope":6965,"src":"481:36:24","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":6947,"nodeType":"StructuredDocumentation","src":"523:155:24","text":" @notice Get balance of WETH held by `guy`.\n @param guy Address to get balance of.\n @return wad Amount of WETH held by `guy`."},"functionSelector":"70a08231","id":6954,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"692:9:24","nodeType":"FunctionDefinition","parameters":{"id":6950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6949,"mutability":"mutable","name":"guy","nameLocation":"710:3:24","nodeType":"VariableDeclaration","scope":6954,"src":"702:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6948,"name":"address","nodeType":"ElementaryTypeName","src":"702:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"701:13:24"},"returnParameters":{"id":6953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6952,"mutability":"mutable","name":"wad","nameLocation":"746:3:24","nodeType":"VariableDeclaration","scope":6954,"src":"738:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6951,"name":"uint256","nodeType":"ElementaryTypeName","src":"738:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"737:13:24"},"scope":6965,"src":"683:68:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6955,"nodeType":"StructuredDocumentation","src":"757:202:24","text":" @notice Transfer `wad` of WETH from caller to `guy`.\n @param guy Address to send WETH to.\n @param wad Amount of WETH to send.\n @return ok True if transfer succeeded."},"functionSelector":"a9059cbb","id":6964,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"973:8:24","nodeType":"FunctionDefinition","parameters":{"id":6960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6957,"mutability":"mutable","name":"guy","nameLocation":"990:3:24","nodeType":"VariableDeclaration","scope":6964,"src":"982:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6956,"name":"address","nodeType":"ElementaryTypeName","src":"982:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6959,"mutability":"mutable","name":"wad","nameLocation":"1003:3:24","nodeType":"VariableDeclaration","scope":6964,"src":"995:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6958,"name":"uint256","nodeType":"ElementaryTypeName","src":"995:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"981:26:24"},"returnParameters":{"id":6963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6964,"src":"1026:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6961,"name":"bool","nodeType":"ElementaryTypeName","src":"1026:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1025:6:24"},"scope":6965,"src":"964:68:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6966,"src":"115:919:24","usedErrors":[],"usedEvents":[]}],"src":"37:998:24"},"id":24},"contracts/interfaces/HubPoolInterface.sol":{"ast":{"absolutePath":"contracts/interfaces/HubPoolInterface.sol","exportedSymbols":{"HubPoolInterface":[7203],"IERC20":[190]},"id":7204,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":6967,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:25"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":6968,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7204,"sourceUnit":191,"src":"62:56:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"HubPoolInterface","contractDependencies":[],"contractKind":"interface","documentation":{"id":6969,"nodeType":"StructuredDocumentation","src":"120:71:25","text":" @notice Concise list of functions in HubPool implementation."},"fullyImplemented":false,"id":7203,"linearizedBaseContracts":[7203],"name":"HubPoolInterface","nameLocation":"202:16:25","nodeType":"ContractDefinition","nodes":[{"canonicalName":"HubPoolInterface.PoolRebalanceLeaf","id":6988,"members":[{"constant":false,"id":6971,"mutability":"mutable","name":"chainId","nameLocation":"488:7:25","nodeType":"VariableDeclaration","scope":6988,"src":"480:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6970,"name":"uint256","nodeType":"ElementaryTypeName","src":"480:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6974,"mutability":"mutable","name":"bundleLpFees","nameLocation":"616:12:25","nodeType":"VariableDeclaration","scope":6988,"src":"606:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6972,"name":"uint256","nodeType":"ElementaryTypeName","src":"606:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6973,"nodeType":"ArrayTypeName","src":"606:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6977,"mutability":"mutable","name":"netSendAmounts","nameLocation":"1356:14:25","nodeType":"VariableDeclaration","scope":6988,"src":"1347:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":6975,"name":"int256","nodeType":"ElementaryTypeName","src":"1347:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6976,"nodeType":"ArrayTypeName","src":"1347:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":6980,"mutability":"mutable","name":"runningBalances","nameLocation":"1746:15:25","nodeType":"VariableDeclaration","scope":6988,"src":"1737:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":6978,"name":"int256","nodeType":"ElementaryTypeName","src":"1737:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6979,"nodeType":"ArrayTypeName","src":"1737:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":6982,"mutability":"mutable","name":"groupIndex","nameLocation":"2445:10:25","nodeType":"VariableDeclaration","scope":6988,"src":"2437:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6981,"name":"uint256","nodeType":"ElementaryTypeName","src":"2437:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6984,"mutability":"mutable","name":"leafId","nameLocation":"2567:6:25","nodeType":"VariableDeclaration","scope":6988,"src":"2561:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6983,"name":"uint8","nodeType":"ElementaryTypeName","src":"2561:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6987,"mutability":"mutable","name":"l1Tokens","nameLocation":"2910:8:25","nodeType":"VariableDeclaration","scope":6988,"src":"2900:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6985,"name":"address","nodeType":"ElementaryTypeName","src":"2900:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6986,"nodeType":"ArrayTypeName","src":"2900:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"name":"PoolRebalanceLeaf","nameLocation":"338:17:25","nodeType":"StructDefinition","scope":7203,"src":"331:2594:25","visibility":"public"},{"canonicalName":"HubPoolInterface.RootBundle","id":7003,"members":[{"constant":false,"id":6990,"mutability":"mutable","name":"poolRebalanceRoot","nameLocation":"4057:17:25","nodeType":"VariableDeclaration","scope":7003,"src":"4049:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6989,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4049:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6992,"mutability":"mutable","name":"relayerRefundRoot","nameLocation":"4162:17:25","nodeType":"VariableDeclaration","scope":7003,"src":"4154:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6991,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4154:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6994,"mutability":"mutable","name":"slowRelayRoot","nameLocation":"4263:13:25","nodeType":"VariableDeclaration","scope":7003,"src":"4255:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6993,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6996,"mutability":"mutable","name":"claimedBitMap","nameLocation":"4387:13:25","nodeType":"VariableDeclaration","scope":7003,"src":"4379:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6995,"name":"uint256","nodeType":"ElementaryTypeName","src":"4379:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6998,"mutability":"mutable","name":"proposer","nameLocation":"4459:8:25","nodeType":"VariableDeclaration","scope":7003,"src":"4451:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6997,"name":"address","nodeType":"ElementaryTypeName","src":"4451:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7000,"mutability":"mutable","name":"unclaimedPoolRebalanceLeafCount","nameLocation":"4650:31:25","nodeType":"VariableDeclaration","scope":7003,"src":"4644:37:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6999,"name":"uint8","nodeType":"ElementaryTypeName","src":"4644:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7002,"mutability":"mutable","name":"challengePeriodEndTimestamp","nameLocation":"4791:27:25","nodeType":"VariableDeclaration","scope":7003,"src":"4784:34:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7001,"name":"uint32","nodeType":"ElementaryTypeName","src":"4784:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"name":"RootBundle","nameLocation":"3946:10:25","nodeType":"StructDefinition","scope":7203,"src":"3939:886:25","visibility":"public"},{"canonicalName":"HubPoolInterface.PooledToken","id":7016,"members":[{"constant":false,"id":7005,"mutability":"mutable","name":"lpToken","nameLocation":"5117:7:25","nodeType":"VariableDeclaration","scope":7016,"src":"5109:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7004,"name":"address","nodeType":"ElementaryTypeName","src":"5109:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7007,"mutability":"mutable","name":"isEnabled","nameLocation":"5178:9:25","nodeType":"VariableDeclaration","scope":7016,"src":"5173:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7006,"name":"bool","nodeType":"ElementaryTypeName","src":"5173:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7009,"mutability":"mutable","name":"lastLpFeeUpdate","nameLocation":"5248:15:25","nodeType":"VariableDeclaration","scope":7016,"src":"5241:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7008,"name":"uint32","nodeType":"ElementaryTypeName","src":"5241:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7011,"mutability":"mutable","name":"utilizedReserves","nameLocation":"5400:16:25","nodeType":"VariableDeclaration","scope":7016,"src":"5393:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7010,"name":"int256","nodeType":"ElementaryTypeName","src":"5393:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7013,"mutability":"mutable","name":"liquidReserves","nameLocation":"5505:14:25","nodeType":"VariableDeclaration","scope":7016,"src":"5497:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7012,"name":"uint256","nodeType":"ElementaryTypeName","src":"5497:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7015,"mutability":"mutable","name":"undistributedLpFees","nameLocation":"5603:19:25","nodeType":"VariableDeclaration","scope":7016,"src":"5595:27:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7014,"name":"uint256","nodeType":"ElementaryTypeName","src":"5595:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PooledToken","nameLocation":"5030:11:25","nodeType":"StructDefinition","scope":7203,"src":"5023:606:25","visibility":"public"},{"canonicalName":"HubPoolInterface.CrossChainContract","id":7021,"members":[{"constant":false,"id":7018,"mutability":"mutable","name":"adapter","nameLocation":"5791:7:25","nodeType":"VariableDeclaration","scope":7021,"src":"5783:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7017,"name":"address","nodeType":"ElementaryTypeName","src":"5783:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7020,"mutability":"mutable","name":"spokePool","nameLocation":"5816:9:25","nodeType":"VariableDeclaration","scope":7021,"src":"5808:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7019,"name":"address","nodeType":"ElementaryTypeName","src":"5808:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"CrossChainContract","nameLocation":"5754:18:25","nodeType":"StructDefinition","scope":7203,"src":"5747:85:25","visibility":"public"},{"functionSelector":"16c38b3c","id":7026,"implemented":false,"kind":"function","modifiers":[],"name":"setPaused","nameLocation":"5847:9:25","nodeType":"FunctionDefinition","parameters":{"id":7024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7023,"mutability":"mutable","name":"pause","nameLocation":"5862:5:25","nodeType":"VariableDeclaration","scope":7026,"src":"5857:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7022,"name":"bool","nodeType":"ElementaryTypeName","src":"5857:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5856:12:25"},"returnParameters":{"id":7025,"nodeType":"ParameterList","parameters":[],"src":"5877:0:25"},"scope":7203,"src":"5838:40:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"625997c0","id":7029,"implemented":false,"kind":"function","modifiers":[],"name":"emergencyDeleteProposal","nameLocation":"5893:23:25","nodeType":"FunctionDefinition","parameters":{"id":7027,"nodeType":"ParameterList","parameters":[],"src":"5916:2:25"},"returnParameters":{"id":7028,"nodeType":"ParameterList","parameters":[],"src":"5927:0:25"},"scope":7203,"src":"5884:44:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"dd70e5e8","id":7036,"implemented":false,"kind":"function","modifiers":[],"name":"relaySpokePoolAdminFunction","nameLocation":"5943:27:25","nodeType":"FunctionDefinition","parameters":{"id":7034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7031,"mutability":"mutable","name":"chainId","nameLocation":"5979:7:25","nodeType":"VariableDeclaration","scope":7036,"src":"5971:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7030,"name":"uint256","nodeType":"ElementaryTypeName","src":"5971:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7033,"mutability":"mutable","name":"functionData","nameLocation":"6001:12:25","nodeType":"VariableDeclaration","scope":7036,"src":"5988:25:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7032,"name":"bytes","nodeType":"ElementaryTypeName","src":"5988:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5970:44:25"},"returnParameters":{"id":7035,"nodeType":"ParameterList","parameters":[],"src":"6023:0:25"},"scope":7203,"src":"5934:90:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"00660b53","id":7043,"implemented":false,"kind":"function","modifiers":[],"name":"setProtocolFeeCapture","nameLocation":"6039:21:25","nodeType":"FunctionDefinition","parameters":{"id":7041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7038,"mutability":"mutable","name":"newProtocolFeeCaptureAddress","nameLocation":"6069:28:25","nodeType":"VariableDeclaration","scope":7043,"src":"6061:36:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7037,"name":"address","nodeType":"ElementaryTypeName","src":"6061:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7040,"mutability":"mutable","name":"newProtocolFeeCapturePct","nameLocation":"6107:24:25","nodeType":"VariableDeclaration","scope":7043,"src":"6099:32:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7039,"name":"uint256","nodeType":"ElementaryTypeName","src":"6099:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6060:72:25"},"returnParameters":{"id":7042,"nodeType":"ParameterList","parameters":[],"src":"6141:0:25"},"scope":7203,"src":"6030:112:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"33dc09ca","id":7051,"implemented":false,"kind":"function","modifiers":[],"name":"setBond","nameLocation":"6157:7:25","nodeType":"FunctionDefinition","parameters":{"id":7049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7046,"mutability":"mutable","name":"newBondToken","nameLocation":"6172:12:25","nodeType":"VariableDeclaration","scope":7051,"src":"6165:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":7045,"nodeType":"UserDefinedTypeName","pathNode":{"id":7044,"name":"IERC20","nameLocations":["6165:6:25"],"nodeType":"IdentifierPath","referencedDeclaration":190,"src":"6165:6:25"},"referencedDeclaration":190,"src":"6165:6:25","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":7048,"mutability":"mutable","name":"newBondAmount","nameLocation":"6194:13:25","nodeType":"VariableDeclaration","scope":7051,"src":"6186:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7047,"name":"uint256","nodeType":"ElementaryTypeName","src":"6186:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6164:44:25"},"returnParameters":{"id":7050,"nodeType":"ParameterList","parameters":[],"src":"6217:0:25"},"scope":7203,"src":"6148:70:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"cd949995","id":7056,"implemented":false,"kind":"function","modifiers":[],"name":"setLiveness","nameLocation":"6233:11:25","nodeType":"FunctionDefinition","parameters":{"id":7054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7053,"mutability":"mutable","name":"newLiveness","nameLocation":"6252:11:25","nodeType":"VariableDeclaration","scope":7056,"src":"6245:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7052,"name":"uint32","nodeType":"ElementaryTypeName","src":"6245:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"6244:20:25"},"returnParameters":{"id":7055,"nodeType":"ParameterList","parameters":[],"src":"6273:0:25"},"scope":7203,"src":"6224:50:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"00c99206","id":7061,"implemented":false,"kind":"function","modifiers":[],"name":"setIdentifier","nameLocation":"6289:13:25","nodeType":"FunctionDefinition","parameters":{"id":7059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7058,"mutability":"mutable","name":"newIdentifier","nameLocation":"6311:13:25","nodeType":"VariableDeclaration","scope":7061,"src":"6303:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7057,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6303:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6302:23:25"},"returnParameters":{"id":7060,"nodeType":"ParameterList","parameters":[],"src":"6334:0:25"},"scope":7203,"src":"6280:55:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e460e35c","id":7070,"implemented":false,"kind":"function","modifiers":[],"name":"setCrossChainContracts","nameLocation":"6350:22:25","nodeType":"FunctionDefinition","parameters":{"id":7068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7063,"mutability":"mutable","name":"l2ChainId","nameLocation":"6390:9:25","nodeType":"VariableDeclaration","scope":7070,"src":"6382:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7062,"name":"uint256","nodeType":"ElementaryTypeName","src":"6382:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7065,"mutability":"mutable","name":"adapter","nameLocation":"6417:7:25","nodeType":"VariableDeclaration","scope":7070,"src":"6409:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7064,"name":"address","nodeType":"ElementaryTypeName","src":"6409:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7067,"mutability":"mutable","name":"spokePool","nameLocation":"6442:9:25","nodeType":"VariableDeclaration","scope":7070,"src":"6434:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7066,"name":"address","nodeType":"ElementaryTypeName","src":"6434:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6372:85:25"},"returnParameters":{"id":7069,"nodeType":"ParameterList","parameters":[],"src":"6466:0:25"},"scope":7203,"src":"6341:126:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b60c2d7d","id":7075,"implemented":false,"kind":"function","modifiers":[],"name":"enableL1TokenForLiquidityProvision","nameLocation":"6482:34:25","nodeType":"FunctionDefinition","parameters":{"id":7073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7072,"mutability":"mutable","name":"l1Token","nameLocation":"6525:7:25","nodeType":"VariableDeclaration","scope":7075,"src":"6517:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7071,"name":"address","nodeType":"ElementaryTypeName","src":"6517:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6516:17:25"},"returnParameters":{"id":7074,"nodeType":"ParameterList","parameters":[],"src":"6542:0:25"},"scope":7203,"src":"6473:70:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0c501af9","id":7080,"implemented":false,"kind":"function","modifiers":[],"name":"disableL1TokenForLiquidityProvision","nameLocation":"6558:35:25","nodeType":"FunctionDefinition","parameters":{"id":7078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7077,"mutability":"mutable","name":"l1Token","nameLocation":"6602:7:25","nodeType":"VariableDeclaration","scope":7080,"src":"6594:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7076,"name":"address","nodeType":"ElementaryTypeName","src":"6594:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6593:17:25"},"returnParameters":{"id":7079,"nodeType":"ParameterList","parameters":[],"src":"6619:0:25"},"scope":7203,"src":"6549:71:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"56688700","id":7087,"implemented":false,"kind":"function","modifiers":[],"name":"addLiquidity","nameLocation":"6635:12:25","nodeType":"FunctionDefinition","parameters":{"id":7085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7082,"mutability":"mutable","name":"l1Token","nameLocation":"6656:7:25","nodeType":"VariableDeclaration","scope":7087,"src":"6648:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7081,"name":"address","nodeType":"ElementaryTypeName","src":"6648:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7084,"mutability":"mutable","name":"l1TokenAmount","nameLocation":"6673:13:25","nodeType":"VariableDeclaration","scope":7087,"src":"6665:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7083,"name":"uint256","nodeType":"ElementaryTypeName","src":"6665:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6647:40:25"},"returnParameters":{"id":7086,"nodeType":"ParameterList","parameters":[],"src":"6704:0:25"},"scope":7203,"src":"6626:79:25","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"0ee28a88","id":7096,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidity","nameLocation":"6720:15:25","nodeType":"FunctionDefinition","parameters":{"id":7094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7089,"mutability":"mutable","name":"l1Token","nameLocation":"6753:7:25","nodeType":"VariableDeclaration","scope":7096,"src":"6745:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7088,"name":"address","nodeType":"ElementaryTypeName","src":"6745:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7091,"mutability":"mutable","name":"lpTokenAmount","nameLocation":"6778:13:25","nodeType":"VariableDeclaration","scope":7096,"src":"6770:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7090,"name":"uint256","nodeType":"ElementaryTypeName","src":"6770:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7093,"mutability":"mutable","name":"sendEth","nameLocation":"6806:7:25","nodeType":"VariableDeclaration","scope":7096,"src":"6801:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7092,"name":"bool","nodeType":"ElementaryTypeName","src":"6801:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6735:84:25"},"returnParameters":{"id":7095,"nodeType":"ParameterList","parameters":[],"src":"6828:0:25"},"scope":7203,"src":"6711:118:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e0f339e3","id":7103,"implemented":false,"kind":"function","modifiers":[],"name":"exchangeRateCurrent","nameLocation":"6844:19:25","nodeType":"FunctionDefinition","parameters":{"id":7099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7098,"mutability":"mutable","name":"l1Token","nameLocation":"6872:7:25","nodeType":"VariableDeclaration","scope":7103,"src":"6864:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7097,"name":"address","nodeType":"ElementaryTypeName","src":"6864:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6863:17:25"},"returnParameters":{"id":7102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7103,"src":"6899:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7100,"name":"uint256","nodeType":"ElementaryTypeName","src":"6899:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6898:9:25"},"scope":7203,"src":"6835:73:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a16fd6e9","id":7110,"implemented":false,"kind":"function","modifiers":[],"name":"liquidityUtilizationCurrent","nameLocation":"6923:27:25","nodeType":"FunctionDefinition","parameters":{"id":7106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7105,"mutability":"mutable","name":"l1Token","nameLocation":"6959:7:25","nodeType":"VariableDeclaration","scope":7110,"src":"6951:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7104,"name":"address","nodeType":"ElementaryTypeName","src":"6951:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6950:17:25"},"returnParameters":{"id":7109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7110,"src":"6986:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7107,"name":"uint256","nodeType":"ElementaryTypeName","src":"6986:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6985:9:25"},"scope":7203,"src":"6914:81:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"084d0513","id":7119,"implemented":false,"kind":"function","modifiers":[],"name":"liquidityUtilizationPostRelay","nameLocation":"7010:29:25","nodeType":"FunctionDefinition","parameters":{"id":7115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7112,"mutability":"mutable","name":"l1Token","nameLocation":"7048:7:25","nodeType":"VariableDeclaration","scope":7119,"src":"7040:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7111,"name":"address","nodeType":"ElementaryTypeName","src":"7040:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7114,"mutability":"mutable","name":"relayedAmount","nameLocation":"7065:13:25","nodeType":"VariableDeclaration","scope":7119,"src":"7057:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7113,"name":"uint256","nodeType":"ElementaryTypeName","src":"7057:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7039:40:25"},"returnParameters":{"id":7118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7119,"src":"7098:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7116,"name":"uint256","nodeType":"ElementaryTypeName","src":"7098:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7097:9:25"},"scope":7203,"src":"7001:106:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a5841194","id":7124,"implemented":false,"kind":"function","modifiers":[],"name":"sync","nameLocation":"7122:4:25","nodeType":"FunctionDefinition","parameters":{"id":7122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7121,"mutability":"mutable","name":"l1Token","nameLocation":"7135:7:25","nodeType":"VariableDeclaration","scope":7124,"src":"7127:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7120,"name":"address","nodeType":"ElementaryTypeName","src":"7127:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7126:17:25"},"returnParameters":{"id":7123,"nodeType":"ParameterList","parameters":[],"src":"7152:0:25"},"scope":7203,"src":"7113:40:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8bda0c00","id":7138,"implemented":false,"kind":"function","modifiers":[],"name":"proposeRootBundle","nameLocation":"7168:17:25","nodeType":"FunctionDefinition","parameters":{"id":7136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7127,"mutability":"mutable","name":"bundleEvaluationBlockNumbers","nameLocation":"7212:28:25","nodeType":"VariableDeclaration","scope":7138,"src":"7195:45:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7125,"name":"uint256","nodeType":"ElementaryTypeName","src":"7195:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7126,"nodeType":"ArrayTypeName","src":"7195:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7129,"mutability":"mutable","name":"poolRebalanceLeafCount","nameLocation":"7256:22:25","nodeType":"VariableDeclaration","scope":7138,"src":"7250:28:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7128,"name":"uint8","nodeType":"ElementaryTypeName","src":"7250:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7131,"mutability":"mutable","name":"poolRebalanceRoot","nameLocation":"7296:17:25","nodeType":"VariableDeclaration","scope":7138,"src":"7288:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7288:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7133,"mutability":"mutable","name":"relayerRefundRoot","nameLocation":"7331:17:25","nodeType":"VariableDeclaration","scope":7138,"src":"7323:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7132,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7323:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7135,"mutability":"mutable","name":"slowRelayRoot","nameLocation":"7366:13:25","nodeType":"VariableDeclaration","scope":7138,"src":"7358:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7358:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7185:200:25"},"returnParameters":{"id":7137,"nodeType":"ParameterList","parameters":[],"src":"7394:0:25"},"scope":7203,"src":"7159:236:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"80c09a82","id":7162,"implemented":false,"kind":"function","modifiers":[],"name":"executeRootBundle","nameLocation":"7410:17:25","nodeType":"FunctionDefinition","parameters":{"id":7160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7140,"mutability":"mutable","name":"chainId","nameLocation":"7445:7:25","nodeType":"VariableDeclaration","scope":7162,"src":"7437:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7139,"name":"uint256","nodeType":"ElementaryTypeName","src":"7437:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7142,"mutability":"mutable","name":"groupIndex","nameLocation":"7470:10:25","nodeType":"VariableDeclaration","scope":7162,"src":"7462:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7141,"name":"uint256","nodeType":"ElementaryTypeName","src":"7462:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7145,"mutability":"mutable","name":"bundleLpFees","nameLocation":"7507:12:25","nodeType":"VariableDeclaration","scope":7162,"src":"7490:29:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7143,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7144,"nodeType":"ArrayTypeName","src":"7490:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7148,"mutability":"mutable","name":"netSendAmounts","nameLocation":"7545:14:25","nodeType":"VariableDeclaration","scope":7162,"src":"7529:30:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":7146,"name":"int256","nodeType":"ElementaryTypeName","src":"7529:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7147,"nodeType":"ArrayTypeName","src":"7529:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":7151,"mutability":"mutable","name":"runningBalances","nameLocation":"7585:15:25","nodeType":"VariableDeclaration","scope":7162,"src":"7569:31:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":7149,"name":"int256","nodeType":"ElementaryTypeName","src":"7569:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7150,"nodeType":"ArrayTypeName","src":"7569:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":7153,"mutability":"mutable","name":"leafId","nameLocation":"7616:6:25","nodeType":"VariableDeclaration","scope":7162,"src":"7610:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7152,"name":"uint8","nodeType":"ElementaryTypeName","src":"7610:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7156,"mutability":"mutable","name":"l1Tokens","nameLocation":"7649:8:25","nodeType":"VariableDeclaration","scope":7162,"src":"7632:25:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7154,"name":"address","nodeType":"ElementaryTypeName","src":"7632:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7155,"nodeType":"ArrayTypeName","src":"7632:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":7159,"mutability":"mutable","name":"proof","nameLocation":"7684:5:25","nodeType":"VariableDeclaration","scope":7162,"src":"7667:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7157,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7667:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7158,"nodeType":"ArrayTypeName","src":"7667:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7427:268:25"},"returnParameters":{"id":7161,"nodeType":"ParameterList","parameters":[],"src":"7704:0:25"},"scope":7203,"src":"7401:304:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"22395aaa","id":7165,"implemented":false,"kind":"function","modifiers":[],"name":"disputeRootBundle","nameLocation":"7720:17:25","nodeType":"FunctionDefinition","parameters":{"id":7163,"nodeType":"ParameterList","parameters":[],"src":"7737:2:25"},"returnParameters":{"id":7164,"nodeType":"ParameterList","parameters":[],"src":"7748:0:25"},"scope":7203,"src":"7711:38:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2d0f6f84","id":7170,"implemented":false,"kind":"function","modifiers":[],"name":"claimProtocolFeesCaptured","nameLocation":"7764:25:25","nodeType":"FunctionDefinition","parameters":{"id":7168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7167,"mutability":"mutable","name":"l1Token","nameLocation":"7798:7:25","nodeType":"VariableDeclaration","scope":7170,"src":"7790:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7166,"name":"address","nodeType":"ElementaryTypeName","src":"7790:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7789:17:25"},"returnParameters":{"id":7169,"nodeType":"ParameterList","parameters":[],"src":"7815:0:25"},"scope":7203,"src":"7755:61:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"10b99527","id":7179,"implemented":false,"kind":"function","modifiers":[],"name":"setPoolRebalanceRoute","nameLocation":"7831:21:25","nodeType":"FunctionDefinition","parameters":{"id":7177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7172,"mutability":"mutable","name":"destinationChainId","nameLocation":"7870:18:25","nodeType":"VariableDeclaration","scope":7179,"src":"7862:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7171,"name":"uint256","nodeType":"ElementaryTypeName","src":"7862:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7174,"mutability":"mutable","name":"l1Token","nameLocation":"7906:7:25","nodeType":"VariableDeclaration","scope":7179,"src":"7898:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7173,"name":"address","nodeType":"ElementaryTypeName","src":"7898:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7176,"mutability":"mutable","name":"destinationToken","nameLocation":"7931:16:25","nodeType":"VariableDeclaration","scope":7179,"src":"7923:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7175,"name":"address","nodeType":"ElementaryTypeName","src":"7923:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7852:101:25"},"returnParameters":{"id":7178,"nodeType":"ParameterList","parameters":[],"src":"7962:0:25"},"scope":7203,"src":"7822:141:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"56864f38","id":7190,"implemented":false,"kind":"function","modifiers":[],"name":"setDepositRoute","nameLocation":"7978:15:25","nodeType":"FunctionDefinition","parameters":{"id":7188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7181,"mutability":"mutable","name":"originChainId","nameLocation":"8011:13:25","nodeType":"VariableDeclaration","scope":7190,"src":"8003:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7180,"name":"uint256","nodeType":"ElementaryTypeName","src":"8003:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7183,"mutability":"mutable","name":"destinationChainId","nameLocation":"8042:18:25","nodeType":"VariableDeclaration","scope":7190,"src":"8034:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7182,"name":"uint256","nodeType":"ElementaryTypeName","src":"8034:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7185,"mutability":"mutable","name":"originToken","nameLocation":"8078:11:25","nodeType":"VariableDeclaration","scope":7190,"src":"8070:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7184,"name":"address","nodeType":"ElementaryTypeName","src":"8070:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7187,"mutability":"mutable","name":"depositsEnabled","nameLocation":"8104:15:25","nodeType":"VariableDeclaration","scope":7190,"src":"8099:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7186,"name":"bool","nodeType":"ElementaryTypeName","src":"8099:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7993:132:25"},"returnParameters":{"id":7189,"nodeType":"ParameterList","parameters":[],"src":"8134:0:25"},"scope":7203,"src":"7969:166:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2d32d557","id":7199,"implemented":false,"kind":"function","modifiers":[],"name":"poolRebalanceRoute","nameLocation":"8150:18:25","nodeType":"FunctionDefinition","parameters":{"id":7195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7192,"mutability":"mutable","name":"destinationChainId","nameLocation":"8177:18:25","nodeType":"VariableDeclaration","scope":7199,"src":"8169:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7191,"name":"uint256","nodeType":"ElementaryTypeName","src":"8169:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7194,"mutability":"mutable","name":"l1Token","nameLocation":"8205:7:25","nodeType":"VariableDeclaration","scope":7199,"src":"8197:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7193,"name":"address","nodeType":"ElementaryTypeName","src":"8197:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8168:45:25"},"returnParameters":{"id":7198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7197,"mutability":"mutable","name":"destinationToken","nameLocation":"8269:16:25","nodeType":"VariableDeclaration","scope":7199,"src":"8261:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7196,"name":"address","nodeType":"ElementaryTypeName","src":"8261:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8260:26:25"},"scope":7203,"src":"8141:146:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"69b62502","id":7202,"implemented":false,"kind":"function","modifiers":[],"name":"loadEthForL2Calls","nameLocation":"8302:17:25","nodeType":"FunctionDefinition","parameters":{"id":7200,"nodeType":"ParameterList","parameters":[],"src":"8319:2:25"},"returnParameters":{"id":7201,"nodeType":"ParameterList","parameters":[],"src":"8338:0:25"},"scope":7203,"src":"8293:46:25","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":7204,"src":"192:8149:25","usedErrors":[],"usedEvents":[]}],"src":"37:8305:25"},"id":25},"contracts/interfaces/LpTokenFactoryInterface.sol":{"ast":{"absolutePath":"contracts/interfaces/LpTokenFactoryInterface.sol","exportedSymbols":{"LpTokenFactoryInterface":[7215]},"id":7216,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":7205,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:26"},{"abstract":false,"baseContracts":[],"canonicalName":"LpTokenFactoryInterface","contractDependencies":[],"contractKind":"interface","documentation":{"id":7206,"nodeType":"StructuredDocumentation","src":"62:156:26","text":" @notice Factory to create new LP ERC20 tokens that represent a liquidity provider's position. HubPool is the\n intended client of this contract."},"fullyImplemented":false,"id":7215,"linearizedBaseContracts":[7215],"name":"LpTokenFactoryInterface","nameLocation":"229:23:26","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":7207,"nodeType":"StructuredDocumentation","src":"259:201:26","text":" @notice Deploys new LP token for L1 token. Sets caller as minter and burner of token.\n @param l1Token L1 token to name in LP token name.\n @return address of new LP token."},"functionSelector":"fc2f1b6e","id":7214,"implemented":false,"kind":"function","modifiers":[],"name":"createLpToken","nameLocation":"474:13:26","nodeType":"FunctionDefinition","parameters":{"id":7210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7209,"mutability":"mutable","name":"l1Token","nameLocation":"496:7:26","nodeType":"VariableDeclaration","scope":7214,"src":"488:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7208,"name":"address","nodeType":"ElementaryTypeName","src":"488:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"487:17:26"},"returnParameters":{"id":7213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7214,"src":"523:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7211,"name":"address","nodeType":"ElementaryTypeName","src":"523:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"522:9:26"},"scope":7215,"src":"465:67:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7216,"src":"219:315:26","usedErrors":[],"usedEvents":[]}],"src":"37:498:26"},"id":26},"contracts/interfaces/SpokePoolInterface.sol":{"ast":{"absolutePath":"contracts/interfaces/SpokePoolInterface.sol","exportedSymbols":{"SpokePoolInterface":[7500]},"id":7501,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":7217,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:27"},{"abstract":false,"baseContracts":[],"canonicalName":"SpokePoolInterface","contractDependencies":[],"contractKind":"interface","documentation":{"id":7218,"nodeType":"StructuredDocumentation","src":"62:103:27","text":" @notice Contains common data structures and functions used by all SpokePool implementations."},"fullyImplemented":false,"id":7500,"linearizedBaseContracts":[7500],"name":"SpokePoolInterface","nameLocation":"176:18:27","nodeType":"ContractDefinition","nodes":[{"canonicalName":"SpokePoolInterface.RelayerRefundLeaf","id":7233,"members":[{"constant":false,"id":7220,"mutability":"mutable","name":"amountToReturn","nameLocation":"519:14:27","nodeType":"VariableDeclaration","scope":7233,"src":"511:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7219,"name":"uint256","nodeType":"ElementaryTypeName","src":"511:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7222,"mutability":"mutable","name":"chainId","nameLocation":"641:7:27","nodeType":"VariableDeclaration","scope":7233,"src":"633:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7221,"name":"uint256","nodeType":"ElementaryTypeName","src":"633:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7225,"mutability":"mutable","name":"refundAmounts","nameLocation":"754:13:27","nodeType":"VariableDeclaration","scope":7233,"src":"744:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7223,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7224,"nodeType":"ArrayTypeName","src":"744:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7227,"mutability":"mutable","name":"leafId","nameLocation":"880:6:27","nodeType":"VariableDeclaration","scope":7233,"src":"873:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7226,"name":"uint32","nodeType":"ElementaryTypeName","src":"873:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7229,"mutability":"mutable","name":"l2TokenAddress","nameLocation":"973:14:27","nodeType":"VariableDeclaration","scope":7233,"src":"965:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7228,"name":"address","nodeType":"ElementaryTypeName","src":"965:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7232,"mutability":"mutable","name":"refundAddresses","nameLocation":"1106:15:27","nodeType":"VariableDeclaration","scope":7233,"src":"1096:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7230,"name":"address","nodeType":"ElementaryTypeName","src":"1096:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7231,"nodeType":"ArrayTypeName","src":"1096:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"name":"RelayerRefundLeaf","nameLocation":"297:17:27","nodeType":"StructDefinition","scope":7500,"src":"290:838:27","visibility":"public"},{"canonicalName":"SpokePoolInterface.RelayData","documentation":{"id":7234,"nodeType":"StructuredDocumentation","src":"1540:51:27","text":"@custom:audit FOLLOWING STRUCT TO BE DEPRECATED"},"id":7255,"members":[{"constant":false,"id":7236,"mutability":"mutable","name":"depositor","nameLocation":"1697:9:27","nodeType":"VariableDeclaration","scope":7255,"src":"1689:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7235,"name":"address","nodeType":"ElementaryTypeName","src":"1689:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7238,"mutability":"mutable","name":"recipient","nameLocation":"1783:9:27","nodeType":"VariableDeclaration","scope":7255,"src":"1775:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7237,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7240,"mutability":"mutable","name":"destinationToken","nameLocation":"1879:16:27","nodeType":"VariableDeclaration","scope":7255,"src":"1871:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7239,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7242,"mutability":"mutable","name":"amount","nameLocation":"1974:6:27","nodeType":"VariableDeclaration","scope":7255,"src":"1966:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7241,"name":"uint256","nodeType":"ElementaryTypeName","src":"1966:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7244,"mutability":"mutable","name":"originChainId","nameLocation":"2026:13:27","nodeType":"VariableDeclaration","scope":7255,"src":"2018:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7243,"name":"uint256","nodeType":"ElementaryTypeName","src":"2018:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7246,"mutability":"mutable","name":"destinationChainId","nameLocation":"2090:18:27","nodeType":"VariableDeclaration","scope":7255,"src":"2082:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7245,"name":"uint256","nodeType":"ElementaryTypeName","src":"2082:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7248,"mutability":"mutable","name":"realizedLpFeePct","nameLocation":"2262:16:27","nodeType":"VariableDeclaration","scope":7255,"src":"2256:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7247,"name":"int64","nodeType":"ElementaryTypeName","src":"2256:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":7250,"mutability":"mutable","name":"relayerFeePct","nameLocation":"2358:13:27","nodeType":"VariableDeclaration","scope":7255,"src":"2352:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7249,"name":"int64","nodeType":"ElementaryTypeName","src":"2352:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":7252,"mutability":"mutable","name":"depositId","nameLocation":"2461:9:27","nodeType":"VariableDeclaration","scope":7255,"src":"2454:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7251,"name":"uint32","nodeType":"ElementaryTypeName","src":"2454:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7254,"mutability":"mutable","name":"message","nameLocation":"2538:7:27","nodeType":"VariableDeclaration","scope":7255,"src":"2532:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":7253,"name":"bytes","nodeType":"ElementaryTypeName","src":"2532:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"RelayData","nameLocation":"1603:9:27","nodeType":"StructDefinition","scope":7500,"src":"1596:956:27","visibility":"public"},{"canonicalName":"SpokePoolInterface.SlowFill","documentation":{"id":7256,"nodeType":"StructuredDocumentation","src":"2558:51:27","text":"@custom:audit FOLLOWING STRUCT TO BE DEPRECATED"},"id":7262,"members":[{"constant":false,"id":7259,"mutability":"mutable","name":"relayData","nameLocation":"2650:9:27","nodeType":"VariableDeclaration","scope":7262,"src":"2640:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$7255_storage_ptr","typeString":"struct SpokePoolInterface.RelayData"},"typeName":{"id":7258,"nodeType":"UserDefinedTypeName","pathNode":{"id":7257,"name":"RelayData","nameLocations":["2640:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":7255,"src":"2640:9:27"},"referencedDeclaration":7255,"src":"2640:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayData_$7255_storage_ptr","typeString":"struct SpokePoolInterface.RelayData"}},"visibility":"internal"},{"constant":false,"id":7261,"mutability":"mutable","name":"payoutAdjustmentPct","nameLocation":"2676:19:27","nodeType":"VariableDeclaration","scope":7262,"src":"2669:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7260,"name":"int256","nodeType":"ElementaryTypeName","src":"2669:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"SlowFill","nameLocation":"2621:8:27","nodeType":"StructDefinition","scope":7500,"src":"2614:88:27","visibility":"public"},{"canonicalName":"SpokePoolInterface.RootBundle","id":7271,"members":[{"constant":false,"id":7264,"mutability":"mutable","name":"slowRelayRoot","nameLocation":"3064:13:27","nodeType":"VariableDeclaration","scope":7271,"src":"3056:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7263,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3056:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7266,"mutability":"mutable","name":"relayerRefundRoot","nameLocation":"3160:17:27","nodeType":"VariableDeclaration","scope":7271,"src":"3152:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7265,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3152:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7270,"mutability":"mutable","name":"claimedBitmap","nameLocation":"3371:13:27","nodeType":"VariableDeclaration","scope":7271,"src":"3343:41:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":7269,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7267,"name":"uint256","nodeType":"ElementaryTypeName","src":"3351:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3343:27:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3362:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"RootBundle","nameLocation":"2912:10:27","nodeType":"StructDefinition","scope":7500,"src":"2905:486:27","visibility":"public"},{"functionSelector":"de7eba78","id":7276,"implemented":false,"kind":"function","modifiers":[],"name":"setCrossDomainAdmin","nameLocation":"3406:19:27","nodeType":"FunctionDefinition","parameters":{"id":7274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7273,"mutability":"mutable","name":"newCrossDomainAdmin","nameLocation":"3434:19:27","nodeType":"VariableDeclaration","scope":7276,"src":"3426:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7272,"name":"address","nodeType":"ElementaryTypeName","src":"3426:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3425:29:27"},"returnParameters":{"id":7275,"nodeType":"ParameterList","parameters":[],"src":"3463:0:27"},"scope":7500,"src":"3397:67:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"1dfb2d02","id":7281,"implemented":false,"kind":"function","modifiers":[],"name":"setHubPool","nameLocation":"3479:10:27","nodeType":"FunctionDefinition","parameters":{"id":7279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7278,"mutability":"mutable","name":"newHubPool","nameLocation":"3498:10:27","nodeType":"VariableDeclaration","scope":7281,"src":"3490:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7277,"name":"address","nodeType":"ElementaryTypeName","src":"3490:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3489:20:27"},"returnParameters":{"id":7280,"nodeType":"ParameterList","parameters":[],"src":"3518:0:27"},"scope":7500,"src":"3470:49:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"272751c7","id":7290,"implemented":false,"kind":"function","modifiers":[],"name":"setEnableRoute","nameLocation":"3534:14:27","nodeType":"FunctionDefinition","parameters":{"id":7288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7283,"mutability":"mutable","name":"originToken","nameLocation":"3566:11:27","nodeType":"VariableDeclaration","scope":7290,"src":"3558:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7282,"name":"address","nodeType":"ElementaryTypeName","src":"3558:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7285,"mutability":"mutable","name":"destinationChainId","nameLocation":"3595:18:27","nodeType":"VariableDeclaration","scope":7290,"src":"3587:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7284,"name":"uint256","nodeType":"ElementaryTypeName","src":"3587:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7287,"mutability":"mutable","name":"enable","nameLocation":"3628:6:27","nodeType":"VariableDeclaration","scope":7290,"src":"3623:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7286,"name":"bool","nodeType":"ElementaryTypeName","src":"3623:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3548:92:27"},"returnParameters":{"id":7289,"nodeType":"ParameterList","parameters":[],"src":"3649:0:27"},"scope":7500,"src":"3525:125:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"738b62e5","id":7295,"implemented":false,"kind":"function","modifiers":[],"name":"pauseDeposits","nameLocation":"3665:13:27","nodeType":"FunctionDefinition","parameters":{"id":7293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7292,"mutability":"mutable","name":"pause","nameLocation":"3684:5:27","nodeType":"VariableDeclaration","scope":7295,"src":"3679:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7291,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:12:27"},"returnParameters":{"id":7294,"nodeType":"ParameterList","parameters":[],"src":"3699:0:27"},"scope":7500,"src":"3656:44:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"99cc2968","id":7300,"implemented":false,"kind":"function","modifiers":[],"name":"pauseFills","nameLocation":"3715:10:27","nodeType":"FunctionDefinition","parameters":{"id":7298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7297,"mutability":"mutable","name":"pause","nameLocation":"3731:5:27","nodeType":"VariableDeclaration","scope":7300,"src":"3726:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7296,"name":"bool","nodeType":"ElementaryTypeName","src":"3726:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3725:12:27"},"returnParameters":{"id":7299,"nodeType":"ParameterList","parameters":[],"src":"3746:0:27"},"scope":7500,"src":"3706:41:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"493a4f84","id":7307,"implemented":false,"kind":"function","modifiers":[],"name":"relayRootBundle","nameLocation":"3762:15:27","nodeType":"FunctionDefinition","parameters":{"id":7305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7302,"mutability":"mutable","name":"relayerRefundRoot","nameLocation":"3786:17:27","nodeType":"VariableDeclaration","scope":7307,"src":"3778:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3778:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7304,"mutability":"mutable","name":"slowRelayRoot","nameLocation":"3813:13:27","nodeType":"VariableDeclaration","scope":7307,"src":"3805:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3805:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3777:50:27"},"returnParameters":{"id":7306,"nodeType":"ParameterList","parameters":[],"src":"3836:0:27"},"scope":7500,"src":"3753:84:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8a7860ce","id":7312,"implemented":false,"kind":"function","modifiers":[],"name":"emergencyDeleteRootBundle","nameLocation":"3852:25:27","nodeType":"FunctionDefinition","parameters":{"id":7310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7309,"mutability":"mutable","name":"rootBundleId","nameLocation":"3886:12:27","nodeType":"VariableDeclaration","scope":7312,"src":"3878:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7308,"name":"uint256","nodeType":"ElementaryTypeName","src":"3878:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3877:22:27"},"returnParameters":{"id":7311,"nodeType":"ParameterList","parameters":[],"src":"3908:0:27"},"scope":7500,"src":"3843:66:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"1186ec33","id":7331,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"3924:7:27","nodeType":"FunctionDefinition","parameters":{"id":7329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7314,"mutability":"mutable","name":"recipient","nameLocation":"3949:9:27","nodeType":"VariableDeclaration","scope":7331,"src":"3941:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7313,"name":"address","nodeType":"ElementaryTypeName","src":"3941:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7316,"mutability":"mutable","name":"originToken","nameLocation":"3976:11:27","nodeType":"VariableDeclaration","scope":7331,"src":"3968:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7315,"name":"address","nodeType":"ElementaryTypeName","src":"3968:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7318,"mutability":"mutable","name":"amount","nameLocation":"4005:6:27","nodeType":"VariableDeclaration","scope":7331,"src":"3997:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7317,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7320,"mutability":"mutable","name":"destinationChainId","nameLocation":"4029:18:27","nodeType":"VariableDeclaration","scope":7331,"src":"4021:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7319,"name":"uint256","nodeType":"ElementaryTypeName","src":"4021:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7322,"mutability":"mutable","name":"relayerFeePct","nameLocation":"4063:13:27","nodeType":"VariableDeclaration","scope":7331,"src":"4057:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7321,"name":"int64","nodeType":"ElementaryTypeName","src":"4057:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":7324,"mutability":"mutable","name":"quoteTimestamp","nameLocation":"4093:14:27","nodeType":"VariableDeclaration","scope":7331,"src":"4086:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7323,"name":"uint32","nodeType":"ElementaryTypeName","src":"4086:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7326,"mutability":"mutable","name":"message","nameLocation":"4130:7:27","nodeType":"VariableDeclaration","scope":7331,"src":"4117:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7325,"name":"bytes","nodeType":"ElementaryTypeName","src":"4117:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7328,"mutability":"mutable","name":"maxCount","nameLocation":"4155:8:27","nodeType":"VariableDeclaration","scope":7331,"src":"4147:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7327,"name":"uint256","nodeType":"ElementaryTypeName","src":"4147:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3931:238:27"},"returnParameters":{"id":7330,"nodeType":"ParameterList","parameters":[],"src":"4186:0:27"},"scope":7500,"src":"3915:272:27","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":7332,"nodeType":"StructuredDocumentation","src":"4193:53:27","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"functionSelector":"541f4f14","id":7353,"implemented":false,"kind":"function","modifiers":[],"name":"depositFor","nameLocation":"4260:10:27","nodeType":"FunctionDefinition","parameters":{"id":7351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7334,"mutability":"mutable","name":"depositor","nameLocation":"4288:9:27","nodeType":"VariableDeclaration","scope":7353,"src":"4280:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7333,"name":"address","nodeType":"ElementaryTypeName","src":"4280:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7336,"mutability":"mutable","name":"recipient","nameLocation":"4315:9:27","nodeType":"VariableDeclaration","scope":7353,"src":"4307:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7335,"name":"address","nodeType":"ElementaryTypeName","src":"4307:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7338,"mutability":"mutable","name":"originToken","nameLocation":"4342:11:27","nodeType":"VariableDeclaration","scope":7353,"src":"4334:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7337,"name":"address","nodeType":"ElementaryTypeName","src":"4334:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7340,"mutability":"mutable","name":"amount","nameLocation":"4371:6:27","nodeType":"VariableDeclaration","scope":7353,"src":"4363:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7339,"name":"uint256","nodeType":"ElementaryTypeName","src":"4363:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7342,"mutability":"mutable","name":"destinationChainId","nameLocation":"4395:18:27","nodeType":"VariableDeclaration","scope":7353,"src":"4387:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7341,"name":"uint256","nodeType":"ElementaryTypeName","src":"4387:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7344,"mutability":"mutable","name":"relayerFeePct","nameLocation":"4429:13:27","nodeType":"VariableDeclaration","scope":7353,"src":"4423:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7343,"name":"int64","nodeType":"ElementaryTypeName","src":"4423:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":7346,"mutability":"mutable","name":"quoteTimestamp","nameLocation":"4459:14:27","nodeType":"VariableDeclaration","scope":7353,"src":"4452:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7345,"name":"uint32","nodeType":"ElementaryTypeName","src":"4452:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7348,"mutability":"mutable","name":"message","nameLocation":"4496:7:27","nodeType":"VariableDeclaration","scope":7353,"src":"4483:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7347,"name":"bytes","nodeType":"ElementaryTypeName","src":"4483:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7350,"mutability":"mutable","name":"maxCount","nameLocation":"4521:8:27","nodeType":"VariableDeclaration","scope":7353,"src":"4513:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7349,"name":"uint256","nodeType":"ElementaryTypeName","src":"4513:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4270:265:27"},"returnParameters":{"id":7352,"nodeType":"ParameterList","parameters":[],"src":"4552:0:27"},"scope":7500,"src":"4251:302:27","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":7354,"nodeType":"StructuredDocumentation","src":"4559:53:27","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"functionSelector":"ae527fbb","id":7371,"implemented":false,"kind":"function","modifiers":[],"name":"depositNow","nameLocation":"4626:10:27","nodeType":"FunctionDefinition","parameters":{"id":7369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7356,"mutability":"mutable","name":"recipient","nameLocation":"4654:9:27","nodeType":"VariableDeclaration","scope":7371,"src":"4646:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7355,"name":"address","nodeType":"ElementaryTypeName","src":"4646:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7358,"mutability":"mutable","name":"originToken","nameLocation":"4681:11:27","nodeType":"VariableDeclaration","scope":7371,"src":"4673:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7357,"name":"address","nodeType":"ElementaryTypeName","src":"4673:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7360,"mutability":"mutable","name":"amount","nameLocation":"4710:6:27","nodeType":"VariableDeclaration","scope":7371,"src":"4702:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7359,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7362,"mutability":"mutable","name":"destinationChainId","nameLocation":"4734:18:27","nodeType":"VariableDeclaration","scope":7371,"src":"4726:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7361,"name":"uint256","nodeType":"ElementaryTypeName","src":"4726:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7364,"mutability":"mutable","name":"relayerFeePct","nameLocation":"4768:13:27","nodeType":"VariableDeclaration","scope":7371,"src":"4762:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7363,"name":"int64","nodeType":"ElementaryTypeName","src":"4762:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":7366,"mutability":"mutable","name":"message","nameLocation":"4804:7:27","nodeType":"VariableDeclaration","scope":7371,"src":"4791:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7365,"name":"bytes","nodeType":"ElementaryTypeName","src":"4791:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7368,"mutability":"mutable","name":"maxCount","nameLocation":"4829:8:27","nodeType":"VariableDeclaration","scope":7371,"src":"4821:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7367,"name":"uint256","nodeType":"ElementaryTypeName","src":"4821:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4636:207:27"},"returnParameters":{"id":7370,"nodeType":"ParameterList","parameters":[],"src":"4860:0:27"},"scope":7500,"src":"4617:244:27","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":7372,"nodeType":"StructuredDocumentation","src":"4867:53:27","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"functionSelector":"7e688bba","id":7387,"implemented":false,"kind":"function","modifiers":[],"name":"speedUpDeposit","nameLocation":"4934:14:27","nodeType":"FunctionDefinition","parameters":{"id":7385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7374,"mutability":"mutable","name":"depositor","nameLocation":"4966:9:27","nodeType":"VariableDeclaration","scope":7387,"src":"4958:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7373,"name":"address","nodeType":"ElementaryTypeName","src":"4958:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7376,"mutability":"mutable","name":"updatedRelayerFeePct","nameLocation":"4991:20:27","nodeType":"VariableDeclaration","scope":7387,"src":"4985:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7375,"name":"int64","nodeType":"ElementaryTypeName","src":"4985:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":7378,"mutability":"mutable","name":"depositId","nameLocation":"5028:9:27","nodeType":"VariableDeclaration","scope":7387,"src":"5021:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7377,"name":"uint32","nodeType":"ElementaryTypeName","src":"5021:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7380,"mutability":"mutable","name":"updatedRecipient","nameLocation":"5055:16:27","nodeType":"VariableDeclaration","scope":7387,"src":"5047:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7379,"name":"address","nodeType":"ElementaryTypeName","src":"5047:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7382,"mutability":"mutable","name":"updatedMessage","nameLocation":"5094:14:27","nodeType":"VariableDeclaration","scope":7387,"src":"5081:27:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7381,"name":"bytes","nodeType":"ElementaryTypeName","src":"5081:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7384,"mutability":"mutable","name":"depositorSignature","nameLocation":"5131:18:27","nodeType":"VariableDeclaration","scope":7387,"src":"5118:31:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7383,"name":"bytes","nodeType":"ElementaryTypeName","src":"5118:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4948:207:27"},"returnParameters":{"id":7386,"nodeType":"ParameterList","parameters":[],"src":"5164:0:27"},"scope":7500,"src":"4925:240:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7388,"nodeType":"StructuredDocumentation","src":"5171:53:27","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"functionSelector":"44b8be68","id":7415,"implemented":false,"kind":"function","modifiers":[],"name":"fillRelay","nameLocation":"5238:9:27","nodeType":"FunctionDefinition","parameters":{"id":7413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7390,"mutability":"mutable","name":"depositor","nameLocation":"5265:9:27","nodeType":"VariableDeclaration","scope":7415,"src":"5257:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7389,"name":"address","nodeType":"ElementaryTypeName","src":"5257:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7392,"mutability":"mutable","name":"recipient","nameLocation":"5292:9:27","nodeType":"VariableDeclaration","scope":7415,"src":"5284:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7391,"name":"address","nodeType":"ElementaryTypeName","src":"5284:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7394,"mutability":"mutable","name":"destinationToken","nameLocation":"5319:16:27","nodeType":"VariableDeclaration","scope":7415,"src":"5311:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7393,"name":"address","nodeType":"ElementaryTypeName","src":"5311:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7396,"mutability":"mutable","name":"amount","nameLocation":"5353:6:27","nodeType":"VariableDeclaration","scope":7415,"src":"5345:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7395,"name":"uint256","nodeType":"ElementaryTypeName","src":"5345:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7398,"mutability":"mutable","name":"maxTokensToSend","nameLocation":"5377:15:27","nodeType":"VariableDeclaration","scope":7415,"src":"5369:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7397,"name":"uint256","nodeType":"ElementaryTypeName","src":"5369:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7400,"mutability":"mutable","name":"repaymentChainId","nameLocation":"5410:16:27","nodeType":"VariableDeclaration","scope":7415,"src":"5402:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7399,"name":"uint256","nodeType":"ElementaryTypeName","src":"5402:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7402,"mutability":"mutable","name":"originChainId","nameLocation":"5444:13:27","nodeType":"VariableDeclaration","scope":7415,"src":"5436:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7401,"name":"uint256","nodeType":"ElementaryTypeName","src":"5436:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7404,"mutability":"mutable","name":"realizedLpFeePct","nameLocation":"5473:16:27","nodeType":"VariableDeclaration","scope":7415,"src":"5467:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7403,"name":"int64","nodeType":"ElementaryTypeName","src":"5467:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":7406,"mutability":"mutable","name":"relayerFeePct","nameLocation":"5505:13:27","nodeType":"VariableDeclaration","scope":7415,"src":"5499:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7405,"name":"int64","nodeType":"ElementaryTypeName","src":"5499:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":7408,"mutability":"mutable","name":"depositId","nameLocation":"5535:9:27","nodeType":"VariableDeclaration","scope":7415,"src":"5528:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7407,"name":"uint32","nodeType":"ElementaryTypeName","src":"5528:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7410,"mutability":"mutable","name":"message","nameLocation":"5567:7:27","nodeType":"VariableDeclaration","scope":7415,"src":"5554:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7409,"name":"bytes","nodeType":"ElementaryTypeName","src":"5554:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7412,"mutability":"mutable","name":"maxCount","nameLocation":"5592:8:27","nodeType":"VariableDeclaration","scope":7415,"src":"5584:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7411,"name":"uint256","nodeType":"ElementaryTypeName","src":"5584:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5247:359:27"},"returnParameters":{"id":7414,"nodeType":"ParameterList","parameters":[],"src":"5615:0:27"},"scope":7500,"src":"5229:387:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7416,"nodeType":"StructuredDocumentation","src":"5622:53:27","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"functionSelector":"5ceaec32","id":7451,"implemented":false,"kind":"function","modifiers":[],"name":"fillRelayWithUpdatedDeposit","nameLocation":"5689:27:27","nodeType":"FunctionDefinition","parameters":{"id":7449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7418,"mutability":"mutable","name":"depositor","nameLocation":"5734:9:27","nodeType":"VariableDeclaration","scope":7451,"src":"5726:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7417,"name":"address","nodeType":"ElementaryTypeName","src":"5726:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7420,"mutability":"mutable","name":"recipient","nameLocation":"5761:9:27","nodeType":"VariableDeclaration","scope":7451,"src":"5753:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7419,"name":"address","nodeType":"ElementaryTypeName","src":"5753:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7422,"mutability":"mutable","name":"updatedRecipient","nameLocation":"5788:16:27","nodeType":"VariableDeclaration","scope":7451,"src":"5780:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7421,"name":"address","nodeType":"ElementaryTypeName","src":"5780:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7424,"mutability":"mutable","name":"destinationToken","nameLocation":"5822:16:27","nodeType":"VariableDeclaration","scope":7451,"src":"5814:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7423,"name":"address","nodeType":"ElementaryTypeName","src":"5814:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7426,"mutability":"mutable","name":"amount","nameLocation":"5856:6:27","nodeType":"VariableDeclaration","scope":7451,"src":"5848:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7425,"name":"uint256","nodeType":"ElementaryTypeName","src":"5848:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7428,"mutability":"mutable","name":"maxTokensToSend","nameLocation":"5880:15:27","nodeType":"VariableDeclaration","scope":7451,"src":"5872:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7427,"name":"uint256","nodeType":"ElementaryTypeName","src":"5872:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7430,"mutability":"mutable","name":"repaymentChainId","nameLocation":"5913:16:27","nodeType":"VariableDeclaration","scope":7451,"src":"5905:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7429,"name":"uint256","nodeType":"ElementaryTypeName","src":"5905:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7432,"mutability":"mutable","name":"originChainId","nameLocation":"5947:13:27","nodeType":"VariableDeclaration","scope":7451,"src":"5939:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7431,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7434,"mutability":"mutable","name":"realizedLpFeePct","nameLocation":"5976:16:27","nodeType":"VariableDeclaration","scope":7451,"src":"5970:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7433,"name":"int64","nodeType":"ElementaryTypeName","src":"5970:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":7436,"mutability":"mutable","name":"relayerFeePct","nameLocation":"6008:13:27","nodeType":"VariableDeclaration","scope":7451,"src":"6002:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7435,"name":"int64","nodeType":"ElementaryTypeName","src":"6002:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":7438,"mutability":"mutable","name":"updatedRelayerFeePct","nameLocation":"6037:20:27","nodeType":"VariableDeclaration","scope":7451,"src":"6031:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7437,"name":"int64","nodeType":"ElementaryTypeName","src":"6031:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":7440,"mutability":"mutable","name":"depositId","nameLocation":"6074:9:27","nodeType":"VariableDeclaration","scope":7451,"src":"6067:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7439,"name":"uint32","nodeType":"ElementaryTypeName","src":"6067:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7442,"mutability":"mutable","name":"message","nameLocation":"6106:7:27","nodeType":"VariableDeclaration","scope":7451,"src":"6093:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7441,"name":"bytes","nodeType":"ElementaryTypeName","src":"6093:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7444,"mutability":"mutable","name":"updatedMessage","nameLocation":"6136:14:27","nodeType":"VariableDeclaration","scope":7451,"src":"6123:27:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7443,"name":"bytes","nodeType":"ElementaryTypeName","src":"6123:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7446,"mutability":"mutable","name":"depositorSignature","nameLocation":"6173:18:27","nodeType":"VariableDeclaration","scope":7451,"src":"6160:31:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7445,"name":"bytes","nodeType":"ElementaryTypeName","src":"6160:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7448,"mutability":"mutable","name":"maxCount","nameLocation":"6209:8:27","nodeType":"VariableDeclaration","scope":7451,"src":"6201:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7447,"name":"uint256","nodeType":"ElementaryTypeName","src":"6201:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5716:507:27"},"returnParameters":{"id":7450,"nodeType":"ParameterList","parameters":[],"src":"6232:0:27"},"scope":7500,"src":"5680:553:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7452,"nodeType":"StructuredDocumentation","src":"6239:53:27","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"functionSelector":"0c2097f7","id":7480,"implemented":false,"kind":"function","modifiers":[],"name":"executeSlowRelayLeaf","nameLocation":"6306:20:27","nodeType":"FunctionDefinition","parameters":{"id":7478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7454,"mutability":"mutable","name":"depositor","nameLocation":"6344:9:27","nodeType":"VariableDeclaration","scope":7480,"src":"6336:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7453,"name":"address","nodeType":"ElementaryTypeName","src":"6336:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7456,"mutability":"mutable","name":"recipient","nameLocation":"6371:9:27","nodeType":"VariableDeclaration","scope":7480,"src":"6363:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7455,"name":"address","nodeType":"ElementaryTypeName","src":"6363:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7458,"mutability":"mutable","name":"destinationToken","nameLocation":"6398:16:27","nodeType":"VariableDeclaration","scope":7480,"src":"6390:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7457,"name":"address","nodeType":"ElementaryTypeName","src":"6390:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7460,"mutability":"mutable","name":"amount","nameLocation":"6432:6:27","nodeType":"VariableDeclaration","scope":7480,"src":"6424:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7459,"name":"uint256","nodeType":"ElementaryTypeName","src":"6424:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7462,"mutability":"mutable","name":"originChainId","nameLocation":"6456:13:27","nodeType":"VariableDeclaration","scope":7480,"src":"6448:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7461,"name":"uint256","nodeType":"ElementaryTypeName","src":"6448:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7464,"mutability":"mutable","name":"realizedLpFeePct","nameLocation":"6485:16:27","nodeType":"VariableDeclaration","scope":7480,"src":"6479:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7463,"name":"int64","nodeType":"ElementaryTypeName","src":"6479:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":7466,"mutability":"mutable","name":"relayerFeePct","nameLocation":"6517:13:27","nodeType":"VariableDeclaration","scope":7480,"src":"6511:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7465,"name":"int64","nodeType":"ElementaryTypeName","src":"6511:5:27","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":7468,"mutability":"mutable","name":"depositId","nameLocation":"6547:9:27","nodeType":"VariableDeclaration","scope":7480,"src":"6540:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7467,"name":"uint32","nodeType":"ElementaryTypeName","src":"6540:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7470,"mutability":"mutable","name":"rootBundleId","nameLocation":"6573:12:27","nodeType":"VariableDeclaration","scope":7480,"src":"6566:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7469,"name":"uint32","nodeType":"ElementaryTypeName","src":"6566:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7472,"mutability":"mutable","name":"message","nameLocation":"6608:7:27","nodeType":"VariableDeclaration","scope":7480,"src":"6595:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7471,"name":"bytes","nodeType":"ElementaryTypeName","src":"6595:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7474,"mutability":"mutable","name":"payoutAdjustment","nameLocation":"6632:16:27","nodeType":"VariableDeclaration","scope":7480,"src":"6625:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7473,"name":"int256","nodeType":"ElementaryTypeName","src":"6625:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7477,"mutability":"mutable","name":"proof","nameLocation":"6675:5:27","nodeType":"VariableDeclaration","scope":7480,"src":"6658:22:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7475,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6658:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7476,"nodeType":"ArrayTypeName","src":"6658:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6326:360:27"},"returnParameters":{"id":7479,"nodeType":"ParameterList","parameters":[],"src":"6695:0:27"},"scope":7500,"src":"6297:399:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7481,"nodeType":"StructuredDocumentation","src":"6702:53:27","text":"@custom:audit FOLLOWING FUNCTION TO BE DEPRECATED"},"functionSelector":"1b3d5559","id":7492,"implemented":false,"kind":"function","modifiers":[],"name":"executeRelayerRefundLeaf","nameLocation":"6769:24:27","nodeType":"FunctionDefinition","parameters":{"id":7490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7483,"mutability":"mutable","name":"rootBundleId","nameLocation":"6810:12:27","nodeType":"VariableDeclaration","scope":7492,"src":"6803:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7482,"name":"uint32","nodeType":"ElementaryTypeName","src":"6803:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7486,"mutability":"mutable","name":"relayerRefundLeaf","nameLocation":"6876:17:27","nodeType":"VariableDeclaration","scope":7492,"src":"6832:61:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$7233_memory_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf"},"typeName":{"id":7485,"nodeType":"UserDefinedTypeName","pathNode":{"id":7484,"name":"SpokePoolInterface.RelayerRefundLeaf","nameLocations":["6832:18:27","6851:17:27"],"nodeType":"IdentifierPath","referencedDeclaration":7233,"src":"6832:36:27"},"referencedDeclaration":7233,"src":"6832:36:27","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerRefundLeaf_$7233_storage_ptr","typeString":"struct SpokePoolInterface.RelayerRefundLeaf"}},"visibility":"internal"},{"constant":false,"id":7489,"mutability":"mutable","name":"proof","nameLocation":"6920:5:27","nodeType":"VariableDeclaration","scope":7492,"src":"6903:22:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7487,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6903:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7488,"nodeType":"ArrayTypeName","src":"6903:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6793:138:27"},"returnParameters":{"id":7491,"nodeType":"ParameterList","parameters":[],"src":"6948:0:27"},"scope":7500,"src":"6760:189:27","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"9a8a0592","id":7497,"implemented":false,"kind":"function","modifiers":[],"name":"chainId","nameLocation":"6964:7:27","nodeType":"FunctionDefinition","parameters":{"id":7493,"nodeType":"ParameterList","parameters":[],"src":"6971:2:27"},"returnParameters":{"id":7496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7497,"src":"6997:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7494,"name":"uint256","nodeType":"ElementaryTypeName","src":"6997:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6996:9:27"},"scope":7500,"src":"6955:51:27","stateMutability":"view","virtual":false,"visibility":"external"},{"errorSelector":"ba092d16","id":7499,"name":"NotEOA","nameLocation":"7018:6:27","nodeType":"ErrorDefinition","parameters":{"id":7498,"nodeType":"ParameterList","parameters":[],"src":"7024:2:27"},"src":"7012:15:27"}],"scope":7501,"src":"166:6863:27","usedErrors":[7499],"usedEvents":[]}],"src":"37:6993:27"},"id":27},"contracts/interfaces/V3SpokePoolInterface.sol":{"ast":{"absolutePath":"contracts/interfaces/V3SpokePoolInterface.sol","exportedSymbols":{"V3SpokePoolInterface":[7784]},"id":7785,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":7502,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"37:23:28"},{"abstract":false,"baseContracts":[],"canonicalName":"V3SpokePoolInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":7784,"linearizedBaseContracts":[7784],"name":"V3SpokePoolInterface","nameLocation":"170:20:28","nodeType":"ContractDefinition","nodes":[{"canonicalName":"V3SpokePoolInterface.FillStatus","id":7506,"members":[{"id":7503,"name":"Unfilled","nameLocation":"444:8:28","nodeType":"EnumValue","src":"444:8:28"},{"id":7504,"name":"RequestedSlowFill","nameLocation":"462:17:28","nodeType":"EnumValue","src":"462:17:28"},{"id":7505,"name":"Filled","nameLocation":"489:6:28","nodeType":"EnumValue","src":"489:6:28"}],"name":"FillStatus","nameLocation":"423:10:28","nodeType":"EnumDefinition","src":"418:83:28"},{"canonicalName":"V3SpokePoolInterface.FillType","id":7510,"members":[{"id":7507,"name":"FastFill","nameLocation":"733:8:28","nodeType":"EnumValue","src":"733:8:28"},{"id":7508,"name":"ReplacedSlowFill","nameLocation":"831:16:28","nodeType":"EnumValue","src":"831:16:28"},{"id":7509,"name":"SlowFill","nameLocation":"1125:8:28","nodeType":"EnumValue","src":"1125:8:28"}],"name":"FillType","nameLocation":"714:8:28","nodeType":"EnumDefinition","src":"709:588:28"},{"canonicalName":"V3SpokePoolInterface.V3RelayData","id":7535,"members":[{"constant":false,"id":7512,"mutability":"mutable","name":"depositor","nameLocation":"1889:9:28","nodeType":"VariableDeclaration","scope":7535,"src":"1881:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7511,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7514,"mutability":"mutable","name":"recipient","nameLocation":"1975:9:28","nodeType":"VariableDeclaration","scope":7535,"src":"1967:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7513,"name":"address","nodeType":"ElementaryTypeName","src":"1967:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7516,"mutability":"mutable","name":"exclusiveRelayer","nameLocation":"2101:16:28","nodeType":"VariableDeclaration","scope":7535,"src":"2093:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7515,"name":"address","nodeType":"ElementaryTypeName","src":"2093:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7518,"mutability":"mutable","name":"inputToken","nameLocation":"2200:10:28","nodeType":"VariableDeclaration","scope":7535,"src":"2192:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7517,"name":"address","nodeType":"ElementaryTypeName","src":"2192:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7520,"mutability":"mutable","name":"outputToken","nameLocation":"2297:11:28","nodeType":"VariableDeclaration","scope":7535,"src":"2289:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7519,"name":"address","nodeType":"ElementaryTypeName","src":"2289:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7522,"mutability":"mutable","name":"inputAmount","nameLocation":"2387:11:28","nodeType":"VariableDeclaration","scope":7535,"src":"2379:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7521,"name":"uint256","nodeType":"ElementaryTypeName","src":"2379:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7524,"mutability":"mutable","name":"outputAmount","nameLocation":"2483:12:28","nodeType":"VariableDeclaration","scope":7535,"src":"2475:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7523,"name":"uint256","nodeType":"ElementaryTypeName","src":"2475:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7526,"mutability":"mutable","name":"originChainId","nameLocation":"2541:13:28","nodeType":"VariableDeclaration","scope":7535,"src":"2533:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7525,"name":"uint256","nodeType":"ElementaryTypeName","src":"2533:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7528,"mutability":"mutable","name":"depositId","nameLocation":"2644:9:28","nodeType":"VariableDeclaration","scope":7535,"src":"2637:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7527,"name":"uint32","nodeType":"ElementaryTypeName","src":"2637:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7530,"mutability":"mutable","name":"fillDeadline","nameLocation":"2770:12:28","nodeType":"VariableDeclaration","scope":7535,"src":"2763:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7529,"name":"uint32","nodeType":"ElementaryTypeName","src":"2763:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7532,"mutability":"mutable","name":"exclusivityDeadline","nameLocation":"2895:19:28","nodeType":"VariableDeclaration","scope":7535,"src":"2888:26:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7531,"name":"uint32","nodeType":"ElementaryTypeName","src":"2888:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7534,"mutability":"mutable","name":"message","nameLocation":"2982:7:28","nodeType":"VariableDeclaration","scope":7535,"src":"2976:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":7533,"name":"bytes","nodeType":"ElementaryTypeName","src":"2976:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"V3RelayData","nameLocation":"1793:11:28","nodeType":"StructDefinition","scope":7784,"src":"1786:1210:28","visibility":"public"},{"canonicalName":"V3SpokePoolInterface.V3SlowFill","id":7543,"members":[{"constant":false,"id":7538,"mutability":"mutable","name":"relayData","nameLocation":"3130:9:28","nodeType":"VariableDeclaration","scope":7543,"src":"3118:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$7535_storage_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"},"typeName":{"id":7537,"nodeType":"UserDefinedTypeName","pathNode":{"id":7536,"name":"V3RelayData","nameLocations":["3118:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":7535,"src":"3118:11:28"},"referencedDeclaration":7535,"src":"3118:11:28","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$7535_storage_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"}},"visibility":"internal"},{"constant":false,"id":7540,"mutability":"mutable","name":"chainId","nameLocation":"3157:7:28","nodeType":"VariableDeclaration","scope":7543,"src":"3149:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7539,"name":"uint256","nodeType":"ElementaryTypeName","src":"3149:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7542,"mutability":"mutable","name":"updatedOutputAmount","nameLocation":"3182:19:28","nodeType":"VariableDeclaration","scope":7543,"src":"3174:27:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7541,"name":"uint256","nodeType":"ElementaryTypeName","src":"3174:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"V3SlowFill","nameLocation":"3097:10:28","nodeType":"StructDefinition","scope":7784,"src":"3090:118:28","visibility":"public"},{"canonicalName":"V3SpokePoolInterface.V3RelayExecutionParams","id":7557,"members":[{"constant":false,"id":7546,"mutability":"mutable","name":"relay","nameLocation":"3728:5:28","nodeType":"VariableDeclaration","scope":7557,"src":"3716:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$7535_storage_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"},"typeName":{"id":7545,"nodeType":"UserDefinedTypeName","pathNode":{"id":7544,"name":"V3RelayData","nameLocations":["3716:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":7535,"src":"3716:11:28"},"referencedDeclaration":7535,"src":"3716:11:28","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$7535_storage_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"}},"visibility":"internal"},{"constant":false,"id":7548,"mutability":"mutable","name":"relayHash","nameLocation":"3751:9:28","nodeType":"VariableDeclaration","scope":7557,"src":"3743:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3743:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7550,"mutability":"mutable","name":"updatedOutputAmount","nameLocation":"3778:19:28","nodeType":"VariableDeclaration","scope":7557,"src":"3770:27:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7549,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7552,"mutability":"mutable","name":"updatedRecipient","nameLocation":"3815:16:28","nodeType":"VariableDeclaration","scope":7557,"src":"3807:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7551,"name":"address","nodeType":"ElementaryTypeName","src":"3807:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7554,"mutability":"mutable","name":"updatedMessage","nameLocation":"3847:14:28","nodeType":"VariableDeclaration","scope":7557,"src":"3841:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":7553,"name":"bytes","nodeType":"ElementaryTypeName","src":"3841:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7556,"mutability":"mutable","name":"repaymentChainId","nameLocation":"3879:16:28","nodeType":"VariableDeclaration","scope":7557,"src":"3871:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7555,"name":"uint256","nodeType":"ElementaryTypeName","src":"3871:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"V3RelayExecutionParams","nameLocation":"3683:22:28","nodeType":"StructDefinition","scope":7784,"src":"3676:226:28","visibility":"public"},{"canonicalName":"V3SpokePoolInterface.V3RelayExecutionEventInfo","id":7567,"members":[{"constant":false,"id":7559,"mutability":"mutable","name":"updatedRecipient","nameLocation":"4238:16:28","nodeType":"VariableDeclaration","scope":7567,"src":"4230:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7558,"name":"address","nodeType":"ElementaryTypeName","src":"4230:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7561,"mutability":"mutable","name":"updatedMessage","nameLocation":"4270:14:28","nodeType":"VariableDeclaration","scope":7567,"src":"4264:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":7560,"name":"bytes","nodeType":"ElementaryTypeName","src":"4264:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7563,"mutability":"mutable","name":"updatedOutputAmount","nameLocation":"4302:19:28","nodeType":"VariableDeclaration","scope":7567,"src":"4294:27:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7562,"name":"uint256","nodeType":"ElementaryTypeName","src":"4294:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7566,"mutability":"mutable","name":"fillType","nameLocation":"4340:8:28","nodeType":"VariableDeclaration","scope":7567,"src":"4331:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_FillType_$7510","typeString":"enum V3SpokePoolInterface.FillType"},"typeName":{"id":7565,"nodeType":"UserDefinedTypeName","pathNode":{"id":7564,"name":"FillType","nameLocations":["4331:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":7510,"src":"4331:8:28"},"referencedDeclaration":7510,"src":"4331:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_FillType_$7510","typeString":"enum V3SpokePoolInterface.FillType"}},"visibility":"internal"}],"name":"V3RelayExecutionEventInfo","nameLocation":"4194:25:28","nodeType":"StructDefinition","scope":7784,"src":"4187:168:28","visibility":"public"},{"anonymous":false,"eventSelector":"a123dc29aebf7d0c3322c8eeb5b999e859f39937950ed31056532713d0de396f","id":7595,"name":"V3FundsDeposited","nameLocation":"4501:16:28","nodeType":"EventDefinition","parameters":{"id":7594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7569,"indexed":false,"mutability":"mutable","name":"inputToken","nameLocation":"4535:10:28","nodeType":"VariableDeclaration","scope":7595,"src":"4527:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7568,"name":"address","nodeType":"ElementaryTypeName","src":"4527:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7571,"indexed":false,"mutability":"mutable","name":"outputToken","nameLocation":"4563:11:28","nodeType":"VariableDeclaration","scope":7595,"src":"4555:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7570,"name":"address","nodeType":"ElementaryTypeName","src":"4555:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7573,"indexed":false,"mutability":"mutable","name":"inputAmount","nameLocation":"4592:11:28","nodeType":"VariableDeclaration","scope":7595,"src":"4584:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7572,"name":"uint256","nodeType":"ElementaryTypeName","src":"4584:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7575,"indexed":false,"mutability":"mutable","name":"outputAmount","nameLocation":"4621:12:28","nodeType":"VariableDeclaration","scope":7595,"src":"4613:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7574,"name":"uint256","nodeType":"ElementaryTypeName","src":"4613:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7577,"indexed":true,"mutability":"mutable","name":"destinationChainId","nameLocation":"4659:18:28","nodeType":"VariableDeclaration","scope":7595,"src":"4643:34:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7576,"name":"uint256","nodeType":"ElementaryTypeName","src":"4643:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7579,"indexed":true,"mutability":"mutable","name":"depositId","nameLocation":"4702:9:28","nodeType":"VariableDeclaration","scope":7595,"src":"4687:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7578,"name":"uint32","nodeType":"ElementaryTypeName","src":"4687:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7581,"indexed":false,"mutability":"mutable","name":"quoteTimestamp","nameLocation":"4728:14:28","nodeType":"VariableDeclaration","scope":7595,"src":"4721:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7580,"name":"uint32","nodeType":"ElementaryTypeName","src":"4721:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7583,"indexed":false,"mutability":"mutable","name":"fillDeadline","nameLocation":"4759:12:28","nodeType":"VariableDeclaration","scope":7595,"src":"4752:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7582,"name":"uint32","nodeType":"ElementaryTypeName","src":"4752:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7585,"indexed":false,"mutability":"mutable","name":"exclusivityDeadline","nameLocation":"4788:19:28","nodeType":"VariableDeclaration","scope":7595,"src":"4781:26:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7584,"name":"uint32","nodeType":"ElementaryTypeName","src":"4781:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7587,"indexed":true,"mutability":"mutable","name":"depositor","nameLocation":"4833:9:28","nodeType":"VariableDeclaration","scope":7595,"src":"4817:25:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7586,"name":"address","nodeType":"ElementaryTypeName","src":"4817:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7589,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"4860:9:28","nodeType":"VariableDeclaration","scope":7595,"src":"4852:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7588,"name":"address","nodeType":"ElementaryTypeName","src":"4852:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7591,"indexed":false,"mutability":"mutable","name":"exclusiveRelayer","nameLocation":"4887:16:28","nodeType":"VariableDeclaration","scope":7595,"src":"4879:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7590,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7593,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"4919:7:28","nodeType":"VariableDeclaration","scope":7595,"src":"4913:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7592,"name":"bytes","nodeType":"ElementaryTypeName","src":"4913:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4517:415:28"},"src":"4495:438:28"},{"anonymous":false,"eventSelector":"b0a29aed3d389a1041194255878b423f7780be3ed2324d4693508c6ff189845e","id":7609,"name":"RequestedSpeedUpV3Deposit","nameLocation":"4945:25:28","nodeType":"EventDefinition","parameters":{"id":7608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7597,"indexed":false,"mutability":"mutable","name":"updatedOutputAmount","nameLocation":"4988:19:28","nodeType":"VariableDeclaration","scope":7609,"src":"4980:27:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7596,"name":"uint256","nodeType":"ElementaryTypeName","src":"4980:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7599,"indexed":true,"mutability":"mutable","name":"depositId","nameLocation":"5032:9:28","nodeType":"VariableDeclaration","scope":7609,"src":"5017:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7598,"name":"uint32","nodeType":"ElementaryTypeName","src":"5017:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7601,"indexed":true,"mutability":"mutable","name":"depositor","nameLocation":"5067:9:28","nodeType":"VariableDeclaration","scope":7609,"src":"5051:25:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7600,"name":"address","nodeType":"ElementaryTypeName","src":"5051:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7603,"indexed":false,"mutability":"mutable","name":"updatedRecipient","nameLocation":"5094:16:28","nodeType":"VariableDeclaration","scope":7609,"src":"5086:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7602,"name":"address","nodeType":"ElementaryTypeName","src":"5086:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7605,"indexed":false,"mutability":"mutable","name":"updatedMessage","nameLocation":"5126:14:28","nodeType":"VariableDeclaration","scope":7609,"src":"5120:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7604,"name":"bytes","nodeType":"ElementaryTypeName","src":"5120:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7607,"indexed":false,"mutability":"mutable","name":"depositorSignature","nameLocation":"5156:18:28","nodeType":"VariableDeclaration","scope":7609,"src":"5150:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7606,"name":"bytes","nodeType":"ElementaryTypeName","src":"5150:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4970:210:28"},"src":"4939:242:28"},{"anonymous":false,"eventSelector":"571749edf1d5c9599318cdbc4e28a6475d65e87fd3b2ddbe1e9a8d5e7a0f0ff7","id":7642,"name":"FilledV3Relay","nameLocation":"5193:13:28","nodeType":"EventDefinition","parameters":{"id":7641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7611,"indexed":false,"mutability":"mutable","name":"inputToken","nameLocation":"5224:10:28","nodeType":"VariableDeclaration","scope":7642,"src":"5216:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7610,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7613,"indexed":false,"mutability":"mutable","name":"outputToken","nameLocation":"5252:11:28","nodeType":"VariableDeclaration","scope":7642,"src":"5244:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7612,"name":"address","nodeType":"ElementaryTypeName","src":"5244:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7615,"indexed":false,"mutability":"mutable","name":"inputAmount","nameLocation":"5281:11:28","nodeType":"VariableDeclaration","scope":7642,"src":"5273:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7614,"name":"uint256","nodeType":"ElementaryTypeName","src":"5273:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7617,"indexed":false,"mutability":"mutable","name":"outputAmount","nameLocation":"5310:12:28","nodeType":"VariableDeclaration","scope":7642,"src":"5302:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7616,"name":"uint256","nodeType":"ElementaryTypeName","src":"5302:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7619,"indexed":false,"mutability":"mutable","name":"repaymentChainId","nameLocation":"5340:16:28","nodeType":"VariableDeclaration","scope":7642,"src":"5332:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7618,"name":"uint256","nodeType":"ElementaryTypeName","src":"5332:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7621,"indexed":true,"mutability":"mutable","name":"originChainId","nameLocation":"5382:13:28","nodeType":"VariableDeclaration","scope":7642,"src":"5366:29:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7620,"name":"uint256","nodeType":"ElementaryTypeName","src":"5366:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7623,"indexed":true,"mutability":"mutable","name":"depositId","nameLocation":"5420:9:28","nodeType":"VariableDeclaration","scope":7642,"src":"5405:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7622,"name":"uint32","nodeType":"ElementaryTypeName","src":"5405:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7625,"indexed":false,"mutability":"mutable","name":"fillDeadline","nameLocation":"5446:12:28","nodeType":"VariableDeclaration","scope":7642,"src":"5439:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7624,"name":"uint32","nodeType":"ElementaryTypeName","src":"5439:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7627,"indexed":false,"mutability":"mutable","name":"exclusivityDeadline","nameLocation":"5475:19:28","nodeType":"VariableDeclaration","scope":7642,"src":"5468:26:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7626,"name":"uint32","nodeType":"ElementaryTypeName","src":"5468:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7629,"indexed":false,"mutability":"mutable","name":"exclusiveRelayer","nameLocation":"5512:16:28","nodeType":"VariableDeclaration","scope":7642,"src":"5504:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7628,"name":"address","nodeType":"ElementaryTypeName","src":"5504:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7631,"indexed":true,"mutability":"mutable","name":"relayer","nameLocation":"5554:7:28","nodeType":"VariableDeclaration","scope":7642,"src":"5538:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7630,"name":"address","nodeType":"ElementaryTypeName","src":"5538:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7633,"indexed":false,"mutability":"mutable","name":"depositor","nameLocation":"5579:9:28","nodeType":"VariableDeclaration","scope":7642,"src":"5571:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7632,"name":"address","nodeType":"ElementaryTypeName","src":"5571:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7635,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"5606:9:28","nodeType":"VariableDeclaration","scope":7642,"src":"5598:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7634,"name":"address","nodeType":"ElementaryTypeName","src":"5598:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7637,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"5631:7:28","nodeType":"VariableDeclaration","scope":7642,"src":"5625:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7636,"name":"bytes","nodeType":"ElementaryTypeName","src":"5625:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7640,"indexed":false,"mutability":"mutable","name":"relayExecutionInfo","nameLocation":"5674:18:28","nodeType":"VariableDeclaration","scope":7642,"src":"5648:44:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionEventInfo_$7567_memory_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionEventInfo"},"typeName":{"id":7639,"nodeType":"UserDefinedTypeName","pathNode":{"id":7638,"name":"V3RelayExecutionEventInfo","nameLocations":["5648:25:28"],"nodeType":"IdentifierPath","referencedDeclaration":7567,"src":"5648:25:28"},"referencedDeclaration":7567,"src":"5648:25:28","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayExecutionEventInfo_$7567_storage_ptr","typeString":"struct V3SpokePoolInterface.V3RelayExecutionEventInfo"}},"visibility":"internal"}],"src":"5206:492:28"},"src":"5187:512:28"},{"anonymous":false,"eventSelector":"923794976d026d6b119735adc163cb71decfc903e17c3dc226c00789593c04e1","id":7668,"name":"RequestedV3SlowFill","nameLocation":"5711:19:28","nodeType":"EventDefinition","parameters":{"id":7667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7644,"indexed":false,"mutability":"mutable","name":"inputToken","nameLocation":"5748:10:28","nodeType":"VariableDeclaration","scope":7668,"src":"5740:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7643,"name":"address","nodeType":"ElementaryTypeName","src":"5740:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7646,"indexed":false,"mutability":"mutable","name":"outputToken","nameLocation":"5776:11:28","nodeType":"VariableDeclaration","scope":7668,"src":"5768:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7645,"name":"address","nodeType":"ElementaryTypeName","src":"5768:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7648,"indexed":false,"mutability":"mutable","name":"inputAmount","nameLocation":"5805:11:28","nodeType":"VariableDeclaration","scope":7668,"src":"5797:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7647,"name":"uint256","nodeType":"ElementaryTypeName","src":"5797:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7650,"indexed":false,"mutability":"mutable","name":"outputAmount","nameLocation":"5834:12:28","nodeType":"VariableDeclaration","scope":7668,"src":"5826:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7649,"name":"uint256","nodeType":"ElementaryTypeName","src":"5826:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7652,"indexed":true,"mutability":"mutable","name":"originChainId","nameLocation":"5872:13:28","nodeType":"VariableDeclaration","scope":7668,"src":"5856:29:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7651,"name":"uint256","nodeType":"ElementaryTypeName","src":"5856:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7654,"indexed":true,"mutability":"mutable","name":"depositId","nameLocation":"5910:9:28","nodeType":"VariableDeclaration","scope":7668,"src":"5895:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7653,"name":"uint32","nodeType":"ElementaryTypeName","src":"5895:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7656,"indexed":false,"mutability":"mutable","name":"fillDeadline","nameLocation":"5936:12:28","nodeType":"VariableDeclaration","scope":7668,"src":"5929:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7655,"name":"uint32","nodeType":"ElementaryTypeName","src":"5929:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7658,"indexed":false,"mutability":"mutable","name":"exclusivityDeadline","nameLocation":"5965:19:28","nodeType":"VariableDeclaration","scope":7668,"src":"5958:26:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7657,"name":"uint32","nodeType":"ElementaryTypeName","src":"5958:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7660,"indexed":false,"mutability":"mutable","name":"exclusiveRelayer","nameLocation":"6002:16:28","nodeType":"VariableDeclaration","scope":7668,"src":"5994:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7659,"name":"address","nodeType":"ElementaryTypeName","src":"5994:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7662,"indexed":false,"mutability":"mutable","name":"depositor","nameLocation":"6036:9:28","nodeType":"VariableDeclaration","scope":7668,"src":"6028:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7661,"name":"address","nodeType":"ElementaryTypeName","src":"6028:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7664,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"6063:9:28","nodeType":"VariableDeclaration","scope":7668,"src":"6055:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7663,"name":"address","nodeType":"ElementaryTypeName","src":"6055:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7666,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"6088:7:28","nodeType":"VariableDeclaration","scope":7668,"src":"6082:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7665,"name":"bytes","nodeType":"ElementaryTypeName","src":"6082:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5730:371:28"},"src":"5705:397:28"},{"functionSelector":"7b939232","id":7695,"implemented":false,"kind":"function","modifiers":[],"name":"depositV3","nameLocation":"6251:9:28","nodeType":"FunctionDefinition","parameters":{"id":7693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7670,"mutability":"mutable","name":"depositor","nameLocation":"6278:9:28","nodeType":"VariableDeclaration","scope":7695,"src":"6270:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7669,"name":"address","nodeType":"ElementaryTypeName","src":"6270:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7672,"mutability":"mutable","name":"recipient","nameLocation":"6305:9:28","nodeType":"VariableDeclaration","scope":7695,"src":"6297:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7671,"name":"address","nodeType":"ElementaryTypeName","src":"6297:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7674,"mutability":"mutable","name":"inputToken","nameLocation":"6332:10:28","nodeType":"VariableDeclaration","scope":7695,"src":"6324:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7673,"name":"address","nodeType":"ElementaryTypeName","src":"6324:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7676,"mutability":"mutable","name":"outputToken","nameLocation":"6360:11:28","nodeType":"VariableDeclaration","scope":7695,"src":"6352:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7675,"name":"address","nodeType":"ElementaryTypeName","src":"6352:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7678,"mutability":"mutable","name":"inputAmount","nameLocation":"6389:11:28","nodeType":"VariableDeclaration","scope":7695,"src":"6381:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7677,"name":"uint256","nodeType":"ElementaryTypeName","src":"6381:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7680,"mutability":"mutable","name":"outputAmount","nameLocation":"6418:12:28","nodeType":"VariableDeclaration","scope":7695,"src":"6410:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7679,"name":"uint256","nodeType":"ElementaryTypeName","src":"6410:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7682,"mutability":"mutable","name":"destinationChainId","nameLocation":"6448:18:28","nodeType":"VariableDeclaration","scope":7695,"src":"6440:26:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7681,"name":"uint256","nodeType":"ElementaryTypeName","src":"6440:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7684,"mutability":"mutable","name":"exclusiveRelayer","nameLocation":"6484:16:28","nodeType":"VariableDeclaration","scope":7695,"src":"6476:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7683,"name":"address","nodeType":"ElementaryTypeName","src":"6476:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7686,"mutability":"mutable","name":"quoteTimestamp","nameLocation":"6517:14:28","nodeType":"VariableDeclaration","scope":7695,"src":"6510:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7685,"name":"uint32","nodeType":"ElementaryTypeName","src":"6510:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7688,"mutability":"mutable","name":"fillDeadline","nameLocation":"6548:12:28","nodeType":"VariableDeclaration","scope":7695,"src":"6541:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7687,"name":"uint32","nodeType":"ElementaryTypeName","src":"6541:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7690,"mutability":"mutable","name":"exclusivityDeadline","nameLocation":"6577:19:28","nodeType":"VariableDeclaration","scope":7695,"src":"6570:26:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7689,"name":"uint32","nodeType":"ElementaryTypeName","src":"6570:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7692,"mutability":"mutable","name":"message","nameLocation":"6621:7:28","nodeType":"VariableDeclaration","scope":7695,"src":"6606:22:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7691,"name":"bytes","nodeType":"ElementaryTypeName","src":"6606:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6260:374:28"},"returnParameters":{"id":7694,"nodeType":"ParameterList","parameters":[],"src":"6651:0:28"},"scope":7784,"src":"6242:410:28","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"4e0fb8f5","id":7710,"implemented":false,"kind":"function","modifiers":[],"name":"speedUpV3Deposit","nameLocation":"6667:16:28","nodeType":"FunctionDefinition","parameters":{"id":7708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7697,"mutability":"mutable","name":"depositor","nameLocation":"6701:9:28","nodeType":"VariableDeclaration","scope":7710,"src":"6693:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7696,"name":"address","nodeType":"ElementaryTypeName","src":"6693:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7699,"mutability":"mutable","name":"depositId","nameLocation":"6727:9:28","nodeType":"VariableDeclaration","scope":7710,"src":"6720:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7698,"name":"uint32","nodeType":"ElementaryTypeName","src":"6720:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7701,"mutability":"mutable","name":"updatedOutputAmount","nameLocation":"6754:19:28","nodeType":"VariableDeclaration","scope":7710,"src":"6746:27:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7700,"name":"uint256","nodeType":"ElementaryTypeName","src":"6746:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7703,"mutability":"mutable","name":"updatedRecipient","nameLocation":"6791:16:28","nodeType":"VariableDeclaration","scope":7710,"src":"6783:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7702,"name":"address","nodeType":"ElementaryTypeName","src":"6783:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7705,"mutability":"mutable","name":"updatedMessage","nameLocation":"6832:14:28","nodeType":"VariableDeclaration","scope":7710,"src":"6817:29:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7704,"name":"bytes","nodeType":"ElementaryTypeName","src":"6817:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7707,"mutability":"mutable","name":"depositorSignature","nameLocation":"6871:18:28","nodeType":"VariableDeclaration","scope":7710,"src":"6856:33:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7706,"name":"bytes","nodeType":"ElementaryTypeName","src":"6856:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6683:212:28"},"returnParameters":{"id":7709,"nodeType":"ParameterList","parameters":[],"src":"6904:0:28"},"scope":7784,"src":"6658:247:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2e378115","id":7718,"implemented":false,"kind":"function","modifiers":[],"name":"fillV3Relay","nameLocation":"6920:11:28","nodeType":"FunctionDefinition","parameters":{"id":7716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7713,"mutability":"mutable","name":"relayData","nameLocation":"6953:9:28","nodeType":"VariableDeclaration","scope":7718,"src":"6932:30:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$7535_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"},"typeName":{"id":7712,"nodeType":"UserDefinedTypeName","pathNode":{"id":7711,"name":"V3RelayData","nameLocations":["6932:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":7535,"src":"6932:11:28"},"referencedDeclaration":7535,"src":"6932:11:28","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$7535_storage_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"}},"visibility":"internal"},{"constant":false,"id":7715,"mutability":"mutable","name":"repaymentChainId","nameLocation":"6972:16:28","nodeType":"VariableDeclaration","scope":7718,"src":"6964:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7714,"name":"uint256","nodeType":"ElementaryTypeName","src":"6964:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6931:58:28"},"returnParameters":{"id":7717,"nodeType":"ParameterList","parameters":[],"src":"6998:0:28"},"scope":7784,"src":"6911:88:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ccfa5971","id":7734,"implemented":false,"kind":"function","modifiers":[],"name":"fillV3RelayWithUpdatedDeposit","nameLocation":"7014:29:28","nodeType":"FunctionDefinition","parameters":{"id":7732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7721,"mutability":"mutable","name":"relayData","nameLocation":"7074:9:28","nodeType":"VariableDeclaration","scope":7734,"src":"7053:30:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$7535_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"},"typeName":{"id":7720,"nodeType":"UserDefinedTypeName","pathNode":{"id":7719,"name":"V3RelayData","nameLocations":["7053:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":7535,"src":"7053:11:28"},"referencedDeclaration":7535,"src":"7053:11:28","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$7535_storage_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"}},"visibility":"internal"},{"constant":false,"id":7723,"mutability":"mutable","name":"repaymentChainId","nameLocation":"7101:16:28","nodeType":"VariableDeclaration","scope":7734,"src":"7093:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7722,"name":"uint256","nodeType":"ElementaryTypeName","src":"7093:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7725,"mutability":"mutable","name":"updatedOutputAmount","nameLocation":"7135:19:28","nodeType":"VariableDeclaration","scope":7734,"src":"7127:27:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7724,"name":"uint256","nodeType":"ElementaryTypeName","src":"7127:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7727,"mutability":"mutable","name":"updatedRecipient","nameLocation":"7172:16:28","nodeType":"VariableDeclaration","scope":7734,"src":"7164:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7726,"name":"address","nodeType":"ElementaryTypeName","src":"7164:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7729,"mutability":"mutable","name":"updatedMessage","nameLocation":"7213:14:28","nodeType":"VariableDeclaration","scope":7734,"src":"7198:29:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7728,"name":"bytes","nodeType":"ElementaryTypeName","src":"7198:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7731,"mutability":"mutable","name":"depositorSignature","nameLocation":"7252:18:28","nodeType":"VariableDeclaration","scope":7734,"src":"7237:33:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7730,"name":"bytes","nodeType":"ElementaryTypeName","src":"7237:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7043:233:28"},"returnParameters":{"id":7733,"nodeType":"ParameterList","parameters":[],"src":"7285:0:28"},"scope":7784,"src":"7005:281:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9963e5a8","id":7740,"implemented":false,"kind":"function","modifiers":[],"name":"requestV3SlowFill","nameLocation":"7301:17:28","nodeType":"FunctionDefinition","parameters":{"id":7738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7737,"mutability":"mutable","name":"relayData","nameLocation":"7340:9:28","nodeType":"VariableDeclaration","scope":7740,"src":"7319:30:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$7535_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"},"typeName":{"id":7736,"nodeType":"UserDefinedTypeName","pathNode":{"id":7735,"name":"V3RelayData","nameLocations":["7319:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":7535,"src":"7319:11:28"},"referencedDeclaration":7535,"src":"7319:11:28","typeDescriptions":{"typeIdentifier":"t_struct$_V3RelayData_$7535_storage_ptr","typeString":"struct V3SpokePoolInterface.V3RelayData"}},"visibility":"internal"}],"src":"7318:32:28"},"returnParameters":{"id":7739,"nodeType":"ParameterList","parameters":[],"src":"7359:0:28"},"scope":7784,"src":"7292:68:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"bbca7db0","id":7751,"implemented":false,"kind":"function","modifiers":[],"name":"executeV3SlowRelayLeaf","nameLocation":"7375:22:28","nodeType":"FunctionDefinition","parameters":{"id":7749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7743,"mutability":"mutable","name":"slowFillLeaf","nameLocation":"7427:12:28","nodeType":"VariableDeclaration","scope":7751,"src":"7407:32:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_V3SlowFill_$7543_calldata_ptr","typeString":"struct V3SpokePoolInterface.V3SlowFill"},"typeName":{"id":7742,"nodeType":"UserDefinedTypeName","pathNode":{"id":7741,"name":"V3SlowFill","nameLocations":["7407:10:28"],"nodeType":"IdentifierPath","referencedDeclaration":7543,"src":"7407:10:28"},"referencedDeclaration":7543,"src":"7407:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_V3SlowFill_$7543_storage_ptr","typeString":"struct V3SpokePoolInterface.V3SlowFill"}},"visibility":"internal"},{"constant":false,"id":7745,"mutability":"mutable","name":"rootBundleId","nameLocation":"7456:12:28","nodeType":"VariableDeclaration","scope":7751,"src":"7449:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7744,"name":"uint32","nodeType":"ElementaryTypeName","src":"7449:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7748,"mutability":"mutable","name":"proof","nameLocation":"7497:5:28","nodeType":"VariableDeclaration","scope":7751,"src":"7478:24:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7746,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7478:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7747,"nodeType":"ArrayTypeName","src":"7478:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7397:111:28"},"returnParameters":{"id":7750,"nodeType":"ParameterList","parameters":[],"src":"7517:0:28"},"scope":7784,"src":"7366:152:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"errorSelector":"2a58c4f3","id":7753,"name":"DisabledRoute","nameLocation":"7664:13:28","nodeType":"ErrorDefinition","parameters":{"id":7752,"nodeType":"ParameterList","parameters":[],"src":"7677:2:28"},"src":"7658:22:28"},{"errorSelector":"f722177f","id":7755,"name":"InvalidQuoteTimestamp","nameLocation":"7691:21:28","nodeType":"ErrorDefinition","parameters":{"id":7754,"nodeType":"ParameterList","parameters":[],"src":"7712:2:28"},"src":"7685:30:28"},{"errorSelector":"582e3889","id":7757,"name":"InvalidFillDeadline","nameLocation":"7726:19:28","nodeType":"ErrorDefinition","parameters":{"id":7756,"nodeType":"ParameterList","parameters":[],"src":"7745:2:28"},"src":"7720:28:28"},{"errorSelector":"495d907f","id":7759,"name":"InvalidExclusiveRelayer","nameLocation":"7759:23:28","nodeType":"ErrorDefinition","parameters":{"id":7758,"nodeType":"ParameterList","parameters":[],"src":"7782:2:28"},"src":"7753:32:28"},{"errorSelector":"25a63a5b","id":7761,"name":"InvalidExclusivityDeadline","nameLocation":"7796:26:28","nodeType":"ErrorDefinition","parameters":{"id":7760,"nodeType":"ParameterList","parameters":[],"src":"7822:2:28"},"src":"7790:35:28"},{"errorSelector":"6452a35d","id":7763,"name":"MsgValueDoesNotMatchInputAmount","nameLocation":"7836:31:28","nodeType":"ErrorDefinition","parameters":{"id":7762,"nodeType":"ParameterList","parameters":[],"src":"7867:2:28"},"src":"7830:40:28"},{"errorSelector":"c3a9b9d0","id":7765,"name":"NotExclusiveRelayer","nameLocation":"7881:19:28","nodeType":"ErrorDefinition","parameters":{"id":7764,"nodeType":"ParameterList","parameters":[],"src":"7900:2:28"},"src":"7875:28:28"},{"errorSelector":"09deb9ec","id":7767,"name":"NoSlowFillsInExclusivityWindow","nameLocation":"7914:30:28","nodeType":"ErrorDefinition","parameters":{"id":7766,"nodeType":"ParameterList","parameters":[],"src":"7944:2:28"},"src":"7908:39:28"},{"errorSelector":"8f260c60","id":7769,"name":"RelayFilled","nameLocation":"7958:11:28","nodeType":"ErrorDefinition","parameters":{"id":7768,"nodeType":"ParameterList","parameters":[],"src":"7969:2:28"},"src":"7952:20:28"},{"errorSelector":"012f9e44","id":7771,"name":"InvalidSlowFillRequest","nameLocation":"7983:22:28","nodeType":"ErrorDefinition","parameters":{"id":7770,"nodeType":"ParameterList","parameters":[],"src":"8005:2:28"},"src":"7977:31:28"},{"errorSelector":"d642b7d9","id":7773,"name":"ExpiredFillDeadline","nameLocation":"8019:19:28","nodeType":"ErrorDefinition","parameters":{"id":7772,"nodeType":"ParameterList","parameters":[],"src":"8038:2:28"},"src":"8013:28:28"},{"errorSelector":"b05e92fa","id":7775,"name":"InvalidMerkleProof","nameLocation":"8052:18:28","nodeType":"ErrorDefinition","parameters":{"id":7774,"nodeType":"ParameterList","parameters":[],"src":"8070:2:28"},"src":"8046:27:28"},{"errorSelector":"7a47c9a2","id":7777,"name":"InvalidChainId","nameLocation":"8084:14:28","nodeType":"ErrorDefinition","parameters":{"id":7776,"nodeType":"ParameterList","parameters":[],"src":"8098:2:28"},"src":"8078:23:28"},{"errorSelector":"cd298b38","id":7779,"name":"InvalidMerkleLeaf","nameLocation":"8112:17:28","nodeType":"ErrorDefinition","parameters":{"id":7778,"nodeType":"ParameterList","parameters":[],"src":"8129:2:28"},"src":"8106:26:28"},{"errorSelector":"954476d9","id":7781,"name":"ClaimedMerkleLeaf","nameLocation":"8143:17:28","nodeType":"ErrorDefinition","parameters":{"id":7780,"nodeType":"ParameterList","parameters":[],"src":"8160:2:28"},"src":"8137:26:28"},{"errorSelector":"a693f051","id":7783,"name":"InvalidPayoutAdjustmentPct","nameLocation":"8174:26:28","nodeType":"ErrorDefinition","parameters":{"id":7782,"nodeType":"ParameterList","parameters":[],"src":"8200:2:28"},"src":"8168:35:28"}],"scope":7785,"src":"160:8045:28","usedErrors":[7753,7755,7757,7759,7761,7763,7765,7767,7769,7771,7773,7775,7777,7779,7781,7783],"usedEvents":[7595,7609,7642,7668]}],"src":"37:8169:28"},"id":28}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220e79a53b961ff678715c2037b5b41ee92f5ed11f46334e3775c0ae7fa08b20ea064736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 SWAP11 MSTORE8 0xB9 PUSH2 0xFF67 DUP8 ISZERO 0xC2 SUB PUSH28 0x5B41EE92F5ED11F46334E3775C0AE7FA08B20EA064736F6C63430008 OR STOP CALLER ","sourceMap":"701:6234:3:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220e79a53b961ff678715c2037b5b41ee92f5ed11f46334e3775c0ae7fa08b20ea064736f6c63430008170033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 SWAP11 MSTORE8 0xB9 PUSH2 0xFF67 DUP8 ISZERO 0xC2 SUB PUSH28 0x5B41EE92F5ED11F46334E3775C0AE7FA08B20EA064736F6C63430008 OR STOP CALLER ","sourceMap":"701:6234:3:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220f7111e13631a97b266090b7083b2ceeebaea103ac50d017aed527e46c20deacc64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 GT 0x1E SGT PUSH4 0x1A97B266 MULMOD SIGNEXTEND PUSH17 0x83B2CEEEBAEA103AC50D017AED527E46C2 0xD 0xEA 0xCC PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"194:9169:4:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220f7111e13631a97b266090b7083b2ceeebaea103ac50d017aed527e46c20deacc64736f6c63430008170033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 GT 0x1E SGT PUSH4 0x1A97B266 MULMOD SIGNEXTEND PUSH17 0x83B2CEEEBAEA103AC50D017AED527E46C2 0xD 0xEA 0xCC PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"194:9169:4:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212202dbff665943378d88be1381aae91703e6f3b9c0cf38a1e3ae7f22796dba505d264736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0xBF 0xF6 PUSH6 0x943378D88BE1 CODESIZE BYTE 0xAE SWAP2 PUSH17 0x3E6F3B9C0CF38A1E3AE7F22796DBA505D2 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"802:8819:6:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea26469706673582212202dbff665943378d88be1381aae91703e6f3b9c0cf38a1e3ae7f22796dba505d264736f6c63430008170033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0xBF 0xF6 PUSH6 0x943378D88BE1 CODESIZE BYTE 0xAE SWAP2 PUSH17 0x3E6F3B9C0CF38A1E3AE7F22796DBA505D2 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"802:8819:6:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates merkle trees that are safe against this attack out of the box.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212200ee6a988f90991e0c953734e6b26a615acd890b810e7cd5ccc94c21ac5b84d9364736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0xE6 0xA9 DUP9 0xF9 MULMOD SWAP2 0xE0 0xC9 MSTORE8 PUSH20 0x4E6B26A615ACD890B810E7CD5CCC94C21AC5B84D SWAP4 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"482:6210:7:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea26469706673582212200ee6a988f90991e0c953734e6b26a615acd890b810e7cd5ccc94c21ac5b84d9364736f6c63430008170033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0xE6 0xA9 DUP9 0xF9 MULMOD SWAP2 0xE0 0xC9 MSTORE8 PUSH20 0x4E6B26A615ACD890B810E7CD5CCC94C21AC5B84D SWAP4 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"482:6210:7:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedSafeMath.sol":{"SignedSafeMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122071a18e0b773a57ed769f608424d33b9723a958c9f5ff7eee1a50687bf8cf7d2264736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xA18E0B773A57ED769F608424D33B9723A958 0xC9 CREATE2 SELFDESTRUCT PUSH31 0xEE1A50687BF8CF7D2264736F6C634300081700330000000000000000000000 ","sourceMap":"316:1399:8:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea264697066735822122071a18e0b773a57ed769f608424d33b9723a958c9f5ff7eee1a50687bf8cf7d2264736f6c63430008170033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xA18E0B773A57ED769F608424D33B9723A958 0xC9 CREATE2 SELFDESTRUCT PUSH31 0xEE1A50687BF8CF7D2264736F6C634300081700330000000000000000000000 ","sourceMap":"316:1399:8:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SignedSafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedSafeMath.sol\":\"SignedSafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedSafeMath.sol\":{\"keccak256\":\"0x62f53f262fabbbc6d8ab49488d8fce36370351aff2b8d3898d499d68995a71c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efd599513c2f313a3f5e9536beb2b80a0d2b3dd34202c174a707d81b7dc751ce\",\"dweb:/ipfs/QmdDiENVFSyWjfFskNLnViMH77DHg3oDthkSZk7dMzNNKB\"]}},\"version\":1}"}},"@uma/core/contracts/common/implementation/FixedPoint.sol":{"FixedPoint":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122028a4ead779abacdc00264f63215b6e9930d6267211788099292b11128b5d776d64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 LOG4 0xEA 0xD7 PUSH26 0xABACDC00264F63215B6E9930D6267211788099292B11128B5D77 PUSH14 0x64736F6C63430008170033000000 ","sourceMap":"252:28526:9:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea264697066735822122028a4ead779abacdc00264f63215b6e9930d6267211788099292b11128b5d776d64736f6c63430008170033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 LOG4 0xEA 0xD7 PUSH26 0xABACDC00264F63215B6E9930D6267211788099292B11128B5D77 PUSH14 0x64736F6C63430008170033000000 ","sourceMap":"252:28526:9:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Library for fixed point arithmetic on uints\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uma/core/contracts/common/implementation/FixedPoint.sol\":\"FixedPoint\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"@openzeppelin/contracts/utils/math/SignedSafeMath.sol\":{\"keccak256\":\"0x62f53f262fabbbc6d8ab49488d8fce36370351aff2b8d3898d499d68995a71c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efd599513c2f313a3f5e9536beb2b80a0d2b3dd34202c174a707d81b7dc751ce\",\"dweb:/ipfs/QmdDiENVFSyWjfFskNLnViMH77DHg3oDthkSZk7dMzNNKB\"]},\"@uma/core/contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0x996b97cc4fa5da4064e3aee500edc6972485d59a9334ceec81155e2c2f484dae\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8d7c028926dc2b27e7dc103363dca8a43f60b3351f4a14bcb702660f95c68663\",\"dweb:/ipfs/QmXz4ieFjP5RxJ35F8GbPryYEGvFmxc4Gqx8EK7N57ixzT\"]}},\"version\":1}"}},"@uma/core/contracts/common/implementation/MultiCaller.sol":{"MultiCaller":{"abi":[{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234610016576103f9908161001b8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c63ac9650d814610024575f80fd5b3461008e57602036600319011261008e5767ffffffffffffffff60043581811161008e573660238201121561008e57806004013591821161008e573660248360051b8301011161008e5761008a91602461007e92016102fc565b604051918291826100d8565b0390f35b5f80fd5b5f5b8381106100a35750505f910152565b8181015183820152602001610094565b906020916100cc81518092818552858086019101610092565b601f01601f1916010190565b6020808201906020835283518092526040830192602060408460051b8301019501935f915b84831061010d5750505050505090565b909192939495848061012b600193603f198682030187528a516100b3565b98019301930191949392906100fd565b634e487b7160e01b5f52604160045260245ffd5b6040519190601f01601f1916820167ffffffffffffffff81118382101761017557604052565b61013b565b67ffffffffffffffff81116101755760051b60200190565b906101a461019f8361017a565b61014f565b82815280926101b5601f199161017a565b01905f5b8281106101c557505050565b8060606020809385010152016101b9565b634e487b7160e01b5f52603260045260245ffd5b919081101561022c5760051b81013590601e198136030182121561008e57019081359167ffffffffffffffff831161008e57602001823603811361008e579190565b6101d6565b908092918237015f815290565b67ffffffffffffffff811161017557601f01601f191660200190565b3d1561027a573d9061026e61019f8361023e565b9182523d5f602084013e565b606090565b60208183031261008e5780519067ffffffffffffffff821161008e570181601f8201121561008e5780516102b561019f8261023e565b928184526020828401011161008e576102d49160208085019101610092565b90565b9060206102d49281815201906100b3565b805182101561022c5760209160051b010190565b91909161030883610192565b925f5b81811061031757505050565b5f806103248385876101ea565b60409391610336855180938193610231565b0390305af49061034461025a565b911561036b57509060019161035982886102e8565b5261036481876102e8565b500161030b565b90604481511061008e576103bf6103906004928381015160248091830101910161027f565b92519283927f08c379a000000000000000000000000000000000000000000000000000000000845283016102d7565b0390fdfea26469706673582212202fe4f054f26d6e84f895fc4fd6e7ff0a888c1d4e1e19de34f2ad695acf22a10064736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x3F9 SWAP1 DUP2 PUSH2 0x1B DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0xAC9650D8 EQ PUSH2 0x24 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x8E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x8E JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x8E JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x8E JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x8E JUMPI CALLDATASIZE PUSH1 0x24 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD GT PUSH2 0x8E JUMPI PUSH2 0x8A SWAP2 PUSH1 0x24 PUSH2 0x7E SWAP3 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xD8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0xA3 JUMPI POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x94 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0xCC DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x92 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD SWAP1 PUSH1 0x20 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP3 PUSH1 0x20 PUSH1 0x40 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x10D JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x12B PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0xB3 JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0xFD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP4 DUP3 LT OR PUSH2 0x175 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x13B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x175 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1A4 PUSH2 0x19F DUP4 PUSH2 0x17A JUMP JUMPDEST PUSH2 0x14F JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1B5 PUSH1 0x1F NOT SWAP2 PUSH2 0x17A JUMP JUMPDEST ADD SWAP1 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1C5 JUMPI POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x60 PUSH1 0x20 DUP1 SWAP4 DUP6 ADD ADD MSTORE ADD PUSH2 0x1B9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x22C JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x8E JUMPI ADD SWAP1 DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x8E JUMPI PUSH1 0x20 ADD DUP3 CALLDATASIZE SUB DUP2 SGT PUSH2 0x8E JUMPI SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x1D6 JUMP JUMPDEST SWAP1 DUP1 SWAP3 SWAP2 DUP3 CALLDATACOPY ADD PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x175 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x27A JUMPI RETURNDATASIZE SWAP1 PUSH2 0x26E PUSH2 0x19F DUP4 PUSH2 0x23E JUMP JUMPDEST SWAP2 DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x8E JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x8E JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x8E JUMPI DUP1 MLOAD PUSH2 0x2B5 PUSH2 0x19F DUP3 PUSH2 0x23E JUMP JUMPDEST SWAP3 DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x8E JUMPI PUSH2 0x2D4 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x92 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x2D4 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0xB3 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x22C JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x308 DUP4 PUSH2 0x192 JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x317 JUMPI POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x324 DUP4 DUP6 DUP8 PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x40 SWAP4 SWAP2 PUSH2 0x336 DUP6 MLOAD DUP1 SWAP4 DUP2 SWAP4 PUSH2 0x231 JUMP JUMPDEST SUB SWAP1 ADDRESS GAS DELEGATECALL SWAP1 PUSH2 0x344 PUSH2 0x25A JUMP JUMPDEST SWAP2 ISZERO PUSH2 0x36B JUMPI POP SWAP1 PUSH1 0x1 SWAP2 PUSH2 0x359 DUP3 DUP9 PUSH2 0x2E8 JUMP JUMPDEST MSTORE PUSH2 0x364 DUP2 DUP8 PUSH2 0x2E8 JUMP JUMPDEST POP ADD PUSH2 0x30B JUMP JUMPDEST SWAP1 PUSH1 0x44 DUP2 MLOAD LT PUSH2 0x8E JUMPI PUSH2 0x3BF PUSH2 0x390 PUSH1 0x4 SWAP3 DUP4 DUP2 ADD MLOAD PUSH1 0x24 DUP1 SWAP2 DUP4 ADD ADD SWAP2 ADD PUSH2 0x27F JUMP JUMPDEST SWAP3 MLOAD SWAP3 DUP4 SWAP3 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP4 ADD PUSH2 0x2D7 JUMP JUMPDEST SUB SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xE4 CREATE SLOAD CALLCODE PUSH14 0x6E84F895FC4FD6E7FF0A888C1D4E 0x1E NOT 0xDE CALLVALUE CALLCODE 0xAD PUSH10 0x5ACF22A10064736F6C63 NUMBER STOP ADDMOD OR STOP CALLER ","sourceMap":"543:667:10:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_string_fromMemory":{"entryPoint":639,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_bytes_dyn":{"entryPoint":216,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes":{"entryPoint":179,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes_calldata":{"entryPoint":561,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":727,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_bytes_dyn":{"entryPoint":402,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":335,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_bytes_dyn":{"entryPoint":378,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":574,"id":null,"parameterSlots":1,"returnSlots":1},"calldata_array_index_access_bytes_calldata_dyn_calldata":{"entryPoint":490,"id":null,"parameterSlots":3,"returnSlots":2},"copy_memory_to_memory_with_cleanup":{"entryPoint":146,"id":null,"parameterSlots":3,"returnSlots":0},"extract_returndata":{"entryPoint":602,"id":null,"parameterSlots":0,"returnSlots":1},"fun_multicall":{"entryPoint":764,"id":3569,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_bytes_dyn":{"entryPoint":744,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x32":{"entryPoint":470,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":315,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361015610011575f80fd5b5f3560e01c63ac9650d814610024575f80fd5b3461008e57602036600319011261008e5767ffffffffffffffff60043581811161008e573660238201121561008e57806004013591821161008e573660248360051b8301011161008e5761008a91602461007e92016102fc565b604051918291826100d8565b0390f35b5f80fd5b5f5b8381106100a35750505f910152565b8181015183820152602001610094565b906020916100cc81518092818552858086019101610092565b601f01601f1916010190565b6020808201906020835283518092526040830192602060408460051b8301019501935f915b84831061010d5750505050505090565b909192939495848061012b600193603f198682030187528a516100b3565b98019301930191949392906100fd565b634e487b7160e01b5f52604160045260245ffd5b6040519190601f01601f1916820167ffffffffffffffff81118382101761017557604052565b61013b565b67ffffffffffffffff81116101755760051b60200190565b906101a461019f8361017a565b61014f565b82815280926101b5601f199161017a565b01905f5b8281106101c557505050565b8060606020809385010152016101b9565b634e487b7160e01b5f52603260045260245ffd5b919081101561022c5760051b81013590601e198136030182121561008e57019081359167ffffffffffffffff831161008e57602001823603811361008e579190565b6101d6565b908092918237015f815290565b67ffffffffffffffff811161017557601f01601f191660200190565b3d1561027a573d9061026e61019f8361023e565b9182523d5f602084013e565b606090565b60208183031261008e5780519067ffffffffffffffff821161008e570181601f8201121561008e5780516102b561019f8261023e565b928184526020828401011161008e576102d49160208085019101610092565b90565b9060206102d49281815201906100b3565b805182101561022c5760209160051b010190565b91909161030883610192565b925f5b81811061031757505050565b5f806103248385876101ea565b60409391610336855180938193610231565b0390305af49061034461025a565b911561036b57509060019161035982886102e8565b5261036481876102e8565b500161030b565b90604481511061008e576103bf6103906004928381015160248091830101910161027f565b92519283927f08c379a000000000000000000000000000000000000000000000000000000000845283016102d7565b0390fdfea26469706673582212202fe4f054f26d6e84f895fc4fd6e7ff0a888c1d4e1e19de34f2ad695acf22a10064736f6c63430008170033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0xAC9650D8 EQ PUSH2 0x24 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x8E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x8E JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x8E JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x8E JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x8E JUMPI CALLDATASIZE PUSH1 0x24 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD GT PUSH2 0x8E JUMPI PUSH2 0x8A SWAP2 PUSH1 0x24 PUSH2 0x7E SWAP3 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xD8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0xA3 JUMPI POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x94 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0xCC DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x92 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD SWAP1 PUSH1 0x20 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP3 PUSH1 0x20 PUSH1 0x40 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x10D JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x12B PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0xB3 JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0xFD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP4 DUP3 LT OR PUSH2 0x175 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x13B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x175 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1A4 PUSH2 0x19F DUP4 PUSH2 0x17A JUMP JUMPDEST PUSH2 0x14F JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1B5 PUSH1 0x1F NOT SWAP2 PUSH2 0x17A JUMP JUMPDEST ADD SWAP1 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1C5 JUMPI POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x60 PUSH1 0x20 DUP1 SWAP4 DUP6 ADD ADD MSTORE ADD PUSH2 0x1B9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x22C JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x8E JUMPI ADD SWAP1 DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x8E JUMPI PUSH1 0x20 ADD DUP3 CALLDATASIZE SUB DUP2 SGT PUSH2 0x8E JUMPI SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x1D6 JUMP JUMPDEST SWAP1 DUP1 SWAP3 SWAP2 DUP3 CALLDATACOPY ADD PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x175 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x27A JUMPI RETURNDATASIZE SWAP1 PUSH2 0x26E PUSH2 0x19F DUP4 PUSH2 0x23E JUMP JUMPDEST SWAP2 DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x8E JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x8E JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x8E JUMPI DUP1 MLOAD PUSH2 0x2B5 PUSH2 0x19F DUP3 PUSH2 0x23E JUMP JUMPDEST SWAP3 DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x8E JUMPI PUSH2 0x2D4 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x92 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x2D4 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0xB3 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x22C JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x308 DUP4 PUSH2 0x192 JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x317 JUMPI POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x324 DUP4 DUP6 DUP8 PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x40 SWAP4 SWAP2 PUSH2 0x336 DUP6 MLOAD DUP1 SWAP4 DUP2 SWAP4 PUSH2 0x231 JUMP JUMPDEST SUB SWAP1 ADDRESS GAS DELEGATECALL SWAP1 PUSH2 0x344 PUSH2 0x25A JUMP JUMPDEST SWAP2 ISZERO PUSH2 0x36B JUMPI POP SWAP1 PUSH1 0x1 SWAP2 PUSH2 0x359 DUP3 DUP9 PUSH2 0x2E8 JUMP JUMPDEST MSTORE PUSH2 0x364 DUP2 DUP8 PUSH2 0x2E8 JUMP JUMPDEST POP ADD PUSH2 0x30B JUMP JUMPDEST SWAP1 PUSH1 0x44 DUP2 MLOAD LT PUSH2 0x8E JUMPI PUSH2 0x3BF PUSH2 0x390 PUSH1 0x4 SWAP3 DUP4 DUP2 ADD MLOAD PUSH1 0x24 DUP1 SWAP2 DUP4 ADD ADD SWAP2 ADD PUSH2 0x27F JUMP JUMPDEST SWAP3 MLOAD SWAP3 DUP4 SWAP3 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP4 ADD PUSH2 0x2D7 JUMP JUMPDEST SUB SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xE4 CREATE SLOAD CALLCODE PUSH14 0x6E84F895FC4FD6E7FF0A888C1D4E 0x1E NOT 0xDE CALLVALUE CALLCODE 0xAD PUSH10 0x5ACF22A10064736F6C63 NUMBER STOP ADDMOD OR STOP CALLER ","sourceMap":"543:667:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;543:667:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;543:667:10;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;543:667:10;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;543:667:10;;;;;;;;;;;;;;;-1:-1:-1;;543:667:10;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;543:667:10;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;543:667:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;543:667:10;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;543:667:10;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;570:638::-;;;;674:24;;;:::i;:::-;713:13;725:1;728:15;;;;;;570:638;;;:::o;745:3::-;725:1;829:7;;;;;;:::i;:::-;543:667;;;;;;;;;;;:::i;:::-;802:35;810:4;;802:35;;;;;:::i;:::-;856:8;;852:306;;1172:19;;543:667;1172:19;;;;;:::i;:::-;;;;;;:::i;:::-;;543:667;713:13;;852:306;543:667;984:2;543:667;;968:18;964:32;;1107:36;1114:28;1014:76;;;;;543:667;1114:28;;;;;;;;;:::i;:::-;543:667;;1107:36;;;;;;;;;:::i;:::-;;;"},"methodIdentifiers":{"multicall(bytes[])":"ac9650d8"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"MultiCaller\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Enables calling multiple methods in a single call to the contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uma/core/contracts/common/implementation/MultiCaller.sol\":\"MultiCaller\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uma/core/contracts/common/implementation/MultiCaller.sol\":{\"keccak256\":\"0x9f6afe5bafc5e16fe8d63010a740ec3a88a9f00a7236ea7e5b039a2f50eb346e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a971572a4a9ed32e5ec15ac384af593d9499778f6ec593dbdba67d44ced4c7d8\",\"dweb:/ipfs/QmbdpfhhnUyoHWe7TPFBZxT6R6zyxJEDcGBNwDt5ncweRv\"]}},\"version\":1}"}},"@uma/core/contracts/common/implementation/Testable.sol":{"Testable":{"abi":[{"inputs":[],"name":"getCurrentTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"time","type":"uint256"}],"name":"setCurrentTime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"timerAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getCurrentTime()":"29cb924d","setCurrentTime(uint256)":"22f8e566","timerAddress()":"1c39c38d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getCurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setCurrentTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_timerAddress\":\"Contract that stores the current time in a testing environment. Must be set to 0x0 for production environments that use live time.\"}},\"getCurrentTime()\":{\"returns\":{\"_0\":\"uint for the current Testable timestamp.\"}},\"setCurrentTime(uint256)\":{\"details\":\"Will revert if not running in test mode.\",\"params\":{\"time\":\"timestamp to set current Testable time to.\"}}},\"title\":\"Base class that provides time overrides, but only if being run in test mode.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructs the Testable contract. Called by child contracts.\"},\"getCurrentTime()\":{\"notice\":\"Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp.\"},\"setCurrentTime(uint256)\":{\"notice\":\"Sets the current time.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uma/core/contracts/common/implementation/Testable.sol\":\"Testable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uma/core/contracts/common/implementation/Testable.sol\":{\"keccak256\":\"0x0254b45747293bb800373a58d123969adec0428f7be79dc941cab10fcad09918\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://537d694e3753596f507d071f283be9caeaad0010c444c9c9955d729affeb4907\",\"dweb:/ipfs/QmZ1WfVTBao11QaN6aygMhnt45UjRq77ZwfKPFmHiVSdaJ\"]},\"@uma/core/contracts/common/implementation/Timer.sol\":{\"keccak256\":\"0x9e0dd7389718bd5d1da910273a6f4cee98ee22bfc0c92bde0f0955c0e23adb5e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7ddac8d3cb76f8811156a11a7702d7c05b15a0f18c22b5abdc318723193f9266\",\"dweb:/ipfs/QmPxL7AU8NkURJaZ6WxXNcw88wGMSoPX4jbt7SMdPJqtYv\"]}},\"version\":1}"}},"@uma/core/contracts/common/implementation/Timer.sol":{"Timer":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"getCurrentTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"time","type":"uint256"}],"name":"setCurrentTime","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757425f556094908161001c8239f35b5f80fdfe60808060405260043610156011575f80fd5b5f3560e01c806322f8e566146048576329cb924d14602d575f80fd5b346044575f3660031901126044576020905f548152f35b5f80fd5b3460445760203660031901126044576004355f5500fea2646970667358221220c71c3b812f5ec77444464148724d42470516bef9d1d3f4e760583c7e1505e16164736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI TIMESTAMP PUSH0 SSTORE PUSH1 0x94 SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x22F8E566 EQ PUSH1 0x48 JUMPI PUSH4 0x29CB924D EQ PUSH1 0x2D JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x44 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x44 JUMPI PUSH1 0x20 SWAP1 PUSH0 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x44 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x44 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 SSTORE STOP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 SHR EXTCODESIZE DUP2 0x2F 0x5E 0xC7 PUSH21 0x44464148724D42470516BEF9D1D3F4E760583C7E15 SDIV 0xE1 PUSH2 0x6473 PUSH16 0x6C634300081700330000000000000000 ","sourceMap":"152:642:12:-:0;;;;;;;245:15;231:29;152:642;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60808060405260043610156011575f80fd5b5f3560e01c806322f8e566146048576329cb924d14602d575f80fd5b346044575f3660031901126044576020905f548152f35b5f80fd5b3460445760203660031901126044576004355f5500fea2646970667358221220c71c3b812f5ec77444464148724d42470516bef9d1d3f4e760583c7e1505e16164736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x22F8E566 EQ PUSH1 0x48 JUMPI PUSH4 0x29CB924D EQ PUSH1 0x2D JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x44 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x44 JUMPI PUSH1 0x20 SWAP1 PUSH0 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x44 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x44 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 SSTORE STOP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 SHR EXTCODESIZE DUP2 0x2F 0x5E 0xC7 PUSH21 0x44464148724D42470516BEF9D1D3F4E760583C7E15 SDIV 0xE1 PUSH2 0x6473 PUSH16 0x6C634300081700330000000000000000 ","sourceMap":"152:642:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;152:642:12;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;152:642:12;;;;;;;;"},"methodIdentifiers":{"getCurrentTime()":"29cb924d","setCurrentTime(uint256)":"22f8e566"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getCurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setCurrentTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getCurrentTime()\":{\"returns\":{\"_0\":\"uint256 for the current Testable timestamp.\"}},\"setCurrentTime(uint256)\":{\"details\":\"Will revert if not running in test mode.\",\"params\":{\"time\":\"timestamp to set `currentTime` to.\"}}},\"title\":\"Universal store of current contract time for testing environments.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getCurrentTime()\":{\"notice\":\"Gets the currentTime variable set in the Timer.\"},\"setCurrentTime(uint256)\":{\"notice\":\"Sets the current time.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uma/core/contracts/common/implementation/Timer.sol\":\"Timer\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uma/core/contracts/common/implementation/Timer.sol\":{\"keccak256\":\"0x9e0dd7389718bd5d1da910273a6f4cee98ee22bfc0c92bde0f0955c0e23adb5e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7ddac8d3cb76f8811156a11a7702d7c05b15a0f18c22b5abdc318723193f9266\",\"dweb:/ipfs/QmPxL7AU8NkURJaZ6WxXNcw88wGMSoPX4jbt7SMdPJqtYv\"]}},\"version\":1}"}},"@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol":{"AddressWhitelistInterface":{"abi":[{"inputs":[{"internalType":"address","name":"newElement","type":"address"}],"name":"addToWhitelist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getWhitelist","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newElement","type":"address"}],"name":"isOnWhitelist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newElement","type":"address"}],"name":"removeFromWhitelist","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addToWhitelist(address)":"e43252d7","getWhitelist()":"d01f63f5","isOnWhitelist(address)":"3a3ab672","removeFromWhitelist(address)":"8ab1d681"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newElement\",\"type\":\"address\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWhitelist\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newElement\",\"type\":\"address\"}],\"name\":\"isOnWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newElement\",\"type\":\"address\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol\":\"AddressWhitelistInterface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol\":{\"keccak256\":\"0x22fb8588dff1d5cff76a28111d6c9b190765d99facd93c8ff3b54771f245c0d8\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5ecd993f00de290a3c7bf21da23a9439cf2ccb22028316df92b79780ac8aa533\",\"dweb:/ipfs/QmTZ7x7U4EEzTacqapzSdFs2np5WNsqm4XeUBqzQxxDJei\"]}},\"version\":1}"}},"@uma/core/contracts/common/interfaces/ExpandedIERC20.sol":{"ExpandedIERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"addBurner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"addMinter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"mint","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"resetOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addBurner(address)":"f44637ba","addMinter(address)":"983b2d56","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","mint(address,uint256)":"40c10f19","resetOwner(address)":"73cc802a","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addBurner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"burn(uint256)\":{\"details\":\"Only burns the caller's tokens, so it is safe to leave this method permissionless.\"},\"burnFrom(address,uint256)\":{\"details\":\"Burns `value` tokens owned by `recipient`.\",\"params\":{\"recipient\":\"address to burn tokens from.\",\"value\":\"amount of tokens to burn.\"}},\"mint(address,uint256)\":{\"details\":\"This method should be permissioned to only allow designated parties to mint tokens.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"title\":\"ERC20 interface that includes burn and mint methods.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Burns a specific amount of the caller's tokens.\"},\"mint(address,uint256)\":{\"notice\":\"Mints tokens and adds them to the balance of the `to` address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uma/core/contracts/common/interfaces/ExpandedIERC20.sol\":\"ExpandedIERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@uma/core/contracts/common/interfaces/ExpandedIERC20.sol\":{\"keccak256\":\"0xb8252039cba45f1c19cd677f150a9823a5d6e1845cad90e3041d97c96f273c26\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://95106656c95e12c30a2a4c482a859df6df55c3b56bb9f7835eb5c685ca3175d3\",\"dweb:/ipfs/QmcuJoX7T53vTCDcQK8WcCJdT1LzHS35vPmSVfg1DG32cd\"]}},\"version\":1}"}},"@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol":{"OptimisticOracleConstraints":{"abi":[{"inputs":[],"name":"ancillaryBytesLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608080604052346018576071908161001d823930815050f35b5f80fdfe60808060405260043610156011575f80fd5b5f3560e01c63c371dda7146023575f80fd5b5f3660031901126037578061200060209252f35b5f80fdfea2646970667358221220ddb5f9f7b1dad900da0db53756229e8e00521f7f38490dd85fe1c7e3fa33fa0a64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x18 JUMPI PUSH1 0x71 SWAP1 DUP2 PUSH2 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0xC371DDA7 EQ PUSH1 0x23 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x37 JUMPI DUP1 PUSH2 0x2000 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD 0xB5 0xF9 0xF7 0xB1 0xDA 0xD9 STOP 0xDA 0xD 0xB5 CALLDATACOPY JUMP 0x22 SWAP15 DUP15 STOP MSTORE 0x1F PUSH32 0x38490DD85FE1C7E3FA33FA0A64736F6C63430008170033000000000000000000 ","sourceMap":"1235:531:15:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60808060405260043610156011575f80fd5b5f3560e01c63c371dda7146023575f80fd5b5f3660031901126037578061200060209252f35b5f80fdfea2646970667358221220ddb5f9f7b1dad900da0db53756229e8e00521f7f38490dd85fe1c7e3fa33fa0a64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0xC371DDA7 EQ PUSH1 0x23 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x37 JUMPI DUP1 PUSH2 0x2000 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD 0xB5 0xF9 0xF7 0xB1 0xDA 0xD9 STOP 0xDA 0xD 0xB5 CALLDATACOPY JUMP 0x22 SWAP15 DUP15 STOP MSTORE 0x1F PUSH32 0x38490DD85FE1C7E3FA33FA0A64736F6C63430008170033000000000000000000 ","sourceMap":"1235:531:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1235:531:15;;;;;1759:4;1235:531;;;;;;;"},"methodIdentifiers":{"ancillaryBytesLimit()":"c371dda7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ancillaryBytesLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Commonly re-used values for contracts associated with the OptimisticOracle.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol\":\"OptimisticOracleConstraints\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol\":{\"keccak256\":\"0xe40957105a9240c6bcb9753fd0011fe9f382c437cd6771c57bf7a96f8ceb9c84\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://cbf0d25e841b1f5c4022d09fb29220cb428139443cb29c4ab8dbfff71dffcc05\",\"dweb:/ipfs/QmSVVr5wH1tZi6WmKyuy1K8yS6JN4DeK5kWaZpPKtXiqkK\"]}},\"version\":1}"},"OracleInterfaces":{"abi":[{"inputs":[],"name":"Bridge","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ChildMessenger","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CollateralWhitelist","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FinancialContractsAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GenericHandler","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"IdentifierWhitelist","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OptimisticOracle","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OptimisticOracleV2","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OptimisticOracleV3","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"Oracle","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OracleHub","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OracleSpoke","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"Registry","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SkinnyOptimisticOracle","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"Store","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523461001a57610415908161001f823930815050f35b5f80fdfe60806040908082526004361015610014575f80fd5b5f3560e01c908163079b6c63146103ac575080631a0fbfb3146103775780631a4dbd1c146103425780632a71e5b31461030d57806342e90c33146102d85780634596ac9b146102a3578063473e7ccd1461026e5780634f4a180b14610239578063598dd097146102045780635fa2ef10146101cf5780637608ea2f1461019a5780637db9743b146101655780638adca47f14610130578063f02f8e83146100fb5763f24a534e146100c3575f80fd5b5f3660031901126100f757602090517f4f7261636c6500000000000000000000000000000000000000000000000000008152f35b5f80fd5b505f3660031901126100f757602090517f4f7074696d69737469634f7261636c65563300000000000000000000000000008152f35b505f3660031901126100f757602090517f4f7261636c6553706f6b650000000000000000000000000000000000000000008152f35b505f3660031901126100f757602090517f52656769737472790000000000000000000000000000000000000000000000008152f35b505f3660031901126100f757602090517f4f7261636c6548756200000000000000000000000000000000000000000000008152f35b505f3660031901126100f757602090517f42726964676500000000000000000000000000000000000000000000000000008152f35b505f3660031901126100f757602090517f436f6c6c61746572616c57686974656c697374000000000000000000000000008152f35b505f3660031901126100f757602090517f4964656e74696669657257686974656c697374000000000000000000000000008152f35b505f3660031901126100f757602090517f4f7074696d69737469634f7261636c65563200000000000000000000000000008152f35b505f3660031901126100f757602090517f536b696e6e794f7074696d69737469634f7261636c65000000000000000000008152f35b505f3660031901126100f757602090517f53746f72650000000000000000000000000000000000000000000000000000008152f35b505f3660031901126100f757602090517f46696e616e6369616c436f6e74726163747341646d696e0000000000000000008152f35b505f3660031901126100f757602090517f4f7074696d69737469634f7261636c65000000000000000000000000000000008152f35b505f3660031901126100f757602090517f4368696c644d657373656e6765720000000000000000000000000000000000008152f35b5f3660031901126100f757807f47656e6572696348616e646c657200000000000000000000000000000000000060209252f3fea2646970667358221220e08d39127b49760a456214b994e1a991bb057f6f9e3f6f402263401f80d1c30364736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x1A JUMPI PUSH2 0x415 SWAP1 DUP2 PUSH2 0x1F DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x79B6C63 EQ PUSH2 0x3AC JUMPI POP DUP1 PUSH4 0x1A0FBFB3 EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0x1A4DBD1C EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x2A71E5B3 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x42E90C33 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x4596AC9B EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x473E7CCD EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x4F4A180B EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x598DD097 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x5FA2EF10 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x7608EA2F EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x7DB9743B EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x8ADCA47F EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0xF02F8E83 EQ PUSH2 0xFB JUMPI PUSH4 0xF24A534E EQ PUSH2 0xC3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x4F7261636C650000000000000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x4F7074696D69737469634F7261636C6556330000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST POP PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x4F7261636C6553706F6B65000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST POP PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x5265676973747279000000000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST POP PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x4F7261636C654875620000000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST POP PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x4272696467650000000000000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST POP PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x436F6C6C61746572616C57686974656C69737400000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST POP PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x4964656E74696669657257686974656C69737400000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST POP PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x4F7074696D69737469634F7261636C6556320000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST POP PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x536B696E6E794F7074696D69737469634F7261636C6500000000000000000000 DUP2 MSTORE RETURN JUMPDEST POP PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x53746F7265000000000000000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST POP PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x46696E616E6369616C436F6E74726163747341646D696E000000000000000000 DUP2 MSTORE RETURN JUMPDEST POP PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x4F7074696D69737469634F7261636C6500000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST POP PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x4368696C644D657373656E676572000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI DUP1 PUSH32 0x47656E6572696348616E646C6572000000000000000000000000000000000000 PUSH1 0x20 SWAP3 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 DUP14 CODECOPY SLT PUSH28 0x49760A456214B994E1A991BB057F6F9E3F6F402263401F80D1C30364 PUSH20 0x6F6C634300081700330000000000000000000000 ","sourceMap":"170:969:15:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60806040908082526004361015610014575f80fd5b5f3560e01c908163079b6c63146103ac575080631a0fbfb3146103775780631a4dbd1c146103425780632a71e5b31461030d57806342e90c33146102d85780634596ac9b146102a3578063473e7ccd1461026e5780634f4a180b14610239578063598dd097146102045780635fa2ef10146101cf5780637608ea2f1461019a5780637db9743b146101655780638adca47f14610130578063f02f8e83146100fb5763f24a534e146100c3575f80fd5b5f3660031901126100f757602090517f4f7261636c6500000000000000000000000000000000000000000000000000008152f35b5f80fd5b505f3660031901126100f757602090517f4f7074696d69737469634f7261636c65563300000000000000000000000000008152f35b505f3660031901126100f757602090517f4f7261636c6553706f6b650000000000000000000000000000000000000000008152f35b505f3660031901126100f757602090517f52656769737472790000000000000000000000000000000000000000000000008152f35b505f3660031901126100f757602090517f4f7261636c6548756200000000000000000000000000000000000000000000008152f35b505f3660031901126100f757602090517f42726964676500000000000000000000000000000000000000000000000000008152f35b505f3660031901126100f757602090517f436f6c6c61746572616c57686974656c697374000000000000000000000000008152f35b505f3660031901126100f757602090517f4964656e74696669657257686974656c697374000000000000000000000000008152f35b505f3660031901126100f757602090517f4f7074696d69737469634f7261636c65563200000000000000000000000000008152f35b505f3660031901126100f757602090517f536b696e6e794f7074696d69737469634f7261636c65000000000000000000008152f35b505f3660031901126100f757602090517f53746f72650000000000000000000000000000000000000000000000000000008152f35b505f3660031901126100f757602090517f46696e616e6369616c436f6e74726163747341646d696e0000000000000000008152f35b505f3660031901126100f757602090517f4f7074696d69737469634f7261636c65000000000000000000000000000000008152f35b505f3660031901126100f757602090517f4368696c644d657373656e6765720000000000000000000000000000000000008152f35b5f3660031901126100f757807f47656e6572696348616e646c657200000000000000000000000000000000000060209252f3fea2646970667358221220e08d39127b49760a456214b994e1a991bb057f6f9e3f6f402263401f80d1c30364736f6c63430008170033","opcodes":"PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x79B6C63 EQ PUSH2 0x3AC JUMPI POP DUP1 PUSH4 0x1A0FBFB3 EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0x1A4DBD1C EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x2A71E5B3 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x42E90C33 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x4596AC9B EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x473E7CCD EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x4F4A180B EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x598DD097 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x5FA2EF10 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x7608EA2F EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x7DB9743B EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x8ADCA47F EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0xF02F8E83 EQ PUSH2 0xFB JUMPI PUSH4 0xF24A534E EQ PUSH2 0xC3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x4F7261636C650000000000000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x4F7074696D69737469634F7261636C6556330000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST POP PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x4F7261636C6553706F6B65000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST POP PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x5265676973747279000000000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST POP PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x4F7261636C654875620000000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST POP PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x4272696467650000000000000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST POP PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x436F6C6C61746572616C57686974656C69737400000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST POP PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x4964656E74696669657257686974656C69737400000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST POP PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x4F7074696D69737469634F7261636C6556320000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST POP PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x536B696E6E794F7074696D69737469634F7261636C6500000000000000000000 DUP2 MSTORE RETURN JUMPDEST POP PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x53746F7265000000000000000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST POP PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x46696E616E6369616C436F6E74726163747341646D696E000000000000000000 DUP2 MSTORE RETURN JUMPDEST POP PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x4F7074696D69737469634F7261636C6500000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST POP PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x4368696C644D657373656E676572000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF7 JUMPI DUP1 PUSH32 0x47656E6572696348616E646C6572000000000000000000000000000000000000 PUSH1 0x20 SWAP3 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 DUP14 CODECOPY SLT PUSH28 0x49760A456214B994E1A991BB057F6F9E3F6F402263401F80D1C30364 PUSH20 0x6F6C634300081700330000000000000000000000 ","sourceMap":"170:969:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;170:969:15;;;;;;;;;;;;;;;;-1:-1:-1;170:969:15;;-1:-1:-1;;170:969:15;;;;;;;;;;;;-1:-1:-1;170:969:15;;-1:-1:-1;;170:969:15;;;;;;;;;;;;-1:-1:-1;170:969:15;;-1:-1:-1;;170:969:15;;;;;;;;;;;;-1:-1:-1;170:969:15;;-1:-1:-1;;170:969:15;;;;;;;;;;;;-1:-1:-1;170:969:15;;-1:-1:-1;;170:969:15;;;;;;;;;;;;-1:-1:-1;170:969:15;;-1:-1:-1;;170:969:15;;;;;;;;;;;;-1:-1:-1;170:969:15;;-1:-1:-1;;170:969:15;;;;;;;;;;;;-1:-1:-1;170:969:15;;-1:-1:-1;;170:969:15;;;;;;;;;;;;-1:-1:-1;170:969:15;;-1:-1:-1;;170:969:15;;;;;;;;;;;;-1:-1:-1;170:969:15;;-1:-1:-1;;170:969:15;;;;;;;;;;;;-1:-1:-1;170:969:15;;-1:-1:-1;;170:969:15;;;;;;;;;;;;-1:-1:-1;170:969:15;;-1:-1:-1;;170:969:15;;;;;;;;;;;;-1:-1:-1;170:969:15;;-1:-1:-1;;170:969:15;;;;;;;;;;;;;;-1:-1:-1;;170:969:15;;;;;;;;;"},"methodIdentifiers":{"Bridge()":"5fa2ef10","ChildMessenger()":"1a0fbfb3","CollateralWhitelist()":"598dd097","FinancialContractsAdmin()":"2a71e5b3","GenericHandler()":"079b6c63","IdentifierWhitelist()":"4f4a180b","OptimisticOracle()":"1a4dbd1c","OptimisticOracleV2()":"473e7ccd","OptimisticOracleV3()":"f02f8e83","Oracle()":"f24a534e","OracleHub()":"7608ea2f","OracleSpoke()":"8adca47f","Registry()":"7db9743b","SkinnyOptimisticOracle()":"4596ac9b","Store()":"42e90c33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Bridge\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ChildMessenger\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CollateralWhitelist\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FinancialContractsAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GenericHandler\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IdentifierWhitelist\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OptimisticOracle\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OptimisticOracleV2\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OptimisticOracleV3\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Oracle\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OracleHub\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OracleSpoke\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Registry\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SkinnyOptimisticOracle\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Store\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Stores common interface names used throughout the DVM by registration in the Finder.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol\":\"OracleInterfaces\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol\":{\"keccak256\":\"0xe40957105a9240c6bcb9753fd0011fe9f382c437cd6771c57bf7a96f8ceb9c84\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://cbf0d25e841b1f5c4022d09fb29220cb428139443cb29c4ab8dbfff71dffcc05\",\"dweb:/ipfs/QmSVVr5wH1tZi6WmKyuy1K8yS6JN4DeK5kWaZpPKtXiqkK\"]}},\"version\":1}"}},"@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol":{"FinderInterface":{"abi":[{"inputs":[{"internalType":"bytes32","name":"interfaceName","type":"bytes32"},{"internalType":"address","name":"implementationAddress","type":"address"}],"name":"changeImplementationAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"interfaceName","type":"bytes32"}],"name":"getImplementationAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"changeImplementationAddress(bytes32,address)":"31f9665e","getImplementationAddress(bytes32)":"aafd5e40"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"interfaceName\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"implementationAddress\",\"type\":\"address\"}],\"name\":\"changeImplementationAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"interfaceName\",\"type\":\"bytes32\"}],\"name\":\"getImplementationAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Examples are the Oracle or Store interfaces.\",\"kind\":\"dev\",\"methods\":{\"changeImplementationAddress(bytes32,address)\":{\"params\":{\"implementationAddress\":\"address of the deployed contract that implements the interface.\",\"interfaceName\":\"bytes32 encoding of the interface name that is either changed or registered.\"}},\"getImplementationAddress(bytes32)\":{\"params\":{\"interfaceName\":\"queried interface.\"},\"returns\":{\"_0\":\"implementationAddress address of the deployed contract that implements the interface.\"}}},\"title\":\"Provides addresses of the live contracts implementing certain interfaces.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"changeImplementationAddress(bytes32,address)\":{\"notice\":\"Updates the address of the contract that implements `interfaceName`.\"},\"getImplementationAddress(bytes32)\":{\"notice\":\"Gets the address of the contract that implements the given `interfaceName`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol\":\"FinderInterface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81\",\"dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf\"]}},\"version\":1}"}},"@uma/core/contracts/data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol":{"IdentifierWhitelistInterface":{"abi":[{"inputs":[{"internalType":"bytes32","name":"identifier","type":"bytes32"}],"name":"addSupportedIdentifier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"identifier","type":"bytes32"}],"name":"isIdentifierSupported","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"identifier","type":"bytes32"}],"name":"removeSupportedIdentifier","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addSupportedIdentifier(bytes32)":"10a7e201","isIdentifierSupported(bytes32)":"90978d1b","removeSupportedIdentifier(bytes32)":"8e0d3ca7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"name\":\"addSupportedIdentifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"name\":\"isIdentifierSupported\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"name\":\"removeSupportedIdentifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addSupportedIdentifier(bytes32)\":{\"details\":\"Price requests using this identifier will succeed after this call.\",\"params\":{\"identifier\":\"bytes32 encoding of the string identifier. Eg: BTC/USD.\"}},\"isIdentifierSupported(bytes32)\":{\"params\":{\"identifier\":\"bytes32 encoding of the string identifier. Eg: BTC/USD.\"},\"returns\":{\"_0\":\"bool if the identifier is supported (or not).\"}},\"removeSupportedIdentifier(bytes32)\":{\"details\":\"Price requests using this identifier will no longer succeed after this call.\",\"params\":{\"identifier\":\"bytes32 encoding of the string identifier. Eg: BTC/USD.\"}}},\"title\":\"Interface for whitelists of supported identifiers that the oracle can provide prices for.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addSupportedIdentifier(bytes32)\":{\"notice\":\"Adds the provided identifier as a supported identifier.\"},\"isIdentifierSupported(bytes32)\":{\"notice\":\"Checks whether an identifier is on the whitelist.\"},\"removeSupportedIdentifier(bytes32)\":{\"notice\":\"Removes the identifier from the whitelist.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uma/core/contracts/data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol\":\"IdentifierWhitelistInterface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@uma/core/contracts/data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol\":{\"keccak256\":\"0x9ae86a30dd1a8c03fb2c6d27be570bb30c4c0b13ac63cde8620b7e4b51d88dc9\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a71d2aff48e075ecab56a9c9767775d1d77e04ec9191fed124e71003220549e3\",\"dweb:/ipfs/QmYPWsZXro6fzqpZY6UxQ5X8znEXfLp2sun8oXzdz8bTyc\"]}},\"version\":1}"}},"@uma/core/contracts/data-verification-mechanism/interfaces/StoreInterface.sol":{"StoreInterface":{"abi":[{"inputs":[{"internalType":"address","name":"currency","type":"address"}],"name":"computeFinalFee","outputs":[{"components":[{"internalType":"uint256","name":"rawValue","type":"uint256"}],"internalType":"struct FixedPoint.Unsigned","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"components":[{"internalType":"uint256","name":"rawValue","type":"uint256"}],"internalType":"struct FixedPoint.Unsigned","name":"pfc","type":"tuple"}],"name":"computeRegularFee","outputs":[{"components":[{"internalType":"uint256","name":"rawValue","type":"uint256"}],"internalType":"struct FixedPoint.Unsigned","name":"regularFee","type":"tuple"},{"components":[{"internalType":"uint256","name":"rawValue","type":"uint256"}],"internalType":"struct FixedPoint.Unsigned","name":"latePenalty","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"payOracleFees","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"erc20Address","type":"address"},{"components":[{"internalType":"uint256","name":"rawValue","type":"uint256"}],"internalType":"struct FixedPoint.Unsigned","name":"amount","type":"tuple"}],"name":"payOracleFeesErc20","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"computeFinalFee(address)":"5b97aadd","computeRegularFee(uint256,uint256,(uint256))":"74201feb","payOracleFees()":"cd3a9b24","payOracleFeesErc20(address,(uint256))":"8659d232"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"computeFinalFee\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"pfc\",\"type\":\"tuple\"}],\"name\":\"computeRegularFee\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"regularFee\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"latePenalty\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payOracleFees\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"amount\",\"type\":\"tuple\"}],\"name\":\"payOracleFeesErc20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"computeFinalFee(address)\":{\"params\":{\"currency\":\"token used to pay the final fee.\"},\"returns\":{\"_0\":\"finalFee amount due.\"}},\"computeRegularFee(uint256,uint256,(uint256))\":{\"params\":{\"endTime\":\"end time until which the fee is paid.\",\"pfc\":\"\\\"profit from corruption\\\", or the maximum amount of margin currency that a token sponsor could extract from the contract through corrupting the price feed in their favor.\",\"startTime\":\"defines the beginning time from which the fee is paid.\"},\"returns\":{\"latePenalty\":\"for paying the fee after the deadline.\",\"regularFee\":\"amount owed for the duration from start to end time for the given pfc.\"}},\"payOracleFees()\":{\"details\":\"To be used by contracts whose margin currency is ETH.\"},\"payOracleFeesErc20(address,(uint256))\":{\"details\":\"To be used if the margin currency is an ERC20 token rather than ETH.\",\"params\":{\"amount\":\"number of tokens to transfer. An approval for at least this amount must exist.\",\"erc20Address\":\"address of the ERC20 token used to pay the fee.\"}}},\"title\":\"Interface that allows financial contracts to pay oracle fees for their use of the system.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"computeFinalFee(address)\":{\"notice\":\"Computes the final oracle fees that a contract should pay at settlement.\"},\"computeRegularFee(uint256,uint256,(uint256))\":{\"notice\":\"Computes the regular oracle fees that a contract should pay for a period.\"},\"payOracleFees()\":{\"notice\":\"Pays Oracle fees in ETH to the store.\"},\"payOracleFeesErc20(address,(uint256))\":{\"notice\":\"Pays oracle fees in the margin currency, erc20Address, to the store.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uma/core/contracts/data-verification-mechanism/interfaces/StoreInterface.sol\":\"StoreInterface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"@openzeppelin/contracts/utils/math/SignedSafeMath.sol\":{\"keccak256\":\"0x62f53f262fabbbc6d8ab49488d8fce36370351aff2b8d3898d499d68995a71c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efd599513c2f313a3f5e9536beb2b80a0d2b3dd34202c174a707d81b7dc751ce\",\"dweb:/ipfs/QmdDiENVFSyWjfFskNLnViMH77DHg3oDthkSZk7dMzNNKB\"]},\"@uma/core/contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0x996b97cc4fa5da4064e3aee500edc6972485d59a9334ceec81155e2c2f484dae\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8d7c028926dc2b27e7dc103363dca8a43f60b3351f4a14bcb702660f95c68663\",\"dweb:/ipfs/QmXz4ieFjP5RxJ35F8GbPryYEGvFmxc4Gqx8EK7N57ixzT\"]},\"@uma/core/contracts/data-verification-mechanism/interfaces/StoreInterface.sol\":{\"keccak256\":\"0xbb73671684309c91ad5ef3da1474051d03f2e7d5882bed7f5c4317e5d4c768df\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://32386544d3119fd0187a8c4e8b01c739f508ab863faa04345cabc2544081f9e8\",\"dweb:/ipfs/QmYszDURs1x75rsejZkGt9zCkASXnJtufbNsL3XHe2eJPQ\"]}},\"version\":1}"}},"@uma/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleInterface.sol":{"OptimisticOracleInterface":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"requester","type":"address"},{"indexed":true,"internalType":"address","name":"proposer","type":"address"},{"indexed":true,"internalType":"address","name":"disputer","type":"address"},{"indexed":false,"internalType":"bytes32","name":"identifier","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"indexed":false,"internalType":"int256","name":"proposedPrice","type":"int256"}],"name":"DisputePrice","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"requester","type":"address"},{"indexed":true,"internalType":"address","name":"proposer","type":"address"},{"indexed":false,"internalType":"bytes32","name":"identifier","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"indexed":false,"internalType":"int256","name":"proposedPrice","type":"int256"},{"indexed":false,"internalType":"uint256","name":"expirationTimestamp","type":"uint256"},{"indexed":false,"internalType":"address","name":"currency","type":"address"}],"name":"ProposePrice","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"requester","type":"address"},{"indexed":false,"internalType":"bytes32","name":"identifier","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"indexed":false,"internalType":"address","name":"currency","type":"address"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"finalFee","type":"uint256"}],"name":"RequestPrice","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"requester","type":"address"},{"indexed":true,"internalType":"address","name":"proposer","type":"address"},{"indexed":true,"internalType":"address","name":"disputer","type":"address"},{"indexed":false,"internalType":"bytes32","name":"identifier","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"indexed":false,"internalType":"int256","name":"price","type":"int256"},{"indexed":false,"internalType":"uint256","name":"payout","type":"uint256"}],"name":"Settle","type":"event"},{"inputs":[],"name":"ancillaryBytesLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"defaultLiveness","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"requester","type":"address"},{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"}],"name":"disputePrice","outputs":[{"internalType":"uint256","name":"totalBond","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"disputer","type":"address"},{"internalType":"address","name":"requester","type":"address"},{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"}],"name":"disputePriceFor","outputs":[{"internalType":"uint256","name":"totalBond","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"finder","outputs":[{"internalType":"contract FinderInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"requester","type":"address"},{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"}],"name":"getRequest","outputs":[{"components":[{"internalType":"address","name":"proposer","type":"address"},{"internalType":"address","name":"disputer","type":"address"},{"internalType":"contract IERC20","name":"currency","type":"address"},{"internalType":"bool","name":"settled","type":"bool"},{"internalType":"bool","name":"refundOnDispute","type":"bool"},{"internalType":"int256","name":"proposedPrice","type":"int256"},{"internalType":"int256","name":"resolvedPrice","type":"int256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"uint256","name":"reward","type":"uint256"},{"internalType":"uint256","name":"finalFee","type":"uint256"},{"internalType":"uint256","name":"bond","type":"uint256"},{"internalType":"uint256","name":"customLiveness","type":"uint256"}],"internalType":"struct OptimisticOracleInterface.Request","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"requester","type":"address"},{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"}],"name":"getState","outputs":[{"internalType":"enum OptimisticOracleInterface.State","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"requester","type":"address"},{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"}],"name":"hasPrice","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"requester","type":"address"},{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"internalType":"int256","name":"proposedPrice","type":"int256"}],"name":"proposePrice","outputs":[{"internalType":"uint256","name":"totalBond","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"proposer","type":"address"},{"internalType":"address","name":"requester","type":"address"},{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"internalType":"int256","name":"proposedPrice","type":"int256"}],"name":"proposePriceFor","outputs":[{"internalType":"uint256","name":"totalBond","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"internalType":"contract IERC20","name":"currency","type":"address"},{"internalType":"uint256","name":"reward","type":"uint256"}],"name":"requestPrice","outputs":[{"internalType":"uint256","name":"totalBond","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"requests","outputs":[{"internalType":"address","name":"proposer","type":"address"},{"internalType":"address","name":"disputer","type":"address"},{"internalType":"contract IERC20","name":"currency","type":"address"},{"internalType":"bool","name":"settled","type":"bool"},{"internalType":"bool","name":"refundOnDispute","type":"bool"},{"internalType":"int256","name":"proposedPrice","type":"int256"},{"internalType":"int256","name":"resolvedPrice","type":"int256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"uint256","name":"reward","type":"uint256"},{"internalType":"uint256","name":"finalFee","type":"uint256"},{"internalType":"uint256","name":"bond","type":"uint256"},{"internalType":"uint256","name":"customLiveness","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"internalType":"uint256","name":"bond","type":"uint256"}],"name":"setBond","outputs":[{"internalType":"uint256","name":"totalBond","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"internalType":"uint256","name":"customLiveness","type":"uint256"}],"name":"setCustomLiveness","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"}],"name":"setRefundOnDispute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"requester","type":"address"},{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"}],"name":"settle","outputs":[{"internalType":"uint256","name":"payout","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"}],"name":"settleAndGetPrice","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"internalType":"address","name":"requester","type":"address"}],"name":"stampAncillaryData","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"ancillaryBytesLimit()":"c371dda7","defaultLiveness()":"fe4e1983","disputePrice(address,bytes32,uint256,bytes)":"fba7f1e3","disputePriceFor(address,address,bytes32,uint256,bytes)":"76c7823f","finder()":"b9a3c84c","getCurrentTime()":"29cb924d","getRequest(address,bytes32,uint256,bytes)":"a9904f9b","getState(address,bytes32,uint256,bytes)":"ba4b930c","hasPrice(address,bytes32,uint256,bytes)":"bc58ccaa","proposePrice(address,bytes32,uint256,bytes,int256)":"b8b4f908","proposePriceFor(address,address,bytes32,uint256,bytes,int256)":"7c82288f","requestPrice(bytes32,uint256,bytes,address,uint256)":"11df92f1","requests(bytes32)":"9d866985","setBond(bytes32,uint256,bytes,uint256)":"ad5a755a","setCustomLiveness(bytes32,uint256,bytes,uint256)":"473c45fe","setRefundOnDispute(bytes32,uint256,bytes)":"91f58dcb","settle(address,bytes32,uint256,bytes)":"5e9a79a9","settleAndGetPrice(bytes32,uint256,bytes)":"53b59239","stampAncillaryData(bytes,address)":"af5d2f39"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"}],\"name\":\"DisputePrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expirationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"ProposePrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"finalFee\",\"type\":\"uint256\"}],\"name\":\"RequestPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"name\":\"Settle\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ancillaryBytesLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultLiveness\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"disputePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"disputePriceFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finder\",\"outputs\":[{\"internalType\":\"contract FinderInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"getRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"refundOnDispute\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"resolvedPrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"customLiveness\",\"type\":\"uint256\"}],\"internalType\":\"struct OptimisticOracleInterface.Request\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"getState\",\"outputs\":[{\"internalType\":\"enum OptimisticOracleInterface.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"hasPrice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"}],\"name\":\"proposePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"}],\"name\":\"proposePriceFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"requestPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"requests\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"refundOnDispute\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"resolvedPrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"customLiveness\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"}],\"name\":\"setBond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"customLiveness\",\"type\":\"uint256\"}],\"name\":\"setCustomLiveness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"setRefundOnDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"settle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"settleAndGetPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"}],\"name\":\"stampAncillaryData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface used by financial contracts to interact with the Oracle. Voters will use a different interface.\",\"kind\":\"dev\",\"methods\":{\"disputePrice(address,bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"totalBond\":\"the amount that's pulled from the disputer's wallet as a bond. The bond will be returned to the disputer once settled if the dispute was valid (the proposal was incorrect).\"}},\"disputePriceFor(address,address,bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"disputer\":\"address to set as the disputer.\",\"identifier\":\"price identifier to identify the existing request.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"totalBond\":\"the amount that's pulled from the caller's wallet as a bond. The bond will be returned to the disputer once settled if the dispute was value (the proposal was incorrect).\"}},\"getRequest(address,bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"_0\":\"the Request data structure.\"}},\"getState(address,bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"_0\":\"the State enum value.\"}},\"hasPrice(address,bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"_0\":\"true if price has resolved or settled, false otherwise.\"}},\"proposePrice(address,bytes32,uint256,bytes,int256)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"proposedPrice\":\"price being proposed.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"totalBond\":\"the amount that's pulled from the proposer's wallet as a bond. The bond will be returned to the proposer once settled if the proposal is correct.\"}},\"proposePriceFor(address,address,bytes32,uint256,bytes,int256)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"proposedPrice\":\"price being proposed.\",\"proposer\":\"address to set as the proposer.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"totalBond\":\"the amount that's pulled from the caller's wallet as a bond. The bond will be returned to the proposer once settled if the proposal is correct.\"}},\"requestPrice(bytes32,uint256,bytes,address,uint256)\":{\"params\":{\"ancillaryData\":\"ancillary data representing additional args being passed with the price request.\",\"currency\":\"ERC20 token used for payment of rewards and fees. Must be approved for use with the DVM.\",\"identifier\":\"price identifier being requested.\",\"reward\":\"reward offered to a successful proposer. Will be pulled from the caller. Note: this can be 0,               which could make sense if the contract requests and proposes the value in the same call or               provides its own reward system.\",\"timestamp\":\"timestamp of the price being requested.\"},\"returns\":{\"totalBond\":\"default bond (final fee) + final fee that the proposer and disputer will be required to pay. This can be changed with a subsequent call to setBond().\"}},\"setBond(bytes32,uint256,bytes,uint256)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"bond\":\"custom bond amount to set.\",\"identifier\":\"price identifier to identify the existing request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"totalBond\":\"new bond + final fee that the proposer and disputer will be required to pay. This can be changed again with a subsequent call to setBond().\"}},\"setCustomLiveness(bytes32,uint256,bytes,uint256)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"customLiveness\":\"new custom liveness.\",\"identifier\":\"price identifier to identify the existing request.\",\"timestamp\":\"timestamp to identify the existing request.\"}},\"setRefundOnDispute(bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"timestamp\":\"timestamp to identify the existing request.\"}},\"settle(address,bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"payout\":\"the amount that the \\\"winner\\\" (proposer or disputer) receives on settlement. This amount includes the returned bonds as well as additional rewards.\"}},\"settleAndGetPrice(bytes32,uint256,bytes)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"_0\":\"resolved price.\"}}},\"title\":\"Financial contract facing Oracle interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"disputePrice(address,bytes32,uint256,bytes)\":{\"notice\":\"Disputes a price value for an existing price request with an active proposal.\"},\"disputePriceFor(address,address,bytes32,uint256,bytes)\":{\"notice\":\"Disputes a price request with an active proposal on another address' behalf. Note: this address will receive any rewards that come from this dispute. However, any bonds are pulled from the caller.\"},\"getRequest(address,bytes32,uint256,bytes)\":{\"notice\":\"Gets the current data structure containing all information about a price request.\"},\"getState(address,bytes32,uint256,bytes)\":{\"notice\":\"Returns the state of a price request.\"},\"hasPrice(address,bytes32,uint256,bytes)\":{\"notice\":\"Checks if a given request has resolved or been settled (i.e the optimistic oracle has a price).\"},\"proposePrice(address,bytes32,uint256,bytes,int256)\":{\"notice\":\"Proposes a price value for an existing price request.\"},\"proposePriceFor(address,address,bytes32,uint256,bytes,int256)\":{\"notice\":\"Proposes a price value on another address' behalf. Note: this address will receive any rewards that come from this proposal. However, any bonds are pulled from the caller.\"},\"requestPrice(bytes32,uint256,bytes,address,uint256)\":{\"notice\":\"Requests a new price.\"},\"setBond(bytes32,uint256,bytes,uint256)\":{\"notice\":\"Set the proposal bond associated with a price request.\"},\"setCustomLiveness(bytes32,uint256,bytes,uint256)\":{\"notice\":\"Sets a custom liveness value for the request. Liveness is the amount of time a proposal must wait before being auto-resolved.\"},\"setRefundOnDispute(bytes32,uint256,bytes)\":{\"notice\":\"Sets the request to refund the reward if the proposal is disputed. This can help to \\\"hedge\\\" the caller in the event of a dispute-caused delay. Note: in the event of a dispute, the winner still receives the other's bond, so there is still profit to be made even if the reward is refunded.\"},\"settle(address,bytes32,uint256,bytes)\":{\"notice\":\"Attempts to settle an outstanding price request. Will revert if it isn't settleable.\"},\"settleAndGetPrice(bytes32,uint256,bytes)\":{\"notice\":\"Retrieves a price that was previously requested by a caller. Reverts if the request is not settled or settleable. Note: this method is not view so that this call may actually settle the price request if it hasn't been settled.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uma/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleInterface.sol\":\"OptimisticOracleInterface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81\",\"dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf\"]},\"@uma/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleInterface.sol\":{\"keccak256\":\"0xfac07e0c25da341d65305c0b06004027b7ddc9f3a3e3aae1d39c3a59597f3c9b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2bff7b22f1c9cbc6dc5bd8d3324ab37b2e293f973c592510b3240920c94ebdee\",\"dweb:/ipfs/QmUiTWPC7qpoME3CWBSWEioszs5zt7oseUPBKHzQbHaoDv\"]}},\"version\":1}"}},"@uma/core/contracts/optimistic-oracle-v2/interfaces/SkinnyOptimisticOracleInterface.sol":{"SkinnyOptimisticOracleInterface":{"abi":[{"inputs":[],"name":"ancillaryBytesLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"requester","type":"address"},{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint32","name":"timestamp","type":"uint32"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"components":[{"internalType":"address","name":"proposer","type":"address"},{"internalType":"address","name":"disputer","type":"address"},{"internalType":"contract IERC20","name":"currency","type":"address"},{"internalType":"bool","name":"settled","type":"bool"},{"internalType":"int256","name":"proposedPrice","type":"int256"},{"internalType":"int256","name":"resolvedPrice","type":"int256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"uint256","name":"reward","type":"uint256"},{"internalType":"uint256","name":"finalFee","type":"uint256"},{"internalType":"uint256","name":"bond","type":"uint256"},{"internalType":"uint256","name":"customLiveness","type":"uint256"}],"internalType":"struct SkinnyOptimisticOracleInterface.Request","name":"request","type":"tuple"}],"name":"disputePrice","outputs":[{"internalType":"uint256","name":"totalBond","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint32","name":"timestamp","type":"uint32"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"components":[{"internalType":"address","name":"proposer","type":"address"},{"internalType":"address","name":"disputer","type":"address"},{"internalType":"contract IERC20","name":"currency","type":"address"},{"internalType":"bool","name":"settled","type":"bool"},{"internalType":"int256","name":"proposedPrice","type":"int256"},{"internalType":"int256","name":"resolvedPrice","type":"int256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"uint256","name":"reward","type":"uint256"},{"internalType":"uint256","name":"finalFee","type":"uint256"},{"internalType":"uint256","name":"bond","type":"uint256"},{"internalType":"uint256","name":"customLiveness","type":"uint256"}],"internalType":"struct SkinnyOptimisticOracleInterface.Request","name":"request","type":"tuple"},{"internalType":"address","name":"disputer","type":"address"},{"internalType":"address","name":"requester","type":"address"}],"name":"disputePriceFor","outputs":[{"internalType":"uint256","name":"totalBond","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"requester","type":"address"},{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint32","name":"timestamp","type":"uint32"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"components":[{"internalType":"address","name":"proposer","type":"address"},{"internalType":"address","name":"disputer","type":"address"},{"internalType":"contract IERC20","name":"currency","type":"address"},{"internalType":"bool","name":"settled","type":"bool"},{"internalType":"int256","name":"proposedPrice","type":"int256"},{"internalType":"int256","name":"resolvedPrice","type":"int256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"uint256","name":"reward","type":"uint256"},{"internalType":"uint256","name":"finalFee","type":"uint256"},{"internalType":"uint256","name":"bond","type":"uint256"},{"internalType":"uint256","name":"customLiveness","type":"uint256"}],"internalType":"struct SkinnyOptimisticOracleInterface.Request","name":"request","type":"tuple"}],"name":"getState","outputs":[{"internalType":"enum OptimisticOracleInterface.State","name":"","type":"uint8"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"requester","type":"address"},{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint32","name":"timestamp","type":"uint32"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"components":[{"internalType":"address","name":"proposer","type":"address"},{"internalType":"address","name":"disputer","type":"address"},{"internalType":"contract IERC20","name":"currency","type":"address"},{"internalType":"bool","name":"settled","type":"bool"},{"internalType":"int256","name":"proposedPrice","type":"int256"},{"internalType":"int256","name":"resolvedPrice","type":"int256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"uint256","name":"reward","type":"uint256"},{"internalType":"uint256","name":"finalFee","type":"uint256"},{"internalType":"uint256","name":"bond","type":"uint256"},{"internalType":"uint256","name":"customLiveness","type":"uint256"}],"internalType":"struct SkinnyOptimisticOracleInterface.Request","name":"request","type":"tuple"}],"name":"hasPrice","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"requester","type":"address"},{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint32","name":"timestamp","type":"uint32"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"components":[{"internalType":"address","name":"proposer","type":"address"},{"internalType":"address","name":"disputer","type":"address"},{"internalType":"contract IERC20","name":"currency","type":"address"},{"internalType":"bool","name":"settled","type":"bool"},{"internalType":"int256","name":"proposedPrice","type":"int256"},{"internalType":"int256","name":"resolvedPrice","type":"int256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"uint256","name":"reward","type":"uint256"},{"internalType":"uint256","name":"finalFee","type":"uint256"},{"internalType":"uint256","name":"bond","type":"uint256"},{"internalType":"uint256","name":"customLiveness","type":"uint256"}],"internalType":"struct SkinnyOptimisticOracleInterface.Request","name":"request","type":"tuple"},{"internalType":"int256","name":"proposedPrice","type":"int256"}],"name":"proposePrice","outputs":[{"internalType":"uint256","name":"totalBond","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"requester","type":"address"},{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint32","name":"timestamp","type":"uint32"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"components":[{"internalType":"address","name":"proposer","type":"address"},{"internalType":"address","name":"disputer","type":"address"},{"internalType":"contract IERC20","name":"currency","type":"address"},{"internalType":"bool","name":"settled","type":"bool"},{"internalType":"int256","name":"proposedPrice","type":"int256"},{"internalType":"int256","name":"resolvedPrice","type":"int256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"uint256","name":"reward","type":"uint256"},{"internalType":"uint256","name":"finalFee","type":"uint256"},{"internalType":"uint256","name":"bond","type":"uint256"},{"internalType":"uint256","name":"customLiveness","type":"uint256"}],"internalType":"struct SkinnyOptimisticOracleInterface.Request","name":"request","type":"tuple"},{"internalType":"address","name":"proposer","type":"address"},{"internalType":"int256","name":"proposedPrice","type":"int256"}],"name":"proposePriceFor","outputs":[{"internalType":"uint256","name":"totalBond","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint32","name":"timestamp","type":"uint32"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"internalType":"contract IERC20","name":"currency","type":"address"},{"internalType":"uint256","name":"reward","type":"uint256"},{"internalType":"uint256","name":"bond","type":"uint256"},{"internalType":"uint256","name":"customLiveness","type":"uint256"},{"internalType":"address","name":"proposer","type":"address"},{"internalType":"int256","name":"proposedPrice","type":"int256"}],"name":"requestAndProposePriceFor","outputs":[{"internalType":"uint256","name":"totalBond","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint32","name":"timestamp","type":"uint32"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"internalType":"contract IERC20","name":"currency","type":"address"},{"internalType":"uint256","name":"reward","type":"uint256"},{"internalType":"uint256","name":"bond","type":"uint256"},{"internalType":"uint256","name":"customLiveness","type":"uint256"}],"name":"requestPrice","outputs":[{"internalType":"uint256","name":"totalBond","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"requester","type":"address"},{"internalType":"bytes32","name":"identifier","type":"bytes32"},{"internalType":"uint32","name":"timestamp","type":"uint32"},{"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"components":[{"internalType":"address","name":"proposer","type":"address"},{"internalType":"address","name":"disputer","type":"address"},{"internalType":"contract IERC20","name":"currency","type":"address"},{"internalType":"bool","name":"settled","type":"bool"},{"internalType":"int256","name":"proposedPrice","type":"int256"},{"internalType":"int256","name":"resolvedPrice","type":"int256"},{"internalType":"uint256","name":"expirationTime","type":"uint256"},{"internalType":"uint256","name":"reward","type":"uint256"},{"internalType":"uint256","name":"finalFee","type":"uint256"},{"internalType":"uint256","name":"bond","type":"uint256"},{"internalType":"uint256","name":"customLiveness","type":"uint256"}],"internalType":"struct SkinnyOptimisticOracleInterface.Request","name":"request","type":"tuple"}],"name":"settle","outputs":[{"internalType":"uint256","name":"payout","type":"uint256"},{"internalType":"int256","name":"resolvedPrice","type":"int256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"ancillaryData","type":"bytes"},{"internalType":"address","name":"requester","type":"address"}],"name":"stampAncillaryData","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"ancillaryBytesLimit()":"c371dda7","disputePrice(address,bytes32,uint32,bytes,(address,address,address,bool,int256,int256,uint256,uint256,uint256,uint256,uint256))":"3a31577e","disputePriceFor(bytes32,uint32,bytes,(address,address,address,bool,int256,int256,uint256,uint256,uint256,uint256,uint256),address,address)":"9ce320c8","getState(address,bytes32,uint32,bytes,(address,address,address,bool,int256,int256,uint256,uint256,uint256,uint256,uint256))":"51205554","hasPrice(address,bytes32,uint32,bytes,(address,address,address,bool,int256,int256,uint256,uint256,uint256,uint256,uint256))":"a337e1ad","proposePrice(address,bytes32,uint32,bytes,(address,address,address,bool,int256,int256,uint256,uint256,uint256,uint256,uint256),int256)":"93c44ef7","proposePriceFor(address,bytes32,uint32,bytes,(address,address,address,bool,int256,int256,uint256,uint256,uint256,uint256,uint256),address,int256)":"b1a166b2","requestAndProposePriceFor(bytes32,uint32,bytes,address,uint256,uint256,uint256,address,int256)":"af355d1e","requestPrice(bytes32,uint32,bytes,address,uint256,uint256,uint256)":"d6228407","settle(address,bytes32,uint32,bytes,(address,address,address,bool,int256,int256,uint256,uint256,uint256,uint256,uint256))":"b730539f","stampAncillaryData(bytes,address)":"af5d2f39"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ancillaryBytesLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"resolvedPrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"customLiveness\",\"type\":\"uint256\"}],\"internalType\":\"struct SkinnyOptimisticOracleInterface.Request\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"disputePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"resolvedPrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"customLiveness\",\"type\":\"uint256\"}],\"internalType\":\"struct SkinnyOptimisticOracleInterface.Request\",\"name\":\"request\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"}],\"name\":\"disputePriceFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"resolvedPrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"customLiveness\",\"type\":\"uint256\"}],\"internalType\":\"struct SkinnyOptimisticOracleInterface.Request\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"getState\",\"outputs\":[{\"internalType\":\"enum OptimisticOracleInterface.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"resolvedPrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"customLiveness\",\"type\":\"uint256\"}],\"internalType\":\"struct SkinnyOptimisticOracleInterface.Request\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"hasPrice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"resolvedPrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"customLiveness\",\"type\":\"uint256\"}],\"internalType\":\"struct SkinnyOptimisticOracleInterface.Request\",\"name\":\"request\",\"type\":\"tuple\"},{\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"}],\"name\":\"proposePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"resolvedPrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"customLiveness\",\"type\":\"uint256\"}],\"internalType\":\"struct SkinnyOptimisticOracleInterface.Request\",\"name\":\"request\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"}],\"name\":\"proposePriceFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"customLiveness\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"}],\"name\":\"requestAndProposePriceFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"customLiveness\",\"type\":\"uint256\"}],\"name\":\"requestPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"settled\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"proposedPrice\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"resolvedPrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"customLiveness\",\"type\":\"uint256\"}],\"internalType\":\"struct SkinnyOptimisticOracleInterface.Request\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"settle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"resolvedPrice\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"}],\"name\":\"stampAncillaryData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface used by financial contracts to interact with the Oracle. Voters will use a different interface.\",\"kind\":\"dev\",\"methods\":{\"disputePrice(address,bytes32,uint32,bytes,(address,address,address,bool,int256,int256,uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"request\":\"price request parameters whose hash must match the request that the caller wants to dispute.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"totalBond\":\"the amount that's pulled from the caller's wallet as a bond. The bond will be returned to the disputer once settled if the dispute was valid (the proposal was incorrect).\"}},\"disputePriceFor(bytes32,uint32,bytes,(address,address,address,bool,int256,int256,uint256,uint256,uint256,uint256,uint256),address,address)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"disputer\":\"address to set as the disputer.\",\"identifier\":\"price identifier to identify the existing request.\",\"request\":\"price request parameters whose hash must match the request that the caller wants to dispute.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"totalBond\":\"the amount that's pulled from the caller's wallet as a bond. The bond will be returned to the disputer once settled if the dispute was valid (the proposal was incorrect).\"}},\"getState(address,bytes32,uint32,bytes,(address,address,address,bool,int256,int256,uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"request\":\"price request parameters.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"_0\":\"the State.\"}},\"hasPrice(address,bytes32,uint32,bytes,(address,address,address,bool,int256,int256,uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"request\":\"price request parameters. The hash of these parameters must match with the request hash that is associated with the price request unique ID {requester, identifier, timestamp, ancillaryData}, or this method will revert.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"_0\":\"boolean indicating true if price exists and false if not.\"}},\"proposePrice(address,bytes32,uint32,bytes,(address,address,address,bool,int256,int256,uint256,uint256,uint256,uint256,uint256),int256)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"proposedPrice\":\"price being proposed.\",\"request\":\"price request parameters whose hash must match the request that the caller wants to propose a price for.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"totalBond\":\"the amount that's pulled from the caller's wallet as a bond. The bond will be returned to the proposer once settled if the proposal is correct.\"}},\"proposePriceFor(address,bytes32,uint32,bytes,(address,address,address,bool,int256,int256,uint256,uint256,uint256,uint256,uint256),address,int256)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"proposedPrice\":\"price being proposed.\",\"proposer\":\"address to set as the proposer.\",\"request\":\"price request parameters whose hash must match the request that the caller wants to propose a price for.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"totalBond\":\"the amount that's pulled from the caller's wallet as a bond. The bond will be returned to the proposer once settled if the proposal is correct.\"}},\"requestAndProposePriceFor(bytes32,uint32,bytes,address,uint256,uint256,uint256,address,int256)\":{\"details\":\"The caller is the requester, but the proposer can be customized.\",\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"bond\":\"custom proposal bond to set for request. If set to 0, defaults to the final fee.\",\"currency\":\"ERC20 token used for payment of rewards and fees. Must be approved for use with the DVM.\",\"customLiveness\":\"custom proposal liveness to set for request.\",\"identifier\":\"price identifier to identify the existing request.\",\"proposedPrice\":\"price being proposed.\",\"proposer\":\"address to set as the proposer.\",\"reward\":\"reward offered to a successful proposer. Will be pulled from the caller. Note: this can be 0,               which could make sense if the contract requests and proposes the value in the same call or               provides its own reward system.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"totalBond\":\"the amount that's pulled from the caller's wallet as a bond. The bond will be returned to the proposer once settled if the proposal is correct.\"}},\"requestPrice(bytes32,uint32,bytes,address,uint256,uint256,uint256)\":{\"params\":{\"ancillaryData\":\"ancillary data representing additional args being passed with the price request.\",\"bond\":\"custom proposal bond to set for request. If set to 0, defaults to the final fee.\",\"currency\":\"ERC20 token used for payment of rewards and fees. Must be approved for use with the DVM.\",\"customLiveness\":\"custom proposal liveness to set for request.\",\"identifier\":\"price identifier being requested.\",\"reward\":\"reward offered to a successful proposer. Will be pulled from the caller. Note: this can be 0,               which could make sense if the contract requests and proposes the value in the same call or               provides its own reward system.\",\"timestamp\":\"timestamp of the price being requested.\"},\"returns\":{\"totalBond\":\"default bond + final fee that the proposer and disputer will be required to pay.\"}},\"settle(address,bytes32,uint32,bytes,(address,address,address,bool,int256,int256,uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"identifier\":\"price identifier to identify the existing request.\",\"request\":\"price request parameters whose hash must match the request that the caller wants to settle.\",\"requester\":\"sender of the initial price request.\",\"timestamp\":\"timestamp to identify the existing request.\"},\"returns\":{\"payout\":\"the amount that the \\\"winner\\\" (proposer or disputer) receives on settlement. This amount includes the returned bonds as well as additional rewards.\",\"resolvedPrice\":\"the price that the request settled to.\"}},\"stampAncillaryData(bytes,address)\":{\"params\":{\"ancillaryData\":\"ancillary data of the price being requested.\",\"requester\":\"sender of the initial price request.\"},\"returns\":{\"_0\":\"the stamped ancillary bytes.\"}}},\"title\":\"Interface for the gas-cost-reduced version of the OptimisticOracle.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"disputePrice(address,bytes32,uint32,bytes,(address,address,address,bool,int256,int256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Disputes a price request with an active proposal where caller is the disputer.\"},\"disputePriceFor(bytes32,uint32,bytes,(address,address,address,bool,int256,int256,uint256,uint256,uint256,uint256,uint256),address,address)\":{\"notice\":\"Disputes a price request with an active proposal on another address' behalf. Note: this address will receive any rewards that come from this dispute. However, any bonds are pulled from the caller.\"},\"getState(address,bytes32,uint32,bytes,(address,address,address,bool,int256,int256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Computes the current state of a price request. See the State enum for more details.\"},\"hasPrice(address,bytes32,uint32,bytes,(address,address,address,bool,int256,int256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Checks if a given request has resolved, expired or been settled (i.e the optimistic oracle has a price).\"},\"proposePrice(address,bytes32,uint32,bytes,(address,address,address,bool,int256,int256,uint256,uint256,uint256,uint256,uint256),int256)\":{\"notice\":\"Proposes a price value where caller is the proposer.\"},\"proposePriceFor(address,bytes32,uint32,bytes,(address,address,address,bool,int256,int256,uint256,uint256,uint256,uint256,uint256),address,int256)\":{\"notice\":\"Proposes a price value on another address' behalf. Note: this address will receive any rewards that come from this proposal. However, any bonds are pulled from the caller.\"},\"requestAndProposePriceFor(bytes32,uint32,bytes,address,uint256,uint256,uint256,address,int256)\":{\"notice\":\"Combines logic of requestPrice and proposePrice while taking advantage of gas savings from not having to overwrite Request params that a normal requestPrice() => proposePrice() flow would entail. Note: The proposer will receive any rewards that come from this proposal. However, any bonds are pulled from the caller.\"},\"requestPrice(bytes32,uint32,bytes,address,uint256,uint256,uint256)\":{\"notice\":\"Requests a new price.\"},\"settle(address,bytes32,uint32,bytes,(address,address,address,bool,int256,int256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Attempts to settle an outstanding price request. Will revert if it isn't settleable.\"},\"stampAncillaryData(bytes,address)\":{\"notice\":\"Generates stamped ancillary data in the format that it would be used in the case of a price dispute.\"}},\"notice\":\"Differences from normal OptimisticOracle: - refundOnDispute: flag is removed, by default there are no refunds on disputes. - customizing request parameters: In the OptimisticOracle, parameters like `bond` and `customLiveness` can be reset   after a request is already made via `requestPrice`. In the SkinnyOptimisticOracle, these parameters can only be   set in `requestPrice`, which has an expanded input set. - settleAndGetPrice: Replaced by `settle`, which can only be called once per settleable request. The resolved price   can be fetched via the `Settle` event or the return value of `settle`. - general changes to interface: Functions that interact with existing requests all require the parameters of the   request to modify to be passed as input. These parameters must match with the existing request parameters or the   function will revert. This change reflects the internal refactor to store hashed request parameters instead of the   full request struct.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uma/core/contracts/optimistic-oracle-v2/interfaces/SkinnyOptimisticOracleInterface.sol\":\"SkinnyOptimisticOracleInterface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81\",\"dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf\"]},\"@uma/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleInterface.sol\":{\"keccak256\":\"0xfac07e0c25da341d65305c0b06004027b7ddc9f3a3e3aae1d39c3a59597f3c9b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2bff7b22f1c9cbc6dc5bd8d3324ab37b2e293f973c592510b3240920c94ebdee\",\"dweb:/ipfs/QmUiTWPC7qpoME3CWBSWEioszs5zt7oseUPBKHzQbHaoDv\"]},\"@uma/core/contracts/optimistic-oracle-v2/interfaces/SkinnyOptimisticOracleInterface.sol\":{\"keccak256\":\"0x91d21e44a97b719106e8f97b99399a3d8dc3697badd01df06518892f38fe033f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://68c350c822b256b43543ac4dd3dd1413ed95f25a9415d5dba4c562cd11d55716\",\"dweb:/ipfs/QmZyYeBnM59oPmWcK1KERNayg7xuHv12sLzzmqC42Lq76a\"]}},\"version\":1}"}},"contracts/HubPool.sol":{"HubPool":{"abi":[{"inputs":[{"internalType":"contract LpTokenFactoryInterface","name":"_lpTokenFactory","type":"address"},{"internalType":"contract FinderInterface","name":"_finder","type":"address"},{"internalType":"contract WETH9Interface","name":"_weth","type":"address"},{"internalType":"address","name":"_timer","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newBondToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"newBondAmount","type":"uint256"}],"name":"BondSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"l2ChainId","type":"uint256"},{"indexed":false,"internalType":"address","name":"adapter","type":"address"},{"indexed":false,"internalType":"address","name":"spokePool","type":"address"}],"name":"CrossChainContractsSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolRebalanceRoot","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"relayerRefundRoot","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"slowRelayRoot","type":"bytes32"},{"indexed":true,"internalType":"address","name":"proposer","type":"address"}],"name":"EmergencyRootBundleDeleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"newIdentifier","type":"bytes32"}],"name":"IdentifierSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"l1Token","type":"address"},{"indexed":false,"internalType":"address","name":"lpToken","type":"address"}],"name":"L1TokenEnabledForLiquidityProvision","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"l1Token","type":"address"},{"indexed":false,"internalType":"address","name":"lpToken","type":"address"}],"name":"L2TokenDisabledForLiquidityProvision","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"l1Token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"lpTokensMinted","type":"uint256"},{"indexed":true,"internalType":"address","name":"liquidityProvider","type":"address"}],"name":"LiquidityAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"l1Token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"lpTokensBurnt","type":"uint256"},{"indexed":true,"internalType":"address","name":"liquidityProvider","type":"address"}],"name":"LiquidityRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newLiveness","type":"uint256"}],"name":"LivenessSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bool","name":"isPaused","type":"bool"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"challengePeriodEndTimestamp","type":"uint32"},{"indexed":false,"internalType":"uint8","name":"poolRebalanceLeafCount","type":"uint8"},{"indexed":false,"internalType":"uint256[]","name":"bundleEvaluationBlockNumbers","type":"uint256[]"},{"indexed":true,"internalType":"bytes32","name":"poolRebalanceRoot","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"relayerRefundRoot","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"slowRelayRoot","type":"bytes32"},{"indexed":true,"internalType":"address","name":"proposer","type":"address"}],"name":"ProposeRootBundle","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newProtocolFeeCaptureAddress","type":"address"},{"indexed":true,"internalType":"uint256","name":"newProtocolFeeCapturePct","type":"uint256"}],"name":"ProtocolFeeCaptureSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"l1Token","type":"address"},{"indexed":true,"internalType":"uint256","name":"accumulatedFees","type":"uint256"}],"name":"ProtocolFeesCapturedClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"disputer","type":"address"},{"indexed":false,"internalType":"uint256","name":"requestTime","type":"uint256"}],"name":"RootBundleCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"disputer","type":"address"},{"indexed":false,"internalType":"uint256","name":"requestTime","type":"uint256"}],"name":"RootBundleDisputed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"groupIndex","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"leafId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"chainId","type":"uint256"},{"indexed":false,"internalType":"address[]","name":"l1Tokens","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"bundleLpFees","type":"uint256[]"},{"indexed":false,"internalType":"int256[]","name":"netSendAmounts","type":"int256[]"},{"indexed":false,"internalType":"int256[]","name":"runningBalances","type":"int256[]"},{"indexed":true,"internalType":"address","name":"caller","type":"address"}],"name":"RootBundleExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"originChainId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"indexed":true,"internalType":"address","name":"originToken","type":"address"},{"indexed":false,"internalType":"bool","name":"depositsEnabled","type":"bool"}],"name":"SetEnableDepositRoute","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"indexed":true,"internalType":"address","name":"l1Token","type":"address"},{"indexed":true,"internalType":"address","name":"destinationToken","type":"address"}],"name":"SetPoolRebalanceRoute","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"chainId","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"}],"name":"SpokePoolAdminFunctionTriggered","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"internalType":"address","name":"l1Token","type":"address"},{"internalType":"uint256","name":"l1TokenAmount","type":"uint256"}],"name":"addLiquidity","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"bondAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"bondToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"l1Token","type":"address"}],"name":"claimProtocolFeesCaptured","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"crossChainContracts","outputs":[{"internalType":"address","name":"adapter","type":"address"},{"internalType":"address","name":"spokePool","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"l1Token","type":"address"}],"name":"disableL1TokenForLiquidityProvision","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"disputeRootBundle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"emergencyDeleteProposal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"l1Token","type":"address"}],"name":"enableL1TokenForLiquidityProvision","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"l1Token","type":"address"}],"name":"exchangeRateCurrent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"uint256","name":"groupIndex","type":"uint256"},{"internalType":"uint256[]","name":"bundleLpFees","type":"uint256[]"},{"internalType":"int256[]","name":"netSendAmounts","type":"int256[]"},{"internalType":"int256[]","name":"runningBalances","type":"int256[]"},{"internalType":"uint8","name":"leafId","type":"uint8"},{"internalType":"address[]","name":"l1Tokens","type":"address[]"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"executeRootBundle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"finder","outputs":[{"internalType":"contract FinderInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"l1Token","type":"address"},{"internalType":"int256","name":"haircutAmount","type":"int256"}],"name":"haircutReserves","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"identifier","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"l1Token","type":"address"}],"name":"liquidityUtilizationCurrent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"l1Token","type":"address"},{"internalType":"uint256","name":"relayedAmount","type":"uint256"}],"name":"liquidityUtilizationPostRelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"liveness","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"loadEthForL2Calls","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"lpFeeRatePerSecond","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lpTokenFactory","outputs":[{"internalType":"contract LpTokenFactoryInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"address","name":"l1Token","type":"address"}],"name":"poolRebalanceRoute","outputs":[{"internalType":"address","name":"destinationToken","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"pooledTokens","outputs":[{"internalType":"address","name":"lpToken","type":"address"},{"internalType":"bool","name":"isEnabled","type":"bool"},{"internalType":"uint32","name":"lastLpFeeUpdate","type":"uint32"},{"internalType":"int256","name":"utilizedReserves","type":"int256"},{"internalType":"uint256","name":"liquidReserves","type":"uint256"},{"internalType":"uint256","name":"undistributedLpFees","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"bundleEvaluationBlockNumbers","type":"uint256[]"},{"internalType":"uint8","name":"poolRebalanceLeafCount","type":"uint8"},{"internalType":"bytes32","name":"poolRebalanceRoot","type":"bytes32"},{"internalType":"bytes32","name":"relayerRefundRoot","type":"bytes32"},{"internalType":"bytes32","name":"slowRelayRoot","type":"bytes32"}],"name":"proposeRootBundle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"protocolFeeCaptureAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"protocolFeeCapturePct","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"bytes","name":"functionData","type":"bytes"}],"name":"relaySpokePoolAdminFunction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"l1Token","type":"address"},{"internalType":"uint256","name":"lpTokenAmount","type":"uint256"},{"internalType":"bool","name":"sendEth","type":"bool"}],"name":"removeLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rootBundleProposal","outputs":[{"internalType":"bytes32","name":"poolRebalanceRoot","type":"bytes32"},{"internalType":"bytes32","name":"relayerRefundRoot","type":"bytes32"},{"internalType":"bytes32","name":"slowRelayRoot","type":"bytes32"},{"internalType":"uint256","name":"claimedBitMap","type":"uint256"},{"internalType":"address","name":"proposer","type":"address"},{"internalType":"uint8","name":"unclaimedPoolRebalanceLeafCount","type":"uint8"},{"internalType":"uint32","name":"challengePeriodEndTimestamp","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"newBondToken","type":"address"},{"internalType":"uint256","name":"newBondAmount","type":"uint256"}],"name":"setBond","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"l2ChainId","type":"uint256"},{"internalType":"address","name":"adapter","type":"address"},{"internalType":"address","name":"spokePool","type":"address"}],"name":"setCrossChainContracts","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"time","type":"uint256"}],"name":"setCurrentTime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"address","name":"originToken","type":"address"},{"internalType":"bool","name":"depositsEnabled","type":"bool"}],"name":"setDepositRoute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"newIdentifier","type":"bytes32"}],"name":"setIdentifier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"newLiveness","type":"uint32"}],"name":"setLiveness","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"pause","type":"bool"}],"name":"setPaused","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"address","name":"l1Token","type":"address"},{"internalType":"address","name":"destinationToken","type":"address"}],"name":"setPoolRebalanceRoute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newProtocolFeeCaptureAddress","type":"address"},{"internalType":"uint256","name":"newProtocolFeeCapturePct","type":"uint256"}],"name":"setProtocolFeeCapture","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"l1Token","type":"address"}],"name":"sync","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"timerAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"unclaimedAccumulatedProtocolFees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"weth","outputs":[{"internalType":"contract WETH9Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0xE0 CALLVALUE PUSH3 0x1A3 JUMPI PUSH1 0x1F PUSH3 0x4698 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH3 0x1A7 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x80 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x1A3 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP3 AND DUP3 SUB PUSH3 0x1A3 JUMPI PUSH1 0x20 DUP2 ADD MLOAD DUP4 DUP2 AND DUP2 SUB PUSH3 0x1A3 JUMPI PUSH1 0x40 DUP3 ADD MLOAD SWAP2 DUP5 DUP4 AND DUP4 SUB PUSH3 0x1A3 JUMPI PUSH1 0x60 ADD MLOAD DUP5 DUP2 AND DUP1 SWAP2 SUB PUSH3 0x1A3 JUMPI PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND CALLER SWAP1 DUP2 OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP8 SWAP3 SWAP7 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0xC DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0xE1 PUSH1 0xA5 SHL OR SWAP1 SSTORE PUSH9 0x20A1A927A9A996AB19 PUSH1 0xB9 SHL PUSH1 0xD SSTORE PUSH6 0x15D3EF79800 PUSH1 0xE SSTORE PUSH1 0xA0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x80 MSTORE PUSH1 0xB DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x44DC SWAP1 DUP2 PUSH3 0x1BC DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x803 ADD MSTORE DUP2 DUP2 PUSH2 0x1074 ADD MSTORE DUP2 DUP2 PUSH2 0x1195 ADD MSTORE PUSH2 0x4143 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x168E ADD MSTORE PUSH2 0x1EEE ADD MSTORE PUSH1 0xC0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x526 ADD MSTORE DUP2 DUP2 PUSH2 0xF03 ADD MSTORE DUP2 DUP2 PUSH2 0x2007 ADD MSTORE DUP2 DUP2 PUSH2 0x3876 ADD MSTORE PUSH2 0x398A ADD MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x26 JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x1E JUMPI PUSH2 0x1C PUSH2 0x412B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C PUSH2 0x412B JUMP JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x660B53 EQ PUSH2 0x313 JUMPI DUP1 PUSH3 0xC99206 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0x84D0513 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x9474AE2 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xC501AF9 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0xEE28A88 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x10B99527 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x11CFC159 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x1C39C38D EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x22395AAA EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x22F8E566 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x240F475F EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x26205D80 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x29CB924D EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x2D0F6F84 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x2D32D557 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x33DC09CA EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x4144FD61 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x4F7473FF EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x56688700 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x56864F38 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x625997C0 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x69B62502 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x6AD0690A EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x76EC08DD EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x7998A1C4 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x80C09A82 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x80F323A7 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x8BDA0C00 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xA16FD6E9 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xA5841194 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xAC9650D8 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xB60C2D7D EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xB9A3C84C EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xC28F4392 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xCD949995 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xDD70E5E8 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xE0F339E3 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0xE40064D7 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xE460E35C EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xF0056A7D EQ PUSH2 0x232 JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0xE JUMPI PUSH2 0x23CE JUMP JUMPDEST PUSH2 0x2351 JUMP JUMPDEST PUSH2 0x2264 JUMP JUMPDEST PUSH2 0x2228 JUMP JUMPDEST PUSH2 0x21EE JUMP JUMPDEST PUSH2 0x2179 JUMP JUMPDEST PUSH2 0x2051 JUMP JUMPDEST PUSH2 0x202B JUMP JUMPDEST PUSH2 0x1FE8 JUMP JUMPDEST PUSH2 0x1DAF JUMP JUMPDEST PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0x1BE9 JUMP JUMPDEST PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0x1B89 JUMP JUMPDEST PUSH2 0x19B9 JUMP JUMPDEST PUSH2 0x199C JUMP JUMPDEST PUSH2 0x18F1 JUMP JUMPDEST PUSH2 0x16B2 JUMP JUMPDEST PUSH2 0x166F JUMP JUMPDEST PUSH2 0x1616 JUMP JUMPDEST PUSH2 0x15F0 JUMP JUMPDEST PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0x1483 JUMP JUMPDEST PUSH2 0x1461 JUMP JUMPDEST PUSH2 0x1378 JUMP JUMPDEST PUSH2 0x1118 JUMP JUMPDEST PUSH2 0x10FB JUMP JUMPDEST PUSH2 0x1098 JUMP JUMPDEST PUSH2 0x1055 JUMP JUMPDEST PUSH2 0xE63 JUMP JUMPDEST PUSH2 0xE1B JUMP JUMPDEST PUSH2 0xD81 JUMP JUMPDEST PUSH2 0xD67 JUMP JUMPDEST PUSH2 0xCF3 JUMP JUMPDEST PUSH2 0xCCA JUMP JUMPDEST PUSH2 0xC4F JUMP JUMPDEST PUSH2 0xBEE JUMP JUMPDEST PUSH2 0xBC9 JUMP JUMPDEST PUSH2 0xB46 JUMP JUMPDEST PUSH2 0xB29 JUMP JUMPDEST PUSH2 0xA77 JUMP JUMPDEST PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST PUSH2 0x664 JUMP JUMPDEST PUSH2 0x49F JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x329 JUMPI JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x34A DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x356 PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0x35E PUSH2 0x3418 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH0 SSTORE PUSH8 0xDE0B6B3A7640000 DUP3 GT PUSH2 0x45B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x417 JUMPI PUSH2 0x3D4 SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FF PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0xB SLOAD SWAP3 PUSH1 0x8 SHL AND SWAP2 AND OR PUSH1 0xB SSTORE JUMP JUMPDEST PUSH2 0x3DD DUP3 PUSH1 0xF SSTORE JUMP JUMPDEST PUSH32 0xC1993B89FD79A19ECE7BEB067DDC8534CA26D29C0FF94EA2F53B4A508D1EEDC9 PUSH0 DUP1 LOG3 PUSH2 0x1C PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4261642070726F746F636F6C4665654361707475726541646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4261642070726F746F636F6C4665654361707475726550637400000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x329 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x4BC PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0x4CE PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x24A9 JUMP JUMPDEST PUSH2 0x4D6 PUSH2 0x3418 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x2ABF579 PUSH1 0xE6 SHL DUP2 MSTORE PUSH32 0x4964656E74696669657257686974656C69737400000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP4 DUP2 PUSH1 0x24 DUP2 PUSH32 0x0 DUP8 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x630 JUMPI DUP5 SWAP2 PUSH0 SWAP5 PUSH2 0x635 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x90978D1B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP4 DUP5 SWAP2 PUSH1 0x24 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x630 JUMPI PUSH32 0xF45367C278FCCEFF23D601CE4BDD191E5BD61687FF9F29DC7276A08FE54C0C5D SWAP4 PUSH2 0x5EA SWAP4 PUSH2 0x5D1 SWAP3 PUSH0 SWAP3 PUSH2 0x603 JUMPI JUMPDEST POP POP PUSH2 0x2529 JUMP JUMPDEST PUSH2 0x5DA DUP2 PUSH1 0xD SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH2 0x1C PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x622 SWAP3 POP DUP1 RETURNDATASIZE LT PUSH2 0x629 JUMPI JUMPDEST PUSH2 0x61A DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2514 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5CA JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x610 JUMP JUMPDEST PUSH2 0x2509 JUMP JUMPDEST PUSH2 0x656 SWAP2 SWAP5 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x65D JUMPI JUMPDEST PUSH2 0x64E DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x24F4 JUMP JUMPDEST SWAP3 PUSH0 PUSH2 0x559 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x644 JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH2 0x6A2 PUSH1 0x4 CALLDATALOAD PUSH2 0x686 DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH2 0x68E PUSH2 0x3418 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND PUSH0 SSTORE PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x352E JUMP JUMPDEST PUSH2 0x6B8 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE RETURN JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH32 0xAC111B3B527B307393C94D98F26140EFFB71411054466818BE97912D2D65F776 PUSH1 0x4 CALLDATALOAD PUSH2 0x749 DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH2 0x751 PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0x759 PUSH2 0x3418 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP4 DUP5 SWAP1 KECCAK256 DUP1 SLOAD SWAP4 DUP5 AND SWAP1 SSTORE DUP4 MLOAD SWAP2 DUP3 MSTORE SWAP2 SWAP1 SWAP4 AND SWAP1 DUP4 ADD MSTORE DUP2 SWAP1 DUP2 ADD PUSH2 0x5EA JUMP JUMPDEST DUP1 ISZERO ISZERO SUB PUSH2 0x329 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x7C6 DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x7D5 DUP3 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x7DD PUSH2 0x3418 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH0 SSTORE PUSH2 0x7F7 PUSH1 0xFF PUSH1 0xB SLOAD AND ISZERO PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH32 0x0 AND SWAP2 DUP5 AND SWAP3 DUP4 DUP4 EQ DUP1 ISZERO PUSH2 0xA43 JUMPI JUMPDEST PUSH2 0x83A SWAP1 PUSH2 0x25BF JUMP JUMPDEST PUSH2 0x85D PUSH2 0x84F PUSH2 0x849 DUP8 PUSH2 0x35F4 JUMP JUMPDEST DUP5 PUSH2 0x2640 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 DIV SWAP1 JUMP JUMPDEST SWAP5 PUSH2 0x89B PUSH2 0x88F PUSH2 0x88F PUSH2 0x882 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x79CC679000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x630 JUMPI PUSH1 0x2 SWAP3 PUSH2 0x909 SWAP3 PUSH2 0xA24 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH2 0x915 DUP7 DUP3 SLOAD PUSH2 0x2671 JUMP JUMPDEST SWAP1 SSTORE ISZERO PUSH2 0x9ED JUMPI DUP2 EXTCODESIZE ISZERO PUSH2 0x329 JUMPI PUSH0 PUSH1 0x40 MLOAD DUP1 SWAP4 PUSH32 0x2E1A7D4D00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 DUP4 DUP2 PUSH2 0x961 DUP11 PUSH1 0x4 DUP4 ADD SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP3 MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x630 JUMPI PUSH32 0xCDA1185F28599E6BD14AB8A68B3C30A11E1DCE4256B5E67E94DD3FD846A6C589 SWAP3 PUSH2 0x9BB SWAP3 PUSH2 0x9D4 JUMPI JUMPDEST POP PUSH2 0x9A2 DUP6 CALLER PUSH2 0x3722 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER SWAP5 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH2 0x1C PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x9E1 PUSH2 0x9E7 SWAP3 PUSH2 0x16E3 JUMP JUMPDEST DUP1 PUSH2 0xB1F JUMP JUMPDEST PUSH0 PUSH2 0x997 JUMP JUMPDEST PUSH32 0xCDA1185F28599E6BD14AB8A68B3C30A11E1DCE4256B5E67E94DD3FD846A6C589 SWAP2 POP PUSH2 0x9BB SWAP1 PUSH2 0xA1F DUP6 CALLER DUP7 PUSH2 0x36DA JUMP JUMPDEST PUSH2 0x9A2 JUMP JUMPDEST PUSH2 0xA3C SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x629 JUMPI PUSH2 0x61A DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST POP PUSH0 PUSH2 0x8F1 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x831 JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH2 0xA67 DUP2 PUSH2 0x318 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH2 0xA74 DUP2 PUSH2 0x318 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH2 0xA85 CALLDATASIZE PUSH2 0xA4B JUMP JUMPDEST PUSH2 0xA90 SWAP3 SWAP2 SWAP3 PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0xA98 PUSH2 0x3418 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND PUSH0 SSTORE PUSH2 0xAAD DUP3 DUP5 PUSH2 0x37F8 JUMP JUMPDEST PUSH0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0xAD7 DUP2 PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP3 AND SWAP1 PUSH32 0x234E7AF08F77827792CC909447F27D2E6A3E2D839B04E26B50B71704A131C8A8 PUSH0 DUP1 LOG4 PUSH2 0x1C PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST PUSH0 SWAP2 SUB SLT PUSH2 0x329 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH1 0xE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xB63 DUP2 PUSH2 0x79F JUMP JUMPDEST PUSH2 0xB6B PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0xB73 PUSH2 0x3418 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND PUSH0 SSTORE ISZERO ISZERO PUSH1 0xFF NOT PUSH1 0xB SLOAD AND PUSH1 0xFF DUP3 AND OR PUSH1 0xB SSTORE PUSH32 0xE2FB031EE032DC02D8011DC50B816EB450CF856ABD8261680DAC74F72165BD2 PUSH0 DUP1 LOG2 PUSH2 0x1C PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH0 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH2 0xC06 PUSH2 0x3418 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND PUSH0 SSTORE PUSH2 0xC19 PUSH2 0x27D9 JUMP JUMPDEST PUSH2 0xC39 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH1 0xC SLOAD AND SWAP1 PUSH2 0xC32 PUSH2 0x3832 JUMP JUMPDEST AND SWAP1 PUSH2 0x38C7 JUMP JUMPDEST PUSH2 0x1C PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH0 SLOAD AND DUP1 ISZERO PUSH2 0x329 JUMPI DUP1 EXTCODESIZE ISZERO PUSH2 0x329 JUMPI PUSH0 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH32 0x22F8E56600000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x630 JUMPI PUSH2 0xCC0 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x1C SWAP2 POP PUSH2 0x16E3 JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD PUSH1 0x8 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 CALLDATALOAD PUSH2 0xD18 DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH2 0xD20 PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0xD28 PUSH2 0x3418 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND PUSH0 SSTORE AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD PUSH2 0xD4F PUSH1 0x24 CALLDATALOAD DUP3 SLOAD PUSH2 0x2B2F JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1C PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH2 0x6B8 PUSH2 0x2B47 JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH0 PUSH1 0x4 CALLDATALOAD PUSH2 0xD9F DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH2 0xDA7 PUSH2 0x3418 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA0 SHL NOT DUP3 SLOAD AND DUP3 SSTORE PUSH2 0xDE1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP1 DUP2 SLOAD SWAP5 DUP6 SWAP3 SSTORE PUSH1 0xB SLOAD PUSH1 0x8 SHR AND DUP4 PUSH2 0x36DA JUMP JUMPDEST PUSH32 0x74740239D7D696C84422B720E125E1F47C4138C66D1F4D2A48E99F4197CDB79C PUSH0 DUP1 LOG3 PUSH2 0x1C PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH2 0xE44 PUSH1 0x24 CALLDATALOAD PUSH2 0xE3B DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x37F8 JUMP JUMPDEST PUSH0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xE80 DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xE8C PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0xE9E PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x24A9 JUMP JUMPDEST PUSH2 0xEA6 PUSH2 0x3418 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH0 SSTORE PUSH2 0xEBC DUP3 ISZERO ISZERO PUSH2 0x2BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2ABF579 PUSH1 0xE6 SHL DUP2 MSTORE PUSH32 0x436F6C6C61746572616C57686974656C69737400000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH1 0x20 SWAP2 SWAP1 DUP3 DUP3 PUSH1 0x24 DUP2 PUSH32 0x0 DUP10 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x630 JUMPI PUSH0 SWAP3 PUSH2 0x1036 JUMPI JUMPDEST POP DUP3 DUP6 DUP6 AND SWAP6 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH32 0x3A3AB67200000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH2 0xF82 DUP12 PUSH1 0x4 DUP4 ADD SWAP2 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD SWAP4 AND SWAP1 MSTORE JUMP JUMPDEST SUB SWAP3 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x630 JUMPI PUSH32 0xBFA9A96010167E98CE8C004F718932CBBFD33A58D681C752E693BE7D457A1B3B SWAP5 PUSH2 0xFCD PUSH2 0xFF7 SWAP5 PUSH2 0xFE9 SWAP4 PUSH2 0x1000 SWAP8 PUSH0 SWAP3 PUSH2 0x1019 JUMPI JUMPDEST POP POP PUSH2 0x2C03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT PUSH1 0xC SLOAD AND OR PUSH1 0xC SSTORE JUMP JUMPDEST PUSH2 0xFF1 PUSH2 0x3944 JUMP JUMPDEST SWAP1 PUSH2 0x2C4E JUMP JUMPDEST PUSH2 0x5DA DUP2 PUSH1 0x10 SSTORE JUMP JUMPDEST SUB SWAP1 LOG2 PUSH2 0x1C PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x102F SWAP3 POP DUP1 RETURNDATASIZE LT PUSH2 0x629 JUMPI PUSH2 0x61A DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0x104E SWAP2 SWAP3 POP DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x65D JUMPI PUSH2 0x64E DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0xF34 JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0xE0 PUSH1 0x2 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD SWAP1 PUSH1 0x6 SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xA8 SHR AND PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH1 0xF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1130 DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x113C PUSH2 0x3418 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH0 SSTORE PUSH2 0x1156 PUSH1 0xFF PUSH1 0xB SLOAD AND ISZERO PUSH2 0x2574 JUMP JUMPDEST PUSH2 0x1186 PUSH2 0x1181 PUSH2 0x1177 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xA0 SHR PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2C5B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 SWAP1 PUSH32 0x0 AND DUP3 EQ DUP1 DUP1 PUSH2 0x136F JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x1367 JUMPI JUMPDEST PUSH2 0x11CE SWAP1 PUSH2 0x2CA6 JUMP JUMPDEST PUSH2 0x1238 PUSH2 0x88F PUSH2 0x88F PUSH2 0x882 PUSH2 0x11F5 PUSH2 0x11E6 DUP10 PUSH2 0x261E JUMP JUMPDEST PUSH2 0x11EF DUP9 PUSH2 0x35F4 JUMP JUMPDEST SWAP1 PUSH2 0x2653 JUMP JUMPDEST SWAP6 PUSH1 0x2 PUSH2 0x1213 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH2 0x121F DUP11 DUP3 SLOAD PUSH2 0x2C4E JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x40C10F1900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x630 JUMPI PUSH2 0x1348 JUMPI JUMPDEST POP DUP1 PUSH2 0x133F JUMPI JUMPDEST ISZERO PUSH2 0x130E JUMPI DUP2 EXTCODESIZE ISZERO PUSH2 0x329 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH4 0xD0E30DB PUSH1 0xE4 SHL DUP3 MSTORE PUSH0 DUP3 PUSH1 0x4 DUP2 CALLVALUE DUP8 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x630 JUMPI PUSH32 0x3C69701A61C79A92EF9692903AAA0068BCE8771361ECB09547391E4FB4DF8537 SWAP3 PUSH2 0x9BB SWAP3 PUSH2 0x12FB JUMPI JUMPDEST POP PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER SWAP5 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x9E1 PUSH2 0x1308 SWAP3 PUSH2 0x16E3 JUMP JUMPDEST PUSH0 PUSH2 0x12E1 JUMP JUMPDEST PUSH2 0x9BB PUSH32 0x3C69701A61C79A92EF9692903AAA0068BCE8771361ECB09547391E4FB4DF8537 SWAP2 PUSH2 0xA1F DUP6 ADDRESS CALLER DUP8 PUSH2 0x3BFD JUMP JUMPDEST POP CALLVALUE ISZERO ISZERO PUSH2 0x128C JUMP JUMPDEST PUSH2 0x1360 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x629 JUMPI PUSH2 0x61A DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST POP PUSH0 PUSH2 0x1285 JUMP JUMPDEST POP CALLVALUE ISZERO PUSH2 0x11C5 JUMP JUMPDEST POP DUP4 CALLVALUE EQ PUSH2 0x11BE JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x139B DUP4 PUSH2 0x318 JUMP JUMPDEST PUSH32 0xB7D00A563842EFB2C121A0EB02B7BB7BA1A34625BBC3D65057F1F0DBEC0EC2A1 PUSH1 0x20 PUSH1 0x64 CALLDATALOAD SWAP5 PUSH2 0x13CB DUP7 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x13D3 PUSH2 0x3418 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH0 SSTORE PUSH2 0x13E6 PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0x1444 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP3 PUSH32 0x272751C700000000000000000000000000000000000000000000000000000000 DUP6 DUP6 ADD MSTORE AND SWAP7 DUP8 PUSH1 0x24 DUP5 ADD MSTORE DUP7 PUSH1 0x44 DUP5 ADD MSTORE ISZERO ISZERO SWAP2 DUP3 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x64 DUP2 MSTORE PUSH2 0x143E DUP2 PUSH2 0x1750 JUMP JUMPDEST DUP6 PUSH2 0x3C55 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG4 PUSH2 0x1C PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xB SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH2 0x149B PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0x14A3 PUSH2 0x3418 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH0 SSTORE PUSH1 0x40 MLOAD PUSH2 0x14BA DUP2 PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x3 SLOAD PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x4 SLOAD SWAP1 PUSH1 0x40 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x5 SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH32 0x993CBA33F9B140C9CE20BA10D7EDA92128D5BEB6DF856F064916108A11647A73 PUSH2 0x159C PUSH1 0x6 SLOAD SWAP5 PUSH2 0x158A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0xFF PUSH2 0x1571 PUSH1 0x80 DUP4 ADD SWAP10 DUP6 DUP2 AND DUP12 MSTORE PUSH2 0x1551 PUSH4 0xFFFFFFFF PUSH1 0xA0 DUP7 ADD SWAP3 PUSH2 0x153E DUP7 DUP3 PUSH1 0xA0 SHR AND DUP6 SWAP1 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0xA8 SHR AND PUSH1 0xC0 DUP7 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x156A PUSH0 PUSH1 0x2 SSTORE PUSH0 PUSH1 0x3 SSTORE PUSH0 PUSH1 0x4 SSTORE PUSH0 PUSH1 0x5 SSTORE PUSH0 PUSH1 0x6 SSTORE JUMP JUMPDEST MLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST AND PUSH2 0x15B5 JUMPI JUMPDEST MLOAD SWAP5 MLOAD SWAP6 MLOAD SWAP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE AND SWAP5 SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x1C PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x15DE PUSH2 0x15CA PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP10 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x10 SLOAD SWAP2 PUSH2 0x36DA JUMP JUMPDEST PUSH2 0x1577 JUMP JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI STOP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH4 0xFFFFFFFF PUSH1 0xC SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH2 0x162E PUSH2 0x33C0 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH1 0xD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x16F7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x16CF JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16F7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16F7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16F7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16F7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16F7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x160 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16F7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x17BC DUP3 PUSH2 0x16FC JUMP JUMPDEST JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x16F7 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x329 JUMPI PUSH1 0x20 SWAP1 DUP3 CALLDATALOAD PUSH2 0x17F0 DUP2 PUSH2 0x17BE JUMP JUMPDEST SWAP4 PUSH2 0x17FE PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x176C JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x329 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1827 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x1819 JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x329 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x329 JUMPI JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x329 JUMPI PUSH1 0x20 SWAP1 DUP3 CALLDATALOAD PUSH2 0x1870 DUP2 PUSH2 0x17BE JUMP JUMPDEST SWAP4 PUSH2 0x187E PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x176C JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x329 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x18A7 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 DUP1 SWAP2 DUP4 CALLDATALOAD PUSH2 0x18B5 DUP2 PUSH2 0x318 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x1899 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x329 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x329 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x329 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x329 JUMPI PUSH2 0x1925 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x17D6 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x329 JUMPI PUSH2 0x193D SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x17D6 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x329 JUMPI PUSH2 0x1954 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x17D6 JUMP JUMPDEST PUSH2 0x195C PUSH2 0x1836 JUMP JUMPDEST SWAP1 PUSH1 0xC4 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x329 JUMPI PUSH2 0x1974 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x1856 JUMP JUMPDEST SWAP3 PUSH1 0xE4 CALLDATALOAD SWAP7 DUP8 GT PUSH2 0x329 JUMPI PUSH2 0x198F PUSH2 0x1C SWAP8 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x18C0 JUMP JUMPDEST SWAP7 SWAP1 SWAP6 PUSH1 0x24 CALLDATALOAD SWAP1 CALLDATALOAD PUSH2 0x2CF1 JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x329 JUMPI PUSH2 0x19EA SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x18C0 JUMP JUMPDEST SWAP1 PUSH2 0x19F3 PUSH2 0x1846 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x84 CALLDATALOAD SWAP2 PUSH2 0x1A07 PUSH2 0x3418 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH0 SSTORE PUSH2 0x1A24 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x24A9 JUMP JUMPDEST PUSH2 0x1A33 PUSH1 0xFF PUSH1 0xB SLOAD AND ISZERO PUSH2 0x2574 JUMP JUMPDEST PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x1B45 JUMPI PUSH2 0x159C PUSH32 0x3185FA6FAC8E91DC65E7424A8081C73353151D2715BDDB71DB0982C1FE4C0FD4 SWAP4 PUSH2 0x1A8A PUSH2 0x1A78 PUSH2 0x1A6F PUSH2 0x2B47 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xA0 SHR PUSH4 0xFFFFFFFF AND SWAP1 PUSH2 0x26D8 JUMP JUMPDEST SWAP8 PUSH2 0x1AA4 PUSH0 PUSH1 0x2 SSTORE PUSH0 PUSH1 0x3 SSTORE PUSH0 PUSH1 0x4 SSTORE PUSH0 PUSH1 0x5 SSTORE PUSH0 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x1AC9 DUP10 PUSH4 0xFFFFFFFF PUSH1 0xA8 SHL NOT PUSH4 0xFFFFFFFF PUSH1 0xA8 SHL PUSH1 0x6 SLOAD SWAP3 PUSH1 0xA8 SHL AND SWAP2 AND OR PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x1AE8 DUP5 PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH1 0xFF PUSH1 0xA0 SHL PUSH1 0x6 SLOAD SWAP3 PUSH1 0xA0 SHL AND SWAP2 AND OR PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x1AF1 DUP8 PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH2 0x1AFA DUP9 PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH2 0x1B03 DUP3 PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x1B37 PUSH2 0x1B2A PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x10 SLOAD SWAP1 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x3BFD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 CALLER SWAP11 DUP7 PUSH2 0x31F0 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42756E646C65206D7573742068617665206174206C656173742031206C656166 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH2 0x6A2 PUSH1 0x4 CALLDATALOAD PUSH2 0x1BD1 DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH2 0x1BD9 PUSH2 0x3418 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND PUSH0 SSTORE PUSH2 0x346B JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH2 0xC39 PUSH1 0x4 CALLDATALOAD PUSH2 0x1C09 DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH2 0x1C11 PUSH2 0x3418 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND PUSH0 SSTORE PUSH2 0x3FF0 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1C32 JUMPI POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1C23 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1C5B DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD SWAP1 PUSH1 0x20 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP3 PUSH1 0x20 PUSH1 0x40 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x1C9C JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x1CBA PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0x1C42 JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x4 DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x329 JUMPI PUSH2 0x1CFC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x18C0 JUMP JUMPDEST SWAP2 PUSH2 0x1D06 DUP4 PUSH2 0x3250 JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1D1E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x707 DUP8 DUP3 PUSH2 0x1C67 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1D2B DUP4 DUP6 DUP9 PUSH2 0x32AD JUMP JUMPDEST PUSH1 0x40 SWAP4 SWAP2 PUSH2 0x1D3D DUP6 MLOAD DUP1 SWAP4 DUP2 SWAP4 PUSH2 0x32F4 JUMP JUMPDEST SUB SWAP1 ADDRESS GAS DELEGATECALL SWAP1 PUSH2 0x1D4B PUSH2 0x30B8 JUMP JUMPDEST SWAP2 ISZERO PUSH2 0x1D72 JUMPI POP SWAP1 PUSH1 0x1 SWAP2 PUSH2 0x1D60 DUP3 DUP9 PUSH2 0x3371 JUMP JUMPDEST MSTORE PUSH2 0x1D6B DUP2 DUP8 PUSH2 0x3371 JUMP JUMPDEST POP ADD PUSH2 0x1D09 JUMP JUMPDEST DUP5 DUP3 PUSH1 0x44 DUP2 MLOAD LT PUSH2 0x329 JUMPI PUSH2 0x1D96 DUP2 DUP4 PUSH2 0x1DAB SWAP4 ADD MLOAD PUSH1 0x24 DUP1 SWAP2 DUP4 ADD ADD SWAP2 ADD PUSH2 0x3301 JUMP JUMPDEST SWAP3 MLOAD SWAP3 DUP4 SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE DUP4 ADD PUSH2 0x3360 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1DCC DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH2 0x1DD4 PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0x1DDC PUSH2 0x3418 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH0 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH2 0x1E0F PUSH2 0x882 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST AND ISZERO PUSH2 0x1EAA JUMPI JUMPDEST DUP1 PUSH2 0x1E69 PUSH2 0x1E56 PUSH32 0x4E291C80180D65A57B5BF1BED775777EC0D6F283EF34BCF130712714D8BB7F7 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1E87 PUSH2 0x882 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP2 SWAP1 DUP2 ADD PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFC2F1B6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x630 JUMPI PUSH32 0x4E291C80180D65A57B5BF1BED775777EC0D6F283EF34BCF130712714D8BB7F7 SWAP3 PUSH2 0x1F7B SWAP2 PUSH0 SWAP2 PUSH2 0x1FC9 JUMPI JUMPDEST POP PUSH2 0x1F60 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1FC4 PUSH2 0x1F89 PUSH2 0x1A6F PUSH2 0x2B47 JUMP JUMPDEST PUSH2 0x1FA4 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xA8 SHL NOT PUSH4 0xFFFFFFFF PUSH1 0xA8 SHL DUP4 SLOAD SWAP3 PUSH1 0xA8 SHL AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1E16 JUMP JUMPDEST PUSH2 0x1FE2 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x65D JUMPI PUSH2 0x64E DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST PUSH0 PUSH2 0x1F44 JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xC SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP1 DUP3 SUB PUSH2 0x329 JUMPI PUSH2 0x258 SWAP1 PUSH2 0x207F PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0x2087 PUSH2 0x3418 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH0 SSTORE GT ISZERO PUSH2 0x2119 JUMPI PUSH1 0xC DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP4 SWAP1 SHL PUSH24 0xFFFFFFFF0000000000000000000000000000000000000000 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH32 0x4DD1D84D387F404568A7954B5E398518BDD716E1A8F4A790BE9A1A225AD9347 SWAP1 DUP1 PUSH1 0x20 DUP2 ADD PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6976656E65737320746F6F2073686F72740000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x16F7 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x329 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x329 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x21B5 DUP2 PUSH2 0x215D JUMP JUMPDEST SWAP1 PUSH2 0x21C3 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x176C JUMP JUMPDEST DUP1 DUP3 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP6 ADD ADD GT PUSH2 0x329 JUMPI PUSH1 0x20 DUP2 PUSH0 SWAP3 PUSH1 0x24 PUSH2 0x1C SWAP7 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH2 0x3385 JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH2 0x6A2 PUSH1 0x4 CALLDATALOAD PUSH2 0x2210 DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH2 0x2218 PUSH2 0x3418 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND PUSH0 SSTORE PUSH2 0x35F4 JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 CALLDATALOAD PUSH2 0x224D DUP2 PUSH2 0x318 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH32 0x36050D958750E6AC3AA674AC7BBE8D0AE6A2F7D4B808E8C2C42C1F22FC9FC4BB PUSH1 0x60 PUSH2 0x2295 CALLDATASIZE PUSH2 0xA4B JUMP JUMPDEST SWAP1 PUSH2 0x229E PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0x22A6 PUSH2 0x3418 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND PUSH0 SSTORE PUSH2 0x232A PUSH1 0x40 MLOAD PUSH2 0x22C0 DUP2 PUSH2 0x1718 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP5 AND SWAP4 DUP5 DUP4 MSTORE DUP1 PUSH1 0x20 DUP5 ADD SWAP7 AND SWAP6 DUP7 DUP2 MSTORE DUP8 PUSH0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x230B DUP3 PUSH1 0x40 PUSH0 KECCAK256 SWAP6 MLOAD AND DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD AND SWAP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE LOG1 PUSH2 0x1C PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0xC0 PUSH1 0x4 CALLDATALOAD PUSH2 0x2370 DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD PUSH4 0xFFFFFFFF PUSH1 0x3 PUSH1 0x2 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP2 AND DUP7 MSTORE PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA8 SHR AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x23EB DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH2 0x23F3 PUSH2 0x33C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x243F JUMPI PUSH1 0x1 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND OR PUSH1 0x1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x24B0 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F706F73616C2068617320756E636C61696D6564206C6561766573000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x329 JUMPI MLOAD PUSH2 0xA74 DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x329 JUMPI MLOAD PUSH2 0xA74 DUP2 PUSH2 0x79F JUMP JUMPDEST ISZERO PUSH2 0x2530 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4964656E746966696572206E6F7420737570706F727465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x257B JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374206973207061757365640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x25C6 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E742073656E642065746800000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x263B JUMPI JUMP JUMPDEST PUSH2 0x260A JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x263B JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x265D JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x263B JUMPI JUMP JUMPDEST ISZERO PUSH2 0x2685 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265717565737420706173736564206C6976656E657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x329 JUMPI MLOAD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH4 0xFFFFFFFF DUP1 DUP1 SWAP5 AND SWAP2 AND ADD SWAP2 DUP3 GT PUSH2 0x263B JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x17BC SWAP5 PUSH0 PUSH2 0x27CA SWAP3 PUSH4 0xFFFFFFFF PUSH2 0x1E0 SWAP7 SWAP11 SWAP10 SWAP8 SWAP11 PUSH2 0x200 SWAP3 DUP8 MSTORE AND PUSH1 0x20 DUP7 ADD MSTORE DUP1 PUSH1 0x40 DUP7 ADD MSTORE DUP5 ADD MSTORE PUSH2 0x220 DUP4 ADD SWAP8 PUSH2 0x2738 PUSH1 0x60 DUP6 ADD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD SWAP1 PUSH2 0x100 SWAP2 DUP3 DUP7 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x120 SWAP1 DUP2 DUP8 ADD MSTORE PUSH1 0xE0 DUP3 ADD MLOAD SWAP3 PUSH2 0x140 SWAP4 DUP5 DUP9 ADD MSTORE DUP3 ADD MLOAD PUSH2 0x160 DUP8 ADD MSTORE DUP2 ADD MLOAD PUSH2 0x180 DUP7 ADD MSTORE ADD MLOAD PUSH2 0x1A0 DUP5 ADD MSTORE PUSH2 0x1C0 DUP4 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x27E4 PUSH2 0x1A6F PUSH2 0x2B47 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x27F9 SWAP1 PUSH1 0xA8 SHR PUSH4 0xFFFFFFFF AND PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x280C PUSH4 0xFFFFFFFF SWAP2 DUP3 DUP5 AND GT ISZERO PUSH2 0x267E JUMP JUMPDEST PUSH2 0x2814 PUSH2 0x3944 JUMP JUMPDEST SWAP1 PUSH1 0x10 SWAP2 DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x2B23 JUMPI PUSH2 0x2829 PUSH2 0x3832 JUMP JUMPDEST SWAP2 PUSH1 0xC SWAP4 DUP5 SLOAD PUSH2 0x283F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP5 DUP6 DUP4 SLOAD SWAP1 PUSH2 0x2859 SWAP3 PUSH2 0x3B37 JUMP JUMPDEST PUSH1 0xD SLOAD SWAP6 DUP1 SLOAD SWAP7 DUP9 DUP7 DUP6 SLOAD SWAP1 PUSH2 0x286E SWAP2 PUSH2 0x2671 JUMP JUMPDEST SWAP9 PUSH1 0x6 SLOAD PUSH2 0x2882 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 PUSH32 0xAF355D1E00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x20 SWAP14 DUP15 SWAP7 DUP11 DUP14 DUP5 PUSH1 0xA0 SHR AND SWAP4 AND SWAP1 PUSH1 0x4 DUP8 ADD SWAP6 PUSH2 0x2927 SWAP7 SWAP3 SWAP2 PUSH8 0xDE0B6B3A7640000 SWAP6 PUSH0 PUSH2 0x100 SWAP7 SWAP10 SWAP9 SWAP4 PUSH2 0x120 SWAP1 DUP8 MSTORE PUSH4 0xFFFFFFFF DUP1 SWAP5 AND PUSH1 0x20 DUP9 ADD MSTORE DUP1 PUSH1 0x40 DUP9 ADD MSTORE DUP7 ADD MSTORE PUSH2 0x140 DUP6 ADD SWAP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP6 AND PUSH1 0x60 DUP8 ADD MSTORE PUSH0 PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD MSTORE AND PUSH1 0xC0 DUP5 ADD MSTORE AND PUSH1 0xE0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB DUP2 DUP11 GAS SWAP1 PUSH0 SWAP2 CALL SWAP1 DUP2 PUSH2 0x2B06 JUMPI JUMPDEST POP PUSH2 0x294B JUMPI POP POP POP POP POP POP POP POP PUSH2 0x17BC PUSH2 0x3A7F JUMP JUMPDEST DUP8 DUP7 SWAP3 DUP9 SWAP7 PUSH2 0x296A DUP6 PUSH2 0x2965 DUP7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x38C7 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP7 DUP5 SLOAD SWAP3 DUP2 DUP5 PUSH1 0xA0 SHR AND SWAP5 DUP6 PUSH2 0x298B SWAP2 PUSH2 0x26D8 JUMP JUMPDEST SWAP1 DUP4 DUP10 SLOAD SWAP1 PUSH2 0x2999 SWAP2 PUSH2 0x2671 JUMP JUMPDEST SWAP5 PUSH2 0x29A2 PUSH2 0x178E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP12 AND DUP12 MSTORE PUSH0 DUP13 DUP13 ADD MSTORE AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP11 ADD MSTORE PUSH1 0x60 DUP10 ADD PUSH0 SWAP1 MSTORE PUSH1 0x80 DUP10 ADD PUSH8 0xDE0B6B3A7640000 SWAP1 MSTORE PUSH1 0xA0 DUP10 ADD PUSH0 SWAP1 MSTORE AND PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD PUSH0 SWAP1 MSTORE PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x2A18 PUSH0 PUSH1 0x2 SSTORE PUSH0 PUSH1 0x3 SSTORE PUSH0 PUSH1 0x4 SSTORE PUSH0 PUSH1 0x5 SSTORE PUSH0 PUSH1 0x6 SSTORE JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 SLOAD ADDRESS CALLER PUSH2 0x2A30 SWAP4 PUSH2 0x3BFD JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SLOAD SWAP1 PUSH2 0x2A46 SWAP3 PUSH2 0x3B37 JUMP JUMPDEST PUSH1 0xD SLOAD SWAP3 PUSH1 0x40 MLOAD DUP1 DUP1 SWAP6 DUP2 SWAP5 PUSH32 0x9CE320C800000000000000000000000000000000000000000000000000000000 DUP4 MSTORE ADDRESS SWAP1 CALLER SWAP1 DUP12 PUSH1 0x4 DUP7 ADD SWAP5 PUSH2 0x2A88 SWAP6 PUSH2 0x26F0 JUMP JUMPDEST SUB SWAP2 GAS SWAP1 PUSH0 SWAP2 CALL DUP1 ISZERO PUSH2 0x630 JUMPI PUSH2 0x2AD8 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE CALLER SWAP1 PUSH32 0x15951CB2EF6993BC23A55912E7D0BCAC13E4797C432AAA334816AED6914A7A90 SWAP1 DUP1 PUSH1 0x20 DUP2 ADD JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST DUP2 PUSH2 0x2AF7 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x2AFF JUMPI JUMPDEST PUSH2 0x2AEF DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x26C9 JUMP JUMPDEST POP PUSH0 DUP1 PUSH2 0x2A9A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2AE5 JUMP JUMPDEST PUSH2 0x2B1C SWAP1 DUP10 RETURNDATASIZE DUP12 GT PUSH2 0x2AFF JUMPI PUSH2 0x2AEF DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST POP PUSH0 PUSH2 0x2936 JUMP JUMPDEST POP POP POP POP PUSH2 0x17BC PUSH2 0x3A7F JUMP JUMPDEST DUP2 DUP2 SUB SWAP3 SWAP2 PUSH0 SGT DUP1 ISZERO DUP3 DUP6 SGT AND SWAP2 DUP5 SLT AND OR PUSH2 0x263B JUMPI JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x2BB3 JUMPI PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x29CB924D00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x630 JUMPI PUSH0 SWAP2 PUSH2 0x2B9A JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0xA74 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2AFF JUMPI PUSH2 0x2AEF DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST POP TIMESTAMP SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2BBF JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x626F6E6420657175616C20746F2066696E616C20666565000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x2C0A JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74206F6E2077686974656C69737400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x263B JUMPI JUMP JUMPDEST ISZERO PUSH2 0x2C62 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F7420656E61626C6564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x2CAD JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426164206D73672E76616C756500000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP7 SWAP8 SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP8 PUSH2 0x2D02 PUSH2 0x3418 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH0 SSTORE PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2D1D SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH2 0x2D25 PUSH2 0x2B47 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xA8 SHR PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND LT PUSH2 0x2D41 SWAP1 PUSH2 0x2F5A JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP7 PUSH2 0x2D59 PUSH1 0x1 PUSH1 0xFF DUP7 AND SHL DUP1 DUP11 AND EQ ISZERO PUSH2 0x2FA5 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP2 PUSH2 0x2D65 PUSH2 0x17AF JUMP JUMPDEST SWAP2 DUP11 DUP4 MSTORE DUP8 PUSH1 0x20 DUP5 ADD MSTORE DUP9 PUSH1 0x40 DUP5 ADD MSTORE DUP5 PUSH1 0x60 DUP5 ADD MSTORE DUP12 PUSH1 0x80 DUP5 ADD MSTORE DUP6 PUSH1 0xA0 DUP5 ADD SWAP1 PUSH2 0x2D93 SWAP2 SWAP1 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST DUP7 PUSH1 0xC0 DUP5 ADD MSTORE CALLDATASIZE SWAP1 PUSH2 0x2DA4 SWAP3 PUSH2 0x2FF0 JUMP JUMPDEST SWAP1 PUSH2 0x2DAE SWAP3 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x2DB7 SWAP1 PUSH2 0x303E JUMP JUMPDEST PUSH2 0x2DC0 DUP8 PUSH2 0x3D60 JUMP JUMPDEST SWAP6 SWAP1 SWAP3 PUSH1 0xFF AND SWAP7 PUSH1 0x1 DUP9 SHL OR PUSH2 0x2DD5 SWAP1 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xA0 SHR PUSH1 0xFF AND PUSH2 0x2DE7 SWAP1 PUSH2 0x3089 JUMP JUMPDEST PUSH2 0x2E06 SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH1 0xFF PUSH1 0xA0 SHL PUSH1 0x6 SLOAD SWAP3 PUSH1 0xA0 SHL AND SWAP2 AND OR PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x2E14 DUP6 DUP3 DUP7 DUP12 DUP11 DUP9 PUSH2 0x3E61 JUMP JUMPDEST PUSH32 0xF652DD63B1AEDBF9E740F3152FB67B0D94D069CF1182811EBD88921850D93567 SWAP6 PUSH2 0x2E62 SWAP4 DUP11 ISZERO PUSH2 0x2EAA JUMPI JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO PUSH2 0x2E7B JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 CALLER SWAP11 DUP7 PUSH2 0x31A1 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x17BC PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x2EA4 SWAP1 PUSH2 0x2E91 PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x10 SLOAD SWAP3 AND SWAP1 PUSH2 0x36DA JUMP JUMPDEST PUSH0 PUSH2 0x2E53 JUMP JUMPDEST PUSH0 DUP1 SWAP2 PUSH2 0x2F53 SWAP4 PUSH2 0x2F35 PUSH2 0x2F41 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD SWAP1 PUSH2 0x2F03 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH32 0x493A4F8400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 PUSH2 0x2F17 PUSH1 0x1F NOT SWAP3 DUP4 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x176C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP2 PUSH1 0x20 DUP4 ADD SWAP7 PUSH4 0x7375C56F PUSH1 0xE1 SHL DUP9 MSTORE PUSH1 0x24 DUP5 ADD PUSH2 0x3098 JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x176C JUMP JUMPDEST MLOAD SWAP2 GAS DELEGATECALL PUSH2 0x2F4D PUSH2 0x30B8 JUMP JUMPDEST POP PUSH2 0x30E7 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2E41 JUMP JUMPDEST ISZERO PUSH2 0x2F61 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420706173736564206C6976656E65737300000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x2FAC JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920636C61696D65640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP3 SWAP2 PUSH2 0x2FFB DUP3 PUSH2 0x17BE JUMP JUMPDEST SWAP2 PUSH2 0x3009 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x176C JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 SWAP5 ADD SWAP2 PUSH1 0x5 SHL DUP2 ADD SWAP3 DUP4 GT PUSH2 0x329 JUMPI SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x302F JUMPI POP POP POP POP JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x3022 JUMP JUMPDEST ISZERO PUSH2 0x3045 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4261642050726F6F660000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x263B JUMPI PUSH0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xA74 SWAP5 SWAP4 AND DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1C42 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x30E2 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x30C9 DUP3 PUSH2 0x215D JUMP JUMPDEST SWAP2 PUSH2 0x30D7 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x176C JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x30EE JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x3151 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x3143 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x318D JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x317F JUMP JUMPDEST SWAP4 SWAP1 PUSH2 0xA74 SWAP6 SWAP4 PUSH2 0x31C6 PUSH2 0x31E2 SWAP5 PUSH2 0x31D4 SWAP4 DUP9 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD SWAP1 PUSH2 0x3132 JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x316E JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x316E JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x316E JUMP JUMPDEST SWAP6 SWAP5 SWAP4 SWAP2 PUSH4 0xFFFFFFFF PUSH1 0xFF SWAP3 AND DUP8 MSTORE AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP7 ADD MSTORE DUP1 PUSH1 0x80 DUP7 ADD MSTORE PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x329 JUMPI PUSH1 0x60 SWAP2 PUSH1 0xA0 SWAP2 PUSH1 0x5 SHL DUP1 SWAP2 DUP4 DUP9 ADD CALLDATACOPY DUP6 ADD ADD SWAP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x325A DUP3 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x3267 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x176C JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x3278 PUSH1 0x1F NOT SWAP2 PUSH2 0x17BE JUMP JUMPDEST ADD SWAP1 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x3288 JUMPI POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x60 PUSH1 0x20 DUP1 SWAP4 DUP6 ADD ADD MSTORE ADD PUSH2 0x327C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x32EF JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x329 JUMPI ADD SWAP1 DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x329 JUMPI PUSH1 0x20 ADD DUP3 CALLDATASIZE SUB DUP2 SGT PUSH2 0x329 JUMPI SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x3299 JUMP JUMPDEST SWAP1 DUP1 SWAP3 SWAP2 DUP3 CALLDATACOPY ADD PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x329 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x329 JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x329 JUMPI DUP1 MLOAD PUSH2 0x3334 DUP2 PUSH2 0x215D JUMP JUMPDEST SWAP3 PUSH2 0x3342 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x176C JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x329 JUMPI PUSH2 0xA74 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x1C21 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0xA74 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x1C42 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x32EF JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x33AA SWAP2 PUSH2 0x3392 PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0x339A PUSH2 0x3418 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND PUSH0 SSTORE PUSH2 0x3C55 JUMP JUMPDEST PUSH2 0x17BC PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND CALLER SUB PUSH2 0x33D4 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xFF PUSH0 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x3427 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x3474 DUP2 PUSH2 0x3FF0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH2 0x34C8 PUSH4 0xFFFFFFFF PUSH1 0x40 MLOAD SWAP3 PUSH2 0x34A0 DUP5 PUSH2 0x1734 JUMP JUMPDEST DUP5 SLOAD SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0xA8 SHR AND PUSH1 0x40 DUP4 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD SWAP1 DUP2 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x3 PUSH1 0x2 DUP6 ADD SLOAD SWAP5 DUP6 PUSH1 0x80 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE PUSH0 DUP2 SGT PUSH0 EQ PUSH2 0x3522 JUMPI PUSH2 0x34FD SWAP1 DUP1 SWAP3 PUSH2 0x2C4E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3514 JUMPI PUSH2 0x350F PUSH2 0xA74 SWAP3 PUSH2 0x261E JUMP JUMPDEST PUSH2 0x2653 JUMP JUMPDEST POP POP PUSH8 0xDE0B6B3A7640000 SWAP1 JUMP JUMPDEST POP PUSH2 0x34FD PUSH0 DUP1 SWAP3 PUSH2 0x2C4E JUMP JUMPDEST SWAP1 PUSH2 0x34FD SWAP1 PUSH2 0x353C DUP4 PUSH2 0x3FF0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP3 PUSH2 0x3590 PUSH4 0xFFFFFFFF PUSH1 0x40 MLOAD SWAP3 PUSH2 0x3568 DUP5 PUSH2 0x1734 JUMP JUMPDEST DUP7 SLOAD SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0xA8 SHR AND PUSH1 0x40 DUP4 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SLOAD SWAP1 DUP2 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x3 PUSH1 0x2 DUP8 ADD SLOAD SWAP7 PUSH1 0x80 DUP5 ADD SWAP8 DUP9 MSTORE ADD SLOAD SWAP2 ADD MSTORE PUSH0 DUP2 SGT PUSH0 EQ PUSH2 0x35CD JUMPI PUSH2 0x35C6 SWAP1 DUP1 SWAP3 PUSH2 0x2C4E JUMP JUMPDEST SWAP3 MLOAD PUSH2 0x2C4E JUMP JUMPDEST POP PUSH2 0x35C6 PUSH0 DUP1 SWAP3 PUSH2 0x2C4E JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH0 DUP4 DUP3 ADD SWAP4 DUP5 SLT SWAP2 SLT SWAP1 DUP1 ISZERO DUP3 AND SWAP2 ISZERO AND OR PUSH2 0x263B JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH2 0x3611 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x362A PUSH2 0x88F PUSH2 0x88F DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH32 0x18160DDD00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x630 JUMPI PUSH0 SWAP3 PUSH2 0x36B9 JUMPI JUMPDEST POP DUP2 ISZERO PUSH2 0x36AA JUMPI PUSH2 0x36A5 DUP2 PUSH2 0x3687 PUSH2 0xA74 SWAP6 PUSH2 0x3682 PUSH2 0x350F SWAP6 PUSH2 0x4199 JUMP JUMPDEST PUSH2 0x3FF0 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x369C PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x1 DUP5 ADD SLOAD SWAP1 PUSH2 0x35D9 JUMP JUMPDEST SWAP2 ADD SLOAD SWAP1 PUSH2 0x2B2F JUMP JUMPDEST PUSH2 0x261E JUMP JUMPDEST POP POP POP PUSH8 0xDE0B6B3A7640000 SWAP1 JUMP JUMPDEST PUSH2 0x36D3 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2AFF JUMPI PUSH2 0x2AEF DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x3664 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x17BC SWAP2 PUSH2 0x371D DUP3 PUSH1 0x64 DUP2 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x176C JUMP JUMPDEST PUSH2 0x4223 JUMP JUMPDEST DUP2 SELFBALANCE LT PUSH2 0x37B4 JUMPI PUSH0 DUP1 DUP1 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SWAP5 AND GAS CALL PUSH2 0x3742 PUSH2 0x30B8 JUMP JUMPDEST POP ISZERO PUSH2 0x374A JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6563697069656E74206D61792068617665207265766572746564000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x382C DUP2 PUSH1 0x60 DUP2 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x176C JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD PUSH4 0x2ABF579 PUSH1 0xE6 SHL DUP2 MSTORE PUSH32 0x536B696E6E794F7074696D69737469634F7261636C6500000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x630 JUMPI PUSH0 SWAP2 PUSH2 0x38AA JUMPI POP AND SWAP1 JUMP JUMPDEST PUSH2 0x38C3 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x65D JUMPI PUSH2 0x64E DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST AND SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP2 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL PUSH1 0x20 DUP5 ADD MSTORE AND PUSH1 0x24 DUP3 ADD MSTORE PUSH0 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x44 DUP2 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 DUP2 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0x16F7 JUMPI PUSH2 0x17BC SWAP3 PUSH1 0x40 MSTORE PUSH2 0x4223 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x329 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16F7 JUMPI PUSH1 0x40 MSTORE MLOAD DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2ABF579 PUSH1 0xE6 SHL DUP2 MSTORE PUSH32 0x53746F7265000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP3 DUP2 PUSH1 0x24 DUP2 PUSH32 0x0 DUP7 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x630 JUMPI DUP4 SWAP2 PUSH2 0x3A1C SWAP2 PUSH0 SWAP2 PUSH2 0x3A62 JUMPI JUMPDEST POP PUSH2 0x39D7 PUSH2 0x88F PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH32 0x5B97AADD00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD SWAP2 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD SWAP4 AND SWAP1 MSTORE JUMP JUMPDEST SUB SWAP3 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x630 JUMPI PUSH0 SWAP3 PUSH2 0x3A35 JUMPI JUMPDEST POP POP MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3A54 SWAP3 POP DUP1 RETURNDATASIZE LT PUSH2 0x3A5B JUMPI JUMPDEST PUSH2 0x3A4C DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3915 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3A2F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3A42 JUMP JUMPDEST PUSH2 0x3A79 SWAP2 POP DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x65D JUMPI PUSH2 0x64E DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST PUSH0 PUSH2 0x39C1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x6 SLOAD PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH0 SWAP2 AND GAS CALL DUP1 ISZERO PUSH2 0x630 JUMPI PUSH2 0x3B18 JUMPI JUMPDEST POP PUSH2 0x3AE2 PUSH0 PUSH1 0x2 SSTORE PUSH0 PUSH1 0x3 SSTORE PUSH0 PUSH1 0x4 SSTORE PUSH0 PUSH1 0x5 SSTORE PUSH0 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x3AEA PUSH2 0x2B47 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xCFBBF45AB7F5225663454DE7117B1B0ED5A7C133B61F54CCF367DCF8B6D4D59 PUSH1 0x20 CALLER SWAP3 LOG2 JUMP JUMPDEST PUSH2 0x3B30 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x629 JUMPI PUSH2 0x61A DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST POP PUSH0 PUSH2 0x3AC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP3 PUSH1 0x20 DUP4 DUP1 PUSH1 0x44 DUP2 ADD SUB DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x630 JUMPI PUSH0 SWAP4 PUSH2 0x3BDC JUMPI JUMPDEST POP DUP3 ADD DUP1 SWAP3 GT PUSH2 0x263B JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x17BC SWAP2 SWAP1 PUSH2 0x371D DUP3 PUSH1 0x64 DUP2 ADD PUSH2 0x370F JUMP JUMPDEST PUSH2 0x3BF6 SWAP2 SWAP4 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2AFF JUMPI PUSH2 0x2AEF DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST SWAP2 PUSH0 PUSH2 0x3B98 JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0x17BC SWAP4 PUSH1 0x40 MLOAD SWAP4 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH1 0x24 DUP7 ADD MSTORE AND PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x64 DUP3 MSTORE PUSH2 0x371D DUP3 PUSH2 0x1750 JUMP JUMPDEST SWAP1 PUSH2 0x2AD3 PUSH32 0x218987B934C2F6BC596136829FBF43A5FEF4D6FAFCE41F3F6254D9A870C2DEEC SWAP2 PUSH2 0x3CAC PUSH0 DUP1 PUSH2 0x3C89 DUP8 PUSH2 0x3D60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F41 DUP2 PUSH2 0x381E DUP10 PUSH1 0x20 DUP4 ADD SWAP6 PUSH4 0x7375C56F PUSH1 0xE1 SHL DUP8 MSTORE PUSH1 0x24 DUP5 ADD PUSH2 0x3098 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0xA74 SWAP3 SWAP2 PUSH1 0x40 MLOAD PUSH2 0x3D57 DUP2 PUSH2 0x381E PUSH1 0x20 DUP3 ADD SWAP5 PUSH1 0x20 DUP7 MSTORE DUP1 MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x3CF9 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0xE0 PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x120 DUP6 ADD SWAP1 PUSH2 0x316E JUMP JUMPDEST PUSH1 0xC0 PUSH2 0x3D2E PUSH2 0x3D1A PUSH1 0x40 DUP6 ADD MLOAD SWAP4 PUSH1 0x3F NOT SWAP5 DUP6 DUP10 DUP4 SUB ADD PUSH1 0x80 DUP11 ADD MSTORE PUSH2 0x316E JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MLOAD DUP5 DUP9 DUP4 SUB ADD PUSH1 0xA0 DUP10 ADD MSTORE PUSH2 0x316E JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP2 ADD MLOAD DUP3 DUP8 ADD MSTORE PUSH1 0xFF PUSH1 0xA0 DUP3 ADD MLOAD AND PUSH1 0xE0 DUP8 ADD MSTORE ADD MLOAD SWAP1 DUP5 DUP4 SUB ADD PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x3132 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 PUSH2 0x431B JUMP JUMPDEST PUSH0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP2 DUP5 SLOAD AND SWAP4 ADD SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x3DD2 JUMPI DUP3 EXTCODESIZE ISZERO PUSH2 0x3D8E JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646170746572206E6F7420696E697469616C697A6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53706F6B65506F6F6C206E6F7420696E697469616C697A656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x3E1D JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F757465206E6F742077686974656C69737465640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP3 SWAP5 SWAP4 SWAP2 SWAP1 DUP6 MLOAD SWAP6 PUSH0 JUMPDEST DUP8 DUP2 LT PUSH2 0x3E7C JUMPI POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x3EF7 PUSH2 0x3E9C PUSH2 0x3E8F PUSH1 0x1 SWAP5 DUP7 PUSH2 0x3371 JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP6 DUP4 DUP10 PUSH2 0x3EBD PUSH2 0x882 PUSH2 0x3EAF DUP13 DUP8 PUSH2 0x37F8 JUMP JUMPDEST PUSH0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x3ED1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO PUSH2 0x3E16 JUMP JUMPDEST PUSH0 PUSH2 0x3EDC DUP5 DUP5 PUSH2 0x3371 JUMP JUMPDEST MLOAD SGT PUSH2 0x3EFD JUMPI JUMPDEST POP POP PUSH2 0x3EF0 SWAP2 POP DUP12 PUSH2 0x3371 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x436C JUMP JUMPDEST ADD PUSH2 0x3E6B JUMP JUMPDEST PUSH2 0x3F7C SWAP4 PUSH2 0x3F6F PUSH2 0x3F10 PUSH0 SWAP6 DUP7 SWAP6 PUSH2 0x3371 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD PUSH32 0x52C8C75C00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE SWAP6 DUP7 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x84 DUP4 ADD MSTORE DUP2 PUSH1 0xA4 DUP2 ADD PUSH2 0x381E JUMP JUMPDEST MLOAD SWAP1 DUP14 GAS DELEGATECALL PUSH2 0x2F4D PUSH2 0x30B8 JUMP JUMPDEST PUSH2 0x3F86 DUP4 DUP10 PUSH2 0x3371 JUMP JUMPDEST MLOAD PUSH2 0x3FAF DUP6 PUSH2 0x3FA6 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SWAP2 DUP3 SLOAD PUSH2 0x35D9 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x3FBB DUP4 DUP10 PUSH2 0x3371 JUMP JUMPDEST MLOAD PUSH2 0x3FE5 PUSH1 0x2 PUSH2 0x3FDC DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SWAP2 DUP3 SLOAD PUSH2 0x2671 JUMP JUMPDEST SWAP1 SSTORE DUP6 DUP4 DUP10 PUSH0 PUSH2 0x3EE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x630 JUMPI PUSH0 SWAP3 PUSH2 0x410A JUMPI JUMPDEST POP PUSH2 0x4056 PUSH2 0x88F PUSH2 0x88F PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ DUP1 PUSH2 0x40F9 JUMPI JUMPDEST ISZERO PUSH2 0x40F3 JUMPI PUSH1 0x10 SLOAD PUSH2 0x406E SWAP2 PUSH2 0x2671 JUMP JUMPDEST SWAP1 JUMPDEST PUSH1 0x2 PUSH2 0x408D DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD DUP3 GT PUSH2 0x4099 JUMPI POP POP JUMP JUMPDEST PUSH2 0x40EF DUP2 PUSH2 0x40C6 PUSH1 0x2 PUSH2 0x40BE DUP2 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD DUP6 PUSH2 0x2671 JUMP JUMPDEST PUSH2 0x121F PUSH1 0x1 PUSH2 0x40E6 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SWAP2 DUP3 SLOAD PUSH2 0x2B2F JUMP JUMPDEST ADD SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x4070 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH2 0x405D JUMP JUMPDEST PUSH2 0x4124 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2AFF JUMPI PUSH2 0x2AEF DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x403D JUMP JUMPDEST PUSH1 0xFF PUSH0 SLOAD PUSH1 0xA0 SHR AND PUSH2 0x4139 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP1 EXTCODESIZE ISZERO PUSH2 0x329 JUMPI PUSH0 PUSH1 0x4 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0xD0E30DB PUSH1 0xE4 SHL DUP3 MSTORE CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x630 JUMPI PUSH2 0x4190 JUMPI POP JUMP JUMPDEST PUSH2 0x17BC SWAP1 PUSH2 0x16E3 JUMP JUMPDEST PUSH1 0x3 DUP2 ADD SWAP1 DUP2 SLOAD PUSH4 0xFFFFFFFF SWAP1 DUP2 DUP4 SLOAD PUSH1 0xA8 SHR AND PUSH2 0x41B5 PUSH2 0x2B47 JUMP JUMPDEST SWAP1 DUP2 SUB SWAP1 DUP2 GT PUSH2 0x263B JUMPI PUSH2 0x41DD PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x41D8 PUSH1 0xE SLOAD DUP6 PUSH2 0x2640 JUMP JUMPDEST PUSH2 0x2640 JUMP JUMPDEST DIV DUP2 DUP2 LT ISZERO PUSH2 0x421C JUMPI JUMPDEST DUP2 SUB SWAP1 DUP2 GT PUSH2 0x263B JUMPI PUSH2 0x17BC SWAP4 SSTORE PUSH2 0x41FD PUSH2 0x2B47 JUMP JUMPDEST DUP3 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xA8 SHL NOT AND SWAP2 AND PUSH1 0xA8 SHL PUSH4 0xFFFFFFFF PUSH1 0xA8 SHL AND OR SWAP1 SSTORE JUMP JUMPDEST POP DUP1 PUSH2 0x41E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4280 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x423C DUP3 PUSH2 0x1718 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 SWAP6 DUP7 DUP6 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP8 DUP7 ADD MSTORE DUP7 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL PUSH2 0x427A PUSH2 0x30B8 JUMP JUMPDEST SWAP2 PUSH2 0x4416 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP3 DUP3 ISZERO SWAP3 DUP4 ISZERO PUSH2 0x4303 JUMPI JUMPDEST POP POP POP ISZERO PUSH2 0x4299 JUMPI POP JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x4313 SWAP4 POP DUP3 ADD DUP2 ADD SWAP2 ADD PUSH2 0x2514 JUMP JUMPDEST PUSH0 DUP3 DUP2 PUSH2 0x428E JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP1 PUSH0 SWAP2 JUMPDEST DUP5 MLOAD DUP4 LT ISZERO PUSH2 0x4364 JUMPI PUSH2 0x4335 DUP4 DUP7 PUSH2 0x3371 JUMP JUMPDEST MLOAD SWAP1 DUP2 DUP2 LT ISZERO PUSH2 0x4353 JUMPI PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 JUMPDEST SWAP3 ADD SWAP2 PUSH2 0x4322 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x434B JUMP JUMPDEST SWAP2 POP SWAP3 POP EQ SWAP1 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x4381 PUSH1 0xF SLOAD DUP5 PUSH2 0x2640 JUMP JUMPDEST DIV SWAP2 DUP3 DUP2 SUB SWAP1 DUP1 DUP3 GT PUSH2 0x263B JUMPI DUP4 SUB PUSH2 0x43C2 JUMPI JUMPDEST POP DUP2 PUSH2 0x439F JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD SWAP2 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x263B JUMPI SSTORE JUMP JUMPDEST PUSH1 0x3 PUSH2 0x43DF DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD SWAP1 DUP3 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x263B JUMPI SSTORE PUSH2 0x440E PUSH1 0x1 PUSH2 0x3FA6 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 SSTORE PUSH0 PUSH2 0x4395 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x4477 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x442A JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x4433 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x448A JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0x1DAB SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x3360 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 0xC7 OR 0x2B EQ MSIZE 0xC4 0xB4 SGT PUSH25 0xAAC3FD8BBB22AE38C9A459DCCCDC71BCE45E0045A5D864736F PUSH13 0x63430008170033000000000000 ","sourceMap":"2257:54482:21:-:0;;;;;;;;;;;;;-1:-1:-1;;2257:54482:21;;;;-1:-1:-1;;;;;2257:54482:21;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2257:54482:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;728:28:11;2257:54482:21;;-1:-1:-1;;;;;;2257:54482:21;;;;-1:-1:-1;;;2257:54482:21;;;;;;-1:-1:-1;;;;;;2257:54482:21;;719:10:5;2257:54482:21;;;;;;;;;;;;719:10:5;;;2257:54482:21;;;;2566:40:0;;728:28:11;2566:40:0;4531:4:21;2257:54482;;-1:-1:-1;;;;2257:54482:21;-1:-1:-1;;;2257:54482:21;;;-1:-1:-1;;;4676:11:21;2257:54482;5172:13;;2257:54482;;8674:32;8716:16;;2257:54482;8742:12;8764:35;2257:54482;;-1:-1:-1;;;;;;2257:54482:21;;;;;;-1:-1:-1;;;;;2257:54482:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8716:16;2257:54482;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2257:54482:21;;;;;;-1:-1:-1;2257:54482:21;;;;;-1:-1:-1;2257:54482:21"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":2847,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":9460,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_address_dyn":{"entryPoint":6230,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_bytes32_dyn_calldata":{"entryPoint":6336,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_uint256_dyn":{"entryPoint":6102,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_array_bytes32_dyn":{"entryPoint":12272,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":9492,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":13057,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_Unsigned_fromMemory":{"entryPoint":14613,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256_fromMemory":{"entryPoint":9929,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_addresst_address":{"entryPoint":2635,"id":null,"parameterSlots":1,"returnSlots":3},"abi_decode_uint8":{"entryPoint":6198,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint8_25584":{"entryPoint":6214,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_address_uint256_address":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_address_bytes":{"entryPoint":12440,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":12594,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_bytes_dyn":{"entryPoint":7271,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":12654,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes":{"entryPoint":7234,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_bytes32_25538":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_bytes32_25564":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_bytes32_uint32_stringliteral_c5d2_contract_IERC20_rational_by_uint256_uint32_address_int256":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_bytes32_uint32_stringliteral_c5d2_struct_Request_address_address":{"entryPoint":9968,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_bytes_calldata":{"entryPoint":13044,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":13152,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_array_address_dyn_array_uint256_dyn_array_int256_dyn_array_int256_dyn":{"entryPoint":12705,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint32_uint8_array_uint256_dyn_calldata_bytes32":{"entryPoint":12784,"id":null,"parameterSlots":6,"returnSlots":1},"allocate_and_zero_memory_array_array_bytes_dyn":{"entryPoint":12880,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":6030,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_25757":{"entryPoint":6063,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":6078,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":8541,"id":null,"parameterSlots":1,"returnSlots":1},"calldata_array_index_access_bytes_calldata_dyn_calldata":{"entryPoint":12973,"id":null,"parameterSlots":3,"returnSlots":2},"checked_add_int256":{"entryPoint":13785,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256":{"entryPoint":11342,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint32":{"entryPoint":9944,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":9811,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256_25547":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_mul_uint256":{"entryPoint":9792,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256_25570":{"entryPoint":9758,"id":null,"parameterSlots":1,"returnSlots":1},"checked_sub_int256":{"entryPoint":11055,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":9841,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_uint32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":7201,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_uint8":{"entryPoint":12425,"id":null,"parameterSlots":1,"returnSlots":1},"external_fun_addLiquidity":{"entryPoint":4376,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_bondAmount":{"entryPoint":6556,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_bondToken":{"entryPoint":8235,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_claimProtocolFeesCaptured":{"entryPoint":3457,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_crossChainContracts":{"entryPoint":1728,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_disableL1TokenForLiquidityProvision":{"entryPoint":1803,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_disputeRootBundle":{"entryPoint":3054,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_emergencyDeleteProposal":{"entryPoint":5251,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_enableL1TokenForLiquidityProvision":{"entryPoint":7599,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_exchangeRateCurrent":{"entryPoint":8686,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_executeRootBundle":{"entryPoint":6385,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_finder":{"entryPoint":8168,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getCurrentTime":{"entryPoint":3431,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_haircutReserves":{"entryPoint":3315,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_identifier":{"entryPoint":5810,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_liquidityUtilizationCurrent":{"entryPoint":7087,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_liquidityUtilizationPostRelay":{"entryPoint":1636,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_liveness":{"entryPoint":5616,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_loadEthForL2Calls":{"entryPoint":5603,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_lpFeeRatePerSecond":{"entryPoint":2857,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_lpTokenFactory":{"entryPoint":5743,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_multicall":{"entryPoint":7370,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":7049,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_paused":{"entryPoint":5217,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_poolRebalanceRoute":{"entryPoint":3611,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_pooledTokens":{"entryPoint":9041,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_proposeRootBundle":{"entryPoint":6585,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_protocolFeeCaptureAddress":{"entryPoint":3274,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_protocolFeeCapturePct":{"entryPoint":4347,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_relaySpokePoolAdminFunction":{"entryPoint":8569,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_removeLiquidity":{"entryPoint":1961,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceOwnership":{"entryPoint":5654,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_rootBundleProposal":{"entryPoint":4248,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setBond":{"entryPoint":3683,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setCrossChainContracts":{"entryPoint":8804,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setCurrentTime":{"entryPoint":3151,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setDepositRoute":{"entryPoint":4984,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setIdentifier":{"entryPoint":1183,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setLiveness":{"entryPoint":8273,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setPaused":{"entryPoint":2886,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setPoolRebalanceRoute":{"entryPoint":2679,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setProtocolFeeCapture":{"entryPoint":813,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_sync":{"entryPoint":7145,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_timerAddress":{"entryPoint":3017,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":9166,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_unclaimedAccumulatedProtocolFees":{"entryPoint":8744,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_weth":{"entryPoint":4181,"id":null,"parameterSlots":0,"returnSlots":0},"extract_from_storage_value_offset_20t_uint32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_uint32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":12472,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":5996,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_25550":{"entryPoint":5859,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_25578":{"entryPoint":5884,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_25611":{"entryPoint":5912,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_25861":{"entryPoint":5940,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_39083":{"entryPoint":5968,"id":null,"parameterSlots":1,"returnSlots":0},"fun_allocateLpAndProtocolFees":{"entryPoint":17260,"id":6488,"parameterSlots":2,"returnSlots":0},"fun_callOptionalReturn":{"entryPoint":16931,"id":553,"parameterSlots":2,"returnSlots":0},"fun_cancelBundle":{"entryPoint":14975,"id":6017,"parameterSlots":0,"returnSlots":0},"fun_checkOwner":{"entryPoint":13248,"id":54,"parameterSlots":0,"returnSlots":0},"fun_depositEthToWeth":{"entryPoint":16683,"id":6611,"parameterSlots":0,"returnSlots":0},"fun_disputeRootBundle_inner":{"entryPoint":10201,"id":null,"parameterSlots":0,"returnSlots":0},"fun_exchangeRateCurrent":{"entryPoint":13812,"id":6239,"parameterSlots":1,"returnSlots":1},"fun_getBondTokenFinalFee":{"entryPoint":14660,"id":6053,"parameterSlots":0,"returnSlots":1},"fun_getCurrentTime":{"entryPoint":11079,"id":3642,"parameterSlots":0,"returnSlots":1},"fun_getInitializedCrossChainContracts":{"entryPoint":15712,"id":6585,"parameterSlots":1,"returnSlots":2},"fun_getOptimisticOracle":{"entryPoint":14386,"id":6032,"parameterSlots":0,"returnSlots":1},"fun_isClaimed1D":{"entryPoint":null,"id":6914,"parameterSlots":2,"returnSlots":1},"fun_liquidityUtilizationPostRelay":{"entryPoint":13614,"id":6433,"parameterSlots":2,"returnSlots":1},"fun_liquidityUtilizationPostRelay_25597":{"entryPoint":13419,"id":6433,"parameterSlots":1,"returnSlots":1},"fun_poolRebalanceRouteKey":{"entryPoint":14328,"id":6544,"parameterSlots":2,"returnSlots":1},"fun_postEntranceReset":{"entryPoint":null,"id":6695,"parameterSlots":0,"returnSlots":0},"fun_preEntranceCheck":{"entryPoint":13336,"id":6679,"parameterSlots":0,"returnSlots":0},"fun_relaySpokePoolAdminFunction":{"entryPoint":15445,"id":6526,"parameterSlots":2,"returnSlots":0},"fun_safeApprove":{"entryPoint":14535,"id":330,"parameterSlots":2,"returnSlots":0},"fun_safeIncreaseAllowance":{"entryPoint":15159,"id":367,"parameterSlots":3,"returnSlots":0},"fun_safeTransfer":{"entryPoint":14042,"id":259,"parameterSlots":3,"returnSlots":0},"fun_safeTransferFrom":{"entryPoint":15357,"id":286,"parameterSlots":4,"returnSlots":0},"fun_sendTokensToChainAndUpdatePooledTokenTrackers":{"entryPoint":15969,"id":6174,"parameterSlots":6,"returnSlots":0},"fun_sendValue":{"entryPoint":14114,"id":654,"parameterSlots":2,"returnSlots":0},"fun_sync":{"entryPoint":16368,"id":6372,"parameterSlots":1,"returnSlots":0},"fun_updateAccumulatedLpFees":{"entryPoint":16793,"id":6271,"parameterSlots":1,"returnSlots":0},"fun_verify":{"entryPoint":17179,"id":978,"parameterSlots":3,"returnSlots":1},"fun_verifyCallResultFromTarget":{"entryPoint":17430,"id":887,"parameterSlots":4,"returnSlots":1},"fun_verifyPoolRebalance":{"entryPoint":15552,"id":6730,"parameterSlots":3,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_struct_CrossChainContract_storage_of_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_bytes_dyn":{"entryPoint":13169,"id":null,"parameterSlots":2,"returnSlots":1},"modifier_nonReentrant":{"entryPoint":11505,"id":6653,"parameterSlots":9,"returnSlots":0},"modifier_onlyOwner":{"entryPoint":13189,"id":31,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":9738,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":12953,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5839,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_memoryt_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":11355,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_05cf":{"entryPoint":12519,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_0bf2":{"entryPoint":11267,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_0c50":{"entryPoint":9385,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_1ca5":{"entryPoint":9513,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_4b11":{"entryPoint":12350,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_69bd":{"entryPoint":11192,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_6d85":{"entryPoint":9663,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_8d5f":{"entryPoint":12197,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_9e45":{"entryPoint":11430,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_aeb0":{"entryPoint":15894,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_b623":{"entryPoint":9854,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d704":{"entryPoint":12122,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e556":{"entryPoint":9588,"id":null,"parameterSlots":1,"returnSlots":0},"revert_forward":{"entryPoint":9481,"id":null,"parameterSlots":0,"returnSlots":0},"storage_set_to_zero_struct_RootBundle":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"update_byte_slice_shift":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"update_storage_value_offsett_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_address_to_address_25565":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_address_to_address_25595":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_address_to_t_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_25535":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_25539":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_25566":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_25592":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_25593":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_25758":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint32_to_uint32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint32_to_uint32_25590":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint8_to_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_address":{"entryPoint":792,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":1951,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint8":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"4506":[{"length":32,"start":2051},{"length":32,"start":4212},{"length":32,"start":4501},{"length":32,"start":16707}],"4509":[{"length":32,"start":5774},{"length":32,"start":7918}],"4512":[{"length":32,"start":1318},{"length":32,"start":3843},{"length":32,"start":8199},{"length":32,"start":14454},{"length":32,"start":14730}]},"linkReferences":{},"object":"60806040526004361015610026575b361561001e5761001c61412b565b005b61001c61412b565b5f3560e01c8062660b5314610313578062c992061461030e578063084d05131461030957806309474ae2146103045780630c501af9146102ff5780630ee28a88146102fa57806310b99527146102f557806311cfc159146102f057806316c38b3c146102eb5780631c39c38d146102e657806322395aaa146102e157806322f8e566146102dc578063240f475f146102d757806326205d80146102d257806329cb924d146102cd5780632d0f6f84146102c85780632d32d557146102c357806333dc09ca146102be5780633fc8cef3146102b95780634144fd61146102b45780634f7473ff146102af57806356688700146102aa57806356864f38146102a55780635c975abb146102a0578063625997c01461029b57806369b62502146102965780636ad0690a14610291578063715018a61461028c57806376ec08dd146102875780637998a1c41461028257806380c09a821461027d57806380f323a7146102785780638bda0c00146102735780638da5cb5b1461026e578063a16fd6e914610269578063a584119414610264578063ac9650d81461025f578063b60c2d7d1461025a578063b9a3c84c14610255578063c28f439214610250578063cd9499951461024b578063dd70e5e814610246578063e0f339e314610241578063e40064d71461023c578063e460e35c14610237578063f0056a7d146102325763f2fde38b0361000e576123ce565b612351565b612264565b612228565b6121ee565b612179565b612051565b61202b565b611fe8565b611daf565b611cca565b611be9565b611baf565b611b89565b6119b9565b61199c565b6118f1565b6116b2565b61166f565b611616565b6115f0565b6115e3565b611483565b611461565b611378565b611118565b6110fb565b611098565b611055565b610e63565b610e1b565b610d81565b610d67565b610cf3565b610cca565b610c4f565b610bee565b610bc9565b610b46565b610b29565b610a77565b6107a9565b61070b565b6106c0565b610664565b61049f565b61032d565b6001600160a01b0381160361032957565b5f80fd5b346103295760403660031901126103295760043561034a81610318565b602435906103566133c0565b61035e613418565b5f5460ff60a01b19165f55670de0b6b3a7640000821161045b576001600160a01b038116908115610417576103d4907fffffffffffffffffffffff0000000000000000000000000000000000000000ff74ffffffffffffffffffffffffffffffffffffffff00600b549260081b16911617600b55565b6103dd82600f55565b7fc1993b89fd79a19ece7beb067ddc8534ca26d29c0ff94ea2f53b4a508d1eedc95f80a361001c600160a01b60ff60a01b195f5416175f55565b606460405162461bcd60e51b815260206004820152601d60248201527f4261642070726f746f636f6c46656543617074757265416464726573730000006044820152fd5b606460405162461bcd60e51b815260206004820152601960248201527f4261642070726f746f636f6c46656543617074757265506374000000000000006044820152fd5b3461032957602080600319360112610329576004356104bc6133c0565b6104ce60ff60065460a01c16156124a9565b6104d6613418565b5f805460ff60a01b191690556040516302abf57960e61b81527f4964656e74696669657257686974656c6973740000000000000000000000000060048201526001600160a01b03919083816024817f000000000000000000000000000000000000000000000000000000000000000087165afa9283156106305784915f94610635575b506040517f90978d1b000000000000000000000000000000000000000000000000000000008152600481018490529384916024918391165afa928315610630577ff45367c278fcceff23d601ce4bdd191e5bd61687ff9f29dc7276a08fe54c0c5d936105ea936105d1925f92610603575b5050612529565b6105da81600d55565b6040519081529081906020820190565b0390a161001c600160a01b60ff60a01b195f5416175f55565b6106229250803d10610629575b61061a818361176c565b810190612514565b5f806105ca565b503d610610565b612509565b610656919450823d841161065d575b61064e818361176c565b8101906124f4565b925f610559565b503d610644565b346103295760403660031901126103295760206106a260043561068681610318565b61068e613418565b60ff60a01b195f54165f556024359061352e565b6106b8600160a01b60ff60a01b195f5416175f55565b604051908152f35b34610329576020366003190112610329576004355f90815260096020908152604091829020805460019091015483516001600160a01b039283168152911691810191909152f35b0390f35b34610329576020366003190112610329577fac111b3b527b307393c94d98f26140effb71411054466818be97912d2d65f77660043561074981610318565b6107516133c0565b610759613418565b5f805460ff60a01b1990811682556001600160a01b03928316808352600760209081526040938490208054938416905583519182529190931690830152819081016105ea565b8015150361032957565b34610329576060366003190112610329576004356107c681610318565b6044356024356107d58261079f565b6107dd613418565b5f5460ff60a01b19165f556107f760ff600b541615612574565b6001600160a01b0390817f000000000000000000000000000000000000000000000000000000000000000016918416928383148015610a43575b61083a906125bf565b61085d61084f610849876135f4565b84612640565b670de0b6b3a7640000900490565b9461089b61088f61088f610882846001600160a01b03165f52600760205260405f2090565b546001600160a01b031690565b6001600160a01b031690565b6040517f79cc6790000000000000000000000000000000000000000000000000000000008152336004820152602481018590529190602090839060449082905f905af19081156106305760029261090992610a24575b506001600160a01b03165f52600760205260405f2090565b01610915868254612671565b9055156109ed57813b15610329575f60405180937f2e1a7d4d0000000000000000000000000000000000000000000000000000000082528183816109618a600483019190602083019252565b03925af1908115610630577fcda1185f28599e6bd14ab8a68b3c30a11e1dce4256b5e67e94dd3fd846a6c589926109bb926109d4575b506109a28533613722565b6040805195865260208601919091523394918291820190565b0390a361001c600160a01b60ff60a01b195f5416175f55565b806109e16109e7926116e3565b80610b1f565b5f610997565b7fcda1185f28599e6bd14ab8a68b3c30a11e1dce4256b5e67e94dd3fd846a6c58991506109bb90610a1f8533866136da565b6109a2565b610a3c9060203d6020116106295761061a818361176c565b505f6108f1565b508015610831565b60609060031901126103295760043590602435610a6781610318565b90604435610a7481610318565b90565b3461032957610a8536610a4b565b610a909291926133c0565b610a98613418565b60ff60a01b195f54165f55610aad82846137f8565b5f526008602052610ad78160405f20906001600160a01b03166001600160a01b0319825416179055565b6001600160a01b038091169216907f234e7af08f77827792cc909447f27d2e6a3e2d839b04e26b50b71704a131c8a85f80a461001c600160a01b60ff60a01b195f5416175f55565b5f91031261032957565b34610329575f366003190112610329576020600e54604051908152f35b3461032957602036600319011261032957600435610b638161079f565b610b6b6133c0565b610b73613418565b60ff60a01b195f54165f55151560ff19600b541660ff821617600b557f0e2fb031ee032dc02d8011dc50b816eb450cf856abd8261680dac74f72165bd25f80a261001c600160a01b60ff60a01b195f5416175f55565b34610329575f3660031901126103295760206001600160a01b035f5416604051908152f35b34610329575f36600319011261032957610c06613418565b60ff60a01b195f54165f55610c196127d9565b610c396001600160a01b0380600c541690610c32613832565b16906138c7565b61001c600160a01b60ff60a01b195f5416175f55565b34610329575f6020366003190112610329576001600160a01b035f5416801561032957803b15610329575f80916024604051809481937f22f8e56600000000000000000000000000000000000000000000000000000000835260043560048401525af1801561063057610cc0575080f35b61001c91506116e3565b34610329575f3660031901126103295760206001600160a01b03600b5460081c16604051908152f35b34610329576040366003190112610329576001600160a01b03600435610d1881610318565b610d206133c0565b610d28613418565b60ff60a01b195f54165f55165f526007602052600160405f2001610d4f6024358254612b2f565b905561001c600160a01b60ff60a01b195f5416175f55565b34610329575f3660031901126103295760206106b8612b47565b34610329576020366003190112610329575f600435610d9f81610318565b610da7613418565b60ff60a01b198254168255610de16001600160a01b0380921691828452600a6020526040842090815494859255600b5460081c16836136da565b7f74740239d7d696c84422b720e125e1f47c4138c66d1f4d2a48e99f4197cdb79c5f80a361001c600160a01b60ff60a01b195f5416175f55565b3461032957604036600319011261032957610e44602435610e3b81610318565b600435906137f8565b5f52600860205260206001600160a01b0360405f205416604051908152f35b3461032957604036600319011261032957600435610e8081610318565b60243590610e8c6133c0565b610e9e60ff60065460a01c16156124a9565b610ea6613418565b5f5460ff60a01b19165f55610ebc821515612bb8565b6040516302abf57960e61b81527f436f6c6c61746572616c57686974656c6973740000000000000000000000000060048201526001600160a01b03926020919082826024817f000000000000000000000000000000000000000000000000000000000000000089165afa918215610630575f92611036575b508285851695604051938480927f3a3ab67200000000000000000000000000000000000000000000000000000000825281610f828b600483019190916001600160a01b036020820193169052565b0392165afa918215610630577fbfa9a96010167e98ce8c004f718932cbbfd33a58d681c752e693be7d457a1b3b94610fcd610ff794610fe993611000975f92611019575b5050612c03565b6001600160a01b03166001600160a01b0319600c541617600c55565b610ff1613944565b90612c4e565b6105da81601055565b0390a261001c600160a01b60ff60a01b195f5416175f55565b61102f9250803d106106295761061a818361176c565b5f80610fc6565b61104e919250833d851161065d5761064e818361176c565b905f610f34565b34610329575f3660031901126103295760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b34610329575f3660031901126103295760e060025463ffffffff60035460045460055490600654926040519586526020860152604085015260608401526001600160a01b038116608084015260ff8160a01c1660a084015260a81c1660c0820152f35b34610329575f366003190112610329576020600f54604051908152f35b60403660031901126103295760043561113081610318565b6024359061113c613418565b5f5460ff60a01b19165f5561115660ff600b541615612574565b611186611181611177836001600160a01b03165f52600760205260405f2090565b5460a01c60ff1690565b612c5b565b6001600160a01b0381811691907f0000000000000000000000000000000000000000000000000000000000000000168214808061136f575b8015611367575b6111ce90612ca6565b61123861088f61088f6108826111f56111e68961261e565b6111ef886135f4565b90612653565b956002611213826001600160a01b03165f52600760205260405f2090565b0161121f8a8254612c4e565b90556001600160a01b03165f52600760205260405f2090565b6040517f40c10f190000000000000000000000000000000000000000000000000000000081523360048201526024810184905290602090829060449082905f905af1801561063057611348575b508061133f575b1561130e57813b156103295760405190630d0e30db60e41b82525f8260048134875af1908115610630577f3c69701a61c79a92ef9692903aaa0068bce8771361ecb09547391e4fb4df8537926109bb926112fb575b506040805195865260208601919091523394918291820190565b806109e1611308926116e3565b5f6112e1565b6109bb7f3c69701a61c79a92ef9692903aaa0068bce8771361ecb09547391e4fb4df853791610a1f85303387613bfd565b5034151561128c565b6113609060203d6020116106295761061a818361176c565b505f611285565b5034156111c5565b508334146111be565b346103295760803660031901126103295760443560243560043561139b83610318565b7fb7d00a563842efb2c121a0eb02b7bb7ba1a34625bbc3d65057f1f0dbec0ec2a16020606435946113cb8661079f565b6113d3613418565b5f5460ff60a01b19165f556113e66133c0565b6114446001600160a01b03604051927f272751c7000000000000000000000000000000000000000000000000000000008585015216968760248401528660448401521515918260648201526064815261143e81611750565b85613c55565b604051908152a461001c600160a01b60ff60a01b195f5416175f55565b34610329575f36600319011261032957602060ff600b54166040519015158152f35b34610329575f3660031901126103295761149b6133c0565b6114a3613418565b5f5460ff60a01b19165f556040516114ba816116fc565b600254815260035460208201908152600454906040830191825260055460608401527f993cba33f9b140c9ce20ba10d7eda92128d5beb6df856f064916108a11647a7361159c6006549461158a6001600160a01b039160ff61157160808301998581168b5261155163ffffffff60a086019261153e868260a01c16859060ff169052565b60a81c1660c086019063ffffffff169052565b61156a5f6002555f6003555f6004555f6005555f600655565b5160ff1690565b166115b5575b519451955196516001600160a01b031690565b60405196875216949081906020820190565b0390a461001c600160a01b60ff60a01b195f5416175f55565b6115de6115ca600c546001600160a01b031690565b89516001600160a01b0316601054916136da565b611577565b5f36600319011261032957005b34610329575f36600319011261032957602063ffffffff600c5460a01c16604051908152f35b34610329575f3660031901126103295761162e6133c0565b5f6001600160a01b036001546001600160a01b03198116600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610329575f3660031901126103295760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b34610329575f366003190112610329576020600d54604051908152f35b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff81116116f757604052565b6116cf565b60e0810190811067ffffffffffffffff8211176116f757604052565b6040810190811067ffffffffffffffff8211176116f757604052565b60c0810190811067ffffffffffffffff8211176116f757604052565b60a0810190811067ffffffffffffffff8211176116f757604052565b90601f8019910116810190811067ffffffffffffffff8211176116f757604052565b60405190610160820182811067ffffffffffffffff8211176116f757604052565b604051906117bc826116fc565b565b67ffffffffffffffff81116116f75760051b60200190565b9080601f830112156103295760209082356117f0816117be565b936117fe604051958661176c565b81855260208086019260051b82010192831161032957602001905b828210611827575050505090565b81358152908301908301611819565b60a4359060ff8216820361032957565b6024359060ff8216820361032957565b9080601f83011215610329576020908235611870816117be565b9361187e604051958661176c565b81855260208086019260051b82010192831161032957602001905b8282106118a7575050505090565b83809183356118b581610318565b815201910190611899565b9181601f840112156103295782359167ffffffffffffffff8311610329576020808501948460051b01011161032957565b34610329576101003660031901126103295767ffffffffffffffff60046044358281116103295761192590369083016117d6565b906064358381116103295761193d90369083016117d6565b6084358481116103295761195490369084016117d6565b61195c611836565b9060c435868111610329576119749036908601611856565b9260e4359687116103295761198f61001c97369087016118c0565b9690956024359035612cf1565b34610329575f366003190112610329576020601054604051908152f35b346103295760a03660031901126103295760043567ffffffffffffffff8111610329576119ea9036906004016118c0565b906119f3611846565b604435906064359260843591611a07613418565b5f5460ff60a01b19165f55611a2460ff60065460a01c16156124a9565b611a3360ff600b541615612574565b60ff811615611b455761159c7f3185fa6fac8e91dc65e7424a8081c73353151d2715bddb71db0982c1fe4c0fd493611a8a611a78611a6f612b47565b63ffffffff1690565b600c5460a01c63ffffffff16906126d8565b97611aa45f6002555f6003555f6004555f6005555f600655565b611ac98963ffffffff60a81b1963ffffffff60a81b6006549260a81b16911617600655565b611ae88460ff60a01b1960ff60a01b6006549260a01b16911617600655565b611af187600255565b611afa88600355565b611b0382600455565b600680546001600160a01b03191633179055611b37611b2a600c546001600160a01b031690565b6010549030903390613bfd565b604051948594339a866131f0565b606460405162461bcd60e51b815260206004820152602060248201527f42756e646c65206d7573742068617665206174206c656173742031206c6561666044820152fd5b34610329575f3660031901126103295760206001600160a01b0360015416604051908152f35b346103295760203660031901126103295760206106a2600435611bd181610318565b611bd9613418565b60ff60a01b195f54165f5561346b565b3461032957602036600319011261032957610c39600435611c0981610318565b611c11613418565b60ff60a01b195f54165f55613ff0565b5f5b838110611c325750505f910152565b8181015183820152602001611c23565b90602091611c5b81518092818552858086019101611c21565b601f01601f1916010190565b6020808201906020835283518092526040830192602060408460051b8301019501935f915b848310611c9c5750505050505090565b9091929394958480611cba600193603f198682030187528a51611c42565b9801930193019194939290611c8c565b34610329576020366003190112610329576004803567ffffffffffffffff811161032957611cfc9036906004016118c0565b91611d0683613250565b925f5b818110611d1e57604051806107078782611c67565b5f80611d2b8385886132ad565b60409391611d3d8551809381936132f4565b0390305af490611d4b6130b8565b9115611d72575090600191611d608288613371565b52611d6b8187613371565b5001611d09565b8482604481511061032957611d968183611dab930151602480918301019101613301565b925192839262461bcd60e51b84528301613360565b0390fd5b3461032957602036600319011261032957600435611dcc81610318565b611dd46133c0565b611ddc613418565b5f5460ff60a01b19165f556001600160a01b039081611e0f610882836001600160a01b03165f52600760205260405f2090565b1615611eaa575b80611e69611e567f04e291c80180d65a57b5bf1bed775777ec0d6f283ef34bcf130712714d8bb7f7936001600160a01b03165f52600760205260405f2090565b600160a01b60ff60a01b19825416179055565b611e87610882826001600160a01b03165f52600760205260405f2090565b604080516001600160a01b039384168152929091166020830152819081016105ea565b6040517ffc2f1b6e0000000000000000000000000000000000000000000000000000000081526001600160a01b038216600482015291602090839060249082905f907f0000000000000000000000000000000000000000000000000000000000000000165af1918215610630577f04e291c80180d65a57b5bf1bed775777ec0d6f283ef34bcf130712714d8bb7f792611f7b915f91611fc9575b50611f60836001600160a01b03165f52600760205260405f2090565b906001600160a01b03166001600160a01b0319825416179055565b611fc4611f89611a6f612b47565b611fa4836001600160a01b03165f52600760205260405f2090565b9063ffffffff60a81b1963ffffffff60a81b83549260a81b169116179055565b611e16565b611fe2915060203d60201161065d5761064e818361176c565b5f611f44565b34610329575f3660031901126103295760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b34610329575f3660031901126103295760206001600160a01b03600c5416604051908152f35b346103295760203660031901126103295760043563ffffffff8116808203610329576102589061207f6133c0565b612087613418565b5f5460ff60a01b19165f55111561211957600c80547fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff1660a083901b77ffffffff00000000000000000000000000000000000000001617905560405163ffffffff90911681527f04dd1d84d387f404568a7954b5e398518bdd716e1a8f4a790be9a1a225ad93479080602081016105ea565b606460405162461bcd60e51b815260206004820152601260248201527f4c6976656e65737320746f6f2073686f727400000000000000000000000000006044820152fd5b67ffffffffffffffff81116116f757601f01601f191660200190565b346103295760403660031901126103295760243567ffffffffffffffff811161032957366023820112156103295780600401356121b58161215d565b906121c3604051928361176c565b8082523660248285010111610329576020815f92602461001c96018386013783010152600435613385565b346103295760203660031901126103295760206106a260043561221081610318565b612218613418565b60ff60a01b195f54165f556135f4565b34610329576020366003190112610329576001600160a01b0360043561224d81610318565b165f52600a602052602060405f2054604051908152f35b34610329577f36050d958750e6ac3aa674ac7bbe8d0ae6a2f7d4b808e8c2c42c1f22fc9fc4bb606061229536610a4b565b9061229e6133c0565b6122a6613418565b60ff60a01b195f54165f5561232a6040516122c081611718565b60016001600160a01b03809416938483528060208401961695868152875f52600960205261230b8260405f2095511685906001600160a01b03166001600160a01b0319825416179055565b51169101906001600160a01b03166001600160a01b0319825416179055565b60405192835260208301526040820152a161001c600160a01b60ff60a01b195f5416175f55565b346103295760203660031901126103295760c060043561237081610318565b6001600160a01b038091165f52600760205260405f20805490600181015463ffffffff6003600284015493015493604051958116865260ff8160a01c161515602087015260a81c1660408501526060840152608083015260a0820152f35b34610329576020366003190112610329576004356123eb81610318565b6123f36133c0565b6001600160a01b0380911690811561243f57600154826001600160a01b0319821617600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b608460405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b156124b057565b606460405162461bcd60e51b815260206004820152601d60248201527f50726f706f73616c2068617320756e636c61696d6564206c65617665730000006044820152fd5b908160209103126103295751610a7481610318565b6040513d5f823e3d90fd5b908160209103126103295751610a748161079f565b1561253057565b606460405162461bcd60e51b815260206004820152601860248201527f4964656e746966696572206e6f7420737570706f7274656400000000000000006044820152fd5b1561257b57565b606460405162461bcd60e51b815260206004820152601260248201527f436f6e74726163742069732070617573656400000000000000000000000000006044820152fd5b156125c657565b606460405162461bcd60e51b815260206004820152600d60248201527f43616e742073656e6420657468000000000000000000000000000000000000006044820152fd5b634e487b7160e01b5f52601160045260245ffd5b90670de0b6b3a76400009182810292818404149015171561263b57565b61260a565b8181029291811591840414171561263b57565b811561265d570490565b634e487b7160e01b5f52601260045260245ffd5b9190820391821161263b57565b1561268557565b606460405162461bcd60e51b815260206004820152601760248201527f5265717565737420706173736564206c6976656e6573730000000000000000006044820152fd5b90816020910312610329575190565b91909163ffffffff8080941691160191821161263b57565b906117bc945f6127ca9263ffffffff6101e0969a99979a6102009287521660208601528060408601528401526102208301976127386060850182516001600160a01b03169052565b60208101516001600160a01b0316608085015260408101516001600160a01b031660a08501526060810151151560c0850152608081015160e085015260a081015190610100918286015260c0810151610120908187015260e082015192610140938488015282015161016087015281015161018086015201516101a08401526101c08301906001600160a01b03169052565b01906001600160a01b03169052565b6127e4611a6f612b47565b6006546127f99060a81c63ffffffff16611a6f565b61280c63ffffffff91828416111561267e565b612814613944565b906010918254811015612b2357612829613832565b91600c93845461283f906001600160a01b031690565b936001600160a01b03809116948583549061285992613b37565b600d5495805496888685549061286e91612671565b98600654612882906001600160a01b031690565b9060405193849283927faf355d1e00000000000000000000000000000000000000000000000000000000845260209d8e968a8d8460a01c169316906004870195612927969291670de0b6b3a7640000955f6101009699989361012090875263ffffffff80941660208801528060408801528601526101408501986001600160a01b0380951660608701525f608087015260a08601521660c08401521660e08201520152565b03818a5a905f91f19081612b06575b5061294b5750505050505050506117bc613a7f565b878692889661296a8561296586546001600160a01b031690565b6138c7565b6006546001600160a01b031696845492818460a01c16948561298b916126d8565b908389549061299991612671565b946129a261178e565b6001600160a01b03909b168b525f8c8c0152166001600160a01b031660408a0152606089015f905260808901670de0b6b3a7640000905260a089015f90521660c088015260e087015f9052610100870152610120860152610140850152612a185f6002555f6003555f6004555f6005555f600655565b80546001600160a01b031683543033612a3093613bfd565b546001600160a01b0316915490612a4692613b37565b600d549260405180809581947f9ce320c8000000000000000000000000000000000000000000000000000000008352309033908b6004860194612a88956126f0565b03915a905f91f1801561063057612ad8575b505060405163ffffffff909116815233907f15951cb2ef6993bc23a55912e7d0bcac13e4797c432aaa334816aed6914a7a909080602081015b0390a2565b81612af792903d10612aff575b612aef818361176c565b8101906126c9565b505f80612a9a565b503d612ae5565b612b1c90893d8b11612aff57612aef818361176c565b505f612936565b505050506117bc613a7f565b81810392915f13801582851316918412161761263b57565b5f546001600160a01b03168015612bb3576020600491604051928380927f29cb924d0000000000000000000000000000000000000000000000000000000082525afa908115610630575f91612b9a575090565b610a74915060203d602011612aff57612aef818361176c565b504290565b15612bbf57565b606460405162461bcd60e51b815260206004820152601760248201527f626f6e6420657175616c20746f2066696e616c206665650000000000000000006044820152fd5b15612c0a57565b606460405162461bcd60e51b815260206004820152601060248201527f4e6f74206f6e2077686974656c697374000000000000000000000000000000006044820152fd5b9190820180921161263b57565b15612c6257565b606460405162461bcd60e51b815260206004820152601160248201527f546f6b656e206e6f7420656e61626c65640000000000000000000000000000006044820152fd5b15612cad57565b606460405162461bcd60e51b815260206004820152600d60248201527f426164206d73672e76616c7565000000000000000000000000000000000000006044820152fd5b969795929491939097612d02613418565b5f5460ff60a01b19165f55600b5460ff1615612d1d90612574565b612d25612b47565b60065460a81c63ffffffff1663ffffffff1610612d4190612f5a565b60055496612d59600160ff86161b808a161415612fa5565b60025491612d656117af565b918a83528760208401528860408401528460608401528b60808401528560a0840190612d93919060ff169052565b8660c08401523690612da492612ff0565b90612dae92613cc0565b612db79061303e565b612dc087613d60565b95909260ff16966001881b17612dd590600555565b60065460a01c60ff16612de790613089565b612e069060ff60a01b1960ff60a01b6006549260a01b16911617600655565b612e148582868b8a88613e61565b7ff652dd63b1aedbf9e740f3152fb67b0d94d069cf1182811ebd88921850d9356795612e62938a15612eaa575b505060065460ff8160a01c1615612e7b575b50604051948594339a866131a1565b0390a46117bc600160a01b60ff60a01b195f5416175f55565b612ea490612e91600c546001600160a01b031690565b6001600160a01b036010549216906136da565b5f612e53565b5f8091612f5393612f35612f4160035460045490612f036040519283927f493a4f840000000000000000000000000000000000000000000000000000000060208501526024840160209093929193604081019481520152565b0390612f17601f199283810183528261176c565b6040519384916020830196637375c56f60e11b885260248401613098565b0390810183528261176c565b51915af4612f4d6130b8565b506130e7565b5f80612e41565b15612f6157565b606460405162461bcd60e51b815260206004820152601360248201527f4e6f7420706173736564206c6976656e657373000000000000000000000000006044820152fd5b15612fac57565b606460405162461bcd60e51b815260206004820152600f60248201527f416c726561647920636c61696d656400000000000000000000000000000000006044820152fd5b9291612ffb826117be565b91613009604051938461176c565b829481845260208094019160051b810192831161032957905b82821061302f5750505050565b81358152908301908301613022565b1561304557565b606460405162461bcd60e51b815260206004820152600960248201527f4261642050726f6f6600000000000000000000000000000000000000000000006044820152fd5b60ff16801561263b575f190190565b6040906001600160a01b03610a7494931681528160208201520190611c42565b3d156130e2573d906130c98261215d565b916130d7604051938461176c565b82523d5f602084013e565b606090565b156130ee57565b606460405162461bcd60e51b815260206004820152601360248201527f64656c656761746563616c6c206661696c6564000000000000000000000000006044820152fd5b9081518082526020808093019301915f5b828110613151575050505090565b83516001600160a01b031685529381019392810192600101613143565b9081518082526020808093019301915f5b82811061318d575050505090565b83518552938101939281019260010161317f565b9390610a7495936131c66131e2946131d493885260a0602089015260a0880190613132565b90868203604088015261316e565b90848203606086015261316e565b91608081840391015261316e565b9594939163ffffffff60ff92168752166020860152608060408601528060808601527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81116103295760609160a09160051b809183880137850101930152565b9061325a826117be565b613267604051918261176c565b8281528092613278601f19916117be565b01905f5b82811061328857505050565b80606060208093850101520161327c565b634e487b7160e01b5f52603260045260245ffd5b91908110156132ef5760051b81013590601e198136030182121561032957019081359167ffffffffffffffff8311610329576020018236038113610329579190565b613299565b908092918237015f815290565b6020818303126103295780519067ffffffffffffffff8211610329570181601f820112156103295780516133348161215d565b92613342604051948561176c565b8184526020828401011161032957610a749160208085019101611c21565b906020610a74928181520190611c42565b80518210156132ef5760209160051b010190565b906133aa916133926133c0565b61339a613418565b60ff60a01b195f54165f55613c55565b6117bc600160a01b60ff60a01b195f5416175f55565b6001600160a01b036001541633036133d457565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60ff5f5460a01c161561342757565b606460405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b61347481613ff0565b6001600160a01b038091165f52600760205260405f20906134c863ffffffff604051926134a084611734565b8454908116845260ff8160a01c161515602085015260a81c16604083019063ffffffff169052565b60018201549081606082015260a0600360028501549485608085015201549101525f81135f14613522576134fd908092612c4e565b80156135145761350f610a749261261e565b612653565b5050670de0b6b3a764000090565b506134fd5f8092612c4e565b906134fd9061353c83613ff0565b6001600160a01b038093165f52600760205260405f209261359063ffffffff6040519261356884611734565b8654908116845260ff8160a01c161515602085015260a81c16604083019063ffffffff169052565b60018401549081606082015260a060036002870154966080840197885201549101525f81135f146135cd576135c6908092612c4e565b9251612c4e565b506135c65f8092612c4e565b9190915f838201938412911290801582169115161761263b57565b6004613611826001600160a01b03165f52600760205260405f2090565b602061362a61088f61088f84546001600160a01b031690565b604051938480927f18160ddd0000000000000000000000000000000000000000000000000000000082525afa918215610630575f926136b9575b5081156136aa576136a581613687610a749561368261350f95614199565b613ff0565b600361369c60028301546001840154906135d9565b91015490612b2f565b61261e565b505050670de0b6b3a764000090565b6136d391925060203d602011612aff57612aef818361176c565b905f613664565b60405163a9059cbb60e01b60208201526001600160a01b03909216602483015260448201929092526117bc9161371d82606481015b03601f19810184528361176c565b614223565b8147106137b4575f8080936001600160a01b038294165af16137426130b8565b501561374a57565b608460405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152fd5b606460405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152fd5b604080516001600160a01b03909216602083019081529082019290925261382c81606081015b03601f19810183528261176c565b51902090565b6001600160a01b036040516302abf57960e61b81527f536b696e6e794f7074696d69737469634f7261636c65000000000000000000006004820152602081602481857f0000000000000000000000000000000000000000000000000000000000000000165afa908115610630575f916138aa57501690565b6138c3915060203d60201161065d5761064e818361176c565b1690565b906001600160a01b036040519163095ea7b360e01b60208401521660248201525f604482015260448152608081019181831067ffffffffffffffff8411176116f7576117bc92604052614223565b9081602091031261032957604051906020820182811067ffffffffffffffff8211176116f75760405251815290565b6040516302abf57960e61b81527f53746f726500000000000000000000000000000000000000000000000000000060048201526020906001600160a01b039082816024817f000000000000000000000000000000000000000000000000000000000000000086165afa908115610630578391613a1c915f91613a62575b506139d761088f600c546001600160a01b031690565b6040519485809481937f5b97aadd000000000000000000000000000000000000000000000000000000008352600483019190916001600160a01b036020820193169052565b0392165afa918215610630575f92613a35575b50505190565b613a549250803d10613a5b575b613a4c818361176c565b810190613915565b5f80613a2f565b503d613a42565b613a799150833d851161065d5761064e818361176c565b5f6139c1565b600c5460065460105460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291602091839160449183915f91165af1801561063057613b18575b50613ae25f6002555f6003555f6004555f6005555f600655565b613aea612b47565b6040519081527f0cfbbf45ab7f5225663454de7117b1b0ed5a7c133b61f54ccf367dcf8b6d4d5960203392a2565b613b309060203d6020116106295761061a818361176c565b505f613ac8565b6040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03831660248201529192602083806044810103816001600160a01b0386165afa928315610630575f93613bdc575b50820180921161263b5760405163095ea7b360e01b60208201526001600160a01b03909316602484015260448301919091526117bc919061371d826064810161370f565b613bf691935060203d602011612aff57612aef818361176c565b915f613b98565b90926117bc93604051937f23b872dd0000000000000000000000000000000000000000000000000000000060208601526001600160a01b03809216602486015216604484015260648301526064825261371d82611750565b90612ad37f218987b934c2f6bc596136829fbf43a5fef4d6fafce41f3f6254d9a870c2deec91613cac5f80613c8987613d60565b604051612f418161381e896020830195637375c56f60e11b875260248401613098565b604051918291602083526020830190611c42565b610a749291604051613d578161381e60208201946020865280516040840152613cf9602082015160e0606086015261012085019061316e565b60c0613d2e613d1a604085015193603f1994858983030160808a015261316e565b6060850151848883030160a089015261316e565b9260808101518287015260ff60a08201511660e087015201519084830301610100850152613132565b5190209161431b565b5f52600960205260405f20906001600160a01b0360018184541693015416908115613dd257823b15613d8e57565b606460405162461bcd60e51b815260206004820152601760248201527f41646170746572206e6f7420696e697469616c697a65640000000000000000006044820152fd5b606460405162461bcd60e51b815260206004820152601960248201527f53706f6b65506f6f6c206e6f7420696e697469616c697a6564000000000000006044820152fd5b15613e1d57565b606460405162461bcd60e51b815260206004820152601560248201527f526f757465206e6f742077686974656c697374656400000000000000000000006044820152fd5b92949391908551955f5b878110613e7c575050505050505050565b80613ef7613e9c613e8f60019486613371565b516001600160a01b031690565b858389613ebd610882613eaf8c876137f8565b5f52600860205260405f2090565b613ed16001600160a01b0382161515613e16565b5f613edc8484613371565b5113613efd575b5050613ef091508b613371565b519061436c565b01613e6b565b613f7c93613f6f613f105f958695613371565b516040517f52c8c75c00000000000000000000000000000000000000000000000000000000602082019081526001600160a01b038a81166024840152958616604483015260648201929092529290931660848301528160a4810161381e565b51908d5af4612f4d6130b8565b613f868389613371565b51613faf85613fa6846001600160a01b03165f52600760205260405f2090565b019182546135d9565b9055613fbb8389613371565b51613fe56002613fdc846001600160a01b03165f52600760205260405f2090565b01918254612671565b90558583895f613ee3565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038216602082602481845afa918215610630575f9261410a575b5061405661088f61088f600c546001600160a01b031690565b14806140f9575b156140f35760105461406e91612671565b905b600261408d826001600160a01b03165f52600760205260405f2090565b01548211614099575050565b6140ef816140c660026140be81956001600160a01b03165f52600760205260405f2090565b015485612671565b61121f60016140e6846001600160a01b03165f52600760205260405f2090565b01918254612b2f565b0155565b90614070565b5060ff60065460a01c16151561405d565b61412491925060203d602011612aff57612aef818361176c565b905f61403d565b60ff5f5460a01c1661413957565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016803b15610329575f60049160405192838092630d0e30db60e41b825234905af18015610630576141905750565b6117bc906116e3565b6003810190815463ffffffff9081835460a81c166141b5612b47565b90810390811161263b576141dd670de0b6b3a7640000916141d8600e5485612640565b612640565b048181101561421c575b810390811161263b576117bc93556141fd612b47565b825463ffffffff60a81b1916911660a81b63ffffffff60a81b16179055565b50806141e7565b604051614280916001600160a01b031661423c82611718565b5f806020958685527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656487860152868151910182855af161427a6130b8565b91614416565b805190828215928315614303575b505050156142995750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b6143139350820181019101612514565b5f828161428e565b929091905f915b8451831015614364576143358386613371565b519081811015614353575f52602052600160405f205b920191614322565b905f52602052600160405f2061434b565b915092501490565b670de0b6b3a7640000614381600f5484612640565b04918281039080821161263b5783036143c2575b508161439f575050565b6001600160a01b03165f52600a60205260405f20805491820180921161263b5755565b60036143df836001600160a01b03165f52600760205260405f2090565b0180549082820180921161263b575561440e6001613fa6846001600160a01b03165f52600760205260405f2090565b90555f614395565b91929015614477575081511561442a575090565b3b156144335790565b606460405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b82519091501561448a5750805190602001fd5b611dab9060405191829162461bcd60e51b83526004830161336056fea2646970667358221220c1c7172b1459c4b41378aac3fd8bbb22ae38c9a459dcccdc71bce45e0045a5d864736f6c63430008170033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x26 JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x1E JUMPI PUSH2 0x1C PUSH2 0x412B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C PUSH2 0x412B JUMP JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x660B53 EQ PUSH2 0x313 JUMPI DUP1 PUSH3 0xC99206 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0x84D0513 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x9474AE2 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xC501AF9 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0xEE28A88 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x10B99527 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x11CFC159 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x1C39C38D EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x22395AAA EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x22F8E566 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x240F475F EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x26205D80 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x29CB924D EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x2D0F6F84 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x2D32D557 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x33DC09CA EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x4144FD61 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x4F7473FF EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x56688700 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x56864F38 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x625997C0 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x69B62502 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x6AD0690A EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x76EC08DD EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x7998A1C4 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x80C09A82 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x80F323A7 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x8BDA0C00 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xA16FD6E9 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xA5841194 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xAC9650D8 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xB60C2D7D EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xB9A3C84C EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xC28F4392 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xCD949995 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xDD70E5E8 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xE0F339E3 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0xE40064D7 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xE460E35C EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xF0056A7D EQ PUSH2 0x232 JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0xE JUMPI PUSH2 0x23CE JUMP JUMPDEST PUSH2 0x2351 JUMP JUMPDEST PUSH2 0x2264 JUMP JUMPDEST PUSH2 0x2228 JUMP JUMPDEST PUSH2 0x21EE JUMP JUMPDEST PUSH2 0x2179 JUMP JUMPDEST PUSH2 0x2051 JUMP JUMPDEST PUSH2 0x202B JUMP JUMPDEST PUSH2 0x1FE8 JUMP JUMPDEST PUSH2 0x1DAF JUMP JUMPDEST PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0x1BE9 JUMP JUMPDEST PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0x1B89 JUMP JUMPDEST PUSH2 0x19B9 JUMP JUMPDEST PUSH2 0x199C JUMP JUMPDEST PUSH2 0x18F1 JUMP JUMPDEST PUSH2 0x16B2 JUMP JUMPDEST PUSH2 0x166F JUMP JUMPDEST PUSH2 0x1616 JUMP JUMPDEST PUSH2 0x15F0 JUMP JUMPDEST PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0x1483 JUMP JUMPDEST PUSH2 0x1461 JUMP JUMPDEST PUSH2 0x1378 JUMP JUMPDEST PUSH2 0x1118 JUMP JUMPDEST PUSH2 0x10FB JUMP JUMPDEST PUSH2 0x1098 JUMP JUMPDEST PUSH2 0x1055 JUMP JUMPDEST PUSH2 0xE63 JUMP JUMPDEST PUSH2 0xE1B JUMP JUMPDEST PUSH2 0xD81 JUMP JUMPDEST PUSH2 0xD67 JUMP JUMPDEST PUSH2 0xCF3 JUMP JUMPDEST PUSH2 0xCCA JUMP JUMPDEST PUSH2 0xC4F JUMP JUMPDEST PUSH2 0xBEE JUMP JUMPDEST PUSH2 0xBC9 JUMP JUMPDEST PUSH2 0xB46 JUMP JUMPDEST PUSH2 0xB29 JUMP JUMPDEST PUSH2 0xA77 JUMP JUMPDEST PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST PUSH2 0x664 JUMP JUMPDEST PUSH2 0x49F JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x329 JUMPI JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x34A DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x356 PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0x35E PUSH2 0x3418 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH0 SSTORE PUSH8 0xDE0B6B3A7640000 DUP3 GT PUSH2 0x45B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x417 JUMPI PUSH2 0x3D4 SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FF PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0xB SLOAD SWAP3 PUSH1 0x8 SHL AND SWAP2 AND OR PUSH1 0xB SSTORE JUMP JUMPDEST PUSH2 0x3DD DUP3 PUSH1 0xF SSTORE JUMP JUMPDEST PUSH32 0xC1993B89FD79A19ECE7BEB067DDC8534CA26D29C0FF94EA2F53B4A508D1EEDC9 PUSH0 DUP1 LOG3 PUSH2 0x1C PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4261642070726F746F636F6C4665654361707475726541646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4261642070726F746F636F6C4665654361707475726550637400000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x329 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x4BC PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0x4CE PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x24A9 JUMP JUMPDEST PUSH2 0x4D6 PUSH2 0x3418 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x2ABF579 PUSH1 0xE6 SHL DUP2 MSTORE PUSH32 0x4964656E74696669657257686974656C69737400000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP4 DUP2 PUSH1 0x24 DUP2 PUSH32 0x0 DUP8 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x630 JUMPI DUP5 SWAP2 PUSH0 SWAP5 PUSH2 0x635 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x90978D1B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP4 DUP5 SWAP2 PUSH1 0x24 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x630 JUMPI PUSH32 0xF45367C278FCCEFF23D601CE4BDD191E5BD61687FF9F29DC7276A08FE54C0C5D SWAP4 PUSH2 0x5EA SWAP4 PUSH2 0x5D1 SWAP3 PUSH0 SWAP3 PUSH2 0x603 JUMPI JUMPDEST POP POP PUSH2 0x2529 JUMP JUMPDEST PUSH2 0x5DA DUP2 PUSH1 0xD SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH2 0x1C PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x622 SWAP3 POP DUP1 RETURNDATASIZE LT PUSH2 0x629 JUMPI JUMPDEST PUSH2 0x61A DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2514 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5CA JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x610 JUMP JUMPDEST PUSH2 0x2509 JUMP JUMPDEST PUSH2 0x656 SWAP2 SWAP5 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x65D JUMPI JUMPDEST PUSH2 0x64E DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x24F4 JUMP JUMPDEST SWAP3 PUSH0 PUSH2 0x559 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x644 JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH2 0x6A2 PUSH1 0x4 CALLDATALOAD PUSH2 0x686 DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH2 0x68E PUSH2 0x3418 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND PUSH0 SSTORE PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x352E JUMP JUMPDEST PUSH2 0x6B8 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE RETURN JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH32 0xAC111B3B527B307393C94D98F26140EFFB71411054466818BE97912D2D65F776 PUSH1 0x4 CALLDATALOAD PUSH2 0x749 DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH2 0x751 PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0x759 PUSH2 0x3418 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP4 DUP5 SWAP1 KECCAK256 DUP1 SLOAD SWAP4 DUP5 AND SWAP1 SSTORE DUP4 MLOAD SWAP2 DUP3 MSTORE SWAP2 SWAP1 SWAP4 AND SWAP1 DUP4 ADD MSTORE DUP2 SWAP1 DUP2 ADD PUSH2 0x5EA JUMP JUMPDEST DUP1 ISZERO ISZERO SUB PUSH2 0x329 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x7C6 DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x7D5 DUP3 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x7DD PUSH2 0x3418 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH0 SSTORE PUSH2 0x7F7 PUSH1 0xFF PUSH1 0xB SLOAD AND ISZERO PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH32 0x0 AND SWAP2 DUP5 AND SWAP3 DUP4 DUP4 EQ DUP1 ISZERO PUSH2 0xA43 JUMPI JUMPDEST PUSH2 0x83A SWAP1 PUSH2 0x25BF JUMP JUMPDEST PUSH2 0x85D PUSH2 0x84F PUSH2 0x849 DUP8 PUSH2 0x35F4 JUMP JUMPDEST DUP5 PUSH2 0x2640 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 DIV SWAP1 JUMP JUMPDEST SWAP5 PUSH2 0x89B PUSH2 0x88F PUSH2 0x88F PUSH2 0x882 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x79CC679000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x630 JUMPI PUSH1 0x2 SWAP3 PUSH2 0x909 SWAP3 PUSH2 0xA24 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH2 0x915 DUP7 DUP3 SLOAD PUSH2 0x2671 JUMP JUMPDEST SWAP1 SSTORE ISZERO PUSH2 0x9ED JUMPI DUP2 EXTCODESIZE ISZERO PUSH2 0x329 JUMPI PUSH0 PUSH1 0x40 MLOAD DUP1 SWAP4 PUSH32 0x2E1A7D4D00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 DUP4 DUP2 PUSH2 0x961 DUP11 PUSH1 0x4 DUP4 ADD SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP3 MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x630 JUMPI PUSH32 0xCDA1185F28599E6BD14AB8A68B3C30A11E1DCE4256B5E67E94DD3FD846A6C589 SWAP3 PUSH2 0x9BB SWAP3 PUSH2 0x9D4 JUMPI JUMPDEST POP PUSH2 0x9A2 DUP6 CALLER PUSH2 0x3722 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER SWAP5 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH2 0x1C PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST DUP1 PUSH2 0x9E1 PUSH2 0x9E7 SWAP3 PUSH2 0x16E3 JUMP JUMPDEST DUP1 PUSH2 0xB1F JUMP JUMPDEST PUSH0 PUSH2 0x997 JUMP JUMPDEST PUSH32 0xCDA1185F28599E6BD14AB8A68B3C30A11E1DCE4256B5E67E94DD3FD846A6C589 SWAP2 POP PUSH2 0x9BB SWAP1 PUSH2 0xA1F DUP6 CALLER DUP7 PUSH2 0x36DA JUMP JUMPDEST PUSH2 0x9A2 JUMP JUMPDEST PUSH2 0xA3C SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x629 JUMPI PUSH2 0x61A DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST POP PUSH0 PUSH2 0x8F1 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x831 JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH2 0xA67 DUP2 PUSH2 0x318 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH2 0xA74 DUP2 PUSH2 0x318 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH2 0xA85 CALLDATASIZE PUSH2 0xA4B JUMP JUMPDEST PUSH2 0xA90 SWAP3 SWAP2 SWAP3 PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0xA98 PUSH2 0x3418 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND PUSH0 SSTORE PUSH2 0xAAD DUP3 DUP5 PUSH2 0x37F8 JUMP JUMPDEST PUSH0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0xAD7 DUP2 PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP3 AND SWAP1 PUSH32 0x234E7AF08F77827792CC909447F27D2E6A3E2D839B04E26B50B71704A131C8A8 PUSH0 DUP1 LOG4 PUSH2 0x1C PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST PUSH0 SWAP2 SUB SLT PUSH2 0x329 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH1 0xE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xB63 DUP2 PUSH2 0x79F JUMP JUMPDEST PUSH2 0xB6B PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0xB73 PUSH2 0x3418 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND PUSH0 SSTORE ISZERO ISZERO PUSH1 0xFF NOT PUSH1 0xB SLOAD AND PUSH1 0xFF DUP3 AND OR PUSH1 0xB SSTORE PUSH32 0xE2FB031EE032DC02D8011DC50B816EB450CF856ABD8261680DAC74F72165BD2 PUSH0 DUP1 LOG2 PUSH2 0x1C PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH0 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH2 0xC06 PUSH2 0x3418 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND PUSH0 SSTORE PUSH2 0xC19 PUSH2 0x27D9 JUMP JUMPDEST PUSH2 0xC39 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH1 0xC SLOAD AND SWAP1 PUSH2 0xC32 PUSH2 0x3832 JUMP JUMPDEST AND SWAP1 PUSH2 0x38C7 JUMP JUMPDEST PUSH2 0x1C PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH0 SLOAD AND DUP1 ISZERO PUSH2 0x329 JUMPI DUP1 EXTCODESIZE ISZERO PUSH2 0x329 JUMPI PUSH0 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH32 0x22F8E56600000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x630 JUMPI PUSH2 0xCC0 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x1C SWAP2 POP PUSH2 0x16E3 JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD PUSH1 0x8 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 CALLDATALOAD PUSH2 0xD18 DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH2 0xD20 PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0xD28 PUSH2 0x3418 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND PUSH0 SSTORE AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD PUSH2 0xD4F PUSH1 0x24 CALLDATALOAD DUP3 SLOAD PUSH2 0x2B2F JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1C PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH2 0x6B8 PUSH2 0x2B47 JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH0 PUSH1 0x4 CALLDATALOAD PUSH2 0xD9F DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH2 0xDA7 PUSH2 0x3418 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA0 SHL NOT DUP3 SLOAD AND DUP3 SSTORE PUSH2 0xDE1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP1 DUP2 SLOAD SWAP5 DUP6 SWAP3 SSTORE PUSH1 0xB SLOAD PUSH1 0x8 SHR AND DUP4 PUSH2 0x36DA JUMP JUMPDEST PUSH32 0x74740239D7D696C84422B720E125E1F47C4138C66D1F4D2A48E99F4197CDB79C PUSH0 DUP1 LOG3 PUSH2 0x1C PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH2 0xE44 PUSH1 0x24 CALLDATALOAD PUSH2 0xE3B DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x37F8 JUMP JUMPDEST PUSH0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xE80 DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xE8C PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0xE9E PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x24A9 JUMP JUMPDEST PUSH2 0xEA6 PUSH2 0x3418 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH0 SSTORE PUSH2 0xEBC DUP3 ISZERO ISZERO PUSH2 0x2BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2ABF579 PUSH1 0xE6 SHL DUP2 MSTORE PUSH32 0x436F6C6C61746572616C57686974656C69737400000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH1 0x20 SWAP2 SWAP1 DUP3 DUP3 PUSH1 0x24 DUP2 PUSH32 0x0 DUP10 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x630 JUMPI PUSH0 SWAP3 PUSH2 0x1036 JUMPI JUMPDEST POP DUP3 DUP6 DUP6 AND SWAP6 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH32 0x3A3AB67200000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH2 0xF82 DUP12 PUSH1 0x4 DUP4 ADD SWAP2 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD SWAP4 AND SWAP1 MSTORE JUMP JUMPDEST SUB SWAP3 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x630 JUMPI PUSH32 0xBFA9A96010167E98CE8C004F718932CBBFD33A58D681C752E693BE7D457A1B3B SWAP5 PUSH2 0xFCD PUSH2 0xFF7 SWAP5 PUSH2 0xFE9 SWAP4 PUSH2 0x1000 SWAP8 PUSH0 SWAP3 PUSH2 0x1019 JUMPI JUMPDEST POP POP PUSH2 0x2C03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT PUSH1 0xC SLOAD AND OR PUSH1 0xC SSTORE JUMP JUMPDEST PUSH2 0xFF1 PUSH2 0x3944 JUMP JUMPDEST SWAP1 PUSH2 0x2C4E JUMP JUMPDEST PUSH2 0x5DA DUP2 PUSH1 0x10 SSTORE JUMP JUMPDEST SUB SWAP1 LOG2 PUSH2 0x1C PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x102F SWAP3 POP DUP1 RETURNDATASIZE LT PUSH2 0x629 JUMPI PUSH2 0x61A DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0x104E SWAP2 SWAP3 POP DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x65D JUMPI PUSH2 0x64E DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0xF34 JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0xE0 PUSH1 0x2 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD SWAP1 PUSH1 0x6 SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xA8 SHR AND PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH1 0xF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1130 DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x113C PUSH2 0x3418 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH0 SSTORE PUSH2 0x1156 PUSH1 0xFF PUSH1 0xB SLOAD AND ISZERO PUSH2 0x2574 JUMP JUMPDEST PUSH2 0x1186 PUSH2 0x1181 PUSH2 0x1177 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xA0 SHR PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2C5B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 SWAP1 PUSH32 0x0 AND DUP3 EQ DUP1 DUP1 PUSH2 0x136F JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x1367 JUMPI JUMPDEST PUSH2 0x11CE SWAP1 PUSH2 0x2CA6 JUMP JUMPDEST PUSH2 0x1238 PUSH2 0x88F PUSH2 0x88F PUSH2 0x882 PUSH2 0x11F5 PUSH2 0x11E6 DUP10 PUSH2 0x261E JUMP JUMPDEST PUSH2 0x11EF DUP9 PUSH2 0x35F4 JUMP JUMPDEST SWAP1 PUSH2 0x2653 JUMP JUMPDEST SWAP6 PUSH1 0x2 PUSH2 0x1213 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH2 0x121F DUP11 DUP3 SLOAD PUSH2 0x2C4E JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x40C10F1900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x630 JUMPI PUSH2 0x1348 JUMPI JUMPDEST POP DUP1 PUSH2 0x133F JUMPI JUMPDEST ISZERO PUSH2 0x130E JUMPI DUP2 EXTCODESIZE ISZERO PUSH2 0x329 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH4 0xD0E30DB PUSH1 0xE4 SHL DUP3 MSTORE PUSH0 DUP3 PUSH1 0x4 DUP2 CALLVALUE DUP8 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x630 JUMPI PUSH32 0x3C69701A61C79A92EF9692903AAA0068BCE8771361ECB09547391E4FB4DF8537 SWAP3 PUSH2 0x9BB SWAP3 PUSH2 0x12FB JUMPI JUMPDEST POP PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER SWAP5 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x9E1 PUSH2 0x1308 SWAP3 PUSH2 0x16E3 JUMP JUMPDEST PUSH0 PUSH2 0x12E1 JUMP JUMPDEST PUSH2 0x9BB PUSH32 0x3C69701A61C79A92EF9692903AAA0068BCE8771361ECB09547391E4FB4DF8537 SWAP2 PUSH2 0xA1F DUP6 ADDRESS CALLER DUP8 PUSH2 0x3BFD JUMP JUMPDEST POP CALLVALUE ISZERO ISZERO PUSH2 0x128C JUMP JUMPDEST PUSH2 0x1360 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x629 JUMPI PUSH2 0x61A DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST POP PUSH0 PUSH2 0x1285 JUMP JUMPDEST POP CALLVALUE ISZERO PUSH2 0x11C5 JUMP JUMPDEST POP DUP4 CALLVALUE EQ PUSH2 0x11BE JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x139B DUP4 PUSH2 0x318 JUMP JUMPDEST PUSH32 0xB7D00A563842EFB2C121A0EB02B7BB7BA1A34625BBC3D65057F1F0DBEC0EC2A1 PUSH1 0x20 PUSH1 0x64 CALLDATALOAD SWAP5 PUSH2 0x13CB DUP7 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x13D3 PUSH2 0x3418 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH0 SSTORE PUSH2 0x13E6 PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0x1444 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP3 PUSH32 0x272751C700000000000000000000000000000000000000000000000000000000 DUP6 DUP6 ADD MSTORE AND SWAP7 DUP8 PUSH1 0x24 DUP5 ADD MSTORE DUP7 PUSH1 0x44 DUP5 ADD MSTORE ISZERO ISZERO SWAP2 DUP3 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x64 DUP2 MSTORE PUSH2 0x143E DUP2 PUSH2 0x1750 JUMP JUMPDEST DUP6 PUSH2 0x3C55 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG4 PUSH2 0x1C PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xB SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH2 0x149B PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0x14A3 PUSH2 0x3418 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH0 SSTORE PUSH1 0x40 MLOAD PUSH2 0x14BA DUP2 PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x3 SLOAD PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x4 SLOAD SWAP1 PUSH1 0x40 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x5 SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH32 0x993CBA33F9B140C9CE20BA10D7EDA92128D5BEB6DF856F064916108A11647A73 PUSH2 0x159C PUSH1 0x6 SLOAD SWAP5 PUSH2 0x158A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0xFF PUSH2 0x1571 PUSH1 0x80 DUP4 ADD SWAP10 DUP6 DUP2 AND DUP12 MSTORE PUSH2 0x1551 PUSH4 0xFFFFFFFF PUSH1 0xA0 DUP7 ADD SWAP3 PUSH2 0x153E DUP7 DUP3 PUSH1 0xA0 SHR AND DUP6 SWAP1 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0xA8 SHR AND PUSH1 0xC0 DUP7 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x156A PUSH0 PUSH1 0x2 SSTORE PUSH0 PUSH1 0x3 SSTORE PUSH0 PUSH1 0x4 SSTORE PUSH0 PUSH1 0x5 SSTORE PUSH0 PUSH1 0x6 SSTORE JUMP JUMPDEST MLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST AND PUSH2 0x15B5 JUMPI JUMPDEST MLOAD SWAP5 MLOAD SWAP6 MLOAD SWAP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE AND SWAP5 SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x1C PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x15DE PUSH2 0x15CA PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP10 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x10 SLOAD SWAP2 PUSH2 0x36DA JUMP JUMPDEST PUSH2 0x1577 JUMP JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI STOP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH4 0xFFFFFFFF PUSH1 0xC SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH2 0x162E PUSH2 0x33C0 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH1 0xD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x16F7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x16CF JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16F7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16F7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16F7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16F7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16F7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x160 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16F7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x17BC DUP3 PUSH2 0x16FC JUMP JUMPDEST JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x16F7 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x329 JUMPI PUSH1 0x20 SWAP1 DUP3 CALLDATALOAD PUSH2 0x17F0 DUP2 PUSH2 0x17BE JUMP JUMPDEST SWAP4 PUSH2 0x17FE PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x176C JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x329 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1827 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x1819 JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x329 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x329 JUMPI JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x329 JUMPI PUSH1 0x20 SWAP1 DUP3 CALLDATALOAD PUSH2 0x1870 DUP2 PUSH2 0x17BE JUMP JUMPDEST SWAP4 PUSH2 0x187E PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x176C JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x329 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x18A7 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 DUP1 SWAP2 DUP4 CALLDATALOAD PUSH2 0x18B5 DUP2 PUSH2 0x318 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x1899 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x329 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x329 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x329 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x329 JUMPI PUSH2 0x1925 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x17D6 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x329 JUMPI PUSH2 0x193D SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x17D6 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x329 JUMPI PUSH2 0x1954 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x17D6 JUMP JUMPDEST PUSH2 0x195C PUSH2 0x1836 JUMP JUMPDEST SWAP1 PUSH1 0xC4 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x329 JUMPI PUSH2 0x1974 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x1856 JUMP JUMPDEST SWAP3 PUSH1 0xE4 CALLDATALOAD SWAP7 DUP8 GT PUSH2 0x329 JUMPI PUSH2 0x198F PUSH2 0x1C SWAP8 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x18C0 JUMP JUMPDEST SWAP7 SWAP1 SWAP6 PUSH1 0x24 CALLDATALOAD SWAP1 CALLDATALOAD PUSH2 0x2CF1 JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x329 JUMPI PUSH2 0x19EA SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x18C0 JUMP JUMPDEST SWAP1 PUSH2 0x19F3 PUSH2 0x1846 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x84 CALLDATALOAD SWAP2 PUSH2 0x1A07 PUSH2 0x3418 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH0 SSTORE PUSH2 0x1A24 PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x24A9 JUMP JUMPDEST PUSH2 0x1A33 PUSH1 0xFF PUSH1 0xB SLOAD AND ISZERO PUSH2 0x2574 JUMP JUMPDEST PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x1B45 JUMPI PUSH2 0x159C PUSH32 0x3185FA6FAC8E91DC65E7424A8081C73353151D2715BDDB71DB0982C1FE4C0FD4 SWAP4 PUSH2 0x1A8A PUSH2 0x1A78 PUSH2 0x1A6F PUSH2 0x2B47 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xA0 SHR PUSH4 0xFFFFFFFF AND SWAP1 PUSH2 0x26D8 JUMP JUMPDEST SWAP8 PUSH2 0x1AA4 PUSH0 PUSH1 0x2 SSTORE PUSH0 PUSH1 0x3 SSTORE PUSH0 PUSH1 0x4 SSTORE PUSH0 PUSH1 0x5 SSTORE PUSH0 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x1AC9 DUP10 PUSH4 0xFFFFFFFF PUSH1 0xA8 SHL NOT PUSH4 0xFFFFFFFF PUSH1 0xA8 SHL PUSH1 0x6 SLOAD SWAP3 PUSH1 0xA8 SHL AND SWAP2 AND OR PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x1AE8 DUP5 PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH1 0xFF PUSH1 0xA0 SHL PUSH1 0x6 SLOAD SWAP3 PUSH1 0xA0 SHL AND SWAP2 AND OR PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x1AF1 DUP8 PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH2 0x1AFA DUP9 PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH2 0x1B03 DUP3 PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x1B37 PUSH2 0x1B2A PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x10 SLOAD SWAP1 ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x3BFD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 CALLER SWAP11 DUP7 PUSH2 0x31F0 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42756E646C65206D7573742068617665206174206C656173742031206C656166 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH2 0x6A2 PUSH1 0x4 CALLDATALOAD PUSH2 0x1BD1 DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH2 0x1BD9 PUSH2 0x3418 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND PUSH0 SSTORE PUSH2 0x346B JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH2 0xC39 PUSH1 0x4 CALLDATALOAD PUSH2 0x1C09 DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH2 0x1C11 PUSH2 0x3418 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND PUSH0 SSTORE PUSH2 0x3FF0 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1C32 JUMPI POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1C23 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1C5B DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD SWAP1 PUSH1 0x20 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP3 PUSH1 0x20 PUSH1 0x40 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x1C9C JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x1CBA PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0x1C42 JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x4 DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x329 JUMPI PUSH2 0x1CFC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x18C0 JUMP JUMPDEST SWAP2 PUSH2 0x1D06 DUP4 PUSH2 0x3250 JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1D1E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x707 DUP8 DUP3 PUSH2 0x1C67 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1D2B DUP4 DUP6 DUP9 PUSH2 0x32AD JUMP JUMPDEST PUSH1 0x40 SWAP4 SWAP2 PUSH2 0x1D3D DUP6 MLOAD DUP1 SWAP4 DUP2 SWAP4 PUSH2 0x32F4 JUMP JUMPDEST SUB SWAP1 ADDRESS GAS DELEGATECALL SWAP1 PUSH2 0x1D4B PUSH2 0x30B8 JUMP JUMPDEST SWAP2 ISZERO PUSH2 0x1D72 JUMPI POP SWAP1 PUSH1 0x1 SWAP2 PUSH2 0x1D60 DUP3 DUP9 PUSH2 0x3371 JUMP JUMPDEST MSTORE PUSH2 0x1D6B DUP2 DUP8 PUSH2 0x3371 JUMP JUMPDEST POP ADD PUSH2 0x1D09 JUMP JUMPDEST DUP5 DUP3 PUSH1 0x44 DUP2 MLOAD LT PUSH2 0x329 JUMPI PUSH2 0x1D96 DUP2 DUP4 PUSH2 0x1DAB SWAP4 ADD MLOAD PUSH1 0x24 DUP1 SWAP2 DUP4 ADD ADD SWAP2 ADD PUSH2 0x3301 JUMP JUMPDEST SWAP3 MLOAD SWAP3 DUP4 SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE DUP4 ADD PUSH2 0x3360 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1DCC DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH2 0x1DD4 PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0x1DDC PUSH2 0x3418 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH0 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH2 0x1E0F PUSH2 0x882 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST AND ISZERO PUSH2 0x1EAA JUMPI JUMPDEST DUP1 PUSH2 0x1E69 PUSH2 0x1E56 PUSH32 0x4E291C80180D65A57B5BF1BED775777EC0D6F283EF34BCF130712714D8BB7F7 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1E87 PUSH2 0x882 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP2 SWAP1 DUP2 ADD PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFC2F1B6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x630 JUMPI PUSH32 0x4E291C80180D65A57B5BF1BED775777EC0D6F283EF34BCF130712714D8BB7F7 SWAP3 PUSH2 0x1F7B SWAP2 PUSH0 SWAP2 PUSH2 0x1FC9 JUMPI JUMPDEST POP PUSH2 0x1F60 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1FC4 PUSH2 0x1F89 PUSH2 0x1A6F PUSH2 0x2B47 JUMP JUMPDEST PUSH2 0x1FA4 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xA8 SHL NOT PUSH4 0xFFFFFFFF PUSH1 0xA8 SHL DUP4 SLOAD SWAP3 PUSH1 0xA8 SHL AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1E16 JUMP JUMPDEST PUSH2 0x1FE2 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x65D JUMPI PUSH2 0x64E DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST PUSH0 PUSH2 0x1F44 JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xC SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP1 DUP3 SUB PUSH2 0x329 JUMPI PUSH2 0x258 SWAP1 PUSH2 0x207F PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0x2087 PUSH2 0x3418 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH0 SSTORE GT ISZERO PUSH2 0x2119 JUMPI PUSH1 0xC DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP4 SWAP1 SHL PUSH24 0xFFFFFFFF0000000000000000000000000000000000000000 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH32 0x4DD1D84D387F404568A7954B5E398518BDD716E1A8F4A790BE9A1A225AD9347 SWAP1 DUP1 PUSH1 0x20 DUP2 ADD PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6976656E65737320746F6F2073686F72740000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x16F7 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x329 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x329 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x21B5 DUP2 PUSH2 0x215D JUMP JUMPDEST SWAP1 PUSH2 0x21C3 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x176C JUMP JUMPDEST DUP1 DUP3 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP6 ADD ADD GT PUSH2 0x329 JUMPI PUSH1 0x20 DUP2 PUSH0 SWAP3 PUSH1 0x24 PUSH2 0x1C SWAP7 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH2 0x3385 JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x20 PUSH2 0x6A2 PUSH1 0x4 CALLDATALOAD PUSH2 0x2210 DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH2 0x2218 PUSH2 0x3418 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND PUSH0 SSTORE PUSH2 0x35F4 JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 CALLDATALOAD PUSH2 0x224D DUP2 PUSH2 0x318 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH32 0x36050D958750E6AC3AA674AC7BBE8D0AE6A2F7D4B808E8C2C42C1F22FC9FC4BB PUSH1 0x60 PUSH2 0x2295 CALLDATASIZE PUSH2 0xA4B JUMP JUMPDEST SWAP1 PUSH2 0x229E PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0x22A6 PUSH2 0x3418 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND PUSH0 SSTORE PUSH2 0x232A PUSH1 0x40 MLOAD PUSH2 0x22C0 DUP2 PUSH2 0x1718 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP5 AND SWAP4 DUP5 DUP4 MSTORE DUP1 PUSH1 0x20 DUP5 ADD SWAP7 AND SWAP6 DUP7 DUP2 MSTORE DUP8 PUSH0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x230B DUP3 PUSH1 0x40 PUSH0 KECCAK256 SWAP6 MLOAD AND DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD AND SWAP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE LOG1 PUSH2 0x1C PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0xC0 PUSH1 0x4 CALLDATALOAD PUSH2 0x2370 DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD PUSH4 0xFFFFFFFF PUSH1 0x3 PUSH1 0x2 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP2 AND DUP7 MSTORE PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA8 SHR AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x329 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x329 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x23EB DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH2 0x23F3 PUSH2 0x33C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x243F JUMPI PUSH1 0x1 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND OR PUSH1 0x1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x24B0 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F706F73616C2068617320756E636C61696D6564206C6561766573000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x329 JUMPI MLOAD PUSH2 0xA74 DUP2 PUSH2 0x318 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x329 JUMPI MLOAD PUSH2 0xA74 DUP2 PUSH2 0x79F JUMP JUMPDEST ISZERO PUSH2 0x2530 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4964656E746966696572206E6F7420737570706F727465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x257B JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E7472616374206973207061757365640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x25C6 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E742073656E642065746800000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x263B JUMPI JUMP JUMPDEST PUSH2 0x260A JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x263B JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x265D JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x263B JUMPI JUMP JUMPDEST ISZERO PUSH2 0x2685 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265717565737420706173736564206C6976656E657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x329 JUMPI MLOAD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH4 0xFFFFFFFF DUP1 DUP1 SWAP5 AND SWAP2 AND ADD SWAP2 DUP3 GT PUSH2 0x263B JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x17BC SWAP5 PUSH0 PUSH2 0x27CA SWAP3 PUSH4 0xFFFFFFFF PUSH2 0x1E0 SWAP7 SWAP11 SWAP10 SWAP8 SWAP11 PUSH2 0x200 SWAP3 DUP8 MSTORE AND PUSH1 0x20 DUP7 ADD MSTORE DUP1 PUSH1 0x40 DUP7 ADD MSTORE DUP5 ADD MSTORE PUSH2 0x220 DUP4 ADD SWAP8 PUSH2 0x2738 PUSH1 0x60 DUP6 ADD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD SWAP1 PUSH2 0x100 SWAP2 DUP3 DUP7 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x120 SWAP1 DUP2 DUP8 ADD MSTORE PUSH1 0xE0 DUP3 ADD MLOAD SWAP3 PUSH2 0x140 SWAP4 DUP5 DUP9 ADD MSTORE DUP3 ADD MLOAD PUSH2 0x160 DUP8 ADD MSTORE DUP2 ADD MLOAD PUSH2 0x180 DUP7 ADD MSTORE ADD MLOAD PUSH2 0x1A0 DUP5 ADD MSTORE PUSH2 0x1C0 DUP4 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x27E4 PUSH2 0x1A6F PUSH2 0x2B47 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x27F9 SWAP1 PUSH1 0xA8 SHR PUSH4 0xFFFFFFFF AND PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x280C PUSH4 0xFFFFFFFF SWAP2 DUP3 DUP5 AND GT ISZERO PUSH2 0x267E JUMP JUMPDEST PUSH2 0x2814 PUSH2 0x3944 JUMP JUMPDEST SWAP1 PUSH1 0x10 SWAP2 DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x2B23 JUMPI PUSH2 0x2829 PUSH2 0x3832 JUMP JUMPDEST SWAP2 PUSH1 0xC SWAP4 DUP5 SLOAD PUSH2 0x283F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP5 DUP6 DUP4 SLOAD SWAP1 PUSH2 0x2859 SWAP3 PUSH2 0x3B37 JUMP JUMPDEST PUSH1 0xD SLOAD SWAP6 DUP1 SLOAD SWAP7 DUP9 DUP7 DUP6 SLOAD SWAP1 PUSH2 0x286E SWAP2 PUSH2 0x2671 JUMP JUMPDEST SWAP9 PUSH1 0x6 SLOAD PUSH2 0x2882 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 PUSH32 0xAF355D1E00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x20 SWAP14 DUP15 SWAP7 DUP11 DUP14 DUP5 PUSH1 0xA0 SHR AND SWAP4 AND SWAP1 PUSH1 0x4 DUP8 ADD SWAP6 PUSH2 0x2927 SWAP7 SWAP3 SWAP2 PUSH8 0xDE0B6B3A7640000 SWAP6 PUSH0 PUSH2 0x100 SWAP7 SWAP10 SWAP9 SWAP4 PUSH2 0x120 SWAP1 DUP8 MSTORE PUSH4 0xFFFFFFFF DUP1 SWAP5 AND PUSH1 0x20 DUP9 ADD MSTORE DUP1 PUSH1 0x40 DUP9 ADD MSTORE DUP7 ADD MSTORE PUSH2 0x140 DUP6 ADD SWAP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP6 AND PUSH1 0x60 DUP8 ADD MSTORE PUSH0 PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD MSTORE AND PUSH1 0xC0 DUP5 ADD MSTORE AND PUSH1 0xE0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB DUP2 DUP11 GAS SWAP1 PUSH0 SWAP2 CALL SWAP1 DUP2 PUSH2 0x2B06 JUMPI JUMPDEST POP PUSH2 0x294B JUMPI POP POP POP POP POP POP POP POP PUSH2 0x17BC PUSH2 0x3A7F JUMP JUMPDEST DUP8 DUP7 SWAP3 DUP9 SWAP7 PUSH2 0x296A DUP6 PUSH2 0x2965 DUP7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x38C7 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP7 DUP5 SLOAD SWAP3 DUP2 DUP5 PUSH1 0xA0 SHR AND SWAP5 DUP6 PUSH2 0x298B SWAP2 PUSH2 0x26D8 JUMP JUMPDEST SWAP1 DUP4 DUP10 SLOAD SWAP1 PUSH2 0x2999 SWAP2 PUSH2 0x2671 JUMP JUMPDEST SWAP5 PUSH2 0x29A2 PUSH2 0x178E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP12 AND DUP12 MSTORE PUSH0 DUP13 DUP13 ADD MSTORE AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP11 ADD MSTORE PUSH1 0x60 DUP10 ADD PUSH0 SWAP1 MSTORE PUSH1 0x80 DUP10 ADD PUSH8 0xDE0B6B3A7640000 SWAP1 MSTORE PUSH1 0xA0 DUP10 ADD PUSH0 SWAP1 MSTORE AND PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD PUSH0 SWAP1 MSTORE PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x2A18 PUSH0 PUSH1 0x2 SSTORE PUSH0 PUSH1 0x3 SSTORE PUSH0 PUSH1 0x4 SSTORE PUSH0 PUSH1 0x5 SSTORE PUSH0 PUSH1 0x6 SSTORE JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 SLOAD ADDRESS CALLER PUSH2 0x2A30 SWAP4 PUSH2 0x3BFD JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SLOAD SWAP1 PUSH2 0x2A46 SWAP3 PUSH2 0x3B37 JUMP JUMPDEST PUSH1 0xD SLOAD SWAP3 PUSH1 0x40 MLOAD DUP1 DUP1 SWAP6 DUP2 SWAP5 PUSH32 0x9CE320C800000000000000000000000000000000000000000000000000000000 DUP4 MSTORE ADDRESS SWAP1 CALLER SWAP1 DUP12 PUSH1 0x4 DUP7 ADD SWAP5 PUSH2 0x2A88 SWAP6 PUSH2 0x26F0 JUMP JUMPDEST SUB SWAP2 GAS SWAP1 PUSH0 SWAP2 CALL DUP1 ISZERO PUSH2 0x630 JUMPI PUSH2 0x2AD8 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE CALLER SWAP1 PUSH32 0x15951CB2EF6993BC23A55912E7D0BCAC13E4797C432AAA334816AED6914A7A90 SWAP1 DUP1 PUSH1 0x20 DUP2 ADD JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST DUP2 PUSH2 0x2AF7 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x2AFF JUMPI JUMPDEST PUSH2 0x2AEF DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x26C9 JUMP JUMPDEST POP PUSH0 DUP1 PUSH2 0x2A9A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2AE5 JUMP JUMPDEST PUSH2 0x2B1C SWAP1 DUP10 RETURNDATASIZE DUP12 GT PUSH2 0x2AFF JUMPI PUSH2 0x2AEF DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST POP PUSH0 PUSH2 0x2936 JUMP JUMPDEST POP POP POP POP PUSH2 0x17BC PUSH2 0x3A7F JUMP JUMPDEST DUP2 DUP2 SUB SWAP3 SWAP2 PUSH0 SGT DUP1 ISZERO DUP3 DUP6 SGT AND SWAP2 DUP5 SLT AND OR PUSH2 0x263B JUMPI JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x2BB3 JUMPI PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x29CB924D00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x630 JUMPI PUSH0 SWAP2 PUSH2 0x2B9A JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0xA74 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2AFF JUMPI PUSH2 0x2AEF DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST POP TIMESTAMP SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2BBF JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x626F6E6420657175616C20746F2066696E616C20666565000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x2C0A JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74206F6E2077686974656C69737400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x263B JUMPI JUMP JUMPDEST ISZERO PUSH2 0x2C62 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F7420656E61626C6564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x2CAD JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426164206D73672E76616C756500000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP7 SWAP8 SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP8 PUSH2 0x2D02 PUSH2 0x3418 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH0 SSTORE PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2D1D SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH2 0x2D25 PUSH2 0x2B47 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xA8 SHR PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND LT PUSH2 0x2D41 SWAP1 PUSH2 0x2F5A JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP7 PUSH2 0x2D59 PUSH1 0x1 PUSH1 0xFF DUP7 AND SHL DUP1 DUP11 AND EQ ISZERO PUSH2 0x2FA5 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP2 PUSH2 0x2D65 PUSH2 0x17AF JUMP JUMPDEST SWAP2 DUP11 DUP4 MSTORE DUP8 PUSH1 0x20 DUP5 ADD MSTORE DUP9 PUSH1 0x40 DUP5 ADD MSTORE DUP5 PUSH1 0x60 DUP5 ADD MSTORE DUP12 PUSH1 0x80 DUP5 ADD MSTORE DUP6 PUSH1 0xA0 DUP5 ADD SWAP1 PUSH2 0x2D93 SWAP2 SWAP1 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST DUP7 PUSH1 0xC0 DUP5 ADD MSTORE CALLDATASIZE SWAP1 PUSH2 0x2DA4 SWAP3 PUSH2 0x2FF0 JUMP JUMPDEST SWAP1 PUSH2 0x2DAE SWAP3 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x2DB7 SWAP1 PUSH2 0x303E JUMP JUMPDEST PUSH2 0x2DC0 DUP8 PUSH2 0x3D60 JUMP JUMPDEST SWAP6 SWAP1 SWAP3 PUSH1 0xFF AND SWAP7 PUSH1 0x1 DUP9 SHL OR PUSH2 0x2DD5 SWAP1 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xA0 SHR PUSH1 0xFF AND PUSH2 0x2DE7 SWAP1 PUSH2 0x3089 JUMP JUMPDEST PUSH2 0x2E06 SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH1 0xFF PUSH1 0xA0 SHL PUSH1 0x6 SLOAD SWAP3 PUSH1 0xA0 SHL AND SWAP2 AND OR PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x2E14 DUP6 DUP3 DUP7 DUP12 DUP11 DUP9 PUSH2 0x3E61 JUMP JUMPDEST PUSH32 0xF652DD63B1AEDBF9E740F3152FB67B0D94D069CF1182811EBD88921850D93567 SWAP6 PUSH2 0x2E62 SWAP4 DUP11 ISZERO PUSH2 0x2EAA JUMPI JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO PUSH2 0x2E7B JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 CALLER SWAP11 DUP7 PUSH2 0x31A1 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x17BC PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x2EA4 SWAP1 PUSH2 0x2E91 PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x10 SLOAD SWAP3 AND SWAP1 PUSH2 0x36DA JUMP JUMPDEST PUSH0 PUSH2 0x2E53 JUMP JUMPDEST PUSH0 DUP1 SWAP2 PUSH2 0x2F53 SWAP4 PUSH2 0x2F35 PUSH2 0x2F41 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD SWAP1 PUSH2 0x2F03 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH32 0x493A4F8400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 PUSH2 0x2F17 PUSH1 0x1F NOT SWAP3 DUP4 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x176C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP2 PUSH1 0x20 DUP4 ADD SWAP7 PUSH4 0x7375C56F PUSH1 0xE1 SHL DUP9 MSTORE PUSH1 0x24 DUP5 ADD PUSH2 0x3098 JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x176C JUMP JUMPDEST MLOAD SWAP2 GAS DELEGATECALL PUSH2 0x2F4D PUSH2 0x30B8 JUMP JUMPDEST POP PUSH2 0x30E7 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2E41 JUMP JUMPDEST ISZERO PUSH2 0x2F61 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420706173736564206C6976656E65737300000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x2FAC JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920636C61696D65640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP3 SWAP2 PUSH2 0x2FFB DUP3 PUSH2 0x17BE JUMP JUMPDEST SWAP2 PUSH2 0x3009 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x176C JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 SWAP5 ADD SWAP2 PUSH1 0x5 SHL DUP2 ADD SWAP3 DUP4 GT PUSH2 0x329 JUMPI SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x302F JUMPI POP POP POP POP JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x3022 JUMP JUMPDEST ISZERO PUSH2 0x3045 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4261642050726F6F660000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x263B JUMPI PUSH0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xA74 SWAP5 SWAP4 AND DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1C42 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x30E2 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x30C9 DUP3 PUSH2 0x215D JUMP JUMPDEST SWAP2 PUSH2 0x30D7 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x176C JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x30EE JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x3151 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x3143 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x318D JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x317F JUMP JUMPDEST SWAP4 SWAP1 PUSH2 0xA74 SWAP6 SWAP4 PUSH2 0x31C6 PUSH2 0x31E2 SWAP5 PUSH2 0x31D4 SWAP4 DUP9 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD SWAP1 PUSH2 0x3132 JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x316E JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x316E JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x316E JUMP JUMPDEST SWAP6 SWAP5 SWAP4 SWAP2 PUSH4 0xFFFFFFFF PUSH1 0xFF SWAP3 AND DUP8 MSTORE AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP7 ADD MSTORE DUP1 PUSH1 0x80 DUP7 ADD MSTORE PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x329 JUMPI PUSH1 0x60 SWAP2 PUSH1 0xA0 SWAP2 PUSH1 0x5 SHL DUP1 SWAP2 DUP4 DUP9 ADD CALLDATACOPY DUP6 ADD ADD SWAP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x325A DUP3 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x3267 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x176C JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x3278 PUSH1 0x1F NOT SWAP2 PUSH2 0x17BE JUMP JUMPDEST ADD SWAP1 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x3288 JUMPI POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x60 PUSH1 0x20 DUP1 SWAP4 DUP6 ADD ADD MSTORE ADD PUSH2 0x327C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x32EF JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x329 JUMPI ADD SWAP1 DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x329 JUMPI PUSH1 0x20 ADD DUP3 CALLDATASIZE SUB DUP2 SGT PUSH2 0x329 JUMPI SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x3299 JUMP JUMPDEST SWAP1 DUP1 SWAP3 SWAP2 DUP3 CALLDATACOPY ADD PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x329 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x329 JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x329 JUMPI DUP1 MLOAD PUSH2 0x3334 DUP2 PUSH2 0x215D JUMP JUMPDEST SWAP3 PUSH2 0x3342 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x176C JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x329 JUMPI PUSH2 0xA74 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x1C21 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0xA74 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x1C42 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x32EF JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x33AA SWAP2 PUSH2 0x3392 PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0x339A PUSH2 0x3418 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND PUSH0 SSTORE PUSH2 0x3C55 JUMP JUMPDEST PUSH2 0x17BC PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH0 SLOAD AND OR PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND CALLER SUB PUSH2 0x33D4 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xFF PUSH0 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x3427 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x3474 DUP2 PUSH2 0x3FF0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH2 0x34C8 PUSH4 0xFFFFFFFF PUSH1 0x40 MLOAD SWAP3 PUSH2 0x34A0 DUP5 PUSH2 0x1734 JUMP JUMPDEST DUP5 SLOAD SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0xA8 SHR AND PUSH1 0x40 DUP4 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD SWAP1 DUP2 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x3 PUSH1 0x2 DUP6 ADD SLOAD SWAP5 DUP6 PUSH1 0x80 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE PUSH0 DUP2 SGT PUSH0 EQ PUSH2 0x3522 JUMPI PUSH2 0x34FD SWAP1 DUP1 SWAP3 PUSH2 0x2C4E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3514 JUMPI PUSH2 0x350F PUSH2 0xA74 SWAP3 PUSH2 0x261E JUMP JUMPDEST PUSH2 0x2653 JUMP JUMPDEST POP POP PUSH8 0xDE0B6B3A7640000 SWAP1 JUMP JUMPDEST POP PUSH2 0x34FD PUSH0 DUP1 SWAP3 PUSH2 0x2C4E JUMP JUMPDEST SWAP1 PUSH2 0x34FD SWAP1 PUSH2 0x353C DUP4 PUSH2 0x3FF0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP3 PUSH2 0x3590 PUSH4 0xFFFFFFFF PUSH1 0x40 MLOAD SWAP3 PUSH2 0x3568 DUP5 PUSH2 0x1734 JUMP JUMPDEST DUP7 SLOAD SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0xA8 SHR AND PUSH1 0x40 DUP4 ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SLOAD SWAP1 DUP2 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x3 PUSH1 0x2 DUP8 ADD SLOAD SWAP7 PUSH1 0x80 DUP5 ADD SWAP8 DUP9 MSTORE ADD SLOAD SWAP2 ADD MSTORE PUSH0 DUP2 SGT PUSH0 EQ PUSH2 0x35CD JUMPI PUSH2 0x35C6 SWAP1 DUP1 SWAP3 PUSH2 0x2C4E JUMP JUMPDEST SWAP3 MLOAD PUSH2 0x2C4E JUMP JUMPDEST POP PUSH2 0x35C6 PUSH0 DUP1 SWAP3 PUSH2 0x2C4E JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH0 DUP4 DUP3 ADD SWAP4 DUP5 SLT SWAP2 SLT SWAP1 DUP1 ISZERO DUP3 AND SWAP2 ISZERO AND OR PUSH2 0x263B JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH2 0x3611 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x362A PUSH2 0x88F PUSH2 0x88F DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH32 0x18160DDD00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x630 JUMPI PUSH0 SWAP3 PUSH2 0x36B9 JUMPI JUMPDEST POP DUP2 ISZERO PUSH2 0x36AA JUMPI PUSH2 0x36A5 DUP2 PUSH2 0x3687 PUSH2 0xA74 SWAP6 PUSH2 0x3682 PUSH2 0x350F SWAP6 PUSH2 0x4199 JUMP JUMPDEST PUSH2 0x3FF0 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x369C PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x1 DUP5 ADD SLOAD SWAP1 PUSH2 0x35D9 JUMP JUMPDEST SWAP2 ADD SLOAD SWAP1 PUSH2 0x2B2F JUMP JUMPDEST PUSH2 0x261E JUMP JUMPDEST POP POP POP PUSH8 0xDE0B6B3A7640000 SWAP1 JUMP JUMPDEST PUSH2 0x36D3 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2AFF JUMPI PUSH2 0x2AEF DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x3664 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x17BC SWAP2 PUSH2 0x371D DUP3 PUSH1 0x64 DUP2 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x176C JUMP JUMPDEST PUSH2 0x4223 JUMP JUMPDEST DUP2 SELFBALANCE LT PUSH2 0x37B4 JUMPI PUSH0 DUP1 DUP1 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 SWAP5 AND GAS CALL PUSH2 0x3742 PUSH2 0x30B8 JUMP JUMPDEST POP ISZERO PUSH2 0x374A JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6563697069656E74206D61792068617665207265766572746564000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x382C DUP2 PUSH1 0x60 DUP2 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x176C JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD PUSH4 0x2ABF579 PUSH1 0xE6 SHL DUP2 MSTORE PUSH32 0x536B696E6E794F7074696D69737469634F7261636C6500000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x630 JUMPI PUSH0 SWAP2 PUSH2 0x38AA JUMPI POP AND SWAP1 JUMP JUMPDEST PUSH2 0x38C3 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x65D JUMPI PUSH2 0x64E DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST AND SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP2 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL PUSH1 0x20 DUP5 ADD MSTORE AND PUSH1 0x24 DUP3 ADD MSTORE PUSH0 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x44 DUP2 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 DUP2 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0x16F7 JUMPI PUSH2 0x17BC SWAP3 PUSH1 0x40 MSTORE PUSH2 0x4223 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x329 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16F7 JUMPI PUSH1 0x40 MSTORE MLOAD DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2ABF579 PUSH1 0xE6 SHL DUP2 MSTORE PUSH32 0x53746F7265000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP3 DUP2 PUSH1 0x24 DUP2 PUSH32 0x0 DUP7 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x630 JUMPI DUP4 SWAP2 PUSH2 0x3A1C SWAP2 PUSH0 SWAP2 PUSH2 0x3A62 JUMPI JUMPDEST POP PUSH2 0x39D7 PUSH2 0x88F PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH32 0x5B97AADD00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD SWAP2 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD SWAP4 AND SWAP1 MSTORE JUMP JUMPDEST SUB SWAP3 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x630 JUMPI PUSH0 SWAP3 PUSH2 0x3A35 JUMPI JUMPDEST POP POP MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3A54 SWAP3 POP DUP1 RETURNDATASIZE LT PUSH2 0x3A5B JUMPI JUMPDEST PUSH2 0x3A4C DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3915 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3A2F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3A42 JUMP JUMPDEST PUSH2 0x3A79 SWAP2 POP DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x65D JUMPI PUSH2 0x64E DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST PUSH0 PUSH2 0x39C1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x6 SLOAD PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH0 SWAP2 AND GAS CALL DUP1 ISZERO PUSH2 0x630 JUMPI PUSH2 0x3B18 JUMPI JUMPDEST POP PUSH2 0x3AE2 PUSH0 PUSH1 0x2 SSTORE PUSH0 PUSH1 0x3 SSTORE PUSH0 PUSH1 0x4 SSTORE PUSH0 PUSH1 0x5 SSTORE PUSH0 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x3AEA PUSH2 0x2B47 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xCFBBF45AB7F5225663454DE7117B1B0ED5A7C133B61F54CCF367DCF8B6D4D59 PUSH1 0x20 CALLER SWAP3 LOG2 JUMP JUMPDEST PUSH2 0x3B30 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x629 JUMPI PUSH2 0x61A DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST POP PUSH0 PUSH2 0x3AC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP3 PUSH1 0x20 DUP4 DUP1 PUSH1 0x44 DUP2 ADD SUB DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x630 JUMPI PUSH0 SWAP4 PUSH2 0x3BDC JUMPI JUMPDEST POP DUP3 ADD DUP1 SWAP3 GT PUSH2 0x263B JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x17BC SWAP2 SWAP1 PUSH2 0x371D DUP3 PUSH1 0x64 DUP2 ADD PUSH2 0x370F JUMP JUMPDEST PUSH2 0x3BF6 SWAP2 SWAP4 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2AFF JUMPI PUSH2 0x2AEF DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST SWAP2 PUSH0 PUSH2 0x3B98 JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0x17BC SWAP4 PUSH1 0x40 MLOAD SWAP4 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH1 0x24 DUP7 ADD MSTORE AND PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x64 DUP3 MSTORE PUSH2 0x371D DUP3 PUSH2 0x1750 JUMP JUMPDEST SWAP1 PUSH2 0x2AD3 PUSH32 0x218987B934C2F6BC596136829FBF43A5FEF4D6FAFCE41F3F6254D9A870C2DEEC SWAP2 PUSH2 0x3CAC PUSH0 DUP1 PUSH2 0x3C89 DUP8 PUSH2 0x3D60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F41 DUP2 PUSH2 0x381E DUP10 PUSH1 0x20 DUP4 ADD SWAP6 PUSH4 0x7375C56F PUSH1 0xE1 SHL DUP8 MSTORE PUSH1 0x24 DUP5 ADD PUSH2 0x3098 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0xA74 SWAP3 SWAP2 PUSH1 0x40 MLOAD PUSH2 0x3D57 DUP2 PUSH2 0x381E PUSH1 0x20 DUP3 ADD SWAP5 PUSH1 0x20 DUP7 MSTORE DUP1 MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x3CF9 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0xE0 PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x120 DUP6 ADD SWAP1 PUSH2 0x316E JUMP JUMPDEST PUSH1 0xC0 PUSH2 0x3D2E PUSH2 0x3D1A PUSH1 0x40 DUP6 ADD MLOAD SWAP4 PUSH1 0x3F NOT SWAP5 DUP6 DUP10 DUP4 SUB ADD PUSH1 0x80 DUP11 ADD MSTORE PUSH2 0x316E JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MLOAD DUP5 DUP9 DUP4 SUB ADD PUSH1 0xA0 DUP10 ADD MSTORE PUSH2 0x316E JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP2 ADD MLOAD DUP3 DUP8 ADD MSTORE PUSH1 0xFF PUSH1 0xA0 DUP3 ADD MLOAD AND PUSH1 0xE0 DUP8 ADD MSTORE ADD MLOAD SWAP1 DUP5 DUP4 SUB ADD PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x3132 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 PUSH2 0x431B JUMP JUMPDEST PUSH0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP2 DUP5 SLOAD AND SWAP4 ADD SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x3DD2 JUMPI DUP3 EXTCODESIZE ISZERO PUSH2 0x3D8E JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646170746572206E6F7420696E697469616C697A6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53706F6B65506F6F6C206E6F7420696E697469616C697A656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x3E1D JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F757465206E6F742077686974656C69737465640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP3 SWAP5 SWAP4 SWAP2 SWAP1 DUP6 MLOAD SWAP6 PUSH0 JUMPDEST DUP8 DUP2 LT PUSH2 0x3E7C JUMPI POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x3EF7 PUSH2 0x3E9C PUSH2 0x3E8F PUSH1 0x1 SWAP5 DUP7 PUSH2 0x3371 JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP6 DUP4 DUP10 PUSH2 0x3EBD PUSH2 0x882 PUSH2 0x3EAF DUP13 DUP8 PUSH2 0x37F8 JUMP JUMPDEST PUSH0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x3ED1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO PUSH2 0x3E16 JUMP JUMPDEST PUSH0 PUSH2 0x3EDC DUP5 DUP5 PUSH2 0x3371 JUMP JUMPDEST MLOAD SGT PUSH2 0x3EFD JUMPI JUMPDEST POP POP PUSH2 0x3EF0 SWAP2 POP DUP12 PUSH2 0x3371 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x436C JUMP JUMPDEST ADD PUSH2 0x3E6B JUMP JUMPDEST PUSH2 0x3F7C SWAP4 PUSH2 0x3F6F PUSH2 0x3F10 PUSH0 SWAP6 DUP7 SWAP6 PUSH2 0x3371 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD PUSH32 0x52C8C75C00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE SWAP6 DUP7 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x84 DUP4 ADD MSTORE DUP2 PUSH1 0xA4 DUP2 ADD PUSH2 0x381E JUMP JUMPDEST MLOAD SWAP1 DUP14 GAS DELEGATECALL PUSH2 0x2F4D PUSH2 0x30B8 JUMP JUMPDEST PUSH2 0x3F86 DUP4 DUP10 PUSH2 0x3371 JUMP JUMPDEST MLOAD PUSH2 0x3FAF DUP6 PUSH2 0x3FA6 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SWAP2 DUP3 SLOAD PUSH2 0x35D9 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x3FBB DUP4 DUP10 PUSH2 0x3371 JUMP JUMPDEST MLOAD PUSH2 0x3FE5 PUSH1 0x2 PUSH2 0x3FDC DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SWAP2 DUP3 SLOAD PUSH2 0x2671 JUMP JUMPDEST SWAP1 SSTORE DUP6 DUP4 DUP10 PUSH0 PUSH2 0x3EE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x630 JUMPI PUSH0 SWAP3 PUSH2 0x410A JUMPI JUMPDEST POP PUSH2 0x4056 PUSH2 0x88F PUSH2 0x88F PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ DUP1 PUSH2 0x40F9 JUMPI JUMPDEST ISZERO PUSH2 0x40F3 JUMPI PUSH1 0x10 SLOAD PUSH2 0x406E SWAP2 PUSH2 0x2671 JUMP JUMPDEST SWAP1 JUMPDEST PUSH1 0x2 PUSH2 0x408D DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD DUP3 GT PUSH2 0x4099 JUMPI POP POP JUMP JUMPDEST PUSH2 0x40EF DUP2 PUSH2 0x40C6 PUSH1 0x2 PUSH2 0x40BE DUP2 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD DUP6 PUSH2 0x2671 JUMP JUMPDEST PUSH2 0x121F PUSH1 0x1 PUSH2 0x40E6 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SWAP2 DUP3 SLOAD PUSH2 0x2B2F JUMP JUMPDEST ADD SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x4070 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x6 SLOAD PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH2 0x405D JUMP JUMPDEST PUSH2 0x4124 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2AFF JUMPI PUSH2 0x2AEF DUP2 DUP4 PUSH2 0x176C JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x403D JUMP JUMPDEST PUSH1 0xFF PUSH0 SLOAD PUSH1 0xA0 SHR AND PUSH2 0x4139 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP1 EXTCODESIZE ISZERO PUSH2 0x329 JUMPI PUSH0 PUSH1 0x4 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0xD0E30DB PUSH1 0xE4 SHL DUP3 MSTORE CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x630 JUMPI PUSH2 0x4190 JUMPI POP JUMP JUMPDEST PUSH2 0x17BC SWAP1 PUSH2 0x16E3 JUMP JUMPDEST PUSH1 0x3 DUP2 ADD SWAP1 DUP2 SLOAD PUSH4 0xFFFFFFFF SWAP1 DUP2 DUP4 SLOAD PUSH1 0xA8 SHR AND PUSH2 0x41B5 PUSH2 0x2B47 JUMP JUMPDEST SWAP1 DUP2 SUB SWAP1 DUP2 GT PUSH2 0x263B JUMPI PUSH2 0x41DD PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x41D8 PUSH1 0xE SLOAD DUP6 PUSH2 0x2640 JUMP JUMPDEST PUSH2 0x2640 JUMP JUMPDEST DIV DUP2 DUP2 LT ISZERO PUSH2 0x421C JUMPI JUMPDEST DUP2 SUB SWAP1 DUP2 GT PUSH2 0x263B JUMPI PUSH2 0x17BC SWAP4 SSTORE PUSH2 0x41FD PUSH2 0x2B47 JUMP JUMPDEST DUP3 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xA8 SHL NOT AND SWAP2 AND PUSH1 0xA8 SHL PUSH4 0xFFFFFFFF PUSH1 0xA8 SHL AND OR SWAP1 SSTORE JUMP JUMPDEST POP DUP1 PUSH2 0x41E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4280 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x423C DUP3 PUSH2 0x1718 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 SWAP6 DUP7 DUP6 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP8 DUP7 ADD MSTORE DUP7 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL PUSH2 0x427A PUSH2 0x30B8 JUMP JUMPDEST SWAP2 PUSH2 0x4416 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP3 DUP3 ISZERO SWAP3 DUP4 ISZERO PUSH2 0x4303 JUMPI JUMPDEST POP POP POP ISZERO PUSH2 0x4299 JUMPI POP JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x4313 SWAP4 POP DUP3 ADD DUP2 ADD SWAP2 ADD PUSH2 0x2514 JUMP JUMPDEST PUSH0 DUP3 DUP2 PUSH2 0x428E JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP1 PUSH0 SWAP2 JUMPDEST DUP5 MLOAD DUP4 LT ISZERO PUSH2 0x4364 JUMPI PUSH2 0x4335 DUP4 DUP7 PUSH2 0x3371 JUMP JUMPDEST MLOAD SWAP1 DUP2 DUP2 LT ISZERO PUSH2 0x4353 JUMPI PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 JUMPDEST SWAP3 ADD SWAP2 PUSH2 0x4322 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x434B JUMP JUMPDEST SWAP2 POP SWAP3 POP EQ SWAP1 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x4381 PUSH1 0xF SLOAD DUP5 PUSH2 0x2640 JUMP JUMPDEST DIV SWAP2 DUP3 DUP2 SUB SWAP1 DUP1 DUP3 GT PUSH2 0x263B JUMPI DUP4 SUB PUSH2 0x43C2 JUMPI JUMPDEST POP DUP2 PUSH2 0x439F JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD SWAP2 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x263B JUMPI SSTORE JUMP JUMPDEST PUSH1 0x3 PUSH2 0x43DF DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD SWAP1 DUP3 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x263B JUMPI SSTORE PUSH2 0x440E PUSH1 0x1 PUSH2 0x3FA6 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 SSTORE PUSH0 PUSH2 0x4395 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x4477 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x442A JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x4433 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x448A JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0x1DAB SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x3360 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 0xC7 OR 0x2B EQ MSIZE 0xC4 0xB4 SGT PUSH25 0xAAC3FD8BBB22AE38C9A459DCCCDC71BCE45E0045A5D864736F PUSH13 0x63430008170033000000000000 ","sourceMap":"2257:54482:21:-:0;;;;;;;;;-1:-1:-1;2257:54482:21;;;;56674:63;;:::i;:::-;2257:54482;;56674:63;;:::i;2257:54482::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;-1:-1:-1;;;;;2257:54482:21;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;2257:54482:21;;;;;;;;;:::i;:::-;;;1063:62:0;;;:::i;:::-;1528:128:22;;:::i;:::-;-1:-1:-1;2257:54482:21;-1:-1:-1;;;;2257:54482:21;-1:-1:-1;2257:54482:21;11578:4;11550:32;;2257:54482;;-1:-1:-1;;;;;2257:54482:21;;11630:42;;;2257:54482;;11716:56;;2257:54482;;11716:56;2257:54482;;;;;;;;11716:56;2257:54482;;11716:56;11782:48;;;2257:54482;;11782:48;11845:77;-1:-1:-1;11845:77:21;;1618:1:22;-1:-1:-1;;;;;;;3467:18:22;2257:54482:21;;;3467:18:22;2257:54482:21;3286:206:22;2257:54482:21;;;;-1:-1:-1;;;2257:54482:21;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2257:54482:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;7923:59:21;2257:54482;55724:50;2257:54482;;;;55724:55;7923:59;:::i;:::-;1528:128:22;;:::i;:::-;-1:-1:-1;2257:54482:21;;-1:-1:-1;;;;2257:54482:21;;;;;-1:-1:-1;;;13973:69:21;;2257:54482;;13973:69;;2257:54482;-1:-1:-1;;;;;2257:54482:21;;13973:69;2257:54482;;;13973:6;2257:54482;;13973:69;;;;;;;;;-1:-1:-1;13973:69:21;;;2257:54482;-1:-1:-1;2257:54482:21;;294:21:15;14070:56:21;;2257:54482;14070:56;;2257:54482;;;;;;;;;;;14070:56;;;;;;;14206:28;14070:56;14206:28;14070:56;14062:93;14070:56;-1:-1:-1;14070:56:21;;;2257:54482;14062:93;;;:::i;:::-;14165:26;;;2257:54482;;14165:26;2257:54482;;;;;;;;;;;;;14206:28;;;;1618:1:22;-1:-1:-1;;;;;;;3467:18:22;2257:54482:21;;;3467:18:22;2257:54482:21;3286:206:22;14070:56:21;;;;;;-1:-1:-1;14070:56:21;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;13973:69::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;2257:54482;;;;;;-1:-1:-1;;2257:54482:21;;;;;25897:54;2257:54482;;;;;:::i;:::-;1528:128:22;;:::i;:::-;-1:-1:-1;;;;;2257:54482:21;;-1:-1:-1;2257:54482:21;;;25897:54;;:::i;:::-;1618:1:22;-1:-1:-1;;;;;;;3467:18:22;2257:54482:21;;;3467:18:22;2257:54482:21;3286:206:22;1618:1;2257:54482:21;;;;;;;;;;;;-1:-1:-1;;2257:54482:21;;;;;;-1:-1:-1;2257:54482:21;;;3493:65;2257:54482;;;;;;;;;;;3493:65;;;;2257:54482;;;-1:-1:-1;;;;;2257:54482:21;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2257:54482:21;;;;19192:76;2257:54482;;;;;:::i;:::-;1063:62:0;;:::i;:::-;1528:128:22;;:::i;:::-;-1:-1:-1;2257:54482:21;;-1:-1:-1;;;;2257:54482:21;;;;;-1:-1:-1;;;;;2257:54482:21;;;;;;19138:12;2257:54482;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19192:76;2257:54482;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;2257:54482:21;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;1528:128:22;;:::i;:::-;-1:-1:-1;2257:54482:21;-1:-1:-1;;;;2257:54482:21;-1:-1:-1;2257:54482:21;8036:38;2257:54482;8045:6;2257:54482;;8044:7;8036:38;:::i;:::-;-1:-1:-1;;;;;23542:4:21;;;2257:54482;;;;23534:24;;;;:36;;;;2257:54482;23526:62;;;:::i;:::-;23625:54;23626:45;23642:29;;;:::i;:::-;23626:45;;:::i;:::-;23675:4;2257:54482;;;;23625:54;23705:21;23690:54;:45;23705:29;:21;;-1:-1:-1;;;;;2257:54482:21;;;23705:12;2257:54482;;;;;;;23705:21;2257:54482;-1:-1:-1;;;;;2257:54482:21;;;23705:29;-1:-1:-1;;;;;2257:54482:21;;;23690:54;2257:54482;;294:21:15;23690:81:21;;23745:10;2257:54482;23690:81;;2257:54482;;;;;;;;;;;;;;;;;-1:-1:-1;;23690:81:21;;;;;;;24019:36;23690:81;24019:21;23690:81;;;2257:54482;24019:21;-1:-1:-1;;;;;2257:54482:21;;;23705:12;2257:54482;;;;;;;24019:21;:36;:56;2257:54482;;;24019:56;:::i;:::-;2257:54482;;24086:330;;;24113:31;;;;;-1:-1:-1;2257:54482:21;;24113:31;;294:21:15;24113:31:21;;;;;;;2257:54482;24113:31;;2257:54482;;;;;;;;24113:31;;;;;;;;;;24430:70;24113:31;24430:70;24113:31;;;24086:330;23745:10;24197:16;23745:10;;24197:16;:::i;:::-;2257:54482;;;;;;;;;;;;;23745:10;;2257:54482;;;;;;;24430:70;;;;1618:1:22;-1:-1:-1;;;;;;;3467:18:22;2257:54482:21;;;3467:18:22;2257:54482:21;3286:206:22;24113:31:21;;;;;;:::i;:::-;;;:::i;:::-;;;;24086:330;24430:70;23745:10;;24430:70;23745:10;24388:16;23745:10;;24388:16;;:::i;:::-;24086:330;;23690:81;;;2257:54482;23690:81;2257:54482;23690:81;;;;;;;:::i;:::-;;;;;23534:36;-1:-1:-1;23562:8:21;;23534:36;;2257:54482;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;1063:62:0;;;;;:::i;:::-;1528:128:22;;:::i;:::-;-1:-1:-1;;;;3268:5:22;2257:54482:21;;3268:5:22;2257:54482:21;15945:51;;;;:::i;:::-;3268:5:22;2257:54482:21;15925:19;2257:54482;;15925:91;2257:54482;;3268:5:22;2257:54482:21;;-1:-1:-1;;;;;2257:54482:21;-1:-1:-1;;;;;;2257:54482:21;;;;;;;15925:91;-1:-1:-1;;;;;2257:54482:21;;;;;16031:68;;3268:5:22;16031:68:21;;1618:1:22;-1:-1:-1;;;;;;;3467:18:22;2257:54482:21;;;3467:18:22;2257:54482:21;3286:206:22;2257:54482:21;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;2257:54482:21;;;;;5136:49;2257:54482;;;;;;;;;;;;;-1:-1:-1;;2257:54482:21;;;;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;1528:128:22;;:::i;:::-;-1:-1:-1;;;;;2257:54482:21;;-1:-1:-1;2257:54482:21;;;;;9320:14;2257:54482;;;;;;9320:14;2257:54482;9349:13;-1:-1:-1;9349:13:21;;1618:1:22;-1:-1:-1;;;;;;;3467:18:22;2257:54482:21;;;3467:18:22;2257:54482:21;3286:206:22;2257:54482:21;;;;;;-1:-1:-1;;2257:54482:21;;;;;-1:-1:-1;;;;;2257:54482:21;;;;;;;;;;;;;;;-1:-1:-1;;2257:54482:21;;;;1528:128:22;;:::i;:::-;-1:-1:-1;;;;2257:54482:21;;;;;8148:1;;:::i;:::-;8159:57;-1:-1:-1;;;;;2257:54482:21;8159:9;2257:54482;;8189:22;;;:::i;:::-;2257:54482;8159:57;;:::i;:::-;1618:1:22;-1:-1:-1;;;;;;;3467:18:22;2257:54482:21;;;3467:18:22;2257:54482:21;3286:206:22;2257:54482:21;;;;-1:-1:-1;2257:54482:21;;-1:-1:-1;;2257:54482:21;;;;-1:-1:-1;;;;;;2257:54482:21;;875:28:11;;2257:54482:21;;1165:40:11;;;;;-1:-1:-1;2257:54482:21;;;;;1165:40:11;;;;294:21:15;1165:40:11;;2257:54482:21;;;1165:40:11;;2257:54482:21;1165:40:11;;;;;;;;2257:54482:21;;;1165:40:11;;;;;:::i;2257:54482:21:-;;;;;;-1:-1:-1;;2257:54482:21;;;;;-1:-1:-1;;;;;4115:40:21;2257:54482;;;;;;;;;;;;;;;;-1:-1:-1;;2257:54482:21;;;;-1:-1:-1;;;;;2257:54482:21;;;;;:::i;:::-;1063:62:0;;:::i;:::-;1528:128:22;;:::i;:::-;-1:-1:-1;;;;;2257:54482:21;;-1:-1:-1;2257:54482:21;;-1:-1:-1;2257:54482:21;20247:12;2257:54482;;;;-1:-1:-1;2257:54482:21;20247:38;:55;2257:54482;;;;20247:55;:::i;:::-;2257:54482;;1618:1:22;-1:-1:-1;;;;;;;3467:18:22;2257:54482:21;;;3467:18:22;2257:54482:21;3286:206:22;2257:54482:21;;;;;;-1:-1:-1;;2257:54482:21;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;2257:54482:21;;;;-1:-1:-1;2257:54482:21;;;;;:::i;:::-;1528:128:22;;:::i;:::-;-1:-1:-1;;;;2257:54482:21;;;;;41231:33;-1:-1:-1;;;;;2257:54482:21;;;;;;;41069:32;2257:54482;;;;;;;;;;;;41204:25;2257:54482;;;;41231:33;;:::i;:::-;41280:71;-1:-1:-1;41280:71:21;;1618:1:22;-1:-1:-1;;;;;;;3467:18:22;2257:54482:21;;;3467:18:22;2257:54482:21;3286:206:22;2257:54482:21;;;;;;-1:-1:-1;;2257:54482:21;;;;42510:51;2257:54482;;;;;:::i;:::-;;;42510:51;;:::i;:::-;-1:-1:-1;2257:54482:21;42490:19;2257:54482;;;-1:-1:-1;;;;;2257:54482:21;-1:-1:-1;2257:54482:21;;;;;;;;;;;;;;;-1:-1:-1;;2257:54482:21;;;;;;;;;:::i;:::-;;;1063:62:0;;;:::i;:::-;7923:59:21;2257:54482;55724:50;2257:54482;;;;55724:55;7923:59;:::i;:::-;1528:128:22;;:::i;:::-;-1:-1:-1;2257:54482:21;-1:-1:-1;;;;2257:54482:21;-1:-1:-1;2257:54482:21;12596:54;12604:18;;;12596:54;:::i;:::-;2257:54482;;-1:-1:-1;;;12799:69:21;;2257:54482;;12799:69;;2257:54482;-1:-1:-1;;;;;2257:54482:21;;;;;;;;12799:6;2257:54482;;12799:69;;;;;;;-1:-1:-1;12799:69:21;;;2257:54482;;;;;;;;;12896:53;;;;294:21:15;12896:53:21;;;;;2257:54482;12896:53;;2257:54482;;;-1:-1:-1;;;;;2257:54482:21;;;;;;;;12896:53;;2257:54482;;12896:53;;;;;;;13197:43;12896:53;12888:82;13109:39;12896:53;13053:24;12896:53;13197:43;12896:53;-1:-1:-1;12896:53:21;;;2257:54482;12888:82;;;:::i;:::-;-1:-1:-1;;;;;2257:54482:21;-1:-1:-1;;;;;;13053:24:21;2257:54482;;;13053:24;2257:54482;;13053:24;13125:23;;:::i;:::-;13109:39;;:::i;:::-;13158:24;;;2257:54482;;13197:43;;;;1618:1:22;-1:-1:-1;;;;;;;3467:18:22;2257:54482:21;;;3467:18:22;2257:54482:21;3286:206:22;12896:53:21;;;;;;-1:-1:-1;12896:53:21;;;;;;:::i;:::-;;;;;12799:69;;;;;;;;;;;;;;;:::i;:::-;;;;;2257:54482;;;;;;-1:-1:-1;;2257:54482:21;;;;;;;-1:-1:-1;;;;;3753:36:21;2257:54482;;;;;;;;;;-1:-1:-1;;2257:54482:21;;;;;2544:36;2257:54482;;2544:36;2257:54482;;;2544:36;2257:54482;;2544:36;2257:54482;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2257:54482:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2257:54482:21;;;;;5302:36;2257:54482;;;;;;;;;;-1:-1:-1;;2257:54482:21;;;;;;;;;:::i;:::-;;;1528:128:22;;;:::i;:::-;-1:-1:-1;2257:54482:21;-1:-1:-1;;;;2257:54482:21;-1:-1:-1;2257:54482:21;8036:38;2257:54482;8045:6;2257:54482;;8044:7;8036:38;:::i;:::-;21635:61;21643:31;:21;;-1:-1:-1;;;;;2257:54482:21;;;23705:12;2257:54482;;;;;;;21643:21;2257:54482;;;;;;;21643:31;21635:61;:::i;:::-;-1:-1:-1;;;;;2257:54482:21;;;;;21885:4;2257:54482;21877:24;;;;21876:56;;2257:54482;21875:76;;;;2257:54482;21867:102;;;:::i;:::-;22342:50;:45;22357:29;:21;22215:54;22216:20;;;:::i;:::-;22240:29;;;:::i;:::-;22215:54;;:::i;:::-;22279:21;:36;:21;;-1:-1:-1;;;;;2257:54482:21;;;23705:12;2257:54482;;;;;;;22279:21;:36;:53;2257:54482;;;22279:53;:::i;:::-;2257:54482;;-1:-1:-1;;;;;2257:54482:21;;;23705:12;2257:54482;;;;;;;22342:50;2257:54482;;294:21:15;22342:78:21;;22393:10;2257:54482;22342:78;;2257:54482;;;;;;;;;;;;;;;;-1:-1:-1;;22342:78:21;;;;;;;;2257:54482;22435:41;;;;2257:54482;22431:198;;;22478:62;;;;;2257:54482;;22478:62;-1:-1:-1;;;22478:62:21;;-1:-1:-1;22527:9:21;2257:54482;22527:9;;22478:62;;;;;;;;22645:66;22478:62;22645:66;22478:62;;;22431:198;;2257:54482;;;;;;;;;;;;;22393:10;;2257:54482;;;;;;;22478:62;;;;;;:::i;:::-;;;;22431:198;22645:66;;22608:4;22615:13;22608:4;;22393:10;22615:13;;:::i;22435:41::-;22463:9;;:13;;22435:41;;22342:78;;;2257:54482;22342:78;2257:54482;22342:78;;;;;;;:::i;:::-;;;;;21875:76;-1:-1:-1;21937:9:21;:14;21875:76;;21876:56;21906:9;;;:26;21876:56;;2257:54482;;;;;;-1:-1:-1;;2257:54482:21;;;;;;;;;;;;;:::i;:::-;17729:86;2257:54482;;;;;;;:::i;:::-;1528:128:22;;:::i;:::-;-1:-1:-1;2257:54482:21;-1:-1:-1;;;;2257:54482:21;-1:-1:-1;2257:54482:21;1063:62:0;;:::i;:::-;17513:191:21;-1:-1:-1;;;;;2257:54482:21;;17513:191;;;;;;2257:54482;17513:191;;2257:54482;17513:191;;2257:54482;;;;;;;;;;;;;;;17513:191;;;;;:::i;:::-;;;:::i;:::-;2257:54482;;;;;17729:86;1618:1:22;-1:-1:-1;;;;;;;3467:18:22;2257:54482:21;;;3467:18:22;2257:54482:21;3286:206:22;2257:54482:21;;;;;;-1:-1:-1;;2257:54482:21;;;;;;3693:18;2257:54482;;;;;;;;;;;;;;;;-1:-1:-1;;2257:54482:21;;;;1063:62:0;;:::i;:::-;1528:128:22;;:::i;:::-;2257:54482:21;;-1:-1:-1;;;;2257:54482:21;;;;;;;;:::i;:::-;9931:18;2257:54482;;;;;;;;;;;;;;;;;;;;;;;;;;10146:227;;2257:54482;;;;-1:-1:-1;;;;;2257:54482:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9959:25;-1:-1:-1;9931:18:21;2257:54482;-1:-1:-1;2257:54482:21;;-1:-1:-1;2257:54482:21;;-1:-1:-1;2257:54482:21;;-1:-1:-1;2257:54482:21;;;9959:25;2257:54482;;;;;;;9994:137;;2257:54482;;;;;;;;-1:-1:-1;;;;;2257:54482:21;;;;;;;;;;;;;;;;;;;10146:227;;;;1618:1:22;-1:-1:-1;;;;;;;3467:18:22;2257:54482:21;;;3467:18:22;2257:54482:21;3286:206:22;9994:137:21;10120:10;2257:54482;10067:9;2257:54482;-1:-1:-1;;;;;2257:54482:21;;;;;;-1:-1:-1;;;;;2257:54482:21;10120:10;2257:54482;10120:10;;:::i;:::-;9994:137;;2257:54482;;;-1:-1:-1;;2257:54482:21;;;;;;;;;;;-1:-1:-1;;2257:54482:21;;;;;;4506:29;2257:54482;;;;;;;;;;;;;;;;-1:-1:-1;;2257:54482:21;;;;1063:62:0;;:::i;:::-;2257:54482:21;-1:-1:-1;;;;;2518:6:0;2257:54482:21;-1:-1:-1;;;;;;2257:54482:21;;2518:6:0;2257:54482:21;;2566:40:0;;;;2257:54482:21;;;;;;;-1:-1:-1;;2257:54482:21;;;;;;;-1:-1:-1;;;;;3864:55:21;2257:54482;;;;;;;;;;-1:-1:-1;;2257:54482:21;;;;;4648:39;2257:54482;;;;;;;;-1:-1:-1;;;2257:54482:21;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;2257:54482:21;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;31145:4456;2257:54482;;;;;;:::i;:::-;;;;;;;;31145:4456;:::i;2257:54482::-;;;;;;-1:-1:-1;;2257:54482:21;;;;;5453:25;2257:54482;;;;;;;;;;;;;-1:-1:-1;;2257:54482:21;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;1528:128:22;;;:::i;:::-;-1:-1:-1;2257:54482:21;-1:-1:-1;;;;2257:54482:21;-1:-1:-1;2257:54482:21;7923:59;2257:54482;55724:50;2257:54482;;;;55724:55;7923:59;:::i;:::-;8036:38;2257:54482;8045:6;2257:54482;;8044:7;8036:38;:::i;:::-;2257:54482;;;28689:26;2257:54482;;29515:259;;28807:16;28800:35;:24;28807:16;;:::i;:::-;2257:54482;;;;28800:24;28827:8;2257:54482;;;;;28800:35;;:::i;:::-;28846:25;;-1:-1:-1;9931:18:21;2257:54482;-1:-1:-1;2257:54482:21;;-1:-1:-1;2257:54482:21;;-1:-1:-1;2257:54482:21;;-1:-1:-1;2257:54482:21;;;28846:25;28965:76;;-1:-1:-1;;;;;;;28965:46:21;2257:54482;;;;;;;;28965:46;2257:54482;;28965:76;29051:75;;-1:-1:-1;;;;;;;28965:46:21;2257:54482;;;;;;;;28965:46;2257:54482;;29051:75;29136:56;;28846:25;2257:54482;;29136:56;29202;;:36;2257:54482;;29202:56;29268:48;;2257:54482;;;29268:48;28965:46;2257:54482;;-1:-1:-1;;;;;;2257:54482:21;29356:10;2257:54482;;;29488:10;2257:54482;28827:8;2257:54482;-1:-1:-1;;;;;2257:54482:21;;;;29488:10;2257:54482;29481:4;;29356:10;;29488;;:::i;:::-;2257:54482;;29356:10;;;;29515:259;;;:::i;2257:54482::-;;;;-1:-1:-1;;;2257:54482:21;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2257:54482:21;;;;;-1:-1:-1;;;;;1273:6:0;2257:54482:21;;;;;;;;;;;;;;-1:-1:-1;;2257:54482:21;;;;;25244:42;2257:54482;;;;;:::i;:::-;1528:128:22;;:::i;:::-;-1:-1:-1;;;;;2257:54482:21;;-1:-1:-1;2257:54482:21;25244:42;:::i;2257:54482::-;;;;;;-1:-1:-1;;2257:54482:21;;;;26420:7;2257:54482;;;;;:::i;:::-;1528:128:22;;:::i;:::-;-1:-1:-1;;;;;2257:54482:21;;-1:-1:-1;2257:54482:21;26420:7;:::i;2257:54482::-;;;;;;;;-1:-1:-1;;2257:54482:21;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;2257:54482:21;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2257:54482:21;;;;;;;;;;;;;;;;;;;:::i;:::-;674:24:10;;;;:::i;:::-;713:13;-1:-1:-1;728:15:10;;;;;;2257:54482:21;;;;;;;:::i;745:3:10:-;-1:-1:-1;829:7:10;;;;;;:::i;:::-;2257:54482:21;;;;;;;;;;;:::i;:::-;802:35:10;810:4;;802:35;;;;;:::i;:::-;856:8;;852:306;;1172:19;;2257:54482:21;1172:19:10;;;;;:::i;:::-;;;;;;:::i;:::-;;2257:54482:21;713:13:10;;852:306;2257:54482:21;;984:2:10;2257:54482:21;;968:18:10;964:32;;1114:28;1014:76;;1107:36;1014:76;;2257:54482:21;1114:28:10;;;;;;;;;:::i;:::-;2257:54482:21;;1107:36:10;;;-1:-1:-1;;;1107:36:10;;;;;:::i;:::-;;;;2257:54482:21;;;;;;-1:-1:-1;;2257:54482:21;;;;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;1528:128:22;;:::i;:::-;-1:-1:-1;2257:54482:21;-1:-1:-1;;;;2257:54482:21;-1:-1:-1;2257:54482:21;-1:-1:-1;;;;;18487:21:21;;:29;:21;;-1:-1:-1;;;;;2257:54482:21;;;23705:12;2257:54482;;;;;;;18487:29;2257:54482;18487:43;18483:221;;2257:54482;18714:21;:38;:21;18768:75;18714:21;-1:-1:-1;;;;;2257:54482:21;;;23705:12;2257:54482;;;;;;;18714:21;-1:-1:-1;;;;;;;2257:54482:21;;;;;;;18714:38;18813:29;:21;;-1:-1:-1;;;;;2257:54482:21;;;23705:12;2257:54482;;;;;;;18813:29;2257:54482;;;-1:-1:-1;;;;;2257:54482:21;;;;;;;;;;;;;;;;;18768:75;2257:54482;18483:221;2257:54482;;294:21:15;18578:37:21;;-1:-1:-1;;;;;2257:54482:21;;;18578:37;;2257:54482;;;;;;;;;;-1:-1:-1;;18578:14:21;2257:54482;18578:37;;;;;;;18768:75;18578:37;18546:69;18578:37;-1:-1:-1;18578:37:21;;;18483:221;18546:21;;;-1:-1:-1;;;;;2257:54482:21;;;23705:12;2257:54482;;;;;;;18546:21;2257:54482;-1:-1:-1;;;;;2257:54482:21;-1:-1:-1;;;;;;2257:54482:21;;;;;;;18546:69;18629:64;18669:24;18676:16;;:::i;18669:24::-;18629:21;;-1:-1:-1;;;;;2257:54482:21;;;23705:12;2257:54482;;;;;;;18629:21;2257:54482;-1:-1:-1;;;;;;;2257:54482:21;;;;;;;;;;;;18629:64;18483:221;;18578:37;;;;2257:54482;18578:37;2257:54482;18578:37;;;;;;;:::i;:::-;;;;2257:54482;;;;;;-1:-1:-1;;2257:54482:21;;;;;;;-1:-1:-1;;;;;3967:39:21;2257:54482;;;;;;;;;;-1:-1:-1;;2257:54482:21;;;;;-1:-1:-1;;;;;4242:23:21;2257:54482;;;;;;;;;;;;;;-1:-1:-1;;2257:54482:21;;;;;;;;;;;;;;13510:10;1063:62:0;;;:::i;:::-;1528:128:22;;:::i;:::-;-1:-1:-1;2257:54482:21;-1:-1:-1;;;;2257:54482:21;-1:-1:-1;2257:54482:21;13496:24;2257:54482;;;13553:22;2257:54482;;;;;;;;;;;;;;;;;;;;;13590:24;;2257:54482;;;;13590:24;2257:54482;;;;;-1:-1:-1;;;2257:54482:21;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2257:54482:21;;;;:::o;:::-;;;;;;-1:-1:-1;;2257:54482:21;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;2257:54482:21;;10867:224;2257:54482;;;;;;;;;;;;10867:224;:::i;2257:54482::-;;;;;;-1:-1:-1;;2257:54482:21;;;;;24831:29;2257:54482;;;;;:::i;:::-;1528:128:22;;:::i;:::-;-1:-1:-1;;;;;2257:54482:21;;-1:-1:-1;2257:54482:21;24831:29;:::i;2257:54482::-;;;;;;-1:-1:-1;;2257:54482:21;;;;-1:-1:-1;;;;;2257:54482:21;;;;;:::i;:::-;;-1:-1:-1;2257:54482:21;3565:67;2257:54482;;;;-1:-1:-1;2257:54482:21;;;;;;;;;;;;15077:53;2257:54482;;;;:::i;:::-;1063:62:0;;;:::i;:::-;1528:128:22;;:::i;:::-;-1:-1:-1;;;;3268:5:22;2257:54482:21;;3268:5:22;2257:54482:21;;;;;;;:::i;:::-;;-1:-1:-1;;;;;2257:54482:21;;;;;;;15024:38;;;;2257:54482;;;;;;;3268:5:22;2257:54482:21;14991:19;15024:38;2257:54482;;;;3268:5:22;2257:54482:21;;;;;;-1:-1:-1;;;;;2257:54482:21;-1:-1:-1;;;;;;2257:54482:21;;;;;;;;;;;;;-1:-1:-1;;;;;2257:54482:21;-1:-1:-1;;;;;;2257:54482:21;;;;;;;;;;;;;15024:38;2257:54482;;;;;;;15077:53;1618:1:22;-1:-1:-1;;;;;;;3467:18:22;2257:54482:21;;;3467:18:22;2257:54482:21;3286:206:22;2257:54482:21;;;;;;-1:-1:-1;;2257:54482:21;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2257:54482:21;;;-1:-1:-1;2257:54482:21;2660:51;2257:54482;;;-1:-1:-1;2257:54482:21;;;2660:51;;;;2257:54482;;2660:51;;;;2257:54482;2660:51;;2257:54482;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2257:54482:21;;;;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;-1:-1:-1;;;;;2257:54482:21;;;2162:22:0;;;2257:54482:21;;2518:6:0;2257:54482:21;;-1:-1:-1;;;;;;2257:54482:21;;;2518:6:0;2257:54482:21;;2566:40:0;-1:-1:-1;2566:40:0;;2257:54482:21;;;;;-1:-1:-1;;;2257:54482:21;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;2257:54482:21;;;;;;;;;;;;;;;;;;294:21:15;;;;;;;;;;;;;:::i;:::-;2257:54482:21;;294:21:15;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;2257:54482:21;;-1:-1:-1;;;294:21:15;;;;;;;;;;;2257:54482:21;294:21:15;2257:54482:21;;;294:21:15;;2257:54482:21;;;;:::o;:::-;;;;-1:-1:-1;;;2257:54482:21;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;2257:54482:21;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2257:54482:21;;;;;;;;;;22232:4;2257:54482;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;-1:-1:-1;;;2257:54482:21;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;-1:-1:-1;;;2257:54482:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2257:54482:21;;;;;;;;;-1:-1:-1;;;;;2257:54482:21;;;;;;;;;-1:-1:-1;;;;;2257:54482:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2257:54482:21;;;;;;;-1:-1:-1;;;;;2257:54482:21;;;;36071:4683;36180:24;36187:16;;:::i;36180:24::-;36237:46;2257:54482;36222:61;;2257:54482;;;;;;36222:61;36214:97;2257:54482;;;;;36222:61;;36214:97;:::i;:::-;36390:23;;:::i;:::-;38134:10;;2257:54482;;;38122:22;;;38118:88;;38267:22;;:::i;:::-;38412:9;;2257:54482;;;;;-1:-1:-1;;;;;2257:54482:21;;;;;-1:-1:-1;;;;;2257:54482:21;;;;;;;38471:10;;;;:::i;:::-;38568;2257:54482;;;;;;;;;38990:21;;;;:::i;:::-;2257:54482;36237:46;2257:54482;;;-1:-1:-1;;;;;2257:54482:21;;;;;;;38508:785;;;;;294:21:15;38508:785:21;;;2257:54482;;;;;;;;;;;38508:785;36237:46;38508:785;;;;;2257:54482;;39274:4;2257:54482;38853:1;2257:54482;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2257:54482:21;;;;;;;38853:1;2257:54482;;;;;;;;;;;;;;;;;;;;;38508:785;;;;;;-1:-1:-1;38508:785:21;;;;;;36071:4683;-1:-1:-1;38492:1191:21;;;;;;;;;;;;:::i;:::-;2257:54482;;;;;39494:51;2257:54482;;;;-1:-1:-1;;;;;2257:54482:21;;;;39494:51;:::i;:::-;36237:46;2257:54482;-1:-1:-1;;;;;2257:54482:21;;;;;;;;;;40094:22;;;;;:::i;:::-;2257:54482;;;;40191:21;;;;:::i;:::-;2257:54482;;;:::i;:::-;-1:-1:-1;;;;;2257:54482:21;;;;;-1:-1:-1;39807:454:21;;;2257:54482;;-1:-1:-1;;;;;2257:54482:21;;39807:454;;2257:54482;39807:454;;;-1:-1:-1;2257:54482:21;;39807:454;;;39274:4;2257:54482;;;39807:454;;-1:-1:-1;2257:54482:21;;;39807:454;;;2257:54482;294:21:15;39807:454:21;;-1:-1:-1;2257:54482:21;;39807:454;;;2257:54482;39807:454;;;2257:54482;39807:454;;;2257:54482;40393:25;-1:-1:-1;9931:18:21;2257:54482;-1:-1:-1;2257:54482:21;;-1:-1:-1;2257:54482:21;;-1:-1:-1;2257:54482:21;;-1:-1:-1;2257:54482:21;;;40393:25;2257:54482;;-1:-1:-1;;;;;2257:54482:21;;;40476:4;40456:10;40483;;;:::i;:::-;2257:54482;-1:-1:-1;;;;;2257:54482:21;;;40563:10;;;;:::i;:::-;38568;2257:54482;;;;40584:104;;;;;294:21:15;40584:104:21;;40476:4;40456:10;;40584:104;;36237:46;40584:104;;;;;;:::i;:::-;;;;;-1:-1:-1;40584:104:21;;;;;;;;38492:1191;-1:-1:-1;;2257:54482:21;;;;;;;;40456:10;;40704:43;;2257:54482;;;;40704:43;;;;36071:4683::o;40584:104::-;;;;;;-1:-1:-1;40584:104:21;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;38508:785;;;;;;;;;;;;;:::i;:::-;;;;;38118:88;;;;;;;:::i;2257:54482::-;;;;;;;-1:-1:-1;2257:54482:21;;;;;;;;;;;;;:::o;1457:276:11:-;1535:12;2257:54482:21;-1:-1:-1;;;;;2257:54482:21;1535:28:11;;2257:54482:21;;1586:36:11;;2257:54482:21;;;1586:36:11;;;;294:21:15;1586:36:11;;;;;;;;;1535:12;1586:36;;;1579:43;;:::o;1586:36::-;;;;;;;;;;;;;;:::i;1531:196::-;1660:15;;1653:22;:::o;2257:54482:21:-;;;;:::o;:::-;;;;-1:-1:-1;;;2257:54482:21;;;;;;;;;;;;;;;;;;544:21:15;;;;:::o;:::-;;2257:54482:21;;-1:-1:-1;;;544:21:15;;;;;;;;;;;2257:54482:21;544:21:15;2257:54482:21;;;544:21:15;;;;;;;;;;;;:::o;2257:54482:21:-;;;;:::o;:::-;;;;-1:-1:-1;;;2257:54482:21;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;2257:54482:21;;;;;;;;;;;;;;;;;;1528:128:22;;;;;;;;;;;;:::i;:::-;3268:5;2257:54482:21;-1:-1:-1;;;;2257:54482:21;3268:5:22;2257:54482:21;8045:6;2257:54482;;;8044:7;8036:38;;;:::i;:::-;31489:16;;:::i;:::-;31508:46;2257:54482;;;;;;;-1:-1:-1;31481:97:21;;;:::i;:::-;31700:32;2257:54482;;31669:92;4461:1:23;2257:54482:21;;;;4489:20:23;;;:28;31677:64:21;31669:92;:::i;:::-;31508:18;2257:54482;;;;:::i;:::-;;;;;32008:349;;;;2257:54482;32008:349;;;;2257:54482;32008:349;;;;2257:54482;32008:349;;;;2257:54482;32008:349;;;;;;;2257:54482;;;;;;32008:349;;;;;2257:54482;;;;;;:::i;:::-;31907:487;;;;:::i;:::-;31886:543;;;:::i;:::-;32716:43;;;:::i;:::-;2257:54482;;;;;;5017:1:23;2257:54482:21;;5000:28:23;32819:99:21;;31700:32;2257:54482;;32819:99;31508:46;2257:54482;;;;;32987:52;;;:::i;:::-;;;-1:-1:-1;;;;;;;28965:46:21;2257:54482;;;;;;;;28965:46;2257:54482;;32987:52;33844:12;;;;;;;;:::i;:::-;35372:222;;;;33973:15;;33969:1001;;1528:128:22;2257:54482:21;;31508:46;2257:54482;;;32008:349;2257:54482;;35224:55;35220:136;;1528:128:22;2257:54482:21;32008:349;2257:54482;35574:10;;;;35372:222;;;:::i;:::-;;;;1618:1:22;-1:-1:-1;;;;;;;3467:18:22;2257:54482:21;;;3467:18:22;2257:54482:21;3286:206:22;35220:136:21;35345:10;2257:54482;;35293:9;2257:54482;-1:-1:-1;;;;;2257:54482:21;;;;-1:-1:-1;;;;;35345:10:21;2257:54482;;;35345:10;;:::i;:::-;35220:136;;;33969:1001;3268:5:22;2257:54482:21;;34920:39;2257:54482;34460:432;;31700:32;2257:54482;31508:46;2257:54482;;34638:225;32008:349;2257:54482;34638:225;;;;32008:349;34638:225;;;;;;2257:54482;;;;;;;;;;;;;;;34638:225;;2257:54482;34638:225;2257:54482;;34638:225;;;;;;;;:::i;:::-;32008:349;2257:54482;34460:432;;;32008:349;34460:432;;;-1:-1:-1;;;34460:432:21;;34638:225;34460:432;;;:::i;:::-;;;;;;;;;:::i;:::-;34422:484;;;;;;:::i;:::-;;34920:39;:::i;:::-;33969:1001;;;;2257:54482;;;;:::o;:::-;;;;-1:-1:-1;;;2257:54482:21;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;2257:54482:21;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;2257:54482:21;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2257:54482:21;;:::o;:::-;;;-1:-1:-1;;;;;2257:54482:21;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;2257:54482:21;;;;:::o;:::-;;;:::o;:::-;;;;:::o;:::-;;;;-1:-1:-1;;;2257:54482:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2257:54482:21;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;2257:54482:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2257:54482:21;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;2257:54482:21;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;2257:54482:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;1063:62:0:-;;11071:12:21;1063:62:0;;;:::i;:::-;1528:128:22;;:::i;:::-;-1:-1:-1;;;;3268:5:22;2257:54482:21;;3268:5:22;2257:54482:21;11071:12;:::i;:::-;1618:1:22;-1:-1:-1;;;;;;;3467:18:22;2257:54482:21;;;3467:18:22;2257:54482:21;3286:206:22;1359:130:0;-1:-1:-1;;;;;1273:6:0;2257:54482:21;;719:10:5;1422:23:0;2257:54482:21;;1359:130:0:o;2257:54482:21:-;;;;-1:-1:-1;;;2257:54482:21;;;;;;;;;;;;;;;;;;2952:186:22;2257:54482:21;3084:11:22;2257:54482:21;;;;;;;2952:186:22:o;2257:54482:21:-;;;;-1:-1:-1;;;2257:54482:21;;;;;;;;;;;;;;;;;;51396:1564;51519:7;;;:::i;:::-;-1:-1:-1;;;;;2257:54482:21;;;-1:-1:-1;2257:54482:21;52258:12;2257:54482;;;-1:-1:-1;2257:54482:21;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;52323:34:21;;:160;-1:-1:-1;;;52670:54:21;52323:160;;;52670:54;:::i;:::-;52813:16;;52809:33;;52922:16;52921:32;52922:16;;:::i;:::-;52921:32;:::i;52809:33::-;52831:11;;52838:4;52831:11;:::o;52323:160::-;;52670:54;-1:-1:-1;52323:160:21;;52670:54;:::i;51396:1564::-;;52670:54;51396:1564;51519:7;;;:::i;:::-;-1:-1:-1;;;;;2257:54482:21;;;-1:-1:-1;2257:54482:21;52258:12;2257:54482;;;-1:-1:-1;2257:54482:21;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;52323:34:21;;:160;-1:-1:-1;;;52599:39:21;52323:160;;;52599:39;:::i;:::-;2257:54482;;52670:54;:::i;52323:160::-;;52599:39;-1:-1:-1;52323:160:21;;52599:39;:::i;2257:54482::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;47457:1687::-;47689:41;47575:21;;-1:-1:-1;;;;;2257:54482:21;;;23705:12;2257:54482;;;;;;;47575:21;47689:41;:39;:27;2257:54482;;;-1:-1:-1;;;;;2257:54482:21;;;47689:39;2257:54482;;47689:41;;;;294:21:15;47689:41:21;;;;;;;;;-1:-1:-1;47689:41:21;;;47457:1687;47744:23;;;47740:40;;48941:131;47970:11;48074:7;49089:48;47970:11;;49090:25;47970:11;;:::i;:::-;48074:7;:::i;:::-;49040:31;48941:77;48948:26;;;2257:54482;48990:28;;;2257:54482;48941:77;;:::i;:::-;49040:31;;2257:54482;48941:131;;:::i;:::-;49090:25;:::i;47740:40::-;47769:11;;;47776:4;47769:11;:::o;47689:41::-;;;;;;;;;;;;;;;:::i;:::-;;;;;941:175:3;2257:54482:21;;-1:-1:-1;;;1050:58:3;;;;-1:-1:-1;;;;;2257:54482:21;;;1050:58:3;;;2257:54482:21;;;;;;;;1050:58:3;;;2257:54482:21;;;;1050:58:3;;2257:54482:21;;1050:58:3;;;;;;:::i;:::-;;:::i;2647:312:4:-;2736:21;;:31;2257:54482:21;;2831:33:4;2257:54482:21;;;-1:-1:-1;;;;;2257:54482:21;;;2831:33:4;;;;:::i;:::-;;2257:54482:21;;;2647:312:4:o;2257:54482:21:-;;;;-1:-1:-1;;;2257:54482:21;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2257:54482:21;;;;;;;;;;;;;;;;;;55049:183;2257:54482;;;-1:-1:-1;;;;;2257:54482:21;;;55185:39;;;2257:54482;;;;;;;;;;55185:39;2257:54482;;;;55185:39;;2257:54482;;55185:39;;;;;;:::i;:::-;2257:54482;55175:50;;55049:183;:::o;43910:229::-;-1:-1:-1;;;;;2257:54482:21;;-1:-1:-1;;;44059:72:21;;2257:54482;44059:72;;;2257:54482;44059:72;:6;2257:54482;44059:6;;;2257:54482;44059:72;;;;;;;-1:-1:-1;44059:72:21;;;2257:54482;;43910:229;:::o;44059:72::-;;;;;;;;;;;;;;:::i;:::-;2257:54482;43910:229;:::o;1818:573:3:-;;-1:-1:-1;;;;;2257:54482:21;;2321:62:3;-1:-1:-1;;;2321:62:3;;;;2257:54482:21;2321:62:3;;;2257:54482:21;;;;;;;2321:62:3;;2257:54482:21;;;;;;;;;;;;;2321:62:3;2257:54482:21;;;2321:62:3;:::i;353:7:15:-;;;;;;;;;2257:54482:21;;;353:7:15;2257:54482:21;;;;;;;;;;;;;;353:7:15;;;:::o;44145:251:21:-;2257:54482;;-1:-1:-1;;;44254:55:21;;2257:54482;44254:55;;;2257:54482;44254:55;;-1:-1:-1;;;;;2257:54482:21;44254:55;2257:54482;;;44254:6;2257:54482;;44254:55;;;;;;;;;44239:124;44254:55;-1:-1:-1;44254:55:21;;;44145:251;2257:54482;44344:18;2257:54482;44352:9;2257:54482;-1:-1:-1;;;;;2257:54482:21;;;44344:18;2257:54482;;44239:124;;;;;;294:21:15;44239:124:21;;44254:55;44239:124;;2257:54482;;;-1:-1:-1;;;;;2257:54482:21;;;;;;;;44239:124;;2257:54482;;44239:124;;;;;;;-1:-1:-1;44239:124:21;;;44145:251;2257:54482;;;44145:251;:::o;44239:124::-;;;;;;-1:-1:-1;44239:124:21;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;44254:55;;;;;;;;;;;;;;:::i;:::-;;;;43696:208;43740:9;2257:54482;43759:27;2257:54482;43788:10;2257:54482;;;-1:-1:-1;;;43740:59:21;;-1:-1:-1;;;;;2257:54482:21;;;43759:27;43740:59;;2257:54482;;;;;;;;;43740:59;;2257:54482;;;;;;-1:-1:-1;;2257:54482:21;43740:59;;;;;;;;43696:208;43809:25;;-1:-1:-1;9931:18:21;2257:54482;-1:-1:-1;2257:54482:21;;-1:-1:-1;2257:54482:21;;-1:-1:-1;2257:54482:21;;-1:-1:-1;2257:54482:21;;;43809:25;43880:16;;:::i;:::-;2257:54482;;;;;43849:48;43740:59;43868:10;43849:48;;43696:208::o;43740:59::-;;;;;;;;;;;;;:::i;:::-;;;;;2582:280:3;2257:54482:21;;294:21:15;2701:39:3;;2725:4;2701:39;;;2257:54482:21;-1:-1:-1;;;;;2257:54482:21;;;;;;2582:280:3;;2701:39;2257:54482:21;;;;;2701:39:3;2257:54482:21;-1:-1:-1;;;;;2257:54482:21;;2701:39:3;;;;;;;-1:-1:-1;2701:39:3;;;2582:280;544:21:15;;;;;;;;2257:54482:21;;-1:-1:-1;;;2701:39:3;2777:77;;;-1:-1:-1;;;;;2257:54482:21;;;2777:77:3;;;2257:54482:21;;;;;;;;2777:77:3;;2257:54482:21;2777:77:3;2257:54482:21;;;;2777:77:3;2257:54482:21;2701:39:3;;;;;;;;;;;;;;;:::i;:::-;;;;;1355:203;;;1482:68;1355:203;2257:54482:21;;1482:68:3;294:21:15;1482:68:3;;;;-1:-1:-1;;;;;2257:54482:21;;;1482:68:3;;;2257:54482:21;;;;;;;;;;;1482:68:3;;;;;:::i;54161:882:21:-;;2257:54482;54982:54;54161:882;54928:39;54682:236;54301:43;;;;:::i;:::-;2257:54482;;54716:192;;;;;;;;-1:-1:-1;;;54716:192:21;;;;;;:::i;54928:39::-;2257:54482;;;;;54716:192;2257:54482;;54716:192;2257:54482;;;;:::i;699:268:23:-;895:65;699:268;;2257:54482:21;;937:21:23;;2257:54482:21;937:21:23;;;2257:54482:21;937:21:23;2257:54482:21;;;;;;;;;937:21:23;2257:54482:21;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;937:21:23:-;2257:54482:21;927:32:23;;895:65;;:::i;55238:408:21:-;-1:-1:-1;2257:54482:21;55406:19;2257:54482;;;-1:-1:-1;2257:54482:21;;-1:-1:-1;;;;;55464:38:21;2257:54482;;;;55464:38;;2257:54482;;55520:23;;;2257:54482;;1702:19:4;;:23;2257:54482:21;;55238:408::o;2257:54482::-;;;;-1:-1:-1;;;2257:54482:21;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2257:54482:21;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;2257:54482:21;;;;;;;;;;;;;;;;;;44616:2835;;;;;;2257:54482;;44935:13;44947:1;44950:10;;;;;;44616:2835;;;;;;;;:::o;44935:13::-;44996:11;46977:15;44996:11;;2257:54482;44996:11;;;:::i;:::-;2257:54482;-1:-1:-1;;;;;2257:54482:21;;;44996:11;45234:40;;;45214:61;;45234:40;;;;:::i;:::-;2257:54482;;45214:19;2257:54482;;;;;;;45214:61;45289:55;-1:-1:-1;;;;;2257:54482:21;;45297:21;;45289:55;:::i;:::-;44947:1;45580:17;;;;:::i;:::-;2257:54482;45580:21;45576:1244;;44935:13;46977:15;;;;;;;:::i;:::-;2257:54482;46977:15;;:::i;:::-;2257:54482;44935:13;;45576:1244;46486:39;46327:17;46108:342;46327:17;44947:1;46327:17;;;;:::i;:::-;2257:54482;;;46108:342;;;;;;;-1:-1:-1;;;;;2257:54482:21;;;46108:342;;;2257:54482;;;;;;;;;;;;;;;;;;;;;;;;;;;46108:342;2257:54482;46108:342;46066:402;;;;;;;:::i;46486:39::-;46704:17;;;;:::i;:::-;2257:54482;46662:59;:21;;;-1:-1:-1;;;;;2257:54482:21;;;23705:12;2257:54482;;;;;;;46662:21;:38;2257:54482;;;46662:59;:::i;:::-;2257:54482;;46787:17;;;;:::i;:::-;2257:54482;46739:66;:36;:21;;-1:-1:-1;;;;;2257:54482:21;;;23705:12;2257:54482;;;;;;;46739:21;:36;2257:54482;;;46739:66;:::i;:::-;2257:54482;;45576:1244;;;;;;50349:1041;2257:54482;;294:21:15;50767:40:21;;50801:4;50767:40;;;2257:54482;-1:-1:-1;;;;;2257:54482:21;;50767:40;2257:54482;;;;50767:40;;;;;;;-1:-1:-1;50767:40:21;;;50349:1041;2257:54482;50843:29;50854:18;2257:54482;50862:9;2257:54482;-1:-1:-1;;;;;2257:54482:21;;;50843:29;;:49;;;50349:1041;50843:82;;;50905:10;2257:54482;50895:20;;;:::i;:::-;50843:82;;50957:36;:21;;-1:-1:-1;;;;;2257:54482:21;;;23705:12;2257:54482;;;;;;;50957:21;:36;2257:54482;50939:54;;50935:449;;50349:1041;;:::o;50935:449::-;51319:21;51268;51250:54;50957:36;51268:21;;;-1:-1:-1;;;;;2257:54482:21;;;23705:12;2257:54482;;;;;;;51268:21;:36;2257:54482;51250:54;;:::i;:::-;51201:104;:38;:21;;-1:-1:-1;;;;;2257:54482:21;;;23705:12;2257:54482;;;;;;;51201:21;:38;2257:54482;;;51201:104;:::i;51319:21::-;:36;2257:54482;50349:1041::o;50843:82::-;;;;:49;2257:54482;;55724:50;2257:54482;;;;55724:55;;50843:49;;50767:40;;;;;;;;;;;;;;;:::i;:::-;;;;;56253:147;2257:54482;2441:11:22;2257:54482:21;;;;56301:92;;56253:147::o;56301:92::-;-1:-1:-1;;;;;56359:4:21;2257:54482;56359:34;;;;;2441:11:22;56359:34:21;2257:54482;;;56359:34;;;;-1:-1:-1;;;56359:34:21;;56380:9;56359:34;;;;;;;;;56301:92;56253:147::o;56359:34::-;;;;:::i;49262:324::-;49394:31;;;2257:54482;;;;;;;;;;;50074:16;;:::i;:::-;2257:54482;;;;;;;;50152:66;50223:4;2257:54482;50152:40;50174:18;2257:54482;50152:40;;:::i;:::-;:66;:::i;:::-;2257:54482;50245:44;;;;;;:91;2257:54482;;;;;;;49525:54;2257:54482;;49562:16;;:::i;:::-;2257:54482;;-1:-1:-1;;;;2257:54482:21;;;;;-1:-1:-1;;;2257:54482:21;;;;;50245:91;;;;;5196:642:3;2257:54482:21;;5535:69:4;;-1:-1:-1;;;;;2257:54482:21;;;;:::i;:::-;-1:-1:-1;2257:54482:21;;;;;;;;;;;5487:31:4;;;;;;;;;;;:::i;:::-;5535:69;;:::i;:::-;2257:54482:21;;5728:22:3;;;;:56;;;;;5196:642;2257:54482:21;;;;;;5196:642:3;:::o;2257:54482:21:-;;;;;;-1:-1:-1;;;2257:54482:21;;;;;;;;;;;;;;;;;;;;;;5728:56:3;5754:30;;-1:-1:-1;5754:30:3;;;;;;;:::i;:::-;5728:56;;;;;1156:154:6;;;;2078:13;-1:-1:-1;2073:116:6;2111:3;2257:54482:21;;2093:16:6;;;;;2169:8;;;;:::i;:::-;2257:54482:21;;9294:5:6;;;;;;-1:-1:-1;9494:119:6;;;2257:54482:21;9494:119:6;-1:-1:-1;9494:119:6;9294:51;2111:3;2257:54482:21;2078:13:6;;;9294:51;9494:119;-1:-1:-1;9494:119:6;;;2257:54482:21;9494:119:6;-1:-1:-1;9494:119:6;9294:51;;2093:16;;;;;1270:33;1156:154;:::o;52966:1189:21:-;53234:4;53194:36;53209:21;2257:54482;53194:36;;:::i;:::-;2257:54482;;;;;;;;;;;53762:18;;53758:186;;52966:1189;54057:24;;54053:95;;52966:1189;;:::o;54053:95::-;-1:-1:-1;;;;;2257:54482:21;-1:-1:-1;2257:54482:21;54083:32;2257:54482;;;-1:-1:-1;2257:54482:21;;;544:21:15;;;;;;;;2257:54482:21;52966:1189::o;53758:186::-;53796:41;:21;;-1:-1:-1;;;;;2257:54482:21;;;23705:12;2257:54482;;;;;;;53796:21;:41;2257:54482;;544:21:15;;;;;;;;;2257:54482:21;53869:64;:38;:21;;-1:-1:-1;;;;;2257:54482:21;;;23705:12;2257:54482;;;;;;;53869:64;2257:54482;;53758:186;;;7671:628:4;;;;7875:418;;;2257:54482:21;;;7906:22:4;7902:286;;8201:17;;:::o;7902:286::-;1702:19;:23;2257:54482:21;;8201:17:4;:::o;2257:54482:21:-;;;;-1:-1:-1;;;2257:54482:21;;;;;;;;;;;;;;;;;;7875:418:4;2257:54482:21;;;;-1:-1:-1;8980:21:4;:17;;9152:142;;;;;;;8976:379;9324:20;2257:54482:21;;;9324:20:4;;;-1:-1:-1;;;9324:20:4;;;;;;:::i"},"methodIdentifiers":{"addLiquidity(address,uint256)":"56688700","bondAmount()":"80f323a7","bondToken()":"c28f4392","claimProtocolFeesCaptured(address)":"2d0f6f84","crossChainContracts(uint256)":"09474ae2","disableL1TokenForLiquidityProvision(address)":"0c501af9","disputeRootBundle()":"22395aaa","emergencyDeleteProposal()":"625997c0","enableL1TokenForLiquidityProvision(address)":"b60c2d7d","exchangeRateCurrent(address)":"e0f339e3","executeRootBundle(uint256,uint256,uint256[],int256[],int256[],uint8,address[],bytes32[])":"80c09a82","finder()":"b9a3c84c","getCurrentTime()":"29cb924d","haircutReserves(address,int256)":"26205d80","identifier()":"7998a1c4","liquidityUtilizationCurrent(address)":"a16fd6e9","liquidityUtilizationPostRelay(address,uint256)":"084d0513","liveness()":"6ad0690a","loadEthForL2Calls()":"69b62502","lpFeeRatePerSecond()":"11cfc159","lpTokenFactory()":"76ec08dd","multicall(bytes[])":"ac9650d8","owner()":"8da5cb5b","paused()":"5c975abb","poolRebalanceRoute(uint256,address)":"2d32d557","pooledTokens(address)":"f0056a7d","proposeRootBundle(uint256[],uint8,bytes32,bytes32,bytes32)":"8bda0c00","protocolFeeCaptureAddress()":"240f475f","protocolFeeCapturePct()":"4f7473ff","relaySpokePoolAdminFunction(uint256,bytes)":"dd70e5e8","removeLiquidity(address,uint256,bool)":"0ee28a88","renounceOwnership()":"715018a6","rootBundleProposal()":"4144fd61","setBond(address,uint256)":"33dc09ca","setCrossChainContracts(uint256,address,address)":"e460e35c","setCurrentTime(uint256)":"22f8e566","setDepositRoute(uint256,uint256,address,bool)":"56864f38","setIdentifier(bytes32)":"00c99206","setLiveness(uint32)":"cd949995","setPaused(bool)":"16c38b3c","setPoolRebalanceRoute(uint256,address,address)":"10b99527","setProtocolFeeCapture(address,uint256)":"00660b53","sync(address)":"a5841194","timerAddress()":"1c39c38d","transferOwnership(address)":"f2fde38b","unclaimedAccumulatedProtocolFees(address)":"e40064d7","weth()":"3fc8cef3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract LpTokenFactoryInterface\",\"name\":\"_lpTokenFactory\",\"type\":\"address\"},{\"internalType\":\"contract FinderInterface\",\"name\":\"_finder\",\"type\":\"address\"},{\"internalType\":\"contract WETH9Interface\",\"name\":\"_weth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_timer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newBondToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBondAmount\",\"type\":\"uint256\"}],\"name\":\"BondSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"l2ChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"adapter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spokePool\",\"type\":\"address\"}],\"name\":\"CrossChainContractsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolRebalanceRoot\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"relayerRefundRoot\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"slowRelayRoot\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"}],\"name\":\"EmergencyRootBundleDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newIdentifier\",\"type\":\"bytes32\"}],\"name\":\"IdentifierSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"}],\"name\":\"L1TokenEnabledForLiquidityProvision\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"}],\"name\":\"L2TokenDisabledForLiquidityProvision\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpTokensMinted\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpTokensBurnt\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newLiveness\",\"type\":\"uint256\"}],\"name\":\"LivenessSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"challengePeriodEndTimestamp\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"poolRebalanceLeafCount\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"bundleEvaluationBlockNumbers\",\"type\":\"uint256[]\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolRebalanceRoot\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"relayerRefundRoot\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"slowRelayRoot\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"}],\"name\":\"ProposeRootBundle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newProtocolFeeCaptureAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newProtocolFeeCapturePct\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeeCaptureSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"accumulatedFees\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeesCapturedClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestTime\",\"type\":\"uint256\"}],\"name\":\"RootBundleCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestTime\",\"type\":\"uint256\"}],\"name\":\"RootBundleDisputed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"groupIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"leafId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"l1Tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"bundleLpFees\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"netSendAmounts\",\"type\":\"int256[]\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"runningBalances\",\"type\":\"int256[]\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"RootBundleExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"depositsEnabled\",\"type\":\"bool\"}],\"name\":\"SetEnableDepositRoute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destinationToken\",\"type\":\"address\"}],\"name\":\"SetPoolRebalanceRoute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"SpokePoolAdminFunctionTriggered\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"l1TokenAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bondAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bondToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"}],\"name\":\"claimProtocolFeesCaptured\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"crossChainContracts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"adapter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spokePool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"}],\"name\":\"disableL1TokenForLiquidityProvision\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disputeRootBundle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyDeleteProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"}],\"name\":\"enableL1TokenForLiquidityProvision\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"}],\"name\":\"exchangeRateCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"groupIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"bundleLpFees\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"netSendAmounts\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"runningBalances\",\"type\":\"int256[]\"},{\"internalType\":\"uint8\",\"name\":\"leafId\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"l1Tokens\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"executeRootBundle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finder\",\"outputs\":[{\"internalType\":\"contract FinderInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"haircutAmount\",\"type\":\"int256\"}],\"name\":\"haircutReserves\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"}],\"name\":\"liquidityUtilizationCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"relayedAmount\",\"type\":\"uint256\"}],\"name\":\"liquidityUtilizationPostRelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liveness\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"loadEthForL2Calls\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpFeeRatePerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpTokenFactory\",\"outputs\":[{\"internalType\":\"contract LpTokenFactoryInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"}],\"name\":\"poolRebalanceRoute\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"destinationToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pooledTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"lastLpFeeUpdate\",\"type\":\"uint32\"},{\"internalType\":\"int256\",\"name\":\"utilizedReserves\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"liquidReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"undistributedLpFees\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"bundleEvaluationBlockNumbers\",\"type\":\"uint256[]\"},{\"internalType\":\"uint8\",\"name\":\"poolRebalanceLeafCount\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"poolRebalanceRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"relayerRefundRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"slowRelayRoot\",\"type\":\"bytes32\"}],\"name\":\"proposeRootBundle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeCaptureAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeCapturePct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"functionData\",\"type\":\"bytes\"}],\"name\":\"relaySpokePoolAdminFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lpTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sendEth\",\"type\":\"bool\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rootBundleProposal\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolRebalanceRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"relayerRefundRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"slowRelayRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"claimedBitMap\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"unclaimedPoolRebalanceLeafCount\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"challengePeriodEndTimestamp\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"newBondToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newBondAmount\",\"type\":\"uint256\"}],\"name\":\"setBond\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"l2ChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"adapter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spokePool\",\"type\":\"address\"}],\"name\":\"setCrossChainContracts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setCurrentTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"depositsEnabled\",\"type\":\"bool\"}],\"name\":\"setDepositRoute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newIdentifier\",\"type\":\"bytes32\"}],\"name\":\"setIdentifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"newLiveness\",\"type\":\"uint32\"}],\"name\":\"setLiveness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"pause\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destinationToken\",\"type\":\"address\"}],\"name\":\"setPoolRebalanceRoute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newProtocolFeeCaptureAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newProtocolFeeCapturePct\",\"type\":\"uint256\"}],\"name\":\"setProtocolFeeCapture\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"}],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"unclaimedAccumulatedProtocolFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"contract WETH9Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract should be deprecated by the year 2106, at which point uint32 timestamps will roll over. This is an issue for this contract because fee calculations will become bizarre when multiplying by negative time deltas. Before this date, this contract should be paused from accepting new root bundles and all LP tokens should be disabled by the admin.\",\"kind\":\"dev\",\"methods\":{\"addLiquidity(address,uint256)\":{\"params\":{\"l1Token\":\"Token to deposit into this contract.\",\"l1TokenAmount\":\"Amount of liquidity to provide.\"}},\"claimProtocolFeesCaptured(address)\":{\"params\":{\"l1Token\":\"Token whose protocol fees the caller wants to disburse.\"}},\"constructor\":{\"params\":{\"_finder\":\"Finder address.\",\"_lpTokenFactory\":\"LP Token factory address used to deploy LP tokens for new collateral types.\",\"_timer\":\"Timer address.\",\"_weth\":\"WETH address.\"}},\"disableL1TokenForLiquidityProvision(address)\":{\"params\":{\"l1Token\":\"Token to disable liquidity provision for.\"}},\"emergencyDeleteProposal()\":{\"details\":\"This is primarily intended to rectify situations where an unexecutable bundle gets through liveness in the case of a non-malicious bug in the proposal/dispute code. Without this function, the contract would be indefinitely blocked, migration would be required, and in-progress transfers would never be repaid.\"},\"enableL1TokenForLiquidityProvision(address)\":{\"params\":{\"l1Token\":\"Token to provide liquidity for.\"}},\"exchangeRateCurrent(address)\":{\"params\":{\"l1Token\":\"L1 token redeemable by burning LP token.\"},\"returns\":{\"_0\":\"Amount of L1 tokens redeemable for 1 unit LP token.\"}},\"executeRootBundle(uint256,uint256,uint256[],int256[],int256[],uint8,address[],bytes32[])\":{\"details\":\"In some cases, will instruct spokePool to send funds back to L1.\",\"params\":{\"bundleLpFees\":\"Array representing the total LP fee amount per token in this bundle for all bundled relays.\",\"chainId\":\"ChainId number of the target spoke pool on which the bundle is executed.\",\"groupIndex\":\"If set to 0, then relay roots to SpokePool via cross chain bridge. Used by off-chain validator to organize leaves with the same chain ID and also set which leaves should result in relayed messages.\",\"l1Tokens\":\"Array of all the tokens associated with the bundleLpFees, nedSendAmounts and runningBalances.\",\"leafId\":\"Index of this executed leaf within the poolRebalance tree.\",\"netSendAmounts\":\"Array representing the amount of tokens to send to the SpokePool on the target chainId.\",\"proof\":\"Inclusion proof for this leaf in pool rebalance root in root bundle.\",\"runningBalances\":\"Array used to track any unsent tokens that are not included in the netSendAmounts.\"}},\"getCurrentTime()\":{\"returns\":{\"_0\":\"uint for the current Testable timestamp.\"}},\"haircutReserves(address,int256)\":{\"params\":{\"haircutAmount\":\"The amount of reserves to haircut the LPs by.\",\"l1Token\":\"Token to execute the haircut on.\"}},\"liquidityUtilizationCurrent(address)\":{\"params\":{\"l1Token\":\"L1 token to query utilization for.\"},\"returns\":{\"_0\":\"% of liquid reserves currently being \\\"used\\\" and sitting in SpokePools.\"}},\"liquidityUtilizationPostRelay(address,uint256)\":{\"params\":{\"l1Token\":\"L1 token to query utilization for.\",\"relayedAmount\":\"The higher this amount, the higher the utilization.\"},\"returns\":{\"_0\":\"% of liquid reserves currently being \\\"used\\\" and sitting in SpokePools plus the relayedAmount.\"}},\"loadEthForL2Calls()\":{\"details\":\"This function cannot be included in a multicall transaction call because it is payable. A realistic situation where this might be an issue is if the caller is executing a PoolRebalanceLeaf that needs to relay messages to Arbitrum. Relaying messages to Arbitrum requires that this contract has an ETH balance, so in this case the caller would need to pre-load this contract with ETH before multicall-executing the leaf.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"poolRebalanceRoute(uint256,address)\":{\"details\":\"Admin must be considerate to the compatibility of originToken and destinationToken within the protocol. Some token implementations will not function correctly within the Across v2 system. For example ERC20s that charge fees will break internal accounting, ERC777 can cause some functions to revert and upgradable tokens can pose risks if the implementation is shifted between whitelisting and usage.If the pool rebalance route is not whitelisted then this will return address(0).\",\"params\":{\"destinationChainId\":\"Where destination token is deployed.\",\"l1Token\":\"Ethereum version token.\"},\"returns\":{\"destinationToken\":\"address The destination token that is sent to spoke pools after this contract bridges the l1Token to the destination chain.\"}},\"proposeRootBundle(uint256[],uint8,bytes32,bytes32,bytes32)\":{\"params\":{\"bundleEvaluationBlockNumbers\":\"should contain the latest block number for all chains, even if there are no relays contained on some of them. The usage of this variable should be defined in an off chain UMIP.\",\"poolRebalanceLeafCount\":\"Number of leaves contained in pool rebalance root. Max is # of whitelisted chains.\",\"poolRebalanceRoot\":\"Pool rebalance root containing leaves that sends tokens from this contract to SpokePool.\",\"relayerRefundRoot\":\"Relayer refund root to publish to SpokePool where a data worker can execute leaves to refund relayers on their chosen refund chainId.\",\"slowRelayRoot\":\"Slow relay root to publish to Spoke Pool where a data worker can execute leaves to fulfill slow relays.\"}},\"relaySpokePoolAdminFunction(uint256,bytes)\":{\"details\":\"This function has permission to call onlyAdmin functions on the SpokePool, so it's imperative that this contract only allows the owner to call this method directly or indirectly.\",\"params\":{\"chainId\":\"Chain with SpokePool to send message to.\",\"functionData\":\"ABI encoded function call to send to SpokePool, but can be any arbitrary data technically.\"}},\"removeLiquidity(address,uint256,bool)\":{\"params\":{\"l1Token\":\"Token to redeem LP share for.\",\"lpTokenAmount\":\"Amount of LP tokens to burn. Exchange rate between L1 token and LP token can be queried via public exchangeRateCurrent method.\",\"sendEth\":\"Set to True if L1 token is WETH and user wants to receive ETH. Note that if caller is a contract, then the contract should have a way to receive ETH if this value is set to True. Similarly, if this value is set to False, then the calling contract should have a way to handle WETH.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setBond(address,uint256)\":{\"params\":{\"newBondAmount\":\"New bond amount.\",\"newBondToken\":\"New bond currency.\"}},\"setCrossChainContracts(uint256,address,address)\":{\"details\":\"We do not block setting the adapter or SpokePool to invalid/zero addresses because we want to allow the admin to block relaying roots to the spoke pool for emergency recovery purposes.\",\"params\":{\"adapter\":\"Adapter used to relay messages and tokens to spoke pool. Deployed on current chain.\",\"l2ChainId\":\"Chain to set contracts for.\",\"spokePool\":\"Recipient of relayed messages and tokens on spoke pool. Deployed on l2ChainId.\"}},\"setCurrentTime(uint256)\":{\"details\":\"Will revert if not running in test mode.\",\"params\":{\"time\":\"timestamp to set current Testable time to.\"}},\"setDepositRoute(uint256,uint256,address,bool)\":{\"details\":\"Admin is responsible for ensuring that `originToken` is linked to some L1 token on this contract, via poolRebalanceRoutes(), and that this L1 token also has a counterpart on the destination chain. If either condition fails, then the deposit will be unrelayable by off-chain relayers because they will not know which token to relay to recipients on the destination chain, and data workers wouldn't know which L1 token to send to the destination chain to refund the relayer.\",\"params\":{\"depositsEnabled\":\"Set to true to whitelist this route for deposits, set to false if caller just wants to map the origin token + destination ID to the destination token address on the origin chain's SpokePool.\",\"destinationChainId\":\"Chain where token depositor wants to receive funds.\",\"originChainId\":\"Chain where token deposit occurs.\",\"originToken\":\"Token sent in deposit.\"}},\"setIdentifier(bytes32)\":{\"params\":{\"newIdentifier\":\"New identifier.\"}},\"setLiveness(uint32)\":{\"params\":{\"newLiveness\":\"New liveness period.\"}},\"setPaused(bool)\":{\"params\":{\"pause\":\"true if the call is meant to pause the system, false if the call is meant to unpause it.\"}},\"setPoolRebalanceRoute(uint256,address,address)\":{\"details\":\"Admin can set destinationToken to 0x0 to effectively disable executing any root bundles with leaves containing this l1 token + destination chain ID combination.\",\"params\":{\"destinationChainId\":\"Destination chain where destination token resides.\",\"destinationToken\":\"Destination chain counterpart of L1 token.\",\"l1Token\":\"Token enabled for liquidity in this pool, and the L1 counterpart to the destination token on the destination chain ID.\"}},\"setProtocolFeeCapture(address,uint256)\":{\"params\":{\"newProtocolFeeCaptureAddress\":\"New protocol fee capture address.\",\"newProtocolFeeCapturePct\":\"New protocol fee capture %.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addLiquidity(address,uint256)\":{\"notice\":\"Deposit liquidity into this contract to earn LP fees in exchange for funding relays on SpokePools. Caller is essentially loaning their funds to be sent from this contract to the SpokePool, where it will be used to repay a relayer, and ultimately receives their loan back after the tokens are bridged back to this contract via the canonical token bridge. Then, the caller's loans are used again. This loan cycle repeats continuously and the caller, or \\\"liquidity provider\\\" earns a continuous fee for their credit that they are extending relayers.Caller will receive an LP token representing their share of this pool. The LP token's redemption value increments from the time that they enter the pool to reflect their accrued fees.The caller of this function must approve this contract to spend l1TokenAmount of l1Token.\"},\"claimProtocolFeesCaptured(address)\":{\"notice\":\"Send unclaimed accumulated protocol fees to fee capture address.\"},\"constructor\":{\"notice\":\"Construct HubPool.\"},\"disableL1TokenForLiquidityProvision(address)\":{\"notice\":\"Disables LPs from providing liquidity for L1 token. Callable only by owner.\"},\"disputeRootBundle()\":{\"notice\":\"Caller stakes a bond to dispute the current root bundle proposal assuming it has not passed liveness yet. The proposal is deleted, allowing a follow-up proposal to be submitted, and the dispute is sent to the optimistic oracle to be adjudicated. Can only be called within the liveness period of the current proposal.The caller of this function must approve this contract to spend bondAmount of l1Token.\"},\"emergencyDeleteProposal()\":{\"notice\":\"This allows for the deletion of the active proposal in case of emergency.\"},\"enableL1TokenForLiquidityProvision(address)\":{\"notice\":\"Enables LPs to provide liquidity for L1 token. Deploys new LP token for L1 token if appropriate. Callable only by owner.\"},\"exchangeRateCurrent(address)\":{\"notice\":\"Returns exchange rate of L1 token to LP token.\"},\"executeRootBundle(uint256,uint256,uint256[],int256[],int256[],uint8,address[],bytes32[])\":{\"notice\":\"Executes a pool rebalance leaf as part of the currently published root bundle. Will bridge any tokens from this contract to the SpokePool designated in the leaf, and will also publish relayer refund and slow relay roots to the SpokePool on the network specified in the leaf.\"},\"getCurrentTime()\":{\"notice\":\"Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp.\"},\"haircutReserves(address,int256)\":{\"notice\":\"Enables the owner of the protocol to haircut reserves in the event of an irrecoverable loss of funds on one of the L2s. Consider funds are lent out onto a L2 that dies irrecoverably. This value will offset the exchangeRateCurrent such that all LPs receive a pro rata loss of the the reserves. Should be used in conjunction with pause logic to prevent LPs from adding/withdrawing liquidity during the haircut process. Callable only by owner.\"},\"liquidityUtilizationCurrent(address)\":{\"notice\":\"Returns % of liquid reserves currently being \\\"used\\\" and sitting in SpokePools.\"},\"liquidityUtilizationPostRelay(address,uint256)\":{\"notice\":\"Returns % of liquid reserves currently being \\\"used\\\" and sitting in SpokePools and accounting for relayedAmount of tokens to be withdrawn from the pool.\"},\"loadEthForL2Calls()\":{\"notice\":\"This function allows a caller to load the contract with raw ETH to perform L2 calls. This is needed for Arbitrum calls, but may also be needed for others.\"},\"poolRebalanceRoute(uint256,address)\":{\"notice\":\"Conveniently queries which destination token is mapped to the hash of an l1 token + destination chain ID.\"},\"proposeRootBundle(uint256[],uint8,bytes32,bytes32,bytes32)\":{\"notice\":\"Publish a new root bundle along with all of the block numbers that the merkle roots are relevant for. This is used to aid off-chain validators in evaluating the correctness of this bundle. Caller stakes a bond that can be slashed if the root bundle proposal is invalid, and they will receive it back if accepted.After proposeRootBundle is called, if the any props are wrong then this proposal can be challenged. Once the challenge period passes, then the roots are no longer disputable, and only executeRootBundle can be called; moreover, this method can't be called again until all leaves are executed.The caller of this function must approve this contract to spend bondAmount of bondToken.\"},\"relaySpokePoolAdminFunction(uint256,bytes)\":{\"notice\":\"Sends message to SpokePool from this contract. Callable only by owner.\"},\"removeLiquidity(address,uint256,bool)\":{\"notice\":\"Burns LP share to redeem for underlying l1Token original deposit amount plus fees.\"},\"setBond(address,uint256)\":{\"notice\":\"Sets bond token and amount. Callable only by owner.\"},\"setCrossChainContracts(uint256,address,address)\":{\"notice\":\"Sets cross chain relay helper contracts for L2 chain ID. Callable only by owner.\"},\"setCurrentTime(uint256)\":{\"notice\":\"Sets the current time.\"},\"setDepositRoute(uint256,uint256,address,bool)\":{\"notice\":\"Sends cross-chain message to SpokePool on originChainId to enable or disable deposit route from that SpokePool to another one. Callable only by owner.\"},\"setIdentifier(bytes32)\":{\"notice\":\"Sets identifier for root bundle disputes. Callable only by owner.\"},\"setLiveness(uint32)\":{\"notice\":\"Sets root bundle proposal liveness period. Callable only by owner.\"},\"setPaused(bool)\":{\"notice\":\"Pauses the bundle proposal and execution process. This is intended to be used during upgrades or when something goes awry.\"},\"setPoolRebalanceRoute(uint256,address,address)\":{\"notice\":\"Store canonical destination token counterpart for l1 token. Callable only by owner.\"},\"setProtocolFeeCapture(address,uint256)\":{\"notice\":\"Sets protocolFeeCaptureAddress and protocolFeeCapturePct. Callable only by owner.\"},\"sync(address)\":{\"notice\":\"Synchronize any balance changes in this contract with the utilized & liquid reserves. This should be done at the conclusion of a L2->L1 token transfer via the canonical token bridge, when this contract's reserves do not reflect its true balance due to new tokens being dropped onto the contract at the conclusion of a bridging action.\"}},\"notice\":\"Contract deployed on Ethereum that houses L1 token liquidity for all SpokePools. A dataworker can interact with merkle roots stored in this contract via inclusion proofs to instruct this contract to send tokens to L2 SpokePools via \\\"pool rebalances\\\" that can be used to pay out relayers on those networks. This contract is also responsible for publishing relayer refund and slow relay merkle roots to SpokePools.This contract is meant to act as the cross chain administrator and owner of all L2 spoke pools, so all governance actions and pool rebalances originate from here and bridge instructions to L2s.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HubPool.sol\":\"HubPool\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"@openzeppelin/contracts/utils/math/SignedSafeMath.sol\":{\"keccak256\":\"0x62f53f262fabbbc6d8ab49488d8fce36370351aff2b8d3898d499d68995a71c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efd599513c2f313a3f5e9536beb2b80a0d2b3dd34202c174a707d81b7dc751ce\",\"dweb:/ipfs/QmdDiENVFSyWjfFskNLnViMH77DHg3oDthkSZk7dMzNNKB\"]},\"@uma/core/contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0x996b97cc4fa5da4064e3aee500edc6972485d59a9334ceec81155e2c2f484dae\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8d7c028926dc2b27e7dc103363dca8a43f60b3351f4a14bcb702660f95c68663\",\"dweb:/ipfs/QmXz4ieFjP5RxJ35F8GbPryYEGvFmxc4Gqx8EK7N57ixzT\"]},\"@uma/core/contracts/common/implementation/MultiCaller.sol\":{\"keccak256\":\"0x9f6afe5bafc5e16fe8d63010a740ec3a88a9f00a7236ea7e5b039a2f50eb346e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a971572a4a9ed32e5ec15ac384af593d9499778f6ec593dbdba67d44ced4c7d8\",\"dweb:/ipfs/QmbdpfhhnUyoHWe7TPFBZxT6R6zyxJEDcGBNwDt5ncweRv\"]},\"@uma/core/contracts/common/implementation/Testable.sol\":{\"keccak256\":\"0x0254b45747293bb800373a58d123969adec0428f7be79dc941cab10fcad09918\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://537d694e3753596f507d071f283be9caeaad0010c444c9c9955d729affeb4907\",\"dweb:/ipfs/QmZ1WfVTBao11QaN6aygMhnt45UjRq77ZwfKPFmHiVSdaJ\"]},\"@uma/core/contracts/common/implementation/Timer.sol\":{\"keccak256\":\"0x9e0dd7389718bd5d1da910273a6f4cee98ee22bfc0c92bde0f0955c0e23adb5e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7ddac8d3cb76f8811156a11a7702d7c05b15a0f18c22b5abdc318723193f9266\",\"dweb:/ipfs/QmPxL7AU8NkURJaZ6WxXNcw88wGMSoPX4jbt7SMdPJqtYv\"]},\"@uma/core/contracts/common/interfaces/AddressWhitelistInterface.sol\":{\"keccak256\":\"0x22fb8588dff1d5cff76a28111d6c9b190765d99facd93c8ff3b54771f245c0d8\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5ecd993f00de290a3c7bf21da23a9439cf2ccb22028316df92b79780ac8aa533\",\"dweb:/ipfs/QmTZ7x7U4EEzTacqapzSdFs2np5WNsqm4XeUBqzQxxDJei\"]},\"@uma/core/contracts/common/interfaces/ExpandedIERC20.sol\":{\"keccak256\":\"0xb8252039cba45f1c19cd677f150a9823a5d6e1845cad90e3041d97c96f273c26\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://95106656c95e12c30a2a4c482a859df6df55c3b56bb9f7835eb5c685ca3175d3\",\"dweb:/ipfs/QmcuJoX7T53vTCDcQK8WcCJdT1LzHS35vPmSVfg1DG32cd\"]},\"@uma/core/contracts/data-verification-mechanism/implementation/Constants.sol\":{\"keccak256\":\"0xe40957105a9240c6bcb9753fd0011fe9f382c437cd6771c57bf7a96f8ceb9c84\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://cbf0d25e841b1f5c4022d09fb29220cb428139443cb29c4ab8dbfff71dffcc05\",\"dweb:/ipfs/QmSVVr5wH1tZi6WmKyuy1K8yS6JN4DeK5kWaZpPKtXiqkK\"]},\"@uma/core/contracts/data-verification-mechanism/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81\",\"dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf\"]},\"@uma/core/contracts/data-verification-mechanism/interfaces/IdentifierWhitelistInterface.sol\":{\"keccak256\":\"0x9ae86a30dd1a8c03fb2c6d27be570bb30c4c0b13ac63cde8620b7e4b51d88dc9\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a71d2aff48e075ecab56a9c9767775d1d77e04ec9191fed124e71003220549e3\",\"dweb:/ipfs/QmYPWsZXro6fzqpZY6UxQ5X8znEXfLp2sun8oXzdz8bTyc\"]},\"@uma/core/contracts/data-verification-mechanism/interfaces/StoreInterface.sol\":{\"keccak256\":\"0xbb73671684309c91ad5ef3da1474051d03f2e7d5882bed7f5c4317e5d4c768df\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://32386544d3119fd0187a8c4e8b01c739f508ab863faa04345cabc2544081f9e8\",\"dweb:/ipfs/QmYszDURs1x75rsejZkGt9zCkASXnJtufbNsL3XHe2eJPQ\"]},\"@uma/core/contracts/optimistic-oracle-v2/interfaces/OptimisticOracleInterface.sol\":{\"keccak256\":\"0xfac07e0c25da341d65305c0b06004027b7ddc9f3a3e3aae1d39c3a59597f3c9b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2bff7b22f1c9cbc6dc5bd8d3324ab37b2e293f973c592510b3240920c94ebdee\",\"dweb:/ipfs/QmUiTWPC7qpoME3CWBSWEioszs5zt7oseUPBKHzQbHaoDv\"]},\"@uma/core/contracts/optimistic-oracle-v2/interfaces/SkinnyOptimisticOracleInterface.sol\":{\"keccak256\":\"0x91d21e44a97b719106e8f97b99399a3d8dc3697badd01df06518892f38fe033f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://68c350c822b256b43543ac4dd3dd1413ed95f25a9415d5dba4c562cd11d55716\",\"dweb:/ipfs/QmZyYeBnM59oPmWcK1KERNayg7xuHv12sLzzmqC42Lq76a\"]},\"contracts/HubPool.sol\":{\"keccak256\":\"0x0c190bf79c1184cf7f1dc189443090e980218dd35273de159e42940f55d99524\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e99fec68bd3e386f4ccc508ca0f6ed2b7a30de04ed7d8d4d29eff0c15e51f526\",\"dweb:/ipfs/QmZ7RLEt1hiE3x6J9adbmXoTjQ4jZSeB8BsczLr9y862pr\"]},\"contracts/Lockable.sol\":{\"keccak256\":\"0xb097e860ea2e8448cd8ee93d1420aecb1d8fb397301941f28754fb6dc90a7be3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://87155060a64f8f91856d5bd1eecf1fe4d3ff5bb4c48c45f29708251d162f4510\",\"dweb:/ipfs/QmTZKjjzSheCBF2JQ3xLFJNuhQuVup66Xmpn4TbCgH8EEn\"]},\"contracts/MerkleLib.sol\":{\"keccak256\":\"0x8c5c0ae815ea4b121a6afcf163c7b8b0de18212db1228350f89fa5dd0bb54365\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c1eb160f6b614d6721c0ab8e6149ff192cab1768ee266cb1941c5c1a7d304675\",\"dweb:/ipfs/QmYwowK4FzZXwoZS4TvwLQD77Gk66eWKZpg2ETUpXfrN7X\"]},\"contracts/external/interfaces/WETH9Interface.sol\":{\"keccak256\":\"0x3f7892554ec7f54681fdd3cc18a41346c246c9c1afba016c52990ef77741f718\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://76e901f8da798eb2fdef8fd0083a51088103269f08ee751598c5a6eba407785f\",\"dweb:/ipfs/QmcAHbwbwCZd78teaK4cHuAvXq71aWX1r9vTGkSRRBDJV1\"]},\"contracts/interfaces/HubPoolInterface.sol\":{\"keccak256\":\"0xefd509ab379b94004b5767d67971e5c0bda4ca1e9f376b5aea75a0297b5d7bd6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0b7e509e90bcca9b96bf55e92498b17bbb548359c470b17285740080a6c0d9de\",\"dweb:/ipfs/QmdviQBbB58H9HR3tKQepEuYcMKXZthyTThGXUgQDAC828\"]},\"contracts/interfaces/LpTokenFactoryInterface.sol\":{\"keccak256\":\"0x2635ebf23073eee29bc68003658adc1ef705c1d1f1f36f6ed19408f5e0bf7ab6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://06df0843f5a5291624d6a4270ce014d8e212d675d60e63bb5c6ab374203e103a\",\"dweb:/ipfs/QmUKoFVRdQM5BJaFdfrErLWUfsebQZGb4eD211yKz4v6XA\"]},\"contracts/interfaces/SpokePoolInterface.sol\":{\"keccak256\":\"0x5089df2f8d40f9afad742d059966a34a42fae5dd61ab9274585d303ca4bb6489\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://46f884dee4c3de680f45f66a5b2a34b41423ac818a736d5c108eb334f0fdf411\",\"dweb:/ipfs/QmdNJ2w2CEGkHv2rS4vYKNNdPjZALtCPJf4sQKzRW3ARzd\"]},\"contracts/interfaces/V3SpokePoolInterface.sol\":{\"keccak256\":\"0xdd33112f0dc8f8462307cda7d7753cb9be49cd209b6520abd69273ac015f7ab6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://211c34424710bc8a4ab41bf00bdd9df32e139642a3007a7bbe1e60020f943d2f\",\"dweb:/ipfs/QmYVM5c84V4iqKy734Sjq4TFKMJyJ3cQLHB2Katz1pTBZz\"]}},\"version\":1}"}},"contracts/Lockable.sol":{"Lockable":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601e57600160ff195f5416175f556039908160238239f35b5f80fdfe5f80fdfea2646970667358221220c617d152e5ad77d8bfc5a1732480c3c763819a40d857c8aefa48bde04f742c4f64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1E JUMPI PUSH1 0x1 PUSH1 0xFF NOT PUSH0 SLOAD AND OR PUSH0 SSTORE PUSH1 0x39 SWAP1 DUP2 PUSH1 0x23 DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 OR 0xD1 MSTORE 0xE5 0xAD PUSH24 0xD8BFC5A1732480C3C763819A40D857C8AEFA48BDE04F742C 0x4F PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"657:2837:22:-:0;;;;;;;1141:4;657:2837;;1127:18;657:2837;;;1127:18;657:2837;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220c617d152e5ad77d8bfc5a1732480c3c763819a40d857c8aefa48bde04f742c4f64736f6c63430008170033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 OR 0xD1 MSTORE 0xE5 0xAD PUSH24 0xD8BFC5A1732480C3C763819A40D857C8AEFA48BDE04F742C 0x4F PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"657:2837:22:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"details\":\"The reason why we use this local contract instead of importing from uma/contracts is because of the addition of the internal method `functionCallStackOriginatesFromOutsideThisContract` which doesn't exist in the one exported by uma/contracts.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract that provides modifiers to prevent reentrancy to state-changing and view-only methods. This contract is inspired by https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/ReentrancyGuard.sol and https://github.com/balancer-labs/balancer-core/blob/master/contracts/BPool.sol.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Lockable.sol\":\"Lockable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Lockable.sol\":{\"keccak256\":\"0xb097e860ea2e8448cd8ee93d1420aecb1d8fb397301941f28754fb6dc90a7be3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://87155060a64f8f91856d5bd1eecf1fe4d3ff5bb4c48c45f29708251d162f4510\",\"dweb:/ipfs/QmTZKjjzSheCBF2JQ3xLFJNuhQuVup66Xmpn4TbCgH8EEn\"]}},\"version\":1}"}},"contracts/MerkleLib.sol":{"MerkleLib":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220bd4db855a5975f6f0a2bd839a49c34b9b698996661463b12b0cdf8c59b271c5164736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0x4D 0xB8 SSTORE 0xA5 SWAP8 PUSH0 PUSH16 0xA2BD839A49C34B9B698996661463B12 0xB0 0xCD 0xF8 0xC5 SWAP12 0x27 SHR MLOAD PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"345:4692:23:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220bd4db855a5975f6f0a2bd839a49c34b9b698996661463b12b0cdf8c59b271c5164736f6c63430008170033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0x4D 0xB8 SSTORE 0xA5 SWAP8 PUSH0 PUSH16 0xA2BD839A49C34B9B698996661463B12 0xB0 0xCD 0xF8 0xC5 SWAP12 0x27 SHR MLOAD PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"345:4692:23:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Library to help with merkle roots, proofs, and claims.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MerkleLib.sol\":\"MerkleLib\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"contracts/MerkleLib.sol\":{\"keccak256\":\"0x8c5c0ae815ea4b121a6afcf163c7b8b0de18212db1228350f89fa5dd0bb54365\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c1eb160f6b614d6721c0ab8e6149ff192cab1768ee266cb1941c5c1a7d304675\",\"dweb:/ipfs/QmYwowK4FzZXwoZS4TvwLQD77Gk66eWKZpg2ETUpXfrN7X\"]},\"contracts/interfaces/HubPoolInterface.sol\":{\"keccak256\":\"0xefd509ab379b94004b5767d67971e5c0bda4ca1e9f376b5aea75a0297b5d7bd6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0b7e509e90bcca9b96bf55e92498b17bbb548359c470b17285740080a6c0d9de\",\"dweb:/ipfs/QmdviQBbB58H9HR3tKQepEuYcMKXZthyTThGXUgQDAC828\"]},\"contracts/interfaces/SpokePoolInterface.sol\":{\"keccak256\":\"0x5089df2f8d40f9afad742d059966a34a42fae5dd61ab9274585d303ca4bb6489\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://46f884dee4c3de680f45f66a5b2a34b41423ac818a736d5c108eb334f0fdf411\",\"dweb:/ipfs/QmdNJ2w2CEGkHv2rS4vYKNNdPjZALtCPJf4sQKzRW3ARzd\"]},\"contracts/interfaces/V3SpokePoolInterface.sol\":{\"keccak256\":\"0xdd33112f0dc8f8462307cda7d7753cb9be49cd209b6520abd69273ac015f7ab6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://211c34424710bc8a4ab41bf00bdd9df32e139642a3007a7bbe1e60020f943d2f\",\"dweb:/ipfs/QmYVM5c84V4iqKy734Sjq4TFKMJyJ3cQLHB2Katz1pTBZz\"]}},\"version\":1}"}},"contracts/external/interfaces/WETH9Interface.sol":{"WETH9Interface":{"abi":[{"inputs":[{"internalType":"address","name":"guy","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"wad","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"guy","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address)":"70a08231","deposit()":"d0e30db0","transfer(address,uint256)":"a9059cbb","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"params\":{\"guy\":\"Address to get balance of.\"},\"returns\":{\"wad\":\"Amount of WETH held by `guy`.\"}},\"deposit()\":{\"details\":\"msg.value is amount of Wrapped Ether to mint/Ether to lock.\"},\"transfer(address,uint256)\":{\"params\":{\"guy\":\"Address to send WETH to.\",\"wad\":\"Amount of WETH to send.\"},\"returns\":{\"_0\":\"ok True if transfer succeeded.\"}},\"withdraw(uint256)\":{\"params\":{\"wad\":\"Amount of WETH to unwrap and send to caller.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address)\":{\"notice\":\"Get balance of WETH held by `guy`.\"},\"deposit()\":{\"notice\":\"Lock native Ether and mint Wrapped Ether ERC20\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer `wad` of WETH from caller to `guy`.\"},\"withdraw(uint256)\":{\"notice\":\"Burn Wrapped Ether and receive native Ether.\"}},\"notice\":\"Interface for the WETH9 contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/external/interfaces/WETH9Interface.sol\":\"WETH9Interface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/external/interfaces/WETH9Interface.sol\":{\"keccak256\":\"0x3f7892554ec7f54681fdd3cc18a41346c246c9c1afba016c52990ef77741f718\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://76e901f8da798eb2fdef8fd0083a51088103269f08ee751598c5a6eba407785f\",\"dweb:/ipfs/QmcAHbwbwCZd78teaK4cHuAvXq71aWX1r9vTGkSRRBDJV1\"]}},\"version\":1}"}},"contracts/interfaces/HubPoolInterface.sol":{"HubPoolInterface":{"abi":[{"inputs":[{"internalType":"address","name":"l1Token","type":"address"},{"internalType":"uint256","name":"l1TokenAmount","type":"uint256"}],"name":"addLiquidity","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"l1Token","type":"address"}],"name":"claimProtocolFeesCaptured","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"l1Token","type":"address"}],"name":"disableL1TokenForLiquidityProvision","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"disputeRootBundle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"emergencyDeleteProposal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"l1Token","type":"address"}],"name":"enableL1TokenForLiquidityProvision","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"l1Token","type":"address"}],"name":"exchangeRateCurrent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"uint256","name":"groupIndex","type":"uint256"},{"internalType":"uint256[]","name":"bundleLpFees","type":"uint256[]"},{"internalType":"int256[]","name":"netSendAmounts","type":"int256[]"},{"internalType":"int256[]","name":"runningBalances","type":"int256[]"},{"internalType":"uint8","name":"leafId","type":"uint8"},{"internalType":"address[]","name":"l1Tokens","type":"address[]"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"executeRootBundle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"l1Token","type":"address"}],"name":"liquidityUtilizationCurrent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"l1Token","type":"address"},{"internalType":"uint256","name":"relayedAmount","type":"uint256"}],"name":"liquidityUtilizationPostRelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"loadEthForL2Calls","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"address","name":"l1Token","type":"address"}],"name":"poolRebalanceRoute","outputs":[{"internalType":"address","name":"destinationToken","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"bundleEvaluationBlockNumbers","type":"uint256[]"},{"internalType":"uint8","name":"poolRebalanceLeafCount","type":"uint8"},{"internalType":"bytes32","name":"poolRebalanceRoot","type":"bytes32"},{"internalType":"bytes32","name":"relayerRefundRoot","type":"bytes32"},{"internalType":"bytes32","name":"slowRelayRoot","type":"bytes32"}],"name":"proposeRootBundle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"bytes","name":"functionData","type":"bytes"}],"name":"relaySpokePoolAdminFunction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"l1Token","type":"address"},{"internalType":"uint256","name":"lpTokenAmount","type":"uint256"},{"internalType":"bool","name":"sendEth","type":"bool"}],"name":"removeLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"newBondToken","type":"address"},{"internalType":"uint256","name":"newBondAmount","type":"uint256"}],"name":"setBond","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"l2ChainId","type":"uint256"},{"internalType":"address","name":"adapter","type":"address"},{"internalType":"address","name":"spokePool","type":"address"}],"name":"setCrossChainContracts","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"address","name":"originToken","type":"address"},{"internalType":"bool","name":"depositsEnabled","type":"bool"}],"name":"setDepositRoute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"newIdentifier","type":"bytes32"}],"name":"setIdentifier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"newLiveness","type":"uint32"}],"name":"setLiveness","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"pause","type":"bool"}],"name":"setPaused","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"address","name":"l1Token","type":"address"},{"internalType":"address","name":"destinationToken","type":"address"}],"name":"setPoolRebalanceRoute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newProtocolFeeCaptureAddress","type":"address"},{"internalType":"uint256","name":"newProtocolFeeCapturePct","type":"uint256"}],"name":"setProtocolFeeCapture","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"l1Token","type":"address"}],"name":"sync","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addLiquidity(address,uint256)":"56688700","claimProtocolFeesCaptured(address)":"2d0f6f84","disableL1TokenForLiquidityProvision(address)":"0c501af9","disputeRootBundle()":"22395aaa","emergencyDeleteProposal()":"625997c0","enableL1TokenForLiquidityProvision(address)":"b60c2d7d","exchangeRateCurrent(address)":"e0f339e3","executeRootBundle(uint256,uint256,uint256[],int256[],int256[],uint8,address[],bytes32[])":"80c09a82","liquidityUtilizationCurrent(address)":"a16fd6e9","liquidityUtilizationPostRelay(address,uint256)":"084d0513","loadEthForL2Calls()":"69b62502","poolRebalanceRoute(uint256,address)":"2d32d557","proposeRootBundle(uint256[],uint8,bytes32,bytes32,bytes32)":"8bda0c00","relaySpokePoolAdminFunction(uint256,bytes)":"dd70e5e8","removeLiquidity(address,uint256,bool)":"0ee28a88","setBond(address,uint256)":"33dc09ca","setCrossChainContracts(uint256,address,address)":"e460e35c","setDepositRoute(uint256,uint256,address,bool)":"56864f38","setIdentifier(bytes32)":"00c99206","setLiveness(uint32)":"cd949995","setPaused(bool)":"16c38b3c","setPoolRebalanceRoute(uint256,address,address)":"10b99527","setProtocolFeeCapture(address,uint256)":"00660b53","sync(address)":"a5841194"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"l1TokenAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"}],\"name\":\"claimProtocolFeesCaptured\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"}],\"name\":\"disableL1TokenForLiquidityProvision\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disputeRootBundle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyDeleteProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"}],\"name\":\"enableL1TokenForLiquidityProvision\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"}],\"name\":\"exchangeRateCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"groupIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"bundleLpFees\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"netSendAmounts\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"runningBalances\",\"type\":\"int256[]\"},{\"internalType\":\"uint8\",\"name\":\"leafId\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"l1Tokens\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"executeRootBundle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"}],\"name\":\"liquidityUtilizationCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"relayedAmount\",\"type\":\"uint256\"}],\"name\":\"liquidityUtilizationPostRelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"loadEthForL2Calls\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"}],\"name\":\"poolRebalanceRoute\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"destinationToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"bundleEvaluationBlockNumbers\",\"type\":\"uint256[]\"},{\"internalType\":\"uint8\",\"name\":\"poolRebalanceLeafCount\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"poolRebalanceRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"relayerRefundRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"slowRelayRoot\",\"type\":\"bytes32\"}],\"name\":\"proposeRootBundle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"functionData\",\"type\":\"bytes\"}],\"name\":\"relaySpokePoolAdminFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lpTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sendEth\",\"type\":\"bool\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"newBondToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newBondAmount\",\"type\":\"uint256\"}],\"name\":\"setBond\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"l2ChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"adapter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spokePool\",\"type\":\"address\"}],\"name\":\"setCrossChainContracts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"depositsEnabled\",\"type\":\"bool\"}],\"name\":\"setDepositRoute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newIdentifier\",\"type\":\"bytes32\"}],\"name\":\"setIdentifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"newLiveness\",\"type\":\"uint32\"}],\"name\":\"setLiveness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"pause\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destinationToken\",\"type\":\"address\"}],\"name\":\"setPoolRebalanceRoute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newProtocolFeeCaptureAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newProtocolFeeCapturePct\",\"type\":\"uint256\"}],\"name\":\"setProtocolFeeCapture\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"}],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Concise list of functions in HubPool implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/HubPoolInterface.sol\":\"HubPoolInterface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"contracts/interfaces/HubPoolInterface.sol\":{\"keccak256\":\"0xefd509ab379b94004b5767d67971e5c0bda4ca1e9f376b5aea75a0297b5d7bd6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0b7e509e90bcca9b96bf55e92498b17bbb548359c470b17285740080a6c0d9de\",\"dweb:/ipfs/QmdviQBbB58H9HR3tKQepEuYcMKXZthyTThGXUgQDAC828\"]}},\"version\":1}"}},"contracts/interfaces/LpTokenFactoryInterface.sol":{"LpTokenFactoryInterface":{"abi":[{"inputs":[{"internalType":"address","name":"l1Token","type":"address"}],"name":"createLpToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"createLpToken(address)":"fc2f1b6e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"}],\"name\":\"createLpToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createLpToken(address)\":{\"params\":{\"l1Token\":\"L1 token to name in LP token name.\"},\"returns\":{\"_0\":\"address of new LP token.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createLpToken(address)\":{\"notice\":\"Deploys new LP token for L1 token. Sets caller as minter and burner of token.\"}},\"notice\":\"Factory to create new LP ERC20 tokens that represent a liquidity provider's position. HubPool is the intended client of this contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/LpTokenFactoryInterface.sol\":\"LpTokenFactoryInterface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/LpTokenFactoryInterface.sol\":{\"keccak256\":\"0x2635ebf23073eee29bc68003658adc1ef705c1d1f1f36f6ed19408f5e0bf7ab6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://06df0843f5a5291624d6a4270ce014d8e212d675d60e63bb5c6ab374203e103a\",\"dweb:/ipfs/QmUKoFVRdQM5BJaFdfrErLWUfsebQZGb4eD211yKz4v6XA\"]}},\"version\":1}"}},"contracts/interfaces/SpokePoolInterface.sol":{"SpokePoolInterface":{"abi":[{"inputs":[],"name":"NotEOA","type":"error"},{"inputs":[],"name":"chainId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"originToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"uint32","name":"quoteTimestamp","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"originToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"uint32","name":"quoteTimestamp","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"depositFor","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"originToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"depositNow","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"rootBundleId","type":"uint256"}],"name":"emergencyDeleteRootBundle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"rootBundleId","type":"uint32"},{"components":[{"internalType":"uint256","name":"amountToReturn","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"uint256[]","name":"refundAmounts","type":"uint256[]"},{"internalType":"uint32","name":"leafId","type":"uint32"},{"internalType":"address","name":"l2TokenAddress","type":"address"},{"internalType":"address[]","name":"refundAddresses","type":"address[]"}],"internalType":"struct SpokePoolInterface.RelayerRefundLeaf","name":"relayerRefundLeaf","type":"tuple"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"executeRelayerRefundLeaf","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"destinationToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"int64","name":"realizedLpFeePct","type":"int64"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint32","name":"rootBundleId","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"int256","name":"payoutAdjustment","type":"int256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"executeSlowRelayLeaf","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"destinationToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"maxTokensToSend","type":"uint256"},{"internalType":"uint256","name":"repaymentChainId","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"int64","name":"realizedLpFeePct","type":"int64"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"fillRelay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"updatedRecipient","type":"address"},{"internalType":"address","name":"destinationToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"maxTokensToSend","type":"uint256"},{"internalType":"uint256","name":"repaymentChainId","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"int64","name":"realizedLpFeePct","type":"int64"},{"internalType":"int64","name":"relayerFeePct","type":"int64"},{"internalType":"int64","name":"updatedRelayerFeePct","type":"int64"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"internalType":"bytes","name":"depositorSignature","type":"bytes"},{"internalType":"uint256","name":"maxCount","type":"uint256"}],"name":"fillRelayWithUpdatedDeposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"pause","type":"bool"}],"name":"pauseDeposits","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"pause","type":"bool"}],"name":"pauseFills","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"relayerRefundRoot","type":"bytes32"},{"internalType":"bytes32","name":"slowRelayRoot","type":"bytes32"}],"name":"relayRootBundle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newCrossDomainAdmin","type":"address"}],"name":"setCrossDomainAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"originToken","type":"address"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"bool","name":"enable","type":"bool"}],"name":"setEnableRoute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newHubPool","type":"address"}],"name":"setHubPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"int64","name":"updatedRelayerFeePct","type":"int64"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"address","name":"updatedRecipient","type":"address"},{"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"internalType":"bytes","name":"depositorSignature","type":"bytes"}],"name":"speedUpDeposit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"chainId()":"9a8a0592","deposit(address,address,uint256,uint256,int64,uint32,bytes,uint256)":"1186ec33","depositFor(address,address,address,uint256,uint256,int64,uint32,bytes,uint256)":"541f4f14","depositNow(address,address,uint256,uint256,int64,bytes,uint256)":"ae527fbb","emergencyDeleteRootBundle(uint256)":"8a7860ce","executeRelayerRefundLeaf(uint32,(uint256,uint256,uint256[],uint32,address,address[]),bytes32[])":"1b3d5559","executeSlowRelayLeaf(address,address,address,uint256,uint256,int64,int64,uint32,uint32,bytes,int256,bytes32[])":"0c2097f7","fillRelay(address,address,address,uint256,uint256,uint256,uint256,int64,int64,uint32,bytes,uint256)":"44b8be68","fillRelayWithUpdatedDeposit(address,address,address,address,uint256,uint256,uint256,uint256,int64,int64,int64,uint32,bytes,bytes,bytes,uint256)":"5ceaec32","pauseDeposits(bool)":"738b62e5","pauseFills(bool)":"99cc2968","relayRootBundle(bytes32,bytes32)":"493a4f84","setCrossDomainAdmin(address)":"de7eba78","setEnableRoute(address,uint256,bool)":"272751c7","setHubPool(address)":"1dfb2d02","speedUpDeposit(address,int64,uint32,address,bytes,bytes)":"7e688bba"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NotEOA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"quoteTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"quoteTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"depositFor\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"depositNow\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rootBundleId\",\"type\":\"uint256\"}],\"name\":\"emergencyDeleteRootBundle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"rootBundleId\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amountToReturn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"refundAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint32\",\"name\":\"leafId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"l2TokenAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"refundAddresses\",\"type\":\"address[]\"}],\"internalType\":\"struct SpokePoolInterface.RelayerRefundLeaf\",\"name\":\"relayerRefundLeaf\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"executeRelayerRefundLeaf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destinationToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"realizedLpFeePct\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"rootBundleId\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"int256\",\"name\":\"payoutAdjustment\",\"type\":\"int256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"executeSlowRelayLeaf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destinationToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTokensToSend\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"realizedLpFeePct\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"fillRelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destinationToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTokensToSend\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"realizedLpFeePct\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"relayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"updatedRelayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"fillRelayWithUpdatedDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"pause\",\"type\":\"bool\"}],\"name\":\"pauseDeposits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"pause\",\"type\":\"bool\"}],\"name\":\"pauseFills\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"relayerRefundRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"slowRelayRoot\",\"type\":\"bytes32\"}],\"name\":\"relayRootBundle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCrossDomainAdmin\",\"type\":\"address\"}],\"name\":\"setCrossDomainAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"setEnableRoute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newHubPool\",\"type\":\"address\"}],\"name\":\"setHubPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"updatedRelayerFeePct\",\"type\":\"int64\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"}],\"name\":\"speedUpDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"depositFor(address,address,address,uint256,uint256,int64,uint32,bytes,uint256)\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"depositNow(address,address,uint256,uint256,int64,bytes,uint256)\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"executeRelayerRefundLeaf(uint32,(uint256,uint256,uint256[],uint32,address,address[]),bytes32[])\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"executeSlowRelayLeaf(address,address,address,uint256,uint256,int64,int64,uint32,uint32,bytes,int256,bytes32[])\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"fillRelay(address,address,address,uint256,uint256,uint256,uint256,int64,int64,uint32,bytes,uint256)\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"fillRelayWithUpdatedDeposit(address,address,address,address,uint256,uint256,uint256,uint256,int64,int64,int64,uint32,bytes,bytes,bytes,uint256)\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"},\"speedUpDeposit(address,int64,uint32,address,bytes,bytes)\":{\"custom:audit\":\"FOLLOWING FUNCTION TO BE DEPRECATED\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains common data structures and functions used by all SpokePool implementations.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/SpokePoolInterface.sol\":\"SpokePoolInterface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/SpokePoolInterface.sol\":{\"keccak256\":\"0x5089df2f8d40f9afad742d059966a34a42fae5dd61ab9274585d303ca4bb6489\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://46f884dee4c3de680f45f66a5b2a34b41423ac818a736d5c108eb334f0fdf411\",\"dweb:/ipfs/QmdNJ2w2CEGkHv2rS4vYKNNdPjZALtCPJf4sQKzRW3ARzd\"]}},\"version\":1}"}},"contracts/interfaces/V3SpokePoolInterface.sol":{"V3SpokePoolInterface":{"abi":[{"inputs":[],"name":"ClaimedMerkleLeaf","type":"error"},{"inputs":[],"name":"DisabledRoute","type":"error"},{"inputs":[],"name":"ExpiredFillDeadline","type":"error"},{"inputs":[],"name":"InvalidChainId","type":"error"},{"inputs":[],"name":"InvalidExclusiveRelayer","type":"error"},{"inputs":[],"name":"InvalidExclusivityDeadline","type":"error"},{"inputs":[],"name":"InvalidFillDeadline","type":"error"},{"inputs":[],"name":"InvalidMerkleLeaf","type":"error"},{"inputs":[],"name":"InvalidMerkleProof","type":"error"},{"inputs":[],"name":"InvalidPayoutAdjustmentPct","type":"error"},{"inputs":[],"name":"InvalidQuoteTimestamp","type":"error"},{"inputs":[],"name":"InvalidSlowFillRequest","type":"error"},{"inputs":[],"name":"MsgValueDoesNotMatchInputAmount","type":"error"},{"inputs":[],"name":"NoSlowFillsInExclusivityWindow","type":"error"},{"inputs":[],"name":"NotExclusiveRelayer","type":"error"},{"inputs":[],"name":"RelayFilled","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"inputToken","type":"address"},{"indexed":false,"internalType":"address","name":"outputToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"inputAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outputAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"repaymentChainId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"originChainId","type":"uint256"},{"indexed":true,"internalType":"uint32","name":"depositId","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"indexed":false,"internalType":"address","name":"exclusiveRelayer","type":"address"},{"indexed":true,"internalType":"address","name":"relayer","type":"address"},{"indexed":false,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"},{"components":[{"internalType":"address","name":"updatedRecipient","type":"address"},{"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"internalType":"uint256","name":"updatedOutputAmount","type":"uint256"},{"internalType":"enum V3SpokePoolInterface.FillType","name":"fillType","type":"uint8"}],"indexed":false,"internalType":"struct V3SpokePoolInterface.V3RelayExecutionEventInfo","name":"relayExecutionInfo","type":"tuple"}],"name":"FilledV3Relay","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"updatedOutputAmount","type":"uint256"},{"indexed":true,"internalType":"uint32","name":"depositId","type":"uint32"},{"indexed":true,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"address","name":"updatedRecipient","type":"address"},{"indexed":false,"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"depositorSignature","type":"bytes"}],"name":"RequestedSpeedUpV3Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"inputToken","type":"address"},{"indexed":false,"internalType":"address","name":"outputToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"inputAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outputAmount","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"originChainId","type":"uint256"},{"indexed":true,"internalType":"uint32","name":"depositId","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"indexed":false,"internalType":"address","name":"exclusiveRelayer","type":"address"},{"indexed":false,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"}],"name":"RequestedV3SlowFill","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"inputToken","type":"address"},{"indexed":false,"internalType":"address","name":"outputToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"inputAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outputAmount","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"indexed":true,"internalType":"uint32","name":"depositId","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"quoteTimestamp","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"indexed":true,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"address","name":"exclusiveRelayer","type":"address"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"}],"name":"V3FundsDeposited","type":"event"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"inputToken","type":"address"},{"internalType":"address","name":"outputToken","type":"address"},{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256","name":"outputAmount","type":"uint256"},{"internalType":"uint256","name":"destinationChainId","type":"uint256"},{"internalType":"address","name":"exclusiveRelayer","type":"address"},{"internalType":"uint32","name":"quoteTimestamp","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"}],"name":"depositV3","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"exclusiveRelayer","type":"address"},{"internalType":"address","name":"inputToken","type":"address"},{"internalType":"address","name":"outputToken","type":"address"},{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256","name":"outputAmount","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"}],"internalType":"struct V3SpokePoolInterface.V3RelayData","name":"relayData","type":"tuple"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"uint256","name":"updatedOutputAmount","type":"uint256"}],"internalType":"struct V3SpokePoolInterface.V3SlowFill","name":"slowFillLeaf","type":"tuple"},{"internalType":"uint32","name":"rootBundleId","type":"uint32"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"executeV3SlowRelayLeaf","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"exclusiveRelayer","type":"address"},{"internalType":"address","name":"inputToken","type":"address"},{"internalType":"address","name":"outputToken","type":"address"},{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256","name":"outputAmount","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"}],"internalType":"struct V3SpokePoolInterface.V3RelayData","name":"relayData","type":"tuple"},{"internalType":"uint256","name":"repaymentChainId","type":"uint256"}],"name":"fillV3Relay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"exclusiveRelayer","type":"address"},{"internalType":"address","name":"inputToken","type":"address"},{"internalType":"address","name":"outputToken","type":"address"},{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256","name":"outputAmount","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"}],"internalType":"struct V3SpokePoolInterface.V3RelayData","name":"relayData","type":"tuple"},{"internalType":"uint256","name":"repaymentChainId","type":"uint256"},{"internalType":"uint256","name":"updatedOutputAmount","type":"uint256"},{"internalType":"address","name":"updatedRecipient","type":"address"},{"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"internalType":"bytes","name":"depositorSignature","type":"bytes"}],"name":"fillV3RelayWithUpdatedDeposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"exclusiveRelayer","type":"address"},{"internalType":"address","name":"inputToken","type":"address"},{"internalType":"address","name":"outputToken","type":"address"},{"internalType":"uint256","name":"inputAmount","type":"uint256"},{"internalType":"uint256","name":"outputAmount","type":"uint256"},{"internalType":"uint256","name":"originChainId","type":"uint256"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"uint32","name":"exclusivityDeadline","type":"uint32"},{"internalType":"bytes","name":"message","type":"bytes"}],"internalType":"struct V3SpokePoolInterface.V3RelayData","name":"relayData","type":"tuple"}],"name":"requestV3SlowFill","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"depositor","type":"address"},{"internalType":"uint32","name":"depositId","type":"uint32"},{"internalType":"uint256","name":"updatedOutputAmount","type":"uint256"},{"internalType":"address","name":"updatedRecipient","type":"address"},{"internalType":"bytes","name":"updatedMessage","type":"bytes"},{"internalType":"bytes","name":"depositorSignature","type":"bytes"}],"name":"speedUpV3Deposit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"depositV3(address,address,address,address,uint256,uint256,uint256,address,uint32,uint32,uint32,bytes)":"7b939232","executeV3SlowRelayLeaf(((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256,uint256),uint32,bytes32[])":"bbca7db0","fillV3Relay((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256)":"2e378115","fillV3RelayWithUpdatedDeposit((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes),uint256,uint256,address,bytes,bytes)":"ccfa5971","requestV3SlowFill((address,address,address,address,address,uint256,uint256,uint256,uint32,uint32,uint32,bytes))":"9963e5a8","speedUpV3Deposit(address,uint32,uint256,address,bytes,bytes)":"4e0fb8f5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ClaimedMerkleLeaf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DisabledRoute\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpiredFillDeadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidChainId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidExclusiveRelayer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidExclusivityDeadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFillDeadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMerkleLeaf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMerkleProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPayoutAdjustmentPct\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQuoteTimestamp\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSlowFillRequest\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MsgValueDoesNotMatchInputAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSlowFillsInExclusivityWindow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotExclusiveRelayer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RelayFilled\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"updatedOutputAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum V3SpokePoolInterface.FillType\",\"name\":\"fillType\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct V3SpokePoolInterface.V3RelayExecutionEventInfo\",\"name\":\"relayExecutionInfo\",\"type\":\"tuple\"}],\"name\":\"FilledV3Relay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updatedOutputAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"}],\"name\":\"RequestedSpeedUpV3Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"RequestedV3SlowFill\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"quoteTimestamp\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"V3FundsDeposited\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"quoteTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"depositV3\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"internalType\":\"struct V3SpokePoolInterface.V3RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedOutputAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct V3SpokePoolInterface.V3SlowFill\",\"name\":\"slowFillLeaf\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"rootBundleId\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"executeV3SlowRelayLeaf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"internalType\":\"struct V3SpokePoolInterface.V3RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"}],\"name\":\"fillV3Relay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"internalType\":\"struct V3SpokePoolInterface.V3RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"repaymentChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedOutputAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"}],\"name\":\"fillV3RelayWithUpdatedDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"exclusiveRelayer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"exclusivityDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"internalType\":\"struct V3SpokePoolInterface.V3RelayData\",\"name\":\"relayData\",\"type\":\"tuple\"}],\"name\":\"requestV3SlowFill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"depositId\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"updatedOutputAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"updatedRecipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"updatedMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"depositorSignature\",\"type\":\"bytes\"}],\"name\":\"speedUpV3Deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/V3SpokePoolInterface.sol\":\"V3SpokePoolInterface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/V3SpokePoolInterface.sol\":{\"keccak256\":\"0xdd33112f0dc8f8462307cda7d7753cb9be49cd209b6520abd69273ac015f7ab6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://211c34424710bc8a4ab41bf00bdd9df32e139642a3007a7bbe1e60020f943d2f\",\"dweb:/ipfs/QmYVM5c84V4iqKy734Sjq4TFKMJyJ3cQLHB2Katz1pTBZz\"]}},\"version\":1}"}}}}}