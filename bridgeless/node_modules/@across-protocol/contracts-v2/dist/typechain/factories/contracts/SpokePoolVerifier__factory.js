"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SpokePoolVerifier__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "contract SpokePoolInterface",
                name: "spokePool",
                type: "address",
            },
            {
                internalType: "address",
                name: "recipient",
                type: "address",
            },
            {
                internalType: "address",
                name: "originToken",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "destinationChainId",
                type: "uint256",
            },
            {
                internalType: "int64",
                name: "relayerFeePct",
                type: "int64",
            },
            {
                internalType: "uint32",
                name: "quoteTimestamp",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "message",
                type: "bytes",
            },
            {
                internalType: "uint256",
                name: "maxCount",
                type: "uint256",
            },
        ],
        name: "deposit",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
];
const _bytecode = "0x608080604052346100165761038c908161001b8239f35b5f80fdfe600436101561000c575f80fd5b5f803560e01c63e0db3fcf14610020575f80fd5b6101207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102965760043573ffffffffffffffffffffffffffffffffffffffff8082168203610296576024359181831683036102965760443582811681036102965760a4358060070b81036102965760c4359063ffffffff821682036102965760e43567ffffffffffffffff811161029657366023820112156102965780600401359067ffffffffffffffff8211610246577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f81601f85011601166080016080811067ffffffffffffffff82111761024657604052816080523660248383010111610296575f91602091819060240160a037608001015260643534036102f8578484163b1561029a578484163b15610296579063ffffffff9185809795946040519889977f541f4f140000000000000000000000000000000000000000000000000000000089523360048a01521660248801521660448601526064356064860152608435608486015260070b60a48501521660c483015261012060e4830152608051806101248401525f5b81811061027e57505f93918391827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f610144938985828601015261010435610104850152011681010301923491165af1801561027357610230575080f35b905067ffffffffffffffff811161024657604052005b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6040513d5f823e3d90fd5b60a081015186820161014401528593506020016101d0565b5f80fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f73706f6b65506f6f6c206973206e6f74206120636f6e747261637400000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f6d73672e76616c756520213d20616d6f756e74000000000000000000000000006044820152fdfea26469706673582212201f7ba35b294efa7abd95b1a7802b28893a27dfa57482a8b175289a33566e67be64736f6c63430008170033";
const isSuperArgs = (xs) => xs.length > 1;
class SpokePoolVerifier__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.SpokePoolVerifier__factory = SpokePoolVerifier__factory;
SpokePoolVerifier__factory.bytecode = _bytecode;
SpokePoolVerifier__factory.abi = _abi;
