"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Base_Adapter__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "contract WETH9Interface",
                name: "_l1Weth",
                type: "address",
            },
            {
                internalType: "address",
                name: "_crossDomainMessenger",
                type: "address",
            },
            {
                internalType: "contract IL1StandardBridge",
                name: "_l1StandardBridge",
                type: "address",
            },
            {
                internalType: "contract IERC20",
                name: "_l1Usdc",
                type: "address",
            },
            {
                internalType: "contract ITokenMessenger",
                name: "_cctpTokenMessenger",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "target",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "message",
                type: "bytes",
            },
        ],
        name: "MessageRelayed",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "l1Token",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "l2Token",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "address",
                name: "to",
                type: "address",
            },
        ],
        name: "TokensRelayed",
        type: "event",
    },
    {
        inputs: [],
        name: "L1_STANDARD_BRIDGE",
        outputs: [
            {
                internalType: "contract IL1StandardBridge",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "L1_WETH",
        outputs: [
            {
                internalType: "contract WETH9Interface",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "L2_GAS_LIMIT",
        outputs: [
            {
                internalType: "uint32",
                name: "",
                type: "uint32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "MESSENGER",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "cctpTokenMessenger",
        outputs: [
            {
                internalType: "contract ITokenMessenger",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "recipientCircleDomainId",
        outputs: [
            {
                internalType: "uint32",
                name: "",
                type: "uint32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "target",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "message",
                type: "bytes",
            },
        ],
        name: "relayMessage",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "l1Token",
                type: "address",
            },
            {
                internalType: "address",
                name: "l2Token",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
        ],
        name: "relayTokens",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [],
        name: "usdcToken",
        outputs: [
            {
                internalType: "contract IERC20",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "";
const isSuperArgs = (xs) => xs.length > 1;
class Base_Adapter__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_l1Weth, _crossDomainMessenger, _l1StandardBridge, _l1Usdc, _cctpTokenMessenger, overrides) {
        return super.deploy(_l1Weth, _crossDomainMessenger, _l1StandardBridge, _l1Usdc, _cctpTokenMessenger, overrides || {});
    }
    getDeployTransaction(_l1Weth, _crossDomainMessenger, _l1StandardBridge, _l1Usdc, _cctpTokenMessenger, overrides) {
        return super.getDeployTransaction(_l1Weth, _crossDomainMessenger, _l1StandardBridge, _l1Usdc, _cctpTokenMessenger, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Base_Adapter__factory = Base_Adapter__factory;
Base_Adapter__factory.bytecode = _bytecode;
Base_Adapter__factory.abi = _abi;
