import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockBedrockL2StandardBridge, MockBedrockL2StandardBridgeInterface } from "../../../../contracts/test/MockBedrockStandardBridge.sol/MockBedrockL2StandardBridge";
declare type MockBedrockL2StandardBridgeConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class MockBedrockL2StandardBridge__factory extends ContractFactory {
    constructor(...args: MockBedrockL2StandardBridgeConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string;
    }): Promise<MockBedrockL2StandardBridge>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string;
    }): TransactionRequest;
    attach(address: string): MockBedrockL2StandardBridge;
    connect(signer: Signer): MockBedrockL2StandardBridge__factory;
    static readonly bytecode = "0x608080604052346100155760ea908161001a8239f35b5f80fdfe6004361015600b575f80fd5b5f3560e01c63a3a7954814601d575f80fd5b60a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011260b05773ffffffffffffffffffffffffffffffffffffffff6004358181160360b0576024359081160360b05760643563ffffffff81160360b05760843567ffffffffffffffff80821160b0573660238301121560b057816004013590811160b0573691016024011160b057005b5f80fdfea26469706673582212207bd3df4ca3326a36d4838a8fe9b6b50baea56d42169d497828298232ece78e6a64736f6c63430008170033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_l2Token";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint32";
            readonly name: "_minGasLimit";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes";
            readonly name: "_extraData";
            readonly type: "bytes";
        }];
        readonly name: "withdrawTo";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }];
    static createInterface(): MockBedrockL2StandardBridgeInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): MockBedrockL2StandardBridge;
}
export {};
