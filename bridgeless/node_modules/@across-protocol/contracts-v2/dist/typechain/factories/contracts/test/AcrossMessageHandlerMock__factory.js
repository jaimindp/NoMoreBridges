"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AcrossMessageHandlerMock__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "tokenSent",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "bool",
                name: "fillCompleted",
                type: "bool",
            },
            {
                internalType: "address",
                name: "relayer",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "message",
                type: "bytes",
            },
        ],
        name: "handleAcrossMessage",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "tokenSent",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "relayer",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "message",
                type: "bytes",
            },
        ],
        name: "handleV3AcrossMessage",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x6080806040523461001657610234908161001b8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c80630ea1f938146100ac57633a5be8cb1461002f575f80fd5b346100a85760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100a85761006661012e565b5060443573ffffffffffffffffffffffffffffffffffffffff8116036100a85760643567ffffffffffffffff81116100a8576100a6903690600401610151565b005b5f80fd5b346100a85760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100a8576100e361012e565b50604435801515036100a85760643573ffffffffffffffffffffffffffffffffffffffff8116036100a85760843567ffffffffffffffff81116100a8576100a6903690600401610151565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036100a857565b81601f820112156100a85780359067ffffffffffffffff928383116101d15760405193601f84017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168501908111858210176101d157604052828452602083830101116100a857815f926020809301838601378301015290565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffdfea26469706673582212204833ef63e55b8c6cff989b649c42706fd2a901a38234a4e3b21a5d8f1d0494dc64736f6c63430008170033";
const isSuperArgs = (xs) => xs.length > 1;
class AcrossMessageHandlerMock__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.AcrossMessageHandlerMock__factory = AcrossMessageHandlerMock__factory;
AcrossMessageHandlerMock__factory.bytecode = _bytecode;
AcrossMessageHandlerMock__factory.abi = _abi;
