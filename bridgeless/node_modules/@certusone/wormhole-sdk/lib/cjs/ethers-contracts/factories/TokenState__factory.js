"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TokenState__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "owner_",
                type: "address",
            },
        ],
        name: "nonces",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60808060405234601457609b908161001a8239f35b600080fdfe6080806040526004361015601257600080fd5b600090813560e01c637ecebe0014602857600080fd5b3460615760203660031901126061576004356001600160a01b03811690819003605d578260409160209452600e845220548152f35b8280fd5b5080fdfea2646970667358221220b72e051e1475c5a6d720440880da9ff5c80d4e0d37ef25fb53f41896376e584364736f6c63430008130033";
const isSuperArgs = (xs) => xs.length > 1;
class TokenState__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TokenState__factory = TokenState__factory;
TokenState__factory.bytecode = _bytecode;
TokenState__factory.abi = _abi;
