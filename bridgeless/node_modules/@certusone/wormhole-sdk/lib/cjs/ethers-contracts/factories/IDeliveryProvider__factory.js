"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IDeliveryProvider__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "getRewardAddress",
        outputs: [
            {
                internalType: "address payable",
                name: "rewardAddress",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getSupportedKeys",
        outputs: [
            {
                internalType: "uint256",
                name: "bitmap",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint16",
                name: "targetChain",
                type: "uint16",
            },
        ],
        name: "getTargetChainAddress",
        outputs: [
            {
                internalType: "bytes32",
                name: "deliveryProviderAddress",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint16",
                name: "targetChain",
                type: "uint16",
            },
        ],
        name: "isChainSupported",
        outputs: [
            {
                internalType: "bool",
                name: "supported",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint8",
                name: "keyType",
                type: "uint8",
            },
        ],
        name: "isMessageKeyTypeSupported",
        outputs: [
            {
                internalType: "bool",
                name: "supported",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint16",
                name: "targetChain",
                type: "uint16",
            },
            {
                internalType: "uint256",
                name: "currentChainAmount",
                type: "uint256",
            },
        ],
        name: "quoteAssetConversion",
        outputs: [
            {
                internalType: "uint256",
                name: "targetChainAmount",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint16",
                name: "targetChain",
                type: "uint16",
            },
            {
                internalType: "uint256",
                name: "receiverValue",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "encodedExecutionParams",
                type: "bytes",
            },
        ],
        name: "quoteDeliveryPrice",
        outputs: [
            {
                internalType: "uint256",
                name: "nativePriceQuote",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "encodedExecutionInfo",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
class IDeliveryProvider__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.IDeliveryProvider__factory = IDeliveryProvider__factory;
IDeliveryProvider__factory.abi = _abi;
