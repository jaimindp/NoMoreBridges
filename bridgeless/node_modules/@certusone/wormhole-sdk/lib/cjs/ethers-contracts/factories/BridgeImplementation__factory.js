"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BridgeImplementation__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "previousAdmin",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "newAdmin",
                type: "address",
            },
        ],
        name: "AdminChanged",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "beacon",
                type: "address",
            },
        ],
        name: "BeaconUpgraded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "oldContract",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newContract",
                type: "address",
            },
        ],
        name: "ContractUpgraded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint16",
                name: "emitterChainId",
                type: "uint16",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "emitterAddress",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "uint64",
                name: "sequence",
                type: "uint64",
            },
        ],
        name: "TransferRedeemed",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "implementation",
                type: "address",
            },
        ],
        name: "Upgraded",
        type: "event",
    },
    {
        inputs: [],
        name: "WETH",
        outputs: [
            {
                internalType: "contract IWETH",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "encoded",
                type: "bytes",
            },
        ],
        name: "_parseTransferCommon",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint8",
                        name: "payloadID",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes32",
                        name: "tokenAddress",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint16",
                        name: "tokenChain",
                        type: "uint16",
                    },
                    {
                        internalType: "bytes32",
                        name: "to",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint16",
                        name: "toChain",
                        type: "uint16",
                    },
                    {
                        internalType: "uint256",
                        name: "fee",
                        type: "uint256",
                    },
                ],
                internalType: "struct BridgeStructs.Transfer",
                name: "transfer",
                type: "tuple",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
            },
            {
                internalType: "uint32",
                name: "nonce",
                type: "uint32",
            },
        ],
        name: "attestToken",
        outputs: [
            {
                internalType: "uint64",
                name: "sequence",
                type: "uint64",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint16",
                name: "chainId_",
                type: "uint16",
            },
        ],
        name: "bridgeContracts",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "chainId",
        outputs: [
            {
                internalType: "uint16",
                name: "",
                type: "uint16",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "encodedVm",
                type: "bytes",
            },
        ],
        name: "completeTransfer",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "encodedVm",
                type: "bytes",
            },
        ],
        name: "completeTransferAndUnwrapETH",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "encodedVm",
                type: "bytes",
            },
        ],
        name: "completeTransferAndUnwrapETHWithPayload",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "encodedVm",
                type: "bytes",
            },
        ],
        name: "completeTransferWithPayload",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "encodedVm",
                type: "bytes",
            },
        ],
        name: "createWrapped",
        outputs: [
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint8",
                        name: "payloadID",
                        type: "uint8",
                    },
                    {
                        internalType: "bytes32",
                        name: "tokenAddress",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint16",
                        name: "tokenChain",
                        type: "uint16",
                    },
                    {
                        internalType: "uint8",
                        name: "decimals",
                        type: "uint8",
                    },
                    {
                        internalType: "bytes32",
                        name: "symbol",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "name",
                        type: "bytes32",
                    },
                ],
                internalType: "struct BridgeStructs.AssetMeta",
                name: "meta",
                type: "tuple",
            },
        ],
        name: "encodeAssetMeta",
        outputs: [
            {
                internalType: "bytes",
                name: "encoded",
                type: "bytes",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint8",
                        name: "payloadID",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes32",
                        name: "tokenAddress",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint16",
                        name: "tokenChain",
                        type: "uint16",
                    },
                    {
                        internalType: "bytes32",
                        name: "to",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint16",
                        name: "toChain",
                        type: "uint16",
                    },
                    {
                        internalType: "uint256",
                        name: "fee",
                        type: "uint256",
                    },
                ],
                internalType: "struct BridgeStructs.Transfer",
                name: "transfer",
                type: "tuple",
            },
        ],
        name: "encodeTransfer",
        outputs: [
            {
                internalType: "bytes",
                name: "encoded",
                type: "bytes",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint8",
                        name: "payloadID",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes32",
                        name: "tokenAddress",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint16",
                        name: "tokenChain",
                        type: "uint16",
                    },
                    {
                        internalType: "bytes32",
                        name: "to",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint16",
                        name: "toChain",
                        type: "uint16",
                    },
                    {
                        internalType: "bytes32",
                        name: "fromAddress",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                    },
                ],
                internalType: "struct BridgeStructs.TransferWithPayload",
                name: "transfer",
                type: "tuple",
            },
        ],
        name: "encodeTransferWithPayload",
        outputs: [
            {
                internalType: "bytes",
                name: "encoded",
                type: "bytes",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "evmChainId",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "finality",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "hash",
                type: "bytes32",
            },
        ],
        name: "governanceActionIsConsumed",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "governanceChainId",
        outputs: [
            {
                internalType: "uint16",
                name: "",
                type: "uint16",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "governanceContract",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "implementation",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "isFork",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "impl",
                type: "address",
            },
        ],
        name: "isInitialized",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "hash",
                type: "bytes32",
            },
        ],
        name: "isTransferCompleted",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
        ],
        name: "isWrappedAsset",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
        ],
        name: "outstandingBridged",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "encoded",
                type: "bytes",
            },
        ],
        name: "parseAssetMeta",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint8",
                        name: "payloadID",
                        type: "uint8",
                    },
                    {
                        internalType: "bytes32",
                        name: "tokenAddress",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint16",
                        name: "tokenChain",
                        type: "uint16",
                    },
                    {
                        internalType: "uint8",
                        name: "decimals",
                        type: "uint8",
                    },
                    {
                        internalType: "bytes32",
                        name: "symbol",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "name",
                        type: "bytes32",
                    },
                ],
                internalType: "struct BridgeStructs.AssetMeta",
                name: "meta",
                type: "tuple",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "encoded",
                type: "bytes",
            },
        ],
        name: "parsePayloadID",
        outputs: [
            {
                internalType: "uint8",
                name: "payloadID",
                type: "uint8",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "encodedRecoverChainId",
                type: "bytes",
            },
        ],
        name: "parseRecoverChainId",
        outputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "module",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint8",
                        name: "action",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256",
                        name: "evmChainId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint16",
                        name: "newChainId",
                        type: "uint16",
                    },
                ],
                internalType: "struct BridgeStructs.RecoverChainId",
                name: "rci",
                type: "tuple",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "encoded",
                type: "bytes",
            },
        ],
        name: "parseRegisterChain",
        outputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "module",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint8",
                        name: "action",
                        type: "uint8",
                    },
                    {
                        internalType: "uint16",
                        name: "chainId",
                        type: "uint16",
                    },
                    {
                        internalType: "uint16",
                        name: "emitterChainID",
                        type: "uint16",
                    },
                    {
                        internalType: "bytes32",
                        name: "emitterAddress",
                        type: "bytes32",
                    },
                ],
                internalType: "struct BridgeStructs.RegisterChain",
                name: "chain",
                type: "tuple",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "encoded",
                type: "bytes",
            },
        ],
        name: "parseTransfer",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint8",
                        name: "payloadID",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes32",
                        name: "tokenAddress",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint16",
                        name: "tokenChain",
                        type: "uint16",
                    },
                    {
                        internalType: "bytes32",
                        name: "to",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint16",
                        name: "toChain",
                        type: "uint16",
                    },
                    {
                        internalType: "uint256",
                        name: "fee",
                        type: "uint256",
                    },
                ],
                internalType: "struct BridgeStructs.Transfer",
                name: "transfer",
                type: "tuple",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "encoded",
                type: "bytes",
            },
        ],
        name: "parseTransferWithPayload",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint8",
                        name: "payloadID",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes32",
                        name: "tokenAddress",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint16",
                        name: "tokenChain",
                        type: "uint16",
                    },
                    {
                        internalType: "bytes32",
                        name: "to",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint16",
                        name: "toChain",
                        type: "uint16",
                    },
                    {
                        internalType: "bytes32",
                        name: "fromAddress",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes",
                        name: "payload",
                        type: "bytes",
                    },
                ],
                internalType: "struct BridgeStructs.TransferWithPayload",
                name: "transfer",
                type: "tuple",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "encoded",
                type: "bytes",
            },
        ],
        name: "parseUpgrade",
        outputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "module",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint8",
                        name: "action",
                        type: "uint8",
                    },
                    {
                        internalType: "uint16",
                        name: "chainId",
                        type: "uint16",
                    },
                    {
                        internalType: "bytes32",
                        name: "newContract",
                        type: "bytes32",
                    },
                ],
                internalType: "struct BridgeStructs.UpgradeContract",
                name: "chain",
                type: "tuple",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "encodedVM",
                type: "bytes",
            },
        ],
        name: "registerChain",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "encodedVM",
                type: "bytes",
            },
        ],
        name: "submitRecoverChainId",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "tokenImplementation",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "uint16",
                name: "recipientChain",
                type: "uint16",
            },
            {
                internalType: "bytes32",
                name: "recipient",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "arbiterFee",
                type: "uint256",
            },
            {
                internalType: "uint32",
                name: "nonce",
                type: "uint32",
            },
        ],
        name: "transferTokens",
        outputs: [
            {
                internalType: "uint64",
                name: "sequence",
                type: "uint64",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "uint16",
                name: "recipientChain",
                type: "uint16",
            },
            {
                internalType: "bytes32",
                name: "recipient",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "nonce",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "payload",
                type: "bytes",
            },
        ],
        name: "transferTokensWithPayload",
        outputs: [
            {
                internalType: "uint64",
                name: "sequence",
                type: "uint64",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "encodedVm",
                type: "bytes",
            },
        ],
        name: "updateWrapped",
        outputs: [
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "encodedVM",
                type: "bytes",
            },
        ],
        name: "upgrade",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "wormhole",
        outputs: [
            {
                internalType: "contract IWormhole",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint16",
                name: "recipientChain",
                type: "uint16",
            },
            {
                internalType: "bytes32",
                name: "recipient",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "arbiterFee",
                type: "uint256",
            },
            {
                internalType: "uint32",
                name: "nonce",
                type: "uint32",
            },
        ],
        name: "wrapAndTransferETH",
        outputs: [
            {
                internalType: "uint64",
                name: "sequence",
                type: "uint64",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint16",
                name: "recipientChain",
                type: "uint16",
            },
            {
                internalType: "bytes32",
                name: "recipient",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "nonce",
                type: "uint32",
            },
            {
                internalType: "bytes",
                name: "payload",
                type: "bytes",
            },
        ],
        name: "wrapAndTransferETHWithPayload",
        outputs: [
            {
                internalType: "uint64",
                name: "sequence",
                type: "uint64",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint16",
                name: "tokenChainId",
                type: "uint16",
            },
            {
                internalType: "bytes32",
                name: "tokenAddress",
                type: "bytes32",
            },
        ],
        name: "wrappedAsset",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        stateMutability: "payable",
        type: "receive",
    },
];
const _bytecode = "0x6080806040523461001b576001600d5561577090816100218239f35b600080fdfe608060405260043610156200001d575b36156200001b57600080fd5b005b60003560e01c806301f53255146200031c57806307dfd8fb14620003165780630f50900814620003105780630f5287b0146200030a578063178149e714620003045780631a2be4da14620002fe5780631c8475e414620002f85780631ff1e28614620002f25780632539464514620002ec5780632b51137514620002e65780632c3c02a414620002e05780632f3a3d5d14620002da5780635c60da1b14620002da5780635f85426614620002d457806364d42b1714620002ce578063739fc8d114620002c85780638129fc1c14620002c257806384acd1bb14620002bc5780639981509f14620002b65780639a8a059214620002b0578063a5799f9314620002aa578063aa4efa5b14620002a4578063ad5c4648146200029e578063ad66a5f11462000298578063b046223b1462000292578063b172b222146200028c578063b96c7e4d1462000286578063bee9cdfc1462000280578063c3f511c1146200027a578063c48fa1151462000274578063c5a5ebda146200026e578063c68785191462000268578063cb4cfea81462000262578063d56e2e24146200025c578063d60b347f1462000256578063e039f2241462000250578063e8059810146200024a578063e89bc4011462000244578063ea63738d146200023e578063f768441f1462000238578063fbe3c2cd1462000232578063fbeeacd9146200022c5763ff200cde036200000f5762001f19565b62001ece565b62001ea7565b62001e0c565b62001d77565b62001d58565b62001c64565b62001c41565b62001bfe565b62001b2e565b62001ae3565b62001ace565b62001a25565b6200181d565b620017e9565b620015b1565b62001573565b62001553565b620014d6565b620014a7565b6200147c565b6200144c565b62001332565b6200130e565b620010ca565b6200109f565b62000fde565b62000fb9565b62000f99565b62000f0b565b62000ec7565b62000e81565b62000e0a565b62000d3c565b62000ce9565b62000879565b620007d7565b620006fd565b62000650565b620005d9565b62000577565b62000520565b634e487b7160e01b600052604160045260246000fd5b60e081019081106001600160401b038211176200035457604052565b62000322565b60c081019081106001600160401b038211176200035457604052565b6001600160401b0381116200035457604052565b608081019081106001600160401b038211176200035457604052565b60a081019081106001600160401b038211176200035457604052565b604081019081106001600160401b038211176200035457604052565b90601f801991011681019081106001600160401b038211176200035457604052565b604051906200040f826200035a565b565b6040519061010082018281106001600160401b038211176200035457604052565b604051906200040f82620003a6565b604051906200040f8262000338565b6040519061016082018281106001600160401b038211176200035457604052565b906200040f6040519283620003de565b6001600160401b0381116200035457601f01601f191660200190565b81601f82011215620004ea57803590620004b78262000481565b92620004c76040519485620003de565b82845260208383010111620004ea57816000926020809301838601378301015290565b600080fd5b6020600319820112620004ea57600435906001600160401b038211620004ea576200051d916004016200049d565b90565b34620004ea5760a06200053d6200053736620004ef565b62004940565b6080604051918051835260ff602082015116602084015261ffff806040830151166040850152606082015116606084015201516080820152f35b34620004ea5760c0620005946200058e36620004ef565b62003f37565b60a06040519160ff81511683526020810151602084015261ffff604082015116604084015260ff606082015116606084015260808101516080840152015160a0820152f35b34620004ea576020620005f6620005f036620004ef565b62004ce8565b60ff60405191168152f35b600435906001600160a01b0382168203620004ea57565b61ffff811603620004ea57565b60a435906200040f8262000618565b35906200040f8262000618565b63ffffffff811603620004ea57565b60c0366003190112620004ea57620006f9620006da6200066f62000601565b6044356200067d8162000618565b620006b460a43592620006908462000641565b620006a16002600d5414156200259f565b6002600d5560843590602435906200296f565b61ffff815116602082015192604083015160806060850151940151946064359362002d03565b6001600d556040516001600160401b0390911681529081906020820190565b0390f35b34620004ea576200070e36620004ef565b600c544614620007a5576200079360606200076d60e062000741620007376200001b966200462e565b909291926200304d565b6200076561014082015160005260056020526040600020600160ff19825416179055565b015162004ab0565b6200078a604082016200078346825114620044c2565b5162004b8c565b015161ffff1690565b61ffff1661ffff196002541617600255565b60405162461bcd60e51b815260206004820152600a6024820152696e6f74206120666f726b60b01b6044820152606490fd5b34620004ea576020366003190112620004ea576001600160a01b03620007fc62000601565b166000526009602052602060ff604060002054166040519015158152f35b60005b8381106200082e5750506000910152565b81810151838201526020016200081d565b906020916200085a815180928185528580860191016200081a565b601f01601f1916010190565b9060206200051d9281815201906200083f565b34620004ea576200088a36620004ef565b600080546001600160a01b039190620008ac9083165b6001600160a01b031690565b91604092828451809263607ec5ef60e11b82528180620008d160049a8b830162000866565b03915afa801562000be557839084859162000cb7575b620008f49293506200304d565b62000909620009038262003d45565b62003080565b60e08101946200091a86516200424d565b836200092a608083015162003ba0565b93600360ff6200093b855160ff1690565b161462000ca2575b62000993610140820162000978620009726200096e8351600052600660205260ff6040600020541690565b1590565b62003582565b5160005260066020526040600020600160ff19825416179055565b606081015161ffff16906001600160401b03620009bf60a060808401519301516001600160401b031690565b169061ffff8093167fcaf280c8cfeba144da67230d9b009c8f868a75bac9a528fa0474be1ba317c1698a80a48062000a1a62000a0060a086015161ffff1690565b62000a10836002541661ffff1690565b92168214620035cf565b606084015161ffff169182160362000c5a575062000a3f620008a08884015162003ba0565b62000a51602084015183831662003cc8565b16858062000a6b620008a08887541660018060a01b031690565b9262000a7b88851682146200366e565b895163313ce56760e01b602082019081528782529062000a9b81620003c2565b51915afa5062000add62000ac262000ab26200232b565b602080825183010191016200236d565b60c062000ad482602087015162002c8c565b94015162002c8c565b908115158062000c4d575b1562000c3e5762000afc83831115620036c7565b803b1562000c3a578688518092632e1a7d4d60e01b825281838162000b28888b83019190602083019252565b03925af1801562000be55762000c23575b50858082801562000c18575b8280929181923390f11562000be55762000b5f916200252f565b815490919062000b7a9085166001600160a01b0316620008a0565b90813b1562000c14578651632e1a7d4d60e01b815290810183815290939291869185919082908490829060200103925af191821562000be55785948594859462000bf6575b508391831562000beb575b1690f11562000be557620006f9915190519182918262000866565b62002453565b6108fc925062000bca565b8062000c0662000c0d9262000376565b8062000ebb565b3862000bbf565b8580fd5b6108fc915062000b45565b8062000c0662000c339262000376565b3862000b39565b8680fd5b505062000b5f9085906200252f565b5033868616141562000ae8565b62000c8e8291898501519061ffff16600052600860205260406000209060005260205260018060a01b036040600020541690565b1662000c9c81151562003613565b62000a51565b62000cb1828616331462003544565b62000943565b50505062000cdd620008f4913d8086833e62000cd48183620003de565b81019062002f14565b919250829190620008e7565b34620004ea576040366003190112620004ea5761ffff60043562000d0d8162000618565b1660005260086020526040600020602435600052602052602060018060a01b0360406000205416604051908152f35b34620004ea5762000d9c60e062000d706200073762000d5b36620004ef565b62000d6a600c54461462003d09565b6200462e565b62000d9461014082015160005260056020526040600020600160ff19825416179055565b015162004a3e565b61ffff8060408301511690600254160362000dd457606001516200001b9062000dce906001600160a01b0316620008a0565b62004755565b60405162461bcd60e51b815260206004820152600e60248201526d1ddc9bdb99c818da185a5b881a5960921b6044820152606490fd5b34620004ea57620006f962000e2962000e2336620004ef565b620040b3565b6040519182918291909160c08060e083019460ff8151168452602081015160208501526040810151604085015261ffff8060608301511660608601526080820151608086015260a08201511660a08501520151910152565b34620004ea576020366003190112620004ea57602062000eb1600435600052600560205260ff6040600020541690565b6040519015158152f35b6000910312620004ea57565b34620004ea576000366003190112620004ea576001546040516001600160a01b039091168152602090f35b60ff811603620004ea57565b35906200040f8262000ef2565b34620004ea5760e0366003190112620004ea57620006f962000f8c60405162000f348162000338565b60043562000f428162000ef2565b81526024356020820152604435604082015260643562000f628162000618565b6060820152608435608082015262000f7962000625565b60a082015260c43560c082015262003de8565b6040519182918262000866565b34620004ea576000366003190112620004ea576020600c54604051908152f35b34620004ea576000366003190112620004ea57602060025460ff60405191831c168152f35b34620004ea576000806003193601126200109c577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b03168082526007602052604082205460ff1662001061576001600160a01b03166000908152600760205260409020805460ff191660011790556200105e62004b64565b80f35b60405162461bcd60e51b8152602060048201526013602482015272185b1c9958591e481a5b9a5d1a585b1a5e9959606a1b6044820152606490fd5b80fd5b34620004ea576000366003190112620004ea576000546040516001600160a01b039091168152602090f35b6080366003190112620004ea5760048035620010e68162000618565b6044359160643590620010f98262000641565b620011036200245f565b50600080546001600160a01b0394839160209062001123908816620008a0565b604051631a90a21960e01b815295869182905afa93841562000be5578394620012d7575b5062001155348510620024ab565b6200116184346200252f565b9662001170888211156200253d565b6402540be400808904910493620011926200118b8362002c71565b8a6200252f565b8181158015620012ac575b50508454620011c49190620011bd908b166001600160a01b0316620008a0565b9a6200252f565b98803b15620012a85784604051809b8193630d0e30db60e41b83525af196871562000be557602098620012809862001291575b5083546200121d908390620012179084166001600160a01b0316620008a0565b62003c15565b62001244620008a0620008a0620008a061ffff94856002541698541660018060a01b031690565b906200125d6200125362000432565b61ffff9096168652565b818a86015282604086015285606086015286608086015260243594511662002d03565b6001600160401b0360405191168152f35b8062000c06620012a19262000376565b38620011f7565b5080fd5b828291620012cc575b8280929181923390f11562000be55781386200119d565b6108fc9150620012b5565b620012fe91945060203d811162001306575b620012f58183620003de565b8101906200249b565b923862001147565b503d620012e9565b34620004ea576000366003190112620004ea57602061ffff60025416604051908152f35b34620004ea576200001b6200138160e0620013556200073762000d6a36620004ef565b6200137961014082015160005260056020526040600020600160ff19825416179055565b015162004940565b620013cd62001395604083015161ffff1690565b61ffff620013b1620013aa60025461ffff1690565b61ffff1690565b9116908114908162001432575b811562001428575b5062004435565b608062001410606083016200140862001401620013ec835161ffff1690565b61ffff16600052600b60205260406000205490565b1562004475565b5161ffff1690565b9101519061ffff16600052600b602052604060002055565b90501538620013c6565b9050620014456200096e600c5446141590565b90620013be565b34620004ea576020366003190112620004ea57602062000eb1600435600052600660205260ff6040600020541690565b34620004ea576000366003190112620004ea576004546040516001600160a01b039091168152602090f35b34620004ea576020366003190112620004ea576020620014ce600435620013ec8162000618565b604051908152f35b34620004ea5760c0366003190112620004ea57620006f962000f8c604051620014ff816200035a565b6004356200150d8162000ef2565b81526024356020820152604435620015258162000618565b6040820152606435620015388162000ef2565b6060820152608435608082015260a43560a082015262003d7f565b34620004ea576000366003190112620004ea576020600354604051908152f35b34620004ea576020366003190112620004ea576001600160a01b036200159862000601565b16600052600a6020526020604060002054604051908152f35b6080366003190112620004ea576004803590620015ce8262000618565b604435620015dc8162000641565b6064356001600160401b038111620004ea57620015fd90369084016200049d565b90620016086200245f565b506000805490946001600160a01b0394918291906020906200162c908816620008a0565b604051631a90a21960e01b815294859182905afa92831562000be5578793620017c4575b506200165e348410620024ab565b6200166a83346200252f565b966402540be400880490620016836200118b8362002c71565b818115801562001799575b50508454620016ae9190620011bd908b166001600160a01b0316620008a0565b98803b15620012a857819085604051809c8193630d0e30db60e41b83525af197881562000be557620006f999620017689962001782575b50845462001705908490620012179084166001600160a01b0316620008a0565b6200172c620008a0620008a0620008a061ffff94856002541699541660018060a01b031690565b91620017456200173b62000432565b61ffff9097168752565b826020870152836040870152606086015285608086015260243594511662002ddf565b6040516001600160401b0390911681529081906020820190565b8062000c06620017929262000376565b38620016e5565b828291620017b9575b8280929181923390f11562000be55781386200168e565b6108fc9150620017a2565b620017e191935060203d81116200130657620012f58183620003de565b913862001650565b34620004ea57620006f9620018086200180236620004ef565b6200371f565b6040519182916020835260208301906200083f565b604080600319360112620004ea576200183562000601565b60243591620018448362000641565b805192602080938186019563313ce56760e01b8752600481526200186881620003c2565b6000809781925190845afa506200187e6200232b565b86808651858101906395d89b4160e01b8252600481526200189f81620003c2565b5190855afa5060ff62001995620008a06200198488620018be6200232b565b958c8083518b8101906306fdde0360e01b825260048152620018e081620003c2565b51908b5afa5088806200192e6200191e6200190e620018fe6200232b565b958480825183010191016200236d565b9a838082518301019101620023cf565b93828082518301019101620023cf565b9201519101519062001974600254986200196a6200194b62000400565b60028152956001600160a01b039c8d16878f015261ffff8c1690870152565b60ff166060850152565b608083015260a082015262003d7f565b8a549095166001600160a01b031690565b91620019bb8751968795869485946358cd21bf60e11b8652891c16916004850162002424565b039134905af192831562000be557620006f99493620019ef575b5050516001600160401b0390911681529081906020820190565b62001a14929350803d1062001a1d575b62001a0b8183620003de565b8101906200240d565b903880620019d5565b503d620019ff565b60c0366003190112620004ea5762001a3c62000601565b6044359062001a4b8262000618565b6084359062001a5a8262000641565b60a435916001600160401b038311620004ea57620006f99362001aab62001a8a620006da9536906004016200049d565b9362001a9c6002600d5414156200259f565b6002600d556024359062002611565b9061ffff8251169060208301519260806040820151910151936064359362002ddf565b34620004ea576200001b6200180236620004ef565b34620004ea57608062001b0062001afa36620004ef565b62004ab0565b61ffff6060604051928051845260ff6020820151166020850152604081015160408501520151166060820152f35b34620004ea57600319602036820112620004ea576004356001600160401b0391828211620004ea57610100908236030112620004ea5762001b6e62000411565b62001b7c8260040162000efe565b8152602482013560208201526044820135604082015262001ba06064830162000634565b60608201526084820135608082015262001bbd60a4830162000634565b60a082015260c482013560c082015260e4820135928311620004ea5762001bf362000f8c926004620006f995369201016200049d565b60e082015262003e5e565b34620004ea576020366003190112620004ea576001600160a01b0362001c2362000601565b166000526007602052602060ff604060002054166040519015158152f35b34620004ea576000366003190112620004ea576020600c54604051904614158152f35b34620004ea5762001ca962001c7936620004ef565b6000805460405163607ec5ef60e11b8152939192839285926001600160a01b031691839182916004830162000866565b03915afa90811562000be557620006f99262001d139282918390849262001d2d575b5062001cd99293506200304d565b62001ce8620009038262003d45565b62001d0c60a062001cfd60e084015162003f37565b9201516001600160401b031690565b9062003347565b6040516001600160a01b0390911681529081906020820190565b91505062001d4c915062001cd9923d8091833e62000cd48183620003de565b90929192839262001ccb565b34620004ea57620006f962000e2962001d7136620004ef565b6200424d565b34620004ea5760e062001d9462001d8e36620004ef565b6200415e565b620006f96040519283926020845260ff8151166020850152602081015160408501526040810151606085015261ffff6060820151166080850152608081015160a085015262001dee60a082015160c086019061ffff169052565b60c0810151828501520151610100808401526101208301906200083f565b34620004ea5762001e2162001c7936620004ef565b03915afa90811562000be557620006f99262001d139282918390849262001e7c575b5062001e519293506200304d565b62001e60620009038262003d45565b62001e7560a062001cfd60e084015162003f37565b90620030f5565b91505062001e9b915062001e51923d8091833e62000cd48183620003de565b90929192839262001e43565b34620004ea576000366003190112620004ea57602061ffff60025460101c16604051908152f35b34620004ea57608062001eeb62001ee536620004ef565b62004a3e565b6060604051918051835260ff602082015116602084015261ffff604082015116604084015201516060820152f35b34620004ea5762001f2a36620004ef565b600080549091906001600160a01b039062001f47908216620008a0565b916040848151809563607ec5ef60e11b8252818062001f6b60049788830162000866565b03915afa801562000be557859486908792620022e0575b509062001f8f916200304d565b62001f9e620009038562003d45565b62001fad60e08501516200424d565b8362001fbd608083015162003ba0565b95600360ff62001fce855160ff1690565b1614620022cb575b62002001610140820162000978620009726200096e8351600052600660205260ff6040600020541690565b606081015161ffff16906001600160401b036200202d60a060808401519301516001600160401b031690565b169061ffff8093167fcaf280c8cfeba144da67230d9b009c8f868a75bac9a528fa0474be1ba317c1698b80a4806200206e62000a0060a086015161ffff1690565b606084015161ffff169182160362002283575062002093620008a08484015162003ba0565b620020a5602084015183831662003cc8565b16908680620020c0620008a08888541660018060a01b031690565b93620020d088861682146200366e565b855163313ce56760e01b6020820190815288825290620020f081620003c2565b51915afa50620021226200210762000ab26200232b565b60c06200211982602086015162002c8c565b93015162002c8c565b91878315158062002276575b156200226657506200214382841115620036c7565b803b1562002262578784518092632e1a7d4d60e01b82528183816200216f898c83019190602083019252565b03925af1801562000be5576200224b575b50868083801562002240575b8280929181923390f11562000be5578691620021a8916200252f565b8354909290620021c39086166001600160a01b0316620008a0565b803b156200223c579051632e1a7d4d60e01b815293840183815284919082908490829060200103925af190811562000be557859485948594859462002225575b50839183156200221a575b1690f11562000be55780f35b6108fc92506200220e565b8062000c06620022359262000376565b3862002203565b8280fd5b6108fc91506200218c565b8062000c066200225b9262000376565b3862002180565b8780fd5b9250620021a8918391506200252f565b503387891614156200212e565b620022b78291858501519061ffff16600052600860205260406000209060005260205260018060a01b036040600020541690565b16620022c581151562003613565b620020a5565b620022da828816331462003544565b62001fd6565b905062001f8f9550620022ff91503d8088833e62000cd48183620003de565b919562001f82565b60405190602082018281106001600160401b03821117620003545760405260008252565b3d156200235b573d906200233f8262000481565b916200234f6040519384620003de565b82523d6000602084013e565b606090565b51906200040f8262000ef2565b90816020910312620004ea57516200051d8162000ef2565b81601f82011215620004ea5780516200239e8162000481565b92620023ae6040519485620003de565b81845260208284010111620004ea576200051d91602080850191016200081a565b90602082820312620004ea5781516001600160401b038111620004ea576200051d920162002385565b51906001600160401b0382168203620004ea57565b90816020910312620004ea576200051d90620023f8565b916200244c60ff9163ffffffff6040949796971685526060602086015260608501906200083f565b9416910152565b6040513d6000823e3d90fd5b6040519060a082018281106001600160401b03821117620003545760405260006080838281528260208201528260408201528260608201520152565b90816020910312620004ea575190565b15620024b357565b60405162461bcd60e51b815260206004820152602260248201527f76616c756520697320736d616c6c6572207468616e20776f726d686f6c652066604482015261656560f01b6064820152608490fd5b634e487b7160e01b600052601160045260246000fd5b6084198101919082116200252957565b62002503565b919082039182116200252957565b156200254557565b60405162461bcd60e51b815260206004820152602c60248201527f66656520697320626967676572207468616e20616d6f756e74206d696e75732060448201526b776f726d686f6c652066656560a01b6064820152608490fd5b15620025a757565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b51906200040f8262000618565b90816020910312620004ea57516200051d8162000618565b906200261c6200245f565b506001600160a01b038216600090815260096020526040902062002642905b5460ff1690565b156200295157604051634d4502c960e11b81526001600160a01b0383169260209290918381600481885afa90811562000be55760049185916000916200291d575b509560405192838092633d6c043b60e01b82525afa90811562000be5576200270a94600092620028fb575b5050905b62002710604051916000806020948581019063313ce56760e01b825260048152620026dd81620003c2565b5190885afa5062002700620026f16200232b565b8480825183010191016200236d565b9586809262002c2f565b62002c8c565b9261ffff9462002725866002541661ffff1690565b87871690810362002875576200283562002820836200281a86600080620028299c8b620027f1604051620027cf8382019486806370a0823160e01b9788815285620027823060248301919091602081019260018060a01b03169052565b039562002798601f1997888101835282620003de565b51908c5afa50620027bb620027ac6200232b565b8680825183010191016200249b565b98309033906001600160a01b031662004e89565b60405192830193845230602484015282604481015b03908101835282620003de565b51908b5afa5062002814620028056200232b565b8a80825183010191016200249b565b6200252f565b62002c2f565b96879362002bea565b976002541661ffff1690565b1462002862575b50506200284c6200125362000432565b8401526040830152606082015234608082015290565b6200286d9162003c15565b38836200283c565b6001600160a01b038316956200288e8130338a62004e89565b863b15620004ea57604051632770a7eb60e21b815230600482015260248101829052966000908890604490829084905af196871562000be5578362002835926200282092620028299a620028e4575b5062002c2f565b8062000c06620028f49262000376565b38620028dd565b620029159250803d106200130657620012f58183620003de565b3880620026ae565b620029429150823d841162002949575b620029398183620003de565b810190620025f9565b3862002683565b503d6200292d565b60025461ffff16916200270a916001600160a01b03821690620026b2565b91906200297b6200245f565b506001600160a01b03831660009081526009602052604090206200299f906200263b565b1562002ba657604051634d4502c960e11b81526001600160a01b0384169360209290918381600481895afa90811562000be557600491859160009162002b84575b509660405192838092633d6c043b60e01b82525afa90811562000be5576200270a9460009262002b62575b5050915b62002a5d604051926000806020958681019063313ce56760e01b82526004815262002a3a81620003c2565b5190865afa506200270062002a4e6200232b565b8580825183010191016200236d565b60025461ffff969188881691879085908a16840362002af2576040516370a0823160e01b8189018181523060248401526200283595620028299562002ae99590946200281a9491936000938493928f9262002ac692620027cf9187908190856044810162002782565b51908c5afa506200281462002ada6200232b565b8b80825183010191016200249b565b97889462002c2f565b50506001600160a01b0384169062002b0d8130338562004e89565b813b15620004ea57604051632770a7eb60e21b815230600482015260248101829052916000908390604490829084905af191821562000be55788620028299262002ae9926200283595620028e4575062002c2f565b62002b7c9250803d106200130657620012f58183620003de565b388062002a0b565b62002b9f9150823d84116200294957620029398183620003de565b38620029e0565b60025461ffff16926200270a916001600160a01b0382169162002a0f565b60ff6007199116019060ff82116200252957565b60ff16604d81116200252957600a0a90565b600090600860ff82161162002bfd575090565b62002c0c62002c129162002bc4565b62002bd8565b1562002c1b5790565b634e487b7160e01b81526012600452602490fd5b90600860ff82161162002c40575090565b62002c0c62002c4f9162002bc4565b90811562002c5b570490565b634e487b7160e01b600052601260045260246000fd5b6402540be40090818102918183041490151715620025295790565b90600860ff82161162002c9d575090565b62002c0c62002cac9162002bc4565b90818102918183041490151715620025295790565b1562002cc957565b60405162461bcd60e51b815260206004820152601260248201527119995948195e18d959591cc8185b5bdd5b9d60721b6044820152606490fd5b9262002dab9795929462002d4b6020989562002d5b9462002d278988111562002cc1565b62002d3162000441565b60018152985b898c0152604089015261ffff166060880152565b608086015261ffff1660a0850152565b60c083015260005462002d839062002d7c906001600160a01b0316620008a0565b9262003de8565b6002546040516358cd21bf60e11b81529687958694938593891c60ff16916004850162002424565b03925af190811562000be55760009162002dc3575090565b6200051d915060203d811162001a1d5762001a0b8183620003de565b9262002dab97929462002d4b602098979562002e0a9462002dff62000411565b600381529862002d37565b3360c084015260e083015260005462002d839062002e31906001600160a01b0316620008a0565b9262003e5e565b51906200040f8262000641565b9080601f83011215620004ea578151916001600160401b038311620003545760409182519360209162002e7e838360051b0187620003de565b818652828087019260071b85010193818511620004ea578301915b84831062002eaa5750505050505090565b608083830312620004ea5783608091875162002ec6816200038a565b8551815282860151838201528886015162002ee18162000ef2565b898201526060808701519062002ef78262000ef2565b82015281520192019162002e99565b51908115158203620004ea57565b9091606082840312620004ea578151916001600160401b0392838111620004ea57810161016081860312620004ea5762002f4d62000450565b9062002f598162002360565b825262002f696020820162002e38565b602083015262002f7c6040820162002e38565b604083015262002f8f60608201620025ec565b60608301526080810151608083015262002fac60a08201620023f8565b60a083015262002fbf60c0820162002360565b60c083015260e0810151858111620004ea578662002fdf91830162002385565b60e083015261010062002ff481830162002e38565b9083015261012080820151868111620004ea57876200301591840162002e45565b90830152610140809101519082015293620030336020830162002f06565b936040830151908111620004ea576200051d920162002385565b15620030565750565b60405162461bcd60e51b8152602060048201529081906200307c9060248301906200083f565b0390fd5b156200308857565b60405162461bcd60e51b815260206004820152600f60248201526e34b73b30b634b21032b6b4ba3a32b960891b6044820152606490fd5b916200244c6001600160401b0391620030e66040949796976060875260608701906200083f565b9085820360208701526200083f565b906200313261ffff60408401511660208401519061ffff16600052600860205260406000209060005260205260018060a01b036040600020541690565b916001600160a01b038316918215620031b7576200316360806200315a60a0850151620043a9565b930151620043a9565b92803b15620004ea57620031939360008094604051968795869485936350c66be360e11b855260048501620030bf565b03925af1801562000be557620031a7575090565b8062000c066200051d9262000376565b60405162461bcd60e51b815260206004820152601d60248201527f7772617070656420617373657420646f6573206e6f74206578697374730000006044820152606490fd5b156200320457565b60405162461bcd60e51b815260206004820152602860248201527f63616e206f6e6c79207772617020746f6b656e732066726f6d20666f726569676044820152676e20636861696e7360c01b6064820152608490fd5b156200326257565b60405162461bcd60e51b815260206004820152601c60248201527f7772617070656420617373657420616c726561647920657869737473000000006044820152606490fd5b936001600160401b039060ff620032e561ffff969b9a9995620032d660c09a9660e08b5260e08b01906200083f565b9089820360208b01526200083f565b9a1660408701521660608501526001600160a01b031660808401521660a08201520152565b6001600160a01b0390911681526040602082018190526200051d929101906200083f565b9062003343602092828151948592016200081a565b0190565b919091620034946200344a60408301946200337b62003368875161ffff1690565b60025461ffff90811691161415620031fc565b85516020858101805161ffff9093166000908152600883526040808220948252938352929092205491959091620034579190620033c2906001600160a01b0316156200325a565b62003424620033d560a0830151620043a9565b94620033f46060620033eb6080860151620043a9565b94015160ff1690565b95620034028c5161ffff1690565b908a519260405198899663c71f461560e01b8a890152309360248901620032a7565b03926200343a601f1994858101835282620003de565b604051948591308584016200330a565b03838101855284620003de565b620034a16106f6936200346c83860162000471565b9480865262005045848701396040519586916200348d85840180986200332e565b906200332e565b03838101865285620003de565b620034df620034b2885161ffff1690565b865160405160f09290921b6001600160f01b031916938201938452600284015291928260228501620027e4565b5190209151906000f592833b15620004ea5751905161ffff909116600090815260086020908152604080832093835292815282822080546001600160a01b0319166001600160a01b03871690811790915582526009905220805460ff19166001179055565b156200354c57565b60405162461bcd60e51b815260206004820152600e60248201526d34b73b30b634b21039b2b73232b960911b6044820152606490fd5b156200358a57565b60405162461bcd60e51b815260206004820152601a60248201527f7472616e7366657220616c726561647920636f6d706c657465640000000000006044820152606490fd5b15620035d757565b60405162461bcd60e51b815260206004820152601460248201527334b73b30b634b2103a30b933b2ba1031b430b4b760611b6044820152606490fd5b156200361b57565b60405162461bcd60e51b815260206004820152602560248201527f6e6f207772617070657220666f72207468697320746f6b656e2063726561746560448201526419081e595d60da1b6064820152608490fd5b156200367657565b60405162461bcd60e51b815260206004820152602360248201527f696e76616c696420746f6b656e2c2063616e206f6e6c7920756e77726170205760448201526208aa8960eb1b6064820152608490fd5b15620036cf57565b60405162461bcd60e51b815260206004820152602260248201527f66656520686967686572207468616e207472616e7366657272656420616d6f756044820152611b9d60f21b6064820152608490fd5b600080546001600160a01b039062003739908216620008a0565b92604093838551809263607ec5ef60e11b825281806200375e60049788830162000866565b03915afa801562000be557849085869162003b77575b620037819293506200304d565b62003790620009038262003d45565b60e0810194620037a186516200424d565b92620037b1608085015162003ba0565b93600360ff620037c2835160ff1690565b161462003b62575b620037f5610140850162000978620009726200096e8351600052600660205260ff6040600020541690565b606084015161ffff16936001600160401b036200382160a060808401519301516001600160401b031690565b169061ffff8096167fcaf280c8cfeba144da67230d9b009c8f868a75bac9a528fa0474be1ba317c1698a80a4836200387c6200386260a084015161ffff1690565b62003872836002541661ffff1690565b96168614620035cf565b8660608301956200388f875161ffff1690565b908382160362003b21575050620038ad620008a08584015162003ba0565b90620038c0602084015189841662003cc8565b8782169289808751602081019063313ce56760e01b8252888152620038e581620003c2565b5190875afa50620038fd6200210762000ab26200232b565b998a15158062003b14575b1562003b05576200391c828c1115620036c7565b996200392a885161ffff1690565b836200393b816002541661ffff1690565b91161462003af357843b15620004ea5786516340c10f1960e01b81523387820190815260208101839052909290600090849081906040010381838a5af192831562000be557620039929362003adc575b506200252f565b95891562003a355750508254620039b7925087166001600160a01b03169050620008a0565b91823b1562000c3a5751632e1a7d4d60e01b815290810183815290939291869185919082908490829060200103925af191821562000be55785948594859462003a1e575b508391831562003a13575b1690f11562000be5575190565b6108fc925062003a06565b8062000c0662003a2e9262000376565b38620039fb565b9092959694985062003a4c919397505161ffff1690565b9062003a5d816002541661ffff1690565b91161462003acb5750813b15620004ea5793516340c10f1960e01b81526001600160a01b03909416928401928352602083019190915260009183919082908490829060400103925af1801562000be55762003ab757505190565b8062000c0662003ac79262000376565b5190565b915091925062003ac7935062004e44565b8062000c0662003aec9262000376565b386200398b565b62003992916200281482338762004e44565b995062003992908a906200252f565b50338a8a16141562003908565b8386015161ffff909116600090815260086020908152604080832093835292905220546001600160a01b03161662003b5b81151562003613565b90620038c0565b62003b71868616331462003544565b620037ca565b50505062003b9462003781913d8087833e62000cd48183620003de565b91925082919062003774565b6001600160a01b0319811662003bbc576001600160a01b031690565b60405162461bcd60e51b8152602060048201526013602482015272696e76616c69642045564d206164647265737360681b6044820152606490fd5b90601f82018092116200252957565b60850190816085116200252957565b6001600160a01b0381166000908152600a60205260409020549091810190811062002529576001600160401b03811162003c65576001600160a01b039091166000908152600a6020526040902055565b60405162461bcd60e51b815260206004820152603560248201527f7472616e736665722065786365656473206d6178206f75747374616e64696e6760448201527408189c9a5919d959081d1bdad95b88185b5bdd5b9d605a1b6064820152608490fd5b6001600160a01b0381166000908152600a60205260409020549091810390811162002529576001600160a01b039091166000908152600a6020526040902055565b1562003d1157565b60405162461bcd60e51b815260206004820152600c60248201526b696e76616c696420666f726b60a01b6044820152606490fd5b62003d54600c54461462003d09565b608062003d7861ffff60608401511661ffff16600052600b60205260406000205490565b9101511490565b8051602082015191604081015191606082015160a06080840151930151936040519560ff60f81b809460f81b166020880152602187015261ffff60f01b9060f01b16604186015260f81b16604384015260448301526064820152606481526200051d81620003a6565b80519060208101519060408101519060608101519160808201519060c060a0840151930151946040519660ff60f81b9060f81b1660208801526021870152604186015261ffff60f01b809360f01b166061860152606385015260f01b1660838301526085820152608581526200051d816200035a565b6200051d60a582516020840151936040810151906060810151608082015160a08301519060e060c085015194015194604051998a9760ff60f81b9060f81b1660208901526021880152604187015261ffff60f01b809360f01b166061870152606386015260f01b166083840152608583015262003ee581518092602086860191016200081a565b8101036085810184520182620003de565b1562003efe57565b60405162461bcd60e51b8152602060048201526011602482015270696e76616c69642041737365744d65746160781b6044820152606490fd5b906040519162003f47836200035a565b600090818452602084019082825260408501928084526060860193818552608087019082825260a0880192835262003f9360028960ff62003f888862004ce8565b168091521462003ef6565b602184511062003ffc576200040f9562003fc862003fda926064976021880151905262003fc08762004d78565b61ffff169052565b62003fd38562004d45565b60ff169052565b62003fe58362004e00565b905262003ff28262004e22565b9052511462003ef6565b60405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b6044820152606490fd5b60405190620040488262000338565b8160c06000918281528260208201528260408201528260608201528260808201528260a08201520152565b156200407b57565b60405162461bcd60e51b815260206004820152601060248201526f34b73b30b634b2102a3930b739b332b960811b6044820152606490fd5b90620040be62004039565b91620040dd600160ff620040d28462004ce8565b168086521462004073565b620040e88162004d9a565b6020840152620040f88162004dde565b604084015261ffff6200410b8262004d67565b166060840152606381511062003ffc5760858160636200040f9301516080860152620041466200413b8262004d89565b61ffff1660a0870152565b620041518162004dab565b60c0860152511462004073565b906040519161010083018381106001600160401b03821117620003545760405260009081845260208401918083526040850181815260608601828152608087019083825260a088019284845260c0890194855260e08901966060885289620041c68862004ce8565b60ff1690819052620041db9060031462004073565b620041e68762004d9a565b9052620041f38662004dde565b9052620042008562004d67565b61ffff169052620042118462004e11565b90526200421e8362004d89565b61ffff1690526200422f8262004e33565b905280516200423e9062002519565b620042499162004c52565b9052565b906200425862004039565b9160ff620042668262004ce8565b16600181036200427e57506200051d919250620040b3565b600303620042f957620042e560a06200429b620042f0936200415e565b600386526020810151602087015260408101516040870152620042d2620042c7606083015161ffff1690565b61ffff166060880152565b60808101516080870152015161ffff1690565b61ffff1660a0840152565b600060c0830152565b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c185e5b1bd859081a5960721b6044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b6000198114620025295760010190565b90620043658262000481565b620043746040519182620003de565b828152809262004387601f199162000481565b0190602036910137565b908151811015620043a3570160200190565b62004333565b60005b602081108062004417575b15620043ce57620043c89062004349565b620043ac565b90620043da8262004359565b9160005b818110620043ec5750505090565b6020811015620043a357808362004411921a6200440a828762004391565b5362004349565b620043de565b15620043a35781811a60f81b6001600160f81b0319161515620043b7565b156200443d57565b60405162461bcd60e51b815260206004820152601060248201526f1a5b9d985b1a590818da185a5b881a5960821b6044820152606490fd5b156200447d57565b60405162461bcd60e51b815260206004820152601860248201527f636861696e20616c7265616479207265676973746572656400000000000000006044820152606490fd5b15620044ca57565b60405162461bcd60e51b815260206004820152601160248201527034b73b30b634b21022ab269021b430b4b760791b6044820152606490fd5b6040519061016082018281106001600160401b038211176200035457604052816101406000918281528260208201528260408201528260608201528260808201528260a08201528260c0820152606060e08201528261010082015260606101208201520152565b604051906200457982620003c2565b60168252753bb937b7339033b7bb32b93730b731b29031b430b4b760511b6020830152565b60405190620045ad82620003c2565b601982527f77726f6e6720676f7665726e616e636520636f6e7472616374000000000000006020830152565b60405190606082018281106001600160401b0382111762000354576040526022825261195960f21b6040837f676f7665726e616e636520616374696f6e20616c726561647920636f6e73756d60208201520152565b62004678906200463d62004503565b5060008054909182916200465c90620008a0906001600160a01b031681565b604051808096819463607ec5ef60e11b83526004830162000866565b03915afa91821562000be55781928291839162004730575b50811562004728575050606082015161ffff1661ffff620046bc620013aa60025461ffff9060101c1690565b9116036200471c576080820151600354036200471057620046f0610140830151600052600560205260ff6040600020541690565b620047045750906001906200051d62002307565b90916200051d620045d9565b90916200051d6200459e565b90916200051d6200456a565b929390929150565b9150506200474b9192503d8084833e62000cd48183620003de565b9192913862004690565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc908154813b1562004831577f2e4cc16c100f0b55e2df82ab0b1a7e294aa9cbd01b48fbaf622683fbc0507a499060018060a01b039081841694856bffffffffffffffffffffffff60a01b83161790556200482b604051600080968192897fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8480a263204a7f0760e21b6020820190815260048252906200481681620003c2565b51915af4620048246200232b565b906200304d565b169180a3565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b156200489457565b60405162461bcd60e51b815260206004820152600c60248201526b77726f6e67206d6f64756c6560a01b6044820152606490fd5b15620048d057565b60405162461bcd60e51b815260206004820152600c60248201526b3bb937b7339030b1ba34b7b760a11b6044820152606490fd5b156200490c57565b60405162461bcd60e51b815260206004820152600c60248201526b0eee4dedcce40d8cadccee8d60a31b6044820152606490fd5b906200494b6200245f565b91620049716a546f6b656e427269646765620049678362004dbc565b808652146200488c565b62004992600160ff620049848462004d34565b1680602087015214620048c8565b6023815110620049db5760456200040f9161ffff806023830151166040870152620049bd8262004d56565b166060860152620049ce8162004def565b6080860152511462004904565b60405162461bcd60e51b8152602060048201526014602482015273746f55696e7431365f6f75744f66426f756e647360601b6044820152606490fd5b6040519062004a26826200038a565b60006060838281528260208201528260408201520152565b9062004a4962004a17565b9162004a656a546f6b656e427269646765620049678362004dbc565b62004a78600260ff620049848462004d34565b6023815110620049db57602381015161ffff1660408401526200040f9060439062004aa38162004dcd565b6060860152511462004904565b9062004abb62004a17565b9162004ad76a546f6b656e427269646765620049678362004dbc565b62004aea600360ff620049848462004d34565b604181511062004b275760438160416200040f930151604086015262004b1f62004b148262004d67565b61ffff166060870152565b511462004904565b60405162461bcd60e51b8152602060048201526015602482015274746f55696e743235365f6f75744f66426f756e647360581b6044820152606490fd5b600a600c541462004b7157565b600480546001600160a01b0319166006602160991b01179055565b46810362004b9957600c55565b60405162461bcd60e51b81526020600482015260126024820152711a5b9d985b1a5908195d9b50da185a5b925960721b6044820152606490fd5b1562004bdb57565b60405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606490fd5b1562004c1957565b60405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606490fd5b62004c6a8262004c628162003bf7565b101562004bd3565b62004c83815162004c7b8462003c06565b111562004c11565b8162004c9c575050604051600081526020810160405290565b60405191601f8116916085831560051b80858701019484860193010101905b80841062004cd45750508252601f01601f191660405290565b909283518152602080910193019062004cbb565b600181511062004cf9576001015190565b60405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b6044820152606490fd5b602181511062004cf9576021015190565b602481511062004cf9576024015190565b6025815110620049db576025015190565b6043815110620049db576043015190565b6023815110620049db576023015190565b6065815110620049db576065015190565b602181511062004b27576021015190565b608581511062004b27576085015190565b602081511062003ffc576020015190565b604381511062003ffc576043015190565b604181511062003ffc576041015190565b604581511062003ffc576045015190565b604481511062003ffc576044015190565b606381511062003ffc576063015190565b606481511062003ffc576064015190565b608581511062003ffc576085015190565b60405163a9059cbb60e01b60208201526001600160a01b039290921660248301526044808301939093529181526200040f9162004e83606483620003de565b62004f45565b6040516323b872dd60e01b60208201526001600160a01b0392831660248201529290911660448301526064808301939093529181526200040f9162004e8382620003a6565b90816020910312620004ea576200051d9062002f06565b1562004eed57565b60405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b6040516001600160a01b03919091169162004f6082620003c2565b6020928383527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656484840152803b1562004fe1576000828192828762004fb79796519301915af162004fb06200232b565b9062005026565b8051908162004fc557505050565b826200040f9362004fdb93830101910162004ece565b62004ee5565b60405162461bcd60e51b815260048101859052601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b9091901562005033575090565b815115620030565750805190602001fdfe6080604052346100a3576106f6803803809161001a826100be565b60803960408160800191126100a35761003161010c565b60a05191906001600160401b0383116100a35781609f840112156100a35782608001519261005e84610122565b9261006c60405194856100e9565b84845260a085830101116100a3576100949361008f9160a060208601910161013d565b610160565b6040516101f690816105008239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b6080601f91909101601f19168101906001600160401b038211908210176100e457604052565b6100a8565b601f909101601f19168101906001600160401b038211908210176100e457604052565b608051906001600160a01b03821682036100a357565b6001600160401b0381116100e457601f01601f191660200190565b60005b8381106101505750506000910152565b8181015183820152602001610140565b90813b156102c257604051635c60da1b60e01b8082526020939092916001600160a01b038216918582600481865afa918215610298576101ef926101af916000916102a5575b503b1515610340565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b0319166001600160a01b03909216919091179055565b60405192817f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e600080a282511580159061029d575b610230575b5050505050565b6004848693819382525afa9182156102985761025e93600093610269575b50506102586103a5565b916103fe565b503880808080610229565b610289929350803d10610291575b61028181836100e9565b810190610315565b90388061024e565b503d610277565b610334565b506000610224565b6102bc9150883d8a116102915761028181836100e9565b386101a6565b60405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b6064820152608490fd5b908160209103126100a357516001600160a01b03811681036100a35790565b6040513d6000823e3d90fd5b1561034757565b60405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608490fd5b60405190606082016001600160401b038111838210176100e45760405260278252660819985a5b195960ca1b6040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b9190823b15610451576000816104469460208394519201905af43d15610449573d9061042982610122565b9161043760405193846100e9565b82523d6000602084013e6104a5565b90565b6060906104a5565b60405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608490fd5b909190156104b1575090565b8151156104c15750805190602001fd5b6044604051809262461bcd60e51b8252602060048301526104f1815180928160248601526020868601910161013d565b601f01601f19168101030190fdfe608080604052366100c4577fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054635c60da1b60e01b8252602090829060049082906001600160a01b03165afa9081156100b857600091610060575b5061015b565b6020903d82116100b0575b601f8201601f1916810167ffffffffffffffff81118282101761009c5761009693506040520161017a565b3861005a565b634e487b7160e01b84526041600452602484fd5b3d915061006b565b6040513d6000823e3d90fd5b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054604051635c60da1b60e01b815290602090829060049082906001600160a01b03165afa9081156100b85760009161011d575061015b565b60203d8111610154575b601f8101601f1916820167ffffffffffffffff81118382101761009c5761009693506040528101906101a1565b503d610127565b6000808092368280378136915af43d82803e15610176573d90f35b3d90fd5b602090607f19011261019c576080516001600160a01b038116810361019c5790565b600080fd5b9081602091031261019c57516001600160a01b038116810361019c579056fea2646970667358221220a928e3b00b7d19d8e2f067361e93c7712de3e243b0b8be428e9ac989960b767464736f6c63430008130033a264697066735822122027b87805b1af83dbc21a984fec1bd2b51416d51e7c76f797ae823d5d3f2b30c064736f6c63430008130033";
const isSuperArgs = (xs) => xs.length > 1;
class BridgeImplementation__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.BridgeImplementation__factory = BridgeImplementation__factory;
BridgeImplementation__factory.bytecode = _bytecode;
BridgeImplementation__factory.abi = _abi;
