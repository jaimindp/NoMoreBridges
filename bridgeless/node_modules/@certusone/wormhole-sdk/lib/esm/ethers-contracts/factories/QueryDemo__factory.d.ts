import { Signer, ContractFactory, BigNumberish, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { QueryDemo, QueryDemoInterface } from "../QueryDemo";
declare type QueryDemoConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class QueryDemo__factory extends ContractFactory {
    constructor(...args: QueryDemoConstructorParams);
    deploy(_owner: PromiseOrValue<string>, _wormhole: PromiseOrValue<string>, _myChainID: PromiseOrValue<BigNumberish>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<QueryDemo>;
    getDeployTransaction(_owner: PromiseOrValue<string>, _wormhole: PromiseOrValue<string>, _myChainID: PromiseOrValue<BigNumberish>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): QueryDemo;
    connect(signer: Signer): QueryDemo__factory;
    static readonly bytecode = "0x60e0346200019a57601f62002bd538819003918201601f1916830192916001600160401b039182851184861017620001625781606092859260409788528339810103126200019a5762000052826200019f565b918362000062602083016200019f565b91015161ffff93848216928383036200019a576001600160a01b039081168015620001895760805263916d574363ffffffff196002541617600255811615620001785760a05260c05283519260a08401928484109084111762000162576003928552818452602084013081528585019060009283835287606088019480865260808901968188528152806020522096511686549162010000600160b01b03905160101b169160018060b01b031916171785555160018501555160028401555191015551612a209081620001b58239608051818181610f6d01526123b0015260a051816103ff015260c051818181610c3301528181610f00015261142a0152f35b634e487b7160e01b600052604160045260246000fd5b85516349e27cff60e01b8152600490fd5b8751638ef9698f60e01b8152600490fd5b600080fd5b51906001600160a01b03821682036200019a5756fe6080604052600436101561001257600080fd5b60003560e01c806316476dcc146115865780631865c57d146113d15780632b7e1cd8146113b55780632df2f9781461133e5780633896fc121461132757806345ee36c51461131057806347bdbbcf146112a65780634d63d4731461012f5780634f098c0a146111d3578063571354e2146110cc57806371b632c81461108c57806378cc403014610f9c57806384acd1bb14610f575780638a8f286814610f3b578063916d574314610eea578063a0f419fa14610ece578063a8024ef114610e8c578063ac2886b114610bfe578063bda269f214610949578063c008e15614610919578063c895dec6146104e9578063ca363c4b146103cd578063dc37e93e14610155578063e0b54d30146101345763ffa1ad741461012f57600080fd5b611acd565b3461015057600036600319011261015057602060405160048152f35b600080fd5b346101505761016336611716565b60405161016f816115de565b6060815260606020820152600060408201526000606082015260006080820152606060a0820152600360ff602084015116036103bb576101df6101c1604084015163ffffffff600482015116906128af565b9083526040840151600463ffffffff81848401015116920190612927565b9290602083015260018084604084015101015193016001600160401b0360086060840151015116604084015260286060830151015160808401526001600160401b036030606084015101511660608401526031606083015101519360319460ff8083169116036103a95761025560ff821661200b565b60a08501526000905b60ff8116821061030b57610307856102888860608861028189604083015161280c565b015161280c565b604051918291602083526102a8815160c0602086015260e08501906117d3565b60a06102c6602084015192601f1993848883030160408901526117d3565b926001600160401b0360408201511660608701526001600160401b0360608201511660808701526080810151828701520151908483030160c08501526117f8565b0390f35b909491600161038b61035b61032660ff94604089015161299b565b906103358b60a08c0151611b91565b5190858060a01b031690526040880151600463ffffffff81848401015116920190612927565b9590602061036d8b60a08c0151611b91565b5101526060870151600463ffffffff81848401015116920190612927565b9790604061039d8360a08b0151611b91565b5101520191905061025e565b60405163179ef5bb60e21b8152600490fd5b60405163ae67532160e01b8152600490fd5b34610150576040366003190112610150576103e6611686565b602435906001600160a01b0380831683036101505733907f000000000000000000000000000000000000000000000000000000000000000016036104d75761ffff8091169081600052600060205280604060002054161561046a575b6040600020805462010000600160b01b031916601085901b62010000600160b01b0316179055005b600154680100000000000000008110156104c15780600161048e9201600155611b2e565b819291549060031b9184831b921b191617905580600052600060205260406000209061ffff198254161790558180610442565b634e487b7160e01b600052604160045260246000fd5b6040516349e27cff60e01b8152600490fd5b34610150576104f736611716565b6040519061010082018281106001600160401b038211176104c1576040526060825260006020830152600060408301526000606083015260006080830152600060a0830152600060c0830152606060e0830152600460ff602083015116036103bb57610572604082015163ffffffff600482015116906128af565b919083526001600160401b0360088360408401510101511660208401526001600160401b0360108360408401510101511660408401526001600160401b03601883604084015101015116606084015260198083604084015101015192016001600160401b036008606084015101511660808501526001600160401b036010606084015101511660a085015260306060830151015160c08501526031606083015101519260319360ff8083169116036103a95761063060ff8216611883565b61063d6040519182611665565b60ff8216808252601f199061065190611883565b0160005b8181106108d857505060e08601526000905b60ff811682106107c957856106878660608761028188604083015161280c565b60405180916020825260e06106aa825161010060208601526101208501906117d3565b916001600160401b0360208201511660408501526001600160401b0360408201511660608501526001600160401b0360608201511660808501526001600160401b0360808201511660a08501526001600160401b0360a08201511660c085015260c081015182850152015190601f1983820301610100840152815180825260208201916020808360051b8301019401926000915b83831061074b5786860387f35b9193955091936020806107b7600193601f1986820301875260c060a08b51805184526001600160401b038682015116868501526001600160401b036040820151166040850152606081015115156060850152608081015160808501520151918160a082015201906117d3565b9701930193019092869594929361073e565b909382604085015101602001518560e0880151906107e691611b91565b5193602001935280606085015101600801518560e08801519061080891611b91565b51602001906001600160401b0316905280606085015101601001518560e08801519061083391611b91565b51604001906001600160401b031690526060840151601180838301015191519083019061085f916129c0565b60ff1615158560e08801519061087491611b91565b516060015280606085015101603101518560e08801519061089491611b91565b5160800152606084015190603580828401015163ffffffff1691016108b892612927565b94908160e0880151906108ca91611b91565b5160a0015260010190610667565b6020906040516108e7816115de565b60008152600083820152600060408201526000606082015260006080820152606060a082015282828601015201610655565b3461015057600036600319011261015057610307610935611ae9565b6040519182916020835260208301906117d3565b346101505761095736611716565b60405161014081018181106001600160401b038211176104c1576040526060815260606020820152600060408201526000606082015260006080820152600060a0820152600060c0820152600060e082015260006101008201526060610120820152600260ff602084015116036103bb576001600160401b036008604084015101511660408201526109fb6101c1604084015163ffffffff600c8201511690612837565b9290602083015260018084604084015101015193016001600160401b0360086060840151015116606084015260286060830151015160c08401526001600160401b036030606084015101511660808401526001600160401b036038606084015101511660a084015260586060830151015160e08401526001600160401b036060808401510151166101008401526061606083015101519360619460ff8083169116036103a957610aad60ff821661200b565b6101208501526000905b60ff81168210610ba15761030785610ada8860608861028189604083015161280c565b60405191829160208352610120610b18610b02835161014060208801526101608701906117d3565b6020840151868203601f190160408801526117d3565b916001600160401b0360408201511660608601526001600160401b0360608201511660808601526001600160401b0360808201511660a08601526001600160401b0360a08201511660c086015260c081015160e086015260e08101516101008601526001600160401b0361010082015116828601520151601f19848303016101408501526117f8565b9094916001610bdf610bcc610bbc60ff94604089015161299b565b906103358b6101208c0151611b91565b9590602061036d8b6101208c0151611b91565b97906040610bf2836101208b0151611b91565b51015201919050610ab7565b34610150576080610c17610c113661189a565b90611c38565b018051516001548103610e7a5760005b818110610c965761ffff7f0000000000000000000000000000000000000000000000000000000000000000166000526000602052600160406000204360028201554260038201550180549060018201809211610c805755005b634e487b7160e01b600052601160045260246000fd5b61ffff9081610ca6828651611b91565b515116600052600060205260406000209182549080610cc484611b2e565b90549060031b1c1690821603610e6857610ce8610ce2838751611b91565b51612073565b90610d056001600160401b03602084015116600286015490612232565b60408201516001600160401b03164261012b19810111610c8057610d2f904261012b190190612208565b600160808301515103610e5657610dac90604051610d4c8161162f565b600181526020368183013760405191610d648361162f565b600183526020368185013760101c6001600160a01b0316610d8482611b84565b5260025460e01b610d9483611b84565b6001600160e01b031990911690526080840151612254565b60206040610dbd6080840151611b84565b5101515103610e1157610def6080826001600160401b0360206040950151166002870155600060038701550151611b84565b5101519160208380518101031261015057600160208194015191015501610c27565b60405162461bcd60e51b815260206004820152601760248201527f726573756c74206973206e6f7420612075696e743235360000000000000000006044820152606490fd5b604051631dd329af60e01b8152600490fd5b604051634efe96a960e01b8152600490fd5b604051633a279ba160e01b8152600490fd5b34610150576020366003190112610150576004356001600160401b03811161015057610ec6610ec160209236906004016116cf565b611bee565b604051908152f35b3461015057600036600319011261015057602060405160038152f35b346101505760003660031901126101505761ffff7f00000000000000000000000000000000000000000000000000000000000000001660005260006020526020600160406000200154604051908152f35b3461015057600036600319011261015057602060405160058152f35b34610150576000366003190112610150576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461015057604036600319011261015057610fb5611686565b6024356001600160401b0381116101505736602382011215610150578060040135610fdf81611883565b91610fed6040519384611665565b81835260209160248385019160051b8301019136831161015057602401905b82821061107557845160009061ffff8089169088845b848110611048575b50505050501561103657005b604051633d23e4d160e11b8152600490fd5b826110538284611b91565b5116841461106357600101611022565b5050505050506001818080808061102a565b83809161108184611697565b81520191019061100c565b34610150576020366003190112610150576004356001600160401b038111610150576110be60209136906004016116cf565b818151910120604051908152f35b346101505761112f6110e0610c113661189a565b60405190602080835260ff91828151168285015261ffff91828183015116604086015263ffffffff604083015116916060928387015282810151608097889160a0838a015260c08901906117d3565b91015194601f1994858884030160a08901528651948584528484019285808860051b8701019901976000955b888710611168578b8b038cf35b9091929394959697989988806111bf8f848f6111af8b918e8b8b60019b0301905251938d85511684528b8786015116878501526040850151908060408601528401906117d3565b920151908a8184039101526117d3565b9c019701970195989796949392919061115b565b34610150576060366003190112610150576001600160401b03600435818111610150573660238201121561015057806004013561120f81611883565b9161121d6040519384611665565b8183526020908184016024809460051b8301019136831161015057848101915b83831061128057878787358281116101505761125d9036906004016119f8565b6044359283116101505761127861127e933690600401611a5e565b91612254565b005b823588811161015057859161129b839289369187010161198e565b81520192019161123d565b34610150576060366003190112610150576001600160401b03600435818111610150576112d790369060040161198e565b602435828111610150576112ef9036906004016119f8565b6044359283116101505761130a61127e933690600401611a5e565b91612288565b346101505761127e6113213661159d565b90612232565b346101505761127e6113383661189a565b90612390565b346101505761030761135761135236611716565b612073565b604051918291602083526080611379825160a0602087015260c08601906117d3565b916001600160401b0380602083015116604087015260408201511660608601526060810151828601520151601f198483030160a08501526117f8565b3461015057600036600319011261015057602060405160028152f35b346101505760003660031901126101505760018054818101808211610c8057916113fa83611883565b926114086040519485611665565b808452611417601f1991611883565b0160005b81811061154657505061ffff807f000000000000000000000000000000000000000000000000000000000000000016600052602092600084526114616040600020611ba5565b61146a86611b84565b5261147485611b84565b5060005b8181106114f45750506040519280840190808552855180925280604086019601926000905b8382106114aa5786880387f35b8451805182168952838101516001600160a01b0316848a0152604080820151908a0152606080820151908a01526080908101519089015260a090970196938201939085019061149d565b8261150182979597611b2e565b90549060031b1c16600052600085526040600020868201809211610c805761152890611ba5565b6115328286611b91565b5261153d8185611b91565b50949294611478565b602090604095939551611558816115c3565b600081528260008183015260006040830152600060608301526000608083015282860101520193919361141b565b346101505761127e6115973661159d565b90612208565b6040906003190112610150576004356001600160401b0381168103610150579060243590565b60a081019081106001600160401b038211176104c157604052565b60c081019081106001600160401b038211176104c157604052565b608081019081106001600160401b038211176104c157604052565b606081019081106001600160401b038211176104c157604052565b604081019081106001600160401b038211176104c157604052565b602081019081106001600160401b038211176104c157604052565b90601f801991011681019081106001600160401b038211176104c157604052565b6004359061ffff8216820361015057565b359061ffff8216820361015057565b359060ff8216820361015057565b6001600160401b0381116104c157601f01601f191660200190565b81601f82011215610150578035906116e6826116b4565b926116f46040519485611665565b8284526020838301011161015057816000926020809301838601378301015290565b60031960208282011261015057600435916001600160401b03918284116101505760809084830301126101505760405192611750846115f9565b61175c81600401611697565b845261176a602482016116a6565b602085015260448101358381116101505782600461178a928401016116cf565b60408501526064810135928311610150576117a892016004016116cf565b606082015290565b60005b8381106117c35750506000910152565b81810151838201526020016117b3565b906020916117ec815180928185528580860191016117b0565b601f01601f1916010190565b908082519081815260208091019281808460051b8301019501936000915b8483106118265750505050505090565b9091929394958480611873600193601f198682030187528a51858060a01b03815116825261186084820151606080878601528401906117d3565b91604080920151918184039101526117d3565b9801930193019194939290611816565b6001600160401b0381116104c15760051b60200190565b9060409182600319820112610150576001600160401b039260043584811161015057826118c9916004016116cf565b936024359081116101505782602382011215610150578060040135926118ee84611883565b936118fb84519586611665565b80855260209160248387019260071b8501019381851161015057602401915b84831061192a5750505050505090565b60808383031261015057836080918751611943816115f9565b85358152828601358382015261195a8987016116a6565b89820152606061196b8188016116a6565b9082015281520192019161191a565b35906001600160a01b038216820361015057565b919060608382031261015057604051906119a782611614565b81936119b28161197a565b83526001600160401b0391602082013583811161015057816119d59184016116cf565b60208501526040820135928311610150576040926119f392016116cf565b910152565b81601f8201121561015057803591611a0f83611883565b92611a1d6040519485611665565b808452602092838086019260051b820101928311610150578301905b828210611a47575050505090565b838091611a538461197a565b815201910190611a39565b81601f8201121561015057803591611a7583611883565b92611a836040519485611665565b808452602092838086019260051b820101928311610150578301905b828210611aad575050505090565b81356001600160e01b031981168103610150578152908301908301611a9f565b3461015057600036600319011261015057602060405160018152f35b60405190611af682611614565b60238252620c0c1f60ea1b6040837f71756572795f726573706f6e73655f303030303030303030303030303030303060208201520152565b90600154821015611b6e576001600052601e8260041c7fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6019260011b1690565b634e487b7160e01b600052603260045260246000fd5b805115611b6e5760200190565b8051821015611b6e5760209160051b010190565b90604051611bb2816115c3565b825461ffff8116825260101c6001600160a01b031660208201526001830154604082015260028301546060820152600392909201546080830152565b611bf6611ae9565b9060208151910120611c326040805180936020611c1c81840197888151938492016117b0565b8201906020820152036020810184520182611665565b51902090565b91909160405190611c48826115c3565b60008252611c72602083019460008652600060408501526060808501526060608085015282612390565b600160ff818301511680845203611ffa5760038181015161ffff169485905293611fb4576040519360018501906042860191600182850101925b808210611fa1575060418093508752601f8019910116604052019360608301525b8381019060048201516004860192600581015160ff80875116911603611f8f578063ffffffff6009600a930151166040870152015192600a87019060ff851615611f7d57600463ffffffff841689010110610c8057600563ffffffff831688018481018201519101949060ff808316911603611f6b57611d4f60ff8216611883565b611d5c6040519182611665565b60ff8216808252601f1990611d7090611883565b0160005b818110611f3957505060808701526000905b60ff81168210611dde57505080600463ffffffff841689010103611db5575050611db29293945061280c565b90565b6044925060048763ffffffff6040519463061bc83560e51b865216010160048301526024820152fd5b909491600280828701015161ffff611dfa8960808c0151611b91565b5191169052838601015161ffff80611e168960808c0151611b91565b515116911603611f27576003818601015160ff6020611e398960808c0151611b91565b5101911690526003838601015160ff806020611e598a60808d0151611b91565b51015116911603611f1557600160ff6020611e788960808c0151611b91565b51015116108015611ef5575b6103bb576001611ed7608094896040611ebe8b611eb4888d600763ffffffff8160ff9d8401015116920190612927565b9a90940151611b91565b510152600763ffffffff81838b01015116910188612927565b97906060611ee98360808d0151611b91565b51015201919050611d86565b50600560ff6020611f0a8960808c0151611b91565b510151161015611e84565b604051630216496160e01b8152600490fd5b60405163a179f8c960e01b8152600490fd5b602090604051611f48816115f9565b600081526000838201526060604082015260608082015282828601015201611d74565b60405163084ae4a360e41b8152600490fd5b60405163bb6b170d60e01b8152600490fd5b60405163714f551360e01b8152600490fd5b8351825260209384019390910190611cac565b604080519450840160208501602383015b828210611fea5750905060208552601f80199101166040526023936060830152611ccd565b8051825260209182019101611fc5565b60405162ecb0bd60e51b8152600490fd5b9061201582611883565b60409061202482519182611665565b8381528093612035601f1991611883565b0191600091825b84811061204a575050505050565b602090835161205881611614565b8581526060839080828401528683015282850101520161203c565b90604091825190612083826115c3565b606082526020938483019160009182845280850190838252606086019380855260808701606081526001928360ff8c88015116036121f85780860194855163ffffffff916004918383820151166120d9916128af565b9b908d5287808d8b510101519c01996060019a6001600160401b0391828d51600801511690528b516028015190528a51603001511690528851603101519460319a60ff1660ff819716036121e9576121368695949392979661200b565b8452955b8487106121605750505050505050611db2949596509061215a915161280c565b5161280c565b90919293946121cc879b8f9883996121ac61217f6121b69e8e5161299b565b9061218b858d51611b91565b516001600160a01b0390911690528d518181018901518a1691890190612927565b9d90928a51611b91565b5101528b51848681848401015116920190612927565b9b90856121da838951611b91565b5101520195949392919061213a565b50825163179ef5bb60e21b8152fd5b5163ae67532160e01b8152600490fd5b620f42406001600160401b0380921604161061222057565b604051631d02676560e11b8152600490fd5b6001600160401b03161061224257565b604051632c42c2bb60e21b8152600490fd5b919082519260005b84811061226a575050505050565b80612282858561227c60019587611b91565b51612288565b0161225c565b909182516000811560001461237a575060015b90825115600090600014612375575060015b9460005b828110612340575b5050501561232e5780519160005b8381106122ec575b50505050156122da57565b60405163403b6ec560e11b8152600490fd5b60208201516004015160e01b6001600160e01b03199081169061230f8386611b91565b51161461231e576001016122c7565b50505050506001388080806122cf565b60405163a710429d60e01b8152600490fd5b85516001600160a01b03908116906123588385611b91565b511614612367576001016122b1565b5050505060013880806122b9565b6122ad565b61229b565b519063ffffffff8216820361015057565b60408051631cfe795160e01b81526020936004936001600160a01b0393927f00000000000000000000000000000000000000000000000000000000000000008516929087818881875afa908115612801576000916127cc575b508451637ca8cbad60e11b815263ffffffff9182168882015292600084602481885afa9384156127c1576000946126bf575b5061242590611bee565b928051511561268557825181515190875191637c672b0560e11b83528a8301528a826024818a5afa91821561267a5760009261264b575b501061261c5795929091889492865197889563a0cce1b360e01b875260648701948b8801526060948560248901528451809152886084890195019060005b8181106125e157505050600319878503016044880152888401888351968b8752875180935286019601916000905b8282106125c357505050509186869492600098869501511691015203915afa9182156125b8576000908193612527575b50156125045750505050565b90612523915193849362461bcd60e51b855284015260248301906117d3565b0390fd5b9092503d8084833e6125398183611665565b81019282828503126125ad5781519182151583036125b05786810151906001600160401b0382116125b4570184601f820112156125b05780519161257c836116b4565b9561258986519788611665565b8387528884840101116125ad5750906125a7918780870191016117b0565b386124f8565b80fd5b5080fd5b8280fd5b50513d6000823e3d90fd5b8351811688528e9a8d9a5097880197909301926001909101906124c8565b8251805188528b8101518c8901528c81015160ff9081168e8a01529089015116888801528e9a8d9a506080909701969092019160010161249a565b855162461bcd60e51b81528089018a905260096024820152686e6f2071756f72756d60b81b6044820152606490fd5b90918b82813d8311612673575b6126628183611665565b810103126125ad575051903861245c565b503d612658565b88513d6000823e3d90fd5b855162461bcd60e51b81528089018a905260146024820152731a5b9d985b1a590819dd585c991a585b881cd95d60621b6044820152606490fd5b90933d8082843e6126d08184611665565b82018a838203126125b05782516001600160401b03938482116127bd57019188838303126125ad57885193898501858110828211176127aa578a5283519081116125b05783019082601f830112156125ad57908c929181519161273283611883565b9461273f8d519687611665565b8386528086019360051b8201019384116125b057908e80969594939201915b83831061278657505050509161277b91849361242595520161237f565b8a820152939061241b565b9091809394959650518d811681036125b45781528e9594939286019190860161275e565b634e487b7160e01b835260418d52602483fd5b8380fd5b86513d6000823e3d90fd5b908882813d83116127fa575b6127e28183611665565b810103126125ad57506127f49061237f565b386123e9565b503d6127d8565b85513d6000823e3d90fd5b5190808203612819575050565b604492506040519163061bc83560e51b835260048301526024820152fd5b909182156128915782600c019160405193601f8116918215612888575b600c838701938385019201015b8184106128785750508452601f01601f1916604052565b8051845260209384019301612861565b60209250612854565b9150506040516128a08161164a565b60008152600036813790600c90565b9091821561290957826004019160405193601f8116918215612900575b6004838701938385019201015b8184106128f05750508452601f01601f1916604052565b80518452602093840193016128d9565b602092506128cc565b9150506040516129188161164a565b60008152600036813790600490565b9290821561297e578281019260405194601f8216928315612975575b838701938385019201015b8184106129655750508452601f01601f1916604052565b805184526020938401930161294e565b60209350612943565b9250905060405161298e8161164a565b6000815260003681379190565b9190916129b3601480850194830101519151846129c0565b6001600160a01b03169190565b908082116129cc575050565b6044925060405191633d71388b60e21b835260048301526024820152fdfea2646970667358221220faa22612c2cecdc43c0709e29e3ac70fe492775ae85708facdd9c16a9d51e46664736f6c63430008130033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_owner";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wormhole";
            readonly type: "address";
        }, {
            readonly internalType: "uint16";
            readonly name: "_myChainID";
            readonly type: "uint16";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "ChainIdMismatch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "EmptyWormholeAddress";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidChainId";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidContractAddress";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidForeignChainID";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidFunctionSignature";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "received";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "expected";
            readonly type: "uint256";
        }];
        readonly name: "InvalidPayloadLength";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidResponseVersion";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidWormholeAddress";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NumberOfResponsesMismatch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "offset";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "length";
            readonly type: "uint256";
        }];
        readonly name: "OutOfBounds";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "RequestTypeMismatch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "StaleBlockNum";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "StaleBlockTime";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UnexpectedNumberOfResults";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UnexpectedResultLength";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UnexpectedResultMismatch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UnsupportedQueryType";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "VersionMismatch";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ZeroQueries";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "QT_ETH_CALL";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "QT_ETH_CALL_BY_TIMESTAMP";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "QT_ETH_CALL_WITH_FINALITY";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "QT_MAX";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "QT_SOL_ACCOUNT";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "VERSION";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getMyCounter";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "response";
            readonly type: "bytes";
        }];
        readonly name: "getResponseDigest";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "response";
            readonly type: "bytes";
        }];
        readonly name: "getResponseHash";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getState";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint16";
                readonly name: "chainID";
                readonly type: "uint16";
            }, {
                readonly internalType: "address";
                readonly name: "contractAddress";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "counter";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "blockNum";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "blockTime";
                readonly type: "uint256";
            }];
            readonly internalType: "struct QueryDemo.ChainEntry[]";
            readonly name: "";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "response";
            readonly type: "bytes";
        }, {
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint8";
                readonly name: "guardianIndex";
                readonly type: "uint8";
            }];
            readonly internalType: "struct IWormhole.Signature[]";
            readonly name: "signatures";
            readonly type: "tuple[]";
        }];
        readonly name: "parseAndVerifyQueryResponse";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint8";
                readonly name: "version";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint16";
                readonly name: "senderChainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "uint32";
                readonly name: "nonce";
                readonly type: "uint32";
            }, {
                readonly internalType: "bytes";
                readonly name: "requestId";
                readonly type: "bytes";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint16";
                    readonly name: "chainId";
                    readonly type: "uint16";
                }, {
                    readonly internalType: "uint8";
                    readonly name: "queryType";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "request";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "response";
                    readonly type: "bytes";
                }];
                readonly internalType: "struct ParsedPerChainQueryResponse[]";
                readonly name: "responses";
                readonly type: "tuple[]";
            }];
            readonly internalType: "struct ParsedQueryResponse";
            readonly name: "r";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint16";
                readonly name: "chainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "uint8";
                readonly name: "queryType";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes";
                readonly name: "request";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "response";
                readonly type: "bytes";
            }];
            readonly internalType: "struct ParsedPerChainQueryResponse";
            readonly name: "pcr";
            readonly type: "tuple";
        }];
        readonly name: "parseEthCallByTimestampQueryResponse";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes";
                readonly name: "requestTargetBlockIdHint";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "requestFollowingBlockIdHint";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint64";
                readonly name: "requestTargetTimestamp";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "targetBlockNum";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "targetBlockTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "followingBlockNum";
                readonly type: "uint64";
            }, {
                readonly internalType: "bytes32";
                readonly name: "targetBlockHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "followingBlockHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint64";
                readonly name: "followingBlockTime";
                readonly type: "uint64";
            }, {
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "contractAddress";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "callData";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "result";
                    readonly type: "bytes";
                }];
                readonly internalType: "struct EthCallData[]";
                readonly name: "result";
                readonly type: "tuple[]";
            }];
            readonly internalType: "struct EthCallByTimestampQueryResponse";
            readonly name: "r";
            readonly type: "tuple";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint16";
                readonly name: "chainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "uint8";
                readonly name: "queryType";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes";
                readonly name: "request";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "response";
                readonly type: "bytes";
            }];
            readonly internalType: "struct ParsedPerChainQueryResponse";
            readonly name: "pcr";
            readonly type: "tuple";
        }];
        readonly name: "parseEthCallQueryResponse";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes";
                readonly name: "requestBlockId";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint64";
                readonly name: "blockNum";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "blockTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "bytes32";
                readonly name: "blockHash";
                readonly type: "bytes32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "contractAddress";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "callData";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "result";
                    readonly type: "bytes";
                }];
                readonly internalType: "struct EthCallData[]";
                readonly name: "result";
                readonly type: "tuple[]";
            }];
            readonly internalType: "struct EthCallQueryResponse";
            readonly name: "r";
            readonly type: "tuple";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint16";
                readonly name: "chainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "uint8";
                readonly name: "queryType";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes";
                readonly name: "request";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "response";
                readonly type: "bytes";
            }];
            readonly internalType: "struct ParsedPerChainQueryResponse";
            readonly name: "pcr";
            readonly type: "tuple";
        }];
        readonly name: "parseEthCallWithFinalityQueryResponse";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes";
                readonly name: "requestBlockId";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "requestFinality";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint64";
                readonly name: "blockNum";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "blockTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "bytes32";
                readonly name: "blockHash";
                readonly type: "bytes32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "contractAddress";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "callData";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "result";
                    readonly type: "bytes";
                }];
                readonly internalType: "struct EthCallData[]";
                readonly name: "result";
                readonly type: "tuple[]";
            }];
            readonly internalType: "struct EthCallWithFinalityQueryResponse";
            readonly name: "r";
            readonly type: "tuple";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint16";
                readonly name: "chainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "uint8";
                readonly name: "queryType";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes";
                readonly name: "request";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "response";
                readonly type: "bytes";
            }];
            readonly internalType: "struct ParsedPerChainQueryResponse";
            readonly name: "pcr";
            readonly type: "tuple";
        }];
        readonly name: "parseSolanaAccountQueryResponse";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes";
                readonly name: "requestCommitment";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint64";
                readonly name: "requestMinContextSlot";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "requestDataSliceOffset";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "requestDataSliceLength";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "slotNumber";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "blockTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "bytes32";
                readonly name: "blockHash";
                readonly type: "bytes32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "account";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "lamports";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "rentEpoch";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "bool";
                    readonly name: "executable";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "owner";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "data";
                    readonly type: "bytes";
                }];
                readonly internalType: "struct SolanaAccountResult[]";
                readonly name: "results";
                readonly type: "tuple[]";
            }];
            readonly internalType: "struct SolanaAccountQueryResponse";
            readonly name: "r";
            readonly type: "tuple";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "responsePrefix";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "response";
            readonly type: "bytes";
        }, {
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint8";
                readonly name: "guardianIndex";
                readonly type: "uint8";
            }];
            readonly internalType: "struct IWormhole.Signature[]";
            readonly name: "signatures";
            readonly type: "tuple[]";
        }];
        readonly name: "updateCounters";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "_chainID";
            readonly type: "uint16";
        }, {
            readonly internalType: "address";
            readonly name: "_contractAddress";
            readonly type: "address";
        }];
        readonly name: "updateRegistration";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "_blockNum";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint256";
            readonly name: "_minBlockNum";
            readonly type: "uint256";
        }];
        readonly name: "validateBlockNum";
        readonly outputs: readonly [];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "_blockTime";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint256";
            readonly name: "_minBlockTime";
            readonly type: "uint256";
        }];
        readonly name: "validateBlockTime";
        readonly outputs: readonly [];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "chainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint16[]";
            readonly name: "_validChainIds";
            readonly type: "uint16[]";
        }];
        readonly name: "validateChainId";
        readonly outputs: readonly [];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "contractAddress";
                readonly type: "address";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "result";
                readonly type: "bytes";
            }];
            readonly internalType: "struct EthCallData";
            readonly name: "r";
            readonly type: "tuple";
        }, {
            readonly internalType: "address[]";
            readonly name: "_expectedContractAddresses";
            readonly type: "address[]";
        }, {
            readonly internalType: "bytes4[]";
            readonly name: "_expectedFunctionSignatures";
            readonly type: "bytes4[]";
        }];
        readonly name: "validateEthCallData";
        readonly outputs: readonly [];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "contractAddress";
                readonly type: "address";
            }, {
                readonly internalType: "bytes";
                readonly name: "callData";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "result";
                readonly type: "bytes";
            }];
            readonly internalType: "struct EthCallData[]";
            readonly name: "r";
            readonly type: "tuple[]";
        }, {
            readonly internalType: "address[]";
            readonly name: "_expectedContractAddresses";
            readonly type: "address[]";
        }, {
            readonly internalType: "bytes4[]";
            readonly name: "_expectedFunctionSignatures";
            readonly type: "bytes4[]";
        }];
        readonly name: "validateMultipleEthCallData";
        readonly outputs: readonly [];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "response";
            readonly type: "bytes";
        }, {
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint8";
                readonly name: "guardianIndex";
                readonly type: "uint8";
            }];
            readonly internalType: "struct IWormhole.Signature[]";
            readonly name: "signatures";
            readonly type: "tuple[]";
        }];
        readonly name: "verifyQueryResponseSignatures";
        readonly outputs: readonly [];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wormhole";
        readonly outputs: readonly [{
            readonly internalType: "contract IWormhole";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): QueryDemoInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): QueryDemo;
}
export {};
