import { Network } from "./networks";
import { Chain } from "./chains";
export type ExplorerSettings = {
    name: string;
    baseUrl: string;
    endpoints: {
        tx: string;
        account: string;
    };
    networkQuery?: {
        default: Network;
        Mainnet?: string;
        Devnet?: string;
        Testnet?: string;
    };
};
export declare const explorerConfs: (<K1 extends "Mainnet" | "Testnet", K2 extends keyof {
    readonly Mainnet: {
        readonly Ethereum: {
            readonly name: "Etherscan";
            readonly baseUrl: "https://etherscan.io/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Solana: {
            readonly name: "Solana Explorer";
            readonly baseUrl: "https://explorer.solana.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Polygon: {
            readonly name: "PolygonScan";
            readonly baseUrl: "https://polygonscan.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Bsc: {
            readonly name: "BscScan";
            readonly baseUrl: "https://bscscan.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Avalanche: {
            readonly name: "Snowtrace";
            readonly baseUrl: "https://snowtrace.io/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Fantom: {
            readonly name: "FTMscan";
            readonly baseUrl: "https://ftmscan.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Celo: {
            readonly name: "Celo Explorer";
            readonly baseUrl: "https://explorer.celo.org/mainnet/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Moonbeam: {
            readonly name: "Moonscan";
            readonly baseUrl: "https://moonscan.io/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Sui: {
            readonly name: "Sui Explorer";
            readonly baseUrl: "https://explorer.sui.io/";
            readonly endpoints: {
                readonly tx: "txblock/";
                readonly account: "address/";
            };
        };
        readonly Aptos: {
            readonly name: "Aptos Explorer";
            readonly baseUrl: "https://explorer.aptoslabs.com/";
            readonly endpoints: {
                readonly tx: "txn/";
                readonly account: "account/";
            };
        };
        readonly Sei: {
            readonly name: "Sei Explorer";
            readonly baseUrl: "https://sei.explorers.guru/";
            readonly endpoints: {
                readonly tx: "transaction/";
                readonly account: "address/";
            };
        };
        readonly Karura: {
            readonly name: "Karura Explorer";
            readonly baseUrl: "https://blockscout.karura.network/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Acala: {
            readonly name: "Acala Explorer";
            readonly baseUrl: "https://blockscout.acala.network/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
    };
    readonly Testnet: {
        readonly Ethereum: {
            readonly name: "Etherscan";
            readonly baseUrl: "https://goerli.etherscan.io/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Polygon: {
            readonly name: "PolygonScan";
            readonly baseUrl: "https://mumbai.polygonscan.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Bsc: {
            readonly name: "BscScan";
            readonly baseUrl: "https://testnet.bscscan.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Avalanche: {
            readonly name: "Snowtrace";
            readonly baseUrl: "https://testnet.snowtrace.io/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Fantom: {
            readonly name: "FTMscan";
            readonly baseUrl: "https://testnet.ftmscan.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Celo: {
            readonly name: "Celo Explorer";
            readonly baseUrl: "https://explorer.celo.org/alfajores/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Moonbeam: {
            readonly name: "Moonscan";
            readonly baseUrl: "https://moonbase.moonscan.io/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Solana: {
            readonly name: "Solana Explorer";
            readonly baseUrl: "https://explorer.solana.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
            readonly networkQuery: {
                readonly default: "Devnet";
                readonly Testnet: "?cluster=testnet";
                readonly Devnet: "?cluster=devnet";
            };
        };
        readonly Sui: {
            readonly name: "Sui Explorer";
            readonly baseUrl: "https://explorer.sui.io/";
            readonly endpoints: {
                readonly tx: "txblock/";
                readonly account: "address/";
            };
            readonly networkQuery: {
                readonly default: "Testnet";
                readonly Testnet: "?network=testnet";
                readonly Devnet: "?network=devnet";
            };
        };
        readonly Aptos: {
            readonly name: "Aptos Explorer";
            readonly baseUrl: "https://explorer.aptoslabs.com/";
            readonly endpoints: {
                readonly tx: "txn/";
                readonly account: "account/";
            };
            readonly networkQuery: {
                readonly default: "Testnet";
                readonly Testnet: "?network=testnet";
                readonly Devnet: "?network=devnet";
            };
        };
        readonly Sei: {
            readonly name: "Sei Explorer";
            readonly baseUrl: "https://sei.explorers.guru/";
            readonly endpoints: {
                readonly tx: "transaction/";
                readonly account: "address/";
            };
        };
        readonly Karura: {
            readonly name: "Karura Explorer";
            readonly baseUrl: "https://blockscout.karura-testnet.aca-staging.network/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Acala: {
            readonly name: "Acala Explorer";
            readonly baseUrl: "https://blockscout.acala-dev.aca-dev.network/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
    };
}[K1 extends bigint ? `bigint(${K1})` : K1 extends boolean ? `boolean(${K1})` : K1] extends infer T ? T extends keyof {
    readonly Mainnet: {
        readonly Ethereum: {
            readonly name: "Etherscan";
            readonly baseUrl: "https://etherscan.io/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Solana: {
            readonly name: "Solana Explorer";
            readonly baseUrl: "https://explorer.solana.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Polygon: {
            readonly name: "PolygonScan";
            readonly baseUrl: "https://polygonscan.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Bsc: {
            readonly name: "BscScan";
            readonly baseUrl: "https://bscscan.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Avalanche: {
            readonly name: "Snowtrace";
            readonly baseUrl: "https://snowtrace.io/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Fantom: {
            readonly name: "FTMscan";
            readonly baseUrl: "https://ftmscan.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Celo: {
            readonly name: "Celo Explorer";
            readonly baseUrl: "https://explorer.celo.org/mainnet/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Moonbeam: {
            readonly name: "Moonscan";
            readonly baseUrl: "https://moonscan.io/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Sui: {
            readonly name: "Sui Explorer";
            readonly baseUrl: "https://explorer.sui.io/";
            readonly endpoints: {
                readonly tx: "txblock/";
                readonly account: "address/";
            };
        };
        readonly Aptos: {
            readonly name: "Aptos Explorer";
            readonly baseUrl: "https://explorer.aptoslabs.com/";
            readonly endpoints: {
                readonly tx: "txn/";
                readonly account: "account/";
            };
        };
        readonly Sei: {
            readonly name: "Sei Explorer";
            readonly baseUrl: "https://sei.explorers.guru/";
            readonly endpoints: {
                readonly tx: "transaction/";
                readonly account: "address/";
            };
        };
        readonly Karura: {
            readonly name: "Karura Explorer";
            readonly baseUrl: "https://blockscout.karura.network/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Acala: {
            readonly name: "Acala Explorer";
            readonly baseUrl: "https://blockscout.acala.network/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
    };
    readonly Testnet: {
        readonly Ethereum: {
            readonly name: "Etherscan";
            readonly baseUrl: "https://goerli.etherscan.io/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Polygon: {
            readonly name: "PolygonScan";
            readonly baseUrl: "https://mumbai.polygonscan.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Bsc: {
            readonly name: "BscScan";
            readonly baseUrl: "https://testnet.bscscan.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Avalanche: {
            readonly name: "Snowtrace";
            readonly baseUrl: "https://testnet.snowtrace.io/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Fantom: {
            readonly name: "FTMscan";
            readonly baseUrl: "https://testnet.ftmscan.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Celo: {
            readonly name: "Celo Explorer";
            readonly baseUrl: "https://explorer.celo.org/alfajores/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Moonbeam: {
            readonly name: "Moonscan";
            readonly baseUrl: "https://moonbase.moonscan.io/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Solana: {
            readonly name: "Solana Explorer";
            readonly baseUrl: "https://explorer.solana.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
            readonly networkQuery: {
                readonly default: "Devnet";
                readonly Testnet: "?cluster=testnet";
                readonly Devnet: "?cluster=devnet";
            };
        };
        readonly Sui: {
            readonly name: "Sui Explorer";
            readonly baseUrl: "https://explorer.sui.io/";
            readonly endpoints: {
                readonly tx: "txblock/";
                readonly account: "address/";
            };
            readonly networkQuery: {
                readonly default: "Testnet";
                readonly Testnet: "?network=testnet";
                readonly Devnet: "?network=devnet";
            };
        };
        readonly Aptos: {
            readonly name: "Aptos Explorer";
            readonly baseUrl: "https://explorer.aptoslabs.com/";
            readonly endpoints: {
                readonly tx: "txn/";
                readonly account: "account/";
            };
            readonly networkQuery: {
                readonly default: "Testnet";
                readonly Testnet: "?network=testnet";
                readonly Devnet: "?network=devnet";
            };
        };
        readonly Sei: {
            readonly name: "Sei Explorer";
            readonly baseUrl: "https://sei.explorers.guru/";
            readonly endpoints: {
                readonly tx: "transaction/";
                readonly account: "address/";
            };
        };
        readonly Karura: {
            readonly name: "Karura Explorer";
            readonly baseUrl: "https://blockscout.karura-testnet.aca-staging.network/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Acala: {
            readonly name: "Acala Explorer";
            readonly baseUrl: "https://blockscout.acala-dev.aca-dev.network/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
    };
}[K1 extends bigint ? `bigint(${K1})` : K1 extends boolean ? `boolean(${K1})` : K1] ? T extends `bigint(${infer V extends bigint})` ? V : T extends `boolean(${infer V_1 extends boolean})` ? V_1 : T : never : never>(args_0: K1, args_1: K2) => {
    readonly Mainnet: {
        readonly Ethereum: {
            readonly name: "Etherscan";
            readonly baseUrl: "https://etherscan.io/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Solana: {
            readonly name: "Solana Explorer";
            readonly baseUrl: "https://explorer.solana.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Polygon: {
            readonly name: "PolygonScan";
            readonly baseUrl: "https://polygonscan.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Bsc: {
            readonly name: "BscScan";
            readonly baseUrl: "https://bscscan.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Avalanche: {
            readonly name: "Snowtrace";
            readonly baseUrl: "https://snowtrace.io/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Fantom: {
            readonly name: "FTMscan";
            readonly baseUrl: "https://ftmscan.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Celo: {
            readonly name: "Celo Explorer";
            readonly baseUrl: "https://explorer.celo.org/mainnet/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Moonbeam: {
            readonly name: "Moonscan";
            readonly baseUrl: "https://moonscan.io/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Sui: {
            readonly name: "Sui Explorer";
            readonly baseUrl: "https://explorer.sui.io/";
            readonly endpoints: {
                readonly tx: "txblock/";
                readonly account: "address/";
            };
        };
        readonly Aptos: {
            readonly name: "Aptos Explorer";
            readonly baseUrl: "https://explorer.aptoslabs.com/";
            readonly endpoints: {
                readonly tx: "txn/";
                readonly account: "account/";
            };
        };
        readonly Sei: {
            readonly name: "Sei Explorer";
            readonly baseUrl: "https://sei.explorers.guru/";
            readonly endpoints: {
                readonly tx: "transaction/";
                readonly account: "address/";
            };
        };
        readonly Karura: {
            readonly name: "Karura Explorer";
            readonly baseUrl: "https://blockscout.karura.network/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Acala: {
            readonly name: "Acala Explorer";
            readonly baseUrl: "https://blockscout.acala.network/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
    };
    readonly Testnet: {
        readonly Ethereum: {
            readonly name: "Etherscan";
            readonly baseUrl: "https://goerli.etherscan.io/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Polygon: {
            readonly name: "PolygonScan";
            readonly baseUrl: "https://mumbai.polygonscan.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Bsc: {
            readonly name: "BscScan";
            readonly baseUrl: "https://testnet.bscscan.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Avalanche: {
            readonly name: "Snowtrace";
            readonly baseUrl: "https://testnet.snowtrace.io/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Fantom: {
            readonly name: "FTMscan";
            readonly baseUrl: "https://testnet.ftmscan.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Celo: {
            readonly name: "Celo Explorer";
            readonly baseUrl: "https://explorer.celo.org/alfajores/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Moonbeam: {
            readonly name: "Moonscan";
            readonly baseUrl: "https://moonbase.moonscan.io/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Solana: {
            readonly name: "Solana Explorer";
            readonly baseUrl: "https://explorer.solana.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
            readonly networkQuery: {
                readonly default: "Devnet";
                readonly Testnet: "?cluster=testnet";
                readonly Devnet: "?cluster=devnet";
            };
        };
        readonly Sui: {
            readonly name: "Sui Explorer";
            readonly baseUrl: "https://explorer.sui.io/";
            readonly endpoints: {
                readonly tx: "txblock/";
                readonly account: "address/";
            };
            readonly networkQuery: {
                readonly default: "Testnet";
                readonly Testnet: "?network=testnet";
                readonly Devnet: "?network=devnet";
            };
        };
        readonly Aptos: {
            readonly name: "Aptos Explorer";
            readonly baseUrl: "https://explorer.aptoslabs.com/";
            readonly endpoints: {
                readonly tx: "txn/";
                readonly account: "account/";
            };
            readonly networkQuery: {
                readonly default: "Testnet";
                readonly Testnet: "?network=testnet";
                readonly Devnet: "?network=devnet";
            };
        };
        readonly Sei: {
            readonly name: "Sei Explorer";
            readonly baseUrl: "https://sei.explorers.guru/";
            readonly endpoints: {
                readonly tx: "transaction/";
                readonly account: "address/";
            };
        };
        readonly Karura: {
            readonly name: "Karura Explorer";
            readonly baseUrl: "https://blockscout.karura-testnet.aca-staging.network/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Acala: {
            readonly name: "Acala Explorer";
            readonly baseUrl: "https://blockscout.acala-dev.aca-dev.network/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
    };
}[K1 extends bigint ? `bigint(${K1})` : K1 extends boolean ? `boolean(${K1})` : K1] extends infer T_1 ? T_1 extends {
    readonly Mainnet: {
        readonly Ethereum: {
            readonly name: "Etherscan";
            readonly baseUrl: "https://etherscan.io/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Solana: {
            readonly name: "Solana Explorer";
            readonly baseUrl: "https://explorer.solana.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Polygon: {
            readonly name: "PolygonScan";
            readonly baseUrl: "https://polygonscan.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Bsc: {
            readonly name: "BscScan";
            readonly baseUrl: "https://bscscan.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Avalanche: {
            readonly name: "Snowtrace";
            readonly baseUrl: "https://snowtrace.io/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Fantom: {
            readonly name: "FTMscan";
            readonly baseUrl: "https://ftmscan.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Celo: {
            readonly name: "Celo Explorer";
            readonly baseUrl: "https://explorer.celo.org/mainnet/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Moonbeam: {
            readonly name: "Moonscan";
            readonly baseUrl: "https://moonscan.io/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Sui: {
            readonly name: "Sui Explorer";
            readonly baseUrl: "https://explorer.sui.io/";
            readonly endpoints: {
                readonly tx: "txblock/";
                readonly account: "address/";
            };
        };
        readonly Aptos: {
            readonly name: "Aptos Explorer";
            readonly baseUrl: "https://explorer.aptoslabs.com/";
            readonly endpoints: {
                readonly tx: "txn/";
                readonly account: "account/";
            };
        };
        readonly Sei: {
            readonly name: "Sei Explorer";
            readonly baseUrl: "https://sei.explorers.guru/";
            readonly endpoints: {
                readonly tx: "transaction/";
                readonly account: "address/";
            };
        };
        readonly Karura: {
            readonly name: "Karura Explorer";
            readonly baseUrl: "https://blockscout.karura.network/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Acala: {
            readonly name: "Acala Explorer";
            readonly baseUrl: "https://blockscout.acala.network/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
    };
    readonly Testnet: {
        readonly Ethereum: {
            readonly name: "Etherscan";
            readonly baseUrl: "https://goerli.etherscan.io/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Polygon: {
            readonly name: "PolygonScan";
            readonly baseUrl: "https://mumbai.polygonscan.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Bsc: {
            readonly name: "BscScan";
            readonly baseUrl: "https://testnet.bscscan.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Avalanche: {
            readonly name: "Snowtrace";
            readonly baseUrl: "https://testnet.snowtrace.io/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Fantom: {
            readonly name: "FTMscan";
            readonly baseUrl: "https://testnet.ftmscan.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Celo: {
            readonly name: "Celo Explorer";
            readonly baseUrl: "https://explorer.celo.org/alfajores/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Moonbeam: {
            readonly name: "Moonscan";
            readonly baseUrl: "https://moonbase.moonscan.io/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Solana: {
            readonly name: "Solana Explorer";
            readonly baseUrl: "https://explorer.solana.com/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
            readonly networkQuery: {
                readonly default: "Devnet";
                readonly Testnet: "?cluster=testnet";
                readonly Devnet: "?cluster=devnet";
            };
        };
        readonly Sui: {
            readonly name: "Sui Explorer";
            readonly baseUrl: "https://explorer.sui.io/";
            readonly endpoints: {
                readonly tx: "txblock/";
                readonly account: "address/";
            };
            readonly networkQuery: {
                readonly default: "Testnet";
                readonly Testnet: "?network=testnet";
                readonly Devnet: "?network=devnet";
            };
        };
        readonly Aptos: {
            readonly name: "Aptos Explorer";
            readonly baseUrl: "https://explorer.aptoslabs.com/";
            readonly endpoints: {
                readonly tx: "txn/";
                readonly account: "account/";
            };
            readonly networkQuery: {
                readonly default: "Testnet";
                readonly Testnet: "?network=testnet";
                readonly Devnet: "?network=devnet";
            };
        };
        readonly Sei: {
            readonly name: "Sei Explorer";
            readonly baseUrl: "https://sei.explorers.guru/";
            readonly endpoints: {
                readonly tx: "transaction/";
                readonly account: "address/";
            };
        };
        readonly Karura: {
            readonly name: "Karura Explorer";
            readonly baseUrl: "https://blockscout.karura-testnet.aca-staging.network/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
        readonly Acala: {
            readonly name: "Acala Explorer";
            readonly baseUrl: "https://blockscout.acala-dev.aca-dev.network/";
            readonly endpoints: {
                readonly tx: "tx/";
                readonly account: "address/";
            };
        };
    };
}[K1 extends bigint ? `bigint(${K1})` : K1 extends boolean ? `boolean(${K1})` : K1] ? T_1 extends {
    [key: string]: unknown;
    [key: number]: unknown;
    [key: symbol]: unknown;
} ? T_1[K2 extends bigint ? `bigint(${K2})` : K2 extends boolean ? `boolean(${K2})` : K2] : never : never : never) & {
    get: (args_0: string, args_1: string) => {
        readonly name: "Etherscan";
        readonly baseUrl: "https://etherscan.io/";
        readonly endpoints: {
            readonly tx: "tx/";
            readonly account: "address/";
        };
    } | {
        readonly name: "Solana Explorer";
        readonly baseUrl: "https://explorer.solana.com/";
        readonly endpoints: {
            readonly tx: "tx/";
            readonly account: "address/";
        };
    } | {
        readonly name: "PolygonScan";
        readonly baseUrl: "https://polygonscan.com/";
        readonly endpoints: {
            readonly tx: "tx/";
            readonly account: "address/";
        };
    } | {
        readonly name: "BscScan";
        readonly baseUrl: "https://bscscan.com/";
        readonly endpoints: {
            readonly tx: "tx/";
            readonly account: "address/";
        };
    } | {
        readonly name: "Snowtrace";
        readonly baseUrl: "https://snowtrace.io/";
        readonly endpoints: {
            readonly tx: "tx/";
            readonly account: "address/";
        };
    } | {
        readonly name: "FTMscan";
        readonly baseUrl: "https://ftmscan.com/";
        readonly endpoints: {
            readonly tx: "tx/";
            readonly account: "address/";
        };
    } | {
        readonly name: "Celo Explorer";
        readonly baseUrl: "https://explorer.celo.org/mainnet/";
        readonly endpoints: {
            readonly tx: "tx/";
            readonly account: "address/";
        };
    } | {
        readonly name: "Moonscan";
        readonly baseUrl: "https://moonscan.io/";
        readonly endpoints: {
            readonly tx: "tx/";
            readonly account: "address/";
        };
    } | {
        readonly name: "Sui Explorer";
        readonly baseUrl: "https://explorer.sui.io/";
        readonly endpoints: {
            readonly tx: "txblock/";
            readonly account: "address/";
        };
    } | {
        readonly name: "Aptos Explorer";
        readonly baseUrl: "https://explorer.aptoslabs.com/";
        readonly endpoints: {
            readonly tx: "txn/";
            readonly account: "account/";
        };
    } | {
        readonly name: "Sei Explorer";
        readonly baseUrl: "https://sei.explorers.guru/";
        readonly endpoints: {
            readonly tx: "transaction/";
            readonly account: "address/";
        };
    } | {
        readonly name: "Karura Explorer";
        readonly baseUrl: "https://blockscout.karura.network/";
        readonly endpoints: {
            readonly tx: "tx/";
            readonly account: "address/";
        };
    } | {
        readonly name: "Acala Explorer";
        readonly baseUrl: "https://blockscout.acala.network/";
        readonly endpoints: {
            readonly tx: "tx/";
            readonly account: "address/";
        };
    } | {
        readonly name: "Etherscan";
        readonly baseUrl: "https://goerli.etherscan.io/";
        readonly endpoints: {
            readonly tx: "tx/";
            readonly account: "address/";
        };
    } | {
        readonly name: "PolygonScan";
        readonly baseUrl: "https://mumbai.polygonscan.com/";
        readonly endpoints: {
            readonly tx: "tx/";
            readonly account: "address/";
        };
    } | {
        readonly name: "BscScan";
        readonly baseUrl: "https://testnet.bscscan.com/";
        readonly endpoints: {
            readonly tx: "tx/";
            readonly account: "address/";
        };
    } | {
        readonly name: "Snowtrace";
        readonly baseUrl: "https://testnet.snowtrace.io/";
        readonly endpoints: {
            readonly tx: "tx/";
            readonly account: "address/";
        };
    } | {
        readonly name: "FTMscan";
        readonly baseUrl: "https://testnet.ftmscan.com/";
        readonly endpoints: {
            readonly tx: "tx/";
            readonly account: "address/";
        };
    } | {
        readonly name: "Celo Explorer";
        readonly baseUrl: "https://explorer.celo.org/alfajores/";
        readonly endpoints: {
            readonly tx: "tx/";
            readonly account: "address/";
        };
    } | {
        readonly name: "Moonscan";
        readonly baseUrl: "https://moonbase.moonscan.io/";
        readonly endpoints: {
            readonly tx: "tx/";
            readonly account: "address/";
        };
    } | {
        readonly name: "Solana Explorer";
        readonly baseUrl: "https://explorer.solana.com/";
        readonly endpoints: {
            readonly tx: "tx/";
            readonly account: "address/";
        };
        readonly networkQuery: {
            readonly default: "Devnet";
            readonly Testnet: "?cluster=testnet";
            readonly Devnet: "?cluster=devnet";
        };
    } | {
        readonly name: "Sui Explorer";
        readonly baseUrl: "https://explorer.sui.io/";
        readonly endpoints: {
            readonly tx: "txblock/";
            readonly account: "address/";
        };
        readonly networkQuery: {
            readonly default: "Testnet";
            readonly Testnet: "?network=testnet";
            readonly Devnet: "?network=devnet";
        };
    } | {
        readonly name: "Aptos Explorer";
        readonly baseUrl: "https://explorer.aptoslabs.com/";
        readonly endpoints: {
            readonly tx: "txn/";
            readonly account: "account/";
        };
        readonly networkQuery: {
            readonly default: "Testnet";
            readonly Testnet: "?network=testnet";
            readonly Devnet: "?network=devnet";
        };
    } | {
        readonly name: "Sei Explorer";
        readonly baseUrl: "https://sei.explorers.guru/";
        readonly endpoints: {
            readonly tx: "transaction/";
            readonly account: "address/";
        };
    } | {
        readonly name: "Karura Explorer";
        readonly baseUrl: "https://blockscout.karura-testnet.aca-staging.network/";
        readonly endpoints: {
            readonly tx: "tx/";
            readonly account: "address/";
        };
    } | {
        readonly name: "Acala Explorer";
        readonly baseUrl: "https://blockscout.acala-dev.aca-dev.network/";
        readonly endpoints: {
            readonly tx: "tx/";
            readonly account: "address/";
        };
    } | undefined;
    has: (args_0: string, args_1: string) => boolean;
};
export declare const explorerConfigs: (network: Network, chain: Chain) => ExplorerSettings | undefined;
export declare function linkToTx(chainName: Chain, txId: string, network: Network): string;
export declare function linkToAccount(chainName: Chain, account: string, network: Network): string;
//# sourceMappingURL=explorer.d.ts.map