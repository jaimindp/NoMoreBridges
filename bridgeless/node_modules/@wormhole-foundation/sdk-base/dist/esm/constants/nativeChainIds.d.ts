import { ToMapping, Widen } from "../utils";
import { Network } from "./networks";
import { Platform, PlatformToChains } from "./platforms";
declare const chainNetworkNativeChainIdEntries: readonly [readonly ["Aptos", readonly [readonly ["Mainnet", 1n], readonly ["Testnet", 2n], readonly ["Devnet", 0n]]], readonly ["Algorand", readonly [readonly ["Mainnet", "mainnet-v1.0"], readonly ["Testnet", "testnet-v1.0"], readonly ["Devnet", "sandnet-v1.0"]]], readonly ["Near", readonly [readonly ["Mainnet", "mainnet"], readonly ["Testnet", "testnet"]]], readonly ["Cosmoshub", readonly [readonly ["Mainnet", "cosmoshub-4"], readonly ["Testnet", "theta-testnet-001"]]], readonly ["Evmos", readonly [readonly ["Mainnet", "evmos_9001-2"], readonly ["Testnet", "evmos_9000-4"], readonly ["Devnet", "evmos_devnet_fake"]]], readonly ["Injective", readonly [readonly ["Mainnet", "injective-1"], readonly ["Testnet", "injective-888"], readonly ["Devnet", "injective_devnet_fake"]]], readonly ["Osmosis", readonly [readonly ["Mainnet", "osmosis-1"], readonly ["Testnet", "osmo-test-5"]]], readonly ["Sei", readonly [readonly ["Mainnet", "pacific-1"], readonly ["Testnet", "atlantic-2"]]], readonly ["Terra", readonly [readonly ["Mainnet", "columbus-5"], readonly ["Testnet", "bombay-12"]]], readonly ["Terra2", readonly [readonly ["Mainnet", "phoenix-1"], readonly ["Testnet", "pisco-1"]]], readonly ["Wormchain", readonly [readonly ["Mainnet", "wormchain"], readonly ["Testnet", "wormchain-testnet-0"]]], readonly ["Xpla", readonly [readonly ["Mainnet", "dimension_37-1"], readonly ["Testnet", "cube_47-5"]]], readonly ["Kujira", readonly [readonly ["Mainnet", "kaiyo-1"], readonly ["Testnet", "harpoon-4"]]], readonly ["Solana", readonly [readonly ["Mainnet", "5eykt4UsFv8P8NJdTREpY1vzqKqZKvdpKuc147dw2N9d"], readonly ["Testnet", "EtWTRABZaYq6iMfeYKouRu166VU2xqa1wcaWoxPkrZBG"]]], readonly ["Sui", readonly [readonly ["Mainnet", "35834a8a"], readonly ["Testnet", "4c78adac"]]], readonly ["Acala", readonly [readonly ["Mainnet", 787n], readonly ["Testnet", 597n]]], readonly ["Arbitrum", readonly [readonly ["Mainnet", 42161n], readonly ["Testnet", 421613n]]], readonly ["Aurora", readonly [readonly ["Mainnet", 1313161554n], readonly ["Testnet", 1313161555n]]], readonly ["Avalanche", readonly [readonly ["Mainnet", 43114n], readonly ["Testnet", 43113n]]], readonly ["Base", readonly [readonly ["Mainnet", 8453n], readonly ["Testnet", 84531n]]], readonly ["Bsc", readonly [readonly ["Mainnet", 56n], readonly ["Testnet", 97n]]], readonly ["Celo", readonly [readonly ["Mainnet", 42220n], readonly ["Testnet", 44787n]]], readonly ["Ethereum", readonly [readonly ["Mainnet", 1n], readonly ["Testnet", 5n]]], readonly ["Fantom", readonly [readonly ["Mainnet", 250n], readonly ["Testnet", 4002n]]], readonly ["Gnosis", readonly [readonly ["Mainnet", 100n], readonly ["Testnet", 10200n]]], readonly ["Karura", readonly [readonly ["Mainnet", 686n], readonly ["Testnet", 596n]]], readonly ["Klaytn", readonly [readonly ["Mainnet", 8217n], readonly ["Testnet", 1001n]]], readonly ["Moonbeam", readonly [readonly ["Mainnet", 1284n], readonly ["Testnet", 1287n]]], readonly ["Neon", readonly [readonly ["Mainnet", 245022934n], readonly ["Testnet", 245022940n]]], readonly ["Oasis", readonly [readonly ["Mainnet", 42262n], readonly ["Testnet", 42261n]]], readonly ["Optimism", readonly [readonly ["Mainnet", 10n], readonly ["Testnet", 420n]]], readonly ["Polygon", readonly [readonly ["Mainnet", 137n], readonly ["Testnet", 80001n]]], readonly ["Rootstock", readonly [readonly ["Mainnet", 30n], readonly ["Testnet", 31n]]], readonly ["Sepolia", readonly [readonly ["Testnet", 11155111n]]], readonly ["ArbitrumSepolia", readonly [readonly ["Testnet", 421614n]]], readonly ["BaseSepolia", readonly [readonly ["Testnet", 84532n]]], readonly ["OptimismSepolia", readonly [readonly ["Testnet", 11155420n]]], readonly ["Holesky", readonly [readonly ["Testnet", 17000n]]], readonly ["Neutron", readonly [readonly ["Mainnet", "neutron-1"], readonly ["Testnet", "pion-1"]]], readonly ["Stargaze", readonly [readonly ["Mainnet", "stargaze-1"]]], readonly ["Celestia", readonly [readonly ["Mainnet", "celestia"], readonly ["Testnet", "mocha-4"]]], readonly ["Dymension", readonly [readonly ["Mainnet", "dymension_1100-1"]]]];
export declare const networkChainToNativeChainId: (<K1 extends "Mainnet" | "Testnet" | "Devnet", K2 extends keyof {
    Mainnet: {
        Aptos: 1n;
        Algorand: "mainnet-v1.0";
        Near: "mainnet";
        Cosmoshub: "cosmoshub-4";
        Evmos: "evmos_9001-2";
        Injective: "injective-1";
        Osmosis: "osmosis-1";
        Sei: "pacific-1";
        Terra: "columbus-5";
        Terra2: "phoenix-1";
        Wormchain: "wormchain";
        Xpla: "dimension_37-1";
        Kujira: "kaiyo-1";
        Solana: "5eykt4UsFv8P8NJdTREpY1vzqKqZKvdpKuc147dw2N9d";
        Sui: "35834a8a";
        Acala: 787n;
        Arbitrum: 42161n;
        Aurora: 1313161554n;
        Avalanche: 43114n;
        Base: 8453n;
        Bsc: 56n;
        Celo: 42220n;
        Ethereum: 1n;
        Fantom: 250n;
        Gnosis: 100n;
        Karura: 686n;
        Klaytn: 8217n;
        Moonbeam: 1284n;
        Neon: 245022934n;
        Oasis: 42262n;
        Optimism: 10n;
        Polygon: 137n;
        Rootstock: 30n;
        Neutron: "neutron-1";
        Stargaze: "stargaze-1";
        Celestia: "celestia";
        Dymension: "dymension_1100-1";
    };
    Testnet: {
        Aptos: 2n;
        Algorand: "testnet-v1.0";
        Near: "testnet";
        Cosmoshub: "theta-testnet-001";
        Evmos: "evmos_9000-4";
        Injective: "injective-888";
        Osmosis: "osmo-test-5";
        Sei: "atlantic-2";
        Terra: "bombay-12";
        Terra2: "pisco-1";
        Wormchain: "wormchain-testnet-0";
        Xpla: "cube_47-5";
        Kujira: "harpoon-4";
        Solana: "EtWTRABZaYq6iMfeYKouRu166VU2xqa1wcaWoxPkrZBG";
        Sui: "4c78adac";
        Acala: 597n;
        Arbitrum: 421613n;
        Aurora: 1313161555n;
        Avalanche: 43113n;
        Base: 84531n;
        Bsc: 97n;
        Celo: 44787n;
        Ethereum: 5n;
        Fantom: 4002n;
        Gnosis: 10200n;
        Karura: 596n;
        Klaytn: 1001n;
        Moonbeam: 1287n;
        Neon: 245022940n;
        Oasis: 42261n;
        Optimism: 420n;
        Polygon: 80001n;
        Rootstock: 31n;
        Sepolia: 11155111n;
        ArbitrumSepolia: 421614n;
        BaseSepolia: 84532n;
        OptimismSepolia: 11155420n;
        Holesky: 17000n;
        Neutron: "pion-1";
        Celestia: "mocha-4";
    };
    Devnet: {
        Aptos: 0n;
        Algorand: "sandnet-v1.0";
        Evmos: "evmos_devnet_fake";
        Injective: "injective_devnet_fake";
    };
}[K1 extends bigint ? `bigint(${K1})` : K1 extends boolean ? `boolean(${K1})` : K1] extends infer T ? T extends keyof {
    Mainnet: {
        Aptos: 1n;
        Algorand: "mainnet-v1.0";
        Near: "mainnet";
        Cosmoshub: "cosmoshub-4";
        Evmos: "evmos_9001-2";
        Injective: "injective-1";
        Osmosis: "osmosis-1";
        Sei: "pacific-1";
        Terra: "columbus-5";
        Terra2: "phoenix-1";
        Wormchain: "wormchain";
        Xpla: "dimension_37-1";
        Kujira: "kaiyo-1";
        Solana: "5eykt4UsFv8P8NJdTREpY1vzqKqZKvdpKuc147dw2N9d";
        Sui: "35834a8a";
        Acala: 787n;
        Arbitrum: 42161n;
        Aurora: 1313161554n;
        Avalanche: 43114n;
        Base: 8453n;
        Bsc: 56n;
        Celo: 42220n;
        Ethereum: 1n;
        Fantom: 250n;
        Gnosis: 100n;
        Karura: 686n;
        Klaytn: 8217n;
        Moonbeam: 1284n;
        Neon: 245022934n;
        Oasis: 42262n;
        Optimism: 10n;
        Polygon: 137n;
        Rootstock: 30n;
        Neutron: "neutron-1";
        Stargaze: "stargaze-1";
        Celestia: "celestia";
        Dymension: "dymension_1100-1";
    };
    Testnet: {
        Aptos: 2n;
        Algorand: "testnet-v1.0";
        Near: "testnet";
        Cosmoshub: "theta-testnet-001";
        Evmos: "evmos_9000-4";
        Injective: "injective-888";
        Osmosis: "osmo-test-5";
        Sei: "atlantic-2";
        Terra: "bombay-12";
        Terra2: "pisco-1";
        Wormchain: "wormchain-testnet-0";
        Xpla: "cube_47-5";
        Kujira: "harpoon-4";
        Solana: "EtWTRABZaYq6iMfeYKouRu166VU2xqa1wcaWoxPkrZBG";
        Sui: "4c78adac";
        Acala: 597n;
        Arbitrum: 421613n;
        Aurora: 1313161555n;
        Avalanche: 43113n;
        Base: 84531n;
        Bsc: 97n;
        Celo: 44787n;
        Ethereum: 5n;
        Fantom: 4002n;
        Gnosis: 10200n;
        Karura: 596n;
        Klaytn: 1001n;
        Moonbeam: 1287n;
        Neon: 245022940n;
        Oasis: 42261n;
        Optimism: 420n;
        Polygon: 80001n;
        Rootstock: 31n;
        Sepolia: 11155111n;
        ArbitrumSepolia: 421614n;
        BaseSepolia: 84532n;
        OptimismSepolia: 11155420n;
        Holesky: 17000n;
        Neutron: "pion-1";
        Celestia: "mocha-4";
    };
    Devnet: {
        Aptos: 0n;
        Algorand: "sandnet-v1.0";
        Evmos: "evmos_devnet_fake";
        Injective: "injective_devnet_fake";
    };
}[K1 extends bigint ? `bigint(${K1})` : K1 extends boolean ? `boolean(${K1})` : K1] ? T extends `bigint(${infer V extends bigint})` ? V : T extends `boolean(${infer V_1 extends boolean})` ? V_1 : T : never : never>(args_0: K1, args_1: K2) => {
    Mainnet: {
        Aptos: 1n;
        Algorand: "mainnet-v1.0";
        Near: "mainnet";
        Cosmoshub: "cosmoshub-4";
        Evmos: "evmos_9001-2";
        Injective: "injective-1";
        Osmosis: "osmosis-1";
        Sei: "pacific-1";
        Terra: "columbus-5";
        Terra2: "phoenix-1";
        Wormchain: "wormchain";
        Xpla: "dimension_37-1";
        Kujira: "kaiyo-1";
        Solana: "5eykt4UsFv8P8NJdTREpY1vzqKqZKvdpKuc147dw2N9d";
        Sui: "35834a8a";
        Acala: 787n;
        Arbitrum: 42161n;
        Aurora: 1313161554n;
        Avalanche: 43114n;
        Base: 8453n;
        Bsc: 56n;
        Celo: 42220n;
        Ethereum: 1n;
        Fantom: 250n;
        Gnosis: 100n;
        Karura: 686n;
        Klaytn: 8217n;
        Moonbeam: 1284n;
        Neon: 245022934n;
        Oasis: 42262n;
        Optimism: 10n;
        Polygon: 137n;
        Rootstock: 30n;
        Neutron: "neutron-1";
        Stargaze: "stargaze-1";
        Celestia: "celestia";
        Dymension: "dymension_1100-1";
    };
    Testnet: {
        Aptos: 2n;
        Algorand: "testnet-v1.0";
        Near: "testnet";
        Cosmoshub: "theta-testnet-001";
        Evmos: "evmos_9000-4";
        Injective: "injective-888";
        Osmosis: "osmo-test-5";
        Sei: "atlantic-2";
        Terra: "bombay-12";
        Terra2: "pisco-1";
        Wormchain: "wormchain-testnet-0";
        Xpla: "cube_47-5";
        Kujira: "harpoon-4";
        Solana: "EtWTRABZaYq6iMfeYKouRu166VU2xqa1wcaWoxPkrZBG";
        Sui: "4c78adac";
        Acala: 597n;
        Arbitrum: 421613n;
        Aurora: 1313161555n;
        Avalanche: 43113n;
        Base: 84531n;
        Bsc: 97n;
        Celo: 44787n;
        Ethereum: 5n;
        Fantom: 4002n;
        Gnosis: 10200n;
        Karura: 596n;
        Klaytn: 1001n;
        Moonbeam: 1287n;
        Neon: 245022940n;
        Oasis: 42261n;
        Optimism: 420n;
        Polygon: 80001n;
        Rootstock: 31n;
        Sepolia: 11155111n;
        ArbitrumSepolia: 421614n;
        BaseSepolia: 84532n;
        OptimismSepolia: 11155420n;
        Holesky: 17000n;
        Neutron: "pion-1";
        Celestia: "mocha-4";
    };
    Devnet: {
        Aptos: 0n;
        Algorand: "sandnet-v1.0";
        Evmos: "evmos_devnet_fake";
        Injective: "injective_devnet_fake";
    };
}[K1 extends bigint ? `bigint(${K1})` : K1 extends boolean ? `boolean(${K1})` : K1] extends infer T_1 ? T_1 extends {
    Mainnet: {
        Aptos: 1n;
        Algorand: "mainnet-v1.0";
        Near: "mainnet";
        Cosmoshub: "cosmoshub-4";
        Evmos: "evmos_9001-2";
        Injective: "injective-1";
        Osmosis: "osmosis-1";
        Sei: "pacific-1";
        Terra: "columbus-5";
        Terra2: "phoenix-1";
        Wormchain: "wormchain";
        Xpla: "dimension_37-1";
        Kujira: "kaiyo-1";
        Solana: "5eykt4UsFv8P8NJdTREpY1vzqKqZKvdpKuc147dw2N9d";
        Sui: "35834a8a";
        Acala: 787n;
        Arbitrum: 42161n;
        Aurora: 1313161554n;
        Avalanche: 43114n;
        Base: 8453n;
        Bsc: 56n;
        Celo: 42220n;
        Ethereum: 1n;
        Fantom: 250n;
        Gnosis: 100n;
        Karura: 686n;
        Klaytn: 8217n;
        Moonbeam: 1284n;
        Neon: 245022934n;
        Oasis: 42262n;
        Optimism: 10n;
        Polygon: 137n;
        Rootstock: 30n;
        Neutron: "neutron-1";
        Stargaze: "stargaze-1";
        Celestia: "celestia";
        Dymension: "dymension_1100-1";
    };
    Testnet: {
        Aptos: 2n;
        Algorand: "testnet-v1.0";
        Near: "testnet";
        Cosmoshub: "theta-testnet-001";
        Evmos: "evmos_9000-4";
        Injective: "injective-888";
        Osmosis: "osmo-test-5";
        Sei: "atlantic-2";
        Terra: "bombay-12";
        Terra2: "pisco-1";
        Wormchain: "wormchain-testnet-0";
        Xpla: "cube_47-5";
        Kujira: "harpoon-4";
        Solana: "EtWTRABZaYq6iMfeYKouRu166VU2xqa1wcaWoxPkrZBG";
        Sui: "4c78adac";
        Acala: 597n;
        Arbitrum: 421613n;
        Aurora: 1313161555n;
        Avalanche: 43113n;
        Base: 84531n;
        Bsc: 97n;
        Celo: 44787n;
        Ethereum: 5n;
        Fantom: 4002n;
        Gnosis: 10200n;
        Karura: 596n;
        Klaytn: 1001n;
        Moonbeam: 1287n;
        Neon: 245022940n;
        Oasis: 42261n;
        Optimism: 420n;
        Polygon: 80001n;
        Rootstock: 31n;
        Sepolia: 11155111n;
        ArbitrumSepolia: 421614n;
        BaseSepolia: 84532n;
        OptimismSepolia: 11155420n;
        Holesky: 17000n;
        Neutron: "pion-1";
        Celestia: "mocha-4";
    };
    Devnet: {
        Aptos: 0n;
        Algorand: "sandnet-v1.0";
        Evmos: "evmos_devnet_fake";
        Injective: "injective_devnet_fake";
    };
}[K1 extends bigint ? `bigint(${K1})` : K1 extends boolean ? `boolean(${K1})` : K1] ? T_1 extends {
    [key: string]: unknown;
    [key: number]: unknown;
    [key: symbol]: unknown;
} ? T_1[K2 extends bigint ? `bigint(${K2})` : K2 extends boolean ? `boolean(${K2})` : K2] : never : never : never) & {
    get: (args_0: string, args_1: string) => 0n | 1n | 2n | "mainnet-v1.0" | "testnet-v1.0" | "sandnet-v1.0" | "evmos_9001-2" | "evmos_9000-4" | "evmos_devnet_fake" | "injective-1" | "injective-888" | "injective_devnet_fake" | undefined;
    has: (args_0: string, args_1: string) => boolean;
};
declare const nativeChainIdToNetworkChain: (<K1 extends 0n | 10n | 1n | 2n | "mainnet-v1.0" | "testnet-v1.0" | "sandnet-v1.0" | "mainnet" | "testnet" | "cosmoshub-4" | "theta-testnet-001" | "evmos_9001-2" | "evmos_9000-4" | "evmos_devnet_fake" | "injective-1" | "injective-888" | "injective_devnet_fake" | "osmosis-1" | "osmo-test-5" | "pacific-1" | "atlantic-2" | "columbus-5" | "bombay-12" | "phoenix-1" | "pisco-1" | "wormchain" | "wormchain-testnet-0" | "dimension_37-1" | "cube_47-5" | "kaiyo-1" | "harpoon-4" | "5eykt4UsFv8P8NJdTREpY1vzqKqZKvdpKuc147dw2N9d" | "EtWTRABZaYq6iMfeYKouRu166VU2xqa1wcaWoxPkrZBG" | "35834a8a" | "4c78adac" | 787n | 597n | 42161n | 421613n | 1313161554n | 1313161555n | 43114n | 43113n | 8453n | 84531n | 56n | 97n | 42220n | 44787n | 5n | 250n | 4002n | 100n | 10200n | 686n | 596n | 8217n | 1001n | 1284n | 1287n | 245022934n | 245022940n | 42262n | 42261n | 420n | 137n | 80001n | 30n | 31n | 11155111n | 421614n | 84532n | 11155420n | 17000n | "neutron-1" | "pion-1" | "stargaze-1" | "celestia" | "mocha-4" | "dymension_1100-1">(args_0: K1) => {
    "bigint(1)": [["Mainnet", "Aptos"], ["Mainnet", "Ethereum"]];
    "bigint(2)": [["Testnet", "Aptos"]];
    "bigint(0)": [["Devnet", "Aptos"]];
    "mainnet-v1.0": [["Mainnet", "Algorand"]];
    "testnet-v1.0": [["Testnet", "Algorand"]];
    "sandnet-v1.0": [["Devnet", "Algorand"]];
    mainnet: [["Mainnet", "Near"]];
    testnet: [["Testnet", "Near"]];
    "cosmoshub-4": [["Mainnet", "Cosmoshub"]];
    "theta-testnet-001": [["Testnet", "Cosmoshub"]];
    "evmos_9001-2": [["Mainnet", "Evmos"]];
    "evmos_9000-4": [["Testnet", "Evmos"]];
    evmos_devnet_fake: [["Devnet", "Evmos"]];
    "injective-1": [["Mainnet", "Injective"]];
    "injective-888": [["Testnet", "Injective"]];
    injective_devnet_fake: [["Devnet", "Injective"]];
    "osmosis-1": [["Mainnet", "Osmosis"]];
    "osmo-test-5": [["Testnet", "Osmosis"]];
    "pacific-1": [["Mainnet", "Sei"]];
    "atlantic-2": [["Testnet", "Sei"]];
    "columbus-5": [["Mainnet", "Terra"]];
    "bombay-12": [["Testnet", "Terra"]];
    "phoenix-1": [["Mainnet", "Terra2"]];
    "pisco-1": [["Testnet", "Terra2"]];
    wormchain: [["Mainnet", "Wormchain"]];
    "wormchain-testnet-0": [["Testnet", "Wormchain"]];
    "dimension_37-1": [["Mainnet", "Xpla"]];
    "cube_47-5": [["Testnet", "Xpla"]];
    "kaiyo-1": [["Mainnet", "Kujira"]];
    "harpoon-4": [["Testnet", "Kujira"]];
    "5eykt4UsFv8P8NJdTREpY1vzqKqZKvdpKuc147dw2N9d": [["Mainnet", "Solana"]];
    EtWTRABZaYq6iMfeYKouRu166VU2xqa1wcaWoxPkrZBG: [["Testnet", "Solana"]];
    "35834a8a": [["Mainnet", "Sui"]];
    "4c78adac": [["Testnet", "Sui"]];
    "bigint(787)": [["Mainnet", "Acala"]];
    "bigint(597)": [["Testnet", "Acala"]];
    "bigint(42161)": [["Mainnet", "Arbitrum"]];
    "bigint(421613)": [["Testnet", "Arbitrum"]];
    "bigint(1313161554)": [["Mainnet", "Aurora"]];
    "bigint(1313161555)": [["Testnet", "Aurora"]];
    "bigint(43114)": [["Mainnet", "Avalanche"]];
    "bigint(43113)": [["Testnet", "Avalanche"]];
    "bigint(8453)": [["Mainnet", "Base"]];
    "bigint(84531)": [["Testnet", "Base"]];
    "bigint(56)": [["Mainnet", "Bsc"]];
    "bigint(97)": [["Testnet", "Bsc"]];
    "bigint(42220)": [["Mainnet", "Celo"]];
    "bigint(44787)": [["Testnet", "Celo"]];
    "bigint(5)": [["Testnet", "Ethereum"]];
    "bigint(250)": [["Mainnet", "Fantom"]];
    "bigint(4002)": [["Testnet", "Fantom"]];
    "bigint(100)": [["Mainnet", "Gnosis"]];
    "bigint(10200)": [["Testnet", "Gnosis"]];
    "bigint(686)": [["Mainnet", "Karura"]];
    "bigint(596)": [["Testnet", "Karura"]];
    "bigint(8217)": [["Mainnet", "Klaytn"]];
    "bigint(1001)": [["Testnet", "Klaytn"]];
    "bigint(1284)": [["Mainnet", "Moonbeam"]];
    "bigint(1287)": [["Testnet", "Moonbeam"]];
    "bigint(245022934)": [["Mainnet", "Neon"]];
    "bigint(245022940)": [["Testnet", "Neon"]];
    "bigint(42262)": [["Mainnet", "Oasis"]];
    "bigint(42261)": [["Testnet", "Oasis"]];
    "bigint(10)": [["Mainnet", "Optimism"]];
    "bigint(420)": [["Testnet", "Optimism"]];
    "bigint(137)": [["Mainnet", "Polygon"]];
    "bigint(80001)": [["Testnet", "Polygon"]];
    "bigint(30)": [["Mainnet", "Rootstock"]];
    "bigint(31)": [["Testnet", "Rootstock"]];
    "bigint(11155111)": [["Testnet", "Sepolia"]];
    "bigint(421614)": [["Testnet", "ArbitrumSepolia"]];
    "bigint(84532)": [["Testnet", "BaseSepolia"]];
    "bigint(11155420)": [["Testnet", "OptimismSepolia"]];
    "bigint(17000)": [["Testnet", "Holesky"]];
    "neutron-1": [["Mainnet", "Neutron"]];
    "pion-1": [["Testnet", "Neutron"]];
    "stargaze-1": [["Mainnet", "Stargaze"]];
    celestia: [["Mainnet", "Celestia"]];
    "mocha-4": [["Testnet", "Celestia"]];
    "dymension_1100-1": [["Mainnet", "Dymension"]];
}[K1 extends bigint ? `bigint(${K1})` : K1 extends boolean ? `boolean(${K1})` : K1]) & {
    get: (args_0: string | bigint) => [["Mainnet", "Aptos"], ["Mainnet", "Ethereum"]] | [["Testnet", "Aptos"]] | [["Devnet", "Aptos"]] | [["Mainnet", "Algorand"]] | [["Testnet", "Algorand"]] | [["Devnet", "Algorand"]] | [["Mainnet", "Near"]] | [["Testnet", "Near"]] | [["Mainnet", "Cosmoshub"]] | [["Testnet", "Cosmoshub"]] | [["Mainnet", "Evmos"]] | [["Testnet", "Evmos"]] | [["Devnet", "Evmos"]] | [["Mainnet", "Injective"]] | [["Testnet", "Injective"]] | [["Devnet", "Injective"]] | [["Mainnet", "Osmosis"]] | [["Testnet", "Osmosis"]] | [["Mainnet", "Sei"]] | [["Testnet", "Sei"]] | [["Mainnet", "Terra"]] | [["Testnet", "Terra"]] | [["Mainnet", "Terra2"]] | [["Testnet", "Terra2"]] | [["Mainnet", "Wormchain"]] | [["Testnet", "Wormchain"]] | [["Mainnet", "Xpla"]] | [["Testnet", "Xpla"]] | [["Mainnet", "Kujira"]] | [["Testnet", "Kujira"]] | [["Mainnet", "Solana"]] | [["Testnet", "Solana"]] | [["Mainnet", "Sui"]] | [["Testnet", "Sui"]] | [["Mainnet", "Acala"]] | [["Testnet", "Acala"]] | [["Mainnet", "Arbitrum"]] | [["Testnet", "Arbitrum"]] | [["Mainnet", "Aurora"]] | [["Testnet", "Aurora"]] | [["Mainnet", "Avalanche"]] | [["Testnet", "Avalanche"]] | [["Mainnet", "Base"]] | [["Testnet", "Base"]] | [["Mainnet", "Bsc"]] | [["Testnet", "Bsc"]] | [["Mainnet", "Celo"]] | [["Testnet", "Celo"]] | [["Testnet", "Ethereum"]] | [["Mainnet", "Fantom"]] | [["Testnet", "Fantom"]] | [["Mainnet", "Gnosis"]] | [["Testnet", "Gnosis"]] | [["Mainnet", "Karura"]] | [["Testnet", "Karura"]] | [["Mainnet", "Klaytn"]] | [["Testnet", "Klaytn"]] | [["Mainnet", "Moonbeam"]] | [["Testnet", "Moonbeam"]] | [["Mainnet", "Neon"]] | [["Testnet", "Neon"]] | [["Mainnet", "Oasis"]] | [["Testnet", "Oasis"]] | [["Mainnet", "Optimism"]] | [["Testnet", "Optimism"]] | [["Mainnet", "Polygon"]] | [["Testnet", "Polygon"]] | [["Mainnet", "Rootstock"]] | [["Testnet", "Rootstock"]] | [["Testnet", "Sepolia"]] | [["Testnet", "ArbitrumSepolia"]] | [["Testnet", "BaseSepolia"]] | [["Testnet", "OptimismSepolia"]] | [["Testnet", "Holesky"]] | [["Mainnet", "Neutron"]] | [["Testnet", "Neutron"]] | [["Mainnet", "Stargaze"]] | [["Mainnet", "Celestia"]] | [["Testnet", "Celestia"]] | [["Mainnet", "Dymension"]] | undefined;
    has: (args_0: string | bigint) => boolean;
};
type NetworkChainToNativeChainId = ToMapping<typeof chainNetworkNativeChainIdEntries>;
export type PlatformToNativeChainIds<P extends Platform> = PlatformToChains<P> extends infer C ? C extends keyof NetworkChainToNativeChainId ? NetworkChainToNativeChainId[C][keyof NetworkChainToNativeChainId[C]] : never : never;
export type PlatformNativeChainIdToNetworkChainPair<P extends Platform, CI extends PlatformToNativeChainIds<P>> = PlatformToChains<P> extends infer C ? ReturnType<typeof nativeChainIdToNetworkChain<CI>>[number] extends infer NCP ? NCP extends readonly [Network, C] ? NCP : never : never : never;
export declare function platformNativeChainIdToNetworkChain<P extends Platform, CI extends PlatformToNativeChainIds<P>>(platform: P, chainId: Widen<CI>): PlatformNativeChainIdToNetworkChainPair<P, CI>;
export {};
//# sourceMappingURL=nativeChainIds.d.ts.map