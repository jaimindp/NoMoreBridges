import { Network } from "@wormhole-foundation/sdk-base";
import { Signer } from "@wormhole-foundation/sdk-definitions";
import { TransferReceipt } from "../../wormholeTransfer";
import { AutomaticRoute, ValidationResult } from "../route";
export declare namespace AutomaticTokenBridgeRoute {
  type Options = {
    nativeGasDropoff?: bigint;
  };
}
export declare class AutomaticTokenBridgeRoute<N extends Network> extends AutomaticRoute<
  N,
  AutomaticTokenBridgeRoute.Options
> {
  NATIVE_GAS_DROPOFF_SUPPORTED: boolean;
  isSupported(): Promise<boolean>;
  isAvailable(): Promise<boolean>;
  getDefaultOptions(): AutomaticTokenBridgeRoute.Options;
  validate(options: AutomaticTokenBridgeRoute.Options): Promise<ValidationResult<Error>>;
  initiate(
    signer: Signer,
    options: AutomaticTokenBridgeRoute.Options,
  ): Promise<TransferReceipt<"AutomaticTokenBridge">>;
  track(
    receipt: TransferReceipt<"AutomaticTokenBridge">,
  ): AsyncGenerator<TransferReceipt<"AutomaticTokenBridge">>;
  private toTransferDetails;
}
//# sourceMappingURL=automaticTokenBridgeRoute.d.ts.map
