import { Chain, Network, TokenId } from "@wormhole-foundation/connect-sdk";
import { PorticoContractAddresses } from "./consts";
import { CreateOrderRequest, CreateOrderResponse, PorticoFlagSet, PorticoPayload, PorticoTradeParameters } from "./types";
export declare const getContracts: (chain: Chain) => PorticoContractAddresses;
export declare const parseAddress: (buffer: Buffer) => string;
export declare const parseInt: (buffer: Buffer) => bigint;
export declare const isEqualCaseInsensitive: (a: string, b: string) => boolean;
export declare const parseTradeParameters: (buffer: Buffer) => PorticoTradeParameters;
export declare const parsePorticoPayload: (buffer: Buffer) => PorticoPayload;
export declare const parseFlagSet: (buffer: Buffer) => PorticoFlagSet;
/**
 * Validates that the response from the order creation API matches the request
 * throws an error if there is a mismatch
 */
export declare const validateCreateOrderResponse: (response: CreateOrderResponse, request: CreateOrderRequest) => void;
export declare const getOriginalEthereumAddress: <N extends "Mainnet" | "Testnet" | "Devnet">(network: N, token: TokenId) => TokenId;
export declare function resolveWrappedToken<N extends Network, C extends Chain>(network: N, chain: C, token: TokenId<C> | "native"): [boolean, TokenId<C>];
//# sourceMappingURL=utils.d.ts.map