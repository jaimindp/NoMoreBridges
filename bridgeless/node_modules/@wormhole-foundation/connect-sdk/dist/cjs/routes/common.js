"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkAndCompleteTransfer = void 0;
const route_1 = require("./route");
const types_1 = require("../types");
/**
 * track the transfer until the destination is initiated
 *
 * @param route The route that can be used to track the receipt
 * @param receipt The receipt to track
 * @param destinationSigner The signer for the destination chain if
 */
async function checkAndCompleteTransfer(route, receipt, destinationSigner, timeout = 120 * 1000, 
// byo logger but im dumping to console rn ðŸ™ƒ
log = console.log) {
    const start = Date.now();
    log("Checking transfer state...");
    // overwrite receipt var as we receive updates, will return when it's complete
    // but can be called again if the destination is not finalized
    // this construct is to drain an async generator and return the last value
    for await (receipt of route.track(receipt, 120 * 1000)) {
        log("Current Transfer State: ", types_1.TransferState[receipt.state]);
    }
    // gucci
    if ((0, types_1.isCompleted)(receipt))
        return receipt;
    // if the route is one we need to complete, do it
    if ((0, route_1.isManual)(route) && (0, types_1.isAttested)(receipt) && destinationSigner) {
        const completedTxids = await route.complete(destinationSigner, receipt);
        log("Completed transfer with txids: ", completedTxids);
        // Note: do not return receipt yet, there may be further steps to track, this only completes the bridge transfer
    }
    const leftover = timeout - (Date.now() - start);
    // do we still have time?
    if (leftover > 0) {
        // give it a second, computers need to rest sometimes
        const wait = 2 * 1000;
        log(`Transfer not complete, trying again in a ${wait}ms...`);
        await Promise.resolve(setTimeout(() => { }, wait));
        return checkAndCompleteTransfer(route, receipt, destinationSigner, leftover);
    }
    return receipt;
}
exports.checkAndCompleteTransfer = checkAndCompleteTransfer;
//# sourceMappingURL=common.js.map