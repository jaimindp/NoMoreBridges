"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isCircleTransferDetails = exports.AutomaticCircleBridge = exports.CircleBridge = void 0;
const sdk_base_1 = require("@wormhole-foundation/sdk-base");
require("../payloads/automaticCircleBridge");
const circleBridge_1 = require("../payloads/circleBridge");
const utils_1 = require("../utils");
const vaa_1 = require("../vaa");
var CircleBridge;
(function (CircleBridge) {
    const _protocol = "CircleBridge";
    const _payloads = ["Message"];
    CircleBridge.isCircleAttestation = (thing) => {
        return thing.message !== undefined;
    };
    CircleBridge.deserialize = (data) => {
        const msg = (0, sdk_base_1.deserializeLayout)(circleBridge_1.circleMessageLayout, data);
        const messsageHash = sdk_base_1.encoding.hex.encode((0, utils_1.keccak256)(data), true);
        return [msg, messsageHash];
    };
    CircleBridge.serialize = (msg) => {
        return (0, sdk_base_1.serializeLayout)(circleBridge_1.circleMessageLayout, msg);
    };
})(CircleBridge || (exports.CircleBridge = CircleBridge = {}));
var AutomaticCircleBridge;
(function (AutomaticCircleBridge) {
    const _protocol = "AutomaticCircleBridge";
    const _payloads = ["DepositWithPayload", "TransferWithRelay"];
    AutomaticCircleBridge.getTransferDiscriminator = (0, sdk_base_1.lazyInstantiate)(() => (0, vaa_1.payloadDiscriminator)([_protocol, _payloads]));
})(AutomaticCircleBridge || (exports.AutomaticCircleBridge = AutomaticCircleBridge = {}));
function isCircleTransferDetails(thing) {
    return (thing.amount !== undefined &&
        thing.from !== undefined &&
        thing.to !== undefined);
}
exports.isCircleTransferDetails = isCircleTransferDetails;
//# sourceMappingURL=circleBridge.js.map