"use strict";
//For whatever reason if we put this in the same file as the other functions, tsc runs out of
//  memory. For some extra lulz, try turning createVAA into an arrow function (spoiler: also
//  causes out of memory fireworks)
Object.defineProperty(exports, "__esModule", { value: true });
exports.createVAA = void 0;
const sdk_base_1 = require("@wormhole-foundation/sdk-base");
const utils_1 = require("../utils");
const vaa_1 = require("./vaa");
const functions_1 = require("./functions");
function bodyLayout(payloadLiteral) {
    return [
        ...vaa_1.envelopeLayout,
        (0, functions_1.payloadLiteralToPayloadItemLayout)(payloadLiteral),
    ];
}
function createVAA(payloadLiteral, vaaData) {
    const [protocolName, payloadName] = (0, vaa_1.decomposeLiteral)(payloadLiteral);
    const bodyWithFixed = (0, sdk_base_1.addFixedValues)(bodyLayout(payloadLiteral), vaaData);
    return {
        protocolName,
        payloadName,
        payloadLiteral,
        ...(0, sdk_base_1.addFixedValues)(vaa_1.headerLayout, vaaData),
        ...bodyWithFixed,
        hash: (0, utils_1.keccak256)((0, sdk_base_1.serializeLayout)(bodyLayout(payloadLiteral), bodyWithFixed)),
    };
}
exports.createVAA = createVAA;
//# sourceMappingURL=create.js.map