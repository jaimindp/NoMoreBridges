import { customizableBytes, } from "@wormhole-foundation/sdk-base";
import { chainItem, amountItem } from "../layout-items";
import { registerPayloadTypes } from "../vaa";
const bamAddressItem = {
    binary: "bytes",
    lengthSize: 2,
};
const customOrEmpty = (custom) => (custom ? { custom } : {});
export const messageLayout = (type, customContents) => [
    { name: "magicByte", binary: "uint", size: 1, custom: 0xbb, omit: true },
    { name: "version", binary: "uint", size: 1, custom: 0, omit: true },
    { name: "type", binary: "uint", size: 1, custom: type, omit: true },
    { name: "index", binary: "uint", size: 8 },
    { name: "targetChain", ...chainItem() },
    { name: "targetAddress", ...bamAddressItem },
    { name: "senderAddress", ...bamAddressItem },
    customizableBytes({ name: "contents", lengthSize: 2 }, customContents),
];
export const tokenMessageLayout = (custom) => [
    ...messageLayout(1, custom?.contents),
    { name: "bridge", binary: "uint", size: 1, ...customOrEmpty(custom?.bridge) },
    { name: "assetIdentifier", binary: "uint", size: 2, ...customOrEmpty(custom?.assetIdentifier) },
    { name: "amount", ...amountItem },
];
export const extendedMessageLayout = (custom) => [
    ...messageLayout(2, custom?.contents),
    customizableBytes({ name: "relaySignal", lengthSize: 2 }, custom?.relaySignal),
];
export const namedPayloads = [
    ["Message", messageLayout(0)],
    ["TokenMessage", tokenMessageLayout()],
    ["ExtendedMessage", extendedMessageLayout()],
];
registerPayloadTypes("BAM", namedPayloads);
//# sourceMappingURL=bam.js.map