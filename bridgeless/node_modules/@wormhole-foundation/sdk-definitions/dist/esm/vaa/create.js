//For whatever reason if we put this in the same file as the other functions, tsc runs out of
//  memory. For some extra lulz, try turning createVAA into an arrow function (spoiler: also
//  causes out of memory fireworks)
import { addFixedValues, serializeLayout, } from "@wormhole-foundation/sdk-base";
import { keccak256 } from "../utils";
import { decomposeLiteral, headerLayout, envelopeLayout } from "./vaa";
import { payloadLiteralToPayloadItemLayout } from "./functions";
function bodyLayout(payloadLiteral) {
    return [
        ...envelopeLayout,
        payloadLiteralToPayloadItemLayout(payloadLiteral),
    ];
}
export function createVAA(payloadLiteral, vaaData) {
    const [protocolName, payloadName] = decomposeLiteral(payloadLiteral);
    const bodyWithFixed = addFixedValues(bodyLayout(payloadLiteral), vaaData);
    return {
        protocolName,
        payloadName,
        payloadLiteral,
        ...addFixedValues(headerLayout, vaaData),
        ...bodyWithFixed,
        hash: keccak256(serializeLayout(bodyLayout(payloadLiteral), bodyWithFixed)),
    };
}
//# sourceMappingURL=create.js.map